(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    633389,      11775]
NotebookOptionsPosition[    628991,      11624]
NotebookOutlinePosition[    629378,      11641]
CellTagsIndexPosition[    629335,      11638]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Single infection with trophical transmission", "Title",
 CellChangeTimes->{{3.825668663761571*^9, 3.8256686880677233`*^9}, 
   3.826272929194303*^9, {3.827819505375657*^9, 3.827819511550613*^9}}],

Cell[CellGroupData[{

Cell["Ecological dynamics of a resident", "Chapter",
 CellChangeTimes->{{3.825769393130102*^9, 3.825769403189344*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIsdt", " ", "=", " ", 
    RowBox[{
     RowBox[{"R", "[", 
      RowBox[{"Iw", ",", " ", "Is"}], "]"}], "-", " ", 
     RowBox[{"d", " ", "Is"}], "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "Is"}], "  ", "-", " ", 
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "intermediate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Iw"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], 
      "Iw"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDsdt", " ", "=", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
     "  ", "-", " ", 
     RowBox[{"\[Mu]", " ", "Ds"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}]}]}], ";"}], 
  "  ", 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "definitive"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDwdt", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}], "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], " ", "Dw"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "definitive"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dWdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fw", " ", "Dw"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "W"}], " ", "-", " ", 
    RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825656713077812*^9, 3.825656819315256*^9}, {
   3.8256675673352013`*^9, 3.825667571392377*^9}, {3.8256676047331753`*^9, 
   3.8256679949825287`*^9}, 3.825668657319312*^9, {3.825669024736739*^9, 
   3.825669107703614*^9}, {3.825669201205226*^9, 3.825669201481333*^9}, {
   3.825669256379244*^9, 3.82566950377395*^9}, {3.825669536259808*^9, 
   3.8256696344884987`*^9}, {3.8256696689148417`*^9, 3.825670143310657*^9}, {
   3.825670345459824*^9, 3.825670438958109*^9}, {3.825670488620307*^9, 
   3.825670543829121*^9}, {3.825670663648823*^9, 3.825670761696919*^9}, {
   3.825671013629569*^9, 3.825671139741517*^9}, {3.825742172557213*^9, 
   3.8257421729950933`*^9}, {3.825742207420051*^9, 3.8257422478914013`*^9}, {
   3.82574345173761*^9, 3.82574350922976*^9}, {3.825760175997797*^9, 
   3.82576018688303*^9}, {3.8257606621022377`*^9, 3.825760675998103*^9}, 
   3.8257607945724363`*^9, {3.825760904709169*^9, 3.82576091270079*^9}, {
   3.8257617801084433`*^9, 3.8257617912632027`*^9}, {3.8257621523527527`*^9, 
   3.825762165308137*^9}, {3.825762201784202*^9, 3.825762208487948*^9}, {
   3.825762251027261*^9, 3.825762354682111*^9}, 3.8257625163120213`*^9, {
   3.825762659025866*^9, 3.825762659901341*^9}, {3.825762902484415*^9, 
   3.825762910346539*^9}, {3.8257634961592484`*^9, 3.825763496692479*^9}, {
   3.825766757419752*^9, 3.825766767356141*^9}, {3.825766833920692*^9, 
   3.825766853096877*^9}, {3.825766897662359*^9, 3.8257668980739517`*^9}, {
   3.8257682274738283`*^9, 3.825768355004142*^9}, {3.825996664752124*^9, 
   3.825996692179337*^9}, {3.82626863451892*^9, 3.826268767236582*^9}, {
   3.8262689370700693`*^9, 3.826268937767343*^9}, {3.826268980930978*^9, 
   3.8262689879990473`*^9}, {3.82626904542638*^9, 3.826269047123454*^9}, {
   3.826271241094585*^9, 3.82627124404462*^9}, {3.827819518344512*^9, 
   3.827819536797364*^9}, {3.8278209102469873`*^9, 3.8278212216057177`*^9}, {
   3.827821911512141*^9, 3.827821969572859*^9}, {3.8278221978352613`*^9, 
   3.8278222272418337`*^9}, {3.827822510921095*^9, 3.827822511765992*^9}, {
   3.827823318435688*^9, 3.827823330286881*^9}, {3.827823839514995*^9, 
   3.8278238647577143`*^9}, {3.8280753879957237`*^9, 3.82807539054478*^9}, {
   3.82807610064509*^9, 3.828076102177025*^9}, {3.8280786078866158`*^9, 
   3.82807862016877*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"func0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827822459562306*^9, 3.827822484038743*^9}, {
   3.82930004587323*^9, 3.829300078603044*^9}, 3.829300337544739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"func1", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829288616107027*^9, 3.8292886259950533`*^9}, {
  3.829289279204534*^9, 3.829289283627792*^9}, {3.82928933576853*^9, 
  3.829289352141361*^9}, {3.8292897198397703`*^9, 3.8292897211117163`*^9}, {
  3.829300310231729*^9, 3.829300322388371*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw", ",", " ", "W"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIsdt", ",", " ", "dIwdt", ",", " ", "dDsdt", ",", " ", "dDwdt", ",", 
     " ", "dWdt"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8278235561211777`*^9, 3.8278235895996933`*^9}, {
  3.827823939807645*^9, 3.827823944103592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func0"}], "/.", 
     RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.82782571391743*^9, {3.828076226269494*^9, 3.8280762269740458`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], "\[Rho]"]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.827825716047372*^9, 3.8280754028129396`*^9, 3.828076111650443*^9, 
   3.828076227621562*^9, 3.828076300563541*^9, 3.828078712930681*^9, 
   3.828086164640039*^9, 3.8292880769844103`*^9, {3.829300326235674*^9, 
   3.82930034116356*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0Func1", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func1"}], "/.", 
      RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}],
     "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.829289374739566*^9, 3.829289377514204*^9}, {
  3.829289628424356*^9, 3.829289632462536*^9}, {3.829290198591793*^9, 
  3.829290200130179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"\[CapitalKappa]", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[CapitalKappa]"}], "r"]}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Mu]"}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", " ",
          "\[Rho]"}]}], 
       RowBox[{"c", " ", "\[CapitalKappa]", " ", 
        SuperscriptBox["\[Rho]", "2"]}]]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.829289379669998*^9, 3.829289633821643*^9, 3.829289727885021*^9, 
   3.829290200649737*^9, {3.8293003277196293`*^9, 3.829300342558381*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability of the equilibrium", "Subchapter",
 CellChangeTimes->{{3.828075643251759*^9, 3.8280756472434187`*^9}}],

Cell[CellGroupData[{

Cell["Linear functions", "Section",
 CellChangeTimes->{{3.82928999027208*^9, 3.82928999320476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", "r", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", "  ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8280756685967827`*^9, 3.8280758314732227`*^9}, {
   3.8280758639554453`*^9, 3.828075892701819*^9}, {3.828075940412252*^9, 
   3.8280759898078003`*^9}, {3.828078724139042*^9, 3.828078752078988*^9}, 
   3.829290027566111*^9, {3.829300130500415*^9, 3.82930016017767*^9}, {
   3.8293002159920588`*^9, 3.82930022248534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.82807600588461*^9, 3.82807600787519*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "+", "r", "-", 
       RowBox[{"W", " ", "\[Gamma]w"}], "-", 
       RowBox[{"\[CapitalPi]0", "[", 
        RowBox[{"Ds", ",", "Dw"}], "]"}]}], "r", "0", "0", "0"},
     {
      RowBox[{"W", " ", "\[Gamma]w"}], 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{"\[CapitalPi]1", "[", 
        RowBox[{"Ds", ",", "Dw", ",", "\[Beta]w"}], "]"}]}], "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", "\[Mu]", "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}], "0"},
     {"0", "0", 
      RowBox[{"Iw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "0", "0", "fw", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.828076008300259*^9, 3.8280761179662313`*^9, 
  3.828078755173183*^9, 3.829300226482354*^9, 3.829300351878982*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", ".", "var"}], " ", "/.", "func0"}], ")"}], "\[Equal]", " ", 
   
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func0"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.828076010664349*^9, 3.828076033593799*^9}, {
  3.829300240583639*^9, 3.829300247307254*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.828076016562026*^9, 3.8280760341117353`*^9}, 
   3.828076120029529*^9, 3.828076306539208*^9, 3.828078757851067*^9, {
   3.8293002276825333`*^9, 3.829300247807722*^9}, 3.82930035279112*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aeigens", " ", "=", " ", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"A", "/.", "func0"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828076310764051*^9, 3.828076351937457*^9}, {
   3.828078760409507*^9, 3.828078764213051*^9}, 3.829300257241005*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076332256621*^9, 3.828076411850637*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Delta]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "+", "r"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", 
   RowBox[{"-", "\[Mu]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828076339826378*^9, 3.828076412505925*^9}, 
   3.8280787697360687`*^9, 3.828086172676084*^9, 3.829288085095286*^9, 
   3.829300269150385*^9, 3.829300355076603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"\[Mu]", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[Rho]", ">", "0"}], ",", " ", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"\[Beta]w", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076438838669*^9, 3.828076629434969*^9}, {
  3.828076660323764*^9, 3.828076692435136*^9}, {3.829300361942924*^9, 
  3.829300364001012*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"r", " ", "\[Beta]w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
        RowBox[{"r", " ", "\[Beta]w"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], "]"}]}], 
     RowBox[{"2", " ", "\[Rho]"}]]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{"d", " ", "\[Beta]w"}], "-", 
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], "\[Rho]"], 
          RowBox[{
           RowBox[{"d", " ", "\[Beta]w"}], ">", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.828076443588296*^9, 3.828076448866023*^9}, {
   3.828076491595972*^9, 3.828076509364583*^9}, {3.8280765436147547`*^9, 
   3.828076629902029*^9}, 3.828076660810093*^9, 3.828076692932027*^9, 
   3.828078772766087*^9, 3.828086177404166*^9, 3.829288089287722*^9, 
   3.829300275948649*^9, {3.8293003581064453`*^9, 3.829300366801404*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic growth intermediate hosts", "Section",
 CellChangeTimes->{{3.8292900059177437`*^9, 3.82929001400443*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], 
          ")"}]}], " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "-", "  ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", 
       RowBox[{"r", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}]}],
        ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.829290041468392*^9, 3.829290083293619*^9}, 
   3.8292901573628817`*^9, {3.829300399906165*^9, 3.829300442929491*^9}, {
   3.829300483360271*^9, 3.829300508729198*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AFunc1", "/.", "func1"}], ")"}], ".", "var"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func1"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.829290095052435*^9, 3.829290098954587*^9}, {
  3.829300515668148*^9, 3.829300521210037*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.829290099646719*^9, 3.829290159160308*^9, 
  3.829300521645545*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AeigensFunc1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"AFunc1", "/.", "func1"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8292901719851007`*^9, 3.8292901810399313`*^9}, {
   3.82929074163208*^9, 3.829290752355545*^9}, 3.8293005303519163`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
         "\[Sigma]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
         "\[Sigma]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292907421726227`*^9, 3.829290763056777*^9}, 
   3.8292919693355*^9, 3.829300538962901*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
         "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.829290252923359*^9, 3.829290287663924*^9}, {
  3.8292910415729322`*^9, 3.829291069670826*^9}, {3.829291112620542*^9, 
  3.829291130398438*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "r"}], ")"}], " ", "\[Gamma]w", " ", 
      "\[CapitalKappa]"}], "r"]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"c", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"d", "-", "r"}], ")"}], " ", "\[CapitalKappa]"}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]"}], ")"}]}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"c", " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
        "+", 
        RowBox[{"r", " ", "\[Sigma]"}]}], "]"}]}], 
     RowBox[{"2", " ", "r"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"c", " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], "-", 
     
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]"}], ")"}]}], "+", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"c", " ", "p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
       "+", 
       RowBox[{"r", " ", "\[Sigma]"}]}], "]"}]}], 
    RowBox[{"2", " ", "r"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.829290258431539*^9, 3.829290289447657*^9}, {
  3.829291042355114*^9, 3.8292910703968067`*^9}, {3.82929111571244*^9, 
  3.8292911317045403`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", "  ", 
      RowBox[{"c", ">", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Mu]", "+", "\[Sigma]"}], ">", "0"}], ",", " ", 
      RowBox[{"p", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829291289871559*^9, 3.829291290239362*^9}, {
  3.8292916950073843`*^9, 3.829291720881555*^9}, {3.829291758744101*^9, 
  3.8292917610597973`*^9}, {3.829291796461124*^9, 3.829291823491487*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "p"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"c", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}],
        " ", "\[CapitalKappa]"}], "-", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}], "+", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], 
            ")"}], " ", "\[CapitalKappa]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        "2"]]}], 
     RowBox[{"2", " ", "c", " ", 
      SuperscriptBox["p", "2"], " ", "\[CapitalKappa]"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}], 
      " ", "\[CapitalKappa]"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}], "+", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], 
           ")"}], " ", "\[CapitalKappa]"}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
       "2"]]}], 
    RowBox[{"2", " ", "c", " ", 
     SuperscriptBox["p", "2"], " ", "\[CapitalKappa]"}]], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8292913245970497`*^9, 3.829291725907846*^9, 3.8292917660872*^9, {
   3.8292918006740217`*^9, 3.829291828360304*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeSystem", "[", 
    RowBox[{"var_", ",", " ", "vart_", ",", " ", "sys_"}], "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"syst", " ", "=", " ", 
      RowBox[{"sys", "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"var", "\[Rule]", " ", "vart"}], "]"}]}]}], ";", " ", 
     RowBox[{"sysfull", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"vart", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", 
        "syst"}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278227166917267`*^9, 3.827822753230462*^9}, {
   3.827822922653831*^9, 3.827822930881901*^9}, {3.827822982773337*^9, 
   3.827823037108107*^9}, 3.827823101237512*^9, 3.82782326171789*^9, 
   3.8278233565488863`*^9, {3.829292626735865*^9, 3.829292643598576*^9}, {
   3.829292689348095*^9, 3.8292926898161993`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.827821229838979*^9, 3.827821235402285*^9}, {
  3.827822320596498*^9, 3.827822326849743*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysFunc0", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func0"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysFunc1", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func1"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827822569148403*^9, 3.827822704174527*^9}, {
   3.82782318211902*^9, 3.827823191092559*^9}, {3.827823394132936*^9, 
   3.827823503736817*^9}, {3.827823561478395*^9, 3.8278236008621883`*^9}, 
   3.827823822161427*^9, 3.8278239657774*^9, {3.829289669271122*^9, 
   3.829289678688631*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEco", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.7"}], ",", " ", 
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.9"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278223341819477`*^9, 3.827822444366211*^9}, {
   3.827822502232439*^9, 3.8278225649661427`*^9}, {3.827825386494244*^9, 
   3.827825410863459*^9}, {3.827825453929977*^9, 3.827825454403831*^9}, {
   3.827825522729954*^9, 3.827825550524976*^9}, 3.8278256021678753`*^9, {
   3.827825650036694*^9, 3.827825650806609*^9}, {3.8280740126142387`*^9, 
   3.828074014681838*^9}, {3.828074290887507*^9, 3.828074291596635*^9}, {
   3.82807437954491*^9, 3.828074379943386*^9}, {3.828074423685811*^9, 
   3.8280744257790956`*^9}, {3.8280744969747133`*^9, 3.828074497466743*^9}, {
   3.828074529108124*^9, 3.828074551945829*^9}, {3.828074599895774*^9, 
   3.828074621473525*^9}, {3.82807468419691*^9, 3.828074700019969*^9}, {
   3.8280747397753277`*^9, 3.8280747404372063`*^9}, {3.8280866177014112`*^9, 
   3.828086617870452*^9}, {3.8280867505244417`*^9, 3.828086751093014*^9}, {
   3.829288379414507*^9, 3.829288379901534*^9}, {3.829288433156987*^9, 
   3.829288433462543*^9}, 3.829288506903331*^9, {3.829289683788238*^9, 
   3.8292897118374643`*^9}, {3.829290329283586*^9, 3.829290329519761*^9}, 
   3.829290393474928*^9, 3.829290916726027*^9, {3.829290975953576*^9, 
   3.8292909848376493`*^9}, {3.829297048005028*^9, 3.8292970485160303`*^9}, {
   3.829300549003931*^9, 3.829300556258101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc0", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "30"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sys", "/.", "func0"}], "/.", "prEco"}], ")"}], " ", 
      "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func0", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc0", "/.", "prEco"}], ",", " ", "initFunc0"}], "]"}], 
    ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.827822957647459*^9, 3.827822969409224*^9}, {
   3.827823644111948*^9, 3.827823657623238*^9}, 3.827823709992982*^9, {
   3.827823999487968*^9, 3.827824025530137*^9}, {3.8278240605321407`*^9, 
   3.827824067947177*^9}, {3.828074564712682*^9, 3.8280745652597237`*^9}, {
   3.8280747017880707`*^9, 3.828074702577971*^9}, {3.828074773328237*^9, 
   3.828074774978272*^9}, {3.828074964773364*^9, 3.828074977832465*^9}, {
   3.828086197642436*^9, 3.8280862131636887`*^9}, {3.829289817759626*^9, 
   3.829289821771514*^9}, {3.8292924292035313`*^9, 3.829292435207684*^9}, {
   3.829296644229384*^9, 3.829296671808436*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.6301745014643625`, 0.00006865565593020035}, {
                    1.6301768919855668`, 0.00005399497709444621}, {
                    1.8582620029968773`, 0.00006865565593020035}}], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAE2eleXllKUAlCAgwZ/8RP1ojne3E
JitA7LHElQ+/DT+cUT88AGcuQOejISuxfQU/s/bLKrj2MEDYAMB6pDj+PtyH
Euv0mzJAKMLctdG+9T4fWN5E6Dg0QHlec9QGfu8+JV8FBPb4NUD83roCwzXm
Pm+pxnYImzdABs+ynjoG4D59KuNONWA5QCnfLVBCftY+pOqEwBgdO0ALSdFj
DsfPPg/uwOUAvDxA2z2dONz3xj4+KFhwA34+QE81+UEjJcA+2NJEVwURQEBM
YaIgNk63PvMsCymW9EBAu63ROupnsD6aJpRHAtRBQHIg6eFBJKc+5EHqv3Ck
QkCzkZEG7bSgPo/47WpshkNAa4SYffRAlz7c0L5vallEQFK8+lFFcJA+tkhS
wUMoRUDDnqApPVaHPvJbk0WqCEZAJrnGTyF/gD7QkKEjE9pGQDmuibuNWHg+
EGFdNAm9R0CGEKj+ob5xPtzQ25Ham0hANXQLce2lbD5KYidJrmtJQEyLtAJS
6mU+Go8gMw9NSkCPOcctcB1iPozd5nZyH0tARNEiVLMBXD6Ly28Hse1LQHcz
NyJKbFY+7FSmynzNTEAgMcUrdhVRPu//qedKnk1AEjeO3FiUST5URls3poBO
QFaFWg18vEM+W67Z4ANUT0AlR6wolZQ+PvhajWueEVBA2tVuOSrjNT5zrASA
AYJQQOR502Wadi0+v45iweXqUEBalSyOijckPrs+F5yQXFFArGRI2BwpGz5+
Pi0dKcxRQBam5J4IAA4+Es8py0I0UkBzGbJYKmD6PVctfRIjpVJATeQGVG7J
6z1tHLeGhA5TQKiBhblv8eQ9SVtSodN1U0AsbNV99yXhPdZnRFXp5VNAihKS
9jAg3j00BR02gE5UQIaluYrBvds9Q3BMsN2/VECUvMsqvjTYPRgr3dAoL1VA
duW+mzj70T2+dlQe9ZZVQCknZer8Mss9FZAiBYgHVkCYVYvR6kzFPT061xic
cFZAmuz7c+o7wT0WsuLFduJWQMCMxgpfa7g9tXlPGT9SV0BoJbI5szyqPSbS
opmIuldAW1xWd1Tdnj1H+EyzmCtYQOGk5gCHmZU9Oa/d+SmVWEB/fkyosc6Q
PT4Z5Pj//1hAjBSW7/aReT36f3xZ
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.00006865565593020035}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.6301745014643625`, 0.00006865565593020035}, {
                    1.6301768919855668`, 0.00005399497709444621}, {
                    1.8582620029968773`, 0.00006865565593020035}}], 
                    LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAAE2eleXllKUAlCAgwZ/8RP1ojne3E
JitA7LHElQ+/DT+cUT88AGcuQOejISuxfQU/s/bLKrj2MEDYAMB6pDj+PtyH
Euv0mzJAKMLctdG+9T4fWN5E6Dg0QHlec9QGfu8+JV8FBPb4NUD83roCwzXm
Pm+pxnYImzdABs+ynjoG4D59KuNONWA5QCnfLVBCftY+pOqEwBgdO0ALSdFj
DsfPPg/uwOUAvDxA2z2dONz3xj4+KFhwA34+QE81+UEjJcA+2NJEVwURQEBM
YaIgNk63PvMsCymW9EBAu63ROupnsD6aJpRHAtRBQHIg6eFBJKc+5EHqv3Ck
QkCzkZEG7bSgPo/47WpshkNAa4SYffRAlz7c0L5vallEQFK8+lFFcJA+tkhS
wUMoRUDDnqApPVaHPvJbk0WqCEZAJrnGTyF/gD7QkKEjE9pGQDmuibuNWHg+
EGFdNAm9R0CGEKj+ob5xPtzQ25Ham0hANXQLce2lbD5KYidJrmtJQEyLtAJS
6mU+Go8gMw9NSkCPOcctcB1iPozd5nZyH0tARNEiVLMBXD6Ly28Hse1LQHcz
NyJKbFY+7FSmynzNTEAgMcUrdhVRPu//qedKnk1AEjeO3FiUST5URls3poBO
QFaFWg18vEM+W67Z4ANUT0AlR6wolZQ+PvhajWueEVBA2tVuOSrjNT5zrASA
AYJQQOR502Wadi0+v45iweXqUEBalSyOijckPrs+F5yQXFFArGRI2BwpGz5+
Pi0dKcxRQBam5J4IAA4+Es8py0I0UkBzGbJYKmD6PVctfRIjpVJATeQGVG7J
6z1tHLeGhA5TQKiBhblv8eQ9SVtSodN1U0AsbNV99yXhPdZnRFXp5VNAihKS
9jAg3j00BR02gE5UQIaluYrBvds9Q3BMsN2/VECUvMsqvjTYPRgr3dAoL1VA
duW+mzj70T2+dlQe9ZZVQCknZer8Mss9FZAiBYgHVkCYVYvR6kzFPT061xic
cFZAmuz7c+o7wT0WsuLFduJWQMCMxgpfa7g9tXlPGT9SV0BoJbI5szyqPSbS
opmIuldAW1xWd1Tdnj1H+EyzmCtYQOGk5gCHmZU9Oa/d+SmVWEB/fkyosc6Q
PT4Z5Pj//1hAjBSW7/aReT36f3xZ
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.00006865565593020035}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{14.492461323071016`, 
                    4.5065121552553005`*^-11}, {15.20117367051062, 
                    1.0535285054516843`*^-11}, {
                    15.617853895243893`, -2.7041953179155156`*^-11}}], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAARsahLmlmMkCTkowVoru9vdyHEuv0
mzJAmCXLAsWYpL0fWN5E6Dg0QB27lpYI4XC9JV8FBPb4NUAs9fas502FPW+p
xnYImzdAkpmutv7ntT19KuNONWA5QA76j5LwmMI9pOqEwBgdO0AgJ7yE5byC
PQ/uwOUAvDxA3snJGnEvTj0+KFhwA34+QI/a3IC/rHY92NJEVwURQECAqTEQ
i6R5PfMsCymW9EBAItwvi0p8k72aJpRHAtRBQHaBJP1l3HU95EHqv3CkQkDw
ZzGFoFY+vY/47WpshkNA/jwTCxrQST3c0L5vallEQFiUP1JQn0A9tkhSwUMo
RUBITnwFNaEePfJbk0WqCEZAGk7kk0heNb3QkKEjE9pGQCO5sUVEC0W9EGFd
NAm9R0BAEiLQLr0WvdzQ25Ham0hAL9fSUKT0Nb1KYidJrmtJQKw8vEIUdOW8
Go8gMw9NSkC4uLulJlf5PIzd5nZyH0tACOji70R2yjyLy28Hse1LQBZK3rnO
cgM97FSmynzNTECCpC7Sw+XpPO//qedKnk1AkNsGeFTWojxURls3poBOQBjV
KdVJq/g8W67Z4ANUT0DqyUTyeHn1PPhajWueEVBAiIl/lUMR3LxzrASAAYJQ
QKyxVvtZldi8v45iweXqUEC2yCgAOm/APLs+F5yQXFFAaKZ/Ccrto7x+Pi0d
KcxRQNtfBhKuu7+8Es8py0I0UkAuzywK7SC0vFctfRIjpVJAcX1enIYBY7xt
HLeGhA5TQBz4NpUiiqE8SVtSodN1U0DrdSXiY5qlPNZnRFXp5VNAD7ZJPa4L
oDw0BR02gE5UQIq2/PmGpow8Q3BMsN2/VED8f2jz4C0xvBgr3dAoL1VAQMFZ
iVlIJTy+dlQe9ZZVQDjPiqA8GWE8FZAiBYgHVkApaoNhzFFmPD061xiccFZA
DkJUwhdzZjwWsuLFduJWQKtumWK4oGg8tXlPGT9SV0CLIdlsKRRuPCbSopmI
uldAZPB77YonbTxH+EyzmCtYQKY4+e1D82c8Oa/d+SmVWEBm7KzLQfJhPD4Z
5Pj//1hAyvSAeOoKWzx213KY
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    100.}, {-2.7041953179155156`*^-11, 
                    4.5065121552553005`*^-11}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{14.492461323071016`, 
                    4.5065121552553005`*^-11}, {15.20117367051062, 
                    1.0535285054516843`*^-11}, {
                    15.617853895243893`, -2.7041953179155156`*^-11}}], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAARsahLmlmMkCTkowVoru9vdyHEuv0
mzJAmCXLAsWYpL0fWN5E6Dg0QB27lpYI4XC9JV8FBPb4NUAs9fas502FPW+p
xnYImzdAkpmutv7ntT19KuNONWA5QA76j5LwmMI9pOqEwBgdO0AgJ7yE5byC
PQ/uwOUAvDxA3snJGnEvTj0+KFhwA34+QI/a3IC/rHY92NJEVwURQECAqTEQ
i6R5PfMsCymW9EBAItwvi0p8k72aJpRHAtRBQHaBJP1l3HU95EHqv3CkQkDw
ZzGFoFY+vY/47WpshkNA/jwTCxrQST3c0L5vallEQFiUP1JQn0A9tkhSwUMo
RUBITnwFNaEePfJbk0WqCEZAGk7kk0heNb3QkKEjE9pGQCO5sUVEC0W9EGFd
NAm9R0BAEiLQLr0WvdzQ25Ham0hAL9fSUKT0Nb1KYidJrmtJQKw8vEIUdOW8
Go8gMw9NSkC4uLulJlf5PIzd5nZyH0tACOji70R2yjyLy28Hse1LQBZK3rnO
cgM97FSmynzNTECCpC7Sw+XpPO//qedKnk1AkNsGeFTWojxURls3poBOQBjV
KdVJq/g8W67Z4ANUT0DqyUTyeHn1PPhajWueEVBAiIl/lUMR3LxzrASAAYJQ
QKyxVvtZldi8v45iweXqUEC2yCgAOm/APLs+F5yQXFFAaKZ/Ccrto7x+Pi0d
KcxRQNtfBhKuu7+8Es8py0I0UkAuzywK7SC0vFctfRIjpVJAcX1enIYBY7xt
HLeGhA5TQBz4NpUiiqE8SVtSodN1U0DrdSXiY5qlPNZnRFXp5VNAD7ZJPa4L
oDw0BR02gE5UQIq2/PmGpow8Q3BMsN2/VED8f2jz4C0xvBgr3dAoL1VAQMFZ
iVlIJTy+dlQe9ZZVQDjPiqA8GWE8FZAiBYgHVkApaoNhzFFmPD061xiccFZA
DkJUwhdzZjwWsuLFduJWQKtumWK4oGg8tXlPGT9SV0CLIdlsKRRuPCbSopmI
uldAZPB77YonbTxH+EyzmCtYQKY4+e1D82c8Oa/d+SmVWEBm7KzLQfJhPD4Z
5Pj//1hAyvSAeOoKWzx213KY
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    100.}, {-2.7041953179155156`*^-11, 
                    4.5065121552553005`*^-11}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{15.008980377999695`, 
                    1.4094634927824343`*^-12}, {15.20117367051062, 
                    5.457237537449382*^-13}, {
                    15.289582966192734`, -1.0264266883757738`*^-12}}], 
                    
                    LineBox[{{
                    18.950828138777638`, -1.0264266883757738`*^-12}, {
                    20.222294143946893`, -1.7102070300582648`*^-13}, {
                    21.97250390177864, -1.6235107611623442`*^-14}, {
                    22.385444052687024`, -1.0264266883757738`*^-12}}], 
                    
                    LineBox[{{
                    27.006614718576458`, -1.0264266883757738`*^-12}, {
                    27.113658935976346`, -4.889098532064268*^-13}, {
                    28.73438869438365, -2.6477290114443907`*^-14}, {
                    30.4922399726131, -2.4158785287663585`*^-13}, {
                    31.9275213580232, -1.0264266883757738`*^-12}}], 
                    LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAw4Jp2OZ2QUAx8ORmnQ5yvZomlEcC
1EFAe5daRUmgdT3kQeq/cKRCQOi3UC3fpza9j/jtamyGQ0CtdlJAqGZQPdzQ
vm9qWURAAPo5x7DPQj22SFLBQyhFQOhjE+XoUxo98luTRaoIRkBiuuPRum05
vdCQoSMT2kZA/Ie3mIpwSL0QYV00Cb1HQEA+xd0ZOAq93NDbkdqbSEDaAA41
NM82vUpiJ0mua0lAdffYpkhN6TwajyAzD01KQPxdIjaoYwY9jN3mdnIfS0Dw
AMKyexHSPIvLbwex7UtAcvgccipQAz3sVKbKfM1MQCylk4qt0+Y87/+p50qe
TUDAliG237jIvFRGWzemgE5A2xy7TCB39TxbrtngA1RPQEprPC+ya/M8+FqN
a54RUEBC+25AIRPhvHOsBIABglBAEEOTVOxr3by/jmLB5epQQNdoP2M8FbQ8
uz4XnJBcUUCScF4ZrIqmvH4+LR0pzFFAixECSw6bvbwSzynLQjRSQOpw9LwC
6bK8Vy19EiOlUkBUZV0c434+PG0ct4aEDlNA/NW6qHcKozxJW1Kh03VTQC0+
VuKA8qY81mdEVenlU0BXg5uS9w6hPDQFHTaATlRAPA5Ks+45jzxDcEyw3b9U
QOioJU+b4jI8GCvd0CgvVUDQRIhyDTMyPL52VB71llVAgzMcRH5rYDwVkCIF
iAdWQChsPLAx+mQ8PTrXGJxwVkC0lh7DE+1kPBay4sV24lZAumdWVEC4Zjy1
eU8ZP1JXQM5tLQojgWs8JtKimYi6V0DNNcQh745qPEf4TLOYK1hAaBF/Eoy/
ZTw5r935KZVYQA7Fkc7fOWA8Phnk+P//WEA0vKfOvj9YPEYAI8k=
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    100.}, {-1.0264266883757738`*^-12, 
                    1.4094634927824343`*^-12}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{15.008980377999695`, 
                    1.4094634927824343`*^-12}, {15.20117367051062, 
                    5.457237537449382*^-13}, {
                    15.289582966192734`, -1.0264266883757738`*^-12}}], 
                    
                    LineBox[{{
                    18.950828138777638`, -1.0264266883757738`*^-12}, {
                    20.222294143946893`, -1.7102070300582648`*^-13}, {
                    21.97250390177864, -1.6235107611623442`*^-14}, {
                    22.385444052687024`, -1.0264266883757738`*^-12}}], 
                    
                    LineBox[{{
                    27.006614718576458`, -1.0264266883757738`*^-12}, {
                    27.113658935976346`, -4.889098532064268*^-13}, {
                    28.73438869438365, -2.6477290114443907`*^-14}, {
                    30.4922399726131, -2.4158785287663585`*^-13}, {
                    31.9275213580232, -1.0264266883757738`*^-12}}], 
                    LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAw4Jp2OZ2QUAx8ORmnQ5yvZomlEcC
1EFAe5daRUmgdT3kQeq/cKRCQOi3UC3fpza9j/jtamyGQ0CtdlJAqGZQPdzQ
vm9qWURAAPo5x7DPQj22SFLBQyhFQOhjE+XoUxo98luTRaoIRkBiuuPRum05
vdCQoSMT2kZA/Ie3mIpwSL0QYV00Cb1HQEA+xd0ZOAq93NDbkdqbSEDaAA41
NM82vUpiJ0mua0lAdffYpkhN6TwajyAzD01KQPxdIjaoYwY9jN3mdnIfS0Dw
AMKyexHSPIvLbwex7UtAcvgccipQAz3sVKbKfM1MQCylk4qt0+Y87/+p50qe
TUDAliG237jIvFRGWzemgE5A2xy7TCB39TxbrtngA1RPQEprPC+ya/M8+FqN
a54RUEBC+25AIRPhvHOsBIABglBAEEOTVOxr3by/jmLB5epQQNdoP2M8FbQ8
uz4XnJBcUUCScF4ZrIqmvH4+LR0pzFFAixECSw6bvbwSzynLQjRSQOpw9LwC
6bK8Vy19EiOlUkBUZV0c434+PG0ct4aEDlNA/NW6qHcKozxJW1Kh03VTQC0+
VuKA8qY81mdEVenlU0BXg5uS9w6hPDQFHTaATlRAPA5Ks+45jzxDcEyw3b9U
QOioJU+b4jI8GCvd0CgvVUDQRIhyDTMyPL52VB71llVAgzMcRH5rYDwVkCIF
iAdWQChsPLAx+mQ8PTrXGJxwVkC0lh7DE+1kPBay4sV24lZAumdWVEC4Zjy1
eU8ZP1JXQM5tLQojgWs8JtKimYi6V0DNNcQh745qPEf4TLOYK1hAaBF/Eoy/
ZTw5r935KZVYQA7Fkc7fOWA8Phnk+P//WEA0vKfOvj9YPEYAI8k=
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    100.}, {-1.0264266883757738`*^-12, 
                    1.4094634927824343`*^-12}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{15.009022806629073`, 6.355263908524871*^-12}, {
                    15.20117367051062, 2.4598119693983645`*^-12}, {
                    15.289511430697367`, -4.629280383236129*^-12}}], 
                    
                    LineBox[{{18.95156523120987, -4.629280383236129*^-12}, {
                    20.222294143946893`, -7.717981598874694*^-13}, {
                    21.97250390177864, -7.434568062137072*^-14}, {
                    22.38471833932743, -4.629280383236129*^-12}}], 
                    
                    LineBox[{{27.00692271141762, -4.629280383236129*^-12}, {
                    27.113658935976346`, -2.2083463504048167`*^-12}, {
                    28.73438869438365, -1.1958437870928873`*^-13}, {
                    30.4922399726131, -1.0911381218972248`*^-12}, {
                    31.924733688466194`, -4.629280383236129*^-12}}], 
                    LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAjUtEMfd2QUCmZuY5G1yUvZomlEcC
1EFAm4lthNprmD3kQeq/cKRCQCRI99ZdlVm9j/jtamyGQ0B8cfcuSoVyPdzQ
vm9qWURAdnLPqw8+ZT22SFLBQyhFQIFqIVTruj098luTRaoIRkBgZFb8C7dc
vdCQoSMT2kZAinvQWSCZa70QYV00Cb1HQJiyy4KEmy293NDbkdqbSEDV/LE8
1cFZvUpiJ0mua0lAlnyWbB2TDD0ajyAzD01KQC1kYomRSCk9jN3mdnIfS0BQ
v4B9xmf0PIvLbwex7UtAwJ3icybPJT3sVKbKfM1MQPygSTHVxgk97/+p50qe
TUCYE1nPcOvrvFRGWzemgE5Acs3dqDg9GD1brtngA1RPQAdWLw8x7hU9+FqN
a54RUECP1RX/A0gDvXOsBIABglBA2BglfaScAL2/jmLB5epQQE9fK7agrdY8
uz4XnJBcUUDks3kGYnTJvH4+LR0pzFFAhRfLQj634LwSzynLQjRSQEmo71me
WtW8Vy19EiOlUkA+bBzUrjZhPG0ct4aEDlNAlDJPimCAxTxJW1Kh03VTQFn6
RoKm6ck81mdEVenlU0BOUlSQTEPDPDQFHTaATlRA8wIe43qhsTxDcEyw3b9U
QBD3fpEDU1U8GCvd0CgvVUAoCCMJK41UPL52VB71llVA+azgobyKgjwVkCIF
iAdWQHbE2Mc3sIc8PTrXGJxwVkD91E3nZ6GHPBay4sV24lZA3XLFB+yniTy1
eU8ZP1JXQMBZ8HkbD488JtKimYi6V0Bo4VJrmv2NPEf4TLOYK1hAqs0VjBOP
iDw5r935KZVYQIAoEKG0UoI8Phnk+P//WECQwzLqAmJ7PODcJiU=
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-4.629280383236129*^-12,
                     6.355263908524871*^-12}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{15.009022806629073`, 6.355263908524871*^-12}, {
                    15.20117367051062, 2.4598119693983645`*^-12}, {
                    15.289511430697367`, -4.629280383236129*^-12}}], 
                    
                    LineBox[{{18.95156523120987, -4.629280383236129*^-12}, {
                    20.222294143946893`, -7.717981598874694*^-13}, {
                    21.97250390177864, -7.434568062137072*^-14}, {
                    22.38471833932743, -4.629280383236129*^-12}}], 
                    
                    LineBox[{{27.00692271141762, -4.629280383236129*^-12}, {
                    27.113658935976346`, -2.2083463504048167`*^-12}, {
                    28.73438869438365, -1.1958437870928873`*^-13}, {
                    30.4922399726131, -1.0911381218972248`*^-12}, {
                    31.924733688466194`, -4.629280383236129*^-12}}], 
                    LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAjUtEMfd2QUCmZuY5G1yUvZomlEcC
1EFAm4lthNprmD3kQeq/cKRCQCRI99ZdlVm9j/jtamyGQ0B8cfcuSoVyPdzQ
vm9qWURAdnLPqw8+ZT22SFLBQyhFQIFqIVTruj098luTRaoIRkBgZFb8C7dc
vdCQoSMT2kZAinvQWSCZa70QYV00Cb1HQJiyy4KEmy293NDbkdqbSEDV/LE8
1cFZvUpiJ0mua0lAlnyWbB2TDD0ajyAzD01KQC1kYomRSCk9jN3mdnIfS0BQ
v4B9xmf0PIvLbwex7UtAwJ3icybPJT3sVKbKfM1MQPygSTHVxgk97/+p50qe
TUCYE1nPcOvrvFRGWzemgE5Acs3dqDg9GD1brtngA1RPQAdWLw8x7hU9+FqN
a54RUECP1RX/A0gDvXOsBIABglBA2BglfaScAL2/jmLB5epQQE9fK7agrdY8
uz4XnJBcUUDks3kGYnTJvH4+LR0pzFFAhRfLQj634LwSzynLQjRSQEmo71me
WtW8Vy19EiOlUkA+bBzUrjZhPG0ct4aEDlNAlDJPimCAxTxJW1Kh03VTQFn6
RoKm6ck81mdEVenlU0BOUlSQTEPDPDQFHTaATlRA8wIe43qhsTxDcEyw3b9U
QBD3fpEDU1U8GCvd0CgvVUAoCCMJK41UPL52VB71llVA+azgobyKgjwVkCIF
iAdWQHbE2Mc3sIc8PTrXGJxwVkD91E3nZ6GHPBay4sV24lZA3XLFB+yniTy1
eU8ZP1JXQMBZ8HkbD488JtKimYi6V0Bo4VJrmv2NPEf4TLOYK1hAqs0VjBOP
iDw5r935KZVYQIAoEKG0UoI8Phnk+P//WECQwzLqAmJ7PODcJiU=
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-4.629280383236129*^-12,
                     6.355263908524871*^-12}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{13.635608945132374`, 6.411390620511307*^-9}, {
                    15.20117367051062, 6.336521780874695*^-10}, {
                    15.624605572147022`, -3.856723893679183*^-9}}], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAADKT5PNxTMkAWqaVEg5AwvtyHEuv0
mzJAQhsAAIXBD74fWN5E6Dg0QIoXGlRLCtu9JV8FBPb4NUAASRu5t0vnPW+p
xnYImzdAjCW8lxGLGD59KuNONWA5QITc0jfULSw+pOqEwBgdO0D/RIDF5Zzk
PQ/uwOUAvDxAFKWPw6ujm70+KFhwA34+QNmeFqgj6r+92NJEVwURQEDg760N
UC7/PfMsCymW9EBAzl2MpJzkKD6aJpRHAtRBQLcHBeSU9RO+5EHqv3CkQkBQ
vXJdD4XFPY/47WpshkNAhR6RUpAV6r3c0L5vallEQGdo1cTtKty9tkhSwUMo
RUBsPZrTMLKwvfJbk0WqCEZAcTtsPj5D0z3QkKEjE9pGQGLVcxkmXOI9EGFd
NAm9R0DYG437n7OWPdzQ25Ham0hA+lU1Xi870D1KYidJrmtJQCmXVa4xIZG9
Go8gMw9NSkCyt0b31UWjvYzd5nZyH0tAkKGTNjPfbL2Ly28Hse1LQKdcxlgo
35q97FSmynzNTEB1x7RagOR9ve//qedKnk1AoMZAHeyiaz1URls3poBOQFpk
WOQjxIu9W67Z4ANUT0DyhbYLntmJvfhajWueEVBA0zWi9Bd4eT1zrASAAYJQ
QBK2vZuP1nU9v45iweXqUEADKgCkb7xEvbs+F5yQXFFAu5u8yCkTQD1+Pi0d
KcxRQBn4NOrF1VM9Es8py0I0UkD15sQs2X5JPVctfRIjpVJATM7Z5baf8bxt
HLeGhA5TQIeCoykqNDu9SVtSodN1U0BJG9ZBO0RAvdZnRFXp5VNApAzfMvAw
OL00BR02gE5UQI4WybLDVSa9Q3BMsN2/VEDYbM4XtbzWvBgr3dAoL1VASKlt
2r0Rzby+dlQe9ZZVQMasv1h9XPa8FZAiBYgHVkAa2RYAh1L8vD061xiccFZA
GSNTCU8o/LwWsuLFduJWQMtsPOqDcP68tXlPGT9SV0AtcOMnWlsCvSbSopmI
uldALGYnDGKyAb1H+EyzmCtYQJo92TeJ8fy8Oa/d+SmVWEArdFBIwY31vD4Z
5Pj//1hAOqRV/RQM8Lw/LHaP
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-3.856723893679183*^-9, 
                    6.411390620511307*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{13.635608945132374`, 6.411390620511307*^-9}, {
                    15.20117367051062, 6.336521780874695*^-10}, {
                    15.624605572147022`, -3.856723893679183*^-9}}], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAADKT5PNxTMkAWqaVEg5AwvtyHEuv0
mzJAQhsAAIXBD74fWN5E6Dg0QIoXGlRLCtu9JV8FBPb4NUAASRu5t0vnPW+p
xnYImzdAjCW8lxGLGD59KuNONWA5QITc0jfULSw+pOqEwBgdO0D/RIDF5Zzk
PQ/uwOUAvDxAFKWPw6ujm70+KFhwA34+QNmeFqgj6r+92NJEVwURQEDg760N
UC7/PfMsCymW9EBAzl2MpJzkKD6aJpRHAtRBQLcHBeSU9RO+5EHqv3CkQkBQ
vXJdD4XFPY/47WpshkNAhR6RUpAV6r3c0L5vallEQGdo1cTtKty9tkhSwUMo
RUBsPZrTMLKwvfJbk0WqCEZAcTtsPj5D0z3QkKEjE9pGQGLVcxkmXOI9EGFd
NAm9R0DYG437n7OWPdzQ25Ham0hA+lU1Xi870D1KYidJrmtJQCmXVa4xIZG9
Go8gMw9NSkCyt0b31UWjvYzd5nZyH0tAkKGTNjPfbL2Ly28Hse1LQKdcxlgo
35q97FSmynzNTEB1x7RagOR9ve//qedKnk1AoMZAHeyiaz1URls3poBOQFpk
WOQjxIu9W67Z4ANUT0DyhbYLntmJvfhajWueEVBA0zWi9Bd4eT1zrASAAYJQ
QBK2vZuP1nU9v45iweXqUEADKgCkb7xEvbs+F5yQXFFAu5u8yCkTQD1+Pi0d
KcxRQBn4NOrF1VM9Es8py0I0UkD15sQs2X5JPVctfRIjpVJATM7Z5baf8bxt
HLeGhA5TQIeCoykqNDu9SVtSodN1U0BJG9ZBO0RAvdZnRFXp5VNApAzfMvAw
OL00BR02gE5UQI4WybLDVSa9Q3BMsN2/VEDYbM4XtbzWvBgr3dAoL1VASKlt
2r0Rzby+dlQe9ZZVQMasv1h9XPa8FZAiBYgHVkAa2RYAh1L8vD061xiccFZA
GSNTCU8o/LwWsuLFduJWQMtsPOqDcP68tXlPGT9SV0AtcOMnWlsCvSbSopmI
uldALGYnDGKyAb1H+EyzmCtYQJo92TeJ8fy8Oa/d+SmVWEArdFBIwY31vD4Z
5Pj//1hAOqRV/RQM8Lw/LHaP
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-3.856723893679183*^-9, 
                    6.411390620511307*^-9}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.829292429894418*^9, 3.829292435995099*^9}, {
   3.829296646449772*^9, 3.8292966725444393`*^9}, 3.829297050384918*^9, {
   3.829300558433523*^9, 3.829300568780965*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8280748033473263`*^9, 3.828074834605345*^9}, {
  3.8280749526989317`*^9, 3.828074995235281*^9}, {3.82807615136594*^9, 
  3.828076155194503*^9}, {3.8280862187462473`*^9, 3.8280862195250797`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
DfsfWWJdvQ==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
78cjMnbaohevvP6urrIhP1/t9oiwLfo/7NA9Jg==
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
W2HORf8D/jy5mg==
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
fgXliD/DJRcmCb8cVJTQiAD0S7Q8pVGsJIhdzks3jPFHwx/QrDunS0Jyjaz+
G4IfunLrfXt8oyRMN+XV0o9cRrNuJNfkdUvC8A9TeasTXqjDtavZTTOSUNU7
9jGvwxNt85G5vUkpBWQrH/1u83ugty5ReTNwSkHy8MnVcwsXUFX3KTtxSSnQ
8x74Gt/ohmY4vlC2M5GC510qR4dSzqM2doECAWelgPCaImA11QWltzpF/8hb
CrQ5h6zzbM6hTacldzLDpMCYdSCYLtYJDTlJPv8uVgpKtMmNj0yeReWPj3f3
pkuBf4xTa6qpAzqrX/t+uVQKHtHNr7f32KEW2n4vBXqkYMpvXGxe0galVje5
rzkrBX/ceQn1P60Ovz9iVyy2pCCrP+p1JX4GDZIjcfGikobeRpHj3WmWqLTU
iOk9TmmIkliWY4mzQCdFq7RSJaWBeGTO9mqsOfpc8Il4pZY0rLRwPNrWOo2S
cR0n+X5WGr4fbfs223ESrWEVXv7nLQ1f6tpfphqZoL6M+0Nct6TB2dX34GKv
MTpCVV5ukiENujx012tFjdAEstgMtzJpeCRLGYd9N0CNDzxjQpukIaIqQM3+
HQGt2OK/WDwrDcdVM1WOJ+mhXms7Z9q2pIFR0iOa5z9ABZd7YZJKBqYltb5T
BWNo/0KJ3A6nDAyuPxrc70DQx7OPjrFIyQBZceMPHhNdVH/S/YiMtgw4O4zx
nV/QRv+MwCbhpAysbI8FfM3TQosHeKYcHWXg7f3meZdYTdS95/fXqz4ywEKC
+5XFaKC8nd/qYm/JwNGWmErRJHW0+3Nhbm6cDGR+iq07X6SGok2ud4fKZMD3
pRCZ1h8VdBNHfNebZCDLrdygR04Fza/lOkvXKwMefleNNHyVUY6yDlXktwxE
n3z0wJFRCf1SmCdkc0QWVnjGWvn8FdHwNxFH/bhkofZswyOLagVUM+vc3wdS
slBEJkH197U8+itdeyFDWxbyZVf+aeTIoTkp7H21J2WhYYg9hJooizq+WG3s
dpSFzCchxtsLMujH2JwUituy4GH6+5KRiTTa8u9z5dc4Wbh2W3joz10ptMH/
V+fzDFlYQwqpvr2TRKstNSmkmmRB3mkwdV1NAs3h+Ox9ilIOEkSfVu4SRNF7
acvI82g5CGFbkr1axIfeYmSxO5cqB1YUPcYPvXjRG3fUAyWL5CDoJasvqyQP
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
kNLaJPc00pHdiV5RM0U23PvSpfHano7OaSw1ObOJDcbx1q9+nqWh13kOeSLb
2JDXuX7zfWyJTqWtDJYwZkOCSuXj+9NEVH7OQ3mjPb9/KS/n2hkz1NfBUlE8
yAZ0pbCvPtIUCW4yVJU/xIamdjWjrliEqFhYTdqFDfOfabxfycZo+GeGupgn
G+J+XTa5dXcnEj/SpjsVwgbTpdV09rftSPdhud63UDZsFY5dmSWmhfYtydD/
Es6GlvKDvHI1DZR186jBh3NsEJ6fWD8VqIZ2vhMyehfHhhrDS0nvD25CTuQd
u2vS2eD+wiWH1CqAoq6uM8c32OD37S7jgP5Pk3sfBfdUZvL1SVXWi44Nm8yd
adlblsMG2cCTcj1rJ3gXK4+QCu6yQehWyF2XSxL4gRidnHufDZrLZYXOSkjh
d9b6lKxiNiwvXCF2+6U0VpoRoKaXsaHTZYx5b4s8fqR+nRHPY0PGNnrLcn0l
3B8YzrxYxe87NRa9OLEZCzW6smJq2LDb5ovGnTxlTHPW45x7xobIIW/WV5Et
eCS92TqgmQ1VW/LyNGPV8UqJRXvHPjZo9Gi8su7VwX0xl5w5A2zwfjbQd56l
i+8sXe9BGOLvzzvGPbFeFxMEUYDGBzYkcQqGmfl6OPRHUOLcVzaILk54YNYO
TPVenvr1Gxsqag9e063YgeUnUm8OTPLz1hQielPeAJd/fnT32Qx//mNStHuv
AZ7omW2I/8OG7pVaNqoWhpi3L/LV2b9sOFX6varouiGOeS3z2m+RDZ8VpdUp
E4ZYtUV/2G4JBxrO0H9WXd6FHZ76/FFbwYHV5JhQIZ4Rnq9MEFu1igMJ96ee
CRONcUpZscxPKQ6IHDu1urrJGLfkT2x/Ks+BT9PZL2t5Jtj91kqUv54DrlUP
aszUERZN06BcVOLA34+3m3oTEc5Kstx3UpUDxV+M7xXPIGx6yd15/zYOxNHW
abyjmWK/MwWhKrocGNSJWxk5YYqLfD9d+76LA4S0+LjSU2Z44wGnV9FkDsiu
6hh3UgQcv3tAUGk/B3aJ/1msZgHmXdq+X9ydAye619bK2gIe7Q0vng3iwEnC
q2QBfcChEVv7PM5y4Fsixe+NJGDprR1Lh2M50Pypz07vuRm+0xqkZ53EgWf/
kaJv7TfD4Lf54Mt0DrwQuBe60G2KuxSaYyCXAx/GhsmWZFN8rM63/OE9Diiu
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8280748355955143`*^9, {3.828074954219873*^9, 3.828074996816227*^9}, 
   3.828075443221216*^9, {3.828076133782419*^9, 3.828076155756703*^9}, 
   3.8280788308028927`*^9, 3.828086220330195*^9, 3.829288386327449*^9, 
   3.829288440152604*^9, 3.829288512281698*^9, 3.829289825061927*^9, 
   3.8292903963679934`*^9, 3.829300571815585*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prEcoFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", "\[Rule]", " ", "1.2"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "5.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[CapitalKappa]", "\[Rule]", " ", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc1", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "10"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sys", "/.", "func1"}], "/.", "prEcoFunc1"}], ")"}], " ", 
     "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc1", "/.", "prEcoFunc1"}], ",", " ", "initFunc1"}], 
     "]"}], ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.829289836115881*^9, 3.8292898786984653`*^9}, 
   3.829289928815617*^9, {3.829290349293017*^9, 3.829290355545183*^9}, {
   3.8292909878604403`*^9, 3.82929098902839*^9}, {3.829292492461904*^9, 
   3.829292530486247*^9}, 3.829296677600597*^9, {3.829296715496174*^9, 
   3.829296715850922*^9}, {3.829296890284697*^9, 3.829296890447839*^9}, {
   3.829296939284951*^9, 3.8292969884923773`*^9}, {3.829297074505315*^9, 
   3.829297118199197*^9}, {3.8292972096052923`*^9, 3.829297210519383*^9}, {
   3.829300591073004*^9, 3.829300594922571*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "151.11111111111111`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "151.71111111111068`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999994505`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.04562088664174947`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.04562088664175426`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.0007909770032095082`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "0.34545454545443127`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "151.4565656565657`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "87.68538011695908`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.35873995287088867`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "1.5162600471291259`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.39452987090262936`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.9970164677477706`"}], ",", 
     RowBox[{"W", "\[Rule]", "3.732630639228777`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "17.329272009485088`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "15.454272009485043`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.012149520778513464`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.31293666482635774`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.046677658127741134`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.8810872464465391`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "3.7560872464465684`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.10999135947460752`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.6885619042364577`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "1.1821183311225996`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "1.874999999998714`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "2.798177083333057`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.5999999999999999`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999999943`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.07172413793103738`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.07172413793103462`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.20000000000001897`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "0.3454545454546104`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.34545454545461046`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.20000000000003765`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-6, 9.999083533013398}, {
                    1.6301768919855668`, 0.00002395401021131894}, {
                    3.3974736088780224`, 0.00048407004059389995`}, {
                    5.047654566075241, 0.1733367140536157}, {
                    6.665465523416349, 9.847657770091647}, {8.420398000579599,
                     1.0810826633468435`*^-9}, {10.058214718047612`, 
                    7.342511766492955*^-10}, {11.833152955337768`, 
                    2.287314448585517*^-7}, {13.575721192771812`, 
                    0.00008691152378648553}, {15.20117367051062, 
                    0.022247846800859575`}, {16.963747668071573`, 
                    8.471559995456998}, {18.609205905937287`, 
                    0.000011571995025372777`}, {20.222294143946893`, 
                    5.929518187519374*^-8}, {21.97250390177864, 
                    1.693275149664145*^-6}, {23.60559789991515, 
                    0.0002596478096595231}, {25.375813417873804`, 
                    0.09429576375728513}, {26.33941827203817, 
                    14.716205201481438`}}], 
                    
                    LineBox[{{27.83315005871614, 14.716205201481438`}, {
                    28.73438869438365, 0.000013065044568606302`}, {
                    30.4922399726131, 7.744353233280874*^-6}, {
                    32.132975491147306`, 0.0005603582602643905}, {
                    33.91083252950366, 0.1736826032898209}, {35.1093376340404,
                     14.716205201481438`}}], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAA4oBhO8sUQkD9LLtysm4tQORB6r9w
pEJAbL2X1lkrEj+P+O1qbIZDQMjkOv/fMTE/3NC+b2pZREC8BVhdj+CcP7ZI
UsFDKEVAsUN739QDFUDyW5NFqghGQLsJUQE7B2A/0JChIxPaRkAiBQx+KLhD
PxBhXTQJvUdA4m6GEXbGqT/c0NuR2ptIQAdSTl0VnyZASmInSa5rSUA32573
xLVrPxqPIDMPTUpA3QrZGCzfdT+M3eZ2ch9LQM0gIoC66t0/i8tvB7HtS0A1
XxbTk8QPQOxUpsp8zUxAjAyhUnlMcj/v/6nnSp5NQCzBpvjfy7Q/VEZbN6aA
TkDofCQ+2e0nQFuu2eADVE9A8UfbSQ2/iz/4Wo1rnhFQQInIeY0fPao/c6wE
gAGCUEBASpSxGw0YQL+OYsHl6lBAW/KhdfEPjj+7PheckFxRQDUdq/LbA3M/
fj4tHSnMUUCZhqyTK6TiPxLPKctCNFJAOLDnE3e68T9XLX0SI6VSQOSwM3YB
DJs+bRy3hoQOU0BE67SJzkLPPklbUqHTdVNAOOyQd+wkRT/WZ0RV6eVTQLyR
be3HFtA/1Buc32sfVED9LLtysm4tQB+rywU=
                    "]], 
                    
                    LineBox[{{82.01636765276625, 14.716205201481438`}, {
                    82.9979058023901, 3.3368144100164718`*^-6}, {
                    84.73686620329352, 9.59697963865247*^-6}, {
                    86.3587108445017, 0.0009471343038049312}, {
                    88.11767700553203, 0.3020907352003009}, {
                    89.75952740686712, 14.087364932960275`}, {
                    91.53849932802436, 0.00003182776943389197}, {
                    93.28510124932548, 0.00023056885780271867`}, {
                    94.91458741093138, 0.026585915482487787`}, {
                    96.6811950923594, 8.192149390041738}, {98.33068701409219, 
                    0.0012528701421283528`}, {99.99999830508474, 
                    0.0004154225302394775}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    14.716205201481438`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.694915254237288*^-6, 9.999083533013398}, {
                    1.6301768919855668`, 0.00002395401021131894}, {
                    3.3974736088780224`, 0.00048407004059389995`}, {
                    5.047654566075241, 0.1733367140536157}, {
                    6.665465523416349, 9.847657770091647}, {8.420398000579599,
                     1.0810826633468435`*^-9}, {10.058214718047612`, 
                    7.342511766492955*^-10}, {11.833152955337768`, 
                    2.287314448585517*^-7}, {13.575721192771812`, 
                    0.00008691152378648553}, {15.20117367051062, 
                    0.022247846800859575`}, {16.963747668071573`, 
                    8.471559995456998}, {18.609205905937287`, 
                    0.000011571995025372777`}, {20.222294143946893`, 
                    5.929518187519374*^-8}, {21.97250390177864, 
                    1.693275149664145*^-6}, {23.60559789991515, 
                    0.0002596478096595231}, {25.375813417873804`, 
                    0.09429576375728513}, {26.33941827203817, 
                    14.716205201481438`}}], 
                    
                    LineBox[{{27.83315005871614, 14.716205201481438`}, {
                    28.73438869438365, 0.000013065044568606302`}, {
                    30.4922399726131, 7.744353233280874*^-6}, {
                    32.132975491147306`, 0.0005603582602643905}, {
                    33.91083252950366, 0.1736826032898209}, {35.1093376340404,
                     14.716205201481438`}}], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAA4oBhO8sUQkD9LLtysm4tQORB6r9w
pEJAbL2X1lkrEj+P+O1qbIZDQMjkOv/fMTE/3NC+b2pZREC8BVhdj+CcP7ZI
UsFDKEVAsUN739QDFUDyW5NFqghGQLsJUQE7B2A/0JChIxPaRkAiBQx+KLhD
PxBhXTQJvUdA4m6GEXbGqT/c0NuR2ptIQAdSTl0VnyZASmInSa5rSUA32573
xLVrPxqPIDMPTUpA3QrZGCzfdT+M3eZ2ch9LQM0gIoC66t0/i8tvB7HtS0A1
XxbTk8QPQOxUpsp8zUxAjAyhUnlMcj/v/6nnSp5NQCzBpvjfy7Q/VEZbN6aA
TkDofCQ+2e0nQFuu2eADVE9A8UfbSQ2/iz/4Wo1rnhFQQInIeY0fPao/c6wE
gAGCUEBASpSxGw0YQL+OYsHl6lBAW/KhdfEPjj+7PheckFxRQDUdq/LbA3M/
fj4tHSnMUUCZhqyTK6TiPxLPKctCNFJAOLDnE3e68T9XLX0SI6VSQOSwM3YB
DJs+bRy3hoQOU0BE67SJzkLPPklbUqHTdVNAOOyQd+wkRT/WZ0RV6eVTQLyR
be3HFtA/1Buc32sfVED9LLtysm4tQB+rywU=
                    "]], 
                    
                    LineBox[{{82.01636765276625, 14.716205201481438`}, {
                    82.9979058023901, 3.3368144100164718`*^-6}, {
                    84.73686620329352, 9.59697963865247*^-6}, {
                    86.3587108445017, 0.0009471343038049312}, {
                    88.11767700553203, 0.3020907352003009}, {
                    89.75952740686712, 14.087364932960275`}, {
                    91.53849932802436, 0.00003182776943389197}, {
                    93.28510124932548, 0.00023056885780271867`}, {
                    94.91458741093138, 0.026585915482487787`}, {
                    96.6811950923594, 8.192149390041738}, {98.33068701409219, 
                    0.0012528701421283528`}, {99.99999830508474, 
                    0.0004154225302394775}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    14.716205201481438`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.6281967965450341`, 0.005264189738313642}, {
                    1.6301768919855668`, 0.0004050221098482151}, {
                    3.3974736088780224`, 0.0021710059046188643`}, {
                    3.427515099955678, 0.005264189738313642}}], 
                    LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAA1zc8blzEIEDohEEs5491PxqWH2g+
1yBAe7gOzxlYLT4aUsxRzh0kQKmjgumwthw+oXsvBpOqJ0Dr8O3LtwNzPloj
ne3EJitAGEOnNJWd2T6cUT88AGcuQNPNnHd8Bzg/s/bLKrj2MEDGA8oP6dFt
P9yHEuv0mzJA2tpBTOQ9cT4fWN5E6Dg0QPe8ALRXJfw9JV8FBPb4NUCVrwGQ
azswPm+pxnYImzdAOmwTACp+hT59KuNONWA5QBsS+sTUsOg+pOqEwBgdO0Db
aQlyfVoEPw/uwOUAvDxAcuUKfVW1BT4+KFhwA34+QBrwN8PJqzk+2NJEVwUR
QEA6HbGrWwtTPvMsCymW9EBApTS+gHZJsz6aJpRHAtRBQGrEZtgzr8E+5EHq
v3CkQkCiQE0QUC0VPo/47WpshkNA9i1D3uhcKD7c0L5vallEQK9r+aA/RXk+
tkhSwUMoRUAp5lqR6Ye0PvJbk0WqCEZAk/ieXnEzVD7QkKEjE9pGQA7qIIpT
Jzk+EGFdNAm9R0DVoP/qajiGPtzQ25Ham0hAUWjR3X2wwT5KYidJrmtJQL3p
speobHc+Go8gMw9NSkAyvl57lvl/Pozd5nZyH0tAno4MSjVRzD6Ly28Hse1L
QEplsQ53Cu4+7FSmynzNTECYf2TV80e0Pu//qedKnk1ALIQgVAUC6z5URls3
poBOQNkrCKtLkjA/W67Z4ANUT0C5U6TXk5cVP/hajWueEVBAFLzflityNT/u
y78t4E1QQOiEQSznj3U/QHECLg==
                    "]], 
                    
                    LineBox[{{67.49583078874143, 0.005264189738313642}, {
                    67.67027315735594, 0.004755436677481519}, {
                    69.44632627744697, 0.001683575598541411}, {
                    69.56212960404213, 0.005264189738313642}}], 
                    
                    LineBox[{{74.51186859632944, 0.005264189738313642}, {
                    74.58026563858344, 9.674194633664256*^-7}, {
                    76.22683875925004, 2.932254085114485*^-6}, {
                    77.84104188006053, 0.0001384512771897397}, {
                    78.71846712822425, 0.005264189738313642}}], 
                    
                    LineBox[{{82.20444633920198, 0.005264189738313642}, {
                    82.9979058023901, 2.731007899564429*^-7}, {
                    84.73686620329352, 4.042792545116527*^-7}, {
                    86.3587108445017, 0.000012423916607619447`}, {
                    88.11767700553203, 0.0007580181106375076}, {
                    89.75952740686712, 0.0007221379210244186}, {
                    91.53849932802436, 2.508991294784565*^-7}, {
                    93.28510124932548, 9.195358497217084*^-7}, {
                    94.91458741093138, 0.00003192207243991099}, {
                    96.6811950923594, 0.0004227422026114709}, {
                    98.33068701409219, 3.706562621956772*^-6}, {
                    99.99999830508474, 1.1664352695486155`*^-6}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.005264189738313642}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.6281967965450341`, 0.005264189738313642}, {
                    1.6301768919855668`, 0.0004050221098482151}, {
                    3.3974736088780224`, 0.0021710059046188643`}, {
                    3.427515099955678, 0.005264189738313642}}], 
                    LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAA1zc8blzEIEDohEEs5491PxqWH2g+
1yBAe7gOzxlYLT4aUsxRzh0kQKmjgumwthw+oXsvBpOqJ0Dr8O3LtwNzPloj
ne3EJitAGEOnNJWd2T6cUT88AGcuQNPNnHd8Bzg/s/bLKrj2MEDGA8oP6dFt
P9yHEuv0mzJA2tpBTOQ9cT4fWN5E6Dg0QPe8ALRXJfw9JV8FBPb4NUCVrwGQ
azswPm+pxnYImzdAOmwTACp+hT59KuNONWA5QBsS+sTUsOg+pOqEwBgdO0Db
aQlyfVoEPw/uwOUAvDxAcuUKfVW1BT4+KFhwA34+QBrwN8PJqzk+2NJEVwUR
QEA6HbGrWwtTPvMsCymW9EBApTS+gHZJsz6aJpRHAtRBQGrEZtgzr8E+5EHq
v3CkQkCiQE0QUC0VPo/47WpshkNA9i1D3uhcKD7c0L5vallEQK9r+aA/RXk+
tkhSwUMoRUAp5lqR6Ye0PvJbk0WqCEZAk/ieXnEzVD7QkKEjE9pGQA7qIIpT
Jzk+EGFdNAm9R0DVoP/qajiGPtzQ25Ham0hAUWjR3X2wwT5KYidJrmtJQL3p
speobHc+Go8gMw9NSkAyvl57lvl/Pozd5nZyH0tAno4MSjVRzD6Ly28Hse1L
QEplsQ53Cu4+7FSmynzNTECYf2TV80e0Pu//qedKnk1ALIQgVAUC6z5URls3
poBOQNkrCKtLkjA/W67Z4ANUT0C5U6TXk5cVP/hajWueEVBAFLzflityNT/u
y78t4E1QQOiEQSznj3U/QHECLg==
                    "]], 
                    
                    LineBox[{{67.49583078874143, 0.005264189738313642}, {
                    67.67027315735594, 0.004755436677481519}, {
                    69.44632627744697, 0.001683575598541411}, {
                    69.56212960404213, 0.005264189738313642}}], 
                    
                    LineBox[{{74.51186859632944, 0.005264189738313642}, {
                    74.58026563858344, 9.674194633664256*^-7}, {
                    76.22683875925004, 2.932254085114485*^-6}, {
                    77.84104188006053, 0.0001384512771897397}, {
                    78.71846712822425, 0.005264189738313642}}], 
                    LineBox[{{82.20444633920198, 0.005264189738313642}, {
                    82.9979058023901, 2.731007899564429*^-7}, {
                    84.73686620329352, 4.042792545116527*^-7}, {
                    86.3587108445017, 0.000012423916607619447`}, {
                    88.11767700553203, 0.0007580181106375076}, {
                    89.75952740686712, 0.0007221379210244186}, {
                    91.53849932802436, 2.508991294784565*^-7}, {
                    93.28510124932548, 9.195358497217084*^-7}, {
                    94.91458741093138, 0.00003192207243991099}, {
                    96.6811950923594, 0.0004227422026114709}, {
                    98.33068701409219, 3.706562621956772*^-6}, {
                    99.99999830508474, 1.1664352695486155`*^-6}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.005264189738313642}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6z7//REwD4P/BdXF00
Ffo/fcgo6PAQ4j/OO7mkBi4LQAM9wuuTd70/ZDHLW8wwFED5OaN04MWcP0XB
TstvqRpAYaT68DmNI0Aalh9oPtcgQOMzElNIugZAGlLMUc4dJEDrjOiOidHk
P6F7LwaTqidA3/nlpxLbwD9aI53txCYrQNqGptINGpw/nFE/PABnLkBLgdGo
5B16P7P2yyq49jBAhnT3PfXHcz/chxLr9JsyQH1yT3lG6CRAH1jeROg4NEBz
xnilA5UDQCVfBQT2+DVAl3j8UiQ24D9vqcZ2CJs3QNeoxQu4070/fSrjTjVg
OUDO3yojkpSYP6TqhMAYHTtAGiKYnjuQ1j8P7sDlALw8QOT78mkAihhAPihY
cAN+PkAL54DiFC30P9jSRFcFEUBAr+DZfzlv0j/zLAsplvRAQOPkWuYQiK4/
miaURwLUQUB9Exp59AobQORB6r9wpEJANaznwNKbEUCP+O1qbIZDQL1pJ5hl
wuw/3NC+b2pZREDlTXrZhTXKP7ZIUsFDKEVA73ae3xOfuj/yW5NFqghGQFos
uJH0PBpA0JChIxPaRkCPjph7YhX4PxBhXTQJvUdAsHG4wsGx0z/c0NuR2ptI
QM5JGuRH1tg/SmInSa5rSUCWyaRIrtoUQBqPIDMPTUpALU/qMFki8T+M3eZ2
ch9LQFyfovcG09A/i8tvB7HtS0BZrcfQlskjQOxUpsp8zUxAa8AW2pyOBEDv
/6nnSp5NQOa/VcwzQOM/VEZbN6aATkCoHpv+OXTxP1uu2eADVE9At9ZThPgb
EED4Wo1rnhFQQOy8wf27ce4/c6wEgAGCUEBtTFBMI3HhP7+OYsHl6lBA1SWU
GxbnEkC7PheckFxRQErvtxpfl+4/fj4tHSnMUUA4PGJ9TUjLPxLPKctCNFJA
bxb41xAVI0BXLX0SI6VSQKRSKx1D6v8/bRy3hoQOU0BbQ808MQHdP0lbUqHT
dVNA4vgqTuUjuz/WZ0RV6eVTQEbFvRa3PJc/NAUdNoBOVECUVzb2esEYQENw
TLDdv1RAN7rzTd8bEUAYK93QKC9VQBEwSPHGnew/vnZUHvWWVUBhR72MhpjK
PxWQIgWIB1ZAA2Btq2XPpj89OtcYnHBWQDanZVhtsyVAFrLixXbiVkC4t6c0
4r4NQLV5Txk/UldAccMPkAO16D8m0qKZiLpXQGnA8LQU5cY/R/hMs5grWED1
92fI3My/Pzmv3fkplVhApGT6iKYLGkA+GeT4//9YQBwAaMSOMvc/88y9Jg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    10.850443613442263`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvvD6z7//REwD4P/BdXF00
Ffo/fcgo6PAQ4j/OO7mkBi4LQAM9wuuTd70/ZDHLW8wwFED5OaN04MWcP0XB
TstvqRpAYaT68DmNI0Aalh9oPtcgQOMzElNIugZAGlLMUc4dJEDrjOiOidHk
P6F7LwaTqidA3/nlpxLbwD9aI53txCYrQNqGptINGpw/nFE/PABnLkBLgdGo
5B16P7P2yyq49jBAhnT3PfXHcz/chxLr9JsyQH1yT3lG6CRAH1jeROg4NEBz
xnilA5UDQCVfBQT2+DVAl3j8UiQ24D9vqcZ2CJs3QNeoxQu4070/fSrjTjVg
OUDO3yojkpSYP6TqhMAYHTtAGiKYnjuQ1j8P7sDlALw8QOT78mkAihhAPihY
cAN+PkAL54DiFC30P9jSRFcFEUBAr+DZfzlv0j/zLAsplvRAQOPkWuYQiK4/
miaURwLUQUB9Exp59AobQORB6r9wpEJANaznwNKbEUCP+O1qbIZDQL1pJ5hl
wuw/3NC+b2pZREDlTXrZhTXKP7ZIUsFDKEVA73ae3xOfuj/yW5NFqghGQFos
uJH0PBpA0JChIxPaRkCPjph7YhX4PxBhXTQJvUdAsHG4wsGx0z/c0NuR2ptI
QM5JGuRH1tg/SmInSa5rSUCWyaRIrtoUQBqPIDMPTUpALU/qMFki8T+M3eZ2
ch9LQFyfovcG09A/i8tvB7HtS0BZrcfQlskjQOxUpsp8zUxAa8AW2pyOBEDv
/6nnSp5NQOa/VcwzQOM/VEZbN6aATkCoHpv+OXTxP1uu2eADVE9At9ZThPgb
EED4Wo1rnhFQQOy8wf27ce4/c6wEgAGCUEBtTFBMI3HhP7+OYsHl6lBA1SWU
GxbnEkC7PheckFxRQErvtxpfl+4/fj4tHSnMUUA4PGJ9TUjLPxLPKctCNFJA
bxb41xAVI0BXLX0SI6VSQKRSKx1D6v8/bRy3hoQOU0BbQ808MQHdP0lbUqHT
dVNA4vgqTuUjuz/WZ0RV6eVTQEbFvRa3PJc/NAUdNoBOVECUVzb2esEYQENw
TLDdv1RAN7rzTd8bEUAYK93QKC9VQBEwSPHGnew/vnZUHvWWVUBhR72MhpjK
PxWQIgWIB1ZAA2Btq2XPpj89OtcYnHBWQDanZVhtsyVAFrLixXbiVkC4t6c0
4r4NQLV5Txk/UldAccMPkAO16D8m0qKZiLpXQGnA8LQU5cY/R/hMs5grWED1
92fI3My/Pzmv3fkplVhApGT6iKYLGkA+GeT4//9YQBwAaMSOMvc/88y9Jg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    10.850443613442263`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{4.651019083899574, 0.10959930634072843`}, {
                    5.047654566075241, 0.06167128337798179}, {
                    5.191940409887588, 0.10959930634072843`}}], 
                    LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAz1TTEMa4I0CW0GU8sw68PxpSzFHO
HSRAac/Pw+b1sz+hey8Gk6onQPfxrNw+KZA/WiOd7cQmK0DmpQAbtfFqP5xR
PzwAZy5AB6DzBY0AST+z9ssquPYwQBotysAcHiY/3IcS6/SbMkAdp4XHP9hl
Px9Y3kToODRApBeT3g12RD8lXwUE9vg1QEbbfPp+8CA/b6nGdgibN0AIEiSN
Xy3/Pn0q4041YDlAbM+UGbgT2j6k6oTAGB07QLOKYCs7VtA+D+7A5QC8PECo
U2+tjrUCPz4oWHADfj5AGGyWkv3C3j7Y0kRXBRFAQNy0PvJWLLw+8ywLKZb0
QEDu6PmoJKeZPpomlEcC1EFAAgSJXTbzxD7kQeq/cKRCQP8Y6o5kxM4+j/jt
amyGQ0AXVyIXJzmpPtzQvm9qWURASnDlVeONiD62SFLBQyhFQF9qSvujMYI+
8luTRaoIRkDmr2KXIwzPPtCQoSMT2kZA5mLc4S09rT4QYV00Cb1HQNaTjkxI
YIw+3NDbkdqbSEAtMNf9XUKaPkpiJ0mua0lAH8dAAQ7S4D4ajyAzD01KQH0c
Ehxjf74+jN3mdnIfS0DLDBC/aMiwPovLbwex7UtAEgYPNzmqBj/sVKbKfM1M
QHlWGeeZZwU/7/+p50qeTUDc7yX/kQnwPlRGWzemgE5AyMqNFSYBGD9brtng
A1RPQLTfc63EJV0/+FqNa54RUEAYv3EiIENHP3OsBIABglBAcZZ4GojYZT9i
7kE1feJQQJbQZTyzDrw/6NgAUA==
                    "]], 
                    
                    LineBox[{{67.85229710640003, 0.10959930634072843`}, {
                    69.44632627744697, 0.027990190019440406`}, {
                    71.1900093976819, 0.013757149915943198`}, {
                    71.43644218955026, 0.10959930634072843`}}], 
                    
                    LineBox[{{75.55387468347882, 0.10959930634072843`}, {
                    76.22683875925004, 0.04585534572855813}, {
                    77.84104188006053, 0.01073504500102817}, {
                    79.59236652069316, 0.002365714911152879}, {
                    81.22657540163056, 0.010994834835852672`}, {
                    82.9979058023901, 0.013705486127240735`}, {
                    84.73686620329352, 0.0028659351238445123`}, {
                    86.3587108445017, 0.0006674616696021623}, {
                    88.11767700553203, 0.0001588479231200148}, {
                    89.75952740686712, 0.0016307693197145086`}, {
                    91.53849932802436, 0.001260189014617274}, {
                    93.28510124932548, 0.0002623821648931144}, {
                    94.91458741093138, 0.00006417228312252997}, {
                    96.6811950923594, 0.00004611511232558167}, {
                    98.33068701409219, 0.0010738107190120458`}, {
                    99.99999830508474, 0.00024329275261956258`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.10959930634072843`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{4.651019083899574, 0.10959930634072843`}, {
                    5.047654566075241, 0.06167128337798179}, {
                    5.191940409887588, 0.10959930634072843`}}], 
                    LineBox[CompressedData["
1:eJwBUQKu/SFib1JlAgAAACQAAAACAAAAz1TTEMa4I0CW0GU8sw68PxpSzFHO
HSRAac/Pw+b1sz+hey8Gk6onQPfxrNw+KZA/WiOd7cQmK0DmpQAbtfFqP5xR
PzwAZy5AB6DzBY0AST+z9ssquPYwQBotysAcHiY/3IcS6/SbMkAdp4XHP9hl
Px9Y3kToODRApBeT3g12RD8lXwUE9vg1QEbbfPp+8CA/b6nGdgibN0AIEiSN
Xy3/Pn0q4041YDlAbM+UGbgT2j6k6oTAGB07QLOKYCs7VtA+D+7A5QC8PECo
U2+tjrUCPz4oWHADfj5AGGyWkv3C3j7Y0kRXBRFAQNy0PvJWLLw+8ywLKZb0
QEDu6PmoJKeZPpomlEcC1EFAAgSJXTbzxD7kQeq/cKRCQP8Y6o5kxM4+j/jt
amyGQ0AXVyIXJzmpPtzQvm9qWURASnDlVeONiD62SFLBQyhFQF9qSvujMYI+
8luTRaoIRkDmr2KXIwzPPtCQoSMT2kZA5mLc4S09rT4QYV00Cb1HQNaTjkxI
YIw+3NDbkdqbSEAtMNf9XUKaPkpiJ0mua0lAH8dAAQ7S4D4ajyAzD01KQH0c
Ehxjf74+jN3mdnIfS0DLDBC/aMiwPovLbwex7UtAEgYPNzmqBj/sVKbKfM1M
QHlWGeeZZwU/7/+p50qeTUDc7yX/kQnwPlRGWzemgE5AyMqNFSYBGD9brtng
A1RPQLTfc63EJV0/+FqNa54RUEAYv3EiIENHP3OsBIABglBAcZZ4GojYZT9i
7kE1feJQQJbQZTyzDrw/6NgAUA==
                    "]], 
                    
                    LineBox[{{67.85229710640003, 0.10959930634072843`}, {
                    69.44632627744697, 0.027990190019440406`}, {
                    71.1900093976819, 0.013757149915943198`}, {
                    71.43644218955026, 0.10959930634072843`}}], 
                    
                    LineBox[{{75.55387468347882, 0.10959930634072843`}, {
                    76.22683875925004, 0.04585534572855813}, {
                    77.84104188006053, 0.01073504500102817}, {
                    79.59236652069316, 0.002365714911152879}, {
                    81.22657540163056, 0.010994834835852672`}, {
                    82.9979058023901, 0.013705486127240735`}, {
                    84.73686620329352, 0.0028659351238445123`}, {
                    86.3587108445017, 0.0006674616696021623}, {
                    88.11767700553203, 0.0001588479231200148}, {
                    89.75952740686712, 0.0016307693197145086`}, {
                    91.53849932802436, 0.001260189014617274}, {
                    93.28510124932548, 0.0002623821648931144}, {
                    94.91458741093138, 0.00006417228312252997}, {
                    96.6811950923594, 0.00004611511232558167}, {
                    98.33068701409219, 0.0010738107190120458`}, {
                    99.99999830508474, 0.00024329275261956258`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.10959930634072843`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{4.987628248488073, 0.8134008575461981}, {
                    5.047654566075241, 0.7070826182437128}, {
                    6.665465523416349, 0.1260960730485557}, {
                    6.9829388183968435`, 0.8134008575461981}}], 
                    LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAANHM2t/c9JUB3YDY8YQfqP6F7LwaT
qidAf6IYex8YzT9aI53txCYrQMTtdU3ZYqg/nFE/PABnLkCvaTQqRQGGP7P2
yyq49jBAv/TGO5vvDD/chxLr9JsyQAdQ385uTJU/H1jeROg4NECFn6uY2dWA
PyVfBQT2+DVAtNHJwhI2Xj9vqcZ2CJs3QL0ueYcTJjw/fSrjTjVgOUBcT/Ki
X5QUP6TqhMAYHTtAfL8ok/VlmT4P7sDlALw8QA1aOH9nITc/PihYcAN+PkBB
Iz2LHFwaP9jSRFcFEUBA/uUm41w0+T7zLAsplvRAQLmrGM6wM9E+miaURwLU
QUCql2lR5OiSPuRB6r9wpEJAe2m8ZYpVBD+P+O1qbIZDQPYxXIozvuU+3NC+
b2pZRECj5OGF/DjEPrZIUsFDKEVA0N+htTLocj7yW5NFqghGQIrPs7Xlyvs+
0JChIxPaRkADvogcjZ7nPhBhXTQJvUdAQWMFfGTvxD7c0NuR2ptIQFFcKihl
X3Q+SmInSa5rSUBfoaGLr/EPPxqPIDMPTUpAafV4O7P19z6M3eZ2ch9LQFCj
CrT5wtQ+i8tvB7HtS0AvvN6wQITzPuxUpsp8zUxAd7g4/UP1Oj/v/6nnSp5N
QFf3ItOLVCI/VEZbN6aATkCo8r80gBL0Pluu2eADVE9A1LowEaRviT/4Wo1r
nhFQQKipEi9Xk3o/c6wEgAGCUEDusDEEp3RSP7+OYsHl6lBAbwliLuwN5T+7
PheckFxRQG0TiN8B5tU/fj4tHSnMUUBWdaOs2r2vPxLPKctCNFJANohUOinN
4j9M5A+OVEJSQHdgNjxhB+o/uqcbdQ==
                    "]], 
                    
                    LineBox[{{76.06610888791155, 0.8134008575461981}, {
                    76.22683875925004, 0.641820247247665}, {77.84104188006053,
                     0.15436726196955103`}, {79.59236652069316, 
                    0.02415121424952419}, {81.22657540163056, 
                    0.0009908007216414322}, {82.9979058023901, 
                    0.15423343033891093`}, {84.73686620329352, 
                    0.03991715500066466}, {86.3587108445017, 
                    0.009573855655476717}, {88.11767700553203, 
                    0.001438609877601566}, {89.75952740686712, 
                    0.0002524119540869972}, {91.53849932802436, 
                    0.014313472245225724`}, {93.28510124932548, 
                    0.003653610540044385}, {94.91458741093138, 
                    0.0008559193156597851}, {96.6811950923594, 
                    0.000015017047666585752`}, {98.33068701409219, 
                    0.008059749871854408}, {99.99999830508474, 
                    0.0031829008901835196`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.8134008575461981}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{4.987628248488073, 0.8134008575461981}, {
                    5.047654566075241, 0.7070826182437128}, {
                    6.665465523416349, 0.1260960730485557}, {
                    6.9829388183968435`, 0.8134008575461981}}], 
                    LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAANHM2t/c9JUB3YDY8YQfqP6F7LwaT
qidAf6IYex8YzT9aI53txCYrQMTtdU3ZYqg/nFE/PABnLkCvaTQqRQGGP7P2
yyq49jBAv/TGO5vvDD/chxLr9JsyQAdQ385uTJU/H1jeROg4NECFn6uY2dWA
PyVfBQT2+DVAtNHJwhI2Xj9vqcZ2CJs3QL0ueYcTJjw/fSrjTjVgOUBcT/Ki
X5QUP6TqhMAYHTtAfL8ok/VlmT4P7sDlALw8QA1aOH9nITc/PihYcAN+PkBB
Iz2LHFwaP9jSRFcFEUBA/uUm41w0+T7zLAsplvRAQLmrGM6wM9E+miaURwLU
QUCql2lR5OiSPuRB6r9wpEJAe2m8ZYpVBD+P+O1qbIZDQPYxXIozvuU+3NC+
b2pZRECj5OGF/DjEPrZIUsFDKEVA0N+htTLocj7yW5NFqghGQIrPs7Xlyvs+
0JChIxPaRkADvogcjZ7nPhBhXTQJvUdAQWMFfGTvxD7c0NuR2ptIQFFcKihl
X3Q+SmInSa5rSUBfoaGLr/EPPxqPIDMPTUpAafV4O7P19z6M3eZ2ch9LQFCj
CrT5wtQ+i8tvB7HtS0AvvN6wQITzPuxUpsp8zUxAd7g4/UP1Oj/v/6nnSp5N
QFf3ItOLVCI/VEZbN6aATkCo8r80gBL0Pluu2eADVE9A1LowEaRviT/4Wo1r
nhFQQKipEi9Xk3o/c6wEgAGCUEDusDEEp3RSP7+OYsHl6lBAbwliLuwN5T+7
PheckFxRQG0TiN8B5tU/fj4tHSnMUUBWdaOs2r2vPxLPKctCNFJANohUOinN
4j9M5A+OVEJSQHdgNjxhB+o/uqcbdQ==
                    "]], 
                    
                    LineBox[{{76.06610888791155, 0.8134008575461981}, {
                    76.22683875925004, 0.641820247247665}, {77.84104188006053,
                     0.15436726196955103`}, {79.59236652069316, 
                    0.02415121424952419}, {81.22657540163056, 
                    0.0009908007216414322}, {82.9979058023901, 
                    0.15423343033891093`}, {84.73686620329352, 
                    0.03991715500066466}, {86.3587108445017, 
                    0.009573855655476717}, {88.11767700553203, 
                    0.001438609877601566}, {89.75952740686712, 
                    0.0002524119540869972}, {91.53849932802436, 
                    0.014313472245225724`}, {93.28510124932548, 
                    0.003653610540044385}, {94.91458741093138, 
                    0.0008559193156597851}, {96.6811950923594, 
                    0.000015017047666585752`}, {98.33068701409219, 
                    0.008059749871854408}, {99.99999830508474, 
                    0.0031829008901835196`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    0.8134008575461981}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596374465*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "30"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829289919956046*^9, 3.829289920125574*^9}, {
   3.829292552469584*^9, 3.8292926098919*^9}, {3.829292706618535*^9, 
   3.82929275636156*^9}, 3.8292967690075207`*^9, {3.82929683538181*^9, 
   3.829296912209985*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
eBAvujWd2L2x3BwaVq+LptXwoliRqzs2WYD1KvVUGYkP/Qg3UfGsffBrJaH2
4y4+FJCtzzdOtYKgFX7BnzF8WPo9EmsbDwL3SrzrShMftrEXUs4a2kDaMm+V
MI0fWd42Rkdy24HqchzvpkP8eHEkLUle1RFql7idjW7zo5xylI67rTPsW4ot
c/zBj+aXxwW+HXKBgUVOjgA5AbxNZPg2Jh0H38Vou2uuAqhf+peeIeYGrIvs
hdmPBZBdi+3A90kPuLkQSa77K4Brzln1asqnQfhieN6oGBW9b0nAURdv6Fne
0Ta/jYrUUK5FndO+8OgCmcniSMWtHAlhzs/9IXz23dXPF6noUVtbS14XCM6n
r0neTqciV/uWYIUf54AYPph3rIaKR5iPmL+HL4LUEUk9tR4q6jFyF83XhcJS
58C7hWUqllTWTXcJhEPnvlzrekkahh2dpN/VioDyRq+heH0aLpIlFAduR0GS
oY7/YXsa9vy6uNJrHgvez5cpChdo+Lo3f1un5VWw0H59/e8dGr5UvtelWZYA
G57EyFZW07CPcuXFoZfXgVPZsii8m4Zf2sqnageTYThDhLBYouE/kcVVE9Ob
0CDa0yQqIYiqO6rk7BdvwYPEB/aDeoLYprdnxH8tDUK4PEYKbAVx64e7VXtc
74FDuPq5wHOCSFbtUAxJuw/bluc4DG8L4s7+yK9Sr7JAzL/mJm+VIC7kXgvZ
vjEb/o2FK3V+E8Q1tdeHsgdzoc3VrPz+giDq7g42M57Kh5JegZ2eYkL4dfeu
ameXIrhm0/Fli64QKlV1WR25XwKeLenO5MNC6NH744VfSxmYmx2b+BgohPon
3owWGVfAutcqwTdThf73L8eZ83xVwKo/yXv0mRB+z7x8/4p6DQyWVaRt7BTC
P2bqqvSqOnipemnDv39C+PdM7i/2nleQ8Whn1Uu6MD6aYrhpSDfARWlu07gt
wih/iSNKqeAt2Ka2dByyFsZPswkX9yY2whZqqqtsgDAuhHQfudXRBMKxjrMj
KcLol/z87UHjFpgmK15++lQYw1KOGtGOtkLL+RFaaLswVt/X++zT0AaFM8WZ
5nPCSHs3JlRwvhPiPAPVRUREcOmAsdTJhG5wH9pe26ctgk5pgX2/BXrB2InV
Iu+gCMqNRU/cZhsAxc4P3/39RXA26N1LBbP/gLzv+km4IYKHn+mXSfUMQe97
m0WuchG01OXiVG38DTU7pGPavorgS+tvuxhSY3Cn+if93owIPrtuxf1zYAKC
tPIfeQjR8XNi+18z4WmwLvDR1taio4nC48qckFnQUtKtZ1rRcZfPFZqY/jxQ
M5j7G33p+MV3f6Ww5RKM09/0JyfR0Yj6hyOwYRWaEuLOOJXSMYHJUNNtJWEe
pxVzfSsdLzsPeButUDAmTCx+ZoqO8p4zvXaubOi61CtZSxPFtQwtmSJBTjT0
e5QXoyGKTa/MXN9z8aDs2Cm9A/tFsUJiY3z8Pn5kHtd8z/ARxdP3YkLy/lHx
+48F69+Jouhk6F1xdkYQK63rhkqLRfGlXZecqbwI3myO9L/UIooMXuWi6ShR
9Dfdw2I6KYp72BT03JUk0OqVYJIgVQw7rSYVsskM5Cu7V5RjKYY+xBKf+ys5
DKAv3mr1EsNcyySTx/EK2HvOKnw1XgzdNf1CGi4pYTGyHTrQJIbetpQo1Q8q
KPbQiQgeFcML0zGBPQqqGMZRue4xtzjqJbDZrd5RQ6vPJ5eYpuJIfRtuXtSn
gc81Gv5TcRdH0SuKicPKWqiYwvh0MFocZXVzmhPstfHqQkBFSLY4jrY7Js25
6+Ccfcu9vDfiWKOpZ0nX3IJOdSqx7T/FcbLat/JX4hZ8K3/Zl8QqgQH5VcUd
h7egelSP/UYFCTzV5f+644gO3vqjY2RtKIGOuF+QL1ELSRYJamFHJVAje6JE
aHUzehT/Fi0IlcAx82nejd0bsVXIkNx5TwLV7msMlF5Vwm2BaSPkOgkMa2G/
XZcpg1nds19Ve/+3b08pTFWjIy+x94XNqgR+Ehaw2DfHh/73c7LDpSSxuE95
t8ENFvzBSk58oi+JyRlaef6tC2Dsbnfum50kzkdMC5lEjEPhxzIXlvOSeIa0
41HAhkEQVefbo3ZbEkOqu402jbZBaNIJHdtKSfzUfWXhsMU7+D1XJx3RKYm/
9dYnl6hUwX5bcc6if5J4OsfgW75fHlTX+E51iUjhy44Hupb6aSAv29TNqiOF
gxE2309lx0HcZaUG9YNSmHG0cnFg6ALMDgc/sfOTwurEgE00VU9wMP92MzJJ
Cu2Si6QscxzgzRON0OISKTTXPpF6K9QC1GhxHt9bpLDjaaLzmR8E3PT/acU+
KYWp9ALJLz6bYa1zu4GGAANvFqlkYp8cuOunKjmoMTAXpKI2tApBS8Ykf7QF
A0tipzoKvdhBj2K+UOLJwHMZ/S8+DS8SD1yzBnriGGjKsumfw6Vxgrtx5QNH
PgPlY5kOV8wGCT9V63LNDwy84M0cD7PtIHoSiu46/mHgW/FZiZZPH4ldM5zR
MZzSaOcVZvMo9RXxxNrFu2ydNNYc3x0Sc7+CoFc/t+01lkbq1F4X0t0nRDBD
ZCfXCWm0JvmyBudmEb9CvVS1I6WxQUxWrS3vDrHv5zuRIw+lEQdUDTmbk4hK
E7m12HppjG7M/yNx8gohl3/+d/mgNGqWfkhOuR5KXOFv+9JHlsHBzRYDxWl+
xLTPpufccjJoOnyGcnbCg7Bvj3qogzKoXiNTYWJ5nGjQ7Y93PiKDlLLwlGzV
Y4Rqul5gXLAMvpnJpN254UikrCU5V9yVwb3MMmKWZEMwXcbMBmpksGjy2Jnj
Z/YTJ94aafH2yCDtlmKS8dndRLPKPamtyzI4kPVs9KWmEZFuvELR4JPFvIiD
MuzzSPAeCb4jJi2Laj7jk00G24iLgSRNkrosUse7n77hliVUFG6kDGvKIun/
+R/dozB+
        "]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1: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
Zl8M04GRh3JCOura//9/+h8GjiqP
        "]], 
       LineBox[CompressedData["
1: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
CjbtNJP+BGazKw0OSdFRJSn84tmnXRDkqHHcTpaOXr2+gj5Xe6G8xuqO1Xo6
Bu2ZppN6+uCf1rmPTHk6Xv/t5P/59gAQElJXmynTUc37ReyFK0Pg9+81Gm+h
Y4idb5x47jA8P/Lt9DZNOhpNne6cFB6F+SbxR+o6dHRa76UinzUOhjsM+xT1
6PilqKtDImoCfNL2S8kZ0rEh5UPc5Z6fUMQfypQ0paOw3tsUz9QpmPV4fFGI
SMeDuRaHt8TMgN6nlnxeCh2/d7ek2ubPgjdxbnSBTscV2irPyGJz8Ozhxo2/
2HQUX8/ZHPL4L0yJUa2/W9DR5fRrfauoJdDxPX75izW331eEezldPOgxEFvW
Y0vHqMZdn/wTl+NTZsn0h310vEKwqAkL5cWJvM+qjQfoqPpac2x1Bh9qruNz
rHHi8qHFk3/3Nz8eD9a4XuZKx2LtPdW6oavx0bhVbeFxLj4OhcUT1iI4tuvc
YrYHHQ+/PJXyOF8Ut7xI1c305q5blRsTncTRVanmSKoPHSd6/zw3MZXE+1Hf
khP86HjIrPRIMlEav8yIt0QH0NF544Orld4yeKY0Utz7Eh0HdtcU/fduLfIF
8O6yDadj2AnJgdc26/EGxf+6SRQdz017qQWs3oSbV8+2borh4jUrumVbqDwW
vj8huTKOjjkPl3XslVNE2o2v1qMJdNQUaIp49E4JXeU/fchNpeO/4DliwnlV
/DNsKX3jLh0N842/6p1Sw/DH9Xt8M+mY2apHrPbUQBlPswTHR3REasnLh6e1
8KHBi3bSUy4+SW/+gZ42Gi1ul1F5RsexGKLcu/U6WF/5xHZ1ER21DD8Ol3/R
Qbvwzbd+lNLRvN7c8vc5XRzjpH5qLePiU9R3V7VKF30lZNYWV9LRXWBhTVem
Lgp+irFLrqGj/AcVEwExXUxMEUgKqKejjHnz9sZJbVR3CupyaqSjCDuLcCJN
C19s+buO0cLt596Ta4Vxasj+4bVP8yMdix7ejk9S2ozd+d+SxTrp6O0nFPKt
XB65M3LPrx46Hv+zKOJ6ZR0uQO/6zn46Ou425Vi2S2LUShvHsi90HI3gPM/5
LYJyb5tS0kfpuFOhV3SqnA+fxNA/h36n4xyrUHf9HR4k7KnYeGySjqX9D1tX
Mf5A4zqjAzt/0TFaokYguWYSHPvz0rbN0bH8qTctSXkMJu6r9/+3yD2vZM3Y
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
vg==
        "]], 
       LineBox[CompressedData["
1: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
2w==
        "]], 
       LineBox[{{8.907595365380214, 0.}, {8.917221000983055, 
        1.3469196544070634`*^-10}, {8.950237906415559, 
        2.355070697036037*^-10}, {8.983254811848063, 
        2.3491928101373145`*^-10}, {9.016271717280567, 
        2.822971357027822*^-10}, {9.049288622713071, 
        2.662095947580789*^-10}, {9.082305528145577, 
        3.309439595712066*^-10}, {9.115322433578083, 
        3.9599854572367665`*^-10}, {9.148339339010587, 
        3.71536951628036*^-10}, {9.18135624444309, 3.674340814553591*^-11}, {
        9.18635951921415, 0.}}], 
       LineBox[{{8.278638557557649, 0.}, {8.289899797765479, 
        2.9159218273591693`*^-9}, {8.322916703197983, 
        8.602263616021217*^-10}, {8.355933608630487, 2.208723196324952*^-9}, {
        8.38895051406299, 7.15579698193006*^-10}, {8.421967419495495, 
        1.054778055870071*^-9}, {8.454984324927999, 7.400045055331519*^-10}, {
        8.488001230360503, 7.904372662144971*^-10}, {8.521018135793007, 
        6.229407235939712*^-10}, {8.55403504122551, 7.331857793574847*^-10}, {
        8.587051946658015, 1.2686837548299665`*^-10}, {8.589819811903112, 
        0.}}], 
       LineBox[{{9.415770382753305, 0.}, {9.445491487903123, 
        6.742752842625402*^-10}, {9.478508393335627, 
        2.2310869243096366`*^-9}, {9.511525298768131, 
        3.4483792267497585`*^-9}, {9.544542204200635, 
        3.211017860325244*^-9}, {9.577559109633139, 1.777799670731168*^-9}, {
        9.610576015065643, 1.779335392105302*^-10}, {9.615923251659066, 0.}}], 
       LineBox[{{9.258066800992717, 0.}, {9.280406960740603, 
        2.6534911288473597`*^-10}, {9.313423866173107, 
        5.096604797127507*^-10}, {9.34644077160561, 
        2.4160553089259074`*^-10}, {9.375568411084593, 0.}}], 
       LineBox[{{9.671570334704805, 0.}, {9.676609825930651, 
        1.6584848133930266`*^-10}, {9.709626731363155, 
        4.0870377123324615`*^-9}, {9.742643636795659, 
        7.309846526081069*^-9}, {9.775660542228163, 6.245163095538081*^-9}, {
        9.808677447660667, 2.0864764037385785`*^-9}, {9.822914207012753, 
        0.}}], 
       LineBox[{{9.938385877022158, 0.}, {9.940745069390683, 
        3.8728645058330333`*^-10}, {9.948242059946498, 0.}}], 
       LineBox[{{8.194280149386191, 0.}, {8.22386598690047, 
        4.997141022660673*^-9}, {8.239386538212353, 0.}}], 
       LineBox[{{8.713151694462205, 0.}, {8.719119568388031, 
        4.13075994562702*^-10}, {8.752136473820535, 6.547204394560314*^-10}, {
        8.76035003508112, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwtl3c014/3x+3svef7/Y5QMrJCXvemzCgkslfZZIaGShTJSIWEFA2UkfKh
FDKK7MhekaRCSb3tb+d3fvef53mc5znP8zzn/nMv2e2E5XE6GhoaCi0Nzf9p
8npejmQd0fRXxIaHlhsNgx6y+HvdAauWXy+p/iS0mFBIlvMqAReGz49kRSRw
k6HelCPpPxBzybQSsBRC61vzFkxeNUBVaTKWp/DiR8Gkos3cepAcG6Z0rbMh
nau04lriWziaWxZRkciIO4telFJPvYfAe6GTx07T4NElc9Ulzw7wUu0+8WqE
Cm/uLA5GFHaBHG42Hgn+BX0NhPjf3A9whvLjd8zyLHz/Gu8Ylt4LhquR2uMJ
k0DH1ZuzmNgHc2k5ax90h0FYjTQeFDMAdXruITdP9ICirS954dQQOGUW1Vz+
rw32R1W4BQSNgNmhisa02kawzaPN/+45Blec1ORD2WtB89iDYPWScRAUnT/6
36f/4M2fA9dDCyfAjyp/OXy+DMzif5aX3/8E7GS/u0JKRdAvlt7zK3cSvDI7
bRda8sG9eM+SStYUhKW+yLDjyIU5/CQQlP4ZNJ4+aTxLfwsiPlzWKE2dBo4g
/oqnhdeB3mOnzXziF2BMnSgVVUuGJGp3uGL8DBzQLdOfoMaBcEJEhn/MV8hc
WE4OlYuBPAnJqsfnZkHvo3fciNd5UCytH/h26hvoa0Y10y6cgio975XtJ7+D
dmEV44zxSdjfyynmE/QDtklpqIWlBUOH5zOdAr85uNjX4PdG9wTYrdg6zHjO
Q+dZj4T0EB8Ibjr3+rrKAjjlr/5yT/aAyuTug6olC+Bu9khq2sUd1o/KjHUr
/AQXz3THH29cQI8ScSK48CeUPXvSLa3iCHHfWjZ55H7B1MLRb5lpttD2TCKl
7P4vUC0hStpTrYE3KpBksXURDENGNPpZrOCoYX3pQu4idKwGmER9toAcbsG9
KZK/QcNy0Y6G3xwmB7y6lLJ+Q4NC94IFpxnI5b107RBZgoOut3bPeJhAgB/n
r4D0JSgeMFElSxnBM3XXaE6BP5DKl/u5S9YAljfKeYtT/8A73ij36ND9QLxj
yjPj/gvmHMcv/VjRg5hrtqo/Ev9CJlrdevh0L7TYPa6/ykaFmjN8o89vIHBJ
bx5WiKcCRW524LIGgNUPi6n3TMvQq5guPBGtC5kV+aG+Mcvgy1o7aca0B8bO
/WVgo1sBRZSPplZpg7Sxyc3CcyvAGOV4WypDC3x4s2VM1lcg5j+d4Znbu6Fk
aP7511OrUCTHwqFcpwm/8/UM4qmr8CKJXfoUgyZoB9z8KHdyDXLF+9x63DTg
nOaMx7vFNbi4s2PHywF1aKDR+esZtA5JNDZZ/J7qwNqSeHnL/DpQzugkiLOo
w6Hr40IP/Tbg1FR3utVrNbjhoPrIYHYDKn28OKJi1WBQ5tLuac9N6L3wISDV
UQ3WpWPGBBc2YXd2m0XIfjXg5t1bv3UPDW7j1/nhrasGd3lqBfecp8ENZe2j
/YZqsIsHfKwaaDD+8bZqC3c1aOB+/cqPmRY9Cu/zpyWrwRFuXZ5YU1p892m1
J6lVDaa5qo9lp9BieYNqp6moOkRw6VQ+76HFAXbybabIf/25XrC1C9Mhl81U
mNBXdbjNqeU87UCHYs6DbRs+GqDAWfl0I5cOmQvKbJw3NeA1hyaT0Gc6/L5u
lUnzUPPfXitsleTpkSXPxLzDbTdMsKs/MfSnx/2h4bOjqloQzP6MxqWMHv2d
nEt9xbSBgV3VKmKJHvOk+I2GRXUgje3pwxQtBuTJryluUN0Dsmwqq4/OMqDK
2ETBV09dqGQtPVhXx4BDFSUtelUEmLAq3RtgZMQex29vaQQQhlmKl34aM+K7
qaZU41EEf5adxqxJjBg6apDRXbUXUph3LGgLMmHAjem/VU/2AYW5cN9hOya0
cXFii2veD+Vb5NN9c5jQzOBy++kNfdi/5dHsxU9M+PLrlFDDQUP4yCRLZG3b
gkXqOUfeVhuBF9ODa898tmBB+rV12QMmsMwo87m1eAvydgW7tK4dAHHGrVfX
NZixmdyW+efjIShmuDcmcJoZl30vXfChtwBgIKsq1jAjn6lnppOaJXTS514y
oGdB5zktmSfnD4MbvdSgkyELsheVL07MWsFvupyd4Qks2GJk09AeZg2xdBIX
kjtYsHdIoSBB+ig8ohWTq7VhRafInmn7VXvQps083X+bFb9tLvoa73CC9zQi
HQtjrMiWWTbiaugCDjQZFBZpNvxpvtzjftMV5jYFT5K92PAk+4lldzp3OLd5
s1nrMRuOS5sGuF07Btyb/BKWC2yYVn2kv0TfA+5tXA/0UWPHzdwD5bMUL1Dd
4G2IjmBHDU2dDd6dPtCwfk3odjU7flSObU7x8gPrdW7fchoOvGrWeUhtMAC+
rCW/fr+fAy0y40sL6gMhYo2TdyqOAxVqWnSntIOBdS3x+ForB1Jr5t+t94bA
7VX2Kn4eTvS8ujEfnREGCqsJ7DuPcCIlm9JkcykcXq+wuujf4kS3v+SyurxI
MF+JL3cc4cQzsmaqZ5ZOw8Qy85aTZC6spwtMfnw+CoKXL9slHefCK5aOKefv
nweGZabiBwVcGPohL9plZzSkUWNpa35w4Ur6ur7b0EXgPxNd+E2YGzXjuCYP
lcfC8Orenr/a3OjbJpxvVHUZ7p+m3aB35Matn3kzhn7GQ/Tvt1fbz3DjqJ99
Qp/GVXDxTxK7lcWNT4vy8mpKk4CYtip0r+bGhM3acxpPU0DcWUxLcZgbfWj3
ud3YkQorfRNvqavcqCdjVm/79jr0mT+yrhfjwYSjG28fxt2EVD310KP2PKiX
WFPUGn8LAl+u0m09zYNlzca7nbpug5nam2s/MnlQKtD3D9UsB7Y/iSNVvuDB
iv5oZoXoXGDedqgkepAHrdo4ItrX7sJ0jgBhtsKDycvFg49u5UGD0HCrkCgv
tlAaH1Ta34dzLN6zj215ESdZ8u44FIBDtFJkeCQvNu3/Q/PoXhFory5t0bvF
i7ZV62lm4sUgHFqdxl7Fi+PVZvYzHqXw53u0TF8/L25hyzIeGimDnuPGz+5S
efHmfcc597ByKBvl2ucnzIcsvFF0W5Sfg19nlgvtUT4MLAxp2itSBSbG7vPv
w/nQZMT0i6fZS5B9Ix+Vlv6PZS03/yt5BQw6C+yu//Fhqj+ExZNr4VN5xe0d
fXzYRZvBIhtbB7UKZ7f/+cOHSrIjJB6Gesi5v6+qVpAfE5WvWF+50wC26Z0f
j1jzY3u4WbSz8jvQ4E4/TjrJj32iQRfUZVuAP97x9+xNfgzNHrRw022FzlOz
POd7+bFDqFt20a0TihdLc02W+PGhs5pER2YXJPiFKwkICKBY7B311LFuMHBi
MCu0EkCPgvHXi5d7QbqvZSg0VACjNzJiJKY/Aq35NR+4IYCKLYlqagb9UL1X
Mq7ngwCKpFo+2L4yCJkvpgTvLApga421WO2+YYhQLbrvzSeIjjFWJSynR8D6
cZCamqogSn/RFbiSOQqqMrvrNywF0Tvz7PPd2WPAnbNh0RwsiFwjvmWhMA5z
go3j11MFcfjVy+vWOePQmpxwwumpICrLMsZdmx2HQmbLDbluQXT9CZsHpScg
7oJw4uJPQQyKuWWTYDoBx1dGxV7zCKH8xyMtS8cmQC/kfmGcihDy6r4wqjwx
AaTvvlqHLYRQoS53l9o/3ji2651EkBC2bZKP1B2fgKERqvVMihBudPLtPHVk
Aiqtaz4/LRXCn8MmQpI4AWkdsaFnO4Ww34whn1l2AkKNTOmNFoQwpGCXjxbb
BFjW8abycgvjkKy+/rEf48BRfqfk4SFhPBj48rXLk3E4Kbic0R0gjOcvzEZb
XB2H0UjL6PVEYeyMOumm4TMOhiNFvnJPhNHHe9Hsm8E4lCLjkcOtwjh8kWlZ
lDIOwvlORNQ3YWz1lCPb/hmDC1sqZQtYRVDzzNhn83tjMOvDw9MjL4K1F9dF
pfTHwLLdZ2XDSAR57dp9jAZH4aVKw6S8lwhO1iVs7LcfBembEm1Wl0XwYUyc
0OfXI3CVerLi3AMRdHzrJfOVOgxL9p13ChtFsO20E92JlX93c418fO+UCCYy
PRXyejYITZSLwTQMohjbwGFaKjEASpeG7XdsFcXPMRqHlHT7IOOrur61nija
R/5Mr1XtBRqzZMULrqIYtdInQdX+AN6lM0KPz4sim/NVxYnkLujm06PtuyOK
ddIVz4oPd4J2+O1Z2hpR3Ba8Wrb7bzvkDf7+oDAqivo+bK6Cz9uAnTj4ymb9
nx92/dKKfyuE3n34IFpcDDlXC94Kv2qBEQbalCc6Yng4ci486/g7MPCyi+y3
E0NHkdo2kksjFL8vd6M/JYYOrCFU28E6EFLiMFW8JYaNUdt3KB+shvOpHuq2
lWLoU2PAb6j/HGaWaiRj+sSwm5X1QoxdMVjYijCX/BFD8ai1L9se5MOL6uCf
AwLiqJXQG3D9VyZQSK2DDOri+PpXU1LMWgokXJRpULISR4+tk1cm+2Lg93TU
E7sQcQw13raQxBcJDib9abGp4nig98rzhLf+0PhE5XxpmTg+dxDly0pyBUWe
BO+hTnE0p/8w7frICtJCpyyZFsQxN0zjPa2dEWz26e5R4ZLA9ILS4HcDe8BL
J13GQVECSWnc2VOaKtCZs8B52UwCU0vJ0q6vpUGLzoRa5ieBY9Szru56InDv
eN7EcIIE/m7L0BgR5wLW5rWWLUUSeCC7Wt3sOD2EKFg/29Xy7++LF56jnqYS
w8kl2Y5fJbBrLmSB/tA8sX+R+XIcsyROVrtdzDKYIp5YuwWWy0qidr7olsCM
QULwxUvbUQNJTG2eWjlb1EVESQjsY/GQRAMNrtR3794SX84HKKjFSqLc0FzN
oFItYT71VsA5XxKvhstGMOhXEJWG5M34ekl8EKsx2rBQTJCLTs08+ySJwQan
too4PyCucPZ0jdFK4aOAmxnXcnKJX0E7X7KSpZC9qisxMzWDsO+9lK+OUjj3
6141ueIa0bB7PNHFWQrTVxY1D0zEEQpZWuEJUVJoSKM0HXY6mri5mepSkS2F
1Wpx8u2Np4kNt+/GE9VSqLY9x/W7cRjh0aSvyj4shR8ppXeUHAOJDvk74pqr
UvjXhvijnO1NZBms0alwkDD/842D7qLHCHbnqExhSRKGeC/IO4Q6E2fCaXbR
KJEwYtBunLvDgfieHN38BUiYt/Q9uL3MhXB4xODaYU5CmYwd0k3f3InW2kvU
ClcS7rs7oi+kb0HsGWBOyQkmoaAZ25d9D3SIxz+vyF66SMIr7ZyWMhWWhDgr
R43/DRJ+8raZ77DTIK5Skq2P3CehzauJPzusdIg1bZ65PRUkTGkq7mfhVyL8
Dl+PlX5LQuOpwbr0JFVi2FdAgr3/HwfIFDXZ7iRMY9KfLc6QsLrsVZVi3A6i
OkvEdGiZhNItd79Sm7cRCs9vT75hJePcXbe+IkYZIqtN4nShGBlz3zCfpP9F
Itin7/CmKpDxnZY1y3CVNHFmg1wYqUvGpMPM0lxiKsR3wfy9rgfJaNH4STxJ
eTfhoLRtwMiZjNbdpIZPKypEq+GjQOVAMvZFBlGHbgkSe1y2MwtfIKOpq6G8
1VdO4nHE4zub18hY77xRv9CpTIhfU9T8cu9ffthHr/yrO4mrBaXt7eVkpLq9
T6pvFCXW6nZ5VDSQ8WYFt7R3kgThN/hsPbuXjAdERTb27uIjhn9p3IydJmO+
Qk6nrQk3YcpWpeD/l4wlD0k6tWQuonqrToMVMwUz6hptzq6zEQp7XtnvEaGg
JLM+5XE2G5FtBYtbt1OQprTZ/oYSM8HpX3eFTYeCzz+XMcx/ZyCiYvdRFg9Q
kOyQqJToxkjMZTdWDTpQsPJKzuLzXTyEU4WhxRt/Cn6JPjNnMidAtLc3zxRE
UfA9j/vhB0f4CeLLgfPXkilYMHVMcE2VhSjebBOKzKVggNh745SwTV1JYfMS
lzIKLi/ZfpkrZiWSlLsNjN5QUIGF58fFVV5iw8hqVOkDBYcf1/lQSfxEgOvH
MKEpCvaPveeJJv/VrT7XUXrky7/+/z//A+7eL10=
        "]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1:eJw9WGk4lgu0NeYzyxxRoQGdwjcP7/42h8gUKUMUQskUynBEKSSlQjKXkohE
UkJSQsocTmkgRZGDMivUdZ/nPnf/2T/W2utZa/3c6/Yf3unBx8PDo8rLw/O/
O2APR23Omow8/zeZpUFDPbvIaHLobERbGBmqHSlrbPeS0X12/aXa9F3QKzhl
2+VBxvAE/dJ4E1v4XVJ6wcqPjM25Sc9J1uawZo//89ZgMsq+q7sZpGsGKLD1
t+kJMl7VtJnbI7cdXIvHqC9iyXjftts9Kp8Jp+yLfI0SyOirpztQtYcCN/i8
bz5LI+OBPx19ZxK0ob5Is5d7nYxtLwdfm3asgy+2w7KPC5b1y3PLtEJVYAVv
vjnrHhk3ikVXDN+Vg423PaIfVpFxZbDuRGu0FJjs1qim1JGx5+CSHOm9KBz6
83mqtJmMX9O+TQwNCsHZguvaW7vJ2CFx4fBxM34otHFxK/pARoOMuxOiexaJ
5iXVTM0vZDx3EvWs780Ro/m9nXljZLx42PSiUvYcIbYzS0RjdtnvJM9SVfBP
4q/FPQbXf5NxZLNd3uGkX4Rl3qowVSEK/qBSZeaG5onDVj2lmZIUJBrt5O9Q
5oiEXynfFBUpqFvcF/45apYozd29LmUtBesVRDO7X80SnZayDjKaFKw0EhjZ
WjtPTM13JiToUtBZL3BXSN8vQvZG4gtxFgWN21Wa9xotElQLK55zBhQ0skCJ
mkOLhO2cBINkRsE9yjXaqY0LRMj11sMxNhRMSvB9oK+9QKSZxefzOVGQ8mhz
w0jzL6JyxvTjCXcKmjilfhyUXCDeZQsrLPlQ8MtxdTo1bYFAksjwt6MUJKtY
1HBKFog8f5HK1+EUrJJLWrEjaYEQeytyti6agnBHX7wjd4EI1Bd1vBtPwbi1
oH5wboHoKRDdfCWZgkuktxM74hcJkBZbisuiYPvayamTHkuE6IBYtlsRBZl/
ycY6rPxDBJqJ+1vdp+Dj8NfF//T+IXrKxPWJagq2qqZeNbThAVgtIa1VT8EX
86Xif+7yQG60xIB8CwXtXaoqOHy8IDImcZ+/m4J6IfKy4xa84L9bMubH++U8
XlGxtLu88PqxpG3vAAUziU+Ll7bxAWeD1Mam/yhY5GnOzfyLH3IuSM2XT1FQ
e4heOeYmAKQ5qZc3FiioNCu23rhBEPycV2Yk8FPxQDqfc5y2EHQ3rvSOEKWi
hAHjOgSQgKUjzfGSoWKKVvHV9svCcC1NWtxOmYr3g29iRpEI+B6SKdHRpuJM
Dp/Ygz4x6H4lE6lCpqKhWS3/xAoJYLFkrUXYVHweOmLhvk0SruXIqs0ZUDEz
x7CGf68UrBCVmxowpeLrzT7Vh7grweeIXH3HTio2bLmd17RbGjrfy11+vIeK
vTmWShqXZeBqkTw91YuKf9vEm6my5UFAToEUHbjMv3vh3aZwBfCKUHjrH0bF
IUsFl/GHitDxRaFw7ykqemzv+hH2ZxXQLBWPmZ6lovPHemEBN2XIKlc0pydR
MW1xOnD399XAt2aVikYGFc31b2SxUlTBM3bVuFQOFe2d/k2c2bIW2r+verJU
QMWwhNUCCZrrgGavlDBSSsWvyrB+u74aZD1Vcn1TScUxI0xTCVcHPk1lvfpa
KmYd6Nyq8lYDPBOV+UtfUjF1ILgyx3oDtP1U7r7yior9O94yhvs2AmX/6ptn
31IxFG6WbgzTBB6yirH7NyrOvgvUDenYDAcyVRStJ6g4ec/tW13mFmjhV/1G
/KSiSbWGQ6ShDuj5qFZp8dJwyOChz0MrXUjvVj2nIEzDJt2GAtdgPeAh1jgJ
rKThzvcqGdIPyHDg5pq/JhRpKHy9p/WpOBX0gte2N22ioc/8ym3B0gxI61t7
7aEODW/fLfp4vZYJv7etC8hl0DBp1EvKJIkN7iXrDBKRhiPDNYvnYwhoUlCT
OW5CQ9NCspN7Fhd0ItUGvaxoeFNJa6r3P4SUYbUHdvY0dKt4e+PQagNwq1S3
0/WkofsR4Y/NTwzB58MLmD1MQ43neTbqutvg6B/fDY9CaGhyXPdb1hNjiFCT
kYg8QcMcUovLO9/tcNqoYsYwloY/qqSXXAkzuOi5t1f4Ig17g7MUyToWkHaO
r6EthYbhDtmb95nsgMJX5sn2ecv57mmbps1bQ9n0xDGVYhra3por+Pi3DVQr
pLp9fkDDz0ePiX3J3wUNLI5Z/mMaJk5sKqvaYAttez/p+TTQsH8u4GPgMzt4
E3laSbeVhjtcX3SuiXCA/hvafLPdNDw9qBLRYu8Ik9+CXp0YXO5H9Gb4TIQz
LIgpVxqO0lCP5lTAN+QCAjpPrwlP0/BlWLbH4/X7QdzG40zbAg1bLx5hdYa7
gXywiP8lfjrSrbyr+cfdYU16iZ29KB1PyVscTz52ADZV7+KqyNCx6I+WxJON
nsDky5bIV6Njz1P+7qpBbzBYbzjrrUXHnR+kb83/9AVTk2+9Onp0bO5Lvu2l
7A823hcaZph0vLdvDTlgRwA4XSDfqdKnY15r40/JzEDwKO1JPrGdjhI+93y3
8RwFv+6IcENrOlqF8S/JnAyCSKUXZm0udGxierKO9IZCHOFLvuRJRz1pd/ez
j8MgyUVa2d6fjiPPbtY8eRYOmVEP+VRCl/M0DgUp/jgOuXlOI59OLPMtAt+b
50bCnZe8nXmxdHzvqG2XO3QSykfzKr0v0rGXd4j36t9R0Kg3cWbmKh1//6YI
jlucho7dKf5VeXQsaRXz+c1zBnpC2fYniun4XLdE/9W/cfAps59rWE7H6bLM
DfVt52CkJmajcA0dmV7nN3LHz8PUJy3JtgY6fjXdM1upnACLAh2zSa109OXd
MS1plwgSZkrPV/cu99vit9F3VTIo+D2582mQju7O6hfJuZdhbaL75bxROkY4
5KXvt0gFzfvCEd7TdPyxV/V5vEI66L0pdtdZpKPR/ZkWhmAmsH/ZmM/wM9A2
bpOM2qorYKjyk1wlykD7j3pGdrbZYOv2N7+hMgMLDl063bg5B5xPD4+Q1Bk4
/pQ31vXSDfAsON/ZqsXAHHbssxdyNyGgRa8qSY+BzXyy+uTyPAj7/ua6HYuB
wUfKb3wNvgVR0hFxqw0YyNN0OcN/TyHEU9UCPm1nYEX4dGu4WxFcOeaD3g4M
NBeLjPkZehcEdoYz37oy8EBi7+yz96XgtSlez9iLgTrfWQsnnMrg1e9M7QeB
DDTo84PCpfvA+Pe2hvoxBhrnxzCWassh+/YjlcQoBibtNCMOFVXAilPN8n/O
MfB7elyKzNMq6NryH+l9FgPva9W2UgOeAEtwgXf7TQb+LG6z1BWthWvvRRbK
7zBQUMnIdXXYMxC6pzStUc7AkJeJtHKhevA7ozWWVLPsv8aYP6y8Af7dx/rK
08hAgRT3owpxjcChmn70a2fgYfXDycGnXoLw50OvTPsZGKNz4xj/bCv4V/zT
VDHMwNq2I59j2B3w+kJc3YYJBrZoDquapbwCwiO9OvknA08129N3iHdBLrvg
AR8fExceGqtU5nSDqHRlsb8IE3enMXJa7F9D4PCL/D5pJj4zotaN6PYA9/Jw
epU6Ex3S2ZLhdh8gz3s+adNmJg6dMtawKOgDMQNSfAqFiV45MbOHk/vhiKJi
jADBRDkNS8bF0U/wbnzj8UAjJva4PCcf3zcA+g30kH4LJlpvGr1U+d8g3Mo0
9re0ZeK8lFvGo8tfIcjk4H6tg0zkGc8aqDEagQ+qIY5ph5nItrhX5GI5CgYz
p3etCF3Gi8PXz4SOg1RO3rbPZ5joLOtP5GZOQEhoOdcqkYk1Wwp9F75MQp/l
c0ZNOhND8N0adYNpuL3wRSujkImP2fu99m2ZA+nOGXVSGRNLpB8e7queh9Bb
girBj5i4hRO0YcrhF2zbvV5yZwsT04wFPmtXLMGnYvcp4XEmTooldl524OOa
xBwdDZll4tlQ0yYRCj+32DH6y5ffTNx8aYdOg5AAV04vuc9GiIW/usb4t3QK
cMNJuW9qJVkYyvR5W5IgyB3oK+vYqshCgY+SBe9xBdf0Qd3LK2tZ+MePfy60
fwX37rmuZ6KaLLxwXI3zwFeIq7B/4NE/uiwEecUW2pAQ9zhj6v4Qk4XuEBOk
a07iDkrwF+82YKHkePOBuCwS1+yLdH6dKQstaxWHS3pI3HuP1K7p2rAwOlmu
qIFXmLsqSS8925GFftaUFKtVwtxIT4MkcXcWdnh8VyTWCXO/ws5zx3yW9eT3
uWUrC3Mt5PZHfzvKwkfqPiKpIsLc+YIy+cZwFtZRuhTpkyRuLggW5EazMNGv
6iKzi8S16rJln4pn4fWuf7Y+KiZxFw/eanVOZqH6l5XNMTEk7q3Fn85EFgun
ko/Ma9iTuLsSzSaVclko4uzbPLyRxC2qGpd/XcbCsp/M/7LqhLj2O7Cg7BEL
gwKT97DihbgCg4nsxLrlPjJVHojsEuI6iVNdzLtY+CSV/OvOcn9iLscKnk2y
8BV17k/tmCC3YrqFfe0XC5/TnBsv3RHkuseptkXwsXFv43q7H16CXClVfxdH
ETaefdHFtNYQ5Fbfq51kSLPxJOtO9bFuAa6nsUyMvBIb+fds3212QoAr+8Fd
YXodG/s09SIrFQS4T/3LC15pspHzsj1SJ5mf6yNI4pTosnEI7CdrBvm4ihkO
bfFMNjqmbeM9MsHLrd9y28VLn40Lxouvla/ycP3rFieNt7NRB/8te1K0BKvt
LWPWW7Px4eRXF0/7n/BiNFuB34GNxe9aH+cMTMPRkxMF/S5sZF03D7hFnoC1
8n9zajzZGHpH8iv1+Bi0FCa3ZfqzsUr4Q+u28yMQyv3q8k8oG7+YjNR5HxsG
jW76lG0kG/Pjbc8TPl+hwzMuhnKGjWF5DbzqvIMQvvROQTqBjUohm5PPwyfY
lLS58HsqG8fqD52/9PADdG84zmnNZqMfaczr4l9vIPJRe1thPhuvNgbyBBKd
sNlqneuZEjb6Nq8H+bUt0DMYOOXxcNn/k/tvivY2QPQ/9TF/P2Ejc8gx1VPq
KehIyCuua2Rjo37/qiSeCviQc7DwdxsbnWL9Gmx6S+EMvZLz4TUb5TOcOUFJ
hUBpEWmv7GNjcsO2q6P1N6Dfxck19Ssb2cMlKjMnrkD8zJ2po+NsbH0c96lA
OQUYZ//E7Jxlo0KB5A/T3AQYVLVW1Pm9fH++s+WKbhwklOUUiq/g4I+0XPbA
1ijgmExz/hPnoEHmQhN4R8DwB6P2F3IcVBbNrt7yIBiSA1Jd81Q4OLZexMMk
LwBwxbepqPUcXG0S+abrhjeMZrBOu/7FQcXKwp9djR6QtjVekUvlYAknKTrJ
whUM63sLVxMcjMpUHX1a5Qg/7LcSvww5yJ+5dHTEwhayxiLb35hzcPqt6+eL
ejvB5FSn64NdHDzhM7QYEWEB0/Ia00lOHIRFHZEOjglcux102t+dg/bWZwsb
TxqCGTYqWvpw0PHRaOztQYRdZ6Kqu49y8GntzTSijA37OrgujhEc3FP9Rr/r
Nx08FRf5P8dwsN/tfdj9aDIEulTke17g4Irdg9MGA5oQfuuo2fcUDs5aHBT9
Bmpw+ofO96BsDiap/eq7c3ADJDDGkhbzOZioamU59EsbMiILaFF3OWikqKQc
OaEOuS883glXcnBfR3XdOQthKJZSO55Qy0HPkPxtWl1SUGHft06hiYOc1kLv
sm51qL2W0XClk4NSnWSjPvXV0DRse0jjPQepxJbeM2Rp6NaREb89wMFDS4n3
ZCPkoS+0/a7uKAfPlpytZd6ShuGn53ZVTHPwPstyqD1DHCZJJvOwtIxPX4Yc
cQlYtBLIahAk0Pl01FrWiAisSH/KNZcg8FKjqP5+FxJIfgof6JQn8IdiUazs
XiFQ1GTGOqwhcP9wkJnEkhCoBcxo9W8k0HZB11ZCfgVsrixtO6BD4GmhoYZ1
HXPESqemWCsG8f//nP8BwF3VVQ==
        "]], 
       LineBox[CompressedData["
1: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
yGd99uguDfp2vpzcav4J1UVFcj3wokG1w7n470vdaNtNMed7PjTw3J5ywLHs
M2JY5nfc8aPBtJyWxkzsF5Ssi1VcAmiwpXSD2dKjfjSxr+XhuUAa7LyYZL+r
cRC5zU4xKaE0sFG9Vkcnj6Cqjlvlx+/TQOLChMVS7ijaXLplJ4qgwXpK6TSb
+H/IJCH2jvIDGoTfjpnOefEVxd2VGpR+SAMZneHb/Gcm0IhdCYjG0EDc8Sv9
nuokkjl+JIUvjgYjPvsGCmWmUTm33dm1RBp8TB4srDwyj9b/+l738zENBNbI
FtEe39HJz57S35Jp0LXO909I6w8UWckVNJBCg2iXibMuWgvoy5PHU51pNLhV
V/MPv/2FJPzlDBsyaFB7f3lGyX4RXXCqePY6iwa/Ip1ORx9YQqtKvc7ZuTSo
kDgVuSr2F+kLOnY+fkYDysv22/HMfyhkZVElKp8GUZ377rn3s+CuQf/owEIa
KEtdvQqS6/Gumu1/PIpocNXVJcjyHiu2z0ozdS2hQcz+LU96Nm7Ez0KUXzmW
0WAb668r9cmbMKKRPKgVNNgbIpGjorEV+2sODZ54TYMxcYu7bzQ5cMuuy7q4
igYzolGTY7bbsMD6tRSVahoEXyrRNTLnxqe/hmyQqaHB6O9DDwQTeXBWo4j9
7joacOXUFPj94sXzz3Lq+d8T/ul1ZnVz5MeeN94H/WuiAc3el+VfliB+b86Y
XvhA8Mns1vE1tx2YG74aTrbSYMHP4RjpgghmSlx7PthOA+bTp/ci/XbhJ5s3
8HzspEFC+YS2d/1uPDkdebXxIw0u5QUrBwiLYaV2sa433TQ4pG/MmnNOHFfH
4ZicL8R8Ud7F56R9eKtHy5+kfoIPvXb/ic9LYrKtpdnDQYJ/3VzL2/OkcfzR
6VdBwzTYYO0mGhgkg0dlbu/yHKXBm4N8FdFBsliWa+vda//RQOjIMSGn5/LY
9WfskNM4DTQGa0KS7yjgDRUlqbQpGhx70MyesFkZSxgmn7g2Q4P9iquOZ++r
YP2BwLmoORpodi6ffamkhs9cdnlY9J0GkTLW0pwL6tiHxVK76ycNTp7Qyajv
0sQpEUeHf/4ieBNUT1P7pI2rxRUC+P7Q4ILnE2WvpUN4/RHWTvIqDXrOawml
UnWx+Kdpt6trBF+MPyheSNDDeg6fRCNZ6JD6kvWR9MJh7BWY7dS+gQ7H6iWK
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
        "]], 
       LineBox[{{29.428182196849978`, 0.}, {29.455504213453864`, 
        3.116067890642505*^-10}, {29.488808650583014`, 
        4.231471703296695*^-10}, {29.522113087712164`, 
        1.1617128253695026`*^-10}, {29.529804549963952`, 0.}}], 
       LineBox[{{9.591736677994804, 0.}, {9.610576015065643, 
        1.061278570725537*^-9}, {9.643592920498147, 2.352257104557656*^-9}, {
        9.676609825930651, 1.1753902560491355`*^-9}, {9.68547170257837, 0.}}], 
       LineBox[{{29.636347044787588`, 0.}, {29.655330836228778`, 
        3.9226181744595277`*^-10}, {29.68863527335793, 
        1.5453586984099096`*^-9}, {29.721939710487085`, 
        3.229873958137798*^-9}, {29.75524414761624, 5.406405877875687*^-9}, {
        29.788548584745392`, 7.444523155662623*^-9}, {29.821853021874546`, 
        8.541639641348703*^-9}, {29.8551574590037, 7.894668987240975*^-9}, {
        29.88846189613285, 5.165488251817107*^-9}, {29.921766333262, 
        1.696404550354041*^-9}, {29.944354189116563`, 0.}}], 
       LineBox[{{30.023635784805894`, 0.}, {30.054984081778613`, 
        1.869463605005272*^-9}, {30.088288518907767`, 
        4.307276871304661*^-9}, {30.12159295603692, 
        6.7770413684363595`*^-9}, {30.15489739316607, 7.75582455108717*^-9}, {
        30.18820183029522, 5.6862596134404546`*^-9}, {30.221506267424374`, 
        8.618160660008277*^-10}, {30.227453632538545`, 0.}}], 
       LineBox[{{30.36146596560324, 0.}, {30.38802845307014, 
        2.718914388122452*^-9}, {30.421332890199295`, 
        5.1719397908783996`*^-9}, {30.45463732732845, 
        6.651217811901213*^-9}, {30.487941764457602`, 
        6.220456405789914*^-9}, {30.521246201586756`, 
        2.9798528339919718`*^-9}, {30.541186824353026`, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3c4128XtrPKniF7773Psb9EWUk0JCtRSCUNIqVC0iA7P3vLlhCKUmSE
rOzsnch6vX99rnOd5znnPvd9rudzDp/jFUtnEiIiInFKIqL/f/mf7vyXyPNB
e2P8/CAb0QYYeWdQebolQbBN9XPS9k2wGJF8KupWALAkUFrz+B/skTWYHowo
h4Tpom2Wt1tg83rRgsKtFibM+/ufz29DN2tEzl5yAzyvYud6M7YDJOcFpbfD
m0Dg4+cfry/tglROVeGGfwukmP2KNnuwC7Z/zBX+uLaByOtLbhpHd6E+abXP
L7sd+pSCPeh6dqCnUZvrb3InROiEXjmhswNz04/OXIv+AdPxk6S1r7eBhO5H
4mp4DwRyCI0kT2/Bqf+IU+dcf4FcgjjHD75NUHFK91EqGIYCVwl1iusbUL9+
9Llv9gi4mft3zH77C72Ho7tWksfghf9Mc+ijdSB1kTq5GP4bzrI/1miTXYOI
jY4b0o+mQPmpcO6F1FVgf+IX43l/Gt4XUEZWHl4F6cKGn7P+sxDW+znegmUF
7P6dOj3luggMChYm7+SWwOdTQM3z/e+Sq+/lrnuLUPG045hCwRKk87P7WKYv
gC6/3xWf7GVgcm9NoySeB1ujhsKl5FVoNo2AA5vTkEjPqhPJswY3rTuOU+lP
w9hPt3aZ+DWI01Se//t8Ci57HFq5HP0HxrjiSJh0f8P9Z6cU5sP/Ante57N3
nePwxS63IYxmA+SHCc6vdMeBTnDPSvLRBsj+uvPCqXQMYstSfS/d34RrovkN
numjUNC/WDrtvwXrNGeEzxUPw1qqruGjjS3YoScW2NIeBvXLL7tFr2/DzqO0
2/fjfkEjkcZfV+8d+DXRp7o2NQh9Qg9UJ133QK1SqPlVcx/sCN7/xbq0B7Fn
ZZev7f4EekadBgFNIly8difMRP0nyDOAu3UjEd4Qff2Mr6EHGulr3ntQEiOH
cQ9RK10PnKDXYggxJUZNS4+ehvPd4EenUVHaRYzcYUds5pl/ADVdFU0rOwm6
2Ve/7brWBXGH1M5NnibB4ivK7R79nVBzUIWCbYIEu1ZV2vlLOoCMVsHa7w8p
FgU3zlHEfIdXNG8zItXIsJyGpPYb53cQoZHbyrxDhtT8USFPdNvAhFom5Sc5
Ocbme4WUen+DAar8P8vG5HjmIO/O/edfwZNKypg6ghzPlZ/IHnnXApGUEkvq
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
S2nih5IYga86ghgjE8YOSpq4RzT1/kKJAOo3DmZzaWniWOatv13iAhg/H9jW
Y6qJ4XEpUv38/HgUm9iPeWhiwUZ4X4UmL1qHBld3+WpiV+g3w/XgI3j2OzjY
39HEnc+uElUvedDHoSLDLUITyXa+VQm3cuHtTN+ji680cUm7tNFl7TA+WJJd
vJakiTapJ94x8x3G2MAs5eBCTZwM7X21GcaBqc3OfVSVmnhFjTqms4Ud8+n5
70Z+0MRh9lvJ5+nZ8UNy7MeEDk0crRsrXshixam6J9YVa5o4eEZn9gInM65Q
Eja0dzRRgn1s91IQE26bk8V/JNfCg2+zBpYWGJFu5PZYB6sWCiZ4Gs10MSC7
mNrDU0e0MHl6bpD7GAPye/8RHxbRwnvKH1+bttCjMvFln3lVLYwmop01TKFD
NBZn9dXRwpPfL7oLFh9Ck2eTlf+MtZC5iWDN0HIQz/KdI6a018KzHMxfDelo
MUTHPJL/jha28XAVZI5RYsQjWsWsEC2kWvh3LEiEEmPam3tkIrTQ3wzlZ7wO
YO55nSNaSVqoevHe+nsmCizL2qlvyNBCsicMd396kGPdcqWLSaEWanlVGo59
IcOue/L5Jz9o4XJZBJHES1Ic+rxgMfRZC0v+9XfzEZPiFEPOH6cOLQxu6jvu
502CW28EtHzGtPDa7rXKmrPEyF/P/DWMXBsn798d++/7LkhSt19hOqSNrsqy
Vm9/74CyZThTLKs2vh8f0X5DvgPGo+T2GSLaeCr2S47ViS2wFK/flZLVxi2r
0ZLiB//gtM/dlBJVbWRhSLGRqtkEL5K/0x+MtXFH7qxDhfYG+JsUhxMstXFi
sCrF6+FfuB91Ra7NThuFyTOLo36sQwz/lN/AJW0cHPKf8rr3B2p1fx74G66N
ydJ35p2ZVsHDQL3+xCttdH/VcbMlZAXYCXG3SxK1kS6WmM10exl8zM4sexfs
x6dtSRb6swSCtiN9c9+10ZnXa0hZeAG+2+m+PPpTG/ttg/66Gc7DnTP/Hc8e
0cZ0VeHT7J5z0O3o3Oi6oo1y2lNsst9mINRzOm+UCfD0lXM9Vp2/QdHLxE2H
C5BL6Ff8Df7fMOKTw58sCBhV3a5dfX0S1P08o88oAX7qT5JgkJ6A+aDlwF4b
QBYReiXSrlGIDbHUUDkH+K0/lwIJo2AYWvznpSugya9018d1I5Acfs3dyg+Q
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Cf4H4GRvCg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
hjdfW+/ze/tJ3lyfR+OvSkQe2wKYKl3VuHRoHnUHHPe/4gygJ/ba9HPoLHq9
lSJA7wNAb8R/QzV8GinaXSKuXAUgGRgk+dY2hfLfaPr0/wewLW+tMyI0hdKD
hz6/CAWQnJGtW26bRCG7wpcN7wMkDJTK9DiMo02H1QcyyQB1o7Qh176OIZ/3
nz+wPdznT0WN/2mNofMhruy/sgEKhC8siIj9QkSy4jc3SgGaGzVETvCOICZK
DdrqVoAAc0sb+z+9KOoirXJW5378MrmibrD0IpLGgTORPQCff7x4pa3Zg5Zv
3yiz+gkgrtS//TDhB+qmqbdZmt/nt00u7LfpQEfdksN6lwEYX1G9GYxtR03N
FwvfrwNcKk2/tvupDdXcpSGJ2wUYL/z2qO1iC8pkOPpcilEXGD7HlVlAE+Ly
FGxnYdWFc+/5gkJqG1B8y9LWBocuTNmzWhzS/YzC7iUdaeTXBXOuptLbp+rQ
v4ULAcVCusDxjm64aO4D8jumlpMspgtLX4pkpg6+RxdY+tfOyepCeeoLa9H+
12jYu+CQGUEXSAep3G2cXyHrjmATRRVd6JO9p5tFU4laFY/4HtTQhRV+K3ua
zpeImHgog0RHF8zus22c+FiKPq4sNvwGXRjaaqIPLypCmlZ1iy0GukCm+3Zq
UjIflVck8lQRdSFEN2AkfjMXyXBcMMgw14Uca6q5dL6nyKr1z3rvMV3oIhTY
b5x5jIKjffLYT+qCcePVFu31DPRUf9Pu2GldCMz+/vjUwEP0decmY8wZXdiZ
sT9DtHuAll9Rfmw8qwvHLilp855PRDw+sb4HLupC2s25HLGxeKQnwy6O3XQh
+mnzf49jYpHbZFpvoKcunHrG4P1sMxolZAvdrfLRBYqwIU7hxUhUY/tCZ/ma
LjA9unj8uU04+sUuvygbpAvsfzSvHhYMQ7StlTmXbupC2Zd4TgOVEKQYrX3y
2S1dKL4+WnWC9zqy1f9ENXpbF6jGv58vMAxEYTsmNXwxurD74PX3F5/8Ud6r
Ng+beF2orCr3ayy9itq8Tx1KStIFqbXPmXLTvmhDeri9NVUX5N4/q+ud90aC
k+fD6TL2/a8Wdnhb7Y2I2X9UjR/rgrZ1xvfvf92Ql63PdNgzXWjeuXii2u0a
SmXffFSbtx//3MNHQsM80YeWm0e2inSBdvAg7ZF7l9FUFCWp6st9/z0XKKcX
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
oreS/3hNOohwqz5lZX0sG5kv+NrLdhPBQ9Tfcsn2ORqsmE1n6ScC1dixq8xH
S5FH4IWhtSEi5LPm/LOie4W28TB//ygRFBOC3/DCBxRDccqhdmLff83mkpyX
DYjva2tmzjQRHpFw3y4gtKKieOLPyDkizNVZ5y3vdiFk/fGQ+xIR/H3+mzyc
MYBaeDWdjq4RweKX7OF3r0eRw+jLbKXN/XpZx8v66pNoPld6lGtnvz5ZmMkp
NP+gGx5PhbZJTGCXPsuuyGoRMSryO4+QmwBfRdmtPNUVJP+OcewFvQm8pT0m
6GO4iT6E3RaJZd7HN//x2p3eRseIJOe92U0gJNe3Z/jiHvLqXBrX4DOBHppl
6chnZJjkoZuYgKAJPJIdEeyiIcfxDmMXyERNAE6P3G23p8CCova5kxImoCdE
/jw/nRKXTXdNNkubgPdpCjeuJiqsV2IhUSJvAq+rIgWMh6lxh1+DS6KSCRxp
5Uz+NkyDnTXxC381E/CyNP4W84UWL++9mrLTMoGR43VlJZl0OOyzgiRgE5jo
Pheb4ECPWe/mXRLVNwHhwDj9tzQMOOeYcD61sQnQ2J7M7sxmwEqcj2ZmTU1g
U19cM0WUEdcPsEm3HzEBm0Wh+O5kRmz1OMa98rgJLD1vv+WxxojHL1IUPrQ2
AUN79X5NAybsJ3Nj9rqtCRxk8AwSv8WEyZfXZZwdTGDoW/s99nImnPTqymUj
ZxMQq97Qm+piwqLXp4qkLpqAfvr615BpJlypd3ae0c0ELAQb+KuXmLARdb/c
ymUTqOKzmD07z4S7vx+/0uO9v//jsRemI0z4fxVWdzzV/xc2I1FkVEiLiswi
kj7niMzruvteEmW1E5WdnZVEVAoVUtKSjIS+kqyQrVKyiYyMkqTf/f35fn3e
55znnOd5zvvjmvDuafE5czST2LFWt3oF/OQYT972Mccs2+LN/fdWgI63R9GH
89x+Hs9NrPHh4rt+J0QixBxztySbr927AvIKGiwtwrl8MK7zveJbAdNtC1Kh
0eZ4NX74UVnxctg+q9JVHGuOIzI/PbtOLgcPKZv7M1e4eBKD+96uWQ6TtPxd
rsnmyD5UuvfcITHQ8Ojju33bHPXvhTxyXRSFU/ESdR0Z5jhaforv3HVR+P7+
pL35I3PMFkqVbftvGXwjbQ5VLTVHu7WF/ezZpbD1BIPk8ppb3/vJX6XApXDk
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
ByHJY/A/s89FSg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.829289921132641*^9, {3.8292903411842422`*^9, 3.829290360290547*^9}, 
   3.829290429455887*^9, 3.829290930480978*^9, 3.8292909955963163`*^9, {
   3.829292515444108*^9, 3.829292590968732*^9}, 3.8292927569952106`*^9, 
   3.8292967329951143`*^9, {3.829296859229541*^9, 3.829296912873063*^9}, {
   3.829296943507155*^9, 3.829296984449172*^9}, {3.8292970804977818`*^9, 
   3.829297124721987*^9}, 3.8292972142875834`*^9, 3.829300599549494*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mutant dynamics", "Chapter",
 CellChangeTimes->{{3.825769412647562*^9, 3.825769415790656*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dImudt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Gamma]m", " ", "M", " ", "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Imu"}], " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], "Imu"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Imu", " ", "\[Beta]m", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], "Dm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fm", " ", "Dm"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "M"}], " ", "-", " ", 
    RowBox[{"\[Gamma]m", " ", "Is", " ", "M"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825769422230962*^9, 3.825769513129081*^9}, {
  3.8259967023096123`*^9, 3.825996725661252*^9}, {3.8280750461966667`*^9, 
  3.828075318382303*^9}, {3.828075366538121*^9, 3.828075370894615*^9}, {
  3.828077455144182*^9, 3.828077549802657*^9}, {3.828077642956213*^9, 
  3.828077656785994*^9}, {3.82807883696902*^9, 3.828078847089674*^9}, {
  3.829300664192379*^9, 3.829300667314118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Am", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], "-", "\[Alpha]", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{"\[Gamma]m", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Mu]"}], " ", "-", "\[Sigma]"}], ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", " ", 
        RowBox[{"\[Gamma]m", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Am", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8257435795568037`*^9, 3.8257436761951513`*^9}, {
   3.825744610613678*^9, 3.825744828142145*^9}, {3.8257448965209913`*^9, 
   3.825744964502389*^9}, 3.825745458268424*^9, {3.825760704533595*^9, 
   3.825760713722117*^9}, {3.825760799326695*^9, 3.825760852375071*^9}, {
   3.8257609318701067`*^9, 3.825760938385151*^9}, {3.8257617813820257`*^9, 
   3.8257618216608*^9}, {3.82576216653201*^9, 3.825762169581469*^9}, {
   3.8257622093116913`*^9, 3.825762212307238*^9}, {3.825762256134933*^9, 
   3.825762257461063*^9}, {3.825762311866053*^9, 3.825762366665176*^9}, {
   3.825762434544545*^9, 3.825762434692444*^9}, {3.825762474404647*^9, 
   3.8257624764593573`*^9}, {3.825762511865068*^9, 3.825762512862294*^9}, 
   3.825762602499343*^9, {3.825762666210616*^9, 3.825762667526772*^9}, {
   3.825762784268333*^9, 3.8257627876555853`*^9}, {3.825766791382381*^9, 
   3.825766798048353*^9}, {3.825766874527048*^9, 3.825766943144342*^9}, {
   3.825769542966591*^9, 3.8257696576848173`*^9}, {3.825996732450741*^9, 
   3.8259967406355743`*^9}, {3.828077614245688*^9, 3.828077729570053*^9}, {
   3.828078863692099*^9, 3.82807886824053*^9}, {3.829300674601161*^9, 
   3.8293006780443077`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8257625244133263`*^9, 3.8257626031628027`*^9, {3.825762663236967*^9, 
   3.8257626678481894`*^9}, 3.82576278821276*^9, {3.825766920117701*^9, 
   3.8257669437672586`*^9}, {3.825769650199383*^9, 3.825769658247525*^9}, 
   3.825996746123179*^9, 3.826257447260975*^9, 3.8262720330749283`*^9, 
   3.828078537142867*^9, 3.828078870108499*^9, 3.8280862481620293`*^9, 
   3.829287666181946*^9, {3.829300657078759*^9, 3.8293006789810953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Am", ".", 
    RowBox[{"{", 
     RowBox[{"Imu", ",", " ", "Dm", ",", " ", "M"}], "}"}]}], " ", "\[Equal]",
    " ", 
   RowBox[{"{", 
    RowBox[{"dImudt", ",", " ", "dDmdt", ",", " ", "dMdt"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.828078539110243*^9, 3.828078556158781*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.828078556573688*^9, 3.828078872948539*^9, 3.828086250032992*^9, 
   3.8292876692328997`*^9, {3.8293006703928328`*^9, 3.829300679956664*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FMat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825744967827158*^9, 3.825745034216174*^9}, {
   3.825745077306136*^9, 3.825745105387485*^9}, {3.825745311533243*^9, 
   3.825745313136395*^9}, {3.825745491797593*^9, 3.825745495316793*^9}, 
   3.825762315649857*^9, {3.825768772228602*^9, 3.825768772621294*^9}, {
   3.825768859187916*^9, 3.825768868594355*^9}, {3.825769669045599*^9, 
   3.825769695878559*^9}, {3.82807856836335*^9, 3.828078595692235*^9}, {
   3.82807887689528*^9, 3.828078879595543*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMat", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"-", " ", "Is"}], " ", "\[Gamma]m"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ds"}], " ", "\[Beta]m"}], ",", " ", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ",", " ", "0"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"Is", " ", "\[Gamma]m"}], " ", "+", " ", "\[Delta]"}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8257450396770067`*^9, 3.825745047939592*^9}, {
   3.825745192814064*^9, 3.825745268738194*^9}, {3.8257453016076803`*^9, 
   3.8257453341689463`*^9}, {3.825745399738305*^9, 3.8257455244249477`*^9}, {
   3.8257606895557623`*^9, 3.825760698517312*^9}, {3.825760957784419*^9, 
   3.8257609605297213`*^9}, {3.825761783062153*^9, 3.8257618011230907`*^9}, {
   3.825761831680503*^9, 3.825761834014905*^9}, {3.825762172493878*^9, 
   3.8257622005331697`*^9}, 3.825762259568303*^9, {3.8257623163642387`*^9, 
   3.825762317714275*^9}, {3.825762514366149*^9, 3.825762515153265*^9}, {
   3.825762828234889*^9, 3.8257628382899017`*^9}, {3.825766807917742*^9, 
   3.8257668109003277`*^9}, {3.825766880574019*^9, 3.825766909146077*^9}, {
   3.825766949336821*^9, 3.82576695489468*^9}, {3.825768766180334*^9, 
   3.825768767468474*^9}, {3.825768873108182*^9, 3.8257688760621853`*^9}, {
   3.825769703295082*^9, 3.825769748060072*^9}, {3.825996753654696*^9, 
   3.8259967613251343`*^9}, {3.828078893379274*^9, 3.828078936583844*^9}, {
   3.82930068396945*^9, 3.829300687252771*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FMat", " ", "-", " ", "VMat"}], " ", "\[Equal]", " ", "Am"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FMat", "-", "VMat"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.825745535204224*^9, 3.825745546960334*^9}, {
   3.825762797727285*^9, 3.825762802679283*^9}, 3.828078970880686*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690165204*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"FMat", ".", 
      RowBox[{"Inverse", "[", "VMat", "]"}]}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8257455598341827`*^9, 3.8257455911249437`*^9}, {
  3.8257461264116898`*^9, 3.8257461486249657`*^9}, {3.8257623186116734`*^9, 
  3.8257623378340073`*^9}, {3.82576697533962*^9, 3.825766979793467*^9}, {
  3.8259994422573833`*^9, 3.825999447886388*^9}, {3.828078981152101*^9, 
  3.828078988764003*^9}, {3.828079342319439*^9, 3.828079343394005*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Ds", " ", "fm", " ", "Is", " ", "\[Beta]m", " ", "\[Gamma]m"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9, 
   3.8280862571632423`*^9, 3.8292876770018063`*^9, 3.82930069387365*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"R0", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"fm", " "}], 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}]], 
   FractionBox[
    RowBox[{"Is", "  ", "\[Gamma]m"}], 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], " "}]}]], 
   FractionBox[
    RowBox[{"Ds", "  ", "\[Beta]m", " "}], 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}]]}]}]],
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9}]], "Text",\

 CellChangeTimes->{{3.828079371356689*^9, 3.828079398327075*^9}, {
  3.828081925654728*^9, 3.828081971958478*^9}, {3.828083563011613*^9, 
  3.82808357625698*^9}, {3.828086532935025*^9, 3.828086537733881*^9}, {
  3.829024901330192*^9, 3.829024903924568*^9}, {3.829300702528157*^9, 
  3.8293007106618147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R0res", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"R0", "/.", 
         RowBox[{"Dw", "\[Rule]", " ", "0"}]}], "/.", 
        RowBox[{"Is", "\[Rule]", 
         FractionBox["\[Mu]", 
          RowBox[{"c", " ", "p"}]]}]}], "/.", 
       RowBox[{"Ds", "\[Rule]", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "d"}], "+", "r"}], "p"]}]}], "/.", 
      RowBox[{"fm", " ", "\[Rule]", " ", "fw"}]}], "/.", 
     RowBox[{"\[Gamma]m", "\[Rule]", " ", "\[Gamma]w"}]}], "/.", 
    RowBox[{"\[Beta]m", "\[Rule]", " ", "\[Beta]w"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.829287679729945*^9, 3.8292877483272657`*^9}, {
  3.829288241521225*^9, 3.8292882447696*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"fw", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w", " ", "\[Gamma]w",
    " ", "\[Mu]"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c", " ", "p", " ", "\[Delta]"}], "+", 
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.829287698586801*^9, 3.829287748949381*^9}, 
   3.8292882471948757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"R0res", ">", "1"}], " ", "&&", " ", 
    RowBox[{"fw", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"r", ">", "0"}], " ", "&&", " ", 
    RowBox[{"d", " ", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]w", " ", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Gamma]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"p", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Sigma]", " ", ">", " ", "0"}], "&&", " ", 
    RowBox[{"\[Delta]", " ", ">", " ", "0"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8292877416809397`*^9, 3.829287809210725*^9}, {
  3.829287927153082*^9, 3.829287956865203*^9}, {3.829288255803944*^9, 
  3.829288260862804*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]", ">", "0"}], "&&", 
  RowBox[{"\[Mu]", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]", ">", "0"}], "&&", 
  RowBox[{"r", ">", "0"}], "&&", 
  RowBox[{"fw", ">", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}], 
      " ", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]w"}]]}]}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"\[Gamma]w", ">", "0"}], "&&", 
  RowBox[{"\[Delta]", ">", "0"}], "&&", 
  RowBox[{"0", "<", "c", "<", 
   FractionBox[
    RowBox[{"\[Gamma]w", " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        RowBox[{"fw", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], 
          ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]}], ")"}]}], 
    RowBox[{"p", " ", "\[Delta]"}]]}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", ">", "0"}], "&&", 
      RowBox[{"0", "<", "d", "<", "r"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", ">", "r"}], "&&", 
      RowBox[{"0", "<", "p", "<", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]w"}], 
        RowBox[{"r", "+", "\[Alpha]"}]]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.829287784836705*^9, 3.829287809874045*^9}, {
   3.829287930753845*^9, 3.829287958264431*^9}, {3.8292882526066236`*^9, 
   3.829288262436739*^9}, 3.829288363513105*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]w"}]]}], "/.", 
  "prEco"}]], "Input",
 CellChangeTimes->{{3.829288157887813*^9, 3.829288159459901*^9}, {
  3.829288273017138*^9, 3.8292882798502398`*^9}}],

Cell[BoxData[
 RowBox[{"-", "12.740000000000002`"}]], "Output",
 CellChangeTimes->{
  3.829288160000997*^9, {3.829288273628087*^9, 3.8292882803140717`*^9}, 
   3.8292883941963673`*^9, 3.829288450332032*^9, 3.829289553211844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fw", "/.", "prEco"}]], "Input",
 CellChangeTimes->{{3.8292882822387743`*^9, 3.829288286592944*^9}}],

Cell[BoxData["14.5`"], "Output",
 CellChangeTimes->{{3.8292882827584457`*^9, 3.829288287111609*^9}, 
   3.8292883961037207`*^9, 3.8292884526522837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Gamma]w", " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       RowBox[{"fw", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]}], ")"}]}], 
   RowBox[{"p", " ", "\[Delta]"}]], "/.", "prEco"}]], "Input",
 CellChangeTimes->{{3.829288296467577*^9, 3.829288303528427*^9}}],

Cell[BoxData[
 RowBox[{"-", "20.67813765182186`"}]], "Output",
 CellChangeTimes->{{3.829288298480916*^9, 3.8292883041830463`*^9}, 
   3.829288397663888*^9, 3.829288454388563*^9, 3.829289581543495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["prEco"], "Input",
 CellChangeTimes->{{3.829288419608267*^9, 3.829288420959223*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "1.5`"}], ",", 
   RowBox[{"d", "\[Rule]", "1.1`"}], ",", 
   RowBox[{"p", "\[Rule]", "1.2`"}], ",", 
   RowBox[{"\[Gamma]w", "\[Rule]", "4.5`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
   RowBox[{"\[Beta]w", "\[Rule]", "2.5`"}], ",", 
   RowBox[{"c", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Mu]", "\[Rule]", "4.9`"}], ",", 
   RowBox[{"\[Sigma]", "\[Rule]", "0"}], ",", 
   RowBox[{"fw", "\[Rule]", "14.5`"}], ",", 
   RowBox[{"\[Delta]", "\[Rule]", "1.9`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8292884213904963`*^9, 3.829288456028695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]w"}], 
   RowBox[{"r", "+", "\[Alpha]"}]], "/.", "prEco"}]], "Input",
 CellChangeTimes->{{3.829288470727949*^9, 3.829288476062317*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.6666666666666665`"}]], "Output",
 CellChangeTimes->{{3.8292884727474413`*^9, 3.829288476510882*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1351, 831},
WindowMargins->{{23, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 201, 2, 137, "Title"],
Cell[CellGroupData[{
Cell[806, 28, 118, 1, 96, "Chapter"],
Cell[927, 31, 4432, 94, 144, "Input"],
Cell[5362, 127, 1517, 40, 69, "Input"],
Cell[6882, 169, 1797, 46, 111, "Input"],
Cell[8682, 217, 861, 23, 94, "Input"],
Cell[CellGroupData[{
Cell[9568, 244, 483, 13, 43, "Input"],
Cell[10054, 259, 879, 24, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10970, 288, 600, 15, 43, "Input"],
Cell[11573, 305, 1385, 39, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12995, 349, 118, 1, 91, "Subchapter"],
Cell[CellGroupData[{
Cell[13138, 354, 99, 1, 95, "Section"],
Cell[13240, 357, 2126, 52, 94, "Input"],
Cell[CellGroupData[{
Cell[15391, 413, 123, 2, 43, "Input"],
Cell[15517, 417, 1721, 47, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17275, 469, 360, 11, 43, "Input"],
Cell[17638, 482, 242, 3, 43, "Output"]
}, Open  ]],
Cell[17895, 488, 290, 6, 43, "Input"],
Cell[CellGroupData[{
Cell[18210, 498, 520, 14, 43, "Input"],
Cell[18733, 514, 488, 13, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19258, 532, 797, 20, 69, "Input"],
Cell[20058, 554, 3302, 90, 137, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23409, 650, 120, 1, 95, "Section"],
Cell[23532, 653, 2328, 61, 136, "Input"],
Cell[CellGroupData[{
Cell[25885, 718, 365, 11, 43, "Input"],
Cell[26253, 731, 120, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26410, 738, 326, 7, 43, "Input"],
Cell[26739, 747, 6441, 179, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33217, 931, 1109, 30, 69, "Input"],
Cell[34329, 963, 1718, 53, 114, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36084, 1021, 1024, 24, 69, "Input"],
Cell[37111, 1047, 2911, 88, 161, "Output"]
}, Open  ]],
Cell[40037, 1138, 917, 21, 69, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41003, 1165, 155, 2, 91, "Subchapter"],
Cell[41161, 1169, 727, 16, 69, "Input"],
Cell[41891, 1187, 2066, 33, 69, "Input"],
Cell[CellGroupData[{
Cell[43982, 1224, 1932, 47, 119, "Input"],
Cell[45917, 1273, 59028, 1137, 262, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104982, 2415, 504, 10, 43, "Input"],
Cell[105489, 2427, 149664, 2470, 354, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255190, 4902, 2675, 62, 169, "Input"],
Cell[257868, 4966, 4053, 94, 244, "Output"],
Cell[261924, 5062, 66279, 1248, 262, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328240, 6315, 914, 22, 69, "Input"],
Cell[329157, 6339, 277876, 4668, 367, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[607094, 11014, 100, 1, 96, "Chapter"],
Cell[607197, 11017, 1390, 33, 94, "Input"],
Cell[CellGroupData[{
Cell[608612, 11054, 2129, 45, 69, "Input"],
Cell[610744, 11101, 1532, 39, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612313, 11145, 354, 10, 43, "Input"],
Cell[612670, 11157, 196, 3, 43, "Output"]
}, Open  ]],
Cell[612881, 11163, 845, 18, 43, "Input"],
Cell[613729, 11183, 1935, 41, 43, "Input"],
Cell[CellGroupData[{
Cell[615689, 11228, 374, 8, 69, "Input"],
Cell[616066, 11238, 371, 5, 43, "Output"],
Cell[616440, 11245, 1412, 37, 108, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617889, 11287, 626, 12, 43, "Input"],
Cell[618518, 11301, 866, 20, 69, "Output"]
}, Open  ]],
Cell[619399, 11324, 1134, 27, 55, "Text"],
Cell[CellGroupData[{
Cell[620558, 11355, 790, 22, 73, "Input"],
Cell[621351, 11379, 765, 25, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[622153, 11409, 988, 20, 69, "Input"],
Cell[623144, 11431, 2284, 70, 141, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625465, 11506, 661, 22, 72, "Input"],
Cell[626129, 11530, 228, 4, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626394, 11539, 123, 2, 43, "Input"],
Cell[626520, 11543, 152, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[626709, 11550, 849, 26, 91, "Input"],
Cell[627561, 11578, 200, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627798, 11586, 97, 1, 43, "Input"],
Cell[627898, 11589, 628, 14, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[628563, 11608, 254, 7, 70, "Input"],
Cell[628820, 11617, 131, 2, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
