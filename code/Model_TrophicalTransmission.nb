(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2369344,      45187]
NotebookOptionsPosition[   2336211,      44662]
NotebookOutlinePosition[   2336685,      44680]
CellTagsIndexPosition[   2336642,      44677]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Useful functions", "Title",
 CellChangeTimes->{{3.840514213989287*^9, 
  3.840514216116592*^9}},ExpressionUUID->"483eab07-900c-4006-baff-\
febb9820f003"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorlist", " ", "=", " ", 
  RowBox[{"ColorData", "[", 
   RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"dac3e6c1-0f10-4bf9-afb3-14227c80d39d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[0.368417, 0.506779, 0.709798]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.880722, 0.611041, 0.142051]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.560181, 0.691569, 0.194885]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.922526, 0.385626, 0.209179]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.528488, 0.470624, 0.701351]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.772079, 0.431554, 0.102387]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.363898, 0.618501, 0.782349]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.647624, 0.37816, 0.614037]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.571589, 0.586483, 0.]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0.915, 0.3325, 0.2125]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|
    "color" -> RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845107132128495*^9, 3.845121591277426*^9, 3.8453712379841747`*^9, 
   3.8453713743600492`*^9, 3.845373151044804*^9, {3.84537591767907*^9, 
   3.8453759286682377`*^9}, 3.845380285505507*^9, 3.845444690714799*^9, 
   3.845447298528164*^9, 3.845470741874611*^9, 3.845473619361991*^9, 
   3.845521594959161*^9, 3.845718406328274*^9, 3.847256858370923*^9, 
   3.84753552434864*^9, 3.862045519037395*^9, 3.862045610183385*^9, 
   3.8635912309349656`*^9, 3.864110532341355*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"42ab818a-7e4c-495e-9daf-b36b7f4c184d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeSystem", "[", 
   RowBox[{"var_", ",", " ", "vart_", ",", " ", "sys_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Input", ":", "\[IndentingNewLine]", "var", ":", " ", 
     RowBox[{
     "variables", " ", "in", " ", "an", " ", "ode", " ", "system", " ", 
      RowBox[{"(", 
       RowBox[{"form", ":", " ", 
        RowBox[{"{", 
         RowBox[{"var1", ",", " ", "var2"}], "}"}]}], ")"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"vart", ":", " ", 
     RowBox[{
     "variables", " ", "in", " ", "the", " ", "ode", " ", "system", " ", 
      "under", " ", "the", " ", "form", " ", "of", " ", "functions", " ", 
      "of", " ", "time", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"form", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"var1", "[", "t", "]"}], ",", " ", 
           RowBox[{"var2", "[", "t", "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sys", ":", " ", 
         RowBox[{"the", " ", "ode", " ", "system", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"form", ":", " ", "dvar1dt"}], " ", "=", " ", 
             RowBox[{
              RowBox[{"a", " ", "var1"}], " ", "+", " ", 
              RowBox[{"b", " ", "var2"}]}]}], ",", " ", 
            RowBox[{"dvar2dt", " ", "=", " ", 
             RowBox[{
              RowBox[{"x", " ", "var2"}], " ", "-", " ", 
              RowBox[{"y", " ", "var2", " ", "var3"}]}]}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Output", ":", "\[IndentingNewLine]", 
         RowBox[{
         "The", " ", "system", " ", "that", " ", "can", " ", "be", " ", 
          "input", " ", "for", " ", "function", " ", "NDSolve"}]}]}], 
       "\[IndentingNewLine]"}]}]}]}], "*)"}], "\[IndentingNewLine]", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "v", ",", " ", "vt", ",", " ", "S", ",", " ", "St", ",", " ", "Sf"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"v", " ", "=", " ", "var"}], ";", "\[IndentingNewLine]", 
     RowBox[{"vt", " ", "=", " ", "vart"}], ";", "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", "sys"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"St", " ", "=", " ", 
        RowBox[{"S", "/.", 
         RowBox[{"Thread", "[", 
          RowBox[{"v", "\[Rule]", " ", "vt"}], "]"}]}]}], ";", " ", 
       RowBox[{"Sf", " ", "=", " ", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"vt", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", "St"}],
          "]"}]}]}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8406137283934193`*^9, 3.840613794250386*^9}, 
   3.840613891015534*^9, {3.845104807773244*^9, 3.845105004053689*^9}, 
   3.8451050566602373`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"fc1a2412-89f0-49f4-b951-88d232706ada"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "system_", ",", "commonpars_", ",", "followPar_", ",", "range_", ",", 
     "variables_", ",", " ", "initialEq_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sys", ",", "cpar", ",", "fp", ",", " ", "r", ",", "v", ",", "en", ",", 
       " ", "ieq", ",", " ", "eq", ",", " ", "pars", ",", " ", "results"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"sys", "=", "system"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpar", "=", "commonpars"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp", "=", "followPar"}], ";", 
      RowBox[{"r", " ", "=", " ", "range"}], ";", 
      RowBox[{"v", "=", "variables"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ieq", " ", "=", " ", "initialEq"}], ";", "\[IndentingNewLine]", 
      RowBox[{"results", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"eq", "=", "ieq"}], ";", "\[IndentingNewLine]", 
         RowBox[{"pars", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"cpar", ",", " ", 
            RowBox[{"{", 
             RowBox[{"fp", "->", " ", "i"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ieq", " ", "=", " ", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{"sys", " ", "==", " ", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{"Length", "[", "v", "]"}]}], "]"}]}], "]"}], "/.", 
               "pars"}], ",", 
              RowBox[{"Thread", "[", 
               RowBox[{"{", 
                RowBox[{"v", ",", " ", 
                 RowBox[{"v", "/.", "ieq"}], ",", " ", "0", ",", " ", 
                 "Infinity"}], "}"}], "]"}], ",", " ", 
              RowBox[{"MaxIterations", "\[Rule]", "1000"}]}], "]"}], ",", " ", 
            RowBox[{"Thread", "[", 
             RowBox[{"v", "->", 
              RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AllTrue", "[", 
            RowBox[{
             RowBox[{"v", "/.", "ieq"}], ",", " ", 
             RowBox[{
              RowBox[{"#", "==", 
               RowBox[{"-", "1"}]}], "&"}]}], "]"}], ",", " ", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"results", " ", "=", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", " ", "ieq"}], "]"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "range"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "results"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8405142036911077`*^9, 3.8405160352313757`*^9, 3.840530521881344*^9, {
   3.8405373316721563`*^9, 3.840537346958301*^9}, 3.840542666381555*^9, {
   3.84485345282202*^9, 3.844853478465576*^9}, {3.844853560291057*^9, 
   3.8448535754516573`*^9}, {3.84485468208515*^9, 3.844854700820087*^9}, {
   3.8448552269339314`*^9, 3.844855241672557*^9}, 3.844855740086276*^9, {
   3.844922661232478*^9, 3.8449226670887957`*^9}, {3.845108996719445*^9, 
   3.845108999435166*^9}, 3.845109278398213*^9, 3.845109335984679*^9, {
   3.845110860128003*^9, 3.845110865778226*^9}, {3.845110950199317*^9, 
   3.845110953137051*^9}, {3.8451110365168467`*^9, 3.8451110460140257`*^9}, {
   3.8451111246024017`*^9, 3.845111126186187*^9}, {3.845111256321933*^9, 
   3.845111309065948*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"29ccce53-ba30-4d5f-8cb6-142f26400e85"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FollowRootTwoParameters", "[", 
    RowBox[{
    "system_", ",", "commonpars_", ",", "followPar1_", ",", "range1_", ",", 
     "followPar2_", ",", " ", "range2_", ",", "variables_", ",", " ", 
     "initialEq_", ",", " ", "minEqlimit_", ",", " ", 
     RowBox[{"maxiteration_", ":", "1000"}], ",", " ", 
     RowBox[{"precisionGoal_", ":", "MachinePrecision"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sys", ",", "cpar", ",", "fp1", ",", " ", "r1", ",", " ", "fp2", ",", 
       " ", "r2", ",", "v", ",", "en", ",", " ", "ieq", ",", "mineqlim", ",", 
       "maxiter", ",", "precgoal", ",", " ", "pars", ",", " ", "results"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"sys", "=", "system"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpar", "=", "commonpars"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp1", "=", "followPar1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"r1", " ", "=", " ", "range1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp2", " ", "=", " ", "followPar2"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"r2", " ", "=", " ", "range2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", "variables"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ieq", " ", "=", " ", "initialEq"}], ";", "\[IndentingNewLine]", 
      RowBox[{"mineqlim", " ", "=", " ", "minEqlimit"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"maxiter", " ", "=", " ", "maxiteration"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"precgoal", " ", "=", " ", "precisionGoal"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"results", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pars", " ", "=", " ", 
          RowBox[{"Join", "[", 
           RowBox[{"cpar", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fp1", "->", " ", "i"}], ",", " ", 
              RowBox[{"fp2", "->", " ", "j"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ieq", " ", "=", " ", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{"sys", " ", "==", " ", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{"Length", "[", "v", "]"}]}], "]"}]}], "]"}], "/.", 
               "pars"}], ",", 
              RowBox[{"Thread", "[", 
               RowBox[{"{", 
                RowBox[{"v", ",", " ", 
                 RowBox[{"v", "/.", "ieq"}], ",", " ", "minEqlimit", ",", " ",
                  "Infinity"}], "}"}], "]"}], ",", " ", 
              RowBox[{"MaxIterations", "\[Rule]", "maxiter"}], ",", " ", 
              RowBox[{"PrecisionGoal", "\[Rule]", "precgoal"}]}], "]"}], ",", 
            " ", 
            RowBox[{"Thread", "[", 
             RowBox[{"v", "->", " ", 
              RowBox[{"-", "1"}]}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AllTrue", "[", 
            RowBox[{
             RowBox[{"v", "/.", "ieq"}], ",", " ", 
             RowBox[{
              RowBox[{"#", " ", "==", " ", 
               RowBox[{"-", "1"}]}], "&"}]}], "]"}], ",", " ", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"results", " ", "=", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"results", ",", " ", "ieq"}], "]"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "range1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "range2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "results"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845105234816164*^9, 3.84510524696115*^9}, {
   3.8451085831534767`*^9, 3.845108607049428*^9}, 3.845111078945079*^9, {
   3.845111115173387*^9, 3.845111116207182*^9}, {3.845115331995541*^9, 
   3.845115379125855*^9}, 3.845115454411417*^9, {3.845115531217287*^9, 
   3.845115533142273*^9}, {3.84512038230846*^9, 3.845120398462076*^9}, {
   3.8451228575728693`*^9, 3.845122894632615*^9}, {3.845354469413253*^9, 
   3.845354516261097*^9}, {3.8453549965459843`*^9, 3.8453550047352133`*^9}, {
   3.845355387378579*^9, 3.845355416495701*^9}, {3.8453577337848454`*^9, 
   3.84535776521005*^9}, {3.845375161741778*^9, 3.8453752636491327`*^9}, {
   3.845375741637425*^9, 3.845375791528846*^9}, {3.845375824755156*^9, 
   3.845375825503256*^9}, {3.845375902433916*^9, 3.845375911019821*^9}, {
   3.845376546149169*^9, 3.845376648589823*^9}, {3.8453770198712387`*^9, 
   3.845377032955925*^9}, {3.845379996740822*^9, 3.8453800379396544`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6cc37638-2b0e-4c3a-8d33-f791fefce2a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FollowNSolveTwoParameters", "[", 
    RowBox[{
    "system_", ",", "commonpars_", ",", "followPar1_", ",", "range1_", ",", 
     "followPar2_", ",", " ", "range2_", ",", "variables_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "vars", ",", " ", "sys", ",", "cpar", ",", "fp1", ",", " ", "r1", ",", 
       " ", "fp2", ",", " ", "r2", ",", "v", ",", "en", ",", "  ", "eqAll", 
       ",", " ", "eq", ",", " ", "pars", ",", " ", "results", ",", " ", 
       "parpair"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vars", " ", "=", " ", "variables"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sys", "=", "system"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpar", "=", "commonpars"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp1", "=", "followPar1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"r1", " ", "=", " ", "range1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp2", " ", "=", " ", "followPar2"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"r2", " ", "=", " ", "range2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", "variables"}], ";", "\[IndentingNewLine]", 
      RowBox[{"results", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parpair", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"eqAll", "=", " ", 
          RowBox[{"NSolve", "[", 
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"sys", "/.", "cpar"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"fp1", "->", " ", "i"}], ",", " ", 
                  RowBox[{"fp2", "->", " ", "j"}]}], "}"}]}], ")"}], "==", 
              "0"}], "]"}], ",", " ", "vars", ",", " ", "Reals"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"eq", " ", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"eqAll", ",", 
            RowBox[{
             RowBox[{"And", "@@", 
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"vars", "/.", "#"}], " ", ")"}], ">", " ", "0"}], 
               "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"eq", " ", "!=", " ", 
            RowBox[{"{", "}"}]}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"results", " ", "=", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"results", ",", " ", 
               RowBox[{"eq", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"parpair", " ", "=", " ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"parpair", ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "j"}], "}"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "range1"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"j", ",", " ", "range2"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"parpair", ",", " ", "results"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.845120423999712*^9, 3.8451205020373898`*^9}, {
  3.8451205393902893`*^9, 3.8451206303656673`*^9}, {3.845121177632958*^9, 
  3.84512120046489*^9}, {3.845121297995962*^9, 3.8451213160656967`*^9}, {
  3.845121484740839*^9, 3.845121485500362*^9}, {3.8451215161915693`*^9, 
  3.845121517184865*^9}, {3.8451225913531113`*^9, 3.845122594529018*^9}, {
  3.84537307968647*^9, 3.845373130860958*^9}, {3.8453771191790533`*^9, 
  3.845377143231237*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"23da9c6c-6b7a-4429-9738-3d6fe38f26f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NSolveCodim2Positive", "[", 
   RowBox[{
   "system_", ",", " ", "commonpars_", ",", " ", "bifurpar1_", ",", " ", 
    "bifurpar2_", ",", "bfparsName_", ",", " ", "equisymbol_", ",", 
    "variables_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Find", " ", "only", " ", "positive", " ", "solution", " ", "varying", 
      " ", "two", " ", "parameters"}], ",", " ", 
     RowBox[{
      RowBox[{"using", " ", "NSolve", " ", 
       RowBox[{"(", 
        RowBox[{
        "To", " ", "be", " ", "used", " ", "in", " ", "Parallele", " ", 
         "Table", " ", "to", " ", "follow", " ", "the", " ", "positive", " ", 
         "equilibrium"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"--", 
       RowBox[{"--", "\[IndentingNewLine]", 
        RowBox[{"Input", ":", "\[IndentingNewLine]", "system", ":", " ", 
         RowBox[{"the", " ", "odes", " ", "to", " ", "be", " ", "solved", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"form", ":", " ", "dXdt"}], " ", "=", " ", 
             RowBox[{"A", " ", "*", " ", "X"}]}], ",", " ", 
            RowBox[{
            "where", " ", "X", " ", "is", " ", "the", " ", "vector", " ", 
             "of", " ", "variables", " ", "and", " ", "A", " ", "is", " ", 
             "the", " ", "characteristic", " ", "matrix"}]}], ")"}]}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"commonpars", ":", " ", 
       RowBox[{
       "list", " ", "of", " ", "the", " ", "value", " ", "of", " ", "fixed", 
        " ", "parameters", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1", " ", "->", " ", "4"}], ",", " ", 
            RowBox[{"p2", " ", "->", " ", "2"}], ",", " ", "...", ",", " ", 
            RowBox[{"pn", " ", "->", " ", "43"}]}], "}"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bifurpar1", ":", " ", 
       RowBox[{
       "the", " ", "value", " ", "of", " ", "the", " ", "bifurcation", " ", 
        "parameter", " ", "1", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{"pb1", " ", "->", " ", "3.4"}], "}"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bifurpar2", ":", " ", 
       RowBox[{
       "the", " ", "value", " ", "of", " ", "the", " ", "bifurcation", " ", 
        "parameter", " ", "2", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{"pb2", " ", "->", " ", "1.2"}], "}"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bfparsName", ":", " ", 
       RowBox[{
       "symbol", " ", "of", " ", "the", " ", "two", " ", "bifurcation", " ", 
        "parameter", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", "pb1pb2"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"variables", ":", " ", 
       RowBox[{
       "list", " ", "of", " ", "the", " ", "variables", " ", "to", " ", "be", 
        " ", "solved", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{"v1", ",", " ", "v2", ",", " ", "v3"}], "}"}]}], ")"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"--", 
       RowBox[{"--", "\[IndentingNewLine]", 
        RowBox[{"Output", ":", "\[IndentingNewLine]", 
         RowBox[{
         "a", " ", "list", " ", "of", " ", "the", " ", "values", " ", "of", 
          " ", "the", " ", "two", " ", "bifurcation", " ", "parameters", " ", 
          "and", " ", "its", " ", "corresponding", " ", "positive", " ", 
          "equilibrium", "\[IndentingNewLine]", 
          RowBox[{"(", 
           RowBox[{"form", ":", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"pb1pb2", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"2", ",", " ", "2"}], "}"}]}], ",", " ", 
              RowBox[{"v1", "->", " ", "4"}], ",", " ", 
              RowBox[{"v2", "->", " ", "3"}], ",", " ", 
              RowBox[{"v3", "->", " ", "4.5"}]}], "}"}]}]}]}]}]}]}]}]}], 
    "}"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sys", ",", " ", "cpar", ",", "bfpar1", ",", " ", "bfpar2", ",", "  ", 
      "vars", ",", " ", "bfpName", ",", "eqsym", ",", "parspairVal", ",", " ",
       "eqAll", ",", " ", "eqpos"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sys", " ", "=", " ", "system"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cpar", " ", "=", " ", "commonpars"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bfpar1", " ", "=", " ", "bifurpar1"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bfpar2", " ", "=", " ", "bifurpar2"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bfpName", " ", "=", " ", "bfparsName"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqsym", " ", "=", " ", "equisymbol"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vars", " ", "=", " ", "variables"}], ";", "\[IndentingNewLine]", 
     RowBox[{"eqAll", " ", "=", " ", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"sys", "/.", "cpar"}], "/.", "bfpar1"}], "/.", " ", 
            "bfpar2"}], ")"}], "==", "0"}], "]"}], ",", " ", "vars", ",", " ",
         "Reals"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eqpos", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"eqAll", ",", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vars", "/.", "#"}], " ", ")"}], ">", " ", "0"}], 
           "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"parspairVal", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"bfpar1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"bfpar2", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"eqpos", " ", "!=", " ", 
        RowBox[{"{", "}"}]}], ",", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"bfpName", " ", "->", " ", "parspairVal"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"eqsym", " ", "->", " ", 
           RowBox[{"eqpos", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], " ", ",", " ", 
       RowBox[{"Unevaluated", "@", 
        RowBox[{"Sequence", "[", "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.84544124512211*^9, 3.845441317377239*^9}, {
   3.845441349747328*^9, 3.8454415320650053`*^9}, {3.845441595387566*^9, 
   3.8454419229126787`*^9}, {3.8454419803637657`*^9, 3.845442016858724*^9}, {
   3.845442047664876*^9, 3.8454420879799957`*^9}, {3.84544314924177*^9, 
   3.8454431516703873`*^9}, {3.84544430379377*^9, 3.845444311012001*^9}, 
   3.845444376335393*^9, 3.845444423202981*^9, {3.8454448208048763`*^9, 
   3.8454448271086884`*^9}, {3.8454452621840277`*^9, 3.845445264669181*^9}, {
   3.845445917594482*^9, 3.845445926340757*^9}, 3.8454464301660833`*^9, {
   3.845446625847538*^9, 3.845447032851692*^9}, {3.8454470899712687`*^9, 
   3.845447098612041*^9}, {3.8454471764208727`*^9, 3.845447178576953*^9}, {
   3.845447216199403*^9, 3.845447236685886*^9}, {3.8454652004609547`*^9, 
   3.845465246845564*^9}, {3.845465335721299*^9, 3.845465342354336*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7b06fd56-25bb-4ff0-ba9e-ff1e7e230c33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingleStableColor", "[", 
   RowBox[{
   "jacobmatrix_", ",", " ", "parcommon_", ",", " ", "parsfollow_", ",", " ", 
    "equilibrium_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "jmat", ",", " ", "pc", ",", " ", "pf", ",", " ", "r", ",", "eq", ",", 
      " ", "eiv", ",", " ", "anyZero", ",", " ", "anyPos", ",", " ", "allNeg",
       ",", " ", "ps"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"jmat", " ", "=", " ", "jacobmatrix"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pc", " ", "=", " ", "parcommon"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pf", " ", "=", " ", "parsfollow"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"eq", " ", "=", " ", "equilibrium"}], ";", "\[IndentingNewLine]", 
     RowBox[{"eiv", " ", "=", " ", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"jmat", "/.", "pc"}], "/.", "pf"}], "/.", "eq"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"anyZero", " ", "=", " ", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]]}], "<=", 
          RowBox[{"Re", "[", "eiv", "]"}], "<=", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], "]"}], ",", " ", "TrueQ"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"anyPos", " ", "=", " ", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Re", "[", "eiv", "]"}], ">", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], "]"}], ",", " ", "TrueQ"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"allNeg", " ", "=", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Re", "[", "eiv", "]"}], "<", 
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]]}]}], "]"}], ",", " ", "TrueQ"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{"anyZero", ",", " ", 
       RowBox[{"colorlist", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "anyPos", ",", " ", 
       RowBox[{"colorlist", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "allNeg", ",", " ", 
       RowBox[{"colorlist", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8451071857737713`*^9, 3.84510725906242*^9}, {
  3.845108345641605*^9, 3.8451083484880867`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"35567525-2d27-4946-a4be-0274bbe088f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingleStableMark", "[", 
   RowBox[{
   "jacobmatrix_", ",", " ", "parcommon_", ",", " ", "parsfollow_", ",", " ", 
    "equilibrium_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Mark", " ", "an", " ", "equilibrium", " ", "depending", " ", "on", " ", 
     "its", " ", "stability", " ", "\[IndentingNewLine]", 
     RowBox[{"Input", ":", "\[IndentingNewLine]", "jacobmatrix", ":", " ", 
      RowBox[{
      "jacobian", " ", "matrix", " ", "of", " ", "the", " ", "system", " ", 
       RowBox[{"(", 
        RowBox[{"form", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}]}], ")"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"parcommon", ":", " ", 
     RowBox[{"values", " ", "of", " ", "fixed", " ", "parameters", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"form", ":", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p1", " ", "->", " ", "2"}], ",", " ", 
           RowBox[{"p2", "->", " ", "3"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"parsfollow", ":", " ", 
         RowBox[{
         "bifurcation", " ", "parameter", " ", "which", " ", "could", " ", 
          "be", " ", "one", " ", "or", " ", "two", " ", "parameters", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"form", ":", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p4", " ", "->", " ", "3.4"}], "}"}], " ", "for", " ", 
              "one", " ", "parameter"}]}], ",", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"p2", " ", "->", " ", "1"}], ",", " ", 
               RowBox[{"p4", " ", "->", " ", "4"}]}], "}"}], " ", "for", " ", 
             "two", " ", "parameters"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"equilibrium", ":", " ", 
         RowBox[{"values", " ", "of", " ", "equilibrium", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"form", ":", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"var1", " ", "->", " ", "4.5"}], ",", " ", 
                RowBox[{"var2", " ", "->", " ", "44"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Output", ":", "\[IndentingNewLine]", " ", 
              RowBox[{
              "symbol", " ", "\"\<*\>\"", " ", "if", " ", "the", " ", 
               "equilibrium", " ", "is", " ", "unstable"}]}]}], ",", " ", 
            RowBox[{
            "symbol", " ", "\"\<.\>\"", " ", "if", " ", "the", " ", 
             "equilibrium", " ", "is", " ", "stable"}]}], 
           "\[IndentingNewLine]"}]}]}]}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "jmat", ",", " ", "pc", ",", " ", "pf", ",", " ", "r", ",", "eq", ",", 
      " ", "eiv", ",", " ", "anyZero", ",", " ", "anyPos", ",", " ", "allNeg",
       ",", " ", "ps"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"jmat", " ", "=", " ", "jacobmatrix"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pc", " ", "=", " ", "parcommon"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pf", " ", "=", " ", "parsfollow"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"eq", " ", "=", " ", "equilibrium"}], ";", "\[IndentingNewLine]", 
     RowBox[{"eiv", " ", "=", " ", 
      RowBox[{"Eigenvalues", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"jmat", "/.", "pc"}], "/.", "pf"}], "/.", "eq"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"anyZero", " ", "=", " ", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]]}], "<=", 
          RowBox[{"Re", "[", "eiv", "]"}], "<=", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], "]"}], ",", " ", "TrueQ"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"anyPos", " ", "=", " ", 
      RowBox[{"AnyTrue", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Re", "[", "eiv", "]"}], ">", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], "]"}], ",", " ", "TrueQ"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"allNeg", " ", "=", " ", 
      RowBox[{"AllTrue", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Re", "[", "eiv", "]"}], "<", 
          RowBox[{"-", 
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]]}]}], "]"}], ",", " ", "TrueQ"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
      "anyZero", ",", " ", "\"\<*\>\"", ",", "anyPos", ",", " ", "\"\<*\>\"", 
       ",", " ", "allNeg", ",", " ", "\"\<.\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.840543000301889*^9, 3.8405431745135508`*^9}, {
  3.844919031664979*^9, 3.844919118874138*^9}, {3.844919512555979*^9, 
  3.8449195395120163`*^9}, {3.844919602254724*^9, 3.844919697489541*^9}, {
  3.844919792835031*^9, 3.844919848271138*^9}, {3.844920865319117*^9, 
  3.844920902153619*^9}, {3.844921619592185*^9, 3.844921629252592*^9}, {
  3.8450341388562183`*^9, 3.845034141797454*^9}, {3.845035158395164*^9, 
  3.845035206873447*^9}, {3.8451050482138023`*^9, 3.845105049766901*^9}, {
  3.845471484487722*^9, 3.8454715005104103`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e13c168c-6f9c-4c51-8f33-65573a30096f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListStableMark", "[", 
   RowBox[{
   "jacobmatrix_", ",", " ", "parcommon_", ",", " ", "parfollow_", ",", " ", 
    "range_", ",", "equiList_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Mark", " ", "a", " ", "list", " ", "of", " ", "equilibrium", " ", "with",
      " ", "corresponding", " ", "bifurcation", " ", "parameter", " ", 
     "values"}], ",", " ", 
    RowBox[{
     RowBox[{
     "depending", " ", "on", " ", "the", " ", "stability", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Input", ":", "\[IndentingNewLine]", "jacobmatrix", ":", " ", 
       RowBox[{
       "jacobian", " ", "matrix", " ", "of", " ", "the", " ", "system", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}]}], ")"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"parcommon", ":", " ", 
      RowBox[{"values", " ", "of", " ", "fixed", " ", "parameters", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1", " ", "->", " ", "2"}], ",", " ", 
            RowBox[{"p2", "->", " ", "3"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"parfollow", ":", " ", 
          RowBox[{"bifurcation", " ", "parameter", " ", 
           RowBox[{"(", 
            RowBox[{"form", ":", " ", 
             RowBox[{
             "symbol", " ", "of", " ", "the", " ", "bifurcation", " ", 
              "parameter"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"range", ":", " ", 
          RowBox[{
          "values", " ", "of", " ", "the", " ", "bifurcation", " ", 
           "parameter", " ", 
           RowBox[{"(", 
            RowBox[{"form", ":", " ", 
             RowBox[{"{", 
              RowBox[{"0.1", ",", " ", "0.2"}], "}"}]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"equiList", ":", " ", 
          RowBox[{
          "list", " ", "of", " ", "values", " ", "of", " ", "equilibrium", 
           " ", "corresponds", " ", "with", " ", "different", " ", "values", 
           " ", "of", " ", "bifurcation", " ", "parameter", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"form", ":", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"var1", " ", "->", " ", "4.5"}], ",", " ", 
                   RowBox[{"var2", " ", "->", " ", "44"}]}], "}"}], ",", " ", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"var1", " ", "->", " ", "4.6"}], ",", " ", 
                   RowBox[{"var2", "->", " ", "45"}]}], "}"}]}], "}"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Output", ":", "\[IndentingNewLine]", " ", 
               RowBox[{
               "a", " ", "list", " ", "of", " ", "symbols", " ", "that", " ", 
                "correspond", " ", "to", " ", "the", " ", "stability", " ", 
                "of", " ", "the", " ", "equilibrium"}]}]}], ",", " ", 
             RowBox[{
             "symbol", " ", "\"\<*\>\"", " ", "if", " ", "the", " ", 
              "equilibrium", " ", "is", " ", "unstable"}], ",", " ", 
             RowBox[{
             "symbol", " ", "\"\<.\>\"", " ", "if", " ", "the", " ", 
              "equilibrium", " ", "is", " ", "stable", "\[IndentingNewLine]", 
              
              RowBox[{"(", 
               RowBox[{"form", ":", " ", 
                RowBox[{"{", 
                 RowBox[{"*", 
                  RowBox[{",", 
                   RowBox[{"*", 
                    RowBox[{",", 
                    RowBox[{".", 
                    RowBox[{",", "."}]}]}]}]}]}], "}"}]}], 
               ")"}]}]}]}]}]}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "jmat", ",", " ", "pc", ",", " ", "pf", ",", " ", "r", ",", "eql", ",", 
      " ", "eiv", ",", " ", "ps"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"jmat", " ", "=", " ", "jacobmatrix"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pc", " ", "=", " ", "parcommon"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pf", " ", "=", " ", "parfollow"}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "=", "range"}], ";", "\[IndentingNewLine]", 
     RowBox[{"eql", " ", "=", " ", "equiList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapThread", "[", 
      RowBox[{"SingleStableMark", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"jmat", ",", " ", 
           RowBox[{"Length", "[", "eql", "]"}]}], "]"}], ",", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"pc", ",", " ", 
           RowBox[{"Length", "[", "eql", "]"}]}], "]"}], ",", 
         RowBox[{"Thread", "[", 
          RowBox[{"pf", "->", "r"}], "]"}], ",", " ", "eql"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.844919880835051*^9, 3.8449199253933487`*^9}, {
  3.84492004551578*^9, 3.844920092400696*^9}, {3.8449208529240417`*^9, 
  3.8449208605158777`*^9}, {3.844920918081481*^9, 3.844921064080635*^9}, {
  3.8449219504522877`*^9, 3.844921979099485*^9}, {3.845034145528089*^9, 
  3.845034152462821*^9}, {3.845105042407344*^9, 3.84510504425309*^9}, {
  3.845471509665821*^9, 3.845471574930997*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4f208944-344c-47c3-b96b-bc8e806ab0bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListStableMarkTwoParameters", "[", 
   RowBox[{
   "jacobmatrix_", ",", " ", "parcommon_", ",", " ", "bifurParNames_", ",", 
    "listbifurParsValues_", ",", " ", "equiList_", ",", " ", "useColor_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Mark", " ", "a", " ", "list", " ", "of", " ", "equilibrium", " ", 
     "corresponding", " ", "to", " ", "two", " ", "bifurcation", " ", 
     "values"}], ",", " ", 
    RowBox[{
     RowBox[{
     "depending", " ", "on", " ", "its", " ", "stability", 
      "\[IndentingNewLine]", 
      RowBox[{"Input", ":", "\[IndentingNewLine]", "jacobmatrix", ":", " ", 
       RowBox[{
       "jacobian", " ", "matrix", " ", "of", " ", "the", " ", "system", " ", 
        RowBox[{"(", 
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", " ", "b"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}]}], ")"}]}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"parcommon", ":", " ", 
      RowBox[{"values", " ", "of", " ", "fixed", " ", "parameters", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"form", ":", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1", " ", "->", " ", "2"}], ",", " ", 
            RowBox[{"p2", "->", " ", "3"}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"bifurParNames", ":", " ", 
          RowBox[{
          "name", " ", "of", " ", "the", " ", "two", " ", "bifurcation", " ", 
           "parameters", " ", 
           RowBox[{"(", 
            RowBox[{"form", ":", " ", 
             RowBox[{"{", 
              RowBox[{"bifurpar1", " ", ",", " ", "bifurpar2"}], "}"}]}], 
            ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"listbifurParsValues", ":", " ", 
          RowBox[{
          "list", " ", "of", " ", "corresponding", " ", "pair", " ", "of", 
           " ", "bifurcation", " ", "parameters", " ", "with", " ", "the", 
           " ", "list", " ", "of", " ", "equilibrium", " ", 
           RowBox[{"(", 
            RowBox[{"form", ":", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"3.4", ",", " ", "3"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"2.4", ",", " ", "4"}], "}"}]}], "}"}]}], ")"}], 
           "\[IndentingNewLine]", "equiList"}], ":", " ", 
          RowBox[{
          "list", " ", "of", " ", "values", " ", "of", " ", "equilibrium", 
           " ", "corresponds", " ", "with", " ", "different", " ", "values", 
           " ", "of", " ", "bifurcation", " ", "parameters", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"form", ":", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"var1", " ", "->", " ", "4.5"}], ",", " ", 
                   RowBox[{"var2", " ", "->", " ", "44"}]}], "}"}], ",", " ", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"var1", " ", "->", " ", "4.6"}], ",", " ", 
                   RowBox[{"var2", "->", " ", "45"}]}], "}"}]}], "}"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"useColor", ":", " ", 
               RowBox[{
               "True", " ", "if", " ", "the", " ", "stability", " ", "is", 
                " ", "marked", " ", "as", " ", "different", " ", 
                "color"}]}]}], ",", " ", 
             RowBox[{
             "False", " ", "if", " ", "the", " ", "stability", " ", "is", " ",
               "marked", " ", "as", " ", "different", " ", "markers", 
              "\[IndentingNewLine]", 
              RowBox[{"Output", ":", " ", "\[IndentingNewLine]", 
               RowBox[{
               "a", " ", "list", " ", "of", " ", "symbols", " ", "that", " ", 
                "correspond", " ", "to", " ", "the", " ", "stability", " ", 
                "of", " ", "the", " ", "equilibrium"}]}]}], ",", " ", 
             RowBox[{
             "symbol", " ", "\"\<*\>\"", " ", "if", " ", "the", " ", 
              "equilibrium", " ", "is", " ", "unstable"}], ",", " ", 
             RowBox[{
              RowBox[{
              "symbol", " ", "\"\<.\>\"", " ", "if", " ", "the", " ", 
               "equilibrium", " ", "is", " ", "stable", "\[IndentingNewLine]", 
               RowBox[{"(", 
                RowBox[{"form", ":", " ", 
                 RowBox[{"{", 
                  RowBox[{"*", 
                   RowBox[{",", 
                    RowBox[{"*", 
                    RowBox[{",", 
                    RowBox[{".", 
                    RowBox[{",", "."}]}]}]}]}]}], "}"}]}], ")"}], 
               "\[IndentingNewLine]", "If", " ", "colorUse"}], " ", "==", " ",
               "True"}], ",", " ", 
             RowBox[{
             "the", " ", "stable", " ", "equilibrium", " ", "will", " ", 
              "have", " ", "different", " ", "color", " ", "than", " ", "the",
               " ", "unstable", " ", "equilibrium"}]}], 
            "\[IndentingNewLine]"}]}]}]}]}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "jmat", ",", " ", "pc", ",", " ", "eql", ",", " ", "eiv", ",", " ", 
      "bfparsN", ",", " ", "lbfparsV", ",", " ", "marklist", ",", " ", 
      "listval"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"jmat", " ", "=", " ", "jacobmatrix"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pc", " ", "=", " ", "parcommon"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bfparsN", " ", "=", " ", "bifurParNames"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lbfparsV", " ", "=", " ", "listbifurParsValues"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eql", " ", "=", " ", "equiList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"listval", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"bifurParNames", "->", "#"}], "]"}], "&"}], "/@", " ", 
       "lbfparsV"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"useColor", ",", 
       RowBox[{"marklist", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"SingleStableColor", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"jmat", ",", " ", 
              RowBox[{"Length", "[", "eql", "]"}]}], "]"}], ",", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"pc", ",", " ", 
              RowBox[{"Length", "[", "eql", "]"}]}], "]"}], ",", "listval", 
            ",", " ", "eql"}], "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"marklist", " ", "=", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"SingleStableMark", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ConstantArray", "[", 
             RowBox[{"jmat", ",", " ", 
              RowBox[{"Length", "[", "eql", "]"}]}], "]"}], ",", " ", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"pc", ",", " ", 
              RowBox[{"Length", "[", "eql", "]"}]}], "]"}], ",", "listval", 
            ",", " ", "eql"}], "}"}]}], "]"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.845105035606749*^9, 3.8451050386253443`*^9}, {
   3.845105279133724*^9, 3.845105307213985*^9}, {3.845106086924595*^9, 
   3.8451060934047127`*^9}, {3.845107312200329*^9, 3.8451074275609913`*^9}, {
   3.84546439839767*^9, 3.845464423127342*^9}, {3.845464486043086*^9, 
   3.845464539317629*^9}, {3.845465542656575*^9, 3.84546554341221*^9}, {
   3.8454660513743677`*^9, 3.845466064904664*^9}, {3.845470331948701*^9, 
   3.845470444002743*^9}, {3.845470474587942*^9, 3.845470516013913*^9}, {
   3.845470709367137*^9, 3.84547071819984*^9}, 3.8454708229559937`*^9, 
   3.845470973330511*^9, {3.84547103032559*^9, 3.845471047769886*^9}, 
   3.845471396380031*^9, {3.8454715784639378`*^9, 3.8454718129458923`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"03285433-5fe5-4529-bb0a-55a113f476c3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Single infection", "Title",
 CellChangeTimes->{{3.825668663761571*^9, 3.8256686880677233`*^9}, 
   3.826272929194303*^9, {3.827819505375657*^9, 3.827819511550613*^9}, {
   3.842512739193997*^9, 
   3.842512739553748*^9}},ExpressionUUID->"e2410933-2bd8-405a-85df-\
b2c02a65e69a"],

Cell[CellGroupData[{

Cell["Ecological dynamics of a resident", "Chapter",
 CellChangeTimes->{{3.825769393130102*^9, 
  3.825769403189344*^9}},ExpressionUUID->"347ecd39-c728-456d-9e67-\
25129abde59f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIsdt", " ", "=", " ", 
    RowBox[{
     RowBox[{"R", "[", 
      RowBox[{"Iw", ",", " ", "Is"}], "]"}], "-", " ", 
     RowBox[{"d", " ", "Is"}], "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "Is"}], "  ", "-", " ", 
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "intermediate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Iw"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], 
      "Iw"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDsdt", " ", "=", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
     "  ", "-", " ", 
     RowBox[{"\[Mu]", " ", "Ds"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}]}]}], ";"}], 
  "  ", 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "definitive"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDwdt", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}], "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], " ", "Dw"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "definitive"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dWdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fw", " ", "Dw"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "W"}], " ", "-", " ", 
    RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.825656713077812*^9, 3.825656819315256*^9}, {
   3.8256675673352013`*^9, 3.825667571392377*^9}, {3.8256676047331753`*^9, 
   3.8256679949825287`*^9}, 3.825668657319312*^9, {3.825669024736739*^9, 
   3.825669107703614*^9}, {3.825669201205226*^9, 3.825669201481333*^9}, {
   3.825669256379244*^9, 3.82566950377395*^9}, {3.825669536259808*^9, 
   3.8256696344884987`*^9}, {3.8256696689148417`*^9, 3.825670143310657*^9}, {
   3.825670345459824*^9, 3.825670438958109*^9}, {3.825670488620307*^9, 
   3.825670543829121*^9}, {3.825670663648823*^9, 3.825670761696919*^9}, {
   3.825671013629569*^9, 3.825671139741517*^9}, {3.825742172557213*^9, 
   3.8257421729950933`*^9}, {3.825742207420051*^9, 3.8257422478914013`*^9}, {
   3.82574345173761*^9, 3.82574350922976*^9}, {3.825760175997797*^9, 
   3.82576018688303*^9}, {3.8257606621022377`*^9, 3.825760675998103*^9}, 
   3.8257607945724363`*^9, {3.825760904709169*^9, 3.82576091270079*^9}, {
   3.8257617801084433`*^9, 3.8257617912632027`*^9}, {3.8257621523527527`*^9, 
   3.825762165308137*^9}, {3.825762201784202*^9, 3.825762208487948*^9}, {
   3.825762251027261*^9, 3.825762354682111*^9}, 3.8257625163120213`*^9, {
   3.825762659025866*^9, 3.825762659901341*^9}, {3.825762902484415*^9, 
   3.825762910346539*^9}, {3.8257634961592484`*^9, 3.825763496692479*^9}, {
   3.825766757419752*^9, 3.825766767356141*^9}, {3.825766833920692*^9, 
   3.825766853096877*^9}, {3.825766897662359*^9, 3.8257668980739517`*^9}, {
   3.8257682274738283`*^9, 3.825768355004142*^9}, {3.825996664752124*^9, 
   3.825996692179337*^9}, {3.82626863451892*^9, 3.826268767236582*^9}, {
   3.8262689370700693`*^9, 3.826268937767343*^9}, {3.826268980930978*^9, 
   3.8262689879990473`*^9}, {3.82626904542638*^9, 3.826269047123454*^9}, {
   3.826271241094585*^9, 3.82627124404462*^9}, {3.827819518344512*^9, 
   3.827819536797364*^9}, {3.8278209102469873`*^9, 3.8278212216057177`*^9}, {
   3.827821911512141*^9, 3.827821969572859*^9}, {3.8278221978352613`*^9, 
   3.8278222272418337`*^9}, {3.827822510921095*^9, 3.827822511765992*^9}, {
   3.827823318435688*^9, 3.827823330286881*^9}, {3.827823839514995*^9, 
   3.8278238647577143`*^9}, {3.8280753879957237`*^9, 3.82807539054478*^9}, {
   3.82807610064509*^9, 3.828076102177025*^9}, {3.8280786078866158`*^9, 
   3.82807862016877*^9}, {3.829382110716173*^9, 3.829382222814026*^9}, {
   3.829382282426675*^9, 3.829382339462714*^9}, {3.82938254818421*^9, 
   3.829382549728499*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8b081d47-922f-4ce6-8a45-a63998a7e6d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827822459562306*^9, 3.827822484038743*^9}, {
   3.82930004587323*^9, 3.829300078603044*^9}, 3.829300337544739*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"c2856705-6bd8-4884-8f3f-1a5c6518ece5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func1", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829288616107027*^9, 3.8292886259950533`*^9}, {
  3.829289279204534*^9, 3.829289283627792*^9}, {3.82928933576853*^9, 
  3.829289352141361*^9}, {3.8292897198397703`*^9, 3.8292897211117163`*^9}, {
  3.829300310231729*^9, 3.829300322388371*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"54054f20-67bb-4aa7-ba74-1444f4fee045"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw", ",", " ", "W"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIsdt", ",", " ", "dIwdt", ",", " ", "dDsdt", ",", " ", "dDwdt", ",", 
     " ", "dWdt"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8278235561211777`*^9, 3.8278235895996933`*^9}, {
  3.827823939807645*^9, 3.827823944103592*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4c120fe5-edf2-4f0b-a0c4-4c05eb9f3d97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func0"}], "/.", 
     RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.82782571391743*^9, {3.828076226269494*^9, 3.8280762269740458`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"78e5f8a6-c964-4cd9-b6b3-430439c7f94c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], "\[Rho]"]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.827825716047372*^9, 3.8280754028129396`*^9, 3.828076111650443*^9, 
   3.828076227621562*^9, 3.828076300563541*^9, 3.828078712930681*^9, 
   3.828086164640039*^9, 3.8292880769844103`*^9, {3.829300326235674*^9, 
   3.82930034116356*^9}, 3.843901448864573*^9, 3.86204552143047*^9, 
   3.862045620426866*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"501f5d2c-8c4d-4219-ab41-8668cce1b2a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0Func1", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func1"}], "/.", 
      RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}],
     "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.829289374739566*^9, 3.829289377514204*^9}, {
  3.829289628424356*^9, 3.829289632462536*^9}, {3.829290198591793*^9, 
  3.829290200130179*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"cde0c728-6854-4259-8f49-f7464b0022e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"\[CapitalKappa]", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[CapitalKappa]"}], "r"]}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Mu]"}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", " ",
          "\[Rho]"}]}], 
       RowBox[{"c", " ", "\[CapitalKappa]", " ", 
        SuperscriptBox["\[Rho]", "2"]}]]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.829289379669998*^9, 3.829289633821643*^9, 3.829289727885021*^9, 
   3.829290200649737*^9, {3.8293003277196293`*^9, 3.829300342558381*^9}, 
   3.843901448916048*^9, 3.8620455215157423`*^9, 3.8620456204932337`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"9f4f60f7-32df-46db-afc9-b7ae8868c7a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability of the equilibrium", "Subchapter",
 CellChangeTimes->{{3.828075643251759*^9, 
  3.8280756472434187`*^9}},ExpressionUUID->"14104169-d0d0-4365-b4ec-\
280c816a651d"],

Cell[CellGroupData[{

Cell["Linear functions", "Section",
 CellChangeTimes->{{3.82928999027208*^9, 
  3.82928999320476*^9}},ExpressionUUID->"2b8aed48-32f8-4b42-bbc2-\
723030fa0481"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", "r", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", "  ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8280756685967827`*^9, 3.8280758314732227`*^9}, {
   3.8280758639554453`*^9, 3.828075892701819*^9}, {3.828075940412252*^9, 
   3.8280759898078003`*^9}, {3.828078724139042*^9, 3.828078752078988*^9}, 
   3.829290027566111*^9, {3.829300130500415*^9, 3.82930016017767*^9}, {
   3.8293002159920588`*^9, 3.82930022248534*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"ca531b34-2fa4-493b-b8e4-9371f424e05d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.82807600588461*^9, 3.82807600787519*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"83da6842-e37e-456f-89ab-9974ac8633b4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "+", "r", "-", 
       RowBox[{"W", " ", "\[Gamma]w"}], "-", 
       RowBox[{"\[CapitalPi]0", "[", 
        RowBox[{"Ds", ",", "Dw"}], "]"}]}], "r", "0", "0", "0"},
     {
      RowBox[{"W", " ", "\[Gamma]w"}], 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{"\[CapitalPi]1", "[", 
        RowBox[{"Ds", ",", "Dw", ",", "\[Beta]w"}], "]"}]}], "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", "\[Mu]", "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}], "0"},
     {"0", "0", 
      RowBox[{"Iw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "0", "0", "fw", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.828076008300259*^9, 3.8280761179662313`*^9, 
  3.828078755173183*^9, 3.829300226482354*^9, 3.829300351878982*^9, 
  3.843901448946094*^9, 3.862045521538986*^9},
 CellLabel->
  "Out[24]//MatrixForm=",ExpressionUUID->"f20f22eb-55e8-40a8-9295-\
4121603031a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", ".", "var"}], " ", "/.", "func0"}], ")"}], "\[Equal]", " ", 
   
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func0"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.828076010664349*^9, 3.828076033593799*^9}, {
  3.829300240583639*^9, 3.829300247307254*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"a1e8e329-d1be-437b-979f-f76e9c69a842"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.828076016562026*^9, 3.8280760341117353`*^9}, 
   3.828076120029529*^9, 3.828076306539208*^9, 3.828078757851067*^9, {
   3.8293002276825333`*^9, 3.829300247807722*^9}, 3.82930035279112*^9, 
   3.843901448981357*^9, 3.862045521563464*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"42b50e14-190b-41e5-8f3f-b465cfeb92f7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aeigens", " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"A", "/.", "func0"}], "]"}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.828076310764051*^9, 3.828076351937457*^9}, {
   3.828078760409507*^9, 3.828078764213051*^9}, 3.829300257241005*^9, {
   3.829300738466364*^9, 3.829300765221094*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"7735dd75-8017-4b11-91c7-55fb02c97018"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076332256621*^9, 3.828076411850637*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"9429d688-f9ec-4e2d-bcb9-a0289b0cdc56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Delta]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "+", "r"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", 
   RowBox[{"-", "\[Mu]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828076339826378*^9, 3.828076412505925*^9}, 
   3.8280787697360687`*^9, 3.828086172676084*^9, 3.829288085095286*^9, 
   3.829300269150385*^9, 3.829300355076603*^9, 3.8439014502185373`*^9, 
   3.8620455237723703`*^9, 3.8620456307494707`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"9573b973-e305-4ec4-9fb9-fcfb07521e56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"\[Mu]", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[Rho]", ">", "0"}], ",", " ", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"\[Beta]w", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076438838669*^9, 3.828076629434969*^9}, {
  3.828076660323764*^9, 3.828076692435136*^9}, {3.829300361942924*^9, 
  3.829300364001012*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b02d50f7-6fb3-4f6e-8d39-af6987745ce0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"r", " ", "\[Beta]w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
        RowBox[{"r", " ", "\[Beta]w"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], "]"}]}], 
     RowBox[{"2", " ", "\[Rho]"}]]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{"d", " ", "\[Beta]w"}], "-", 
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], "\[Rho]"], 
          RowBox[{
           RowBox[{"d", " ", "\[Beta]w"}], ">", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.828076443588296*^9, 3.828076448866023*^9}, {
   3.828076491595972*^9, 3.828076509364583*^9}, {3.8280765436147547`*^9, 
   3.828076629902029*^9}, 3.828076660810093*^9, 3.828076692932027*^9, 
   3.828078772766087*^9, 3.828086177404166*^9, 3.829288089287722*^9, 
   3.829300275948649*^9, {3.8293003581064453`*^9, 3.829300366801404*^9}, 
   3.843901450978747*^9, 3.8620455246045027`*^9, 3.862045632959903*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"b255c227-a91d-43e8-a52f-28b6f86401a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic growth intermediate hosts", "Section",
 CellChangeTimes->{{3.8292900059177437`*^9, 
  3.82929001400443*^9}},ExpressionUUID->"fcba5493-30b4-446e-87dd-\
e9e18e89e6a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], 
          ")"}]}], " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "-", "  ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", 
       RowBox[{"r", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}]}],
        ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.829290041468392*^9, 3.829290083293619*^9}, 
   3.8292901573628817`*^9, {3.829300399906165*^9, 3.829300442929491*^9}, {
   3.829300483360271*^9, 3.829300508729198*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"b45977e5-c6d8-496c-9d5c-1587e84cf79e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AFunc1", "/.", "func1"}], ")"}], ".", "var"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func1"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.829290095052435*^9, 3.829290098954587*^9}, {
  3.829300515668148*^9, 3.829300521210037*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"b3287b01-f6b4-40bd-ba65-2b61082c79c7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.829290099646719*^9, 3.829290159160308*^9, 
  3.829300521645545*^9, 3.8439014510059767`*^9, 3.862045524641963*^9, 
  3.862045635988089*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"aa8d1964-ee3f-4dbc-b39a-323293248235"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AeigensFunc1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"AFunc1", "/.", "func1"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8292901719851007`*^9, 3.8292901810399313`*^9}, {
   3.82929074163208*^9, 3.829290752355545*^9}, 3.8293005303519163`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"d1789bb6-c8cb-45de-8d7f-6b645cb73e82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", "\[Alpha]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
            RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
          "\[CapitalKappa]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
               RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
            RowBox[{"2", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
               RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[CapitalKappa]", "2"]}]}]], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
          SuperscriptBox["r", "2"]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", "\[Alpha]", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
            RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
          "\[CapitalKappa]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
               RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
            RowBox[{"2", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
               RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
          SuperscriptBox["\[CapitalKappa]", "2"]}]}]], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "-", 
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", "\[Sigma]"}], "+", 
        RowBox[{"2", " ", "c", " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]", " ", "\[Sigma]"}], 
        "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "-", 
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", "\[Sigma]"}], "+", 
        RowBox[{"2", " ", "c", " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]", " ", "\[Sigma]"}], 
        "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292907421726227`*^9, 3.829290763056777*^9}, 
   3.8292919693355*^9, 3.829300538962901*^9, 3.843901453194866*^9, 
   3.862045528211835*^9, 3.862045641273074*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"295cf7df-3de9-46c2-9dad-60a40b8212c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
         "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.829290252923359*^9, 3.829290287663924*^9}, {
  3.8292910415729322`*^9, 3.829291069670826*^9}, {3.829291112620542*^9, 
  3.829291130398438*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b1f6f05f-b198-4d17-b565-c5f735368457"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "r"}], ")"}], " ", "\[Gamma]w", " ", 
      "\[CapitalKappa]"}], "r"]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", "r", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "d", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "-", 
      RowBox[{"c", " ", "r", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
      RowBox[{"r", " ", "\[Sigma]"}], "+", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", 
           " ", "\[Rho]"}], "+", 
          RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
     RowBox[{"2", " ", "r"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "r", " ", "\[Mu]"}], "-", 
     RowBox[{"c", " ", "d", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
     RowBox[{"c", " ", "r", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "-", 
     RowBox[{"r", " ", "\[Sigma]"}], "+", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", 
          " ", "\[Rho]"}], "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
    RowBox[{"2", " ", "r"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.829290258431539*^9, 3.829290289447657*^9}, {
   3.829291042355114*^9, 3.8292910703968067`*^9}, {3.82929111571244*^9, 
   3.8292911317045403`*^9}, 3.8439014538210907`*^9, 3.8620455294135027`*^9, 
   3.862045642257331*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"eeb3c1ce-6992-474b-81e1-a5d0c4f1d814"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", "  ", 
      RowBox[{"c", ">", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Mu]", "+", "\[Sigma]"}], ">", "0"}], ",", " ", 
      RowBox[{"p", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829291289871559*^9, 3.829291290239362*^9}, {
  3.8292916950073843`*^9, 3.829291720881555*^9}, {3.829291758744101*^9, 
  3.8292917610597973`*^9}, {3.829291796461124*^9, 3.829291823491487*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"36d6ffe1-129a-4934-b870-c599e625b52c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "-", 
        RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], ")"}]}], "-", 
     
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "c"}], " ", "d", " ", "\[Beta]w", " ", 
         "\[CapitalKappa]"}], "+", 
        RowBox[{"c", " ", "\[Alpha]", " ", "\[CapitalKappa]", " ", "\[Rho]"}],
         "+", 
        RowBox[{"\[Rho]", " ", 
         SqrtBox[
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "\[Beta]w"}], "-", 
                 RowBox[{"\[Alpha]", " ", "\[Rho]"}]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "-", 
                 RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], 
                ")"}]}]}], ")"}], "2"], 
           SuperscriptBox["\[Rho]", "4"]]]}]}], ")"}]}]}], 
    RowBox[{"2", " ", "c", " ", "\[CapitalKappa]", " ", 
     SuperscriptBox["\[Rho]", "2"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "-", 
        RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], ")"}]}], "+", 
     
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c", " ", "d", " ", "\[Beta]w", " ", "\[CapitalKappa]"}], "-", 
        RowBox[{"c", " ", "\[Alpha]", " ", "\[CapitalKappa]", " ", "\[Rho]"}],
         "+", 
        RowBox[{"\[Rho]", " ", 
         SqrtBox[
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "\[Beta]w"}], "-", 
                 RowBox[{"\[Alpha]", " ", "\[Rho]"}]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "-", 
                 RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], 
                ")"}]}]}], ")"}], "2"], 
           SuperscriptBox["\[Rho]", "4"]]]}]}], ")"}]}]}], 
    RowBox[{"2", " ", "c", " ", "\[CapitalKappa]", " ", 
     SuperscriptBox["\[Rho]", "2"]}]], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8292913245970497`*^9, 3.829291725907846*^9, 3.8292917660872*^9, {
   3.8292918006740217`*^9, 3.829291828360304*^9}, 3.8439014552010508`*^9, 
   3.862045531833498*^9, 3.8620456444375668`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"160e7282-681d-4bd4-b59b-f8b2419106fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.827821229838979*^9, 3.827821235402285*^9}, {
  3.827822320596498*^9, 
  3.827822326849743*^9}},ExpressionUUID->"d64a0ded-64d0-4075-ba2d-\
09e7966fc28b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysFunc0", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func0"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysFunc1", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func1"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827822569148403*^9, 3.827822704174527*^9}, {
   3.82782318211902*^9, 3.827823191092559*^9}, {3.827823394132936*^9, 
   3.827823503736817*^9}, {3.827823561478395*^9, 3.8278236008621883`*^9}, 
   3.827823822161427*^9, 3.8278239657774*^9, {3.829289669271122*^9, 
   3.829289678688631*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"6ed70da2-74b9-4272-aaa8-b89d16802528"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEco", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.9"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278223341819477`*^9, 3.827822444366211*^9}, {
   3.827822502232439*^9, 3.8278225649661427`*^9}, {3.827825386494244*^9, 
   3.827825410863459*^9}, {3.827825453929977*^9, 3.827825454403831*^9}, {
   3.827825522729954*^9, 3.827825550524976*^9}, 3.8278256021678753`*^9, {
   3.827825650036694*^9, 3.827825650806609*^9}, {3.8280740126142387`*^9, 
   3.828074014681838*^9}, {3.828074290887507*^9, 3.828074291596635*^9}, {
   3.82807437954491*^9, 3.828074379943386*^9}, {3.828074423685811*^9, 
   3.8280744257790956`*^9}, {3.8280744969747133`*^9, 3.828074497466743*^9}, {
   3.828074529108124*^9, 3.828074551945829*^9}, {3.828074599895774*^9, 
   3.828074621473525*^9}, {3.82807468419691*^9, 3.828074700019969*^9}, {
   3.8280747397753277`*^9, 3.8280747404372063`*^9}, {3.8280866177014112`*^9, 
   3.828086617870452*^9}, {3.8280867505244417`*^9, 3.828086751093014*^9}, {
   3.829288379414507*^9, 3.829288379901534*^9}, {3.829288433156987*^9, 
   3.829288433462543*^9}, 3.829288506903331*^9, {3.829289683788238*^9, 
   3.8292897118374643`*^9}, {3.829290329283586*^9, 3.829290329519761*^9}, 
   3.829290393474928*^9, 3.829290916726027*^9, {3.829290975953576*^9, 
   3.8292909848376493`*^9}, {3.829297048005028*^9, 3.8292970485160303`*^9}, {
   3.829300549003931*^9, 3.829300556258101*^9}, {3.8293012617683773`*^9, 
   3.829301262999346*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"c979be48-2d2f-47a1-957b-f3b8c0e37375"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc0", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "30"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sys", "/.", "func0"}], "/.", "prEco"}], ")"}], " ", 
      "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func0", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc0", "/.", "prEco"}], ",", " ", "initFunc0"}], "]"}], 
    ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.827822957647459*^9, 3.827822969409224*^9}, {
   3.827823644111948*^9, 3.827823657623238*^9}, 3.827823709992982*^9, {
   3.827823999487968*^9, 3.827824025530137*^9}, {3.8278240605321407`*^9, 
   3.827824067947177*^9}, {3.828074564712682*^9, 3.8280745652597237`*^9}, {
   3.8280747017880707`*^9, 3.828074702577971*^9}, {3.828074773328237*^9, 
   3.828074774978272*^9}, {3.828074964773364*^9, 3.828074977832465*^9}, {
   3.828086197642436*^9, 3.8280862131636887`*^9}, {3.829289817759626*^9, 
   3.829289821771514*^9}, {3.8292924292035313`*^9, 3.829292435207684*^9}, {
   3.829296644229384*^9, 3.829296671808436*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"55d5cab9-f537-4b4d-9735-0b5cf3b5a569"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"55.15048293459869`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 38, 1, 
   30896630613833907036, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.829301265150618*^9, 3.843901455271113*^9, 
  3.8620455320523148`*^9, 3.862045652159313*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"a6e75068-bb22-4835-9f85-7ec6ec7df7ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAANgSDq3ldrz5/W+skV/8jQA556HcF
xew/lu1ENgn/JT/+SZYkxfr9PzjEEW2tpyM/Iv68DzxFBkDFaDv9ixZAP0JT
3tmFaA1ASTE3I2L8Vz/EO+b7V5MSQMLKf/1rC2w/G7dtL0kwFkDkmKKTYl14
PwWa24yqGhpADIA8j3N1gz/tOqEQxPIdQOQNhIxGQo0/haJ73FzEIEDMGJ8R
VhOVP13bmcUPtiJABKCVp1Annz/PSADBsIYkQCAYf12NZ6Y/QJWSzy1OJkDz
BVMq9/uvP3oVGPNiPChAkkNvymuHtz9OyuUohgkqQAB9WMXz3cA/7LKmc2H9
K0DZv96t0uzIP4l6k9EY6C1AyjGIFQ1J0j/AdshBvrEvQJjnMc36JNo/YVN4
4w3RMED5bAa/xEPjP66FMK+zuDFA8RH23aSq6z/gUWKFtbMyQEknnJX6efQ/
kg0qZSWqM0DnTbsGIhj+P5HjFU4MkDRAYIkubfyMBUB0U3tBT4k1QImKYdAs
0A9Apd0EPglyNkAJGaUU5uEWQFRXJEQxVjdAXSgQKHVXIEDpar1UtU04QC6N
b1vMDihA9bsGxvi1OEAg2RWqF8csQP99x9U=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAiJKf7jWyO0Ag2RWqF8csQGrpbvcI
CjxAesSqfBu1sz/iVNk4oQI9QJwulzhylGI/p9png7DqPUAIe+JhFSxdP+tP
jNctzj5ADFfvhM+xYj8UXyo2B8U/QA65KzjD72o/RUT2zqtVQEDKr53ygz1z
P/MlFAiC0kBAd2F1KWNnfD/HFMTFE0dBQP9FAZ4DcYQ/W/s+iFy5QUCrma32
EzeNP+Gu9k9TNUJAw1Pvh82ElT+Ob0CcBalCQE5rGCgw5J4/Lf3G7WUmQ0Cq
U9HtpdqmP4yCGER9oUNAY+7EE6PJsD8SFfweUBREQHKM9l+vCLg/inQc/9CQ
RECxxzcNf7vBPyjhzmMNBUVAKmssc7B/yT+GRUzNAHdFQKRdO1fwM9I/13YG
PKLyRUBhkC0WicnaP061Ui//ZUZAMd2LPg814z+3wNsnCuNGQI/u40vrY+w/
4MMvJcxdR0DrqhLxJNX0PzDUFadJ0EdA7nU5ITjL/T9ysTgudUxIQHz90ZqM
9QVA25vtOVzASECDOdAkPosPQDZT30rxPUlAIHcdAxZaF0BRApxgPblJQOmP
7D4TKiFAkr7q+kQsSkBdyX+CzpYoQMt3VJjYWEpAINkVqhfHLECHVdF3
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$16996#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 55.15048293459869}, {0., 
                   14.388852420012483`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAANgSDq3ldrz5/W+skV/8jQA556HcF
xew/lu1ENgn/JT/+SZYkxfr9PzjEEW2tpyM/Iv68DzxFBkDFaDv9ixZAP0JT
3tmFaA1ASTE3I2L8Vz/EO+b7V5MSQMLKf/1rC2w/G7dtL0kwFkDkmKKTYl14
PwWa24yqGhpADIA8j3N1gz/tOqEQxPIdQOQNhIxGQo0/haJ73FzEIEDMGJ8R
VhOVP13bmcUPtiJABKCVp1Annz/PSADBsIYkQCAYf12NZ6Y/QJWSzy1OJkDz
BVMq9/uvP3oVGPNiPChAkkNvymuHtz9OyuUohgkqQAB9WMXz3cA/7LKmc2H9
K0DZv96t0uzIP4l6k9EY6C1AyjGIFQ1J0j/AdshBvrEvQJjnMc36JNo/YVN4
4w3RMED5bAa/xEPjP66FMK+zuDFA8RH23aSq6z/gUWKFtbMyQEknnJX6efQ/
kg0qZSWqM0DnTbsGIhj+P5HjFU4MkDRAYIkubfyMBUB0U3tBT4k1QImKYdAs
0A9Apd0EPglyNkAJGaUU5uEWQFRXJEQxVjdAXSgQKHVXIEDpar1UtU04QC6N
b1vMDihA9bsGxvi1OEAg2RWqF8csQP99x9U=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAiJKf7jWyO0Ag2RWqF8csQGrpbvcI
CjxAesSqfBu1sz/iVNk4oQI9QJwulzhylGI/p9png7DqPUAIe+JhFSxdP+tP
jNctzj5ADFfvhM+xYj8UXyo2B8U/QA65KzjD72o/RUT2zqtVQEDKr53ygz1z
P/MlFAiC0kBAd2F1KWNnfD/HFMTFE0dBQP9FAZ4DcYQ/W/s+iFy5QUCrma32
EzeNP+Gu9k9TNUJAw1Pvh82ElT+Ob0CcBalCQE5rGCgw5J4/Lf3G7WUmQ0Cq
U9HtpdqmP4yCGER9oUNAY+7EE6PJsD8SFfweUBREQHKM9l+vCLg/inQc/9CQ
RECxxzcNf7vBPyjhzmMNBUVAKmssc7B/yT+GRUzNAHdFQKRdO1fwM9I/13YG
PKLyRUBhkC0WicnaP061Ui//ZUZAMd2LPg814z+3wNsnCuNGQI/u40vrY+w/
4MMvJcxdR0DrqhLxJNX0PzDUFadJ0EdA7nU5ITjL/T9ysTgudUxIQHz90ZqM
9QVA25vtOVzASECDOdAkPosPQDZT30rxPUlAIHcdAxZaF0BRApxgPblJQOmP
7D4TKiFAkr7q+kQsSkBdyX+CzpYoQMt3VJjYWEpAINkVqhfHLECHVdF3
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$16996#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 55.15048293459869}, {0., 
                   14.388852420012483`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.15048293459869}}, {
       5, 7, 1, {1979}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1:eJw91gk0Vd/3AHBDpkoZMlSmZAgps8fF2RR5npkMaZAMpUSSBhKSMRWV9E1K
SIhEKKSkmWgwJFMp85CSJOF/7z2/9beW9Vn33XP3Pvucfe66qzz87b042NjY
2Mn/Sh62//+zHV7DEe+VZ4StMBrk7JC6WjtpdKbqdUPA+AK05rDiEuH5Jahr
NoFtyWcptEyGw5Apo4j0jKuPJrxdh9arG7Z7gyZytJ8Wyx3XR1UPtuQdsjVG
Nq/vv0xZY4p6Pon2l7MxUdBwEFfbR0vkPdM8rvjJHglG/Nj+dZMzquLmf5Ne
6oa0zC5IFgi6o4V8N5rizT3Q57o7CbtPeKJrsukFm075oB1HTzcqJPgiqbfH
fnAl+SH/8/fiAlkBqLE6f4VHwwG0fuhGvp3dQXRG5D8D46Yg5KQ6MRbzPRhJ
mVpmNCw8inq3ZjuIKISggqA5rq3Gx1HQaef7N7aeQFL2LqW/KsMRR1fUktRX
EciyxTRHnf8kSmnghjrbKNT9/MVHzwunkNKj2ANzrdHoYDlzYerKWPTwzsJM
9R1xiOdWHVF3Ix7ZXj/d5NmXgIIGhuqzdM8gy9Qsj8CN59D2qg/bhfySENcx
nrjAHcnoti5R8t7uPHKY3N+psfEC+lt8g+e8zkV0I6BFfWJNCmKuW7jVYeUl
ND5sGF3Cn4ou5R4oEma7jIx8sj8d/HkZDb/hiPyP5wpK1XJXqpFIQxuvPHzb
r34V/WBfeWTJpnSUvvuItPbWayi73/drAeM6+vffcl3j2uvI3vplfJNVBrrF
frjL52MGComxaeS7dgNZ8a95nO+ViWTOs921WpuFJsTbMr7/zELP0u8mJz3I
Rqly8Sc1w28i3zyPoGazHGSoRngd5r+FrMfzlh8WykXuRSsagsXy0IGA+Mhg
iXwUqfZXJ3jVbXRhfM/wIYUClF3Udu2QSiEqC2A6HlK7gzxTt0ZVrChCeQ9C
r7tlF6HxT2lV/9bfRbr/qj5erbiLjkt2/jIyLUa1RrMCnxuLEZ+7pGrElhJk
G2HIlO0tQSk3tnnV+t9Dcmvvs1qXlaLiUiGN4QelyBj5ic9vL0ONL1/MCS0o
R9vsZXsVcsvRcHtonb71fXTMq/Wu9cR9hEwCHW7ceIC4pPknJ+0q0OuZnBQm
eyU699GEcbWoEm0u7Wwb31GFViYfCdm49CH6vF9YMrX6IXI67vb7fUY1qkvI
bOQ/9QjJvDnkKKf1GLk1La+pyX6MUtofqu4Qq0Hvenb+9y+2BuXdr7Th5XiC
Tp4R4VoW8gRt8/SvkP71BOnov/JX8atFSwVWy+v21aKB3tBPJjueImabSkg0
zzOUX/9p5es7z9Dix3FV/C7PkV8JY5sd2wvUcLN/9sKtF2j9fynpH21fIrcN
si7l1q9Q9EiBYIrla1R8Ua8uyKIOdRk9i3Iwr0d8A7ZGGmZvkHZSx5TAxgZk
4Vxxoy+8ERUtqVfo2v4WzScox052vEVWfHGDi93eobTofgu5tndoiNPsNuH8
HulFZPE7NL9HsXMc/r4OH1BLyM63Ee8+oIRyh/FxziYEE6YC7jpNaHIdQ61x
dxPK9VW2NbrShLbflAgoeNOEhHuWnJNga0aRuy0StmxoRj/GTkWnRjcj90M1
ES2vmlHjzL/QZfwtyCiSccTetgUVJWbfl0hpQbKXhab72lvQ+awTendXtSKu
opGjIT6t6HCla4VpQSsyuT4347T2I1pyKtNwd/5H1LbH/MRR5TaUZT36OD63
DQVoJnOkrfmECHHdjQU5n8hzoxTS5NqOjMtWFs8s6kAbuZYMylZ3oE2ObDIW
AZ3IIvOn0wHZLmT581tialMXsjFuffoouhsNSnKeMhnpRibHL93oWfMZnd1b
wJHl9hl1uNZ6eJ35jJTM254o1HxGwTrfZQcmPqM+rhcfPIS/IKfm9KhOjS/o
eVawtov9F6QTZN33/sAXdHODwiWrpC8oorU7K/fJF+S293Ix1y/y/rz9453y
PUjw/OKGh049aEThefvy2B4kpPzg0MzPHqSnentp57avaIfatdzql19RtGby
huua39BtnVOdEenf0Ae9I4d38fUi+2n+dSXZvejd/cxvHCZ9yPaI3hX7rj7U
qNtod+NYP7Ke8uT9KTqA3pT9rTYuGUCWwecOJdkMIr7bZ85+2zeInn05nasb
P4gixBJq43MGkZFVXGfn00H0NzJmSq1nEJXfPyUYNT+I9IKbemI1h1Cl5up7
iT5DyOjHgVPJV4bQ48LHTpcah5DJvqVr0jiHkbeYSPixTcMo7smKjy4Jw+i2
n4yabuMweiuuECsiPIJ+XhAoDM4ZQSKCMx9aiVHESOydZrwdRW58b6X/8xxD
YacqTGf+jKH6w1t9tzV8R/zaJ150240jNg/JxMu3xtHEmUp7h/lx1FfpKs7v
9AO1DUx1Pr/9A9WLpGSGc/5Ej0y09uhv+YmK/d+v+1X0E2WnBfwq4JlAqa+W
VPhsn0D8mcczohomUGToSGyG0S80tdktoLrwF9q3/rVzu9Qk+sKrh/6cmURO
PTkKIvOTqK5SdImG/28EF09NWnf/RqX7f3XstZlCyua7nsY+mkLXVr3Pz17/
By2bgfNPrv1B1+ckVrdN/0GqHNPF3x2m0QOuZhPuwmlkxnf3vQTvX/R+caKH
psdftENgz09m1V80LGwa6S46g46IrRI6HDCDFqyczUh8PYOSpNrUs+T+IUnZ
0pqKsH8oTz7J7t3Hf0hHye9Lv8Ysql3LPDB3ehbZqMmzi/TPouwxJdcApzn0
9/a6u3XP5pDNXk0+Re15lKXE2BmZNY9mD6Z3jPGxgeKH67Fpxmxgr5GpZXGU
DY4nZX+eKmKDnPGc09kDbPD25booHx12+HO9NEQpih1kjhocHH7HDky7Wt8C
aQ44oGTh4e/HAZfZ37mqV3LAkzZnuwleThi622Ve6sQJQvFecDiLEwiPEV29
n5ywS//gerIqSBD6q/AwcQE4vifYygYXgGTy8bZCUy7os3tUnJPBBXcE2U9f
n+WCw+9MvC67cgMkRRkll3LD72Wqm5tX8kB+avNe8Uge2CkRFuk2wAOi1xUu
p1vzQv3qxjtf7vFCRM7h53Ir+UCgOmBHeiofXGva80dMdCGoDnskJZ1fCFXs
W5UXCS4Clvjm2qgzi+DTOuutc4sWw27TTZOH4xbDlBuc+cHND9GBeop7o/hB
JE7j8Tf2JZB5TcV1+4kloFEm97P13xKoqZdMsDu2FGy/isrVTS2F7/9itt/Q
FwDd2AUqO44KQJhwxNTK+wLwLH229uNvAeBXPnbuorYgOJb+3mofJAhX4KDS
0hJB+Fr3fbLuhyAoO+97EqsmBIE9A2dM/YXggZ+XG0ehELBNf1F8NCIE5lHb
f4WoCMPZpe2PGb7C0PKfc+LkLWGQUmhyLe4XBq+7tgr+CsugwODNTxWvZfDr
BfPRQOYyiAkQ4twyuAxWLG83q1snAgU1mfEGQSKAfPc1FDwQgfdC2kLS8yLg
VTm7+dxGUUiUYoRrJIlCWURgXlOnKHR9u90UrCwG3Ob9c+KHxWB9/iqlylox
cF6y1WGbgDh0pSvP3/USB8/103ncleIw/OiFk5vAcjhgm8JR5LUc/nz2LFxQ
uRzCDmhucRVYAQz4r130wAr4sYR9W9O7FZDf6dOVpLESvG437LA5vxKkQrS/
LP61Ej4y0zxeO0qA+ocLpSZPJSB+ayJvpaYk9PSectPMlATCP6wwX0gKLvwJ
ZpeLlILRCH/HtB9S0Mh+QDAiWBqKIgIbvGak4RVbhak8yEDFY/2sS5EykB9e
ybHwmQykgcHOUJ5VcOuXsNoHl1VQemt4TilvFdRsrX0TPrMKGgSupLVaykL7
08C969Jlof+Ihf6p77Igp1ks9Mx1NbiPLh9e8HQ1XM2JqN24Tg4+7Ry8EpUq
B6ISdkFPOeTBoeW+5QI/ebBzWn/59Hd5sG7J7l0WqACWThIaV38pgEVLcpj8
YUXY5MRXVzCtCKYtJ8R0QtfABqffu6rn1oBxy74iswglMHL6+q+BUxkMWlyZ
ztHKoO/09mI3rwrotpj1+CSogLbTw3Xj/GuBx+zq/j1H18JH7eOFPd/WQp78
tjE3W1UIETFc11ypClZckvutFdeB1OS/ghfJ62D8W8cozK2DmqYq1Yo96+H8
0zQ/zeb1oLGl2slJRg1W2hf+FnJSgwUW6SmNCWowYnxG53SNGjTrhbWYT6lB
tfr+YC5VdchR2i76xEMdzq6yLgtLVYcjy42ciAZ12Cm47vcUpwborlNVCVPT
AH7WWvcF2zSgx0flYnycBtyPUn4tUKYBZzKU5lN6NMCzeo2W5FJN0G9X3JNJ
aILAH4V0pd2a0LtM4cOdC5pQqS7Pq1OjCUnWcoZVo5rgs3d1oMkKLTCMlc15
aaYFwtmrOqwPasFAjYxg8zUtqO6SNnOr14ILM1IhX/5oga+4VJGPvDaAtmTv
qJ02iNpLrAgK04brH94cGbuuDUIPfVvrKrXh5E0endwWbfh1NutC9A9t8Dpq
PLFrsQ60eHTZGSvqgLllSJGUiQ4c133I5eWhA8Wy81vyI3Wgn9+46McNHRh6
Nnaao0oHRo+n7RFu1oFxbQszuTEd+Dk6JavNowuT2dnzpjK68GebQ4eTni7M
iLA/8LHXhdk3hReP7NUFtuitgXFRusBptNDmv6u6wPW7XCW/TBd4C714qxp1
YZG3cG/9gC4skaqp6WRnQIllwZd+0tncU6v+kZrzbN8pwMEAtdvvuj+RitmZ
bs/mZMD85P0O/wUMWOJj+MZlMQMkP9Y8NF7GgLVMs0JlCQYQFa/TheUYkPuU
q3uBIvlcI0j/VmJAVFvIjv61DCjYLelWp8WAlqlqpzsGZLxod/vzGxmwRpTD
+rAlA5Zmbjqy2YYBv9cn3tC0Z0Bn1ft6wc0M6Nukc7vLjQFj7y8n5HswYGrb
rO+RPQxgG3S3MA1gwPrC7o9fAhmw4+B2n7BDDDjL6JxccYQBKe/d8g6FMeDq
vk/b30YxIIvbVVglgQF511tfnEoi690YIfn7PANsBpUPeqcw4EZi08uWVAb0
hG76FZ3OANl9FdK6WQzwcFNl9eeS9y2uB1+6w4AY0a9X2+8yYF+P/DPpewyw
K9w9squMAV+byubfVzAgeGaBsMkjBvDJOijcrWVAmnmGnsxLBiyUic93fM2A
I1OBknH1ZF0NbmcfNjAg8Q3HpEYzA7Tqc7fcamdA+2vbx5I9DIh8NSV/foAB
pitYsg+GyHh706W6RxhQX/ljBdd3BkysOV6e8pMBK1J4Hdf8ZoAx54XxB9MM
CP2nM6nFoQflk23TdxbqAdc9jsqGxXrgGKgSOrpEDzLVHA0XC+rBz7HQOWVh
Pdg051cgKaIHafw7tgqIkb9L2C7iXE4+ry711E9aD0LNRkI/yuuBsVuF9oa1
esAdEDtWoKEHMgXHvJ8QekAM7etq2agHmxV3OA1b6UGAp13DvJMeqBy+kznm
qQf9cfxHOwPJvGl7revD9WD7nVerK8/owYonitO5aWQctrxtP4r1QNFo7RPG
Kz1QDS1UCO/WA80KtYQXk3qg/6f4+5LF+rD/7pTyImV9uOFr4M1jrg8tqyMy
OL31YbSoKIDnmD4czkw1FojXh82bbl1+l6IPmsPlP5Iz9cG64kxZSIE+7Inz
CvEs1wfe9claUo/0IaeperT1uT6YHRu+mdSgDztXTCudbNKH0ArugqBP+nBp
yzI178/6sHR3naB8rz5EH4qc+DqoD3ORes03xvTh0Lnxsp0T+sAFzsFSU/pw
4ftD7fa/+iB3TW7y0pw+lFgn3HPkIODCocIwPy4CDqW9M4/mJcCp9pfQtUUE
6AyJdZYvIUBMkMh5K0iA4qHjhTuWEcBoe1Q6JkqAuSHHw+PLCXDJ2Ph0sQQB
u7li6q5IEXBkz6v3yqsI+Lb2jp3lagJsxi+89ZMnoKLkmM1ZRQIUDrs3FCkR
kKRvZvVehYB/syr1E6oE+NQIskTUCPgQNfVKR4OALcc6t01oEvDZv/bHHW3y
vlfuqX26BIxtObtcSY+cr+2hgl598nlTN+MbBgScJIybtxsRsFBdcc9KIOMr
8M+2GhMgLjFx7sIG8lpsdi23KQGLhHleHTYj4NQSQa/BTQTM861kd2OS8+aS
v1pvQcBPtvV6RpYE7PvHaL5jRUDflMmBVTYE7Jiw5D9vS0DbmFPuAnsCHIbc
TYMdCHjT6/ul35EAsy9Bx12dCHjcEba8zpkA/Y+xpQauBNz7kGxXuIUA1ca0
UemtBOS8vhmXtI2A/onbo9t2EHDrwWhHtTsBe06sq5f2IEDZ1L8yfBcB72sW
j6Z7EnDMKE/qoRcBspWbbNu9CXit2xsx7UPAgXuRJWJ7CFiuLtOr7UtATcFD
Uce9ZBxlN/PAfQQkjIeG7fAjoKAs/Z7lfgIaQx8P6fkT8MOkR0YxgABhvgXO
yw4QoN0on8geSIDzxU21Y6RH3fZMtx8k4MqqhPWvggh42H/bq+wQAd0FDVcy
gwlgDxp/d+4wAav1hXjDjhBgyqZltPcoAd7PNwe5HCNAQqBDfkcIOX9Xj1av
UAJiMgdi9x0nwHB0v/7BMHJ9dSaHj54g6w4PuRoeTsC21+w2MRHkfJbFsp2J
JPtl5uQyn5Pk/HtOrIEoAl68CjFYfooAzruHbX+SotSDnnXRBISc8D+SFUNA
uffe08djCZiw8rnuFEfAeu1d99bHE7BXYsdL3gRyvTndOr6Qfh1yGq84TYD0
e/sFFxIJcHtgLe53hoBL1y3Wmp0lINPLqkfvHAFFyrapqkkEVH23t16VTMCr
e5sXiJwnoPmoSwXvBQK+GLkF/CMd49yuMH6RgL8v3Tu+phDAfWZXcuslsg4H
b/O6VDKP+J656ssEqHTuvVf8H3lubuz3vXmFgI0+B2T+SyPAbm1QS+JVsv4f
wacj0sl9KztqcugaAcEhoX92XycgEk4Ubs0g4AxXpKftDXI/Xket2JhJ1nM2
5q1uFgEljvHRKtkE8Azl9ZneJM/LiToz9xxyv5eN3Dx2iwC2vMU8F3PJPkWq
PnfyyOearF68yifrKXSfG79NwEjsQW3xQgKW7oreh+4QoG54OdO7iABHsduf
Eu8ScPhHtWBpMXmupjqmmPcIODf7t7OrlIA0zuVPD5YTkMunm8f7gICypZvP
Xa0g4InIwWCNKrLPViZtffGQ3P8/xcz4R+S6NTfpWNWQ56b492qBWgI6zooL
fnhKnut9+nMXn5P7wtw67PKSPA8KYR9XvibXKVFhw3Q9AX7VE56zDeS+fH8c
zf6OgI8yZ25xfSBgib3ba75mAjacXDPC30r2671JfqE2Arhee7eotBOQ3N2a
btpJkN+B5j47ugnIX1ix/ugXAnRlVP4kfyXgqXba49u9BNiy+OOe95PvlX+i
eolDBJwokBl0GCUgZbvy5RXj5Dou1WJ++UmOf2w4nTNJzvvAptz9f8g+k7Vz
1Z4h3zNNW/j+zZLvM6/otBx2AzD+fXe9A5cBbIvpfDLHawBHxfmc8hYbwIVc
rcHNAgZQpO8eyr7MAOrqEpYWiBlA/9byGy4rDWD+9emOUWkDENPzED0pZwDr
c3RtxZUMYJMIf3yBqgHsONlTa6JhQO5H+WyrjgGc3ZGo60cYQM4bjwMcYABz
ldkv+MwMwDFvQFLQ0gDyUlWCxO0NgD1m/2tpFwNwPnRXRnG7ARTs+hW8ztMA
FtjrvtH2NYAtcGy1YYABeV4H+SOPGEBnt/Of5+EGcO3O855FcQbgfkL7jW2S
AcjaZJVfvGwAX6WEb3zKMIDssYjT0nkG4F09HuxZbADlNuLhG6oNgOcLipN9
TeYL9ElmbyHnx3n2yucvBvDnQlnWo1EDMFfoKkifNoDUcq7y41yGMGiu+nir
oCF0fe0cZ602hA9hZ1YR2obwcjmyV95kCA/vfY9c7moIxTbXS3j3GkLOkO23
qVBDSDvFLtJ/xhCSZIpNW64bQoyy9/WEB4YQprViBt4bwiGjhs2/hwxhr3lk
UT6nEXjY6yzaKWEELluHvES1jcDGO/1xnZURmAXYr4zwNoLw/5wWHoswgoqn
W6YD04zg19j2gb3lRrB++a5Wz/dGsGeDz/Nto0aQ6be31IkXQecl/yyb1QjE
nxw8b26EQMvZNxq5IrAdcT+qE4TAL8J5n+pZBHGi1jvk8hBk52+0X/kMwRMg
TIU+I+hqVmfwzSA4rn1BhG0RQPq94+4zKwCqNX3yfysDdBXb/v6hDzCvrm88
agEgfXf16YEtAEiNv/WrL4D7nd+ruo8BnOTr/FORAJCzq7YxJQ3g9cPcm4EF
AGNi545bVwMIBgY7KjcC+d22VYX7M4CLwgaOnnEAu1ZhzkluY7CI/cbJK2kM
G/VKF6zUNAbDoVNc65jGoHPFidt4hzGst1TkcTxkDAFCD5KazxhD0UcLCedb
xvAjvePmxxpjUPfar76l3RgCVdiq2n+R413eszkKm8BoVJZpvboJ5N0Njt9o
awI+XeaNVftNQG7RymXaiSbws3edUXOJCTx+bLL70CcTOHPFKVmEfQNsC/at
KlXcACp2YX2brTfAtEqywO+gDdCdb/DiUNYGeK7Sf3zywwYoyE/SOsS5ES6o
GAz/0tgIx/L7MoI8NsJOlSSXX0kbwTyfWBpUsxHWq/Q9mxjfCG7zU6M84qYQ
84FPVAKZQnHOSiM1b1PoClH13phoCgtt0RmXe6agI2dXtq/dFDz+eHSFc5jB
mfog7otKZlBxPXpdrq0Z9AWlOj08bAaCzLywd+lmYChZdbP3mRns+fGmYXrE
DAardrSY8G+C3bE/OhNUN8GAw8neJqtN4CMtMiq5fxP0D9385X1mE3iXMf7d
KdwElfsLPkx+2ARLFWXzielN4NmdEhkhZQ73Ly3a8mKDOfDbhqvz7zGHnbyT
vA5nzKHs8Z7PqSXmUDdm5jRUZQ6fJeTqiefmMGnBbpLYaA4Lj3aVd300B6lq
kQmPT+agwWm1rr/dHMzMo/bs7TSHLYmVWd+7zMHv/c/ug5/NIUJMeeWfL+Zw
cetOp9Cv5nBFzPb26V5zyHhvxHG13xxuJaq6FAyaQ6G5ROHDYXO4x7loQcOo
OVRUT7t2fTeHWV/fn34/zQGJtcfP/jKHyFrW6sQpc3jmX1Up8dcceCRUHW//
M4e2rcP1hfPmkH811/QuBxOOd/lUl3AxwUZaQbeMlwlNYXcWeAgwwbWL8Z5f
nAldhk+uPZBmwq6rLD8vRSZUaShdLNFggshL7ofsRkzw2/btmw2TCU+ftO9f
bcmEFWs+/PltzYSAxNeRr+2Y8PxnzeJ0RyZIujxIOeDMhOSO1yq1rkzg2dnx
eNlWJoT2jm723s6EH3vmh8rdmbBt0DlZZBcTXu0u0jvoxQStAd4vb32YcN1n
Z+w6XyZYMnfmXz/AhGnlnQ1CR5mQvXjnj6hwJtiNuS+bimHC7YawBs3zTKg1
457lSGHCp+pElfepZHwdkS0ZV5jAeyctNiCdCdKKcuUogwkyjxIcJTOZsMp5
4sffLCas/r7l7MebTJCLebK27BYT/mgnKyfmMaH+2841nreZcO28ugJRyISD
JuxyQkVMGJETzlIvZoInj7yc3T0mdAzqZAWUMWFzvbncuftMuGfydt7nMROE
Hji3o5dMOLC+u0zsLRPeZnsnf29lwu/acVO9r0yQ6Dk2HTnGBBM2roL6aSbs
ljrrLsplAWcMli9zF7CAe1syX+SutIC2I6ohEwoWMJ9Svs5QwwLkS417og0t
gPWh7uJbcwv4ulZgP9hZwOKd+0O+OVuA1sX62NjtFrD1lXLKWi8LODUbm/l2
rwUUqPcXBQVawLfXm8N8jlvACs+nrC2xFmA7q7Hc6rwFRKdk9KF0C3i4XuCe
Rq4FTLwMi5C/ZwFKHqPW4o8swH3GTWLRawtIufB6cLbJAupV9crHuy2A80VO
1NchC7AadM+wnrCAS4tWVD+YsYDO7QtLP7CzQK74b/4oDws6MjarZi9mwcWk
osKtgiwobr0vpSrCgkbJmjOz4iwY2fVq7o0ECyT83DjeSbOAFTzK1STLIr8z
T/C1yrNAVFhTibWGBUU3+8wfKZP39f/branKgt43VrE561nAqXn04jV1FqxK
zbpxSZMFaLbxzlltFmzzmKmK0WXBsRcKr0/oseDePsd0IYIFY4KRgdkGLFhT
fseMYcQCj62dK+oQC9LYF33fZsyCZ62VobdNWDBasG/hzAYyf5RkKtOUBUZb
GuRTzVjgo3aipG8TC85yqxlrM1kwWNlZz7JgwcYDCS4eLBakK+h9O2LJgj/t
ff5nrVhgn3RhJtuaBbfNTGKqbFjA/e+70AdbFqwcDpOptGOB+if+dZn2LNj0
Ko1IcGDB1vsqzIOOLAjMqXBy20zWHcN3epsTC777uNTscGaBqnnO750uLNi7
5reKpysL8nhNd3pvYcHAwPmU3W4sUHjVU+e7lQVeuersfttYkBkXruO/nQU9
exr3HtjBAhkLqYyD7izYruzXcmgnC64urFp0xIMF7UMLjY/tYsHyOtfgUE8W
uOTfyg/zYkFKwtTncG/yOmHoj6MPeT+hU0BpNzk+/u2aWdK0+Fp4t4eMF1/m
ku1Lxo/PDTi6lwVf4tJirfZR+c9eX+XHAs+4yPuTpIzzqXaZ+1mw6GrhkK0/
C7puPj05R1pc9EnidgALTlWMl7oeIPM95bbhCWTB2gaJgXuk860aER4HWfD+
i/kKgSAW7PLS/HeNdGJAsmv9IRac3Mf7+BGp8PjPDJtgFmQd7DzZTao19cLL
/zALnh4r3jRP6jiXpnT2CNk/ETGLpI+y4BBX4GghqSmkzMgdY4FISAXfFdLe
0i4xwRAWlI1zKMSQRqsoas2SOnmzTA6Gkuuc4W87SPq7/fz2HcdZ8Fz0/r5m
0kt2HcdYYSyoTcwYuU06/sp7+5ITZH9zr33rT8o0+WH8jjQ4rKxEI5wFNypC
5C+QNv6GS5OkMxrcfM4RZH/61x27T+qYf25keSQLoHC22JdU5a7v0UpS0Xut
aPFJFrCXb+TeRjry4G59AenHKqnzc6S1jxJcbaJYUPjkj/R10svPvPrGSaNe
vr9tfIoFO5smr0SRGn4WT3hBunyEOLYwmqxnavseK9L3nJEu50jvLM3e9IE0
YeVLHdEYsv8Vh+VdSTdqLhFJI5VB6gu6STc3LLAWjSXnEeXaxiI9SRR6RpCu
+MkxXkZ695ZzyAip+Y7b3LJxLOgWYU92JlVrMXyRRRqecuzfD9J3TuXqKJ4F
smK/vE+TBraqpbWR1l7ye6eQQO6vSx53EKmneD9RQ1r6cfWBJadZwHXZ/aYb
qZPr1fZbpMzARY8HSA0SjmatSWTB+qz+2N2ksg83+90iFWmptRsgzZ5ViJQ4
wwId+fhiW9IXlqM9UaTOQbbCD0gHrpRsGCU9edSmSuwsC6Sch7VMSB9oxRTs
I3UQWq1wiXTse3V6DamVzW6xb6S3CwXPcZ8j+3xJJa8Sqa+fZwSL9FU9/18/
0qfqa/viSKtTLN5nkz6Y2V1dQ3rPPSavk/TOs+yUadKzj1zXCiSxwP8B/xMF
UtuSGmdDUrWCQ6MOpAI5Sid9Sb9ODz0JJS21vM1xljTmmp9JBqnrz3WRJaQq
puM1z0iJTwZhTaQs/zj9r6RbFrT8/kHqe1m2hC2ZfF+u8/dfShqxXshxJWmc
WilDkTRJ3UVSk/Syxgw7Is3QTO+zIOVwNTrhSLorrEtsO+nTzLAiH1L5V1LM
A6TRY9VfjpG2nEq6FkmqIOm5LZ708D2dlcmkL1h8bZdJxb62p2SQhu041pxD
2tcuvqyQ1Mql3P4eaWnT5qQKUgm7X42PSdP9Pduekcqcaep5Tc3n9saRRtLV
dfcmm0izB+Xm20hr8lSWdpF27NWQ7iGdWqu3vo9UeAyhIdJ1d8xsxkgPRsmk
/CC97/q34xfp7Lqm1X9ITRYU+s6QxrTF3J0j3UpIO7GfZ4HG1bK/nKQ881bX
uEk73Hs38JHefRI6sIh04X3thUtIdxWMqQiQVt3IsRIiFUl1919G6pe4PEmU
ihNnyhQnnYo6wL6CGhd+9cFK0vDQVwckSU2PTCpJU3Fa5k/LkEZqLRxfRXo9
eZnDatLqcakyOSq/tdJyBdKM4ThdRVKf2KHNa0jXyrOClEh/1uQnK5OWb198
V4U0yHFR6loqv8XCE6qk3xGf9zrS29q8VutJ96jwaKmRnirdMkaZgQpvqZM+
fMW+S4O0zWGzpCbpZOetVsqagl9+WqSnj8MCbVIXq9P/UcpJflTToeKPrH5B
2dW6A3RJ659ceUBZUdCqwSC9lSp8mzLlpI28Hum8zYoYyt0SvQOUbwfuWOiT
6pUeu015I8J0CUF6IV9xG2V0M99tyiPzw38pfZUamAakWx2KUildv9l9pHQ6
NCFmSOrAfdGZ0uaSziVKyzUfWyjrZdcuNKKuJcMNKevFmgLoa6E1WfT14tBW
yj/+X9kQVd8HC2VKW51iB8rjl5cfp8z9F36Tsm++7wWlLKfVIOUO7pKFQJrG
t3wt5cfFJ6wop7r9d1OKlrifpNSOtkundHQ1eUAZtFaziRKZjA1SLnTJnads
8fMUMab256S0CuW+y5+A8gGx056Sq6t/F6V9+P5DlOmyk9GUQ09DUikDHdNu
Uv79WnWPMvJg5xNKPs65t5RJyVLdlPFGoUP0/aG2ScqQFF12E9KDJhcXU+4b
+ylGmbeXbxXlwIC0MqWCt44mpddXSwNKZcnmDZTfnbaxKO+d67WnPPLabwul
yJs0d8q7jXXelFbv/+6jHGpSOkjp46V5hPLbpMFxSvdos0jKTlHbGEruxr0J
lOtiYs5SOqPM85QnpqovUa7UlblCWRYckU5pX9aTQTk6uSGb8taBZbcoPUe/
5VFK7yktoPz07VQR5UV3pxLKAL+0UkrLYz3llIoxayooOS7sr6Lnc/1eNWXb
luTHlM3LAp5QvmuwekrZEKvynPK1Cd9Lyuf/+l5RXk3cXUcZJDVUT8m6s7eB
UhZGGyn/vt3/jo6zc/w9pXXI2ibKugu7myk3FWa1UD598bmV0viLRBtl9V+X
T5RvbN3bKdtv+nTQ6/pvfyflH/vgLkqe3OPdlKLzUZ8p5Taf/kLH1/HsoQwU
N/hKufyv8DfKx+3DtD4Pa3spl1y70kdZGn6wn/LBOoUByocdH2lr4hMGKZ8x
jIYoX/WN0765kDlM+dbEaYSyaZx3lLJx5X+0r8xUxihrD1TRPkyz+k5Z/qKL
9u5P/3HKfEn2H5Q3zZNprxXw/qRMFTpBm3R4kjahY+8EZZRxD+3xmy6/KA8v
aqQNCDCdpFy2+SZtuR7Pb0o3qd208xyvaG/0K01RmtXH0w4VDdMmXrT8Qzmy
MI2WFT5MmzupP03Juzee1udzG+2zzUp/6fWuO0J7El7SVoXyzVD+vm9BqzaZ
QOur/oY2y2/JP7rfcm1oxfrO0drJvqdtfsAzS+lqZ0jbORBIuzP8Fu03sS7a
3XeE5+j5mjFpA7rCaBmDebRsv1poX85xzFOe41tP67LMjVZGOoZ2QKmEtkir
m9ZgNyfbBuq5K4q0jo0s2s8cAbT7dC7Q/tlznzbqagetwDs2dsqc81K0Rk4G
tM3iW2j3tR+m5Uy/SPufewmt+up3tC97x2idt/FwUPY1SdMGWzJouZ7a0l4g
9tCuLomgLVH+j9bkRjGtyuPntMu6PtH+mxmj7V3OyUnZoCtGW75Zhfb6QUQb
m+RAKyvhSVt1M4h2s/op2u+VF/E4s5t43Lsy2kq3F3hcXyttTngv7fSKCVrL
UrYFlOk2S2jHB1fSbohSor0opUvbf38j7cyADe3S5W60ckxvWsbRA7SWuaG0
7m0xtEF852lj9dJpL/jl0F7LKKLNa35AW8ZXS1tjWE/75kAz7cfsLtqvbf20
J/d9p5Wd/43HJ83R7pTj5qJkK+envc4UoUUdErRd++Vo4/OUabX71Gi/rNKl
Pb3NkJZxeQPt1yYm7VkBW1p9Sydagf1utP1n3Wkf3vWiPf/Bl3bPpD/OK3aI
VlTvGO3IlhO0gxdO0vY2xND28J6m7TY5R9sReoH2Y1kqbfN4Gu175Qza0Ows
WgWZW7Tv/sunDRG5Qyt/rpi2cWEZ7dFTD2jl2B7Svmx/RLuv/Amt4PlntKX7
X9JusaijnZNvoM1kf0e7qfMDrYxmC+3f2I+0H7o+0d7W6qQ9Fd9Nu/3zF1pd
nW94nRX7aBOWD+D1XzSE6/43TBs3Nkqr+fk7bee7H7Sq+ydojy+cpG24+ZtW
asMf2v3d07SPQmZol4rP0vrsm6N9/HieVlyEnZsyYA8H7cuHnLSrhLhoj3pz
0z46wUPLdZmXllXMR5tUt5C29dsiWsm5xbS7xJbQ2rEvpUXD2LXNArQrHgnS
8uYK0f5OFqb9FrqM9p23CO1NBVHaY31Y65titLLe4rRT8stp63qx17JX0AZ5
raQ145KgFc/GDm+UpH34DXs2SorWQ06aVusplttThraNcxUtWxxWcYksrc15
bLD4atqrV7HPZOVoR3KwwqrytEQx1kNXgTauCrtZWZFWJhU7wrWGtvwg9uQX
rLWNEl63h9heZWXau6nYUG4VWvMgrHAPtttmLW1DHraKS5U23x37XyU2TnQd
7ZEDWO967GbF9bQbI7GanVhZhhqtwHns/Ch2zFydtjMTWz+HrXDVoG3MwvZ+
x/7V16RdGo2Ve4fVk9DCdftgdxVjj8xiE821aW+cx97vwr5R0qHtCcJOPcIu
XqSL+9oJq5OBZY1g3XUZeD8jsQlvsNfF9WhFnbGnL2I5mrBHhPRx3bZYr7PY
9jdYu8UE7QsLrGEctuQFVonbAOfZiBU9iT1dg+VgM8R5jLBjoVjPSmz7NNaO
YYTzBGMNS7ElE1glDYTPRwBW9A729CiWYy3gPL7YsVtYz35su7wxzuOJfXED
a/gFWyJtgvNsx15Lw15/i72xYANtJgObtQ+bfR17swmbw7uR1nQD9ttxbOR9
7KoJ7CNVU9rtu7H/bmD/68R+lDajFfHAOmRhz/VhG9Zsol20F8sswEZ/xz5V
N6dlD8KiMmzoH2yFPhP3VyhW+xE2kN2CtmgDdvQUVvkldvdCFu09EyxbCNay
BJs6jP222pJWbSs29AL2ZT320zx2VMMKnz8vrOBl7Op6rM481lzDmnaLF9Yv
FXuiDps0h81St6Et88S+vIRlPMHeGsFOLbGl3aSO/WmBTffEWoRhJy9hM+5i
reqw09+wWXNYW3E7vI/q2BwWds0ObG4g9kEk9lUytu0GdrAYO/0Ey/cBu/wr
VmkCq8dpj/dbGOu6GrtHE3t0AzbOAVvmjv3qhxUIwRrFYvdexC66js3Pw1qW
YkceYU+/xqo2Y990Y/2GsPyT2MJ5rPVCB3wOl2HPSmPXK2MbtbD+COtkgZ2z
x2a7Ya08sb/2Ya8cwu4MxSqcxA7HYYvOYYMvYYl0LFs29nk+NqEYu+Y+9tlD
rEctdv4l9moDVr8J29qGDerGCvZiC4ewrHHs4CT2zF+s1jz2E6cjbTgvVp4f
WyeIPSCKFVuJrZLGeshheZWwhapYBw3stA72GoE1BezQRuw5JlbHGtthj41w
xipuxb5xxx70wor7Yqv3Yz0PYhcewd4JxW6OwM6cwmbEY83OYkfOY5NTsYyr
2M4M7MmbWKV8bOMdrHIp9lQF9vMjLPEMm/Ia+6MRa9n8v/l8wu7oxu75hg0c
xIaOYaMnsGf/YDfMYac4N+PzwIfdvhQrJIJ9vgI7JYNdo4h1VcXGa2Ir9bAj
CHtmE1bNBvveCRu0HSvqja3Y/7+8h7Ec4dibsdhPydglV7EmOdhDd7FXnmJr
WrH9Q1j+OaymoBOtixxWVgk7rIot1cCG6WLNDbAKJtgF5tgeK+xjB2zVNux9
H2zJAeydEGx0InbbNazWXezCWuyXJqzBJ+ylbuzPb1irIWztGJYxgS2cwq7+
hy3jcKZl8mE7lmL3i2IvrcI+Wovt18UKbMB+sP/fOA9srDf2iC92z37slkAs
Kxj7+ChW+zg2NxwrFYXNicGqJWAfnMGaJGOPpWNL8rCKFdi0V1jBNuypAezf
qf/VxeNC+1UU66KArdfGGptiyxyxNXuxdZHYlsvYL0XYkRfYqS4sx28sP78r
rbgc1gFhz27B/h8ym7Dv
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2YErKMCWB+C791nPWmslSZKsJEmSJEmSJEmSJEmSJElWkiRJkiRJkiRJ
kiRJkqSbJEmSJEmSJEmSJEmS9rv7pr5/YH5nmjln/qf+f8tb/+3Xr19//vnr
/9dvAggkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoo
pIhiSiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItueuilj34GGGSIYUYY
ZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL7b97zw677LHPAYccccwJp5xx
zgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0PvxTCbwIIJIhgQggljHAiiCSK
aGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoopYxyKqikimpqqKWO
ehpopIlmWvhb5G2000EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8Ai
SyyzwiprrLPBJlts84cddtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkX
XnnjnQ8++eKbH/4e/t8EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulk
kEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF930
0Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb/GGHXfbY
54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1//kD8BBBJE
MCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJG
ORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLF
NDPMMsc8CyyyxDIrrLLGOhtsssU2f9hhlz32OeCQI4454ZQzzrngkiuuueGW
O+554JEnnnnhlTfe+eCTL7754e/F/5sAAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbP+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/8
8Ovf5U8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFP
AYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHM
CKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWM
cy645IprbrjljnseeOSJZ1545Y13Pvjki29++Pvo/00AgQQRTAihhBFOBJFE
EU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXU
UU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAoss
scwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ154
5Y13Pvjki29++KUH/E0AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4G
mWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0P
vfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLH9z3/13jvs
ssc+BxxyxDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//G34fxNA
IEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNC
KWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPB
JFNMM8Msc8yzwCJLLLPCKmuss8EmW2zzhx122WOfAw454pgTTjnjnAsuueKa
G265454HHnnimRdeeeOdDz754psffv2H/AkgkCCCCSGUMMKJIJIoookhljji
SSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaa
aaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW
2WCTLbb5ww677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB598
8c0Pf4d9vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGX
PPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQ
IYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbb5ww677LHPAYccccwJ
p5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pv/5T/gQQSBDBhBBKGOFE
EEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXU
UEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMs
sMgSy6ywyhrrbLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR554
5oVX3njng0+++OaHv4P+3wQQSBDBhBBKGOFEEEkU0cQQSxzxJJBIEsmkkEoa
6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX
3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJFtv8YYdd
9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/8lfwII
JIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoo
pYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+BhhkiGFGGGWMcSaY
ZIppZphljnkWWGSJZVZYZY11Nthki23+sMMue+xzwCFHHHPCKWecc8ElV1xz
wy133PPAI08888Irb7zzwSdffPPD30++3wQQSBDBhBBKGOFEEEkU0cQQSxzx
JJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPN
tNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrr
bLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0++
+OaHX/8tfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsgl
j3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66OT/AMwkAQs=
        
        "], CompressedData["
1:eJwsl3c8UO8XxyVbsmXvvWVlnmMrUSghMrKzSZKKbEUkKyMqJd+MjFByrxQh
hWQ0ZGSkRSih/Pzxe/57v577Ofe8zr3nc55HxD3IxnMbBQVFBDPF/5c4Xsvf
WinZZNIx2U8hm2KYUcjt/iI5myx/WNw79U8MDzGsq20mZZN0MfZ6botiODnW
digmPJsU4KuYmZ8Sw6jL+wN53LJJjvq0hzFDYviH4bVjt2U2uWqartZRKYZt
Vzn4rNmzydP0arpnEsQwl9r6T83oVZJycUmr2FkME9RvvpsuuUrKpunnKWiI
YeRK+cMvPlfJtw7ZJhfnRPFwTfczx/UsstPzhkJyoSjqKVjVfczIIqmpuyq5
bUSx+WJAgrNMFvm38GGaCr0o0hQvXGx6eoU8Jc34r7NNBMff3jsy5H6F3Ox0
76kVFcHGIJ2Hey9mkj3FA44jqcJ4xZlR+gmZQe4dqHiStSSEZ3kbY3QpM8hO
GzkLwzFBnOD9+LKwKJ2cbFDdtzkogCe5imdMLdLIjdaXLXzD/EhD+T1yhfES
eaFTabg5jQ+djGuYTcNTyYtZP7Im7XixqKi2zWktmZQu+0sNKjyo7V8aerIg
ifRhzmrK5ePGt60HT/AfTiR9jtEo9nPswkHa1EIxiQRyibz2co6PC93Kr1/J
p48nG59/0P6pxInzKal1bRRx5JivXtSudXaU3vVj5ct/seSHUCurqndsmJo/
tf9+eAz5/FxL5MdXrGj5LtGrqfocedL6liTNEAuGHAgqNy2LJr9HmT21GWXG
5w7qD1SeRZHVwgfpvonvxILVQictxtPk4KDSUuSlHfj89trOG2GnyMXykE7J
pwxYnWCcYFB3klxjsoi6LUCPf75Q9TfwhpOiDq1r/7JpMcOMwuN+WSiZxZAc
kCxLgycFaGwjDoaQ1v77HkyMUKFKnslxclcw+eTHxZzZ4u1Y2TnV6LkYQLLc
OCRQGUWJ2qqbi1cmTpDlfpPyJ/22YaHU8Ue5677k/rN8H2L2b0JkV9zenHEv
kldV2cBAaQPmartzHip7kJw7jrvNBP6B0IfSBUfeuZH83trbRk78hvTFVzu6
5V234o0fps5fgaxvtUOJds5k/cJ+z4DFJag1DI4ZuuFI5j1ztCkL/gl5/Ql/
LdTtyeM97T5P2RYh6Oiu5q/UdmSieYJaWfkPmNdmYelmOkR+ft/4I8zjG8xT
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
XKN9
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAewk/YPBIIUCpJc7MC+gHP13bmcUP
tiJAruc+FS9T9T7PSADBsIYkQOYvTxv0euA+QJWSzy1OJkAitl+CBYbJPnoV
GPNiPChAf+FQr/0Csj5OyuUohgkqQHgRTpoXB5s+7LKmc2H9K0A8RV5PVJeC
Pol6k9EY6C1APNWmpED8aT7AdshBvrEvQF1jIlBaeFM+YVN44w3RMEDE1aXA
CNQ6Pq6FMK+zuDFAD2RMKknUIz7gUWKFtbMyQDk9iapq9go+kg0qZSWqM0Ak
d8Q47rPyPZHjFU4MkDRA08ALTSmf3D10U3tBT4k1QOaq+foR/lo+pd0EPgly
NkC6qsEX1XdGvlRXJEQxVjdAT9EUGZKODj7par1UtU04QJ5ubnt2RkI+yph6
brA0OUCIAq6Q/FtCvpFgsZIHLzpAMA3kvV3F/z3WF37AzCQ7QDVe78NquuQ9
aulu9wgKPED1A6hEDM6lPeJU2TihAj1AUnC7fGaVeD2n2meDsOo9QGjGE8Tu
GHM960+M1y3OPkBiP/71y1dsPRRfKjYHxT9AsEcuLcggYD1FRPbOq1VAQGQZ
q02pNVA98yUUCILSQEDz9O9lDpE7PccUxMUTR0FAG3i9wVk9Jz1b+z6IXLlB
QGCOkIcoIhM94a72T1M1QkBHgWbOJVD8PI5vQJwFqUJAtamO4OXq5Twt/cbt
ZSZDQGsOUoqm3848jIIYRH2hQ0AHn9kOu+O1PBIV/B5QFERAmo3JVnaeoDyK
dBz/0JBEQEci/JJBBoY8KOHOYw0FRUBSjIGOzmRfPIZFTM0Ad0VAhskgZSsd
UrzXdgY8ovJFQGApFf5GaHW8TrVSL/9lRkA43T271OyjPLfA2ycK40ZAzdyj
VaBq5Dzgwy8lzF1HQN06BYiosg09MNQVp0nQR0DKYMlyu0RevXKxOC51TEhA
uICQlwY/ej3bm+05XMBIQHg/o2vtHic+NlPfSvE9SUAcNXybpkS+PVECnGA9
uUlAoMp6+MsOiL2Svur6RCxKQPR+Dgq49R0+xkd2mvqoSkBUMvFVYMr8PSDe
k75rHUtAgHhB/+KTkj3uNuu+ax1LQLmH9igOsPy+dN1wIg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$17198#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-0.000027358738007194942`, 
                   0.000045597896678971455`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAewk/YPBIIUCpJc7MC+gHP13bmcUP
tiJAruc+FS9T9T7PSADBsIYkQOYvTxv0euA+QJWSzy1OJkAitl+CBYbJPnoV
GPNiPChAf+FQr/0Csj5OyuUohgkqQHgRTpoXB5s+7LKmc2H9K0A8RV5PVJeC
Pol6k9EY6C1APNWmpED8aT7AdshBvrEvQF1jIlBaeFM+YVN44w3RMEDE1aXA
CNQ6Pq6FMK+zuDFAD2RMKknUIz7gUWKFtbMyQDk9iapq9go+kg0qZSWqM0Ak
d8Q47rPyPZHjFU4MkDRA08ALTSmf3D10U3tBT4k1QOaq+foR/lo+pd0EPgly
NkC6qsEX1XdGvlRXJEQxVjdAT9EUGZKODj7par1UtU04QJ5ubnt2RkI+yph6
brA0OUCIAq6Q/FtCvpFgsZIHLzpAMA3kvV3F/z3WF37AzCQ7QDVe78NquuQ9
aulu9wgKPED1A6hEDM6lPeJU2TihAj1AUnC7fGaVeD2n2meDsOo9QGjGE8Tu
GHM960+M1y3OPkBiP/71y1dsPRRfKjYHxT9AsEcuLcggYD1FRPbOq1VAQGQZ
q02pNVA98yUUCILSQEDz9O9lDpE7PccUxMUTR0FAG3i9wVk9Jz1b+z6IXLlB
QGCOkIcoIhM94a72T1M1QkBHgWbOJVD8PI5vQJwFqUJAtamO4OXq5Twt/cbt
ZSZDQGsOUoqm3848jIIYRH2hQ0AHn9kOu+O1PBIV/B5QFERAmo3JVnaeoDyK
dBz/0JBEQEci/JJBBoY8KOHOYw0FRUBSjIGOzmRfPIZFTM0Ad0VAhskgZSsd
UrzXdgY8ovJFQGApFf5GaHW8TrVSL/9lRkA43T271OyjPLfA2ycK40ZAzdyj
VaBq5Dzgwy8lzF1HQN06BYiosg09MNQVp0nQR0DKYMlyu0RevXKxOC51TEhA
uICQlwY/ej3bm+05XMBIQHg/o2vtHic+NlPfSvE9SUAcNXybpkS+PVECnGA9
uUlAoMp6+MsOiL2Svur6RCxKQPR+Dgq49R0+xkd2mvqoSkBUMvFVYMr8PSDe
k75rHUtAgHhB/+KTkj3uNuu+ax1LQLmH9igOsPy+dN1wIg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$17198#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-0.000027358738007194942`, 
                   0.000045597896678971455`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.15048293459869}}, {
       5, 7, 1, {1979}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
rbgc1gFhz27B/h8ym7Dv
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2YErKMCWB+C791nPWmslSZKsJEmSJEmSJEmSJEmSJElWkiRJkiRJkiRJ
kiRJkqSbJEmSJEmSJEmSJEmS9rv7pr5/YH5nmjln/qf+f8tb/+3Xr19//vnr
/9dvAggkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoo
pIhiSiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItueuilj34GGGSIYUYY
ZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL7b97zw677LHPAYccccwJp5xx
zgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0PvxTCbwIIJIhgQggljHAiiCSK
aGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoopYxyKqikimpqqKWO
ehpopIlmWvhb5G2000EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8Ai
SyyzwiprrLPBJlts84cddtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkX
XnnjnQ8++eKbH/4e/t8EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulk
kEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF930
0Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb/GGHXfbY
54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1//kD8BBBJE
MCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJG
ORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLF
NDPMMsc8CyyyxDIrrLLGOhtsssU2f9hhlz32OeCQI4454ZQzzrngkiuuueGW
O+554JEnnnnhlTfe+eCTL7754e/F/5sAAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbP+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/8
8Ovf5U8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFP
AYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHM
CKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWM
cy645IprbrjljnseeOSJZ1545Y13Pvjki29++Pvo/00AgQQRTAihhBFOBJFE
EU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXU
UU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAoss
scwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ154
5Y13Pvjki29++KUH/E0AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4G
mWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0P
vfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLH9z3/13jvs
ssc+BxxyxDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//G34fxNA
IEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNC
KWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPB
JFNMM8Msc8yzwCJLLLPCKmuss8EmW2zzhx122WOfAw454pgTTjnjnAsuueKa
G265454HHnnimRdeeeOdDz754psffv2H/AkgkCCCCSGUMMKJIJIoookhljji
SSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaa
aaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW
2WCTLbb5ww677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB598
8c0Pf4d9vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGX
PPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQ
IYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbb5ww677LHPAYccccwJ
p5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pv/5T/gQQSBDBhBBKGOFE
EEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXU
UEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMs
sMgSy6ywyhrrbLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR554
5oVX3njng0+++OaHv4P+3wQQSBDBhBBKGOFEEEkU0cQQSxzxJJBIEsmkkEoa
6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX
3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJFtv8YYdd
9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/8lfwII
JIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoo
pYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+BhhkiGFGGGWMcSaY
ZIppZphljnkWWGSJZVZYZY11Nthki23+sMMue+xzwCFHHHPCKWecc8ElV1xz
wy133PPAI08888Irb7zzwSdffPPD30++3wQQSBDBhBBKGOFEEEkU0cQQSxzx
JJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPN
tNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrr
bLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0++
+OaHX/8tfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsgl
j3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66OT/AMwkAQs=
        
        "], CompressedData["
1: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
wfINXU9F4f8AYLzYDA==
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAjLh1buMwCkDA05F3o55mP0JT3tmF
aA1AXA520PcrTj/EO+b7V5MSQK/j8EmmTyM/G7dtL0kwFkBVGI/mdxX8PgWa
24yqGhpAia7Lh4/W0T7tOqEQxPIdQI28zKmKqqc+haJ73FzEIEAZVuWsqOyB
Pl3bmcUPtiJAPhnMbnEGWD7PSADBsIYkQBGiqSLKlDI+QJWSzy1OJkAttohw
trkOPnoVGPNiPChAQjFvuvkO5z1OyuUohgkqQMWoLYRiU8Q97LKmc2H9K0Av
dKPPhJ+gPYl6k9EY6C1AxJp5X1dHfT3AdshBvrEvQLP3v30HTF49YVN44w3R
MECfoZTFixI+Pa6FMK+zuDFA8ZyfpWv4IT3gUWKFtbMyQIVjvYQ1GQY9kg0q
ZSWqM0BdamE4ke/vPJHjFU4MkDRAild+4xIw4Dx0U3tBT4k1QB+9a5v7lNg8
pd0EPglyNkABMdhGI+XhPFRXJEQxVjdAmvwhS18t/zzpar1UtU04QMd9RKsp
1T89yph6brA0OUCiZ0JlmcWnPZFgsZIHLzpAcimuVd/MZD5Bxnujem06QMDT
kXejnmY//EPFoA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAADd0UIUowQEDA05F3o55mP0VE9s6r
VUBAw3cg12xYUj/zJRQIgtJAQH5iI4KBESc/xxTExRNHQUDxeRpL9mkAP1v7
PohcuUFAR7bUI+gv2D7hrvZPUzVCQEKTRzJ6BK8+jm9AnAWpQkDtdNrkJ6OG
Pi39xu1lJkNARFIHOAhkWz6MghhEfaFDQJn/gC9CcDA+EhX8HlAUREA6my+i
El33PYp0HP/QkERAR2PJELhr8D0o4c5jDQVFQEQePOhPZw4+hkVMzQB3RUAk
k6UdUhEBPtd2Bjyi8kVAjIMObuC76T1OtVIv/2VGQP2MxsBjqtw9t8DbJwrj
RkAcy488z4+xPeDDLyXMXUdAc4ZWubPEsb0w1BWnSdBHQJKK3tGsxFM9crE4
LnVMSEBegTkVMvhqvdub7TlcwEhAPhdd0eyHdL02U99K8T1JQPncPyuc+n69
UQKcYD25SUC+aiJnF7mgvZK+6vpELEpAedz5/15h4L3GR3aa+qhKQGat4ens
YVe+IN6TvmsdS0AXQmsI+kQPv8Ral75rHUtAoDoVKcQkW7+Xpr0o
                    "]]},
                     Annotation[#, 
                    "Charting`Private`Tag$17259#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-0.0016567149762810943`, 
                   0.0027611916271390313`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAAjLh1buMwCkDA05F3o55mP0JT3tmF
aA1AXA520PcrTj/EO+b7V5MSQK/j8EmmTyM/G7dtL0kwFkBVGI/mdxX8PgWa
24yqGhpAia7Lh4/W0T7tOqEQxPIdQI28zKmKqqc+haJ73FzEIEAZVuWsqOyB
Pl3bmcUPtiJAPhnMbnEGWD7PSADBsIYkQBGiqSLKlDI+QJWSzy1OJkAttohw
trkOPnoVGPNiPChAQjFvuvkO5z1OyuUohgkqQMWoLYRiU8Q97LKmc2H9K0Av
dKPPhJ+gPYl6k9EY6C1AxJp5X1dHfT3AdshBvrEvQLP3v30HTF49YVN44w3R
MECfoZTFixI+Pa6FMK+zuDFA8ZyfpWv4IT3gUWKFtbMyQIVjvYQ1GQY9kg0q
ZSWqM0BdamE4ke/vPJHjFU4MkDRAild+4xIw4Dx0U3tBT4k1QB+9a5v7lNg8
pd0EPglyNkABMdhGI+XhPFRXJEQxVjdAmvwhS18t/zzpar1UtU04QMd9RKsp
1T89yph6brA0OUCiZ0JlmcWnPZFgsZIHLzpAcimuVd/MZD5Bxnujem06QMDT
kXejnmY//EPFoA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAADd0UIUowQEDA05F3o55mP0VE9s6r
VUBAw3cg12xYUj/zJRQIgtJAQH5iI4KBESc/xxTExRNHQUDxeRpL9mkAP1v7
PohcuUFAR7bUI+gv2D7hrvZPUzVCQEKTRzJ6BK8+jm9AnAWpQkDtdNrkJ6OG
Pi39xu1lJkNARFIHOAhkWz6MghhEfaFDQJn/gC9CcDA+EhX8HlAUREA6my+i
El33PYp0HP/QkERAR2PJELhr8D0o4c5jDQVFQEQePOhPZw4+hkVMzQB3RUAk
k6UdUhEBPtd2Bjyi8kVAjIMObuC76T1OtVIv/2VGQP2MxsBjqtw9t8DbJwrj
RkAcy488z4+xPeDDLyXMXUdAc4ZWubPEsb0w1BWnSdBHQJKK3tGsxFM9crE4
LnVMSEBegTkVMvhqvdub7TlcwEhAPhdd0eyHdL02U99K8T1JQPncPyuc+n69
UQKcYD25SUC+aiJnF7mgvZK+6vpELEpAedz5/15h4L3GR3aa+qhKQGat4ens
YVe+IN6TvmsdS0AXQmsI+kQPv8Ral75rHUtAoDoVKcQkW7+Xpr0o
                    "]]},
                     Annotation[#, 
                    "Charting`Private`Tag$17259#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-0.0016567149762810943`, 
                   0.0027611916271390313`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.15048293459869}}, {
       5, 7, 1, {1979}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
rbgc1gFhz27B/h8ym7Dv
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2YErKMCWB+C791nPWmslSZKsJEmSJEmSJEmSJEmSJElWkiRJkiRJkiRJ
kiRJkqSbJEmSJEmSJEmSJEmS9rv7pr5/YH5nmjln/qf+f8tb/+3Xr19//vnr
/9dvAggkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoo
pIhiSiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItueuilj34GGGSIYUYY
ZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL7b97zw677LHPAYccccwJp5xx
zgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0PvxTCbwIIJIhgQggljHAiiCSK
aGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoopYxyKqikimpqqKWO
ehpopIlmWvhb5G2000EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8Ai
SyyzwiprrLPBJlts84cddtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkX
XnnjnQ8++eKbH/4e/t8EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulk
kEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF930
0Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb/GGHXfbY
54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1//kD8BBBJE
MCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJG
ORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLF
NDPMMsc8CyyyxDIrrLLGOhtsssU2f9hhlz32OeCQI4454ZQzzrngkiuuueGW
O+554JEnnnnhlTfe+eCTL7754e/F/5sAAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbP+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/8
8Ovf5U8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFP
AYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHM
CKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWM
cy645IprbrjljnseeOSJZ1545Y13Pvjki29++Pvo/00AgQQRTAihhBFOBJFE
EU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXU
UU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAoss
scwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ154
5Y13Pvjki29++KUH/E0AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4G
mWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0P
vfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLH9z3/13jvs
ssc+BxxyxDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//G34fxNA
IEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNC
KWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPB
JFNMM8Msc8yzwCJLLLPCKmuss8EmW2zzhx122WOfAw454pgTTjnjnAsuueKa
G265454HHnnimRdeeeOdDz754psffv2H/AkgkCCCCSGUMMKJIJIoookhljji
SSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaa
aaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW
2WCTLbb5ww677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB598
8c0Pf4d9vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGX
PPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQ
IYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbb5ww677LHPAYccccwJ
p5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pv/5T/gQQSBDBhBBKGOFE
EEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXU
UEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMs
sMgSy6ywyhrrbLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR554
5oVX3njng0+++OaHv4P+3wQQSBDBhBBKGOFEEEkU0cQQSxzxJJBIEsmkkEoa
6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX
3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJFtv8YYdd
9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/8lfwII
JIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoo
pYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+BhhkiGFGGGWMcSaY
ZIppZphljnkWWGSJZVZYZY11Nthki23+sMMue+xzwCFHHHPCKWecc8ElV1xz
wy133PPAI08888Irb7zzwSdffPPD30++3wQQSBDBhBBKGOFEEEkU0cQQSxzx
JJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPN
tNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrr
bLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0++
+OaHX/8tfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsgl
j3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66OT/AMwkAQs=
        
        "], CompressedData["
1:eJws13c0198bAHCjQfYuo+wtIqG8P/eNFJJIRjZJkYzMomzKjsjesyGEkPfn
vq0yEoqMbNl7b37fP373v9e55zzPc859znmey2PlePs+KQkJiTsdyf/PNqD4
wGlkfYUG3Sr5SUb+nw1lT9U9kaFBI2paj534z5eJpC/8xGjQ0m9qtlr/2Ukk
77GcHTUqRUKcfvOftak7/nwqpELznJmC+v4zmUDh3szMKTTUN7o4nXQbPLxL
mSCUQ4Ha/61/cYdsG2RojKWZ3D+BqqxI8W//56MkMaKrxDG0Xe55dyj5f/nP
w2zjfVK059ctsRfHtkFxvcKtMJM9cNRle0bq+DZIZ73is7u+CtjdfSWz/jPJ
C4/YXL8JID9jt979n307ZUa1thrBPWe2yR//Gb7ljQi93gX/XcYe9f4Xb1Si
2PCP2SYU6vw5U/Vf/tGLts0zJuT4qM1Mid/RFtD2oGQJZqPCC8lMVcDeFnhV
eazcR5oBX6toNCDd3ALOwrTMlrnMuD8V6WL30hagHA78tznJhj9NPrxNNrkF
rn6YyvhKw4m/zeKu/tC/BebZodTE2Dmc01hgbbVtC5zw+3d+qpwHN+/M7F+G
W2D/jf79Sn0+fOXVojdevAU0Jk/HXfrDj7sIW116lrEFlOvcpF9dEsRPZu92
XIz6r76Ca+dKnwrhNX6DpzPdtsCLgnHTNVoRPDLrurW30RZIkCC09rqI4osu
HSZbyBb4dgE7mfVBDFfzd7EhcG8Bw+8j1RKYOC57IpjkGekWINFvvkJeKIE/
EmXlah/dBDOMWueMXc7j7xt/OJrXbgJgWNQkeE4Sn2rZVkpM3AQuDC4JjU2S
+NWu8GYm502wdJfxLiIkhV+Gebs71zfBsFzeVUojKfzroOblJ2c3wUDmoZv3
Cyncfob7V9r6Boiu6I/hiZfCWa4tGKS1bADmp51+JllSuEyO+6nwjA3Qd9Rm
6ZAjhZP6TfL7um8Ar79DtE9TpXDezD2ZWpENoHBjcPattxR+7PdDm5+D6yC1
TVz10jUpPOf79TCS2HUglTbaWXMgiZP01wfM6a+DP2/XyZXdJHF7pcq2SY51
gD8aKs4dOo+nby9cPzW2BpzUwp6MKJ7HpbrLkx8WroGEa1Qjz2MkcB2Udo/u
yRoo2PbOfT8qjpMUnfp+SnEN/BRTW1MVF8cxbY9zFifXAO0COxxzEcO/mlOY
MXetguSTpkx/q0RxB61If5GsVZD05PIt3SMRXDJF6W2j3Sr4dVFZO09UBL/7
ncVOXHYVqF9t9280EMZTaF8dGZKugs0n8KgwRAgPdAx1v9q+AuKm+C04vwri
DYXPbCfTVkAMTfaFmlUBfHr5J5B1WgFpmss6JyQFcME/BBdBlRUgr2F3x8iJ
H2+1pG4pYlsBAndJeY4q+PCpTMqXdQvLgGF+f1SQnA/naxN9crVsGdwlHlyW
p+LFWcL4M8qfL4OsGJ0iqnM8eKu8ReiK+jIYMVK/l0HgxgMEzk/+Pr0MumcS
7mT/PovbGH+iftK1BCqRo3M4yoUfaEup7nstgZEvyxwr9Rx4h/89VnLhJTC6
PODpasKOn0YDE1V7F4FXvl+qG+UZ/JpuNnWw2yLo/abPVWbLhkvcrbLjP7MI
KCSZ6BtmWHD5vHj+7LoF0BJ+eiI+hBn3pM8niXBeAGbmTFaCSkz4t2+k064C
C+DE6IytNzMjzpQXmLgxOA8C420YK4/ocaKmu2ZJ0jzIimRrpSelx18HKqrr
GM+DTM9OsWIJWhy0+TlPc8wDTiRyWvM+NV65Hqt+YWQOnAsNuLxafwrvG3/U
158/B9r56sJMrlHil0+obSQ9mQM5tgKCL2dO4iIUqRUS6By4Nx1MVfTuBH51
12D/Dv0cQLOjHNCQ4/g77e3VnrFZoLlEeXzK+xiuqFCY4/9lFjj6dWl7vSLH
hdnJV9yDZ4HaFvn5n/5keFP1j4oFg1lwR+H15+54Utzn62FOrtgs6Agev9Jf
R4Kz5OH01qSzYNsp29Tu2H8+A9TXe2cAiYYwR0HpIWyScNsXLJ0BTuFqmYo+
BzDS7OX7zvAZ8NKEsHXi0T7sM9w/m2IzA5h3V5c0rPeggJVdQ7XSDPBsfR1V
93QXfqH056A8OwMWkr0uWxbsQD2J8nibvWlw/M09LoeFbWhF9vN8Rd804FSe
o/O6tg03qO+QDVVOg148+6lJyRb8s/Xw6FvCNOCPfHWaV3wL7utlcpx3mgYN
nytIb77ZhDcGk85Gq02D4vtWZOv0m/Ak86ZqK880UIk5IFVI34DxTErhdXtT
oDL096VMxQ3I5y173PTPFMjP/xp9cmodiivO3QoqmQJ3OJjZX6esw2eWI4o/
QqdACkXxiWKDdeijQBMabj0FjHRPfNrgWIc9UaqaFYQpwOyT7bQ2tQYnuUvY
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
M4pxL/HtPc56HM3mFJCkRZTg/wN5pImg
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAG+nOJgioIkDodgqqLfR6Pl3bmcUP
tiJAD1H4mvJudz7PSADBsIYkQKhcVHCZ0FA+QJWSzy1OJkDDsDhPTE0pPnoV
GPNiPChAAsKn926PAD5OyuUohgkqQHCip/GPSdk97LKmc2H9K0Cm9gNlxv+w
PYl6k9EY6C1AwOFZgPqphj3AdshBvrEvQMCgkKCOlWA9YVN44w3RMEDWbTXO
VbE0Pa6FMK+zuDFA+L7txmS6DD3gUWKFtbMyQBAbIkTBieU8kg0qZSWqM0CE
Hq/eOOW8PJHjFU4MkDRA4mqf69FclTx0U3tBT4k1QNQn4We8UWo8pd0EPgly
NkDF5VMKTxRDPFRXJEQxVjdAjK9AGmbtGzzpar1UtU04QAdgHpjvtfE7yph6
brA0OUBSANr4PMnQO5FgsZIHLzpAAJp0xlphCTzWF37AzCQ7QHtzuHf5Pxs9
aulu9wgKPEDjW5DjgL3tPeJU2TihAj1Az7wX5ozdxz2n2meDsOo9QPg8lH6v
TqI960+M1y3OPkCk/i6NsoF8PRRfKjYHxT9Ar1vyMvjoUj1FRPbOq1VAQIwP
5VFS2is98yUUCILSQEB0LerEe50BPccUxMUTR0FAWBytfXUP2Txb+z6IXLlB
QPq3C1gXZbI84a72T1M1QkBnpZBNCGqHPI5vQJwFqUJAlXIGVqroYDwt/cbt
ZSZDQH2IC6SkCjQ8jIIYRH2hQ0DJSB2Y0ycHPBIV/B5QFERAHGEb6+vRxTuK
dBz/0JBEQM43OAg1dM07KOHOYw0FRUDG4TC56BXuO4ZFTM0Ad0VALbCD7TR0
4jvXdgY8ovJFQI287tz6JNQ7TrVSL/9lRkBSGeQOHELQO7fA2ycK40ZACqzz
2s12xDvgwy8lzF1HQKG1A2gFfrK7MNQVp0nQR0DCpQhZEsynu3KxOC51TEhA
YYGu0BVQszvbm+05XMBIQJfirUv9Ka07NlPfSvE9SUDqBKktcoJ/O1ECnGA9
uUlAUJYISYZqZzuSvur6RCxKQNis56S2Ovc7xkd2mvqoSkBVwaa/zpBQvCDe
k75rHUtAGIcBUrSbvryNV5S+ax1LQOh2Cqot9Ho+Sw13Eg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$17320#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-4.2477438538756933`*^-16, 
                   1.0041081078623934`*^-7}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAG+nOJgioIkDodgqqLfR6Pl3bmcUP
tiJAD1H4mvJudz7PSADBsIYkQKhcVHCZ0FA+QJWSzy1OJkDDsDhPTE0pPnoV
GPNiPChAAsKn926PAD5OyuUohgkqQHCip/GPSdk97LKmc2H9K0Cm9gNlxv+w
PYl6k9EY6C1AwOFZgPqphj3AdshBvrEvQMCgkKCOlWA9YVN44w3RMEDWbTXO
VbE0Pa6FMK+zuDFA+L7txmS6DD3gUWKFtbMyQBAbIkTBieU8kg0qZSWqM0CE
Hq/eOOW8PJHjFU4MkDRA4mqf69FclTx0U3tBT4k1QNQn4We8UWo8pd0EPgly
NkDF5VMKTxRDPFRXJEQxVjdAjK9AGmbtGzzpar1UtU04QAdgHpjvtfE7yph6
brA0OUBSANr4PMnQO5FgsZIHLzpAAJp0xlphCTzWF37AzCQ7QHtzuHf5Pxs9
aulu9wgKPEDjW5DjgL3tPeJU2TihAj1Az7wX5ozdxz2n2meDsOo9QPg8lH6v
TqI960+M1y3OPkCk/i6NsoF8PRRfKjYHxT9Ar1vyMvjoUj1FRPbOq1VAQIwP
5VFS2is98yUUCILSQEB0LerEe50BPccUxMUTR0FAWBytfXUP2Txb+z6IXLlB
QPq3C1gXZbI84a72T1M1QkBnpZBNCGqHPI5vQJwFqUJAlXIGVqroYDwt/cbt
ZSZDQH2IC6SkCjQ8jIIYRH2hQ0DJSB2Y0ycHPBIV/B5QFERAHGEb6+vRxTuK
dBz/0JBEQM43OAg1dM07KOHOYw0FRUDG4TC56BXuO4ZFTM0Ad0VALbCD7TR0
4jvXdgY8ovJFQI287tz6JNQ7TrVSL/9lRkBSGeQOHELQO7fA2ycK40ZACqzz
2s12xDvgwy8lzF1HQKG1A2gFfrK7MNQVp0nQR0DCpQhZEsynu3KxOC51TEhA
YYGu0BVQszvbm+05XMBIQJfirUv9Ka07NlPfSvE9SUDqBKktcoJ/O1ECnGA9
uUlAUJYISYZqZzuSvur6RCxKQNis56S2Ovc7xkd2mvqoSkBVwaa/zpBQvCDe
k75rHUtAGIcBUrSbvryNV5S+ax1LQOh2Cqot9Ho+Sw13Eg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$17320#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-4.2477438538756933`*^-16, 
                   1.0041081078623934`*^-7}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.15048293459869}}, {
       5, 7, 1, {1979}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
rbgc1gFhz27B/h8ym7Dv
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2YErKMCWB+C791nPWmslSZKsJEmSJEmSJEmSJEmSJElWkiRJkiRJkiRJ
kiRJkqSbJEmSJEmSJEmSJEmS9rv7pr5/YH5nmjln/qf+f8tb/+3Xr19//vnr
/9dvAggkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoo
pIhiSiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItueuilj34GGGSIYUYY
ZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL7b97zw677LHPAYccccwJp5xx
zgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0PvxTCbwIIJIhgQggljHAiiCSK
aGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoopYxyKqikimpqqKWO
ehpopIlmWvhb5G2000EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8Ai
SyyzwiprrLPBJlts84cddtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkX
XnnjnQ8++eKbH/4e/t8EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulk
kEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF930
0Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb/GGHXfbY
54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1//kD8BBBJE
MCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJG
ORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLF
NDPMMsc8CyyyxDIrrLLGOhtsssU2f9hhlz32OeCQI4454ZQzzrngkiuuueGW
O+554JEnnnnhlTfe+eCTL7754e/F/5sAAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbP+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/8
8Ovf5U8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFP
AYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHM
CKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWM
cy645IprbrjljnseeOSJZ1545Y13Pvjki29++Pvo/00AgQQRTAihhBFOBJFE
EU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXU
UU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAoss
scwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ154
5Y13Pvjki29++KUH/E0AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4G
mWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0P
vfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLH9z3/13jvs
ssc+BxxyxDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//G34fxNA
IEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNC
KWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPB
JFNMM8Msc8yzwCJLLLPCKmuss8EmW2zzhx122WOfAw454pgTTjnjnAsuueKa
G265454HHnnimRdeeeOdDz754psffv2H/AkgkCCCCSGUMMKJIJIoookhljji
SSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaa
aaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW
2WCTLbb5ww677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB598
8c0Pf4d9vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGX
PPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQ
IYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbb5ww677LHPAYccccwJ
p5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pv/5T/gQQSBDBhBBKGOFE
EEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXU
UEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMs
sMgSy6ywyhrrbLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR554
5oVX3njng0+++OaHv4P+3wQQSBDBhBBKGOFEEEkU0cQQSxzxJJBIEsmkkEoa
6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX
3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJFtv8YYdd
9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/8lfwII
JIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoo
pYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+BhhkiGFGGGWMcSaY
ZIppZphljnkWWGSJZVZYZY11Nthki23+sMMue+xzwCFHHHPCKWecc8ElV1xz
wy133PPAI08888Irb7zzwSdffPPD30++3wQQSBDBhBBKGOFEEEkU0cQQSxzx
JJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPN
tNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrr
bLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0++
+OaHX/8tfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsgl
j3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66OT/AMwkAQs=
        
        "], CompressedData["
1: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
/wFWvEnX
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAe3OstIKoIkD3Wk1P5NLmPl3bmcUP
tiJA05TiwSj94z7PSADBsIYkQGPjh9py3rs+QJWSzy1OJkD19+6fjUmTPnoV
GPNiPChAeNR3X9hXZT5OyuUohgkqQDYXEix/oDo+7LKmc2H9K0B5DU0GAj8K
Pol6k9EY6C1AE6GRQ1/k1T3AdshBvrEvQM00/tlN6pE9YVN44w3RMECiV+Ks
6sB9va6FMK+zuDFAyHu6IzxCPr3gUWKFtbMyQCBZOyjWl1k9kg0qZSWqM0DU
uMXgHbhBPZHjFU4MkDRAUH5TyMl1h710U3tBT4k1QKVrtc3r5Vm+pd0EPgly
NkCw8lQjwYpIPlRXJEQxVjdAkTHK4bdzIb7par1UtU04QEQrv31mjEG+yph6
brA0OUDTx+X3qOlCPpFgsZIHLzpAQF4Uza97+r3WF37AzCQ7QBhzY1nicZ+9
aulu9wgKPEC2Acbc97IHPuJU2TihAj1AJAGlusXSBj6n2meDsOo9QEY1Offr
re4960+M1y3OPkBOJJKiG9TQPRRfKjYHxT9AczopcpFgrT1FRPbOq1VAQFz7
E7E+hIo98yUUCILSQEA9IzTTGwpkPccUxMUTR0FAZWi3ZU5DQD1b+z6IXLlB
QBPd7H3NWRo94a72T1M1QkDhpwKdY/zxPI5vQJwFqUJAIsiyqDSoyjwt/cbt
ZSZDQH/WyiiSVZ88jIIYRH2hQ0AvS9G2HIFwPBIV/B5QFERAAHneCM7EALyK
dBz/0JBEQLvbU9+xh088KOHOYw0FRUBf9o+4QNpwPIZFTM0Ad0VA/O8x9S/j
cTzXdgY8ovJFQKOGs8hIu4A8TrVSL/9lRkC+8CYOY36qvLfA2ycK40ZAJNZ0
v1PD6Lzgwy8lzF1HQAAye0g27RC9MNQVp0nQR0Cu4P0urKxgPXKxOC51TEhA
kGqyepvRe73bm+05XMBIQJi/71T3Qii+NlPfSvE9SUDlElpp+/DDvVECnGA9
uUlAACVf9WRRX72Svur6RCxKQGzZrrcO/xy+xkd2mvqoSkCQdVLnbXzkvSDe
k75rHUtAOM8Wh5lZr71MPg8lDSBLQPdaTU/k0uY+eqqAig==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$17381#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-2.4119512482194337`*^-8, 
                   0.000010883234134046497`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAe3OstIKoIkD3Wk1P5NLmPl3bmcUP
tiJA05TiwSj94z7PSADBsIYkQGPjh9py3rs+QJWSzy1OJkD19+6fjUmTPnoV
GPNiPChAeNR3X9hXZT5OyuUohgkqQDYXEix/oDo+7LKmc2H9K0B5DU0GAj8K
Pol6k9EY6C1AE6GRQ1/k1T3AdshBvrEvQM00/tlN6pE9YVN44w3RMECiV+Ks
6sB9va6FMK+zuDFAyHu6IzxCPr3gUWKFtbMyQCBZOyjWl1k9kg0qZSWqM0DU
uMXgHbhBPZHjFU4MkDRAUH5TyMl1h710U3tBT4k1QKVrtc3r5Vm+pd0EPgly
NkCw8lQjwYpIPlRXJEQxVjdAkTHK4bdzIb7par1UtU04QEQrv31mjEG+yph6
brA0OUDTx+X3qOlCPpFgsZIHLzpAQF4Uza97+r3WF37AzCQ7QBhzY1nicZ+9
aulu9wgKPEC2Acbc97IHPuJU2TihAj1AJAGlusXSBj6n2meDsOo9QEY1Offr
re4960+M1y3OPkBOJJKiG9TQPRRfKjYHxT9AczopcpFgrT1FRPbOq1VAQFz7
E7E+hIo98yUUCILSQEA9IzTTGwpkPccUxMUTR0FAZWi3ZU5DQD1b+z6IXLlB
QBPd7H3NWRo94a72T1M1QkDhpwKdY/zxPI5vQJwFqUJAIsiyqDSoyjwt/cbt
ZSZDQH/WyiiSVZ88jIIYRH2hQ0AvS9G2HIFwPBIV/B5QFERAAHneCM7EALyK
dBz/0JBEQLvbU9+xh088KOHOYw0FRUBf9o+4QNpwPIZFTM0Ad0VA/O8x9S/j
cTzXdgY8ovJFQKOGs8hIu4A8TrVSL/9lRkC+8CYOY36qvLfA2ycK40ZAJNZ0
v1PD6Lzgwy8lzF1HQAAye0g27RC9MNQVp0nQR0Cu4P0urKxgPXKxOC51TEhA
kGqyepvRe73bm+05XMBIQJi/71T3Qii+NlPfSvE9SUDlElpp+/DDvVECnGA9
uUlAACVf9WRRX72Svur6RCxKQGzZrrcO/xy+xkd2mvqoSkCQdVLnbXzkvSDe
k75rHUtAOM8Wh5lZr71MPg8lDSBLQPdaTU/k0uY+eqqAig==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$17381#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.15048293459869}, {-2.4119512482194337`*^-8, 
                   0.000010883234134046497`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.15048293459869`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.15048293459869}}, {
       5, 7, 1, {1979}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
rbgc1gFhz27B/h8ym7Dv
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl2YErKMCWB+C791nPWmslSZKsJEmSJEmSJEmSJEmSJElWkiRJkiRJkiRJ
kiRJkqSbJEmSJEmSJEmSJEmS9rv7pr5/YH5nmjln/qf+f8tb/+3Xr19//vnr
/9dvAggkiGBCCCWMcCKIJIpoYogljngSSCSJZFJIJY10Msgki2xyyCWPfAoo
pIhiSiiljHIqqKSKamqopY56GmikiWZaaKWNdjropItueuilj34GGGSIYUYY
ZYxxJphkimlmmGWOeRZYZIllVlhljXU22GSL7b97zw677LHPAYccccwJp5xx
zgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0PvxTCbwIIJIhgQggljHAiiCSK
aGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoopYxyKqikimpqqKWO
ehpopIlmWvhb5G2000EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8Ai
SyyzwiprrLPBJlts84cddtljnwMOOeKYE04545wLLrnimhtuueOeBx554pkX
XnnjnQ8++eKbH/4e/t8EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulk
kEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF930
0Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb/GGHXfbY
54BDjjjmhFPOOOeCS6645oZb7rjngUeeeOaFV95454NPvvjmh1//kD8BBBJE
MCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJG
ORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLF
NDPMMsc8CyyyxDIrrLLGOhtsssU2f9hhlz32OeCQI4454ZQzzrngkiuuueGW
O+554JEnnnnhlTfe+eCTL7754e/F/5sAAgkimBBCCSOcCCKJIpoYYokjngQS
SSKZFFJJI50MMskimxxyySOfAgopopgSSimjnAoqqaKaGmqpo54GGmmimRZa
aaOdDjrpopseeumjnwEGGWKYEUYZY5wJJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbP+ywyx77HHDIEceccMoZ51xwyRXX3HDLHfc88MgTz7zwyhvvfPDJF9/8
8Ovf5U8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFP
AYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHM
CKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWM
cy645IprbrjljnseeOSJZ1545Y13Pvjki29++Pvo/00AgQQRTAihhBFOBJFE
EU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXU
UU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAoss
scwKq6yxzgabbLHNH3bYZY99DjjkiGNOOOWMcy645IprbrjljnseeOSJZ154
5Y13Pvjki29++KUH/E0AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4G
mWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0P
vfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLH9z3/13jvs
ssc+BxxyxDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//G34fxNA
IEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNC
KWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPB
JFNMM8Msc8yzwCJLLLPCKmuss8EmW2zzhx122WOfAw454pgTTjnjnAsuueKa
G265454HHnnimRdeeeOdDz754psffv2H/AkgkCCCCSGUMMKJIJIoookhljji
SSCRJJJJIZU00skgkyyyySGXPPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaa
aaGVNtrpoJMuuumhlz76GWCQIYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW
2WCTLbb5ww677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB598
8c0Pf4d9vwkgkCCCCSGUMMKJIJIoookhljjiSSCRJJJJIZU00skgkyyyySGX
PPIpoJAiiimhlDLKqaCSKqqpoZY66mmgkSaaaaGVNtrpoJMuuumhlz76GWCQ
IYYZYZQxxplgkimmmWGWOeZZYJEllllhlTXW2WCTLbb5ww677LHPAYccccwJ
p5xxzgWXXHHNDbfccc8DjzzxzAuvvPHOB5988c0Pv/5T/gQQSBDBhBBKGOFE
EEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXU
UEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMs
sMgSy6ywyhrrbLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR554
5oVX3njng0+++OaHv4P+3wQQSBDBhBBKGOFEEEkU0cQQSxzxJJBIEsmkkEoa
6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPNtNBKG+100EkX
3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrrbLDJFtv8YYdd
9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0+++OaHX/8lfwII
JIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsglj3wKKKSIYkoo
pYxyKqikimpqqKWOehpopIlmWmiljXY66KSLbnropY9+BhhkiGFGGGWMcSaY
ZIppZphljnkWWGSJZVZYZY11Nthki23+sMMue+xzwCFHHHPCKWecc8ElV1xz
wy133PPAI08888Irb7zzwSdffPPD30++3wQQSBDBhBBKGOFEEEkU0cQQSxzx
JJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJFdXUUEsd9TTQSBPN
tNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDLHPMssMgSy6ywyhrr
bLDJFtv8YYdd9tjngEOOOOaEU84454JLrrjmhlvuuOeBR5545oVX3njng0++
+OaHX/8tfwIIJIhgQggljHAiiCSKaGKIJY54EkgkiWRSSCWNdDLIJItscsgl
j3wKKKSIYkoopYxyKqikimpqqKWOehpopIlmWmiljXY66OT/AMwkAQs=
        
        "], CompressedData["
1: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
v31tQkh5z0fFDTOir0TuXrWGJuHD4StvL8VLRPFqA8E2QzzB4dsbRPnDRaJY
+KajmaoKQf5MGqMfnw6x9fQ//W+ncAS5tOaUf9aaRPtfSW+4NeQISYyTL7ee
4onX/9XZUWRKEaC+rOw6NxXiHMqtOyAjSjCY1i9le6pITGY/6nH6KkhwknOZ
+qZ1jrgaZYpnpuIhnFnKzV/lkSAyjV7hSyhhI6hMnFmmUBchmm2yMvlsMBLu
Dnk/ZkX5iNvpYtSWpjQEnTSPo9+FnMRDa3K2DjYywg+SzytlM8xEkiJ6I6uh
f1DfwH+c3Thaoprd5crpxQ0oXavYMr+ZjCjSXeKl9/Qv5HdrLeHTyj7KBFdm
/BqchuR1TPYdmzbRpRJvwCg6Bs2qMrxw6V1GE04M81b2QwwW/1opRqZQDt+t
G4lnvkOUNlGuxfK/0YHeJ07LwU3QQkV5ycrxDxR5Z9x3m6YWUnO4gr8T/RVt
Q06fEzItg3TMXXquCjSgdbQU0yY7r6F1cypHhakqFP+9kDiOZEEfC3qgz8gH
1Jph06O+PRHK1KoK7viZh1YooL79imGQtel5m/NjqehYXYKJ/+4DaAuq0Y32
jUTx9NZbkhyukOKRXWbttUB0OyxiISHKDjq6eMPLXcATvfufIfS89QrEb9T+
gJzZEX3y6fL1hlo9qEqKXTfm8Boq1Mv3H7W5BvQxTEVxr+YSWi2Rne/dcA4S
3O7idj2EUV2XM39n8gQh/QROxmV7ZVQwLZc0vZUV6sIDs7RyQXQmLoqg6U4D
PYztVdd+y48+s8slMdg6AoPSOhYhVgzo81C5VRHtNdDfbWOcDlGhgSI3GkTC
JwGN8LO+C9f3ECrjxg8Rp4dAkBcTc0DoGuJsXirKQ/UDGF9evyqaO4V0MTny
sBY2gd5hc/jBrWHEaMjbpdb7A+BKMW9Msu5Efibv1PZJxIN/5G4XT01UIo8p
jnNKH6YCs7C+6JtL3ki3Af68bvAL4JLkMh99Kxk5LQja9UpSwSfbs7rd4u8R
5j3G93sPbgFSVf27W7HvEG0BzcNmh0Dkt6bpvQt1wUjVaE3lpwAP5J5i6C/6
9jTQ9sTxrtEfT2DvsIqZ6KWDzdxVwNYaAHaW3H7aPwpCnJYEtawi7oLmC/Vp
SvOJSGptmuog4x3kps2xux5JJiIj5heQG+COdDQQiq18MwE+2Y6Z+rMtco7h
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
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.829292429894418*^9, 3.829292435995099*^9}, {
   3.829296646449772*^9, 3.8292966725444393`*^9}, 3.829297050384918*^9, {
   3.829300558433523*^9, 3.829300568780965*^9}, 3.829301265348404*^9, 
   3.84390145545933*^9, 3.862045532374988*^9, 3.862045652453212*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"797d6bee-10c9-467e-93ba-24db0cfc74dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", " ", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8280748033473263`*^9, 3.828074834605345*^9}, {
  3.8280749526989317`*^9, 3.828074995235281*^9}, {3.82807615136594*^9, 
  3.828076155194503*^9}, {3.8280862187462473`*^9, 3.8280862195250797`*^9}, {
  3.829301277077961*^9, 3.829301292365621*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8ea701cb-7d5f-4eb8-86f0-e262a5488b67"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVV3c81/8TR4iiZGSE7L13+HgdPm/r87ElM0QSQlZlr2SUEdmhZTXsWYjK
+kZSkpSVvbdI/Pz+usc9Hq+7e9497nX3PO5LniaXyUhISO4eISH5v+RJ/Pck
l7NFbc3Q1T5xnxdqqYTPXnPJQ7/+pvI1mIyhlpuvngq5lKLqF8Mcc/+1ohSF
CRvahFqkhus1+jFYjdqkrl+hdGlG7iwr1pqnXqAgpoO6g/x3qEC4OiZA/jFK
u4+p7d1rR4sasdn7v9NR6cm77/4E/If22F4tbgwnoo67fTqbVz4h3rnHMT6l
t9FKFM30zZLPaIzM20iWPwQFvysV3s7/guSEbriwX/VDx8hM3f3S+xEPMBAv
nvJEabD1av3eAJL8zIYPJ7uCeEMzV69HDaIIf+x7hYMDKmtUlVsJGEKBTv9i
NFutkOreiL/H9V9I9tuv6oltM9SpHFm/cGUEfZO98HW52gg9V2UIkS8dRSnn
zNn16Qhodcgpz7dkDJXWFBQHIy2kFFjztvLZOKJa/dpAd08DhbBRja/l/0Zu
fxP6y60Qel9veUQmZwIdWy7/GtivjI5ZPue7nj6JUNMGVRpOERn92cPK7k8h
NxE57aPWcig93eDK8r1pdPGP7fJ/5DJoWCE/RiJ2BqkKrMwrskshvm+rxdei
ZtFu74XkDgZx5Oqn+d+L0Dl0xXzELzNABJUxPliYD5hH39lZDUyNhNBW5RSt
qP8C8vrsuvQgTADhTJUkXa8vohwBO0eJv3woai3WqNh9Cf0cOTlmWMmLupKH
rs9cWUYVsum8G7k8KCYjrTNFegUdzIJ2XTU3EnNBVrKlK8jOcFXKc5ULfVKc
mesTW0Vdyh7XNolcyPtocqB3ySrKe1mQvRx9FjENnKOhF1pDr3tF9dafcKK6
gvGc8mdriG+08CLlPAey9o8XN+ZdR4WvOg2szDnQPibXtJK/jlx6bIc//mZH
j5h+GSRxbqC9At6rM4nsCD95e0QyZwPxh2qcyDRnRzNVEl6fWDfRXpeTvboC
O4qPGiDxTN9EtdmxI1US7EjCLCz5BNMWKn1MKuaKY0d9vMI8r+5voS8kPGdz
7NiR3/rnCn26bRRFmDdkSGNHLO8CNBfvbaOTQie/HRlnR6/v8369e/wPOmn+
u/ckcKCLlz46icX+QdE/gkM6X3IgUhm/zf8od1BTrPewsyQnekrKGe0WtYM8
+hkI195xIu3PbaePk+0iAdUjO+4uZ9FcvmdhSegumky3LDpNx4USvFiU9P7t
ovaXF96e8eNC0tDSMRvwF4Wy8+ZWj3OhryddLWP//EX3b3sL71lyo5sj9HNC
/ntoDx8hcWSIG50pfR3Qsb6HbPWiFSgv86CmEKfjLtf/IbZkGz/iDg9yMKDN
Obr8D2mMnXxvlMGLyDlrxArd9xHqeXL2rDof0ms8ajB15QDJ71W4RVbyI+mD
S5unVw6QATXZTkSSALrLZdfDq0oCY0cv+IQHCCLfSw1+Zu9J4C4mZykWIIxc
jrh0ulORgnhYi1NlsgiyecrEcZtICtlXPVuu1Ysi/JTX++qvpPBkdi3hgooE
UrrDydLDQgZYATUZZ7okEhP66DZlQwa8LRthWxFSiMFVkIF5kgxa9oP3LU7K
IMrj/c6SwkfAviKl/WBCBu0+j2jQvnYEIoPvfgv5IIvGF3853Nw8Ao8r7jJE
FMmjbwnx1UnnyOFKy5HZmucKqEvyHHVxMDlYaU7SKLxWRBXXU8sGKSjA9d5G
WwuJMiqg1yBf06WAEMkI0iRFFZRVuXzhWAIFZG8IhisEqaLwTb0D5dOUoGVx
XddbCiHftD8mplaU0HaVh9bFCJCLYkGBWy4lJEv4pmrQqSOjW6QGOQJHgeb5
C4vCQg3E9a82558CFbim9mIV57QQY+7lFaZAKrjyos73P1ltRIUY8BLNVDAX
kEP3SUEHLYd5zF/UpgYcN2GGyUIPNZHzK7+9cAz0T2QIFxwzRBXP+u59zz4G
ikmqoymCRqhAK2xsZeQY7HjKyr3sMUIJMUMx3C7HoUlvNitS1ATZ0twfiLhJ
A7lPp0bkuc4jo5dINPsNDVygpZqsmz2P8AaLIZUktODJ/+WYSJ05EkvSEZiI
oQVmmvq4/xwt0B7DgS+WeQLE7ksshm5ao25aBWpyWzooyjiHb/rngPoI9Bk9
QXRA+/ZGOEPoJfQ9dkkgM4cOhFcOYo3JHNEERSFe4icdbOrwZ3ifcEJ7/5jD
LKxPwRejU4wVqs5IZGln64UlPZjskxTlLbgiKbFvt2/coodqpY8JDHFuSMG1
glEjkx6cSDhVeITdkcaUq8zAd3owyvaVIHO/hiyHh66RWjCAA/mkA47MC8X0
NE6cN2eEo32tfy2avVECTZYPlz8jOFYZjjix+aBUPX+y+QeMwNjSS5T190F5
bRJcYf2MUHuS6iablC+qacqzLjFjgierUv+Jv/RDk6/C+/ZNTsOnT3eetnXf
RBqJ2NtCQxbYy/wCdK9DUZheVXGfBwvIGd7UOcUShpooeFP+3WMBdl7uo7ym
YUg5iMTZ9CMLiK4+VpvtCkOyV18fP9BhBQfZ60bqLeGIT1P6grkGG2xwC7Bq
/xeJLu3nQbgDG1xw2YoLOBmF8utPiLwIY4NztSRtF82iELvUwh5pMxvElz9b
wI9GISaOwscvVc6AZp7LwXeSaES5zb5ELs8OLrUbIu+vxCB8RfyApBk7HLFO
ZLtaF4Miru2+tfJhhxQ92t/L1LFo//dASlk5O5wo0QgpK41F2733z9lIcMD3
lO9PbSnj0UwJ1e1KQU7w5M04G/X7HhJwvuExrMUJJK9dji5oJiAn7qkL1M6c
MJqZmen5LAGNpr8TsXvKCeI3K64OuiWiwaiQ3mPcZ8HiZxqPWWQSuiy5SytN
ywWzdxyPL6rcR8ShO89YOLnA4faxRzMB95HcHSYciSQXCGddJ1Y23EfkI1Lu
n4y4QP6vXFmLagp6nHCl61oqF+h5TH5iJqSikcWv0SVnuKHUjbfKKyUNtWVe
4rwvxg3vtplrv46moVfYSvUtHDfEEPlyVSTTUcjD45M6dtywVdtkxfUpHbHr
a2hOP+YGnKSdw4szmcjyRekBrwgPCFayzojPZyOwwKUfV+EBUouM5mi9HCRE
/p/EOoEHCmi8zbif56A/1lO2rdd4gKc5iVnc6yFKO87xxr6cBzjz7wRxHMtD
X1zjbj5U4oVfdv8Y3sIj1HCahe62Li/MW01mJQU+Qo9bnxW6W/GC3UV+b6Ha
R8ibreWbShAvFAt41ddJPUZ0XdtyP5p5wY+x7Hex+BOkL3x59bQ2HzSF8Kmc
N36GduP9Xv8y5wMSvZTHdA+eoaKl27efOvOBSktr1ePBZ4i8qoBVJpoPTFcX
U85fLkANajPq+h/4wD52B2ncKUQCZm73IzX54UsSz2rjdjH6WhNoo2fKD34m
fD6KeiUonPWuwClHfuj8z+BezcMS9HP4RUNuBD/IOqio92k/RylXl8brW/hB
9ezPjOGiF4gk9LrsChKAz87vUq0flaJXY+H/agwFIDaVl3uKrAxZ4++3B9sJ
AEumx/dG+TJUQ11pfTxUAJwNJdhMH5Yh99SNSIEmAeAXuOhr4FuOBotvfLVR
FQRqHWPdK5qVKJomJpeXKAgOYyyCyWGVSM4zw2XOWhCs5qZlg5sqUZJc/d6N
QEEg3WNWf6ZahbSad/lSGgRB7mjrlQCNalTxNdivU0kIeHbozcP9a1HRbadL
47pCUPZpXUK7vRblKhAM/1oJAR17Cx8vax2Ky2ARFg8WAiCknRJ7W4ccbSp/
JrUIwSv2/+QXzzQgxokZTQs9YXjxREyxkbYRHXvwSeq6tTBsS+y8bLneiEi0
ajji3IXhDPu5AM6BRrRQGLn9OkEYOLjZzqw/a0If3Difn/0iDN3qo3naIm+R
/7op/bS1CBQQIpb39lqQ+1PlgwN3Eah9ERgyq9yKLp3nXmAJEQGy/dtSz2+1
IoPapQ96+SKwKFOiUL/TigQDY2+9mhAB5cYqGTPy9+g7WfOo3zVRGPw2TYPT
akM9lc+6E0JEwUaXqXXufht673S3oTBRFEz7xYn5o22ovM0ydbBcFP7ca+KR
Dm1HcXEb2rgtUYhv7A0y6exAKvQipeShYpAQ+EBoKfU/1ENq1dmdKAYD8553
edb+Q/arsb/T8sVg8kfIZLLRRxTVO8ss3CoGb39NXJI51Y16EorD9CnEwc99
xnv1UQ+yPy5skhYvDk02LxlfkH1Ga7sW7nY54hBkyR0vqPoZRc3FRAu9FIfM
O8nYZf/PqLhzpqGhRxxEAwPSpBcP398p4h05JQHias6mFhN9KIpcaFMwQwIK
ostfEv5+Rac3LpxcLZKAE2/yXWQ0+lHR7zvCDfUS4EA/1UAV14+6W6dtiUMS
kP/tNnky+zd0OrywzYtTEhZ4vPJc9QdQ8T+BjPqnknDcr3gRxgaR6qJ5RUS1
JKg66spVK/1APT+jPxLaJME+SfSYcfIPtPZ6imR4WhLUDQcqTmgNIU7cF7lw
JilIm5OMZ2j6ia78vf/wmYUUzItTT27Mj6BUg4V3t+ylYDpbWggvNIrePsLm
9F2kYN3N0kDMehSx6PxR2LohBbdO9QyPtI6ijlTbXq10KbDYT/t4PGsMCUsI
HZnpl4ID9b+txKu/kXl4uPCbX1IgK+yf7VfwG0V8/WGYNCkFI6VTsnYTv9GP
gHs5SptS0LTrfDzk0gSKa1+Tj2WUBvHjB//EXSbRvH2ji4ipNJD15m6lZk8j
lqrTiftW0uBp/apka3Ia4Y96VfddkobTq1KvNKRnUM5LHrJAb2nYYpw886xr
BhF372T/lywNVz492ZimmkMvU0x63Hul4fpUkfaZmgX0Y+r5BnyXBl+cMiGZ
bhFRKlOcYRqVBrOLtkZ87ovo4mjtlcZlaZi/WfSyVGAJnRDnID1xUgaqvsfS
vC1eRp5t07Kl+jKgE4gXivNbRW/hhZuYuQzEeSYbKJWvIrrXXk+KL8qA2Pyw
Z8XiKior3aF/6ikDKVEscUxX19BaxvG1jGQZYCRl1566uo783STLIvplICvj
PLtW2iZqm1yfPvglA+kDdAF0o5uI2b7ubPCUDKTxDx0dENlCdWbqiTe2ZeCW
b4GO87sttIMz9XBnlYU0w0baZZI/KIjuhpi5rSxwP3rC+qNsF32MU3H6clkW
Pgzb1Zym+Ys4KEhyjDxkIcDrNWe8y1/UtBNznBAqC9Kir5TF+PcQye+sOfRI
Fm5kfGLtePkPRVY3FQlPykK06zybWBgJfJWMHC1YlIUvgQPhKXUkwFeizcK3
JQv3pAKKX6+SwPvc3jucR+XA/5/5awtnUqCMGXdmEJaDS3nrsnSWZBBnRcn/
z10Oyjhi5iecyUFNimZr1lcOOB5IPPhTSA6rFPTt34LkQC5C6MPQLDlYlHNc
LbsrB7vtD/TOeFEAP5X8S8cXcsA9KGzZGU0Jb6sd5bvm5aD9UY298QgV+MZf
paxdP9QT8EGFEtQg6OA58OSvHAyVX8rZDaGGBJrAW8HH5UGm52faU55jYO14
v1FKVB74UtJWLvkfhy26FizdVR5ajW8dDTc5ASVTbaejvOVBVkjjyrnKE2D7
5uO0V4A89LRE6QswnYT3V77H6sXJw65K9fSLnychuWm5+1+xPOA1xGw8GulA
zJ3T3GlWHur05VgrA+lhVJ1P0HhVHnyD+f8U1tBDCrPIH9yOPBxX6xizWKOH
3Vb5LGZqBVC2xxH+uDFAB6v+cJeQAjwPiP3h5XLII9sDnaVdFIDCJfR2SMxp
cFIVMNjyVIBzJu7EtZ7T4FzeK//6hgJk3u68qHGaGVyy+SmwOwrwy/gLb0Qh
M3h4fnpiUaAAHEeyU7u/skAAM+9Y6IQC+F5oiGK3PQNBd7s78AsKkBXd1lBS
cQaCSW+WUW8ogJlShzuemh3C5j+GphxRhDDWPI/CenaIbvbnLORRhH62iOHY
Q552/0qXdY+9InhKti5efcgFqT99NVNcFIG4/vC5zWcueGB8VtTCSxHeaCR/
WaXghgwV392xUEVosa6wPX6dG3JPcmZu5irCkl6fu5whD5TUXv/G/ksR7tvQ
JKmK88ELMfamsQlFOJv7RMHEnQ9ePmp7VrCgCDsJBqziL/igLP6Mn9SeIvyY
ygBVCX6osfvAgD+jBFYXq3wpVAWg5SirsZulEizHuczfCROCqScSeoMOStD4
nPlN+RchoAG8prarEvD7k3/dFBQGi5ue8ryBSuDEtDQ4dLgnl2c+sA7lKEGe
Xx1r/DlR4OjyHtcbVYKdQkyNDCRAwzlmqG5GCfBd6jdeFUiAC1nuV4FVJXjR
9lK+9oQkVCl3tpGRnYOrq+w5K+OSQHh+9nkD7zmQr7SzwPccztm7H31ErpwD
f6kQswsvZCBXaNw9w/MciOAVfOvmZeD9++3LlDfPQfsWb8WKqCzQ/eOxGI85
B5knPHZXX8lC4bVbqlkl5+BPUjRNXLMc9BsIUBxbOgdpZHSj72gVYXdOZf/G
1jkQwHDaR2wUgeuO8fbk/jnAJziqE58rgntz0GzLSWWgF7Bgo9ZXgiNSX7pv
SSvDRY+UsZSH50D6VFjarK8yJIwcLdT0V4UGqgGh9iBl8DobyWnbqwoaJBKv
n0Ypw8K1yg8pojgwWx4asUtVhlQaxwbnSRz4dysKf6tUho9CNqFHryA4eJ/w
uvK1MljtDV/w6EIQ82ZSP/mdMnTWp4TcYQbIfJ7iTfyiDGM06VEUIQBvYpdf
t64pQ6hOQGmGiTpg4VoG+bvKUER8K2gSqw49Nx+OBpOpQC25QGzhW3UYuUKg
OEevAioSDUO7UhrgYvc4/TSbCrSzWjN8vKoBK+Y7whvcKrBoGkDse6wBZFqF
BqXSKtBcPpG7zKAJ8bj90bvnVAD7zt4QrKcJjPLnfVzVVUA88xbUB2tCjtgL
Ch1dFThhn/OqrUQT+PmOZPAbq8CQGJNE60dNeHXGSuSIpQqkzz+ScRjSBAWG
8jej9ipQEjYiOdyhCc3HqAybXFTAuoJlHh+qCTpkdmPZXipgcbphC4Y14PNO
tc+tmyoQevePEWujOlit0lBeCFMBA13a0pfLCMZnHDPkYlTATScy5i3zoRxt
EKFPUgHtI/yzmIs8bAycalxOV4G28ymbSbckIeiTi2F3ngqEyHbH/tfGDxTt
zWMlhYf53X/jmzDLDglNp31jSlXA3Nr8bEQnPTDXXKN0rlUBGw7+SDVdKsh/
+T5Ds1kF8qXZaxVSDpDQszOi3O0qwGudeI26cwOV53g37vcc+nsi0nvj8zxS
Tu00/PlNBURSbyp93RxHrfFc4/XDKqDqZhktZvEDESJv+KZPqUDQG9zp/cI+
9DWgh9JvSQW6KuLe1C50IVtv/kyTLRV49oRR4WznOzR1NUhUav+wniRn013T
G5GHw5dGWkpVkCxu51MMq0HbFiJG87SqkJS1VUN3qRyFGYWPdzCpghTXTqEq
/jmi0vnuW8ChCmNX1y5A+TOUjCSPRvGrAjVd/jP+kEeITTE600FcFbZ3BNhN
U3LQE4lfokheFSqyaPde5KUjMQG5JnacKnifbW3kaUlBVRzxRrt4VSDNW7Ws
qkhCOKbx8QGiKjBnOL4uirqL2mjO+VWbHca3/OUUlxaDDMiTjqbYHOK7vcX8
wOk2Gvg7lenlpArBpR4G8x8ikP06TszAXRXO7ot65WaHIVp6kt6vvqpQSvOQ
4+v5YNQg1epjHawKjUyhWSlcAeiKYRTz+G1VoJMT8nX1vYEYPbReuySogmAH
eehlBT/UcpfKbjlNFdLobd9nGvsgj+ddZP55qnAvkou/sPo6OtN1t2CvUBX0
Mzo/55/3Qh0zBnqRZarQveHcEWzggfyOnlqirleFj8Z8J6Pw7ohH4EtyUosq
eHkxhjCFuaJP+AfyzF2H9Vpw8bPZckFBjhcGH/apwu335xtCcq8g4QjWYL4h
VfBVTHmNrjujb/lDXM9/q0KCcRLrQ5fLKLL54XvpBVXgG6D4dj/UCUkN27nU
baiCnpzFxlq5I/q1x02D/h3OFZW+k6p7l1DcmYnSDxQ4KHeN6vG1voQUlQtM
iSdwUBT5o/h0twOasHDZ7juNg+s5ksf3DBxQ8g2RbMuzOLBhzCk1GbFHamkL
aqOCOJghMnWGB9mj+apX485SOCCp5BwV57dHGV+8oheVcKBzfXbTuMwOYWsy
Ir7qOHg6aPjhm5AdWqPb7N7VxUH1+slQvoqLKE+y9nq4CQ46Q7pKn+ldRESD
W0xU1jh4N3b/NsmqLdpxV6lPcMTB872WI7tPbFFB/D8bJnccfCr0fxd9yRaZ
ljST5PjigIu6+UOpqC0i6Qx/yhOMg4YD9egn+zbo5bSmTvFtHBy9I1Kf+8MG
WVFSLkgm4GA3cID/b5MNOsrfkViThgNCIAWe47kNqtKMk8Xl4YD1g3pBaK4N
crhEHHhXiAPJlE3qZxk26ET4iUC9Mhw8uel2nCfTBr3O6+X8XIcDK8l+lJpn
g1ya7rdeaMEB1b/HDw43NmL6ZeY83IkDjeDdwZU3Nqj17+ljl/twUGIu8Aj/
xQZ5sg2+nP9xiMerIsp0yQaxn8s29v6Ng38twqQTtLao84Lt5p95HNBjv9Ob
pG2Rv//ZzNANHITe7IoqtbRFvA/GVCn/4cAje8su/rYt6q18MnqXQg2qzQlD
gtW2KLjvchTDCTVwkxM/dnHGFomsCgplnVaDU0XWgzRnL6IoiReehYJqcN3M
Ifl82kUkre/BICGlBtk3O1/XfbuIht2kaquU1CDrlf5FPjY7pFRctd+iqwYz
XriJpmI7NNnu/1jHRA30Rd/KtW/aoftTSlqfrNTgr+ZZeYzHHi3wNt776aYG
7dN1Skf87NGj3A/s2/fUYDc8S/m1sAPKsREbOJ+mBhGzf+4wWDqgDLaU5Kpc
NXhDQVqXHOuAEtLsKb1L1eCGIxFbX3RAAQl/lxd61cByftCO6v0l5Ee8VEIY
VINbfZERuof97XWs06lkTA3UaE/y5ss7IufotMEra2qg0vBnOe65IzIJkX43
zoBA8NNWmv5TJ6SvmhGszo7gqcFHRalJJ6Szu6+Yz4fA58qFt4KCl5Ga/8cX
tvIIdG6ezbF4dRmJelxJ+26OQPFxTe9opzMiv/jwak8mAgUToegNhavo4Aw5
n/hjBLFiXJ8+xV5Fu4Ouw/ElCAoCL7j8/HUVrZxXMtV9jQ7v9/LE1FhX9FP/
i+r7nwhGbPfg67Ib+pFLTvXrJICUwWeym7se6Ps/xcs0jACqs+xHpx08Ub+N
W6sKCwDu3OtbTV2eqJetLyiLC8BaKCPP2sgLtaXlrV6QBjCcDnTkl7yOKhOU
h/pMALy+hz0/Su+DLmWfoGgwBxDQPXPqjb4Poi8al3hkBaCnVGcvEeeDvFri
IjwvASR23s05T+GLxDZ+CNN4AxwZXudYJvdDTy0Db2LJAOvSpF7uojeQqbPh
Y7EHAJxsjW/YD+cnmQ/vR4ZMgEjzZ3EVjTeQ/d3/zo7nA1TW9xdkmt5E7M1n
2kPKALYJ613P4m6hVL43THWfADr2QjVNhYKQpnQSyvsCwJhhSfMmLAit4Zyu
Rg8AHGzqn1X5EYSMLtA0mo0AMImZdsUmBSOaOBun1SWAccHX4V3HQlHU8l6F
yAl16McasGj2cCS71/vzFL062PhwvsObhKNxqmeUO0zqYLt5G17EhCPg0bdq
51AHrlPgE7IdjvbMHpI6iR/yItqv1G6/IpBvA87oIVEdwpX0gy0+RqFqq3ay
QSN1MEeKEziG22hr16ia8bw6dNvHnGayvo1uqTix3bU95FG5Ie3PFm+jkDdx
EwEe6kAySRX9gvMOutM0cNMiSR2IcYlbNpWxqOOig2hqqjqQPizP2jkWh44d
zP36lKEOQiY/tt86xqG7aF9D+5E6OM/N7I2wxKOkt3y0ChXq0LRN/NWbfBdl
tV5/xPBVHXjtOb9otiaioUt/TQ2/q0PZGW4GPHMSYj9ymzL+pzqoOnU3chok
oVzNDDeySXWA4tsBR5uS0JP3TfKrm+qQM3hcdqkgGb1oO97Vw6wB+DPHwxzz
UtCi84OgY+wakLDZYaEznoIkjp6V1OLSgH6BHL1TAqmoXFsmtVFIA76JhrVa
l6Wimg6Liy/OaUBPYZ6bcO8D1Nz1bC3WWgPUT3w0ikUZqIKl93qwnQYYNlyJ
KLqbgZ467654OR7GS6NhavyRgeLIDJcvuGmAlL2WT9+tTGSm/GeeP1ADJMnO
BZK/z0JzxXqTLVkaYHzCLM4l/iH6ue3rVJ2rAYEbrST2sw/RJyzvd9H/eShf
YniETi6qGlsfSyzRAMuSlBsXjuWhUNaHw7YNGjDRX/zCzCAfMcYuD+wMagCL
VR9P3cEjRDnAemHxlwYUPThKvq30GO3w4b+NjmnATdV7g/Pej9Hw24yv7bMa
sP7zzleS2ceo+I/65wc7GsDz+LsU2/ATpOaS2iXNqgm8jzKHBZaeIemaJl1+
Dk2IHTAmn5YtQHzksx0s3JqAL0e0twMKEHU+rv1ASBM4zaW9Lx8rRF8Hpt51
K2mCSLRvNqV8Ebqqfa7xqoUmnLJer3etK0FLQqwfym00wVbw9d5dxufI+9jO
xx17TaC7nMa8eP05Cuqu+xl7VRNEC1ZZb0q9QEmmSnvFAZqwJTGsINP4EtXY
KarM5WhC4qVP4U/uliEVdWZNmUeaMNlwVaHqQxl6y7OtF/BME5zTx/xiD8pQ
52SN1bFXmkAvH8Vz168c/XRTCBBp1gTS6b9sGm4ViOymfL3rmCZYZGZYboRW
oTuWTC0Vk4e8fdwr7klbFaJR2ezYndWE1R7xZ1onqhHTftX3uLVD/G754375
1UgoSu5PyRE84Ku8b/f31iDDJFnFeX48/HUitr1yqkdfrzMgWRE8nNA56qP2
ph5ZmK5rBUrgwQlXvvOXsQFdOl1pflwRDxtOfafouhqQf46Mv6gOHhLmWH4x
aL5BOUXS1W6ueKB0sFzx9m1GHYOOHXkeeODMVOOcH25GG8fShr544yEr6+Xk
Zf63iHBtl1Q1EA918dk811Leol3pdwY0d/FwJKjsvtXNFmT52mzmxUs8qAcd
V5m98g5FLUT/HS3Hw2JsQnhm8TtUxlF/gqkGD7eoH4PQwjtEFcYhH9yEBwOD
jPgFn/eoDj8Vrv8JD62vUzMuJXxAp3tunFlawYPkTt7PodV2pHFQLMGziQd6
R6bOGY0O5CH1U918Bw/9MUPTRx90oLb74NJEigHZvZWf8aqdyO8CdXUCPQY2
xRaxjJld6OtoloGkHAZ+/dH/EuO7EQl9t4OjEgYDSTHO95e7kZjmgW+6Kgaa
ZEya02Y9KPKZY/YBHgPL9+8KM3k/IRlXsZlP5zFYY1Eu6XPpRcnrjeFeNzBI
oNs6S1TuQx59SQ42gRiQsNMNf/XpQ8RyR3WdUAy+RTw3ZnjVhyg9qUm57mDA
GvNUroHvCwqaMwv7lIaB+mLTvSW2r8h5bD5EogYD0/2L2fTi3xD+bdNFtgYM
ODXM7p/y+Ya485LVKJsw6DrndmWx/hv6aaO4/+sDBvcXfXe19AaQ8feI4Hv9
GIiSKcz2+n1Hqp9YgxY2MOA3qQnp3P2BWF8tWH//g4FidJnbmuEQ2rrbrPJ+
DwPGjXkxoYIhVK53+W82uRaofru90Xb+JxJoKwsgMGrBdGmmrHTrL3SqUftW
iawWJL8wovW6OoqWstks0xS1IFi10QL3cBR9DFhUilDRAsoDM+VXn0dRtFLK
H0tNLRCRz5+OUB1De5XDN6hNtaCfop5Umm0cTZX4+bt4a4FcTZ1H1PZvZM6x
P1zkrwVZNYva4yoT6ENitPZsgBbkkujuC4dPoKe+6SyukVpQbcU/EnliEl1S
q29wS9WCX0PMhk1yU2j4896+R40WJIgsz0PFDDLA375S2qAFlm5Ujr2Us6ix
hrZ3uUkLfv785BtuM4tysjkfebVrgbvrvPOF43PI6jJoen/XAkNzsy31G/Oo
/0/kHb9dLZD8nOnfFr+E8G40K9X7WhDl+h+v7cYSqvqVarFFpg2Cc8ynrC4u
o/utz4RvHNcGpljrHuKZFWR0t/2/m+zaEHD9/aj13gr6ePY4XZCaNjxXHXhA
MrGGVO+n3HyjoQ0Sie17r/jW0XNy9rE9LW3wm5uZU3ZeR3GzYhXBhtqwY2a+
vjW/jnQqDcxC7bVhmJmD8jzZJnqvdT8jIkIbnCnopAJtt9Gk8+vugGhtoEj6
VcNXtI0o70yQ+cRpgyfPSP+b9W2k065wzfG+NihxkXi/v/cHfdQeUsc/1oaP
tn++3uneQV90+OYpWrXBO5Q/pDRkD2246HPtf9CGICIfNA7uHe4D//NbndrQ
9duaeUn+HzLv7Gie+qwNI8qx0L76D/3QvZbaPnaYz61HZE03DtC4Xg0ullQH
Mh5ffsdqTwpH3Ea8wyl0IC1jTjwvnRT44qmKblHrwFe+MwzfPpGC839W9K6n
dECqSVrXQYMM5ggHU3rcOiDfMa8jJnUE1og6STTqOlAdy4EvlqIAhmvXP5Bj
OtBwveeqnS8FyN3L2t3T0YFy8+jGxToK8O9ecFo00gER6jm5XDwl7Oonn+ux
P7Snv/nuofNRIDX8MZ4YpgPn+BjpcgeooaPpPK9vlA48+XzRIknoGCRJfHa0
iNGBRa8BxbCAY8B1omOCK0kHht7LNTlxHwforp4qz9OBS4nefFmBNBBGSJ77
0qQD4wSez8VOJ0HnNY1oXasOLD3RJj9oOwl0ojFuOW06kN1ozoFnooP8Y6EL
Tj06IOpYMPE4gA7edrovbf7SAU7d7K0F4ikg0dFZY/6nA9vrTI63TjFAR+07
mT0SXWhKf5Qlq88ASYLIZ5RcF8J9y6eLYhmA66jCRhGNLjQY4ta7yQ+JcRvv
1jl2XXAfHnmlSc4EYfiDHWsVXUirLLWmEGEGnaoAZUC68MmldinFmxno+LYC
+DR1YYUv5QPFG2bIP7L4d0FPF8a5CzxyjVngbeuPf8FWh/ZSBY/X77ACiXoN
af4tXbDX8/jzHy87WOGnu74H60J39MOKG5HsUKXNknoqQhe0l11LXSbYwcUg
QCAyThdGBis6RUs44LO1GsE5WxcWccKnK7Gz8Ni/LVWsURd43xlTeNpzw96t
bdvLLbpAlJHfjMjmBvNgIcHcD7rglK/YbDfADcei4upP9uiCA492ZogxD/gk
GwyvDeuCyb0Ys1xDXsC/+CZYT6IHxHrqgwU/fsgtPbq6Sq4Hnve4rv9u4oc/
FUoNItR6ULXKvPKZSgBe1GcRc07pgWVOtOXTPAFgar94PZRHD3KqRHqDBwVh
amyqAcPrwYuRMH+ecBGASeaoEB09CMzd7FEbEoGsGR39WqLeIZ/rCLunIAoG
yyUjQuf1YFeO1KBvRRRq9zzIaZz1gK+Hb8HDVxximLf1++7oAdORtPRpWylI
7ej43Rp/qBvoM31KloK8W1m3KhP1YIggKWndJgU1Q7hnqel6sHamyP6qtDRM
5kXtmRfqwc+hfL+MkzKgIUT/fKhND0RbSWzFl2TBYPA3fOzSgyv2AdsO4nJg
GVf97U2PHnx2GCOzuyYHXgsWZLnf9GCbVN/1zbIc5JXlWdpP6QF9LGGTsC8P
e0riVJMUBHgitow7jSkB1dz+w35qApBWxUecuK8EDNm9sm20BGD7FcH+d0QJ
RP752BUyEYCP7tdIY8g5sGxpqLnKTwAp/XdK2h3K4OR9l2glTIAEobj3iEMF
vHgvjuuJE6DWlPyVro8KxNwmPSEmT4Dtbf3jhTyqUKOrc3kJT4CJ7WOlHok4
aN1l/TusQ4CLYVqJY4s46H4+n/SJSICKMOf0AX01mKBNfFNmRgBOGbIbYod3
7EqTvckjCwJI89c3aN1CsOcpM5NsQwCz2gTJ0HEEDH39DD5OBNAv+Sed5HB4
p0UWFju6EIDl6MMVtzwAEblbyMydADWOutUFvwEUJvX68V4EmA4y4XsjrQ4a
aexu8r4EuNn7tjIwUR0MtJdIBG4SYJaQHjlEecir/zSnnQ4iAM1oAENesQY4
FSeLHQ0jwK+oXCq7TE3wsnJs3Y4kgOGxKfHqMxicyJsbVY0hQH9ofGy9qA68
+H39IPwuASpDEtujkgxBT2iHoz2JAAvF/CrFrvYw7R6mSvPgML/2G/YPm+o1
o8qPWhtnEiC1NXimxPYknmcr4VbaQwJMvg70zveUxb9VPp0x9IgATUyZR8Cb
gL8Y+rCGq4AAJ8SkTp1/bIvfe8fXf7mEAFdz00qemLrhs6herJe8OsTbSV2z
WO2PV9KXpV+pIEC7SJKve0w4vj+5QUq+lgB6Eyl16nmxeO9v6oYBrwkwgyTM
aleS8XRnOq81Nx/aK2Q/9tPJwL+yM7pL/p4AWTSKHQPbeXji04ES3Q4CjPz9
Mr6Q+BQ/N3OxM+HjYT2Zu7pfrxTjY8Snpr/0EkAhoMjEjbkML+B9jZK1nwAU
A7+qbF9W4t/VbPBdHCRA76tXtL6ttXj7v4GaT34d9mcS3nbx4hv8PjpyaWaM
AK1RE8ZRH97ic6LiwsSnCLD/pcIrovAdXrnzVJ73HAHu7nHHJw224b/TZjbW
LhFA9YMWd49dF97fhOvn3hoBpjbkK63UevCM6YW76tuH/SwcMVqi+hlfPiTB
eucvAV4YO172jPuCN+CqUfx4QICPAzpFcce+4ReccOanyInw+CzuKk3zd7zQ
EiElm4YIjmGBlyO6h/FtMl/KR+mIQC91je4/pjG80w2rXn4mIli2K70U/D2O
J3sztuTKSoQ3tfyzw58m8HkkV2nLOIjgI3Pu6Z+fU3hVbEV0k5sIuVdvNgUd
n8X/iL2hpyxAhNuJM8w+NvP40wzRd95LEMFNQYl8Xm4FX3WBtoBalgjfNDsl
hVNX8SY5qe8NFInQKfpPuYxyHX+P/wnpICKCwdKFsiLBLbyIqwgXJ54I8buR
u9wD2/iOV+VqjjpEYMdsJ9azd/DkSm8DF42IELbNfaH8yj/84yDtLJnzRKBM
pn/71PMADy09dTcsibBx2RYf1k6CBer92iS9RARDfG4QyfEjGEuiE6O2MxFO
5t57a47IsZov8zJ3XYngv2vLeDWMAluz2fU87UMEgYWC/zqFqbCkR+EJ1jeI
oMXGczbnPjUmMUX1Mj+QCKFBkZdkqI9jrp7McyJRRFg5sZ9RwXUCGwuXc0IP
iFDkGOjNHkaPCZw+keCVSYSQrE93WlwZMNeS6dpHD4mw6T38gNKWEdvoyzpO
XkCE6ZV5n0WL0xgVH2llRw0RZj0pODPK2TD9uh8/dxqIEEHpMVLw8wx2n1hF
KdpMhCWaU7qGdBzYGb8rVvfaibBq2LYwm3wWk2jrJjX5flifsNMS38N4MB+r
QtHIn0RIlP3KE6jMi9UthZ2vGiVCJIXnu+k/vJg6s1zx6VkiXNs542sTxY+Z
uWQZDe0QIa/LO9plQAjL3PMJoNkngjHHuW7aemFsOEn/KY5MHyb9ctJ38kSw
K/Ukf/KO6cOuKBvv72AxLODYlTynM/pQVkIVNYiTwppzofPBWX34r9mzNP+9
FEYuy7bexqsP5oTbMboG0tg9624tYTF9uND8/JadqwyW/0J2aVFVHyaW/T77
t8lhk0DLclZdH6rujv7mvyyPifRPqRth+uCVMnhyk1IBq/qX+aBCXx+uf3ee
ozdTxNoNSHA3LurDE8YQXkEmZYzm96Bz0SV9YOmfDyzvVsaMblQmDTof4llr
t8yKVcF+5DlPqHjqQxy8Hio4jsOWVj7Gk4Tpg9DeifpWdsAYUzJ/xD7SBw5c
sVXaI03sWD/DZ+9n+lB4sBDkSY/HSJgT2q2L9SGaqmVsMwqPLWZFVImX6wPd
SBs7syeGtT12S/j8Vh8ilcn3jlhoYzcrcBqso/oQGssWTAwlYB4btUpkE/rQ
eaSwxI+GiDkpyEjOT+sDT/yNlpBsImbcIMDeuKwPfRXJZrhmfUyk9eSW/YE+
5IbJWI2fMMJ+fR4rLuI0gBhViTejOSbYVwab/GQeA/A4rpggs26CdZ3/lhYg
YAA871WK7umZYjWDXZFECQOgdT9J7bxniiWNVdqu4AyAZOLNp//cz2Maq7dP
KdkaQMQ4G0lPuAWmJEtCxe1gAO03yTW9Zy0wCb+AferLBmDwU5P7nIkldmbH
Y37I3QBORGWRywtaYRskFh9Cgwyg/klU3akRa6yATuRWe7YBKKcoOLXcsTv8
P5Z/yPMNID86JMOK0h6rfR17Q+OpAQSyy1gm6NpjHc6zfo0vDIAgwuEj2GeP
zb0p8q5sNAChakqi6oIDJn5V0D1vxAB83miV9OGdsBq1C/M/fxsAQ++EmWOK
E6bGeMeVbcYADu8skqZxJ8ygecrlwYoBuMr8ceiPvIx5MRVcjic1hDpMO63o
kzNW1cJnd4PXEBQVfQdbE65iqulmw1WChnCZ8chL97mr2Af3KNs1UUPop7pV
uKLlin1jnrC+JmcI6ydessWTuWHb155YOGKGsOJ/DicQ5Y4ps/GYGF4xBJ55
sviBck+sxfssJvjcEIbIhW+fsfPBdjeXk9hLDeHoNv50VLoPJnfr7c9TlYbw
787vJsteH6wo1MF3r8EQflBT/dXX9MWS7j558rnLEJ4Ixj+8LOGH2RcIkgXN
GcLLhxfDXrLewA4W0u1mGI3gMYWDU6h2IJYjEUbx+7QRdOQzRpknBGJKXi7P
f7EYQeIfreHC/kDMe11pu4/dCHwu3ZlquByETe0MJjTyGcHrOoYPL+ODsR5K
9qb7ckZwXx2V8iyHYrlc+ew4MyNQFY3yTI2PwE7ESXeImxuBu8tsjXhNBBa6
3urDaWEE/RcMqajGIjD7tsmuA2sjKJbhSgxTjMR43EVvtToagSnXXFr0dCRW
UFvTr+1jBAMsLSOnzG5jrwy6E0zuG8H4lXtDofYxGGfdRWXNVCOYEPQiZqXE
YIncK5OyaUbg2+66/bctBvPaoMcxZRlBSFxJywOJWEwmy2J+4JER6Li4JAuR
xmE1k7+1bcuN4FtzqMdWZTzWGLRL4tJrBCc7JJ7eM07EtkqnViL6Dv3Pyeqc
TknEpH73jT78agTzVrvMu18Tsae6z99++W4E/rQTZ+bEkrC40zZhaOzw/XpR
+UJlEmZe1nhwes0IWJMa7Eu7krHl32H7HxiMwaDUXISKPRUTYr62NMpkDPlG
FcFvNFKxS3qWw3+ZjSE5cNzq8dVU7FuZdJM0uzGEzalJH6lLxd4Ejwc/5DMG
mhTbd+wXHmAxzPh/vvLGkIP/JfRfbhrGTTi6x3vBGLb6kPmaWSYm16/Zx2Zp
DGvBS6G0oZmYll1Y0SlrY2gg+ildKM7EXH12zA4uGkNXXscb//1MrCp7/uUP
Z2Og464cmynJwrQWPtkl+xuDeO0BUxlNDuZ6L+Pd/gNjOH69bj14IxcLYu7P
3Ew3BoaLZ97k8OVhCY9OeS1kGsPnRtBdNMvDKqvj2H88NAbXs0ksfDV52N6v
IL/qZ8bwRlHxpR8uH0uUcBB0rzaG2mod77+Uj7CqT8Lxg1+NIYBqcMnq5WMs
ibfl2e43Y0iypQ+Y73qMud2weHtm0BjEpn4IZs88xnjO3tm0/WUM5PtxYhZ8
T7BEjwm78cnD+MrhT/UePsFcafPk5reMQTHsQd7ZB08xLgLj8B6LCdivDers
5RRgd9v2pbhsTeC9Yl0246nnGFyfkuawM4HvXN09bnLPsY0zPTJsDiYQMl9X
O3bhOWZz/aEc42UT+J1iOyqc9xwTZ1dVorpmAvIK30jFJV9gPddvoZUgE3Cd
sRE/dv4lRsexof82xwRYNcIvB9eVYik+s672P02AaZS5KMOrAmPTCrhuOmwC
f3fUDMZvV2CPWY7f1Bo1gSO0Bkaq2RVYRaPYbbEJE8CdROHcbRVY71GvvD/z
JhDDJqxVzl6JncjZ+pL01wSYD0h/zH+sxGLeH8G1sJmCdvICy865aiyIifMk
j6UprDl/dv+iXYd1l1NbIWtTUPga25TkWIdxGmw+tbE1hQiuYSHH0DqsOfqj
crqDKawkO13Rrq3DyP4EONO4mkJkgJT7CaF67M6PgcatAFMY8SFNf0jbgN3P
S3b/L8cUFFO9Iv/MvMaKhSm6fEdNIWm5XcthvBmj3CBlbbloBlamdFz1vO+x
QqnykNxpM9D6EuL81rcTE75UYvDv2nlIyyIXiYr8hA3p1lecnz8PenwyIv1/
+7C+JwHiyMccrMMfr8mvf8P+VBqr8qyZQxq11/1IziHsoM67OtrjAvyyFplS
fj6CEaS0sKDNC0BH2pdrlzKOtdtKXnXzsYAzU0HX1a9MYvSOLq8f+lnAZ5Zq
9RDfSeyiyyPa3hsWgK4xRr8Nn8S2vBkq5IIsIGDjg+f5nEmML2Z791+UBdh2
X5p6+3kSC6tovpuUZgGZUlvWebgpTPmoUVl1vQVI7TLjI1insWiaWLKZ1xaw
wP33g6fgNPb5VKsZW5MFJMuvjlySn8Zc2OV2QlotYCszZdTSeBpLl2bR0PnP
AmiKzsrFx05jG9ajX378tIA/9u1n93anMXBgFaAdsYCjIfeKNalnsHhnk5to
zAI43G1+JTHPYDzX37M/nbSAZrn72qpyM5hxdNHla0sWUN/xHzZwbQbLiR+r
zVuxAK5mLUQMmsFmktiO9a1ZgPCtD/NtcTNYWPbdVwrbFmBVTrjUXTiDfcz/
QHJ1xwJ4F5IlLGtmMOaCfZPsvxbwn6Nlxdz7GezSc8Vn3f8soMi/ZSn8ywz2
qsxr++DAAugjZyc4x2ew/wH+UqrM
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17653#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nhR6ziwvs+Hx5I6Suz6Z6H88SmxD
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17653#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c4l+8Xlr33ysre2dvnfZ7jY2RHRBkZWcnXCkXJSBlJSLIykqKiUilC
GSkNMsouKSMys5N+fn+917nOOfd9n3Oe573OI+YZdMCbkoKCwo+WguL/X/HL
f0sLRZrQ3w7lDjqKdfyUXm7Pf35FODXZ61RHwSJuOlV1U9bvPhYcPcs1mPoL
X9H64cKS9hSb5cw3RX79idtUQnxp/V5gB9ZKqitWU/gMz79n/4pbsOmRY85m
DJM4O9MYbV16jQ0os94fGR7Hb1K7TVd8O3HLYM4B15LveCGBefLUnS5cFasT
cydzDEe33JdbK+7BfFovQ2Qvf8PZsFr1+1IfXnw4d6jE8SuWiMldDEkYwKVM
HV1mOSP4QQNJYyFqCG9dVvX0XBjC7Xrnan/5fsW33gt61Hzvx3dJXGc174/i
UyIqGtzROzhDXkVhd77hUXu3IEP5z/isAP3YUvF3fHWfmoB4fQ9urT1MpVbw
A88tOetNFHZjxsN3JUOujeM/1Bz/VWR04WvXrH3nL03iyBD/4pP7OvEXreIk
peQpLH+bN6g//gOW/LxY8V/CT1zkclGsvu8dfsB99ddM1AwOrIhLD3rzBq8+
mmBRiPiFBzSzIos9XmPCTkfZP2QWf009TMXD1obfZgyFTPnO4wS9XX/Mb7Tg
pJzs9iuqCziad+Dl8vlmrOiHndTvL2AlUVb8MLIJh9JlnA69s4g5HArsCgVf
YJ4+XWZO2SUcTp6JZzncgJ/dGit4WLaEb3B6U63ff463jTUaF4p/42ian90Z
N5/hEp4R63SRZRz0wvPAdfwUG42f/6pcsIzZX++XH5x7gi8m9FEEXVvBC2ks
F3zPP8JK9rEZrDyrWKEcSRX7V+NuCTnxqsxVPJOSktzv9hDzt0QZzl5aw4+2
MoIDZ6vw80yJ3lSmdTyqMJ56bG8lPuL53ksxeR376bj7Nl64i2/uErlwPGED
N1UaZH+IKcf7utp4mSg38TZDVc+E0G08XRx0+07MJi6QfYB4OsqwKjS9+Rn1
Bxub21Zq+ZXiXjb/w8nrf3DOS9tD3Ptv4FNfOadlI7bw59qitkHjEtx41ovJ
L+Qvzv7nguRfFGIPa5YCuvm/+N90G/OrXdcxtUiN4u2AbXxG2elolms+Nm+g
s57w/YfZP/YPqjjnYNV/niu8C/9w2YJuRPFINk4VdeuQIFEA7e9rQf4nr+LY
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
Zmw3NYDo+Ickl4w5zNFt6fy6hQGYWeR3LEzMYfmJ4x867QyAeN2ehnnNY4SJ
b5Yxngawy4rvwZPYBcwx8mnl2hMDOHFFVM5sfBHz29X6bD7eAPjCD3Lt3rGE
Rb3c7jLxzAAk3heN/VNbwvIKwvd2vjAAruGTAPeWsNUeP4+C1wYgRA0+8/bw
MvZQ6bL09QIDIOX2pu93XMHyv8k+6Ghhz5/l3Cq9Yw2LPlT+ernNAJzedHmW
a61h17yMy/Z0GEBmkIJ6pOsadvDAvXnzHgOwu/PjfmnjGvbQedDy15AB/Jnu
P+UZu4458ierjC+w+Xok4YtiOFjiVKHeVVFDWHqxkR+nwsWKqF47Km5uCOej
5Q5uZm1kgevwsX2WhqC/sp/qN7yRNbfn63Gxy4aw3LiuwLuBh2Xm+kJFyNYQ
fkdeIzie4mEp7j2lxutkCP3fFVaNs3lYX129z0z7GUIY75XW0eebWIL75nTL
nhsCzzUufcn7m1mP3UYdrboN4ae50q/z2fwsMYKP67leQ+hqOcGd2MTPeiW6
9Rahj53/etJvZY6flYsU7ioMGkLARGPCVg0B1vdNLsmL44ZAuGSXerVKgCXw
fKE5esUQ7lWRmIf7t7HCvmzAlYudA6R58MZNke0sP+H92w6anAMVsa+6nQ92
shpyNl86Y3oOONpy1pRe7WTt15tPMzM/B7qyCu9iP+1kMUPrNeIvn4OysCzB
x0M7WVyLPnZ8judgR/3tCjMQYt3r/IEWfM6BheMLW9klIdaj5Jjrdc/PQdzJ
7Q0tXiKst7IbWe5958DuFZ9GT+ZuFs8c5+5yi/Pwt3mrvdsJcdabozn+Sb/P
g5TKhJeYvyRL1jpT75/TBWgMlsQHWMiyusjFuRfGL4B4pGLbnWglVlOqj+IZ
NyNwSJIuS/c+zlrMMzh1cNYIfFW/POxoUWWtf7pZEOp8EU5bSn3w8ldnUY8S
8H7zF8F3wG/ZcATHqjE/cvWamzFERbzzHdbQYu244lD6wsMYfCREwqPwWiwL
h5f8372MYdjaeVWDrsVauLkzV8XPGHacvSv40laLJRn2d/lfiDEsTD7b9ipa
ixWYy4yIjjMGTUOW8q3fWiyNTfTsgmJjWJl8Ze/7VJsVynefa6TUGHQklvNy
UrVZjdsrzosxjEGuVvbOxEdtlsNelSX/CmP4jmW9vFGlzYo/JqpNqjOG7C1p
Qu9ntVlzpn3Nnd3GUDf3NGJNV4cFl3dL8f80hhMNvw1vm+iwHtgZ3jrTbwxt
fiEZHLY6rIOuX/amDRnDh5KzG4X9dFgGoRm2TlPGMLZfKck9U4f1/EF/UfK0
MVw+oL64q1CHNRIttqVp1hj6MupHmOU6rMDEiI8n/hpDY5ZczL4OHVZ9ShXH
1SVjyO+opDQP6rB2pa8ZJq4Yg+9QUFLktA7L+t3J1w3/jMFWVj+StqrD+pjt
8nd9nT3/yjZRQd6zrP8BMNWJnA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$17653#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
JPt/oA==
          "]]}, Annotation[#, "Charting`Private`Tag$17653#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$17653#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8280748355955143`*^9, {3.828074954219873*^9, 3.828074996816227*^9}, 
   3.828075443221216*^9, {3.828076133782419*^9, 3.828076155756703*^9}, 
   3.8280788308028927`*^9, 3.828086220330195*^9, 3.829288386327449*^9, 
   3.829288440152604*^9, 3.829288512281698*^9, 3.829289825061927*^9, 
   3.8292903963679934`*^9, 3.829300571815585*^9, {3.829301267910563*^9, 
   3.829301293283963*^9}, 3.843901455674387*^9, 3.862045532642311*^9, 
   3.862045657670656*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"5a2573cf-43ba-43ec-afcf-87300dd61679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prEcoFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "5.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "9.9"}], ",", " ", 
     RowBox[{"\[CapitalKappa]", "\[Rule]", " ", "50"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "700"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc1", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "100"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sys", "/.", "func1"}], "/.", "prEcoFunc1"}], ")"}], " ", 
     "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc1", "/.", "prEcoFunc1"}], ",", " ", "initFunc1"}], 
     "]"}], ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.829289836115881*^9, 3.8292898786984653`*^9}, 
   3.829289928815617*^9, {3.829290349293017*^9, 3.829290355545183*^9}, {
   3.8292909878604403`*^9, 3.82929098902839*^9}, {3.829292492461904*^9, 
   3.829292530486247*^9}, 3.829296677600597*^9, {3.829296715496174*^9, 
   3.829296715850922*^9}, {3.829296890284697*^9, 3.829296890447839*^9}, {
   3.829296939284951*^9, 3.8292969884923773`*^9}, {3.829297074505315*^9, 
   3.829297118199197*^9}, {3.8292972096052923`*^9, 3.829297210519383*^9}, {
   3.829300591073004*^9, 3.829300594922571*^9}, 3.829301320155313*^9, {
   3.8293050158654213`*^9, 3.829305105294956*^9}, {3.829305168801544*^9, 
   3.8293051856636667`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"eaae251d-2492-4d42-9114-33cc4e92dfda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "27.334134835853376`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "22.834134835853447`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.011365120930362082`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.4325211729161278`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.039139075131558364`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.799999999999998`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "39.577777777777754`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "4.39753086419753`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "38.377777777777744`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.6000000000000371`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.047652097518120794`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.04765209751811908`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.003126809496237134`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "37.777777777777736`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "3.7163123621590928`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "8.216312362159085`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.06293335645933686`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.8618001911150249`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "1.1856202206549562`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "4.500000000000095`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "5.989999999999967`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "2.018541162669312`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "2.481458837330645`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.43941080409502625`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "1.8172997050669542`"}], ",", 
     RowBox[{"W", "\[Rule]", "1.2546840939286046`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.7999999999999985`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "1.799999999999997`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.19999999999999976`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.6000000000000013`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999999989`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.18206896551724117`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.18206896551724086`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.19999999999999934`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}, 3.843901455713359*^9, 3.86204553271996*^9, 
   3.862045659699687*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"bb066ad9-d28c-4f1b-a29b-1d00271d9dde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D51FbOx0t4jQB2Xq96N
0iZA3ANEQ2EHZj9lmKjdRcg3QH+rgoJhpxI/PfBd2rKqQUC4meq5SKVTP3Fy
Kd9BVEdA8hHfaAe1KUDkE/pGrXhNQL+mEXYQHuY+e3mVkRSaUUD4p3alNdu1
P6R4MLFAtVRAvX5pasm2GT/hZmxd7MFXQJb60qWMZ34/7nPYQyCaWkCwCqC8
YBc9QJoQx1vCr11A2y82fQCzBz8L5vJWdkhgQPI1bV0BIu8/U7tSRsuxYUCs
+rm2WHZzP2vYc07XOWNATnNvT21RYj/rBK1zp6dkQAgOjf3LMTZAOnmnsS40
ZkDAoqMlsyv5PhRl8rV1uWdAzLLb7priC0BWYFXXgCRpQAH1nK8ahBQ/Z6N5
EUOuakB8u+ZKjoSIP+D1tWjJHWxAy8Y6KbKsPUApkLPYBqxtQPK9NArwKyA/
/KEBDwQzb0BTp0VnN1wyQJzhM7HiT3BAr+iWVk2M3z4hlkfnnhVxQOY1spcj
wcQ/WlLnKz3OcUD7QGS+4a3cP1hKr1M7g3JApi5az8XBCj8+5tcHlUdzQC3W
Z1wHnyVA2ImMytD+c0CPQlEGclPlPlrRoRloxXRAunHneZjtuD+hVN9LX4h1
QGsIj8cV9D4/nN+ojDg+dkB3vd0Eq7cwP38O01ltA3dA5BkmvOesO0AWRYk1
hLt3QL2jel+/KOA+crdn9PpveECbUgzVjtiTP7bNpj/NM3lAnEC1hzgJwD+u
63GZgep5QAKiWmDRKBY/jq2df5GwekBPfW/WeVAzQCJ3VXSDaXtAYGnFZYHN
3D57fDVM1R58QP1SeqK4oYM/vCV2sILjfEAQ3Xb63Br3P7HWQiMSm31Afkw6
SfWhED+OK3Ai/WF+QEVWbbmI0jFAMLzFBEglf0DMgyVQ9HfpPoZUp/V0239A
a1E4tlVUtj9iyHS5flCAQFtMW3KCbiU/W+pb/7OsgECIpeKIq9BEPzcq1zYZ
B4FAy0ulNWO0HkAHvII0LGmBQMvgcjzFZuA+sVF0ObDEgUC7XBUDCQ6iP085
lgTiJ4JAfSF6VEXQUT/PPkzBQ4mCQB5eYjLsgGU/KUhIhRbkgkC3ymX+bEs1
QHejdA+XRoNAqq6YYv2q8z6fAuegiKKDQDXcS3gl79A/u7OJ+CcGhEAzHy+I
uYnxPrqCwEH3Z4RAT4EoS79WnD+TVT2SN8OEQHHpx4giszlAX3rqqCUmhUCO
nSksZjAlPwWj3caEgoVAh39pvVHOEUAWlsf5/9+FQDjWFInreeo+fSjBxg==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18458#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 29.67459352192854}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D51FbOx0t4jQB2Xq96N
0iZA3ANEQ2EHZj9lmKjdRcg3QH+rgoJhpxI/PfBd2rKqQUC4meq5SKVTP3Fy
Kd9BVEdA8hHfaAe1KUDkE/pGrXhNQL+mEXYQHuY+e3mVkRSaUUD4p3alNdu1
P6R4MLFAtVRAvX5pasm2GT/hZmxd7MFXQJb60qWMZ34/7nPYQyCaWkCwCqC8
YBc9QJoQx1vCr11A2y82fQCzBz8L5vJWdkhgQPI1bV0BIu8/U7tSRsuxYUCs
+rm2WHZzP2vYc07XOWNATnNvT21RYj/rBK1zp6dkQAgOjf3LMTZAOnmnsS40
ZkDAoqMlsyv5PhRl8rV1uWdAzLLb7priC0BWYFXXgCRpQAH1nK8ahBQ/Z6N5
EUOuakB8u+ZKjoSIP+D1tWjJHWxAy8Y6KbKsPUApkLPYBqxtQPK9NArwKyA/
/KEBDwQzb0BTp0VnN1wyQJzhM7HiT3BAr+iWVk2M3z4hlkfnnhVxQOY1spcj
wcQ/WlLnKz3OcUD7QGS+4a3cP1hKr1M7g3JApi5az8XBCj8+5tcHlUdzQC3W
Z1wHnyVA2ImMytD+c0CPQlEGclPlPlrRoRloxXRAunHneZjtuD+hVN9LX4h1
QGsIj8cV9D4/nN+ojDg+dkB3vd0Eq7cwP38O01ltA3dA5BkmvOesO0AWRYk1
hLt3QL2jel+/KOA+crdn9PpveECbUgzVjtiTP7bNpj/NM3lAnEC1hzgJwD+u
63GZgep5QAKiWmDRKBY/jq2df5GwekBPfW/WeVAzQCJ3VXSDaXtAYGnFZYHN
3D57fDVM1R58QP1SeqK4oYM/vCV2sILjfEAQ3Xb63Br3P7HWQiMSm31Afkw6
SfWhED+OK3Ai/WF+QEVWbbmI0jFAMLzFBEglf0DMgyVQ9HfpPoZUp/V0239A
a1E4tlVUtj9iyHS5flCAQFtMW3KCbiU/W+pb/7OsgECIpeKIq9BEPzcq1zYZ
B4FAy0ulNWO0HkAHvII0LGmBQMvgcjzFZuA+sVF0ObDEgUC7XBUDCQ6iP085
lgTiJ4JAfSF6VEXQUT/PPkzBQ4mCQB5eYjLsgGU/KUhIhRbkgkC3ymX+bEs1
QHejdA+XRoNAqq6YYv2q8z6fAuegiKKDQDXcS3gl79A/u7OJ+CcGhEAzHy+I
uYnxPrqCwEH3Z4RAT4EoS79WnD+TVT2SN8OEQHHpx4giszlAX3rqqCUmhUCO
nSksZjAlPwWj3caEgoVAh39pvVHOEUAWlsf5/9+FQDjWFInreeo+fSjBxg==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18458#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 29.67459352192854}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1297624, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1297624, 
                10513578595157329740933786140668364044251243048061019984864, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10513578595157329740933786140668364044251243048061019984864,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAGManmlIxJUB+Lu/+vNTSPx2Xq96N
0iZABkEj3D9/cT9lmKjdRcg3QGQ8Wx+5MjQ/PfBd2rKqQUCIjvoqOAM2P3Fy
Kd9BVEdAQovOwmb8uz/kE/pGrXhNQDD4FQyb/uY+e3mVkRSaUUCvsb1hoIGA
P6R4MLFAtVRA5xeSTIUDND/hZmxd7MFXQB5lJHEVOFU/7nPYQyCaWkCTwogm
++TAP5oQx1vCr11AQZUKU5HK/T4L5vJWdkhgQO3+KMNXuaU/U7tSRsuxYUAc
CtcbJs+RP2vYc07XOWNA5uAL/l0eQT/rBK1zp6dkQJR7xZ7v2b4/OnmnsS40
ZkCpClKrUifzPhRl8rV1uWdAAaJhLDQWtD9WYFXXgCRpQCrPpS57Hy8/Z6N5
EUOuakAwwgMb729eP+D1tWjJHWxAUaTJFsuJxD8pkLPYBqxtQH8oC70U+A4/
/KEBDwQzb0D8G00f4O69P5zhM7HiT3BAVagXZ+LW6z4hlkfnnhVxQFMwlfFn
U4o/nEPnOFWIcUB+Lu/+vNTSP8fRucQ=
                    "]], 
                    
                    LineBox[{{289.05531352294634`, 0.2942345132439427}, {
                    296.2019841048509, 0.000030991519792356735`}, {
                    308.4738844331331, 0.10697628549101085`}, {
                    319.92597441575845`, 0.00002093497862818502}, {
                    332.3379150696761, 0.008875885605200976}, {
                    344.52326571692, 0.0016817318680006125`}, {
                    355.888806018507, 0.00010148422535191236`}, {
                    368.21419699138636`, 0.1276427796181731}, {
                    379.7197776186089, 9.672770538348518*^-6}, {
                    390.9987682391576, 0.0026699171378029296`}, {
                    403.2376095309986, 0.23293584961271624`}, {
                    414.6566404771828, 0.0000447077933617823}, {
                    427.0355220946593, 0.1178387003064322}, {438.594593366479,
                     0.000010493781393113787`}, {449.92707463162486`, 
                    0.0015709711241400966`}, {454.995271170605, 
                    0.2942345132439427}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAvjDpuCdPfUB+Lu/+vNTSP7HWQiMS
m31AWhHKL7IDAz+OK3Ai/WF+QE4UVRcczL0/MLzFBEglf0COj+H7rtToPoZU
p/V0239AORFYnGLEgD9iyHS5flCAQLN22+lTkkE/W+pb/7OsgEDI+m1oq20q
Pzcq1zYZB4FAjtbhA7RzuT8HvII0LGmBQLA16jE0VuQ+sVF0ObDEgUDJqF/1
3SBxP085lgTiJ4JATgqzT5x6cD/PPkzBQ4mCQHifKmAPVEM/KUhIhRbkgkBE
oELG1aK+P3ejdA+XRoNAZkD84iRA8D6fAuegiKKDQO7FE06coZI/u7OJ+CcG
hEAMEflJ4sYEP7qCwEH3Z4RARfYlGF6TbD+TVT2SN8OEQBeqz8JaOMs/X3rq
qCUmhUAaRfwvdOwSPwWj3caEgoVAjbxJDJbctT8Wlsf5/9+FQMGdNAIzNv0+
v56dew==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18519#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 0.2942345132439427}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAGManmlIxJUB+Lu/+vNTSPx2Xq96N
0iZABkEj3D9/cT9lmKjdRcg3QGQ8Wx+5MjQ/PfBd2rKqQUCIjvoqOAM2P3Fy
Kd9BVEdAQovOwmb8uz/kE/pGrXhNQDD4FQyb/uY+e3mVkRSaUUCvsb1hoIGA
P6R4MLFAtVRA5xeSTIUDND/hZmxd7MFXQB5lJHEVOFU/7nPYQyCaWkCTwogm
++TAP5oQx1vCr11AQZUKU5HK/T4L5vJWdkhgQO3+KMNXuaU/U7tSRsuxYUAc
CtcbJs+RP2vYc07XOWNA5uAL/l0eQT/rBK1zp6dkQJR7xZ7v2b4/OnmnsS40
ZkCpClKrUifzPhRl8rV1uWdAAaJhLDQWtD9WYFXXgCRpQCrPpS57Hy8/Z6N5
EUOuakAwwgMb729eP+D1tWjJHWxAUaTJFsuJxD8pkLPYBqxtQH8oC70U+A4/
/KEBDwQzb0D8G00f4O69P5zhM7HiT3BAVagXZ+LW6z4hlkfnnhVxQFMwlfFn
U4o/nEPnOFWIcUB+Lu/+vNTSP8fRucQ=
                    "]], 
                    
                    LineBox[{{289.05531352294634`, 0.2942345132439427}, {
                    296.2019841048509, 0.000030991519792356735`}, {
                    308.4738844331331, 0.10697628549101085`}, {
                    319.92597441575845`, 0.00002093497862818502}, {
                    332.3379150696761, 0.008875885605200976}, {
                    344.52326571692, 0.0016817318680006125`}, {
                    355.888806018507, 0.00010148422535191236`}, {
                    368.21419699138636`, 0.1276427796181731}, {
                    379.7197776186089, 9.672770538348518*^-6}, {
                    390.9987682391576, 0.0026699171378029296`}, {
                    403.2376095309986, 0.23293584961271624`}, {
                    414.6566404771828, 0.0000447077933617823}, {
                    427.0355220946593, 0.1178387003064322}, {438.594593366479,
                     0.000010493781393113787`}, {449.92707463162486`, 
                    0.0015709711241400966`}, {454.995271170605, 
                    0.2942345132439427}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAvjDpuCdPfUB+Lu/+vNTSP7HWQiMS
m31AWhHKL7IDAz+OK3Ai/WF+QE4UVRcczL0/MLzFBEglf0COj+H7rtToPoZU
p/V0239AORFYnGLEgD9iyHS5flCAQLN22+lTkkE/W+pb/7OsgEDI+m1oq20q
Pzcq1zYZB4FAjtbhA7RzuT8HvII0LGmBQLA16jE0VuQ+sVF0ObDEgUDJqF/1
3SBxP085lgTiJ4JATgqzT5x6cD/PPkzBQ4mCQHifKmAPVEM/KUhIhRbkgkBE
oELG1aK+P3ejdA+XRoNAZkD84iRA8D6fAuegiKKDQO7FE06coZI/u7OJ+CcG
hEAMEflJ4sYEP7qCwEH3Z4RARfYlGF6TbD+TVT2SN8OEQBeqz8JaOMs/X3rq
qCUmhUAaRfwvdOwSPwWj3caEgoVAjbxJDJbctT8Wlsf5/9+FQMGdNAIzNv0+
v56dew==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18519#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 0.2942345132439427}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1297624, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1297624, 
                10513578595157329740933786140668364044269689792134729506160, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10513578595157329740933786140668364044269689792134729506160,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3Px2Xq96N
0iZASAHKbejS0j9lmKjdRcg3QCMmDfAeqwZAPfBd2rKqQUAceT/UvwjKP3Fy
Kd9BVEdAihuJF0ItrT/kE/pGrXhNQE7w9B2S1fE/e3mVkRSaUUBHk3rnP/ay
P6R4MLFAtVRA0MwU+oaDEEDhZmxd7MFXQPnKlgytFcI/7nPYQyCaWkDMIdHE
r1fiP5oQx1vCr11A2lTJHjeS4z8L5vJWdkhgQAR31o3vKKU/U7tSRsuxYUCg
e6v4KvwXQGvYc07XOWNATjFbueX8yD/rBK1zp6dkQGOmauZphcI/OnmnsS40
ZkD97T5Vxo/oPxRl8rV1uWdApTiwCQxOoj9WYFXXgCRpQGbBaTl7ABBAZ6N5
EUOuakB/VRQMT9a/P+D1tWjJHWxAAXT+OF18AEApkLPYBqxtQBsgqpunadw/
/KEBDwQzb0CIl5ypGs23P5zhM7HiT3BAE9ve2avPAEAhlkfnnhVxQKw+GP3V
E7A/WlLnKz3OcUBS6PeNNC4gQFhKr1M7g3JAqj1AxxzK4j8+5tcHlUdzQB+n
p5Z+Wqk/2ImMytD+c0ASw891bzEEQFrRoRloxXRAFW1MsU5Usj+hVN9LX4h1
QLA02ZRByBNAnN+ojDg+dkANrrO8FujWP38O01ltA3dAfFXDxt0V2D8WRYk1
hLt3QPRhrB3uW/Y/crdn9PpveECvCFofvgK8P7bNpj/NM3lAFAs7YfmIHUCu
63GZgep5QI7SGa5G7t8/jq2df5GwekAvdSAycU66PyJ3VXSDaXtAdC51gUVO
/D97fDVM1R58QLUp+5Pp48A/vCV2sILjfEBqVIAwGBciQLHWQiMSm31A7AKo
529+4T+OK3Ai/WF+QPxffgrgjLY/MLzFBEglf0BRZRkT6IPwP4ZUp/V0239A
pZCB90bcsj9iyHS5flCAQMsp00dloBFAW+pb/7OsgEB7gJagCKvRPzcq1zYZ
B4FA27lU2d0GpT8HvII0LGmBQOTzv069CPY/sVF0ObDEgUCnR4uOCem3P085
lgTiJ4JAGUWcC6xdFUDPPkzBQ4mCQESzHJqG7Mc/KUhIhRbkgkBXEpQ4J4XA
P3ejdA+XRoNAuXUXFMwY6z+fAuegiKKDQNBJGpZhbqw/u7OJ+CcGhEBj2DLM
O9oHQLqCwEH3Z4RAftqh8119uT+TVT2SN8OEQO8GbWljQhJAX3rqqCUmhUB2
+2kZqDHaPwWj3caEgoVAR1GahM+Loj8Wlsf5/9+FQABNthuf7AVAOBDEqA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18580#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 9.045106425919773}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3Px2Xq96N
0iZASAHKbejS0j9lmKjdRcg3QCMmDfAeqwZAPfBd2rKqQUAceT/UvwjKP3Fy
Kd9BVEdAihuJF0ItrT/kE/pGrXhNQE7w9B2S1fE/e3mVkRSaUUBHk3rnP/ay
P6R4MLFAtVRA0MwU+oaDEEDhZmxd7MFXQPnKlgytFcI/7nPYQyCaWkDMIdHE
r1fiP5oQx1vCr11A2lTJHjeS4z8L5vJWdkhgQAR31o3vKKU/U7tSRsuxYUCg
e6v4KvwXQGvYc07XOWNATjFbueX8yD/rBK1zp6dkQGOmauZphcI/OnmnsS40
ZkD97T5Vxo/oPxRl8rV1uWdApTiwCQxOoj9WYFXXgCRpQGbBaTl7ABBAZ6N5
EUOuakB/VRQMT9a/P+D1tWjJHWxAAXT+OF18AEApkLPYBqxtQBsgqpunadw/
/KEBDwQzb0CIl5ypGs23P5zhM7HiT3BAE9ve2avPAEAhlkfnnhVxQKw+GP3V
E7A/WlLnKz3OcUBS6PeNNC4gQFhKr1M7g3JAqj1AxxzK4j8+5tcHlUdzQB+n
p5Z+Wqk/2ImMytD+c0ASw891bzEEQFrRoRloxXRAFW1MsU5Usj+hVN9LX4h1
QLA02ZRByBNAnN+ojDg+dkANrrO8FujWP38O01ltA3dAfFXDxt0V2D8WRYk1
hLt3QPRhrB3uW/Y/crdn9PpveECvCFofvgK8P7bNpj/NM3lAFAs7YfmIHUCu
63GZgep5QI7SGa5G7t8/jq2df5GwekAvdSAycU66PyJ3VXSDaXtAdC51gUVO
/D97fDVM1R58QLUp+5Pp48A/vCV2sILjfEBqVIAwGBciQLHWQiMSm31A7AKo
529+4T+OK3Ai/WF+QPxffgrgjLY/MLzFBEglf0BRZRkT6IPwP4ZUp/V0239A
pZCB90bcsj9iyHS5flCAQMsp00dloBFAW+pb/7OsgEB7gJagCKvRPzcq1zYZ
B4FA27lU2d0GpT8HvII0LGmBQOTzv069CPY/sVF0ObDEgUCnR4uOCem3P085
lgTiJ4JAGUWcC6xdFUDPPkzBQ4mCQESzHJqG7Mc/KUhIhRbkgkBXEpQ4J4XA
P3ejdA+XRoNAuXUXFMwY6z+fAuegiKKDQNBJGpZhbqw/u7OJ+CcGhEBj2DLM
O9oHQLqCwEH3Z4RAftqh8119uT+TVT2SN8OEQO8GbWljQhJAX3rqqCUmhUB2
+2kZqDHaPwWj3caEgoVAR1GahM+Loj8Wlsf5/9+FQABNthuf7AVAOBDEqA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18580#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 9.045106425919773}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1297624, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1297624, 
                10513578595157329740933786140668364044288136536208439105616, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10513578595157329740933786140668364044288136536208439105616,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D68U5MJkTP7Px2Xq96N
0iZAIk2s7mLu6z9lmKjdRcg3QD4M+3ylXgdAPfBd2rKqQUCT6GZvmUrBP3Fy
Kd9BVEdAVz39vLzOiz/kE/pGrXhNQPZ3TSuOWOQ/e3mVkRSaUUADtRz0Wrql
P6R4MLFAtVRAnKMsZlXVAkDhZmxd7MFXQA0Nm4/3p7Q/7nPYQyCaWkB/wqNO
4rybP5oQx1vCr11A7bmvDmZT1j8L5vJWdkhgQFnXCwpqq5c/U7tSRsuxYUDz
In6XzzILQGvYc07XOWNAt//TMGaFvD/rBK1zp6dkQCtaAabwOY4/OnmnsS40
ZkDLsNLfuQTcPxRl8rV1uWdASIPBtpTCkT9WYFXXgCRpQOn/d/YQQAJAZ6N5
EUOuakCFbUHLgjCyP+D1tWjJHWxAe4QPOUmBtD8pkLPYBqxtQKvk9OH3NNA/
/KEBDwQzb0BiqTvpnyuMP5zhM7HiT3BAMY1kQB8t8z8hlkfnnhVxQERZjCtL
bKI/WlLnKz3OcUAP/BOokwMPQFhKr1M7g3JA1ag6bj5v1T8+5tcHlUdzQIT5
XJfosow/2ImMytD+c0AVU6SXpgj3P1rRoRloxXRAYLUpORUApT+hVN9LX4h1
QMTIaFxEjAZAnN+ojDg+dkCepm2ZQSLKP38O01ltA3dAXI7kVV+jlT8WRYk1
hLt3QEjn8mtMgek/crdn9PpveEDtgPiOCQOwP7bNpj/NM3lASnKRc2JLD0Cu
63GZgep5QH9MlwGONtI/jq2df5GwekBObuf8kniMPyJ3VXSDaXtAhxJKX+Ak
8D97fDVM1R58QAYPpJ26S7M/vCV2sILjfEAnQ6nWeTEMQLHWQiMSm31AW5tZ
wd300z+OK3Ai/WF+QLWuEv8DDIw/MLzFBEglf0A/+cmV4NbiP4ZUp/V0239A
kbq4hkGbpT9iyHS5flCAQGSU7WWoGQRAW+pb/7OsgEBgOpxk2yjEPzcq1zYZ
B4FAiIb4zaFXjj8HvII0LGmBQLnYqVBnIuk/sVF0ObDEgUA3BbHpeVurP085
lgTiJ4JACDB4gxtVCEDPPkzBQ4mCQLd72cwIT7s/KUhIhRbkgkCkFAXUZIKN
P3ejdA+XRoNA8ysQQw7p3j+fAuegiKKDQIEef/O1RaA/u7OJ+CcGhECL8BVF
EDX7P7qCwEH3Z4RAoL0LVJsnrT+TVT2SN8OEQAEZgJsK7so/X3rqqCUmhUB5
5+CSGeLNPwWj3caEgoVALQvThsvfkD8Wlsf5/9+FQFAFxB4WAvk/kI7D3g==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18641#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 3.911808874965833}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D68U5MJkTP7Px2Xq96N
0iZAIk2s7mLu6z9lmKjdRcg3QD4M+3ylXgdAPfBd2rKqQUCT6GZvmUrBP3Fy
Kd9BVEdAVz39vLzOiz/kE/pGrXhNQPZ3TSuOWOQ/e3mVkRSaUUADtRz0Wrql
P6R4MLFAtVRAnKMsZlXVAkDhZmxd7MFXQA0Nm4/3p7Q/7nPYQyCaWkB/wqNO
4rybP5oQx1vCr11A7bmvDmZT1j8L5vJWdkhgQFnXCwpqq5c/U7tSRsuxYUDz
In6XzzILQGvYc07XOWNAt//TMGaFvD/rBK1zp6dkQCtaAabwOY4/OnmnsS40
ZkDLsNLfuQTcPxRl8rV1uWdASIPBtpTCkT9WYFXXgCRpQOn/d/YQQAJAZ6N5
EUOuakCFbUHLgjCyP+D1tWjJHWxAe4QPOUmBtD8pkLPYBqxtQKvk9OH3NNA/
/KEBDwQzb0BiqTvpnyuMP5zhM7HiT3BAMY1kQB8t8z8hlkfnnhVxQERZjCtL
bKI/WlLnKz3OcUAP/BOokwMPQFhKr1M7g3JA1ag6bj5v1T8+5tcHlUdzQIT5
XJfosow/2ImMytD+c0AVU6SXpgj3P1rRoRloxXRAYLUpORUApT+hVN9LX4h1
QMTIaFxEjAZAnN+ojDg+dkCepm2ZQSLKP38O01ltA3dAXI7kVV+jlT8WRYk1
hLt3QEjn8mtMgek/crdn9PpveEDtgPiOCQOwP7bNpj/NM3lASnKRc2JLD0Cu
63GZgep5QH9MlwGONtI/jq2df5GwekBObuf8kniMPyJ3VXSDaXtAhxJKX+Ak
8D97fDVM1R58QAYPpJ26S7M/vCV2sILjfEAnQ6nWeTEMQLHWQiMSm31AW5tZ
wd300z+OK3Ai/WF+QLWuEv8DDIw/MLzFBEglf0A/+cmV4NbiP4ZUp/V0239A
kbq4hkGbpT9iyHS5flCAQGSU7WWoGQRAW+pb/7OsgEBgOpxk2yjEPzcq1zYZ
B4FAiIb4zaFXjj8HvII0LGmBQLnYqVBnIuk/sVF0ObDEgUA3BbHpeVurP085
lgTiJ4JACDB4gxtVCEDPPkzBQ4mCQLd72cwIT7s/KUhIhRbkgkCkFAXUZIKN
P3ejdA+XRoNA8ysQQw7p3j+fAuegiKKDQIEef/O1RaA/u7OJ+CcGhECL8BVF
EDX7P7qCwEH3Z4RAoL0LVJsnrT+TVT2SN8OEQAEZgJsK7so/X3rqqCUmhUB5
5+CSGeLNPwWj3caEgoVALQvThsvfkD8Wlsf5/9+FQFAFxB4WAvk/kI7D3g==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18641#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 3.911808874965833}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1297624, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1297624, 
                10513578595157329740933786140668364044306583280282148652992, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10513578595157329740933786140668364044306583280282148652992,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAARLq1xE6XJUBWTJraLeEaQB2Xq96N
0iZAJEz6biJ39j9lmKjdRcg3QJyLMZpAzRJAPfBd2rKqQUCZtSo2cdfLP3Fy
Kd9BVEdA6QycfrSWZD/kE/pGrXhNQMqqioy+Y/A/e3mVkRSaUUAtmwpdPNSw
P6R4MLFAtVRAagZzUsBGDkDhZmxd7MFXQKkM3UB1lMA/7nPYQyCaWkBfRHOs
xqFiP5oQx1vCr11AA2Iir/D74T8L5vJWdkhgQAGd+pOyxJk/U7tSRsuxYUD5
t+rAYmkUQGvYc07XOWNAWRzZBBrzxj/rBK1zp6dkQLr7ZYzhplo/OnmnsS40
ZkDznAVA75HmPxRl8rV1uWdA8mCu/Mmogz9WYFXXgCRpQBFoGon1Wg1AZ6N5
EUOuakDKkInPOyO9P+D1tWjJHWxAKnK9oTufej8pkLPYBqxtQPbdKHD5G9o/
/KEBDwQzb0D0RlFkP9RdP5zhM7HiT3BAo+QclQjl/j8hlkfnnhVxQGZ06flr
las/WlLnKz3OcUDlXePnV3oKQFhKr1M7g3JAnTZGvyNE4T8+5tcHlUdzQEdq
1R4e52g/2ImMytD+c0ASA9f36Y0CQFrRoRloxXRA/VD87aAtsD+hVN9LX4h1
QCNeCgT68hFAnN+ojDg+dkAFRPRGngzVP38O01ltA3dAgjclYKugXj8WRYk1
hLt3QKX1zW+si/Q/crdn9PpveEAIStIpj4+5P7bNpj/NM3lACNFjaq09EUCu
63GZgep5QAc9EHCEV90/jq2df5GwekBYIvCpCLhcPyJ3VXSDaXtAApCbK3cC
+j97fDVM1R58QHtitb3K8b4/vCV2sILjfECPxj8aoKgAQLHWQiMSm31AfEeV
GlET4D+OK3Ai/WF+QNL5nvydjV4/MLzFBEglf0AMEGf2HVruP4ZUp/V0239A
JfykzZe4sD9iyHS5flCAQCr4V956IBBAW+pb/7OsgEAmvvcC+TvQPzcq1zYZ
B4FAEVRzGTjacT8HvII0LGmBQJYQqB47P/Q/sVF0ObDEgUCqqVL8M621P085
lgTiJ4JAq9TmEtYgE0DPPkzBQ4mCQD+90ZxO+MU/KUhIhRbkgkDRXMEj2hZb
P3ejdA+XRoNAKL+9IVLm6D+fAuegiKKDQOejpZp6T6c/u7OJ+CcGhEB11nGn
EuoFQLqCwEH3Z4RAAKRaInwutz+TVT2SN8OEQPiemv10tpM/X3rqqCUmhUBP
3iiWBBLYPwWj3caEgoVABkFUP9Igfz8Wlsf5/9+FQON6FK/qJARAEz3EIQ==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18702#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 6.71990148131143}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAARLq1xE6XJUBWTJraLeEaQB2Xq96N
0iZAJEz6biJ39j9lmKjdRcg3QJyLMZpAzRJAPfBd2rKqQUCZtSo2cdfLP3Fy
Kd9BVEdA6QycfrSWZD/kE/pGrXhNQMqqioy+Y/A/e3mVkRSaUUAtmwpdPNSw
P6R4MLFAtVRAagZzUsBGDkDhZmxd7MFXQKkM3UB1lMA/7nPYQyCaWkBfRHOs
xqFiP5oQx1vCr11AA2Iir/D74T8L5vJWdkhgQAGd+pOyxJk/U7tSRsuxYUD5
t+rAYmkUQGvYc07XOWNAWRzZBBrzxj/rBK1zp6dkQLr7ZYzhplo/OnmnsS40
ZkDznAVA75HmPxRl8rV1uWdA8mCu/Mmogz9WYFXXgCRpQBFoGon1Wg1AZ6N5
EUOuakDKkInPOyO9P+D1tWjJHWxAKnK9oTufej8pkLPYBqxtQPbdKHD5G9o/
/KEBDwQzb0D0RlFkP9RdP5zhM7HiT3BAo+QclQjl/j8hlkfnnhVxQGZ06flr
las/WlLnKz3OcUDlXePnV3oKQFhKr1M7g3JAnTZGvyNE4T8+5tcHlUdzQEdq
1R4e52g/2ImMytD+c0ASA9f36Y0CQFrRoRloxXRA/VD87aAtsD+hVN9LX4h1
QCNeCgT68hFAnN+ojDg+dkAFRPRGngzVP38O01ltA3dAgjclYKugXj8WRYk1
hLt3QKX1zW+si/Q/crdn9PpveEAIStIpj4+5P7bNpj/NM3lACNFjaq09EUCu
63GZgep5QAc9EHCEV90/jq2df5GwekBYIvCpCLhcPyJ3VXSDaXtAApCbK3cC
+j97fDVM1R58QHtitb3K8b4/vCV2sILjfECPxj8aoKgAQLHWQiMSm31AfEeV
GlET4D+OK3Ai/WF+QNL5nvydjV4/MLzFBEglf0AMEGf2HVruP4ZUp/V0239A
JfykzZe4sD9iyHS5flCAQCr4V956IBBAW+pb/7OsgEAmvvcC+TvQPzcq1zYZ
B4FAEVRzGTjacT8HvII0LGmBQJYQqB47P/Q/sVF0ObDEgUCqqVL8M621P085
lgTiJ4JAq9TmEtYgE0DPPkzBQ4mCQD+90ZxO+MU/KUhIhRbkgkDRXMEj2hZb
P3ejdA+XRoNAKL+9IVLm6D+fAuegiKKDQOejpZp6T6c/u7OJ+CcGhEB11nGn
EuoFQLqCwEH3Z4RAAKRaInwutz+TVT2SN8OEQPiemv10tpM/X3rqqCUmhUBP
3iiWBBLYPwWj3caEgoVABkFUP9Igfz8Wlsf5/9+FQON6FK/qJARAEz3EIQ==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$18702#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 6.71990148131143}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1297624, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1297624, 
                10513578595157329740933786140668364044325030024355858160448, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10513578595157329740933786140668364044325030024355858160448,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}, 3.843901455713359*^9, 3.86204553271996*^9, 
   3.86204565991051*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"721a1409-493c-4879-b7a1-c1b26c3fd744"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", " ", 
        RowBox[{"maxt", "+", "10"}]}], "}"}], ",", " ", "All"}], "}"}]}], ",",
    " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829289919956046*^9, 3.829289920125574*^9}, {
   3.829292552469584*^9, 3.8292926098919*^9}, {3.829292706618535*^9, 
   3.82929275636156*^9}, 3.8292967690075207`*^9, {3.82929683538181*^9, 
   3.829296912209985*^9}, {3.862045664719337*^9, 3.862045722202093*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"46548b4d-d1a5-4147-84c5-f12430ccc883"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
kT6s7/MhH80ddLB8q138sa8HSyhd/m+Kkw4VP/TLbuoPYNY5OWlZ3HTYPfHg
lpLoCLbtkVPFxZ102K+R6n3k0zRWGcnfJc1HBx32fdozt1ewEMKnhV5+OpwO
C7Yw+MeKOPx8TsQK0uG/Lucr3vl86KGbcKGJMB3e5glKSdtKIxX7Cv4VETos
hm/lrWBooHIrj4AcUToElwyHv5cEhN/wv5wXp0OxROCnLUy2aGjf2318EnRQ
v+0dKsnnjAL3OsXVStJh/nRu+0dzX7RVdNt8iDQdgiQ4JmhJZJTAlXdMZQ8d
zsQrVEUxxSIF5tMF/bJ0mHlb65MT9BSVLmzsvLsX1/NaN0/YYgE68ivd11SB
DgWml5fOhFejvm7r1r+KdLh/5O1wNtMX5NOypP5SGX9fyyRAMfQnYqp5csdZ
lQ59T3mrbzf8QXFFpjP86nTYuKU686p2C8hmT1t/0qCDrffSC2t+fnjzOCE3
bB8ddHc96T9kLQ2msRi3mjb+fPNtGESqQCd99OqgDq7/qhMSa9QGr5Dopvj9
dHgaUsfN8Z8BrF3WVTXXp4Pr1QFrsz5jiHbqi/xnQIfKpBde31SNQdLuxmSu
ER1a74jl6LrpQr6p2hFXDNe/VE80amovHDT4liMIdBhmefp0bnQbdKgSd3w+
QAfT2vIl/t01yF167+Xrh+hAUWj3UA4IQisCzfXqh+mw5ur1iQ33/3/bg5V+
mtLhweW7MSJjIkh0bXdEgjkdYu2NTlt928BezNT+trCkw2/esaParpMY9vOq
xboVHXYtxz/kWBnEWr4JZuUfxXkZvnJl9WIv5lz/frubDc7LVsZEHaMXm39/
0VP4GB2OTXBxPgkcxOgFXHX1x+l43sveqiKOYULP38gTT9DhwBS3qRt1DstM
dLypeQrnv0mwZ+TQGqYfuXVs+DQdvjsKOGwe3o7qSS9NE8/QQebS4NW0XkF0
LuBkutVZOrwI4JEV95ZF0+7rWzfP0WGJyeNPYLIWIjs8v/jqPB0UroRL2mGH
EJ/10dqLznTYst5wgKxoh1IPLMrucqXDS62XAqNWF5C2zmN64wVcj0oX8ZyE
APRR4fAw6SId+GbKah5s0pC9+NQhLQ/8vPtCiJykePSb517qqCcdxtmum+7m
eY7CthhvSfKig/gBmsOj7DeIc3nY9egVOjxunTHMtfqInoxHVjN50+FH9ftG
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
Jmfe
          "]]}, Annotation[#, "Charting`Private`Tag$20785#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
byQWvvYUNTij7w2bzBMwkcbCDd1FPIMXDNieZlvmzGIhm8VkKvkHwy4BMV05
Hgvf/zhkXS5yDYxdKguaA1jYNZFaeqXyNlg/oqtdDWLhcIrNnl1JmeAkq55h
eZGFfn9KnRS+3gc3Uud60cssfPrGJuiEdAn4vI67VRfB73+/k4TdxGNgqB6Q
O3eNhVXiAcRB7hMIDF4YtTuWhQZGNcd36lVC2Lcy8embLMwTFIz//KQKog0p
IQ8TWfjBoFui+kEt3I5TXUBNYWGpifh6z7nXkDnWzt2WzkJOslTdj+w2KDwY
M/4zk4XfBhuFFon3Q3mOJTkzh79e3PBk0vwN1IsKDroXsHCJcPu3NTZh0OT+
yEOxiIUNskrhdz/awOcqv+9fS1h4IUfzZcwSFehau9ElvoyF/qc6ZMuTxGCI
9eWDQyULP1uxrt6Y+ktMvo+ykall4WWyQWxD+AAhpGn+urGer/fq6sV/ZrsI
yStzpuEvWTihfLGKzegiVvYXVZs3sJBbfIgZx+wllEzOGC5sZmHv9bpb6rwh
Qj1FsaS6ha//D93rBur+Err/Pmqe/cTCybzOgzfvCwA6R+Ts+srC9kMDN7lz
i8Gi2Fhl4hsLTzEHT5zKlwP7ZTMpD7pYePWocS335gZw9b2/ltTHwkv/RRXE
GGmC1wvPG+qDLNzetXvdmiYCKBsVpPt/8/lVMN0t89gSeOfeh6ePsnD9xrHf
b6WcIeRr2CK3CRZKdm3Skin0gEj9PecVZli4OcBBWTmYBvExE7Of51i4eLvA
0gt+5yFtJJd5Q5CNNme3fa+zjYTjdla8vSJsXFuAW9tf3YK1xQOBv8TY+OHp
/hLy6Qxolbt0IW4JGwN+xMePhxdADEslzGgZG533BKYmfS0G289PI4Zk2bht
jdzNWKnHIGnofv3mSjZ2Je427e8oh5eJgnHGa9k4c5v2QO0h31/NJyf8XsdG
idVJTaNmVcB/YqTEb2Cj0ULrh4usa2Cu5mu6iQobB8tadmS6PofHyrys4S1s
dNC493juSgswQlbn39Jg4/uz6v/cvnaDVt+jB6Za/Pyez0cUTL/D0D7HRyM7
2Pz7RZRas/4uZGX/LU/QZ+NQ40XLODFv8FwSXW22m42XLmdpcXT0Qdlfq/4P
stFsmD0adkkOvjU1vUw0ZuOG06kxJbICkKDl32huzsdDlaxofHeYcIpe8n7U
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
EpDVX/nn9HUe1gZTzohErICb9x0UmmJ5uEJ9W1SP6wZQ2BJjsSOeX49U67Ds
9u1wJ/UdIz6Rh1NG/uovXAxAdY30nflkHqoszT44bWUGudcPNrqn8ZCr8sJv
82870JK4OvPiLg8rF+7tyF9xAh4Gv1HZls3DCR1p08cHfMHgn7h9dB4PK8RW
RTKk2FBFtwicus/DXlqB3rp9F8B4KDTHtZiHn6ToYTbNUfDC41lr7SM+vrSX
h6+JJYJ1x8KFm8t52Hh07eLiixnwztFYM6KShw/efUlK1y4Ap6bzR0dr+Pw8
3H/o/LZi+GpefcmpnofJ3it23rMsBbfq+eInL3h4jXpZ7qlWOfTqE51Kb3j4
6PHct43yFeBTyJMMbeJh/cu5qCeZlTC8pWzXr3c8pL7+T29uYTXQ70x52H7k
4d3Ea9s3i9fB9Bq96yWf+fx0/VdZm/AazkYzKte283CRhtv6YYPPILSk+Oe5
7zw0SZD+0tzTC6EXRlf0dvEwrNl54iq7DZbMaRpb/Y/iMo+n6mHCOEJabJUl
KZEtSURCOTNkyZJEWbImCZUtSXH3e1NCUSQqFclSRAjZpfxUUqmkErLvW0jo
Pe+f5/Ph3Jnn+c4zc/rC0WXiQg7LKg3iQgIC8gbJ+p2TIzZ3+YLEaM4t8dFw
NLvpKpTrScCt48P1YRPhGDxnGsxylQbZ9i2/23+H4xWjsyWTq3kh3cFX1uRP
OL6Rc7I4PjxJqLzP2Jc9H44CeyV/7P/TT+Sa9Z4T4aJgZVmJpaJIN6FVo5B+
ZgkFn/GdOKF6qIso1vP80MpPwQitDpXNl3oI/af3F2E5Bf9uUza793WQqNnS
ofJAkILXyo27jpdNEKZpMvbLRSl4fLvj9u6hOeKNtCvLfw0F5Qz8DoU78sKB
+Fu5zRIU/PrV/kT9b2H4LPjtm+46CvYmDv47/nEtOF1YK5CygYLrKKaf6/cr
QPuivRavHAVtmSrLQls1wPNsgruPAgX1RP4I+OkR0D/aHNWoTMG810e/9Lww
Az/v1SWaqhT0kWfUKAjbwUT7ge7EbRQsG47cMzfgAWcdr4oubqfg0r2W7zx2
BsD8+0b9o9oU5N/p6mNSGAYMc0Hfel3y71UGSxbDIoC/1iJhqz4F/TzjOSPx
1+DyrsiaOKSgdP7LGMhJAZGC+pGZPRSsTRu5cWFvBsSrLl3nYkpBMa/Jtf9U
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
trLQdOfL8Xff38DhuiuPX25jYSFPz+sB1++wxrfc9b4GCzO/Cfpd4O6Hd0KD
wlRNsp6y760nNr+DyKeS1Y47WCj3dMT1v6QoMHYwCdqxk4VM3VKqw25b4Fo4
vUlUl+xv3bdf2y8pw/N795qH9FjYV718yqtrOYSYvOPU72ZhyT3rmdjyaUJj
cF47jWAh7U1f+1WpQWLoikofDVn4L8X+YLhSN/FQy+GmkyELKRsN/Fw8ugiP
rxzznUYsbNx/dr+UbC+xnvr07yoTFtoE/njyuGaYaJHreDRiSvo/zaduvuo3
EfdKyLXBjKyXkdsQuIwL9p3cLZxuwULzAzJoWrMMBER9qxj7WGiydSbqC1sM
agpvBLrsZ+E++aPrPahyQDlcJ6d7gIWlZvl/mdrqoPNv4uMaWxbeDI+rxKbd
MJm6kTN2kIU/UzYM3f9oBjl7rbTf2LFwdV382p499uAzHNb70IGFrp2ax6P/
eYJ8XGYi6zAL+Z2yLiuNBMFP7S9mbs4sPJEaPRz1hw5J33j/6rmy0LZ2xm9B
KAYO0bc/Endn4dL0YPaP/psgouDuMnGEhV8SP24X0XkAr/+LFmo8Svp5+dXh
uvZcuOD3vDLzGDkPWeqmm48WAq7uD+AcZ+H9BYWI+y9K4O8zcbkjPqTe6f/S
DjwrgyJno4+7T7Bw29d7zofvVEAAdxBb8hQL6wpfx13Wq4It6Sk7pvxYKHDj
30oPrRroMX/b8y6AhfekxKMi1evh3ujcjewgFr46yjVqGvYJnK8rm0UEkzz/
d9trYrobJHTt5jxCyHr8vqQ5PG+HDz9Y2UQoyUvxQ+EPPWkQzcxzljpPzpsH
F65y8IK9Sj8Fp8NYuDW0NoGdrg1L3qysfE9h4YqN5rLr4tZARYBewGMayfPo
cMDi5AJxTsxb9hKDhReXLRVvLh4ltErjP3iySH9qZlpVYnuIEddaFnJYOHby
WdVPcj9mLhnXko5g4en6H9f4CrsJz4wNPTMXST7sKhdW1QwQG/ZZ3vgYyUJr
l29LquwmiK/j5/bmRrHwm7ZNKEf/L3E94eGfyBiSB5d6pSXhfLB/16csr6tk
PQU/d/kXicLydh5nwzgWJq7xIcqVN0AdW11ww3UWekVduxlqpAL0za4Vf+LJ
fhTvaWnq74RdjZf9P91g4bmdPX4DdUYwHVSyMe8mCwd0Au6cyrWBPIne91HJ
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$20785#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4HKgoLPXhTxy8RioNVHU3p+hIP+Pcw3PjX/BA4ZZEN2JgsaBfK8cavphWFts
As9R8F+tycpzsV4wHu+xWHWm4MKfR+uGNnZBdHRSeuEFCr4hfdQS2tQOrLY+
wjddiPent1UH/WsBB4F9XntcKXh/u4HVgn4TFFXxtE1fpuAx2WAxw7RakLj1
RSP9KgVLbsbSbshUww31t8/crlGwWaHW45NDObT1X57b5kHBh1KCaq5Pi2DX
iz3WvzwpaDfIIlfIyIXHR1nzYr0pGOhmItnplAmj7PXizj4U/KLBplfBkQam
BaE35XwpOGom9Vc/ORHirzl1dt8k8NcOsuYJiAVORVXdV7cpuMZbUUkkOQqc
O+denvKjIBtD1NX2ZCRUBJUvi5Ep+NrD1a7NMApkjB7at1EomBgmka9xPR6s
VkzZ7tMoqE2fda58lgkPs7kT9BkUHLF2S0ncWgWVV2vMp5gUbInfrHO56yss
KvrPxPoT/pep7aTyTMOObqMXp+8TegvIN4zP4MGLoewo+ICCDk5ec79WpPG1
eeVA1UMKMnsdO+XlFLGNk/bgZiAFE268LfOfl0OeUtyp9piC4UyLK57PN+H+
G/++9AUTeaHbKCQUIoa+6iV3wp4S/OYVkV0ihDF16I784WcU3L3p/RHDYn4c
jNCtYQkj8iw5ik/pDDdK2ixezQ6nYHryyA+BSXa0FMwXcX1BQe+XU+xrTFgx
oOZGvvQrCs6VDDT+/++v5ZQ9Z1r/I/z5hPuFw6N5WNCaZb8XQcG7lrY7otyn
QW0yM1HvLQV/fzI5lcMzAecTPC0mIykowB8WyOL3G1457ZyLiSb8YfftF+f3
AWjZOPHSNpaCZXcNSqt5+oC7JWWfQDwF7Xf9jjKp+w4YcHWoMoGCTfQU48zQ
DvDZr/rIN4mCjos5ui/N2uDd4u9d299RUKHIqvRyWTP0ZyR09KYQ+zdzPTka
9xEkLruQQtMoGLqrdK9j63s4tllJwSyD4ItP+Q+tvQLufRuo/ZdJ6O/ZqsZD
yVIoeRp9LSubgv36kvv+pefDrNk50Uu5FJy9d/fea/1sUGWXL5TKp6DSuEDV
r7B0OFvU49hSQEHz2t52TeN38Nw7gtO/iFj/pmNBTFg8NKs6JOuWEP6MFeuv
2hADnAOSxydKKRhQf4I/oS8S9P/7Nh9dTvBb/jerlpjHvE+++O9UJQUl43j5
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
riK1rA==
          "]]}, Annotation[#, "Charting`Private`Tag$20785#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
p7nKNhf8HB6yjnWqhtng53KyBMq0UPC+9JHoSowNFkuqfjTbCIG76gXi5xJt
kJtssj6HNgIG71gFbKbb4GazDT1FXzxIJLJ0N+XYoHLyhRoZ3wJIbOg8GvHO
BkN6Z3POFbbC7rSvrWm5DZrUenBThEyAOa3ou7O1NmjtvTzluLoPdcLz/603
2eDaNJUCeQ8NnjJJk23osMGKuqDDf/tp0N9P73lYz8E8xzy3mIgocDybcsho
0AaxLeN21lsSlO2q4+L5ZYOWhCv+9CyEmLV+5+bapA0qcMmn0kjsAtkxvqoP
CzY40JJ0Pk1zExylf5GE/LFB0hbqk5vSf6DDIUbDYNsGzdt+tzJ/WYZz4UoJ
nIS26EFLoN4rPwehpf8mlslsMZaOrVKodBIWh0ou1tDaYrmWlpPK4m9QJ3Ty
DjpsixrLDgTayT+h8MyJFl12Wzz9V0GTzHMQGNT76E5z2uJRElYbQ+F+cL8T
ZLzIa4u5pE1uWoVfoD9B6nWlgC0KK/akzER2gkjD2nLgZVuUb8+4RdTaCrHT
2RLaV22xb4xkf7m7ETZpzAJPyNmiZXHVKvPhOjAUZvwyp2KLXro3+LTfVkKV
8Ue299q26PLgTC2JeBkc8/Oxe2xki99c5/T8QorAJ1uwUMPSFmVVpjKJyd7A
yOep7WMOtpijFOTcS5EDsJ4oN3PdFh+VvWj1Xc2ANDatiNI7tphe0GJaFZ8G
hNKkw773bVFboPCZT2MiWDtUc6v526KUesKbDNs4aA67devoM1uMgamEp0vR
wF3KXT353Ba5GVJ5Sq5GwpOhoUPFsbY4b1/p6RIUDjMEEZoPk23RLZxr9Sh/
KCidkUtUzrRFQfrr0dfMQiFPbXuSJd8WFTwPL/KJRALVnXcC40W2KC4+QcRK
nwyuCbb331XYYkZTpIi6eDF01R9tvV9ni8EVm4F/nnbBxekuesVWW6xdXXD+
fHMeImgCTJg/26J55H/UsgnEuHZJPGu072BtlzU+f4QOdYyXVgqGbLHANsX0
zwdqLPXNkPT6bYtJgQEKHMtkeDjb8IncjC2qlkVTtLQRo+dnmh6GZVscuUhP
P2tAgIN/Go+N/LVFK5/VsYH9bRBnu2eft2uLN4SIUxjVNiABzxd5EtuhFT+v
VLTLGuzaj+1co7TDWZf3dnPXl8AsLE6ejsEOTzuNdilxzMKHEtXI4SN2eFZD
93tU4wScGiL8kX3CDu8npJ2s4P4NfgTvee5w2+Gc9xmnVzo/YIzH1Q357TCN
9rxThd03kFU7XUN9yQ4FbwqcvqHTB69vD5B+F7dDjU3at2yL3UCaEKL1Gu0w
M5yVn8aiAxzrMclNwQ4v2imVxLS1QPvU3ykpdTsk2RAny/7XAM7dM6dS9OzQ
ZVKReRlrgbpi2PifqR0asTN1m7a9hzdpXTHmtnZo87cwV8mgBNSfNXR9cLFD
D8Vhm2qvd7DsVkp+8rYdmlu+NZXLyIUI4+xrj7wP6me7RVU4nwmCMgk+v/zs
8FuQCB3/qXToPRdWDs/s0D+mXjlAIAluM/uupEYc6KvNFkgd4oB5z52PIN4O
S+o9q6PfRkPZpJ2tZaodii6Eeon8jAD9LsOU+iw71JmkfHa7OQw2y1UGT721
Q5FrqTLDP0IgPvUqo1+ZHQYVnywwGQwD8SBB1d81dvj+gcczGYsXMHSL64l0
sx0qZFpe8PwvG+4bHalP77RDYRGRU89lD/jjGuU2YZ8dUnJoa95xmYBavr1L
1kN2eIKMlJHlEiGaM61cb/xth1ULV4DpKy3u74xlc8zaIatYQdleDjWmTXz9
7b9ih923T5BQeJGh9Oe2Y+ObB+/dxO3cWYhxrKxaT2bfDv8sMq70k+7D45S3
zzNI7ZEjlOjqjuh/wPU0vZ2Y1h4bWq0z6x6sQ8vNGGLbw/bY4zR1lTR7BewN
n0o1s9tjV/FcQAf9PJBJe9/l4rJHnrqTnxr/TUIO7/WigHP2+PJD+9T0r9+g
xGg5PyFkj9MWO76GND9hblubW07CHpdNS+UPJ32DkHE5i9fS9ug56jE2fLEP
+D+JvTykZI9TBPsU4Re74XPpuT47TXt0zrr7VMywHW4kn6BpNbDHuuCaCt6X
zUD3hEGBx8IeOy9J6CzX1kPhDRK/J/b2+DB6mXvycjVoGWxWTV23R4Luzcfy
p8thDebW5T3sMTMAT23sF0H02Z8Xsn3s8caZWyXn1d6AMMMXR7IAeyxmKlU5
9jsbvv7X+MohxB7HBnkJZ3wzwHOs7MfHKHs8N9GUgDupcKQzh+Vsgj2u63mW
VtskQEVJomZQuj3WLuaK/vz3AoySwoNncuwxreKJ9kBCFGwH+DUrFtqj2dFn
oqNMEZB4/c6/nPf2KJn4Vo6pLxSu6DuIUdTZIxmfS0v1Ugj8vGrs7tRqjy6f
l9p2hCLg4Rm1gvbP9hgRssBF35MAJ+lxiverPfq9ZuEIfV0E9VtCp4J/2CPN
9qmBOrsvYPWb23hu3B4bOy7SuMIKEHWwxijP26MlS+6OxzkyzCim6spbs8fm
5/0cl7XoUDbxHxnVtj1q//kx2veJEicfr0q7EDog7Y9yW/fBQ/jEdeJ+J7kD
sk9nZws0EuIZvW9l5+gd8JQqY4L7z11ok+pYDjnigGoPNQ6LeGyCE08t78IJ
BzQ0tfMVo/8DlHSFNqo8DihJ8fjrys4SvDpTI3PhvAMmDvi1MwfNgji2cdIL
O2Dsp/uNPykm4YthP/GahAMGbroXMuj/Bke30fE+aQd0SD1jyhX1AwiCF5rK
FB3wcXrMEGXIN4h/tZURp+GA/2WrFNy17wOBapIAL30H/CRtbnHyv2742Edv
a2LmgHnU1yq2DDvAfIFdVsrWAQ9YpMC8vAU2SHi5Tro4oHxdyuW6iQYIPy5C
QujugDbvcgk6HtYCj6j0xNg9B9S58uWrgGYFfFBXa25+5IAnQvfldqhKQc/B
KDPriQP+8Hc5qvWsEBYe2QUEhTngvSqDbke1fAiId7N1jnHAbNaXASGRWcBe
9EBWNdEBpQYzDvkVv4KS9mdcF145oPlxm0Qv1lRQHntBQp/rgEuLJVe5iRNg
bDt9YvWdAzpS79Qy/n0B3kxvm/vKHZC53eLsydYoYOSvyiyrdcA5BSPXSMMI
yJNtDYhrdsDzdgtLFzXCQNqs19ar0wEndjXoFL6GwKDHiKxJrwN+9o2hlfgv
DG6Fz3FJfXfAyhvEVFXDMUCevUFyctQBD59Vznlx/TWk1RFNEkw7YHldTqfA
Vh2IDdK2jC064C1NkYzbLD+he4XtdfO6A/qRHzrnkrMF9hRnArN2HLBDWfI+
GlLhv9OX7IKIHFFTJtLEpoEWYyVAzpnCEdlC6gyu0lHieR0VblV6R7wT4jpY
HHAIm10MDl044oha1wNZfWoI0TTAZpLuhCM2fabI0pTcg/Wkmy2rXI544mQn
tS/LFoSW3X/dd84RjTmz5wy//wGurqeBZUIH+WSP9XCarED1VLRdnLgjqtSd
vxSzPgfa+6lyXuiItImDRGKiUzB3pIDbRMERn0R4+keojYG/QMUhKXVHVBMm
NTnENwJsSs2TJ/Qc8Qup3XnO4UEotvrSQmDqiOUxlSuO9/tByfvH6zFrR6yK
s2FrHP0Co1Ezgc1Ojmg/OnTjUE8n3Mtft8u65YgXYh11RBZagb6ZQD7oriMu
qh4rJJpohOwf1DzODw/24/1aVpezDq7+ZSVVDXTEp0MO1AF5lTBAwz11PtQR
X34qVKDnLYMbPIKtdNGOKGRPZNZ1uwhIQSpr9aUjJrvxvcvqKoAUA6UnfWkH
/at2/6T0ORtEbunZl2U74pbSAxGN0gz4FGQlH/fWEc9Kkk+7m6WBbfp1Hq8y
R+wst1gK1kmE3UovUpMaRwz74DFIRhAHMb2BU1eaHFH2awPHydho4J+PbD3R
4Yh8v2y09dYjoIk4JYugxxHdiapVd1nDwZg978nYN0cMvkt8q+1fCKwJl9s3
jzjiu+n2uHufQ6GDjkBUYsoRbXxdvKiJoyF9TulQ4aIjnuu/NUBqmgH3WqL7
uf864iUqU83tXx9AM+1nRuKuIzJRPt1nV/gFZ+6fuc1A4oQMNwIfPHi6C//0
3K49pXLCoWYJupY8GhwQqGbYY3RC65LSld9eNPiG6tBvdzYndPf3+PJPgBwD
ptQLZ0474UvLrSKzdGI0bYh/ZM7rhOpTzpa+X/fhUtKYer+AE6YwvPqk0P0f
UN7lP6Es5oREZT1SXQvrMKbluVgHThjzm7doc2MFKvnra0QUnLCEL2ea0P+A
D8koQ/PVnbBg165QVG0KHMd0TE7rO+EDYiu5AuYxwNpkvjgzJ6RWCY9U1voJ
R+Kn/6O2c0JdQrrxoeZvsOQu2O7v6oQEVm++K8j1Qava/fit205oqO56whq6
Iflsi8ON+054Kz7Ts0ivHe4Q012e8HdC4w4rk/TgZlAdMSQ1DnZCwcYCN+Kc
euCsfPW1O9IJO1xojSeJq2E7eiFT7qUT1jHmtn2cLYPeG6J3qtOccP61NYlg
WxHkKvnKCOYc9CM5MPnG7wLw5epgzH53EC+36x+BTzYY7jONsb93QiFl+SQ5
rgy4OGRWFPXBCS+RjRwW00sF0rJsX/JWJ3SLOZuh3fsSRp6vajz87IQUugUu
Zf4voNxZ8uR6vxOK3Tk2xSscBWFygUtOPw7yt/HfzHj2HGxPddf+GndCeYXz
BqreB/64wxqmN++EnawGxsUHfM80YG3aueaECxai58xEI2GusOCc9LYT0nDc
m/0tlwqNIRvb5YTOmMiPgxTF5fDSHjv4KZxROH1M9rTmANySDn75it4Z56u/
6fLm/AVF9n5HVlZn/Cc5Sks9R4knN4+LhZ90xtyykdmyaFrc6HEgIznjjCqG
H6sqHSmwq6BowOuCM35kvdP0K50EXz/deb0s4oyP3nD+JaomQB9rOQ87KWe0
kYr3pjm9A7pSz2WHZZ3x6+N3pXn//gI/63cmLVVntAdDBYKvq0D8h2O8VccZ
U3qq1snmFmDos2vxFRNnFAzypzvqNg3FOeV+xdbOGMt4j16TcByePSbQOuvs
jJIe5oL/voyApbnyqRQ3Z5QY0DZa2hkEMfGYZSYvZxSq4PPwku4HOuaRD898
nXGfv0+M2/ULTC2dCd9/6oyBEZ0DF9I74EO7m5nHc2fk0DLwNIhrgReZ1fzz
sc7Iw9Zzo9uvAVwfHdq1THFGvuGO8t+2NSBrrNE58NoZqZ4tm5aTvYdjIi8T
VN844/oz0e7Md8WwRjfu1FjqjOWdNzpzDN5Cxxy/uFiNM6ovKDt9z80B0h55
9pAmZ8yOy3Fd482Ea+8t9392OOMdNs+nncFp8DDZe0yg1xnfxIWcq1RNhMrH
MS2PvztjI1dzFXlNLKw7vc0ZGHXGgrMidn8FokFAsy2Ed8YZh+lZHk8ERICr
6NgNn2VnDFKoTTM1CYMc9l2t7g1nvLnVfrawPwQmiFhEOP4dzFuiwyUjMRxO
zl5k9Tjkgtd8CZeGVmPBuFtp5yO1C75d9unOJsyH2DKbETZmF3zsYa0WaPMR
ehMfNFw/dqD3SDuvqDcNtP5xmfUcLrhWHnn27wciVHYsesrE54LPTl2YOMtH
h4Hqnc72gi7o1mtU8gupsV54Uq1SzAWFu0JHAznJcJdtX4AaXfBIquvgs29E
KEZ4lNlCwQVP89Pf2s//B3emhTaL1F2woFwxwH9jCwo/qw6R6LvgE041gi3N
dZgvsa81MHNBuS2H4f6gFeBJ8E3Ls3XBsNS8mK7ZObD2TXi85+KCIgoTkcrT
k5BiX2qvedsFaZoIKQL6fsOQapdShrcLrhSkfDtM8hNYLs3wb/i54MD25R3H
5G+gdZSIXumZC64XgySXWB+E7h/7kxjhgsZ8G5u1it3QNikysBTngvqKI9sS
nu1A8kmjUjr1oH81rgsalc2AxU5JMVkuOObz7pTFSD34xD9+NP3GBV+HCCqO
eFZDxcNka4kyFyxTIXvTZFoO67bv5cJqXNCQUFDt0OViuKjSc3a0yQVrAkrq
bha9AWfBeapLnQf1RQ9cYpXMgawjh5YDe10w+8akTMyXDBjbO9E7+N0F5UMT
JTll0uDEhFjZud8uuLU4zr4+lADGHdrxD2dc0N8qXYTIJhZeFLre71l2QVLd
RfPKhSj4EvvEnGvTBe98Gz5HrhMB1A/SpO/+c8EcKv7E+JNhoGhTxdVxyBVL
zH4N0n4PgQClfrLjNK7YMHHZmujKc6i/uDR3k9kVqZeHZwpk42HnMHlX4zFX
HFQgoJaqfAOiu6eLDnO6YsI55x9VZh3gPiYZ48jnih7P90LjxObgbZve3WpB
V1Qnouq5BCQ49/amMa24KzINzS67GdMhz4tnUlboiu4Siu4EHVRodT/jVKmC
Ky45/Lt7s4oUk6xqick0XJHF4lbLUz+ig7zfpoz0XbGSQHFp6uQ/YL6w2l5g
5oqTn7HbK2ALNJmp3uzbuuLEB2O3s+t/IHSbK0Lb1RXbA0Y/qUitwMfRq7df
33ZFCZtcs+Ebc0D00VB/y9sVyZYkvCQeT8LVN+7iKv6uGD6f58Xs/xu8o0PZ
U5654q0jcdeDHv2Acq+s/ZUIV7xiqZQZJPgNZp5/D2qJc0WfQgOVcc4+YMui
ZkxIccU7ou2kV+O6QbUGEm+8dsWnTgmPjjB2wKNedy6ZAleUTvf7QB7QAsUz
r98cKXHFtk2v3MWGhv9RaN3xWL1v2MiKyEhDVqloKIqWum8RlZLwlag0JMp4
vXtIRmkY2SuyR2ZkZGRHSvZKttCQESKr3/v783zOOc99Xdd9Xc+5n8/nwNeV
TvWxAlvsCHGeu23wFiTXCZWVldmip2+xpeD+N3BqF5wOqrFFF8fJV6TF18DU
JDbb1Nti2YISX6/rK0i/mGB+vM0WM6w6Np/SS4V+u86vYt22qDOh+GBDaCKI
PRC0Hx20xU8hv99Hl8SCdvjxuaLvbH0SBnIVDkYB9ZWji++kLXolyOVHKYRD
cnW8wK05Wzx8oqUiSjIYvnR3+B9esUWpfzdSU4b9QXh69WZhHjtsk1CzWE/2
BRQ4njAoaIcuka3POqjeQJR1VM4Xs0P1o+5QyvZXvFp8vudGO4zv+9vo+9wb
2vU68JqcHX4P5PHI5A8EgRurPxzYYYcT68I0DlXGgQb9mJGAMnv9+T8j8TbF
YO9D6O45YIdnqq7vIlt8huj4uFvZR+3wU8aXgR0Ns9Bc2D7uccIOo/t3fs6s
FMBVTQJ089N2+OiHfnW2vAgeHNXg3Gdgh5XikecMClbjnWWHp6su2uGHXdIH
26XZfhOPE/98hX2/QU38hyYX1iu1R6Rb2mEGZ4LXiy0rwIEC293u2uGRG1Ez
jr3zoGqikWlCtMPt4ROa9Q9nwNLW4dAuhh0yj5gHhU1MQrBbbPm/+3Zo3PSS
t3D6J9SGtp1p9bDDGynypZtFR2Epg7812dsON8b1+IkJDIHyu6NX7gXaofXM
demmO31w7Yv9yIXndmhKnVtW+fUZ/KdiHLbH2qG0bcoy3mqDKr62+YVkO9RW
+LdpbXIT/JHmd2vItEPPhP47NxU+geKBo4LxeXYorO+xt13oPZifsQ+kv7XD
X2ESI8c+V4LPtRjpc1V2ONCXx2i8XgZl1NZE+Y92mMvFIe4iWAS/vfj2/Wmy
Q+LrkUFu4zxQiDtS8KHTDp2Pbf0QT8gGkwK7E1F9dlgQ23Lbk5EBjxuiP5JG
7HCpVEq+5MBLKBxuMT71yw7li1cm6wfi4dcib+/mGTv0cQtz7TSNATmxI7en
FuyQb5uu9cbpCDBUtJt8x2mPwS4Lz3WMQuHB8WhGOL892p0/3OSeGAh5xi1c
DiL2WDt75Frmez/4dofXS0vSHukWHTMNOs9AyvXwug3S9njzg2lfubsX6IfY
vhjbao+Lr+ngw+UFLulRO8p32uMrzVDq5G5fyK5sfhWkYo/RF9/N2F0Mg6+f
eY7cOWSP8YkR+5Ofp4Pk5KHK42CPB3zIQlfHauA0r+1ZcR17nHK1KNGrHYbi
3u4q1jl7zOmjrQoU50Ll/HPHvhrb47UoUfpdMRGMflaSe/ayPeofurUyaSKE
YtZ7lXNv2mNkiRq/kRIfPsDoROm79titIKff08iFfzaIynoQ7dE078nWZz4r
YD3lGjLOsMeNeZMX6A3z0FX7W+Siqz3a36pomVaYgbOxNx+XPrbHyZP36KLs
82EJs5VD0dcepXKN9ux59gP2GZ1k+IbYY02VprKd7zDE7sqbmn9hj8I9TYeV
2fubBHsYvJ5ojz/vRmy5a98NHt0hg7Xp9miWEV0QsK4D5nP4zVVz7fFX4c6p
AyXNcMeb0RJebI8qvv4p7x3qofvWDz3uKnvMvelbkpz3HvSPm1fd/WiP030X
iBqiVVAmWafR2myPf2b7dAv1ykB1QiNXo8se6/Y2TWjQCyG+Jn1PwoA9fgo1
P5vtkguS0TKJa76z+1kzFpPEyILH9Gcy1El7NPTgJ/LapcGCAUdI75w9cm6e
HUzZngS2So4iuv/sMQ2odpEjsdDLOfgok9cBH6uE7RlYfgEGXYYcG4Qd8E+f
8cCW4DCoyK6ku6xzwHpx9iBpFgQHPA9MfdvsgANjHXO8Uv6QeDPB5oKCA741
PiRLtHsGGzQkBwt2OeCX7GzTjQQveCrxyGzLfgfUenzf3G6/FyyNzTU/PeKA
X9c1f1DS9AP7d9Z605rs+74L/ne0oqA/8nOl+WkHnI90dXd1ygND6hmNKgMH
PPxWvD+0m51f/aKc3aYO6Oe97Wv+xllQ37F7T5CFA8qvPvFc1H01Jv+LSFi2
csA7E5+0FPKFcVPnGhkrewfsWa/jQYgRQK9XzsH1FAckHE+/FNe5ClceTwgf
vOeAMsxe7o5fHEi4fu1R1AMHXN1zsaTu3iIMHm76x+flgBl+V6qPGv4BY7ET
dEKAA9q9FJb0kv0N1T+yJzvDHbCvx+TSpN0vOFS51UYz1gHH9Qj//fs6CqnP
AwdevnTAZw/fZnlZDYEMmcdMLMsBPwrZa8649IHvWWoz840DKn4w5dwT+Bm4
to2eGSp1wI1UzveZVa1AXr5YqVfjgOfSi9Z3dLPn97b3R3Pq2Xgme7bsvPER
TDMO52xud0DLRE7fzRrV8MEjZffDHgc0Kh0qlROuAA0LqYRfXx0wsMllTtfo
LWQc9JI2GWPX3yoRVtaUD3Jrl4NKph2wsuuQK8HsNfh/sxPeseiAfJMHd4TT
MsHtmkOlLicBPTaeTc56/hKK6pL+La4i4NmvQbu6++Nh5lD/0Vf8BDwpUtGS
Kx4DexI20C2FCHjjWT1fvmQEWIleyNmwloDRbhYuUvohEL4uuNJbnIAOM093
ejQEQP3GL81c6wlocXouZ2WzH3DJyA3SNhGwZdeL4+pnfeDglltTY9IErJ3S
1hUW8QLb7SkcN+QJmOdksrU81guid06IdCgQ8J30jbi+FT9oVT4ge1aRgHHt
FHeRvdHAv5+hXL6LgNTQihCL97mgcbDkmPpeAl7Iteh23tcCjke5z6WqElDu
zX1Cof4UJMKpy3LqBIxv62tr/s2LXVred4MOEzA4qm1g0lIEhU81M1cfI6DB
/JYve54K4omz65/eRzZ/qw1hx9/xItXgctiMFgHhSO9unXIuTDWOSbbRZfNd
d6dr3+AK9JuO5PeeISCXScEVKbu/IHFlV42RPgFZt3/aNo3PwKnrhPb3FwjY
LTl/r/boFDjdyh0+9h8B35/3rD58bQxe2SzMZJsS8NM2ch7p8igM28Eqxcvs
epVTd32ODsEm4gPxSAsCym5fTfia0gf61NotYjcJuLp49PQRsS5wYwqrPrIi
YHu2kOY7ahvkORtpLtkQ0FJ8+nJNahP8cAs1cLQj4GWHjJT2DZ9A9lGPxQiB
gDWzTK/ymRow9tziYE4mYFHp3W83Cyrh8bPbzo00AsbOqjWnHyuD4oA075Ms
Av6zv3H0ZWkhTIZMRRQ6s+txTvhs4Wd/DyPU0/a6EXBvc8gbhR3ZcCmaVRT/
kIDOXvUKD8fTwSe+7MPGJwR0y9shWfI6GSqSebp8vNh63xFsELONhz9pZ75z
+xLwZ66GsuRENOzMejZPDyBgUmTsovahCLia28o3HkzAVS7PtplmhUBAwcb1
N8MJuCfHxvGAdCC8f3t1e2ck2z+KVwTnLvrBUnmc2rkYAk4UHtm5O9IH9lV/
066IJ6CRdrxNu7IXWH7YY3wwmYDnhDadi73hBaH1xJtpqQQsvq/Rxn3FDz41
5xPlMwl48a9211OuF8DVseQanE1A6WP1pGin16D+RdNPMI+AuSVNreYDjXCn
zyPapYBdXyNSTeX9OLwY+pg5W8zmu3urn5klDzaPri29U0ZAjdAN8u+uiCDf
2H/1fZVsPXdKbbvGJ4Qak+E9xjVsPFmHq6f38yFhpm+s9gMBe2P7kyY2c2P8
vMLS8XoCPre8b6rB+AedSzaCOU0EXOgh5jG//wUhzsxNSm0EbHzboXHwv1nQ
5JlRetFJwGaNGt71vlNAFTh8WLybgFFB5wUEfo5ByhrnU4/7CFgqWtFTWD8K
vaKVF5cHCVjgp2oRFzYEYpL8t4kjbH9ZVIaMbOkHnU3nqKPf2Xk/aa5d4dcF
LBn/h5d/sa83rGmo6GuDRm6ql9QUAR/r7X4ykt8ECt8vBXTNEDDDK/HF3Zw6
oNcfCw+bJ6CJ3hp6CNZA3Wv5GNMldl4cxl23tFeAXBhP8noOR7T2HNt/52EJ
kJ2/Z7RzO+L32sVxhaI38P7mp9wgPkcU3HH9tp9gDmw+nVVsLOiILmlVWk6a
r4CgHFQpLuKIm6gyj0QtU6BKnPGhWcwRF6ZtHsZSEmDD38tNfpKOKK55afqd
SwzY9WKnwSZH5O8iljS8joCKSoU+ERlHvLOzc79fcQhIvuQfqZd3xEuheXv4
hgLgjs/YmPc2R+x4z5Oxd8EXSkiN02eVHFFqxOr+XLc3iF3KWRDc44h1IbL3
qns9wep4KOfHfY44EkY6LvbZGwq3OvE/PeCIsR0mbq/8g0BE4JrI6UOOKHK7
7G3Yx2SwHNeS5NdwRO7gG83mse/gTcsO6RpwxNGzrXM6uiMgVCCo4KHliEby
V4j+3lx47cXEzpO6jugwefbfsKoI5ri3qKzSc8SHvy+IZokKIb9N/qFKfUfk
mLs33NvDi5f1n4OboSO2NtO6lx5xYdb++zqaJo4I4Ua/h3hWgHfjzXMcZuzr
Xw87ci/Mg9mKjnHpFUd86uAb2Js9DRlDO82drzviOn6re07fJ4CrVvjGsVuO
uGJfYaH/+TuYZPy2XrJ2xNn6Ky4Ck18hJaDdocjWEQf7mt0SZ/thhV5IZRIc
sex6sYIH4wsYXX1x7zDZEc/2LDMPabZDspbbg3maIwrJdQt18DbDkqKVZz7L
ERWOqRzUO/AJDITP+FPvO2JOXLC2UnINxE/vCVNzd8Rip7IYrp2VMN8pGj3j
4Yg3f/vugzWlcLZkNvH1U0eUN/zktkGpAKLjPqcTfRxxoy+vjYdlDsw8fpuj
4s/WwyxE5+aTV3DKPqZoMsgRMz6dXLOpMwUijB5WZIax9SxTvjffnACTh2xq
7SMd8ZVeegvxYwyclDnXuCeG7Ve6+Z/jOyMhnFulYyzeEaehhvPYxlAY/ybR
m5rsiJc3c8uo7AyEE/XzX++kOeJPDgWREWU/CH7d/VPplSPeTc7+e07eB36E
lv3+9prtZ4XNl67+8oTjzvF/k/IdMVDK/OpfO2/wv/mY43aRI/Kuiv++ISwQ
Rk7Z8m0vdcQfDQn3vpUmwhFlA+HhCjb/9k4HHyP2eUb8wLr4akc0eOR0EgeH
YHB+/eabHxzRrHQlvGQrJx7sXdyypd4RrXxGarm+CqNXZZ/SQJMjfhJZKyzm
LoT9yZX7otvYfGRfGYto8bHn/qSDFp8d0bhSI5zYxYWPSZ7HZXockfhALtbf
cwV8rl5s+NjviJFqz7nM2+ch6PTWa4yvjridFnRQWnUGIg5MTG7/5oipBqqK
3+9OQqxskWvrT0dMH4+PepLzA5JXPxJzm3DEaHG51JG8YciYNYzbO+2ISnZ1
BQLJA5DTL3Og5w87L5KBa5PzuqHo44+qpwuO2F3W3rlg2gEVeXn/HVpxxMoO
s/1CS83wPsZtZJiTiKwJZ9d3ffVQ76VPC+Ah4r2znVuXNtVCK20Tv6YAEUVm
TmgZ36mCrhsjoeNCRNxBMF+tFV4GA+eylSLWEnGZc+PVes4i+HbIufC0BBHr
HE223p/PhfGtZ/Tm1hPxKmnqlO1AFswIS3bHSxHRn3Mpvkk2HRb/DtgayhJR
9oDBvprSJOAaTl/+t4WIBg4mZpXWccDfyPBJ305EKQHdNb87o0C46KSs+U4i
2r6sFuE4Gw4SiaKv+JWJWGsd5co3EQSb/HowT4WIVtsVDT/5+oO808umm2pE
lN7M9UJW2BcUb1NuiB4mYnAVi8+s3guUDTWnSzSI2MibJCk46QkHjq15YItE
5OPKzNus7gtHFD9LbNImYnOFtZd5YzigeEJCjS4RK/Z/13EKzgLdFYI6RY+I
05XlF/RPNoL+d42aLeeJKGRVbnJffBKMW/lNGw2J+OwTzc95iZftq9Zv90yI
aGHbp2RoIoLXU6IZu8yIeNSDe0xmaDVaB9mu/nyFje+tXr7TOA/auxx67nGd
iG9FtJTy2zmRfHfV7gO3iHghs6ZsgWsZmCaNxQPWRHQPElBdHzIHLpoR557Z
EtGyUeesq/I0PNpt3atBIOJ608zSGJUJ8Fl/wOEHiYjpJWFkuPIdArk4OEJp
REzly7tWFfUVwn999D3JIuKK4KSK2Lt+iO4MkZ92JmJ4vs3xZye/QGLlzexo
NyIeKBle7NndDukZe7X0PYj4Ys91VT7+ZsgJW2xZfEJE+XfXy2cNP0HhgxrL
l95E1NjvdO1KZw2UOQTMmvgRccGhUFHQshKqzSw8VgURkfc8WU76aSnUndy1
PjuUiGEmAuMnkwqgZd9ckkUEETkfte/k6MuBLqnKQ2uiiRg0Zy80ufQK+nmf
1RbGEfGixcA6u/RUGJkyM7NOImJc+IDK+cBEGOve/nNdKhGvB4ate0WLhd81
v1mVGUQsFOxyfnHxBfzNLhFyzGbXkxt1dJEKA44XTyNl8oiYJ5XRt5crCHif
mCjXFRDRuOvHi3U9fiBE3lLKeEvEu+IdPS3Sz0DMYvz8jnJ2f3K/Gpnqe8GG
M4X9rVVEtGs/u1fQ1Atk1Twc3d4T8b56sOZYgh/IvbnaNvmRiFpbqc4nvr6A
LUcPHrZoYPfvd5aW6a4cUCgRifzUTESnsDsqk5ZNsF3zG4dGO9uP69Rap8wn
QLGqzDLlMxGzGvOjzjzgQSXdsPcbeohYoJel0Mqel3Z+cNz9qJ+I9JCQ9U1r
hXD3uTO+s0PsfD+VGhc+yYfKjVtmbo4ScdZtxvesKjfuM1q82PyDiPHixff0
k/+BantLEY4Tsa1N8QfPpgXYfylNNnOK7Z+ZbWvw4Swc6H7gLj1LRKLz3pTT
JVOgbnFl1HOeiP98PTTETrDPf4NqeguLRHzAW0yzk/0GR24JZ1r/IyK/NUfa
o6Eh0Pg2ItbBRcJD93tcB271w7G7pdSTvCR0IPxcp7z6CxwfD+l6LUBC9Vnl
CE29dkBHwvEta0hYp5A1Fnq9GU7MnIr1XUtCT+kg12fn60GbJs/7T5yEOUbW
R0eX34POwl8bu/UknHXfGHn1eRXo3mv+9GUTCb0NwvgEVsrgFEeqyhkZEtbG
LKcU8hbDGXf3oDfyJHTHgZIW6Xw4y3v57/ZtJPw3tGjnI/b//68OXAlSJKHe
3PWFUadMMBBaU869m4SaLY+U57hT4MKzYQXiXhJ2/uJuqfJIAEOxksf9qiQM
1F83Z/8lBoyDgsf01UnYvLlacEtZJJhscDB4e5iEQiqJ5Iu/Q+Hic92cXcdI
6BomurIkGwSmMnIbwpGEvsN0YeWt/mAWM8/i1yYhGt/K7al6BpcVmvqouiQ0
yttXePidF1xNeqk1fIaEzNhwnhdfPeHaTrckI30Snjdf4zxy4xlcTzcTrLhA
wjShg+sUQkLgxr79Dvv+I6Gb9e5r5ZQUsHwt2PLClIR7F3nOJI5VgZX6V/U1
l0ns+SXIe0hpCKwLisNZFiScfhDG4x+8Anc0gla+3yDhcNaGz2c81uDdUrsb
plYkVD5/aEfY7zVoe0KnutqGhJbLeTn3JQXQ/p3MTjU7EkpZXpHYn7cKCafm
vOMIJKRmFG25KcGJxI8NU6JkEp7mWhhV27kEZP3k/1xoJNzZEdZbcWgOKE0u
BeNMEt4WPT91Zds0UI0vSV9xJqGG2YjyXv8JoHeouH50JeHGsXSrSL4fwDRb
PXz4IQl/Bfe95aMOg1PP4Knkx2w/1fiFFmUNgPO1ojRJLxK+mpmqv7GnB+4P
Bax9+Izdv9j1jdbCneBiZUue9iehmfQ69GlrAbfv2p3Xg0mY7/boCsGsER7Y
Sms0hpHQIr7jzpO5D+AxMRt1PJKEh1W1Y1Q1quExsZ47PZqE+hYh8tH/VcCT
2cTbUvEkrFTK9pU4VgIpl2QqW5JI2PCZj1715A3UvQ2S8Upl1yveHyz88zWM
y69hamey+T7fY31kzytY6/GgbSmbhAYwVyx1LgVUfyzuy80jYRFVd4rjbgKw
e+1lV0jCtY9yyz2dY4Cc/WN0WwkJX3w6vXy8MAKCJW9o9ZaTsNopkce6NgTe
MD+/CH5Hwvpf26cGfgfA516DBf1atj6WeqPmq/1g4cT7//g+sfWMXTnkOecN
m5Mgq7SRhJv8lwyEhtnzlmC+EL2VhB8i+dtehXuDhYOy9b5OEvoMjBbe+BUI
Li0Jld++sPPMmSnEezIJYg9Ky8b0kVDM9JwqP/u8XPU8kHlpiISX/yjLn9n0
FYb/CbaLjrL9JO4SFbmDE3kt3VU+/CBhi73wgZBuYVR8v+DlNk7Cx+pFnMuB
QnhmN/Hbkd8k9jwu9GHFnA/v+n7Xmp4loTn37heDs1zoNXMtKvUvCUVl93sG
V65Ahmnnws1lEh40N7tWMjMPjcXnTTZzkvHmVjPqw+MzMCVXk9W6iozHMusn
VtlOgtjD42u8+cn4NUT43cP4H3Dge671SSEyMh42Pi6JGAaTc3uqlkXIKF3t
YSf9eABoWfGyeeJk/M70FqY4dkPous0s+/VklCiTscoS64BCRkD7dikyth32
/vYwvxm6e1ar9smQUfnghQ9DV+phWdPNO2QLGTMWDAvuxr4HmcS/385vJ6Nt
2ILl7qVKwNWO2vw7yag71kPvUy+DG/bfosr2kPE3pcXzrEEhuDdbLNJVyGix
pCV6xTwX4tU7TFTUyPhrdPqo1cUsqA7Xz/5+iIyPav8Mbd6bBt9W3q2J1SCj
tuG3KMZEIgjcPGZjhmQ8nf+SQzwvFnbW5FSJaZPxoAL38eqXL+Dsrt1yH3XJ
2H3p6qkA/TCwfxbHctcjo8iywKo97P3q2fSmjqPnyXj01+ubMz/84NVFf9UZ
QzLyupoUzm97Bs1FAj5pJmSsWZz0+HPWC2ZkXb9bmpGxovQSLfeaF6x7MK8t
fZWMG3Q7XI61+oH6N4fotutkpP8JWJPRFw2mZ0cXvW+RsYx+e0XnfAEwX129
qGPD7h+3zo/4zZ/huUR79ootGY2Vc9bOdcxBMf2ccD6BjPYBx+pvTwlib3eV
jQOZ/byx4nivpjByaGq820En4+aWQIlIfgGUT3gt188io0qPh6v9f6vwhMAu
p9D7ZBwLeXRD7z4HWtrFdhi4k3GN3P08vqoF8GjauF/gERmF9SSnzfJmIVnN
z6f8KRnrhRcLhyOm4EMY/w+GDxnd7wSp7QgYg5/L90+q+rPxzHqmLu4ZBf4F
bnJqEBldPcUj+tcOgcKfR7EKYWS80vf6kOmVPtD8LdgUGUHG4tqLJVZ1n+Hq
+LN/ktFk3MrdMnP5UBuwfogr+8ax+7n1ZowZuQlCR0IuCySRkSPpr9+vvDrI
HZTydEth83Pnakl7UQPNvVEFi+lknN7fvpbfvhImurZ+I2eR8a5ny8XRuVIQ
6kiSHM8hY+WHy5q3zxWCYsuuk7ffkNHO5fbgtoRcONmQSeovImP+1hbDlKYs
uPFxf+ylUjKu71/qszZPB+ea/MbmCja+dyahqWrJ8Lzy6D+9anZewqr8wzji
4U1p6Z53tWy+fg9i5AOjoa1I6/LxT2SM8TB/1x/1HH7n1zzNb2Trv4FZeXd/
CIjk6BXsa2X7RS39AE9+AOx+1TD6soOMGy30UnL4/OB0mpHk1i9kNGUx/qTu
8gGr5A7tiF4yrojqMGhcXuAWb05aN0jGRaXohpO1XhAV3RfjM0zGa3rPDY7f
9IfiiJuNfN/ZedNpEnBbiIbO0NEVlzEyFqwuSHlOy4fZwLt7FibIaCbRIGTK
2QZifhPmpGkyvi57+ed672/Y6016OvaHjI+3NDCWd/Dj2Sdzb24tkHFX4eOf
TwxE0OYha7R3mYz377r93bVJED1c/60z5aSg3Xt5v/irvBh3z127aRUFr7cc
6dtmzYVlDD7SGX4K+mxJy7hwagW6KZ4xlYIU9NQzLI35Ng9/HUUaNUQoePM/
MdN/TjMgaR+wkitGwZndTlW7uiZB9c76PXslKfiQeNRzbcFPOG/13Dx5IwX3
+55YevppBGxvyD6Vl6bgpJa8q3f5IDy5GvcmXI6C7+dL5bq6eiHRbMeouAIF
Ncf3Rote/wyVJqnrvHdQcM8F0UyJ/lboN9yrzbuLgryzfstvdzXBsv5r4n1l
Cor6KpqwoA426R2MmVehYJ3R5XKCRg2o6xY1OKpRUKrFJ/64dCUYacHKj0MU
LDLZQFxNKgUCVO621KAgv4rMJuX+AvA6qmveAxQc4X1tb6mXCy8PfnxiokXB
DWYFNrOP2PvX/vNvGnQomJoauNVlMA2G9raMnDpDQZmxDN+c5iTg2H1xXcU5
CsrH5V8byIwDacUvWkcvUDCEobI2zTAajihYEHOMKehkF8hMUn8OF+WGoveY
UvBrY9TL733BQN58uyHRnMLen6beDFMCwHfDz2VZCwq6ZxPkU9p9IV3CYXfY
DQoqKf8gnfvhDR/WTpuJWbHxzNWkdY97wogQ7YmnDQW/NDoR2sS9gVtgMX+V
HQUDp+pmPNcEgBzP/ZF7BAqmfy2WIRyOhQneny+GSRTs4y6JajcugBL+ixfP
0Si4LK9RdfN0O3ivrhTJZVKQIP1TrMBuGi4L7X2/2ZmCgqLLF75r8OMu4ecu
D1wp2Ju0fTT1PxFcEOE7PPaA7Y9rheILJwWxVpQ0ZfSYgiXH/jZGhPNiqHjf
yyJPCjKPuz5bTOXC2+v0bmx9RsHH9xM3qLWvgPr6/E2e/hTkmlvMMKD+BZ6N
W1t+B7H15Wx7sp13Flo3PfM0C6Ogi7aNH8flKYjbvKhVEUHBLGUD/dKUMSDK
3F5SiqZgnlhH/JPUUdCUa8nxi2PruTO7Wd9zCNZuAbu/iRTULi9/qLK1H/q2
pm67nkLBn7pZlQcSuyBj2/re9+kUvNZ0/6wEZzvc2+EevC+Lgubj6ytxVzOc
VZrQD82hIM10h60qZz1I7TLn43hDQbFVVteDq9/Dj901pbeLKBgX7ORsT6mC
AuX99IYSCq7+F7S0frgMHu+L2newgp2nC69U1n4rgouqgt9fvKNgZb+LmvKa
fNh+gBbDW0vBNfwKuTOCr2FWbeiSfR07D7A+sPxeJlQdPC/W3kBBHdszgXrC
KRBwuOjDsRZ2nv88vC4fkgA3ju5wT2hn65dfP3l4IgZUjgUcXdNFwb0FBwLi
f0QCB/ybJvdQcKkn9eKHzWHQgHfTuvspaLpoErv9VBC8ONFhqf2VgscMkhwu
6vqDnbaWdNooBWuXIhUec/iChk5mm/hPCt4z2FPT9tMLBE9J+bDG2Xnakc2n
0OUJXacf6QxNsf2yh+HI9ckHXupNr5yZpaC6mNXP4CvBQD9nkZ89T0EB4/iN
N1aSQPf8R4dNSxS06NLnC9GrAMkLBxXd/rH3n1c9UgGP+2HYMK7/OxcVLS6f
k7UQXoQcY5GwC7xUJP06IumKQuhuwrpQIEDF57o9RjruwmhoOiogv4aKo+7v
WvPes7+nZkYVj9dScfOYh6WEMQ9OmpcyJ8WpOGKUFeoQyYmlV3btN11PxU22
H8T2rV8GH4uQn6WbqCjilj+6k2cerlznjt8hw77W0dpu0jYNu286XH4mT8Uy
7XSBC9cmYdHyi8ScAhW1t2v/kRb8CR+sdD9dVaSi5v0MQXPjEQizfv2wehcV
i1zszv92GATrO7LHlfdS8edtsRkSsRcO2nr+CVKlouGitG7H1s/Aaz+XsaxG
RcUfDhGiFa3Q5nDz9q3DVIwTu+r6ZWsTxDs2yH7SoOJpGctnmvp1QCId7TyA
VNRXTrZxtqiBE5Qk3wgtKv5X9nlw4WwlrKWJn16lS8UHG3b+regvhT76fU7b
M1S03VQfttW4EOrNn2ZJ61ORpfTEgW6VC8XHg643XKCi8B/yf/1WWZAqHy3q
+h8V94bHHow3TIPwVanlqpeoeLs8+N1ziSR4Mprr+PUyW0/iwYScrligfyiT
D75GReYUtZV/4gXcTv/YpGtJxejgvJoc7zAw8W13/XubinP++qMlJkFwkjSg
knqXisttEW0/N/rDAZOxgcsOVJwiL4sH2D+DLYfn/IRJbP3EpBhDjl4gupnr
RBmVihsyy+9z7fMCjn9Cvx2ZVKQ2JZnzqfrB+MD62K3OVJTNsdSpnn4BPVVb
DNtcqXicfPvkvHge1CXt4Xr0kIo7zGqVQo3boOjpoexDT6gYvNH165/gGUix
07rxw4vdH+3NP2yUV2OYgb5YhC8VCzRjL/A2COPj/ZcqzgVSUeuRecWaGgGk
SVoS/4VQMZJ33+zwwiq0+mu/Jes5+33J1v4dQpxo3M1ovhFFxU//vd/M/XoR
tEofuEnEUfHDU+aRFJc/oBr7TLU6kYqiTaTEHt3fIPcwfJCWQkVVj0y7lNe/
QMQ6wV8pg4rZKg5KovLfYOXMqxNfsqgoWFewTz58CH7tKfrtlUvF98ey9ut8
7oPutdWxxwvYfjy1rBLS9xk+TjcaThaz85F3lPVrVRsUtn/hii2jYqeEoomj
eBO8LBjJNqqiogZn+626ko8QGjF1g+c9FU1+b1x5+rQaHt1fEsv/SMW1mtZh
dwwqgHqDr9K6gYp36j/Hba18C7dOipE2tVDRhbJ19M/eN2CsKL21rp2K9iHe
YXEvX8MJQcWWe11sPhkXLShLmaAyruq+t5eKnjK0mA+rU0Cu6dj+gQEq0t31
S82PJYBwzqkh/2Eqvjyl6a5+LQaWg40CtL9T0a/FbXgpIALGGFe1/oxR0Y3O
O7n/dQh8uWwznTRJxdXbfzXWjgbAByDHXZph5yXrj7Ifrx8UbLlvJDjP9vN1
qZwr896QzPOU++0iFWNpT+NvjXhCyLfA1/b/qCiXaDN15ZE3eHyMuinHTUPv
60LBxLRAoGSkiDfz0vBAomBWZWAiWPrlVrqvpmGg+nW/V9UVYEQuI6kJ03Dk
hhOrcnwQTlz8uHVUlIbrkmYKqs9z4L4j7S2h62iY8OBzI9VLGGWlB9zPbGSv
X9e8YeWnEApzjO1f2kzDSNPCwbkcPlwa/DOULkfDul2NlNaT3PjzHWeghQIN
eYqD1itc+AddyULaooo0VArLcpBz/Au1nutnKnbR8PsnQ8XdqTPwxn5LPHkv
DWltlFekD5OQdGGP8fb9bPwtgjkzuj8h+MChVZ3qNNyma1QRrTQCLpnnH505
QsPNVUau/pqDcGfn7dVvj9FwQM59IkS8F4wTnL33atIwZEuyDbW6E0AueG2s
Ng3nhq5/8rVuhZ3P0wMkTtEwtjFNtKShESQk30k+0qPhD5vHwY+yP8KKb3fY
X30aFvLuoKxtqoZvgjObbQ1p6Oqbvm/xYwU0ewhG9/5Hwx16vbP/5kugmHPr
1guXaDjsH1pu9bAAEp2OJFZepqGwEt08iT8XfOcuKKlfY+Nt4dV4wT5PMok2
ack3afg2/tBwc2QaWP5y2St1m4bWK9GG++OSQN86NNv7Dg3Hu41lwTcODg9l
qnHY03DSIMLh4/FoULha84boSMMrCdSZFdnnIPy59+gwmYbvH+YHnm8Lhnmj
PyUX6TQcWxD/d4MUAIP1a058YLH5yMZ0bvrsC3Wnt73TuE/DQ4XVXJrT3pBX
pXEq043dz+/8mUO/PSEajD/Ke9Cw/PcCd86CFzwtvKsf+ISGiRXNP9Pf+QNZ
zb2J15vtl6pr0yrBMXD1Vbgxw5eG33K33nUg/f9/yeyOnwE0fDGuLM+qboP9
ibVmV0NouIf76OO3+tMgIz/Q0xhOQ6m86AtmF/mRP2L+mtYLGq45r36yTF8E
f0uu/ZobQ8MoLYlNA9KC2O2347ZiAg1LhYUr1O7wYrUQ/AhPpiFV/Or+KDoX
vnpkYrcmjYZ9f+2HOuxXIJzLfvJ+Jg2r7piFvhH9Cw/uPST9zqah4BHysyeJ
M2A/H/HHMo+GD5sbTPK5psCUlMPoKKBh9vWTsid5x+DE+Mel029pKPFz18XX
60Zhj83Q/eIyGh7vOOHEv2oINnxd4NpbxeY39+XZrFEfcFmIecTU0JCzvHTG
rP4zjH1WEpD4yM7PFRubSc02aDfW9PKop+Evly8nPro1QVmDqcjfJhq+vDn4
wvlzHaScIfjfbWP764UCL3dVDQS+e7Sut5OGfPxb94gFVoIzRoUadNNQNMHN
9aR8GVgX5UlV9tFQ7tU97rzAQjBUr3+hNkRDw79b5SdGc0Eja1g+eYSGZ4eC
V4NINuzYvRy/6QcNjSvMc10+poNYkoSi9y8a7t9zNdctPBmW5Hen/ptk48uU
J+mZxcNIhJYycYatj7vMs6nBaGhcb571dY6GOnx/o20UI6DQn3jg4iK7/tqa
7elJIRC/5ml+7Qp7fV39hd/rA8HnccwRDS46Dt/iXV/0nx/QuQveZvDQUWvw
4MqDCB+44dyI8gJ0jHxqOB6w1wvO/h2tDBCio+XDIaVUCy9QJ//T4V1Lx/D1
AUuVBn4gPyH5gS5OR1rliue5qkjYrfdJW209HTlfHRUo2ZQL6knupVOb6Cgk
cYffP7gVkPvIkQwZOspbludegRk4YzGZc2cLHcVekR2Gt61G46LEvTu203ED
cte8rBbGq+uvpAwp0fGB2eUdL1MF0Jokvi16Dx2Lfc/5MjpWIbGhNuqyCh2p
Ya9EhIc50GmXy6aNanS0qOP71XRjETweqQe1HaLjm7RMU17VP+A7NCbir0HH
HztmhwSXpyAc4p7qIx2lPMW9ryv+gvjnl3gEtemYcOjlJ++YUciYE3Gp0aXj
reboipHtQ/DGqHrBXY+O5S9f8asI9kFFphMFz9ORHHkzd1DxM9QJ7p9cMqRj
Xt16bmnLVmi//f1OgQkdbWTkgis9GqG/MmqYYkbHGWIKzNV+gB+yJtdUr9Ix
s9qGh5X3DmZYQl/Gr9NRoH3ujHNYOax0VPyXeouOyZGf3799XAz8BxiNt23o
aDqw2JG/JR/EfPfqKdjR8dzrMO2uymzYPDb8rp9Axz7+qKoUSgZsPxWBkWQ6
Fv25HT9amgz74g2LLtHpKI5zCmXb4+EIh4C6pBMdl478baPSokH7cumr5vt0
fJ+r2esu/hz031B2PXOno0qh+IsIZjCYSuxO1HtEx0muwxmiE/5wgzAox+/J
9oeskJrZaV+wrQt9XuVDR6KvL0uSzxuoiuclXf3peHeVwivdfk9wecDjdyyY
jtol3u+Wep/B0/4iwYUwOvJIiC8e+hMGgRpEj7xIOtKfN1uHcmbBi1BFTlIM
2w93LFVVZxsgeaaXtTeBjiKGb1xrt0xCtkHQn5/JdByTaljnc5YPi9P0HJPT
6Hhf7crB7adEsJqfa8zyFR1/G5JcfV6sxkbLN1byOXR8VKPzQS+WB7vK7Ad6
8umodtoW2p9w4tfN2y6HF9HRwbD7O7f9EozTv7SblNLRzL2sP2T1HMy3+l0Q
r6Sj7dM7835pv4Fb5VRdQzUdOzskL3zVHgdh7xUdrw/s5zeobNj6+Bts+J5T
fqqejte6mi7UDAzBlpN3NXia6chtQ+sWku6H3THy+eVtdHSusLp1TaYL1Jc7
VJw/s/FZhQeJ7moDvOSTdqSHrQ/T3JxDsQnO5GrvmOun4wt76xPnGj6Csehi
zOuvdOzJVSdqsuerq3ZZmwnf6DhiY/hc8mQFWNfeDtk9RsewFK2IyhdvgbhN
Ruz7BB03njk+1cf9BpxcW70Sptl6N/BsXMd8DR49T/luzLH1fbby/HxEJvge
1nSTWaTj0HX60+j0lxAeNLfUtcL2q3iLeM9wPMRPpdNCuBhouqfs2s61MXDN
6KzTCV4G+r05fNNZJgI25/5w+SXAwLcmeuvzr4ZAp+STh6FrGBhmpib2Mi0A
gug7nmqJMnD71ydWm/p8wbDrnc+4BAPT1U14Nn70BmENy4CwDQwMVSi6EtLr
CR8iuUK1NzPwl9n87OBb9nz1LzpiQpaBih273vuJB8GJ6xATvpWB3du7OGSP
JcFKRU/CyR0MvDZvVzxrUAmFCk4pkzsZKIf8qarnhoDqsSnzuTIDc4JO3RG2
40DVb29e66gykPd3ofMx9nw1fvrimyk1BjZk6P0OnxXClNTZ4ojDbL7m8SH1
1Xx4e01gue4xBtqf/ZWQZc6NCg6q1b+RgXwfLj1ydfkH/Y2NHyK1GSi/ekbj
UMxfiFB1aDh1iq3Hwr8oka4ZMA1c0zqtx36fMHl69M8kSPxJ7XxxnoHnJRO5
H4X/hMaLZ3pOGzHwiJfkYTnKCHgVfBuYMWGgzWfKZeOTg3BK6tFIlBkDJ+u6
wnIKe2DVvW0/z1xloFjCrNHXvZ1Q1ls5MXudgdwNtUPP01vACW/MRN9i893U
Me7F1QiHYzn+6tkwcLOW7Ta1NR/gD3fU8h9bBr48aq54RvUdZN86xhVLYKDy
jBaXLpSDfc0X3nNkBm6VCiULiRXDTiWm4DyNgb7SN85NdObByNMNa+NYDNQT
jlM6HZ4NsWN5Evr3Geh6kzD1/XwGXNX/b+NfNwZeYPWl6RUkg9Srael4DwbK
Gk82ph2Ih05R/y3nnzJwUWfRj9M/GgJJ+3YseDPQWsb805//noNBW/2uBD8G
OsvXqT8pDwahg3b7DILY1+pHzT/vD4D3oYJqi6EMfJ0w2cbv4QsPFl4eToxg
oNRZSq63uTfg5VPHL0QzsLbWTz251ROW346cWIpjYMSPUy9ro32gUPahblIS
A5lv2vaJcIcA1XXrWcNUBm5I7z/4RCUVVIfKDZYzGCjhp6bTnFAD49rX/kvO
ZqA/r9QIR/wopCSuXDLKYyB0ty8tTHKhFX/k1ZUCtr6OUU8G94vgljtHb758
y0DdDcZ2n3YLYd/Hz7eNyxl4hatHJkiEDyP20G3/VTGQ6HToudc7LjR9JumY
8p6BkbLVR5c9V0BiKofyXx1bn/9WbdDsmodGQyMmRyMDZewdDJQPzYBXzpRz
agsDH29QM9hPmoRTkr7uJh0MHEcjsSNVP2AVXfkx5xcGLk/3yNZUD0PZ5zqv
tF4G8jR91nHKHwCno3f9Lg4y8KbTgNa3lm44FCkQzDXCwL92t57LkjtgZiUp
PP07A3W4HMc/S7RA1jWdKNNfDKx7ne3pLdQA1mZT1KpJBrpdUKFdj6wFOeMI
/X0zDGyGku098u+g85zu9og5Bsadl5u86VAOz3R/L/MtMrA9sE3m1bti0NGM
bCOtMHCf0bqnXiX5sHLkVHofJxPvO5/meh32GvIOTD/Q42EiX8bpvxN7X4Gd
8ovL+fxM7L8+kb23IgUUFE8f2CrExPLdIkm52xKhW35G8JkIE//4st1jEQuB
UlFDC2JMJDVcnLkU/gL01p0pspJkoiqHor1vfBhwicz6N29kYkSUO4WSGQSF
/NF3jkszMeZLvZBKoD8QufROpMgx8dNd25EUdV9QWprdKKnAxC/50wFXlLyh
fzZ6ynUHE9Pqb/iWsP0VOqFX+2snEx8ExJzl0PABg+9/oi8pM/Gf0q41ywZB
wDcUQ3+nwsTH5v906xUToaT7rIGKGhO7KN9ELEPKgNo+tyPyEBO5rHdM9/P1
gnJj7D9+DSa6qn/LSN/xF4Zrz3WQgYmfNewqQ1wEMaJyPqP/BBOLDpU7HCwS
RuO3cR5ndZhYv3r30ddrVqNQvv7VN6eZOC9Qde3pEx6sfPVXTeEcEznFRAv8
33EiMyV+ja8BEz3SzkZlGy6Davz54UUjJorys/qz983Dj8iF4tsXmahT5zWR
ODMNMSEJgS1mTPwwWTxhRp0EUz8DW7jKxK0jP8fVlH7CWs9FrdTrTGQaH3zC
aT0C7x8kSq2/xcS/Y0zrQdYg3He+MO1mzcRrAvFp6+/3gjp96cP4XSaa3N9+
y5E9T407JsWaOTDZ593LxWvKWyHxriGzmshEW53s40KyTXDl1vIFVSoTd/9k
2FdCHUhYJCu9YDCRvJ0ZIKtfA3WmRpyr7zHxsPH2h8pHKuGB4UonxYXN58qP
zGuFpXD07MtXA+5MXJV0YcBKuRB+nzR+fO4RE49I8JbXP8+FFPhnUfCUXb+S
n+N0RxbcOJxycJsPE8XcdM/eZ6bDxv3/ifj5MdFGNvOs+PVkaNzNMboUyMSX
L+fUc1Xj4fH21BLrUCbS9oe/KX0fDShnEtz6nImb6mTzOvgiYG4jpz1GMbGN
fN2VEBQCGeJpJ9NimZgrrJSUIxIIVmsuSm9IZOL3sqi7osZ+IMPHNev+kom+
ZIG6CPZ+1caRXjeRxkQJocJH3Ae8wGvhYrz5KybuleDj0DX2Au0ZLqea10xc
uC37364dfrD0K91ofz4TG7W+Ga3liITXo6a7ogqZ2Hk2WPe5XjbcGeDmFixh
YjvZDoPG62HLl4wuajkTS/l9pdZzjEFX66XswSomVjquv7PlLzf61a96qv+e
iWXBB34FKoug9Uv9S6vqmHji2jdx0R1CiA9CFQsbmFhTYHUldIkX11sMzjm0
MFHu08afaSlcOH54d822Dia6xVnON55bgWoJavCXLrb/fyq8yA+dh8iJ0lt+
vUzc/zBjW+GfaSB/EFDTHWRir8ebjo0HJuFsgtGq5WEmvv+YXet37gcouES2
ZH9n89UNsNe+NAyLZqOx1r+Y+MY00arbaACa1VSIMlNMDDqdtC9PrhtS1rI0
W2eYmNw5M0JtbQfXn1Vrn84zMS6cvvP1o2YwrRbuhyU2nrPqxyMl6mFfjGnm
7D8mmodZ6bDuvAc+p1jnVG4WfpIc3B3fVAm9JmPnrvOxcENKnE6mZBnkqahL
rxdkobFFbXCHbCF4C7mM1Qmz8M+VnjeyB3PBcrS2yE2MhZUVUVfdNLJAo0Lc
85AkC83VbqeH8aWBeOQVs/GNLJQZvJXZ2JwIP2hJSvHSLEw4elAqPiYWKgyn
5i/Js3Af/4K5ofcLCN9z9L3INha26mjoWh8NA0f+hyHvFFno8jL8QbtYEJwa
qrdi7WahoeeXq55DfiBXskFdZR8Lr4+1uevLPIO50Bs8o/tZ6CES8/nNGS+o
J6W1Rhxk4cO0k6ZwwwsS9f/EGR5l4dyerRKtLX5wTwlJ/MBCyc/kjtTWaDBe
9fREyQk2n85K2V3yBbC7r0WUrMNCAdE18o1NncBdKD2gdIaFQ9/TS3qfzEFX
4O1XfedYyI6dl8c7Qcx2yLofdIGF5bztFG1jYXxyZlFf7z8WFvPsMYmRF8Br
207KcF5iYV7SyTfLtqvwEMezX3mXWRj/YCG6IZAD137pLLa9xsJAUeXkTz8W
YDR3i9cWSxZue9LhMdk5CyW+tuadt1koqlMm61w0BcF383b63GVhw8ga4R/v
x8BOh2NBy4GF7nse1k5eHgVt+TO1f4ksVB2h/bP6MwiblwJCM6ksxEDe6zLv
e2G6vef2LSYLefT3UL8udsKHrB0HpZxZ+PayzG7UbYVYL0feJlcWrmwu63pK
aQTG7aI2j4csPPfAW030zQcwOMGToPGEhdWvSDc3vXoHitLnyb+9WGixaen5
z/By+DcXqpXsy8Izg7I9ZUHF0N48KHY1kIW1cnU/xtXyISN996B4KAvlWTfL
HbqyweMxNav2Obv/GQpDvgkZcOVmmcv9KBZ+vbBTumQiGQ4cX22gFsfC2Q1e
a8KN40Foo7Hsz0QWChucVOSMjYah6cjx6BQWcr5raN1x7TkU1o++Nclg4bWD
o2ti3waD/0sVb6FsFtoPb0mo2hEANg9YlytyWfidF3S9qb6gMde0cqiAhaB8
ZsGUwJ7f7yjGZBaz8N79yJw3HZ4w0O2stb2MhSkaRtketd6Qc75tOKKShb2X
Nnac9gwEj4pdj8VrWKjnHtKSMhcPl9Tcdj79wMIJ3m2UgnOlsDu5s46jnoWn
DLtmT2R2w8qmvQ60JhY2q7hIz3jOQ5P3Q9HxVhay+JT/ECwEMZ6j+7VlJ9t/
Ng9zcwqEkUpSNfnyhYUxm2szDi8J4OmRx/MX+ljofFDlWYkdD26+1Bf+fpCF
q5bMmnriOHH8o9oxGGGhRjQr9Y7AMpQf9+rL/c7CS3KtbvnDcxCYNei6+xcL
dcZSXTpSpsFK4bBC3CQLu5fjO6P3TsLhkGfVG2dY2M7IHzeK/wFCq0esfedY
+GR/E13k1zD0OmkI8i2y8AL3qipnwUHImvBPv7fCQuWP7gcjX/fAgxvfz89w
OqHSWLhDkWMnmLTB7zs8Tug8pysmJdMKSqeCAwf4ndB1N6vRz6cRlgrH1E2F
nHB10kbOTvwI9Xu0PteLOOEuHmfTI/bVEBMdxjop7oQNlkYt56gVQBaflC6W
dEK1k0nnuixLQMdDp0x1kxPm6ojYJPAUwMa/ETdeSjuh5GMRkcrwHBi7O71K
Tt4J/QvfLlz8+wpKek8nBSs44aMtFla+S6ngdyH69BpFJ3z5ykusYWMSWFb9
+em+ywmDDG03fpKKA/WD53wWlJ1Qtb/FKK0gCgRS4vY5qjrhlxjt1z+dwqF7
80LzqJoT/uJiBDmdD4aMZwaUq4ed8DDP0LF0vgBw5Upa36bBrs8q42566AvG
lOUCPXTCzYfDhOPcvWH7N6PLFVpsfmuMD4l3ecJfs5SVQ7pOeGTX/S3Rid5Q
94kjJvOME55d6bepPhEIL/Ci1nZ9J4xY1t71xSEeHF+nD0dccMLvLepbXY+X
gPb2VY/F/3PC5qNK9IyELyAZZrbzqakTLocHud1smIPvgll1HJed0CDMykeC
RxCLnfkcaBZOiJGM11uahdFn6oro+A0n1DuSvPOh7Gq8bpnz2tLKCa/0bD32
3JMHD3SsNvliw8avsaDtVsyJvGeuz1+wc8JjZLmWFZVl+FycH/6e4ISChd8r
pfnmIW2v8DEgs+9v4Xc1rp4G51jLvlyaExopKp5HnUm4sK6IbQUn9FbM8fat
ZX8PH4sqxDk74d2NmtE5giPwZ+F29UY3tt5qNqfyFQah1q7E2vchW1+vKJpc
Tw9E9EsI8j1xwr8p8cThgE6wN7qbfs/LCfdeNRg4dKQVNKvLz888c8KUc7qq
uQmNIHF4w+87AU7I0URK+mX1EcKyTGQag52w5BK/dllcNcjsDDqjFs72X561
SGpOBcTFtlDDI50waSF2oPh7CShKicX9i3bCZC9N7QnPAkgPMGiwjGfzGQ12
/iidC6pCzxZrk9j4330nc1KzIO/Bpx17U53Qh7ElUGk4DY4uCxoHZjghf561
2KmJJCijnHH5m+WExxvXb27sjgPt8cdpV3Od8PbNDaqFj6Oh1qqms/KNE15P
TqBzpzwH/T4eHqViJ5Q/9sJiv2EItFzUVvEpdUIvt9KU0f4AMG10uzJd4YR1
T8Vc/hzwg55T5U9Mq51wz87/lhtZPnCj/F/u21ontHppn7BthxeMHj4+uOWT
E2rpmR4gWHqBbbaT8ONG9vqHpNaydPxgcmfRkV8tTti6qUvv3ulIoMT9tTLs
cMKvhz3j22yyYUHqUEB+FxvfX5nPJt314BxILd3c64RV0Tw68+k/gXtN7k/X
AScc2qqjtus1Nz5+OL1+9KsTCjloBUxJieCaFRXts9/Yevz9WiJZKIT+VALh
fxRZdzzW3xe3QmSUmTRUtEghO+ekklEqDTNU2kMkUZ79PPXN3llRkp1NhMqK
yJaVZG+ysqvf5/fnfV2fc88973HOfaSPuqHxBnervlEelPiVEiH+yw2PHC3e
KFfOiRHXxiseT7uh1Exhq7MpG8p07fnd9dsNU0z6HAPZliHW7KaM3qIbvqTl
fxg0noPd9fEnklbc0F3nwIzk3WlINRh0FWYjoVzNt7yP9ydApVg29gEnCc+O
b0l6vHMYcjXtGtq5SVjBvjLXWNEHBzOj/wIfCbs4LLY27umG4j3du98IkBBY
W1eO2nTAsZjNpnxrSSj/xK3hxb0W+CptzbAXJeGqc6/Oki40wumgiNQmCRIu
Uremu/yrhWaB7981NpDw1NPAW0n2lWD5ZD1v1CYSDl52kqW2lEHXX1MVrq0k
jGweoP/mLwa7h8G2N2RJSD51PHVdYyEM/2ryrNlJwpObOQbb3uTC3esiecry
JHx/fWLtoE0WTHed7g9RJOHW7xv5rralwUNz37V/lUg42tKrK9+bBCv1NQcv
q5JQk4d7SXNDHNAMBW5WaBDxv85KbVN8DdwlRsEKB0k4LCBv+XwuCjy03Iv9
kTgv3sw4uSwMhLMqJuYPkzDwrNzOTRHBECTPs+HCMRKyyfzJ2GoSAFJvjh4r
NiThn0+5g4kVvhC5kXl/hzEJreIbm7uGvGBbcHGU52kS2uT/F6Mw4wHxguxf
p84S913Cbx2jniD/FBbOmxH3iSfzMJ74Q/o/0vYCSxL6/UfXWh55Sby3Ck7J
2JCw35munV+QA/mTS25PLpGwCfXXxyU3At7QSBi9QkItiRM9dWemoKz74bdT
N0govM5BjSOFGw0tcthzbpNQXGgx98lVIfyVGSB75R4J3R+m5qdc4sdAAQcD
USci3rHhsjBzblS/Znyn5CEJNwVYX3kmz4E/Pu3xc3xMwtvSq4+yef4ButTq
bBkKCW+8I89f5loAOaeB1jo6CS8eyPoXy5qBquqSFcoTElqzJI55FPyCezte
bVF0J6GQhLrCSNUwiNLIRzq9SBinKyzYP98Hee2W1738SHggfp5Hnb8brFU0
PLWDSHhvUk1nb/Z34PAWTxsNIWHM8FzCK1YzxA3ONIZFkJB78zQ50LgBjh+q
nzd4SeAr9nJlTUk1TIalbFh8TULX1VkTFvsrIGiWqHkcCavITiGxiSWgaXzj
smkSCb0DOG6sW/oInXF6T7lTSeijkyr9+18eMNi3J2VnkLA5lidwj2w27LRk
r7XLIWGlkIKrjUo6fM3qnBZ5T8J1Pyd3NXAlg4NggXhJIQlbZ4Iz51pjQfx6
qKZjEQnv1J7Yf/ZtNLwvcraWKSNhmqDV2PvESLDZcJZeV0HwtWTig4hlKHA9
2B9L+UrCy+/O2i/tD4L4GsHKvXUk7C797yQPmz+c2Dk2/qORhCHmYztmj/vA
NO3LWq8WEg4c0Zned9kTgr/HHtD+TkJlzr+agTqeoHWAaT7aSeDXopszaukH
Xd4XSWE9BL/eRO1M9YwC1pDOK4MBEubp2n/Uj8mB3brSZQvDBL9uBNm//fEN
asIXh+LGCX0cdjG2nZ+F+7+b15hOkVAi3GOww5IPJU9m7eP+TeBdaZB56rMg
FsT7nc1eIOFkapgnx4fVeJHD3sVuhYTpDy8etZ7jQm6r4xEibGRkaR1jDvGx
Y1L2rk/FnGSs3xMgNJu1DKeEePoceMiovje89yFrDmav9/HI8JPRUN9/6bLx
NIQWF+2pEySjyIJV0dPicdCRjjpJWUdGtz3NZeH7hqDngdv9veJk/Cxjb+Wf
0AtPa82f/1hPRpTltpia+wnyu9TyPTeSscqUJnZzuQ3q6aI/tWTIuOeZ3nHv
Td/AuWOKY3Q7GXmPD3vl7q4HKdVaubCdZHxnmBQTMVQFH32SDQ3kyfjY9bJ9
UepnsBt+dndBkYw3zI5c0ncoBt7D1/zjlMkox9+WV7tSCG8jjuScVyPWyrE+
Ry7lgsmcTPsqLTI6bUik6H/LhLmT//5k6ZCRW/ETc2BbGoQndMjY6ZJRkOUx
/tAoEZDz/VERPTKakMOPPXF6A31Wz28UGxDxHnaYdHm/gmc5Tl4OJ8hY4Xe4
jqcnAvYKm6RvOU3GX6Ztfg9mnkPDDcVvtWfJKB1XRYncEAgPS9Ysks2IeBvS
Rtv3+oFk9tyvCUsy/tTbGm9ywxtyY7sGrG3I+P4dS/HLBk8wC6n8UXOJjN+v
ueT+o3nCwrOsJp2rRD1lxvtvx/hByOPIqpQbZAwd3iKRPhwJ6nf+K950h4y6
k09UJLSyoNXaMc/7HoHXki5jI6UeXE5Zpf29T8ZXSydDxkN+gaSuXtzdh2S8
NmQUYPVmFeYq74vsfETGVrv9Eaq2QmgmKxVkTCbjMQpsmmRfgwviXJ4faAR/
6sE68wAPhvBO0PeyyJjYnhnasY0T1ZdaXCP/I2OAtMKJVK9/0DpadE/Qk4zx
lf/2lrIvgcuPpGtkHzK+/s94zNz+N0jWBllP+JMxWM+lITFxCnI/Uc5ZB5Nx
+8N1Cts2j4NZxo3jNaFkjJUkz1PYhmDh9ZnDOi/I2MuWdPRYRS+EBB3UTHlJ
Rubo/pH5E12g/nTH/k0xZLQKjidZd7VDq8vand5xZNz48bhTg1wzuNxc3vQ3
kYwKWj/Mpg41gKRVv9jdFDIKV8VUZUjWQO6J2jWd6QR+H2MXHtVUgBnkcRpn
k1G29ssdZ8dSWNj3eqkwl4xJny8WN7Z/gpCtXlMKBWTMtk5WOliZD+qiD4de
fCTjj/XCn+eHc6B11cWfAiVkDNwNzH0DGeAyb9hM+kxGg6Yj5+X3p4LksEr1
+BcyPuWmAqskAXLbN5VeqCaj482Vi3Kn3oDZV9786joySiR1dl9/+woWCqfT
DzYR/DQOmFe//wJCUjvi37aQ0SLUz+JbRgiov/octfE7Gb8NaktbjQVCq39a
sFcnGXcI3rlxYMkPXJhhXn+6Cb5I8vzof+oDks5M5p1+Il5b+ZHuaE/IvXb3
8Y8hMk7Zdnd2T3uAmbmZ44kxMvIxNcNaxnxgwVD3RuEvMl5tlXDwiQmBEG15
W4UZgk9PTqiJkZJBfa+46Ys5MnaMtsldYiuH1s1sxgJLZLwbmsAtvKUfXNaO
HCH9IaNSZoKI7yM2lORs0hpno+CFcXqNhKwg5s4WKl3goqC6T7ukZ6AAmg3E
7armoWDTfrmMZ+m8uNDit+UgPwWFLb7hgA0Xhnx5LPFWkIJqTx7YvaxiQ/X8
K4Ib11HQMujNl8LUZWhNPrnKS4xCvFu91xbXz4FLpMbKiiQF/33k0P9cMw2S
vttmbktTML907f5Ytl+QSxMY6dhMwZOSZxWsvIbB7P581/FtFLRqnzC0FuqH
BbvulgI54vwbG596WXZDyPmqGvndFJynMUo/RHSAun52WYQCBR9+v/1tbVAL
tGpEFazZT8GfzeuWKu0bwWXPs0w3FQo+q81R3LyqDtT/ro1WVSfyL+FO9Fv+
Agt1Yb6TWhQc+mf7WWddGeS+3kZJBAo+rlFv/iFeBC7OyXfsDlPwqvOTQuE8
gm8GB6w2HaPg8JeEziJSDixs+GDYakjBw49cOeYwA3In9DT8jSnoIvCmxiD2
LTwsqt1x3ISC3J/ThgSk40E10Eyc+zyxtj/0qu3Na5i72s31yZyo/6ct2p/X
vYQcjZszrhcoSG+Z/e/XwzBwXjPTrXyRgkERWRcMuYJB9efjunE7CvatXWne
8twf5tK5PsZdp+CRFv7U5/y+xPvD6+3F2xR04G3i/1HiCc6m4hEb7lFw7lun
87EFD1DdHeX+7T4Rb7VyQcQdX5hb2eHq85CCEooyC8vL4ZBTm3bN4DEFp6eu
izhszATnaI3znBQKatmdWLvboAFUHxQfKaRTMGFoZMNX+WmYO2ak/PAJBXcY
7T+48pkXc6SaZPa7U/D8WUdjGxEhdB63Eh71omD94u9/XHv4UPVT/98YPwpq
pEo9f3RkFc753x23DiLinU7pEEZ2zLky/10ylIIz5rVyV5eWwVmdWtkQQcGK
WQX+rWlzoMq/Os/zJQVHQytLe68Q5//wi9OLoeDK7dM6oc3jkJMmFcwWT8GY
XZlyakpD8IDxmvk+iYJgxlCZjewFlfPy951SKbhH8u1X04afMLsz++LeTAoK
SJvmLle3QdbywVNDORRsfCgTNjzWBE41n3Wi31PQOyp+t9BCHai8Oqlg9YHg
7+NDP56xqmD2fusG8WIKOvY4/0g+/Rmy9C7y1ZVR8NArLvtv64vBaf3IwrMv
BB+k9Uq7rQpBZcxx8HA1BW/t5jIZq38Hsx+Wv/2poyD/5sCA62czIcuPWfqu
iYI6c3lZbZdTwclOINOhlYKaURnhiYwEUFELfrWng8Avf+MmrvIYmF292bf/
JwV9PjUZNSy+hKyOOHJULwWz3dTUbvSHg1PqvjvmgxSMoFdu2CDzHFToeZYi
oxSUOcrBbX0vAGbP6hpWTxB85Hr8QjTBF7J2VKk/naZg2j1ytcRjL3BaOrPj
0BwFdb9pSA42eYBKdYfY8iIFTa8FzFz09IbZqCtc2X8oKCRsO2iz9jlYaDx0
fcdGxT69bUoVFUnwPjr/XiAHFb+pvo7tbqoAqTVs1x24qLj58dlf6meH4dGD
IzbG3FTUU1jN1bieC9s7/zu/h5eKo+35Ww9dEEJN/eoTvHxUrP10XTjoDT+G
pa892s9PxZCvtxRbWdy4JHVeu1iAig/TJcq8j3KgBTNMOUqIiscYW06mR/+B
vPHO3W5rqXiYy9xPi3cBxF8neGiIUHF9tcSpxOIZcDJzGpsTpWLpBsNzD2ES
GgTgRJY4cV45d6VS7gjsK1md4iBJxd6yEIvTC/3g7dIkqChFxS1PTOv9hHtg
VCHKfmwDFV1jD5wRyf4B+r036hI2UvHB8ed5R+60QmyIyv5rm6noLtu897NY
E3AZ//PbLkNFskH2r25GHVzkrJzu3krFL6vZBH7vrIIPuYFnorZTEa0vytqd
+wzSd22yrOSI+KMmchEXiuHRtt1iUjup+FiiRknzwAdoaZ190LKLiub6x77m
tuaCivfH5sA9RL5bAyakHLLA/7C7mokCFZduntaBxjSYXDgbIqRIxeXaxxpZ
75LgRMrmxa/7qPhp46D+oY5YSLw8Yu6uREWtrDXpl/ujgXd99vtjKlTMfyLZ
kGwRBVdrKBtWqRL59FEVNfeEQSnD0K1YjYpKjT+myXzBsFVD7AdFg4oO8g/j
S2r8gTLx8+BBLSp2lh5Zv87cFzpeJ0YuaVOx7fTdOS99L9A0f/DvnQ7x/aqo
iNr//z9SEG0fIBV5j/Fku8p5w1wJX5GSLhWtzmc15JwPgrOu32QmDxP7TLLS
hHcspO99SX97lNg/fe+im1kRCPbd7L15jIqH0mMqusW64HbogSM7Dagof/3U
77G1y1BpzPam35CKVZJnT46Q1uAOrqpVr49TsZrnza9DpoLIzAu6amtMxTdS
569GPFyNPXdtyzeeouLt8P398otciNv37Px+morpzRa/s4AdI9t+/xdyhorS
TqtuDF9YgRXvT8PnzlFRVFzVRvbMPJgf8TAUMaVi+PS5syUKM5CzeC6pzoyK
obrXsoXcf4Fo6pY13hZU/MxlktU+MQyOdqO3jayI8/jfk0pM+qFufU41rzUV
X+X0Fzj81w17a6l7P9tQcf5hUqT6tw7wYBr5MC5SMVVX2f5AdgsMaYhP4mUq
XlL3JduTG0HvV9epv3ZUfGf3Wv0+Tx3ExCSl51+lYrCJZ7KpVSWwWzivc71O
xA+Pv7vnbRlYCx26r3qTitH3/6iaNBZBQSl/08wtKt7V1g3oO10IUo+aVdLv
EHju2zI5sjEXHiq+CrprT8UJl/SUty2Z0NR3a26PAxULny/WnT+XBkphqqbD
jlR0uyVnbTGcCL4n2XNjnajYz9FkFqgcC+NcXyXtnKmoSjIrELOKBsP3wa4y
LlSE1nstMW6REG9/sb3TlYoGS0c+P3ENBW5Zea2IxwQ+xfMndMlBYNc+F25O
oqKsRwCfzSV/KPYpWhGnUPG80hVL19W+sPmo54UmKhVZJQMiccOecP6PIecz
OhWZ9Om00HYP8MxenXCQScXGeyDA3eYNJXcqjKdZVLzYu9U18VEwLMk+nY19
SsVxOXmLQZ142Nd5NMzyGRV1TM3j0oOK4VowFwp7UPFt46SySGsXRBqX9Jd6
UpFay+B6Q1+GJm66h6s38f1uIx07xzXI/xH37/WlonNx+Y18e0HUffivuceP
iitX7t/+/XY1uih+cHseQMViNel/z7VWYeqg29bjQVQM0G7kiHzKjgNRWhVs
zwn+bDGVD5xcAWmzpTvZIVTseRluvad3Hs4I54ncDKPiE+0/l5nvZsC94mHe
pggintb52v///lpEVbVpfEHg4V6on/FjBBbUf3P9F0VFmeVfNr3yA7B3KjNR
+xUV96/KaCo40QNXEhxPTUVTUdsV+vTVOiHi4v65NzGEP68POVg+2QoN6yfD
LWKpuFPwCEMsuAlWN6QcEoqn4tYU9n2r/9YBut8ZLEmg4td3+6inBb6Cs668
l0sS4bcnljObdpTD26URJYW3VFxVf3z+3MYS6MtIaO1OoSKP/aPHp3w+gtSt
6+TgNIJPZctpkYLv4fS2HduNMgj9iXx2TWVmw3/f+7/8yyT8fs6vpexzOnwI
iLHPyqaiJalTlnL5Lfw2uix24x0VB1Q8br44HQ/yXFvzN+ZR8bJGqF7Hzhi4
VNBl2/Ceikdw8QtXyUsIdYriflpAxZRVn5QMOCKgTt46WesD0V+WwkJ+BzwH
7n5pk8mPVHS65i3eKRwIB198n48poqJd876k/PN+4HQu7IV5CRV94wdt6mO9
IVHA/LBgGfH3ah//tah5QneZxHDxZyr6WXdWOZzwBElys/fDCipKiNKDVIT9
wFg1SEW+kooFfruFc8IjgDVxpr2rioq65+Wf2v5Ih4LYddSgairqU0VW9sxV
w7R1vaxhLRWNhS5PDK0dhV0SvlV/66ioqey3UdqNE21rjR0yG6h4WsXLuEJU
CJ8/FZC43kTwSS799J6Pa7AGvhZIN1OxyIV8dtsoD3ItuF+qb6HiwnfRc1NF
nKiVZsD7pI2KB37uPGB7kg0dr/OmaH6nYseXfU/nx5Ygfkv5mV8dVORau5zq
oTEHP1tZi687qRhX1iqoZDYN4n5Hosy6qLj7UQT/M/0JOG7AeVSgh4ot092t
y3+HgMFePFLUS8UbJ236i171wfs8qq9zPxXDvnTmhPB0w6QDqO4ZJPz87Rir
T7oDduz++/3nEBX96xpr7FRawLqngBY4QsXrwqOZRjsaITDs8Q6DMaK/N75n
D42shSoTzeo/41TkCLy1GLy+EvwfV9xt+UXF74acVk+VysAs5rxw+hQVPQT2
vXVTK4LN1X3p7jNUrBgQt7m5kA8Dvx3P2P2mImNd/KPAvBxI3sT+++A84dej
1tIGLhlw/5hPsMQiFU99iTo1xpcCmvc2qk8tEfOG3JGfR5zjgS00qa1yhZh3
+m7fefH7NXwu0ngc85fQR9n01sNmL8FrpFyazEbDvYo/j45MhMFZkfMfTDlo
KF5UV8N7PRiktPts9nPRcN9/DpluQ/7QbefIzs9Nw2/Flo9FDX0h3ovtdR8P
DSXv0QKOCHrB3RzvIx9W09C+ZUO81g8POPBTeuA5Pw1/mFn8vRnhAys8SU8d
BGh4x8rxtqJ2KBTv09hlJETDhwJOhjlr0uCZeXnl9rU0jJuge7BfqYZT9HO3
/66jYaX7J81fj8ZBPKlXoFWUhoabvryJnF2FPxodUtPFabjdgjGzeFkIY1b+
nfKQpOF7toLBEFl+vCnrPW0nRcPZxxVGYlu4cZ+xdKCONA3Pf2YF3llkx3nn
xAOSm4h8Mv1N1iv9gQ9R6i1Tm2m49HyCVpM9D8yKzy5VMjRc3bTvu/GhGTCa
Oiv1ZhsND1z927ZX7xesk+rNJ8vS8PiVO4l1V4ahVdfhgtkOGvK6rq/Z9LIP
om79+7t/Fw2rYqQHVz52wdVAr5f8e2h40V5tm7/Kd5Av3KDbL0/Duq2sBwsS
zTDTn9D7YS8N01h5U/pT9fBeUJ0Vso+GFwofBUVvrwaq2mc5RyUa5vUHt0gn
lcMx27MVRio0PLLOekJSowQEn/XckFUlzreZOmGk+RGa0u/x/1OjYV/XnhVD
6zwIa/+b3KpBwwihHZe3vcgi5j8v4wwtGi57JD+RK06DnfIbJj0OEvVXaR9i
Hk2CibMJfleAhlL+AvM2GrGQTVJThkM01DX04/+9MxrcYsuaJA/T8EuFgaBQ
/QvQrT3jPH2EhiX2w1pXE0Ng9UK3xFc9GsZreIeKvAmEui338t7o01CmdZdf
k78fBBv8taAY0pArxK+9Jd0bLjh6rpgdp2Fpjq7Xn02esD1cKlLJmKjXjfGe
qTRPGCmJhzWnaHg74tPn7XH+kD6m2t1/moZbpe7+c34UDS5iZfSPZ2h4V/Tb
cFJUAejonNkeeo7A8w9tsyajA7iudZc5mtIwSPiRjLb+ElT52F87bk7DDQ1B
ei871qB/7h9eOUsaXnL6mvJ1RADNuj0S/1nRsPb7UKdyKi9u5pM63mZNw+wq
2yn3tVw4oBQ/nmFLQxqv/Yna42yYbKnq43mJwKOxsS3VdQnuM0v3XbWjoWpY
8xoV6m9QX2zV2nKVhj3XH6ndz5qClTvjeu3XaKiVV7uBunMcPvWwmwTeIOp3
ozriDccQME3FLxjfoqHIsou6c1kv6H/dfZ33Dg0LorRqO491gcAhuF98l4Yj
JRdnJOvaoSH7DNntHg1ReOKcoWgzBO++/kzVkYa2uSEV9/c2gEWUW+DkfRpe
+RYp/GqqGjaJ+kUlPqDhP5mfSr7xFdDz35tEu4c01Fxi3qAbl0Lcn7zsTa40
ZClL2JzJ+wS3HWs+tT6ioYn27Ey8Zz7sG+yp8nejIXf0+83sGTkwaznffJxM
w1M2Ria1mRmQW8ffw02lITObEaPZkgJuR7eMf6LRMPFiLPvP+wmA71UWHjFo
KOuoZaXM9wa4FA04D7BoaGd2d4fPvVfw5fUFwV9PCD+y3G0VxPcCvCUd1yf8
R+hxus9bwSIETLyebL/sTpw/9p9aeHQgiHOEK270pOFi9Eknxgc/aHdO1Wzx
Ivic/ixx3V4fiBwtOernQ8OruxZFuRw94ZJt6ykjPxpmyOoMqoh4gty3MctV
AQSfjtu4Czn5wqgB+7WPgTT86e4XXhMQBmkfxBxdg2nYnaBSf3JnGjgp7yYp
hxB60hsZav5XCerxOv+Nh9JwvUAuZv8cghXpMwFx4TQc8MgmDQVz4Ce/a5EX
XxD19nsVWTVCzPvcbgkbogh/zBXTFxhYg/qPfbO+vaThJ6Eam2PsvCgwGfPR
J5qGVs47ii9WcGKDXV6lQQwNp96mX/tqyIbBbdXfOGMJPbDkr0l9WwIL456u
wjgauq6XN70lOQebSuZGHybQMIDzILVq/zT0qPHP70+i4YL9gcSJuXGITd7M
MZZMw6bj5tuik4fgpoyKQGwKDZ8dTCm3P90HisH6krZpNBytmq+Sye+CWb4L
26QyaNjxSNl71Os75FIc9jZl0lDn9PPGkLRmcJtlaXhn09CUMzh5Z2oD4I2w
I/rvaKjiWV0VVFYDXJ0pJznyaFjDI6QgZvoFKkxKLAre0zCacxObcmcpeJa3
XHEuoKGnzmHnF4pFcFp77N6+DzTccWXnqcsnC0A8nc1t5CMNv+8bQi2Td9Au
K/Y0pojwjzXTogFqmRAZtsvfuoSGfM+tF/NTU+GSkM4LyTLCf3cvdDvIJoIc
0yS+4TMNlTSpvnfC38DIwtVMzwoaOpLSDMsGXkHKnccf9CppOJGngUFfXsD9
Hp8vbF+JfuZqufRlOgTUTWOa3lcT+dJ/1ryXCoKVqtyfTrWEH2+4I1It5Q+f
sHpkbz0Nn5Ibi5wyfICZ3f17qIHgywbvRI93ntAaVrZS3kTDV0erN2uyeYI8
NYEzrpmG1+U2KnEF+wL1ihffk1Yaup0NaMgpjIBvhg5rr7TTMNzVKryMNwt2
7zsneaSDhhzrX7iJ2jcCWUxj87ZOon8czTFTNJyBhiVpOY4uGjpQZR/3Ba1G
uS42he5uGtrIpg98GRDER2V9yp96ifUHuVL7ttVYk1ihGdVP4LV87mPUMhdu
9U0+RB6kYX2l7ZUhNnZ0fuCrf2GYhvo3+EPcvYj3q4XTSe1RGh5sf+ORbELw
C83ObxinocRq3oFBsWlwlNW+sDRBQ6O1r0mixuNQzrfFrm2ShquymtXYPwyC
9CTnrdxpot8kb390SLsX7n0bdHg+S/hvWx3w7/kJpe+rXJznCL4zz8c7YxtI
vkylnFsg8lESHr7+oAluswKeqCzR8F6Fg8apgDr4dPOhl8gKDRV0HrSPf68E
0VOWgdN/aOj/p/GQdEkZXD8A4fX/iLXoE87d0cR7UmpbdBo7HdPT7tw5HFgA
wmw8CT6cdFQKT0ln2/0O7PpHUu+uomNbdly2REUG5FXW5JzgoWNo/MKXVtcU
EEzLKJRfTcf1xx8lbiqKh0tBwaX8/HTkmyvN+CsbAzmPHlWNrKEjt+HZuEcP
XgKfrXXDF0E6zu+dsFQSDAfro7pt8cJ0PHE/o/6zUzBk7JbrerqOjucGKq+d
H/YHbmG+wauixL6x8TWDI75g+Xt8/Kg4HVtzBT/osnlBWnv97HZJIv8NCR0u
PR7A9Sl7mVOKjjfNGFfZ//mA2ZtQjt4NdOQPUq3coRsGye6k1cUb6RjzRjTp
rmU6sN27KPxqMx1X2r5kF9+og7PnjkpQZehIbZO+9s1/EuI1d22y2UbHBxJX
uiWSefDPZgFZHVk67l38nLukJYQmq6b2bNxBx9iF6XTWYz6MHWlSWtlJx8NX
5Vsn6atwqTZX4/tuOsrugv6au+xonB2B7+WJeOG+0qmwAtFh1GOhe+mYeUvL
grN3DuYodsYu++g4/mjr6Tb3aTC8on/OVImOrr1x2/35JyDKUN5KVYWOl292
U56YDsGsovBlMVU6HkyrOhydS/RDsdkbs2p09C8c3hg4+xMillruNWoQ33OR
bAt722DyZ/7DDC3ie/Hn7mmLTXCkLIrsd5COpU3MR4+I92FIIoN1D+i47No/
7/OsCsZ8rnmePERHLodnIqUnPwM+MArYe5iOO4YWbSVFiyHQQjFM4CgdFT4a
3Kk8XghDIPJqTI+O0DVlePnjO9CWnY+r0qfjbINcyQxmgh/f95REQzpGKdb5
Kx5MhQ/TGUvU43R8YqPmovMwAcba3fVMjek4s0lXb9/XGFhfcslf4RQdvyw4
bpfhewV6SZqdnCZ0rKovDQ1bFwFOAet2t58h+Jd0wvr5mefw6vHIg7RzdOy9
tuPgu+gAqLlcXPTElI4JemIX3jX7wopRmMAFczrOtYWx1n70gl0qjubKlgS/
HRu+3OrwgPPShm9WX6BjjtPofpsWL2BybZ36aU3HyCca3aGng4j5alE7x5aO
FhJdD3+WxUFnU/1/npfoWFCo3fpjqgTWFCY0XbKjY0dndfjHlV7QeEPbonGV
js9n3/MS3oNXvcxvC12no+GNEt+AHEEMeLA/t/8GUf9sAWHO6jX46cJqroJb
dOx6Y2DTHsmDE0e7T/rfIfhh7VSkpsGJG/bmhV+3p6Pwh7zeoKP/QF/cb1DH
gY5jh9RTVtkvgvPf68pi9+l4JK5F7XLqLLweQMqoEx3tivW70xsmoa5GsqrI
mY68nTJdihdG4U/OpHiICx2HAjcL46EB2B1VcenuIzpeX1Rmsdb3gNnTlylH
3Aj9RFv8qbv3A1j2LktSZDrKl9GM4qdaIMP0lN4UhY6FvTqch1wboQt2+pfT
iHxWFWhJv60FgZ1snS8YdNS3NeExL/kCmsKtu5xYdGTrk7W1mC2FawupDwyf
0nG7511NO/4iCOx6WrTlGaHPmpQJlfx8KK6wEZh3p2Pgyi0pc98c+JWmZl7t
SeCnnHor80IGSIcKvXntTcdjMsIDCyNvwZA2OOnqS8ef53hq7l2Jh4c3Pmqf
8qejacQhndO/XkPM6ef/yQXSUXD4Vjyv+Uuo17BvWgmiY5BbBpfFYhj8lTm2
pfE5HTkj489efBgM8nybbyeEEvVeZXQtd9EfzKfn3lHC6cgykqkKs/CFJ+01
nOdfEHp4t9bOSM4LsopjT8pH0ZGun7rasdUDuhPJ4Ryv6KicXWx384APCAac
H2yNpuOlZJ7610dCQOvxXuXUGMLPlBeSU7+9heuXuSmsWDpm6bu/sYiohGCj
zkrLeKJ+OO7xwn8ESpRzxJUS6ShyZ0P+uUdcOLnB+xJvMuEv06l+djZCuInr
akrnWzoK3Tg87pHCj0ZjB5eyUukYQtM88ziSG12axPQ80um49Jfj0/VrHBhb
MO53MZPQp/OaVIHJP9AYU/ZDLZvgw62lFVXzBWDzerFL8B1RD37TkHvVM7D3
wYMHfbl0jNb4ajchNQmWF04UvX9Px7PtC8+PKY3Af0dlBfwKCD1e/s61w7gf
chT+mF37QPipxtVTdWe6oVfsW8zBTwQ/yj7v01LsAEFDZYvZIjpaW8sOb9Np
AXWyn1BSCR1JCpyTfbsb4XLGr9KLZXQ8WkU1VnlRC94DJx5JltNR5rdVod26
SsiTSlasraAju0Wgiyu1DPqM+fpZlXR8vCeU1J5fBEKM62HaX+konbQ6QOVQ
IWi++3xyppqOjK/Bojpbc+HK6PZVibV0NDAMcxcfyQTfzYz3tvWEnw71UpPv
pUH+mW57iUZi3fyqW2d3Egw8BdmaJjqKFtxKknCNhbUFL9qZzYTfltuPboiO
Bu3JZR+tVjr6PjhzLZEzCq5ttzg63UbHkzeaOETnQ8HfLHcp/jsd7/0QFdn/
KwgKPcXTbH4Q+rEqULlR6g9Dn5yuiP8k+t1/397eMvcFkd8NUtVdBD8ZuTa9
Jl6gs2t/HaOH0OPsca/Mbx5w44IPS7OPjtoh3r77B70g0G9cc6qfjp5e6qdt
kwPhY5nRZNwgHV91vP1YxE7Md4sJb6yH6ZjGIylBX/4AYnt5LcVGif4g+3An
38p3wEtXhb+O0bGyTIHfrnwebgWXltEn6NjfN3T7bScfBldufawxSceRs47/
LPoEsegvdd/kFB3fKPD2PNXnwzGln/2xM3S8GK7tG5q3CsWvHQy/8JuOv1nF
hh9H2fFQePgp0Xk6Biv6vJXw+QO3axdXVS0Q9096IGltuwDBnGb5tCU6xp26
5KAkNQtFajn31FeIeYNVuLYjYBLGbonK/fpD6Olnfs5D01GQeOn4/c0/4j4J
6nv2eA6AblOdrxU7A8teGeSvDemBO7yKeiKcDJyPV3rbldgJIdpey1+4GBgV
ExRmYtgGJfdG06jcDEy7+yBox/cmmIgxuKrGy8BJc93Dgsr1sL4tbsPEagYK
LGgNHbL+CkcEuOtj+Bl4Xn0iXuVKOdgfsntiKcBArw3ZlQyjEgh7UKy1ToiB
gmw3deWaPkJZwpapCmEG8qxav/Hsofcw+YMcS1nHwGDRgFfkhGzYsO6Hpaoo
A1eVp4wtd6WDnp7W2nExBm6c8m/78fQtODwK/fxagoHTZgtPxm/EQ0TK/GOL
9Qzk1x0YVlWPgfKec/vXbmCgxgu1Q/VVL2FaPGugXJqB0Z+YIky+CNhotC6C
vImB5W/UdhcFPQd9yr3TB7YwcOwv1fKpYCDcz6zhHpMh1msuvRQ38YPIQfmC
6G0M1D4td9gmwhu+bPBwMJdloGbx/M7w/Z4we3JYTngHA2eLXHLUzD1hM/NY
x+edDPyPws5Rp+oHhrlv/Ei7GbjEUzRNP/wCnMY4j6nIM/BG03ibSVAGRG25
tDKiwMAXMUYa4oG1YFHm8/azIgMT7v/+cDTjF4jeLLSO3s/AA14J5LeL3Fgr
OCpEVmag5E+RhTwTIXTPlCwyP8DAWLOvGi/K+fComZ7jATUGXvDW4NhetQrZ
/tzftlaDgc/CDbk3pLFj/qtXTWOaDGzNlthmlLUCznq1rAptBpr7n9mqaTgP
+0dXVGN0CDx1+Rne/dPEvLN7iIIMZAgONvAnTkCcilmopS4Dyfo9eTrdQ3Cp
jWWodoSBme+PK5Yr9sFGcubyOj0G6tqn1s7adkHr1u7kiWMM/F2XmisY2A7+
5YLWlQYMPHJu1DLS9xucuK0tFGvEwCFB38STlHrgXXvzE+0EA/PPcEhN232F
4uznDhdOEvXjtVHZxFcOJIuyrRqnGRiBIo/4M4pB/d90o+gZBt4r/a9wxfQD
zLzewpo8y8AU53epYy9zIUXfWPXreQaOfxNMGPqbCTfGHw/GmTFQtv7YRwWd
NNjunxDCsGCgqLMP+/iNRPip2mJgY0Xgt1ua5wLjDYR951rWtGbgPo1P3Mv+
r+AcVSlZ3Jbg517+XTs7IkBY1vbC9EUG7m99+GhT/3Oo+uIlWHOZgUdf3vVZ
tzoQntzN/5hwhYE++rl5Lhv8AEWG77GuMXCib9Ph14LesPxOfOvFGwxUOHuC
dHXEA3KsjjRq3yLihbBtkXvgBffYHZmSdxjIdH9YqBMQCHtiow7M3mVgvLfC
wHZmLAwYVg/U3mOg8OH5eLvvxfDq19LzJEcG1m2Zmu2R7wWrwJ0GT50YOPjG
ttXJlw0lNM4vXXIm+OLgFWKaLIgNPxhJOi4MnHMut7hevga96OlWUo8YiPJz
Wi4ePKi/46fA3GMGPn8feTlvIydyfl3zsZ7EQDj81nVx1T/4cE/z3lsKA0m3
NW4v71kEV7HrMs9oDHw8ek3p/u1ZUHkf1GDHYOCXQ9vZFYn3w4R1CQNZDBw+
U2My3DsCCZxTKtJPGdi7y7bZsr4f7OI3Dcz/R/BLl+lZktkNm04cf97oTuRr
6sbWmtcBbVOu+qmeBF/Ef31ONW6BwOC4RXdvBh47c5tHY7gBTmp9S7zqy8AH
X6XUlNJqgK+Lw0rXn/C3alkhj4EKKGPuE9gUyMBIHu2opyqlQN1l/WExiIF6
5JVSlyufQKvGw/7bcwYWlZHx1Iv3MOeYtyU9lLhvxoTJbFg2pEsM1nuGM9Cv
9k5Bq0c63C4QZVx/wUBKZriaKysZdlzUVTkSReAfWmBooxoHPavu9W9+ReyP
0qP//YqGiMQXwcvRBB8FnvCm8USB6cmqYy0xDFyt7MlZHRoKwki5FBBL+NUd
+QMnwoKgYp8y6WQ8AwvZazZxPfIHmszgc/5EBgZZllWpSvuC5rrwjPIkBrrl
ph3Zwe4F0xwnqxlvGfjh8I4QB2LeSprhGIJU4rztPIGZNd5g15fDsZJG1EOv
feVwZDBIf7u5MTeDgQ1TWx1Hh+OhqWyTulMWAx217ZRC40vAK6fBZF/O//PZ
2Kqr0wN6cU/ujL0j4r8iNZdU/IG/zzX/i89joN1cPPndJQHM+W8i2i6fgYrN
2S6D8wJo7xpduKWQgaUOPsfiBVfjzpvnWzs+MLBPVKFDO4YLuyz4ZkI+MZB9
/13h3StsGGL0QeBcMQN3/ZabrJ5ehtPajjvXlhL+E1e/9cLfOeBTkDtcXUbg
X7JoVzwyDcUb2y88K2dg2+lmuXNbfsEjQW+Xo18YmNGc4BAcPgzK/w4FsFcx
cIpF4z29th/Gfv1+W/iVgcmRSgobz3VDTFdChWsN0Z/mzLX6mR1gVX+h90Ad
oSfB0L8s5xYQK177d6qegfeb2AriTzRCTUaZZEojA9X2h40dLKmFJ69dlW9+
I/Ipe9fTLVMJOoEKxnItBN6+Q4N7iflrntl9vaeV6B9sw+2daUWQ9iCIEdnO
wPC18nx3NxbC9asGkRYdhB9WKL/SmnsHW0z/5Ip3MtA2zv32QF4mtB1Lb2z4
yUAtlfUTqpAG/upXJry7Cb9N/M3TW5EIhrvWrzbqJfqDX4eRrHQscEhVb+Pp
J/R75Yqsu1E05PPRdEoGGPh+/ajyypVIcFpWMacMEXriP86VfDMU5MeG7muN
MFDnY+Lg5gdB0NcR4T0/Sqwf8aqeuuAPL6pPJWSOMzBgz+tobR5fOP+Bq9T+
F9H/FVZbFA15gmBqbueeKQa+k7ArKiLei5+jbi8OThP5kELb+8V9gOK7RTRm
loHiSdyMf3uegzqtaa/tHDGPbFHSzptLgEmH/wykFxgo45LaZZ9bCvGXtO1a
Fxl4Zq+orh/0wsUzk+TAZQYuRukdjOH+B1JHYkJP/WEgR2HUjEKhADaomGWt
+UfwdWa7jH+FALrLrqmtYGMit1bYyzUdvHhY/NMwk4OJRWJ8gjOuXLjC7cR1
iIuJl9mPWJxqY8Os+R2b/6xiYqHTnacOectwe+i7Rh4PE83ey2vuqZ0D2Taf
sw9WM7Fh4qLBRMk0dH45bL+fn4mu98PuOXRNQPD7+Wfja5iYFPjSnfvaMBgn
JcUkCDLxR8KT0nUDfcATYfPxijAT+06PvX22vxs+eYq0y6xjYt3bc+WWhh3g
Qiqf/SHCxAr38xEX9FqAz8H+rJ8YE6PobhPd6o0QbieRdUSCiT9d/wkqfKoF
ebOPIguSTNy58rpDUKMSPhhdu58kxURzg2/OLvFlcAqEGq2lmbhOTkT8v94i
6FF6p7RuExNHJWWOp3oVgpOcjX/ZZiYeIHOoXLuZC6ukeKZdZJhI27ZlQUgh
C4IFUk/Lb2OieIZfH3tKGuxkN03/uZ2JEiLFuoahSfB+9q9wgBwT2xWfgntH
LBwfir2nt5OJJGXHl0pL0dD53bhucRcTn7H/ial5EQX2tXOKb/cwkeVU+Wjh
cRiwlUT62CowMeT6imOxTTD45+j9ElFk4gWOfNFImQDYnjhhXL6PieXHI/y3
vfaF7BfBKY+UmHh081KVbI4X6PnpCO5VYeK5aU/r/H4PaGUO3Ok+wMQr11TX
f1P0gpsu3tWBakzMVpO24dkUACu3VBX0NZi4oi7nYLIqGrxtOj2XNZno9tf6
YdNgLmw+82QsRZuJ64sFaqebv0Ga3t7jl3SYqCt90J4kNAO6ms1JYshEg7F3
HpcWeLBJgcz/5RATm4p5g8wthfCqjNwtt8NMPFtlJGJmw48LojWVikeZGPk3
5OliOjc+43Xe3avHxNv173ouf+JAqZWN7sH6TKzcFn775eJfSP5VNmxgyMSs
FZF184GLoNN7x+CPERM711c9fbHlN9Q2iyWknSC+D3y1t9ZxCmwrC3ntTjJR
o+fSv5X6MZguvHJd4jQTY+td/A9WDwIzXaCi0oSJN28rHFON7wXxN9k7yGeZ
eCpJ3WNaqwviQy483X+eiYKr9uzxqmsHDc9Vg32mTGQc22l+SLYZKilv9ULM
mZjC3Xl0s2EDWN0/F2tkyUTOtqvxjQdqYOLqn1X/rJjYc3RS8dpMBVAt3lzJ
sGZid8z8HZ/wUlhnfKLsii0TtyhxraesKoLXh35vX3+JiXtufdIX31wAKgde
ML9eZmK00q3FVq138Hnn0T7KFYIvLRH73JQzwUx6/LDyNSam/pWVe/EpFYaF
gl4PXGdiwaOua9l6ifCI8yBn2E0m3jL+xhXw+Q2sme+7dOI2E7Wtb5qNi0dD
5IhnMdtdJr4ptU8Lko8ExU6VrVn2TFz7L8l8ziQUPtV30K45EPi7lXVzOAWB
SRmzW+o+E+9tTPcSv+kPfbnyh2qcmCjQopAZLOULD5KbXtKcmfggkSdwO78X
cL90YzvgQuhn8aYVV7MHhARstx1yZWItx287Lidv2P3068fwx0wciTlozpYS
BAWPnDafJDHxxey5xtasWDC+K03hoBD6NbDZIMNRBD8vlnZmU5lo3RKTcSak
E9g+a2l605nozn3uuEXOMmzdnRl0lcnEfao18ewmAnjEe/eUzhMm0W8Hm1pz
BPDq9KvjEv8R/F0h43E3Xvzv/Pr4X8+I+uRVudNHODHhvS9nhQcTVVdfE7qs
yIaVm3htXnoxMTOzMDPuxBKM0SnvXXyY+IVvUZlm8xsEB+fETvsR+QqYqg5e
mAJFo7sOuwKY+C9WX1pEYwxOpfZ/ZQ9i4qZj5golEwPgKHJhZ3swE5kklcBT
0T0Q+LCJkRFC7F+J9TLS74Ts70Y/3cOYaBiv8mV/eCs0Q4nm5QgmmpqWJJP/
NsLCa81grUgm2pDyL8lCHUjxZkyJvGTi3j0+zueuVYLW7V0nxl4x0XvT/P33
TmVgVfcyvvQ1E7fyknfl2xcBWUWS68UbJvqs0ywsNy2AlyE+Ng/imBh26O7a
Q3zvoGiFO/9EAhPrre0lbQsyoMeWLC6XROB13j7Hk5QCXGW/Hf4mE/xcbaVy
szke5HbdqW5OYWL1io7A96MxcMyrb2dqGuFXkSZDeWEv4fqUJfNpBpHvPvM3
lZbh4H6u8adNFhODHOhVjR+DITnPUEs9h8A/8dDhAoUAqN5YHCycy8SN1f4P
+Mi+MEHTmB7KI/qRtyJv0AkvEB5IO1GUz8RV/LaR2795gJLhzoTQQmK9O8lQ
tc0bzqREcTl+ZKL0QOaaRP/n4LROwtawiPCby+2KB58lQ7Czd/7WEia2hZ7f
L3vuC+S2r5JYLiX89ngYQ540DG06JMfGz0z8oOaxdIGTC5eiZ6uTKphIhgtl
NmZCKM1zexezkokvs3Mmzpbzo86tXqbVVyY2WvvP/EjhRptaiy6VGiYe2SX0
7sk9DqQqN2gJ1BH9xpdTbmr+D0Q/N3jeX0/4dcTuV8vmC1C6/Gm6sJGJp9uY
z1y/zMCAjbpx8DcmwsYtkksik8Bbmppwt4Xgx3F3saEtI7Br545Vx9qYGHdl
s/Z6rX4w9Iy03fydicMpJmOnsBtuT4oVzHcQeuGsaOFc3QHeZ70k6joJvl1l
PCsqb4a0XK778V2Entec6kmlN0CDtFsNtYeJXrscuyXEamCGOrPLvI/oV6Nb
CzodKkC0/yZr/wATZbb8u27yowRUDXq6Vg8xUTPg6s2K7Z/A7K25ds8wE9WN
4jzVdN6D69r65+9Hif5JVmhqOZcNYQ/0Z/zHmfh45JXeeYt0KGj7aHzrFxMj
fvtPdUAydB5USzw8xcQ1PP/c33LHwb9XKaukZ5iYMX2xiVIXDVu45S7OzjIx
bc1k0LmuSNC9+aLg6xwT0xP5D1gzQuGiVDiNtUDo79P8n4s+QUCtDNHTWSL4
EGFR0+TsDy8fBfPPLzNR1iLiZ8FGX/i4O7Au9Q8Tr53jP8Li8YLOdr+g6/8I
vkp4Gci3eMBfdx8LGXYWbsvuJD+L8YaNWl6b2zlYuDB+dTJUKRi0R937/LlY
aP5W8X77ZBxYhv+XYMTNwl+FHBFjlGJ4ZPTkLhcvC39zRbmsX+iC0GWGcuFq
FvaLlxudn1yG3CTawgN+Ft5vs3aRylqDLZaUwr0CLAy7Fb+geEIQ5/hJ9EFB
Fs6W1j11d1mN4gWPjr0UZuHR3/TxOq5VeOC2yxrzdSwsqrkvdsSEHc9KO9ev
FWXht5f+kRoeK+D09X5wpRgL02vWBAQz5yHAzcGSIcHCO0WrJJxsZyBD3n6L
9noWPlvZ4f97/BfUd9zun5VioU9A4tdI4xGY9LyZ+FaayO/zNlZ+cj8IHbxu
f3UTC3X3hpxP+t4Ne8evqGzewsLbmQEfTO78gBMvLi+2yLCQ07pHrkmnFW6f
uPjBdxsLnTI6Hv5abATPP9YMA1kW6gTc3cp8UAdJb630OXaw0FjHnfvi5iqo
vGAhkL+ThU+4jg+JmX+GEQGzhvu7WTjD0nFWuFkMqz+cey4vz8L9Rz/NBJl/
gJ13z1j1K7BwIv7tvyeceXBs02mZSEUWRu0seTQYmQVXa4wHzu9nYWjM1EIQ
ezo8IR9PElJm4eooS/fV65LhzV7DexUqLPSOlzAb2B8HpZ3HDtBUifsuu5mX
qLyGPu+jSxrqLCzzC9lYPBIFnHD447QGgZ/j95pDSWGw9Rcyk7RYeFGtbjrd
NRgORekY2B0kzucr0SyXDwDbk9qCG4HAYyTtQHaML1D+aTR+QxbWHte/aZ7q
BZGpaiHeusR5CV+Pmfd4QKHNgQvHjrAw4+SQCfsZL+gQUt7KpsfCYC4FCyMm
MY993DeYe4yFBQKprRtnomHDvb3JDgYs/HjljYi5ZD5obpF32G3EwrsOvHMC
lq1gUbdLtfc4C6e2vjpqcug3uFJ3LIcbs5AZExWb470aQ/bJfjp7ioVzu9e4
hsgK4buurSwBExZWb6AlDOXwYbPvFsPPZ1hI+7x7z+d13PgbNwlRzhH441PK
yf0cKDq1oUnNlIU3ig8cn1j6A8qv1odOmrGwWM1dNjBzAUxOS1gnWLCwvcPu
8XqLWXBkF9t2yYqF+g/7NiaVToJf+rohKWsWiq61ve3zahTSLgq/bbRh4fuD
u/j+lAxA3VpBR8+LRP00OrZ8KuqBX0X8akcvs/A0ubvz/lAnCDquXvljx8I9
mTvt9j9sg7Tzy5wjV1moV/arJI7RBCZa4/zN11kYY20QH/GkDmY3/xQpvsnC
62tjeY6/rIRgrvoNKbdZeNiCJmZ+vwzUh4u3hd1loSZfta6mfhG0V2fteXKP
hXJrJDSr2/LBLSNW2dGR4KvulgkNxxzY/DxEy9qJhV0OI4tc6zOg+LH7YUNn
FnqtZKX8p/IW7GzdjFRdWFhXyZM8GBIH3Efvntn6iIX+J7nPiW18DfG7bC0F
3VhYhVlK8eujwFDQ5PISieC76YTVV1IojE0fvjVAYWHzxjeK57YHgXfLgfsN
NBb2mfn2Xm7xg30FOx5/YLAwvGzXyMCINzS8XM9IZLHwpp1I3bodnuDE4vcI
fspCuxaxg0c/eoL4zT/+9Gcs1LDnqniyLQDyjH+F3fVgEe/l05y/D8SAlXJ3
tIUXoZeLAuVSa4vgr0Rjop4PCw9x7GrUku2BlyulGUp+LEzj0bXodGVD3e6c
95sCCP680G/+3iiIfWXxxXxBhH+cPhAu4rAGnySGVc4FszDveORdp3U8uNPH
s6EnhEXMP22xwSEcWHmf3F4TxkL1uaN1lLk/cNvsXs/7CBa2Pj3Ts3PbAgge
vDQSG0nwZ6tkUpbDDKTJnJ32f8nCgD4vkdQzv+AMt94SOZrQcyt3yVntYZgb
UeO4FcNC02smTnvP9kFI7S4+01gWShSpZerbdoFm1oZ1h+MJ/zZc1Dl+qR06
QgSkFBNZ+EDQL4Dv0Dcgk/7JbEhm4ev5U593b66HLZemdvGksPD4CQkO4eAq
KNbr3T+TysJ9d3mlT2h8Brs93zR+phN8uZXzPnawCLiFyw9VZRLxp1K0n7UX
QPxsrsG7bOL+e85N/8B3YNiWePr1OxaeiDHJVP+YAeOFEeY+eSyU7xVf8wxS
wDfa++LjfBbuzGH2tt+NB6Wn1BvXClm4sdvaraL8NTTdcnQ485GFKZcv2HKI
vgTnU3auUMTC2AS4b306DCQPnKftKSH86PCP32LlQfB+vf4ziTLCr/6z+qN6
2h+s/mr4cZYT/Mqfftfh7wN/e/aE/qpgoczsqg/B9p7wsnzjq++VLNRuS9k/
d8wTdJOFEsq/stDiUBhzsdQP+nzZ0zNriPuKLpR64yt4+mAmN6qOiG9pKuZh
kA//C4AAf/8qWuXAi9KFQIsWwk+vl9w/zD7XyHfUhUDHFbsVl4L7P24jydBj
1oVAkADO/nGlDUAQCLvYT9iFQHEdCb0IVQ1Asuys4DvahUBDUQC04eUHQFTR
nugn3IVAWoxjpDJEA0D2tZDwE96FQOwccp81C/8/mJqC+P/fhUCG0gCxGQL5
Px+KI08=
          "]]}, Annotation[#, "Charting`Private`Tag$20785#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LmMCElbFGEixeVHKVq3K3JSAVYx/2m++caGhPaGl+iQBD++bUK6vmAfPSy/6
958hoNG8rHNuxx/IcZ6bzjtHwGLNpJTgxknodwNeFRsCFvjnPjm1MAayJH/J
mPMEfHRDSZDhOwymtBoFiYsE3GU4zLDm6gdflojWzcscPE9xaadxDxR4mR9c
cCZggrKa/jD9G/z0jTAjuhHQkegS1OHRChtvdp4fIBCwQ0lw2sqkCU7fVvCw
phDwTc16cZ139RAY4uTVQCdgrfEZ7nKlWngdmnnnMJuAizbXd1/xr4TxRxPR
RV4E9Lv4XDo4j3MfRu/K1PQloG9PWsqQ5BuwjGcXJwUQ0GK7yQrRL4VwN6m0
du0tAr6+pAnbXZ9DeRpf+91gAs7SeKYOn8iGP5nGwzz3CPg33/FI6NM02Job
8pcRSkDyHQPnFw8Swe7Fl5VjDwmY5qKe5PslEkJfrZW5GEVAD5O+twXzIVD9
xm5LWwwBP/Iw1ilm+8BC2ROd4wkEvGiuy+VUS4Lt74cMypMIeEDTzUfa4hI4
1mqc3p3G4SPKdPDcnA1E1JEuZmYQ8Jb+4USdMSv49LmQtCmbgNeFFTWSxi8C
d+uCz8M8Ap5b6abfu48JuzoO3hcqIGCKTZU/YTYSXL7fiPd+RcD5Lfk+jscq
ILbvQ/bMawKOdvH1X24Yg8+DYm9dSgn4Kep1w7ShCK4cOVP3vYLAeR8XCZhx
5ke98ajO01UEFNatvC/gJIGE6e8jNbUEvDvm732qUAST/iouHKgj4PYrWz98
PiuIbQvOQvmNnPw39N7v/M6LwiuyZVWbCZg01bt+t+YKPMg3rRrbRkCZYwZa
8SYLQBPcs0fyGwH93fpyfE1mIX21l2HgdwJmr/u087HGFHSJV5xd7CWg972o
QwOhv0FCWsCJNMDx+/nL6w4tD8MR2eO0wWFOf/no9cs49QN7w4MAm1ECrk0+
xqqO7YEGHlrwugkC7uZxtiLe/gaKw5ah7dMcfjaQb09uaAVG3f6oyL8E5J1S
UVIp+gwfn29KOLdAwPV2e1cWnakD+Ui+NBkuItYtRvRH3asGitdwVgsPEb+0
mjHv91ZA9cVPL8JXEvGC1BrXnWtKQc4o9/VpISJ+/HKyKOzPKyBsC6+QFCXi
lYemJqRv+fBOkln7WYKI0j6lRgKPcuC/fzaN96WJ+Id+zYv/41Nw68I2M1ki
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
eOIW/7hy+G25oDMl3gh5l/ZzJxKYmFQxrESo/ADuVR38xylM5CsJbBwMfw9b
VVlCf+lMXPHpe+OIdTkMBP0n9oTNRG8liYotDW8gcaRAyvQ6Ex9l/aufVHwJ
dqZn1v7zZaJIh1fKNOE5rMuZWp90g4kCgjW9O35mQZv4A4UTQUzkJSubR46k
Qhh5u/LcHSYeoXzS6LiZAGbNdWrJ95k4rst7f9uxRyC82227WTgTyy+N7eIS
vA3VEUI68xFMnFm8IBmw0RP8557uSYnm6KOaffeumhugjeGBk/FMlEuS+qCs
YQ+LbwYOLTxhohbl/HZNfyso2hhwNDWVidLfv5OQ/wLQfDYfO5XBxMyncde+
0oig1VdmtpjFxPO2Y4344x6MGVw4k5bHxH+GfZ9XTL2C9JQlS/MCJuaNvZc3
Cx6EywIxdkuvmGiqpvGMLCCMCi77Lj59w9FrlQ9t5qYUfv/w1el0GRPZtoFK
x00lMFqD4br8jonbSjWzejVE8FyINDG9mom3D/377RQpgFIT+dQzH5m4drtY
RBsvLzacMmdxNTCxy+2Ra4IRFwbnT3hlNDHx03Zmbor3HBhK3/OzaGWirUfG
eF3IDPAytgWu6GBiWz9fbVnQBJR+/Ric2cXEqCY/rf9uj4Dnvqv3z/Zy+JNd
cm7WHQTdGMGH3ANM/PNSJCvwRy9ML6VGPRtm4t2N64Jy33RB7oUjcedGmSgl
aXKVzf0VrlhN0N6Nc/xT08+4nfAF5E9Hm26fZqLm3lCfF7yN0Hb86JboWSY6
u++dE5X8CCFHJxdXzjOxrO4zRVC5Co4cjGkmLzHR3br9M690BSztNXz2fQUL
dSS1vYYIb6FAe8rfhI+FfC/jl5O+vgK3bbE2hQIsTGlVCeFWfwGKKkbam4VZ
aN2R5+O+Mxe+bZoWChFl4fg241sbrmVA2Lq4vjkJFn6Wqujbi8lgssa4+LI0
C2dX0MMrBmKBW3Tmwee1LCTeri6dOhcGRQLxLgfWs7D1i7DDv7KbQOI2OZQu
z8L6Na0KmWFMUF2YWSutyEJjZ2vp4YGr0D0TP+GjzEKLuJ0lEwr2EPHbpGZ0
Kwv7BOn7F5KtwGz4T7zlNhYyxJ4LjB23g5V9CYzKHSw8/0Fs42CoK5R8O2a2
Q4ez3lhH7RDrBtBaZpVjdFn4H6wPt7LPgG0NicsCeizcnuNvYhXWDP01x1sp
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
U4Sy6YuocrAeHMlw4KajcKqW/pxUKRRU1+XpraKjTEdrRLF2PghmZpcorKYj
n8fFriSP13A1JPQ9Hx8d2ydexpytT4c8b+/PI/x0/Jt5QV44+yWssTRv+iRI
xzbL+tAoxedgfvJ4e5IwHWu7GtZ/8gqF7F3be++L0pHn2L+jr0m+wCO8Zvi6
OB0z+aqkhTm8wfTv2NhJCTpS90Wr6nyzg8yOxumt6+gYv6VL1HWLJXCV5S5y
StHRrmBYSMfGBIxfPOP4Lk1HwVOX4ls+W0HaQ9Lq8g10XKqxFrC3cAc2Ryvh
53J0DAgsknkt/gwML56UpG6i40vTc3vLXlZC0mF5WYstdHwQ/HvP5qI/8E9O
YJvGNjoe098+qO8vgue5J3dv2EHHKGbW3K0D4pg40nxgaScdTYS0Zu4eEMGF
+ny1zl10DC9ny7MT5Ef93EgsVKDjbZe90YFlPBgXTtV+tpeO2Wtvq4Xf4cAZ
irW+5346qqnLfI7o+Qe6NqcuXjpAx4ydqDehNAcxugpmKsp0VGDfa1wb8Qem
9wlfW6tCx0bWdp3WSmI/XDt9c/oQHfdJH579UvITIhe+On5Ro6NVvLDVj44B
mOgp8shWp+MW3tNCjoO9oFkZQw48SkeXQyamaZadEJbCYDkCHROj4+y37m2F
X49u+J09RsdUDdl2wblGQLfTT/aeoONZvRWncplaCDbZFy5wko5XTO8HyAdX
wQ8Qe/5Li46lA58bsyUq4Mi22ZefTxHvWQszKr2lELimMz1Fl46bbfgd/X/m
Q+lU9gL1DB2tj58mzto58KvjodYlfTqegEPP4v5lwPqKq0F7DAj+JMccFnuS
QCv1cDfneTo+Fij81Xg9DlyfiO7quEDHLzqvnr1rC4Pnd0fcMi8S/kfxfd1h
7g9118rf3btER7O+/du5msiwdDpc4MplOuYKfeJck3sH5JWdLyuZ0vFD+d5n
8kpXwUhG98XqK3T8mlDVvLPdBJhcmyd7zOloqDRQydA3J85X80fyLOlYoP89
K+OpA3Q3Nz7wu0pHSU5Nn6u5/wF/SXLzVWs6bvz39vaCWQ6ovaBtVLtO+Pmh
M8IyvB+u+1+2F7Kl44tJ6frCJF584qaYP3iTePY/2fjMQxzLrqzmKr5FRxa9
aJd0uij+Ptl3Nug2HdV35ZPSvgui9N6CCNs7xHyeJwKu7l2NpyQChzWc6Pjt
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

          "]]}, Annotation[#, "Charting`Private`Tag$20785#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
       GrayLevel[0], 
       Thickness[0.003]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-10., 710.}, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8620457018466463`*^9, 3.8620457228464746`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"51fc81f4-2c88-4d0d-9258-987861f5e32f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mutant dynamics", "Chapter",
 CellChangeTimes->{{3.825769412647562*^9, 
  3.825769415790656*^9}},ExpressionUUID->"c8b3643a-8ca5-4753-b494-\
7789cf86e24d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dImudt", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Gamma]m", " ", "M", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Imu"}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], "Imu"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Imu", " ", "\[Beta]m", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], "Dm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fm", " ", "Dm"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "M"}], " ", "-", " ", 
    RowBox[{"\[Gamma]m", " ", "Is", " ", "M"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825769422230962*^9, 3.825769513129081*^9}, {
  3.8259967023096123`*^9, 3.825996725661252*^9}, {3.8280750461966667`*^9, 
  3.828075318382303*^9}, {3.828075366538121*^9, 3.828075370894615*^9}, {
  3.828077455144182*^9, 3.828077549802657*^9}, {3.828077642956213*^9, 
  3.828077656785994*^9}, {3.82807883696902*^9, 3.828078847089674*^9}, {
  3.829300664192379*^9, 3.829300667314118*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e02ce4e6-1f0f-4d01-b8dc-d71d61f0ae94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMdt", " ", ">", " ", "0"}]], "Input",
 CellChangeTimes->{{3.829382729934622*^9, 3.829382731811203*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"49b43f36-2a13-4237-ac96-26a3fc260efd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dm", " ", "fm"}], "-", 
   RowBox[{"Is", " ", "M", " ", "\[Gamma]m"}], "-", 
   RowBox[{"M", " ", "\[Delta]"}]}], ">", "0"}]], "Output",
 CellChangeTimes->{3.843901456151276*^9, 3.862045533495048*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"ad7c7056-6ffd-4ea0-96a6-dfa246e63062"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Am", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], "-", "\[Alpha]", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{"\[Gamma]m", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Mu]"}], " ", "-", "\[Sigma]"}], ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", " ", 
        RowBox[{"\[Gamma]m", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Am", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8257435795568037`*^9, 3.8257436761951513`*^9}, {
   3.825744610613678*^9, 3.825744828142145*^9}, {3.8257448965209913`*^9, 
   3.825744964502389*^9}, 3.825745458268424*^9, {3.825760704533595*^9, 
   3.825760713722117*^9}, {3.825760799326695*^9, 3.825760852375071*^9}, {
   3.8257609318701067`*^9, 3.825760938385151*^9}, {3.8257617813820257`*^9, 
   3.8257618216608*^9}, {3.82576216653201*^9, 3.825762169581469*^9}, {
   3.8257622093116913`*^9, 3.825762212307238*^9}, {3.825762256134933*^9, 
   3.825762257461063*^9}, {3.825762311866053*^9, 3.825762366665176*^9}, {
   3.825762434544545*^9, 3.825762434692444*^9}, {3.825762474404647*^9, 
   3.8257624764593573`*^9}, {3.825762511865068*^9, 3.825762512862294*^9}, 
   3.825762602499343*^9, {3.825762666210616*^9, 3.825762667526772*^9}, {
   3.825762784268333*^9, 3.8257627876555853`*^9}, {3.825766791382381*^9, 
   3.825766798048353*^9}, {3.825766874527048*^9, 3.825766943144342*^9}, {
   3.825769542966591*^9, 3.8257696576848173`*^9}, {3.825996732450741*^9, 
   3.8259967406355743`*^9}, {3.828077614245688*^9, 3.828077729570053*^9}, {
   3.828078863692099*^9, 3.82807886824053*^9}, {3.829300674601161*^9, 
   3.8293006780443077`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"b4614149-c749-4eef-8591-14dc03082f53"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8257625244133263`*^9, 3.8257626031628027`*^9, {3.825762663236967*^9, 
   3.8257626678481894`*^9}, 3.82576278821276*^9, {3.825766920117701*^9, 
   3.8257669437672586`*^9}, {3.825769650199383*^9, 3.825769658247525*^9}, 
   3.825996746123179*^9, 3.826257447260975*^9, 3.8262720330749283`*^9, 
   3.828078537142867*^9, 3.828078870108499*^9, 3.8280862481620293`*^9, 
   3.829287666181946*^9, {3.829300657078759*^9, 3.8293006789810953`*^9}, 
   3.8439014561649513`*^9, 3.862045533501594*^9},
 CellLabel->
  "Out[54]//MatrixForm=",ExpressionUUID->"283acba8-3584-417c-8766-\
ab5cde5bef92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Am", ".", 
    RowBox[{"{", 
     RowBox[{"Imu", ",", " ", "Dm", ",", " ", "M"}], "}"}]}], " ", "\[Equal]",
    " ", 
   RowBox[{"{", 
    RowBox[{"dImudt", ",", " ", "dDmdt", ",", " ", "dMdt"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.828078539110243*^9, 3.828078556158781*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"e773f48c-330d-4bb1-8ad0-9aebbbea19cd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.828078556573688*^9, 3.828078872948539*^9, 3.828086250032992*^9, 
   3.8292876692328997`*^9, {3.8293006703928328`*^9, 3.829300679956664*^9}, 
   3.843901456192149*^9, 3.862045533549561*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c48f7ac6-0cb4-41b1-ba6f-722c275229e4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FMat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825744967827158*^9, 3.825745034216174*^9}, {
   3.825745077306136*^9, 3.825745105387485*^9}, {3.825745311533243*^9, 
   3.825745313136395*^9}, {3.825745491797593*^9, 3.825745495316793*^9}, 
   3.825762315649857*^9, {3.825768772228602*^9, 3.825768772621294*^9}, {
   3.825768859187916*^9, 3.825768868594355*^9}, {3.825769669045599*^9, 
   3.825769695878559*^9}, {3.82807856836335*^9, 3.828078595692235*^9}, {
   3.82807887689528*^9, 3.828078879595543*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"72304ae8-36ed-44c8-a998-a6e789ab7eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMat", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"-", " ", "Is"}], " ", "\[Gamma]m"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ds"}], " ", "\[Beta]m"}], ",", " ", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ",", " ", "0"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"Is", " ", "\[Gamma]m"}], " ", "+", " ", "\[Delta]"}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8257450396770067`*^9, 3.825745047939592*^9}, {
   3.825745192814064*^9, 3.825745268738194*^9}, {3.8257453016076803`*^9, 
   3.8257453341689463`*^9}, {3.825745399738305*^9, 3.8257455244249477`*^9}, {
   3.8257606895557623`*^9, 3.825760698517312*^9}, {3.825760957784419*^9, 
   3.8257609605297213`*^9}, {3.825761783062153*^9, 3.8257618011230907`*^9}, {
   3.825761831680503*^9, 3.825761834014905*^9}, {3.825762172493878*^9, 
   3.8257622005331697`*^9}, 3.825762259568303*^9, {3.8257623163642387`*^9, 
   3.825762317714275*^9}, {3.825762514366149*^9, 3.825762515153265*^9}, {
   3.825762828234889*^9, 3.8257628382899017`*^9}, {3.825766807917742*^9, 
   3.8257668109003277`*^9}, {3.825766880574019*^9, 3.825766909146077*^9}, {
   3.825766949336821*^9, 3.82576695489468*^9}, {3.825768766180334*^9, 
   3.825768767468474*^9}, {3.825768873108182*^9, 3.8257688760621853`*^9}, {
   3.825769703295082*^9, 3.825769748060072*^9}, {3.825996753654696*^9, 
   3.8259967613251343`*^9}, {3.828078893379274*^9, 3.828078936583844*^9}, {
   3.82930068396945*^9, 3.829300687252771*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"36f33078-a446-4e94-b0f0-8ccee5b0f0fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FMat", " ", "-", " ", "VMat"}], " ", "\[Equal]", " ", "Am"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FMat", "-", "VMat"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.825745535204224*^9, 3.825745546960334*^9}, {
   3.825762797727285*^9, 3.825762802679283*^9}, 3.828078970880686*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"2c42f6d6-2daa-4e4e-8ae1-d699c349df18"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9, 
  3.84390145630682*^9, 3.862045533606838*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"0b130aba-f67a-4253-bd8c-0d8742c311e4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9, 
  3.84390145630682*^9, 3.8620455336078863`*^9},
 CellLabel->
  "Out[59]//MatrixForm=",ExpressionUUID->"8325870d-8643-400b-85be-\
7dc107c7b7e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"FMat", ".", 
      RowBox[{"Inverse", "[", "VMat", "]"}]}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8257455598341827`*^9, 3.8257455911249437`*^9}, {
  3.8257461264116898`*^9, 3.8257461486249657`*^9}, {3.8257623186116734`*^9, 
  3.8257623378340073`*^9}, {3.82576697533962*^9, 3.825766979793467*^9}, {
  3.8259994422573833`*^9, 3.825999447886388*^9}, {3.828078981152101*^9, 
  3.828078988764003*^9}, {3.828079342319439*^9, 3.828079343394005*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"320b80f9-ca57-4ec7-8986-c3b3295f1ba9"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Ds", " ", "fm", " ", "Is", " ", "\[Beta]m", " ", "\[Gamma]m"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9, 
   3.8280862571632423`*^9, 3.8292876770018063`*^9, 3.82930069387365*^9, 
   3.843901456370243*^9, 3.8620455336803923`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"282a7d71-0147-4c7d-a8c1-2610d238ea25"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"R0", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"fm", " "}], 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}]], 
   FractionBox[
    RowBox[{"Is", "  ", "\[Gamma]m"}], 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], " "}]}]], 
   FractionBox[
    RowBox[{"Ds", "  ", "\[Beta]m", " "}], 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}]]}]}]],
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 
   3.828079343884613*^9},ExpressionUUID->"90bf022f-d75b-4bd1-a19f-\
7bb63bb0a156"]], "Text",
 CellChangeTimes->{{3.828079371356689*^9, 3.828079398327075*^9}, {
  3.828081925654728*^9, 3.828081971958478*^9}, {3.828083563011613*^9, 
  3.82808357625698*^9}, {3.828086532935025*^9, 3.828086537733881*^9}, {
  3.829024901330192*^9, 3.829024903924568*^9}, {3.829300702528157*^9, 
  3.8293007106618147`*^9}},ExpressionUUID->"5c1cc6c7-92f6-422f-a9e0-\
b38f3933e7cc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Double infections", "Title",
 CellChangeTimes->{{3.82937964935014*^9, 3.8293796517908154`*^9}, 
   3.840255165899667*^9},ExpressionUUID->"1498aa17-3947-474c-a8ca-\
a07393843471"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["ODEs", "Subtitle"]], "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.840514307785989*^9, 
  3.8405143575603437`*^9}},ExpressionUUID->"20f5d60e-c355-40a0-8552-\
7849fe0c242e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Xlcjen/P/DB2Lcxi8EYu8GMbRY0YxiMJetYx760C4lKopJESHu0UEol
0qZSpJRK+6JFpU37vu97fu9P92/O90zISHWfeD3/8Djnvq9z3+/7nNM5r+t2
neseLyi5UbTnJ598It2P/tkocHyxlJTAiU2f0Z0th6XFxQ6LCK88LCMiJiLF
J9iLFo6mto/pxv9uvwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgC7k5OS0a9eu1atXr1u3bsOGDZs3b/7777+3taAbtGT//v1u
bm5slwkAAAAAwL7m5uarV6/y8fFNnTp11KhRAwcO7Nu3b79+/fr37z9s2LCx
Y8dOmTKFErWHhwfblQIAAAAA8ITMzMzg4OCAgIBr1679+uuvn7T46aefdHV1
fXx8/P39o6OjS0pK2C4TAAAAAIC3uLi4zJs3j8Jzjx49BAQEcnJy2K4IAAAA
AIB3GRoajho1ivLzsGHDVFVVGxsb2a4IAAAAAIBHVVZWnjx5sk+fPpSfZ8yY
YW1tzXZFAAAAAAC8Kz4+fseOHczg51WrVgUHB7NdEQAAAAAA73rw4MH8+fOZ
wc/79+8vLCxkuyIAAAAAAN5lZGQ0evRoZvDzhQsXMPgZAAAAAOBNqqurT548
2bdvX8rP06dPv337NtsVAQAAAADwruTk5N27d/fo0YPyMz8/f2BgINsVAQAA
AADwLk9Pz0WLFjE/HhQVFc3NzWW7IgAAAAAA3mVqajpx4kQKz4MHDz579mxD
QwPbFQEAAAAA8Kja2lpFRcUBAwZQfp46daqlpSXbFQEAAAAA8K6UlJQ9e/Zw
Bj/7+/uzXREAAAAAAO/y8PBYuHAhM/hZTEwsOzub7YoAAAAAAFhQXV29a9eu
7f/Ys2dPbGzsq82uXr06fvx4Cs+DBg06d+5cfX1915cKAAAAAMALpKSkmPC8
c+dOPz+/VxvU1dXJy8szg58nT55sbm7e9UUCAAAAALCrqKjI3d39/Pnzqqqq
zJnnqKio17ZMT0/nDH5eunSpj49PF5cKAAAAAMCWFy9e2Nranjx5UkRExMDA
IDAwkIK0gIDAa4dtMCgwL1myhBn8LCwsTHH6tc2amprKy8sLCgraHt3R0NBQ
WFhYVlbG/cDS0tK8vLzm5ua2i09NTa2rq2u7DQAAAADAe6JAGxkZaWJicujQ
oaNHj968eTMuLo47rFLobePhN27cmDJlCoXnAQMGnD17tra29tU2tAVqtn37
9o0bNyopKWVmZjLLKRtHR0dTXKed0t2qqqp79+6tXLnyyJEjdJuWUJZWV1ff
tGnTunXrlJWVOdm7sbExJCRESEjI19eXWXL58uXff//9woULHfGUAAAAAAC0
VlFR4ePjo62tLSgoSNHUycmpHfNmUKBVVFQcPHgw5edJkya9dvBzZWWllZWV
uLi4qampmJjY1KlTjY2NmVXFxcW6urpjxoyhwEx3qYBjx459+umnM2bMePbs
WWlp6bVr1wQEBOzs7NauXTtx4sTHjx8zD6ypqTl8+PDQoUMp9jNL5s6d26NH
D3pgO58OAAAAAIDXycnJcXZ2psBMsVlLS8vb27u8vLzdW8vKytq7dy8z+PnP
P/+krb3aJiQkRE5OzszMLDY29tChQ8OHDz99+jSzKiEhYffu3SNHjlRVVX3Z
cv75zp07I0aMoIz99OnTqKgois1PnjzJzMxctGjRsGHDbt++zTywpKSE2vTt
25ezRx0dHbpLGbvdxwIAAAAAwGhubo6Li7OyspKSkjp48KCxsXFkZGSHzDL3
6NEjzszPFKQTExNbNWhoaKDkfODAgfT0dH9//8WLF0+bNs3CwoJZS0tmzZpF
S+7evcvUmZKSIioqOnv2bNqUubn5nj17ampqqFoKzxSznz179rJl8EZERASl
5S+//LKoqIjZVGFhIR8f39KlS9//oAAAAADg41RbWxsUFGRgYECJ9MSJE7a2
ti9evHj/zQYEBKioqFAk3rVr19y5c4cMGcLk53Hjxm3YsEFMTExeXp4zC0dT
UxOF3idPnlAMpthMiXf58uXPnz9/2TL2g0oaNGjQ/PnzKTYz7UtKSvT19fn5
+SsqKqKioqh+umFoaNinT58lS5Ywg6vp36tXr/bq1WvBggW0fU5hO3fupA7C
+x8gAAAAAHxUioqKPDw8zp8/LygoSP+6u7sXFhZ24PavXLnCx8c3efJkCsyj
Ro36+h/Dhw8fMWIELVm4cKG9vT2nPeVkSrwZGRkyMjJDhw6VkJBgYjBVdeHC
hf79+2/fvp1zMjwvL09TU5NaNjc319XV0fKcnJyNGzfSA+lYmDaVlZV79+7t
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
cqpWWFj4+++/b5VR/ztmTgy/V9CHXkCLwMDA8PDwNk4Fh4WFUcZ2dnbOyMjI
zc2lh+zdu/fhw4d37tyxsLDIyspq1d7IyGjixIn0kOzsbDMzM1tbWzoKFRWV
4cOHUw6njZiYmNDWeGFQCgB8VOhzKT4+nt0ampqaoqOjFyxYMGfOnOnTpw8d
OrRPi759+3755ZezZ8/+9ddff/vttydPnrT7Y7+zFRQU0FeAqqoqZ+o5+qJh
uygA+HilpKQkJiZOmDBBRkaGWVJYWEifpZs2bWKxqhcvXkRFRVVUVDB36SP9
0qVLpqamJ0+e9PLyejUGW1paUuCXlpam5EzNYmNjaSE9ZMSIEWfOnLGxsaGF
r6ZuAIDOdvz4cebUBIuam5vp4zQ0NDQkJMTNzW3ZsmWftBgwYICFhUVAQAAt
DwsLoza8NkNFcnIyfYAzU88ZGBhg6jkA4BH0WXTv3r3hw4fb2dm9/GdE2ddf
f62hoUEfpOXl5WVlZUxLSq20hKJsQUFB29vMz8/39vb2bNOTJ0/a+H0H7Yt2
xP1JTkXu379fQUEhISHh1fb29vazZ8/eunUrNXB1dWVGSuvp6Y0ePXr79u3a
2tq0R549rwIAHzApKamcnBy2q/g/VMycOXMoPPfs2XPGjBmtfkvCC+jzPyIi
4tq1awcPHqRn79atW8+fP+e1YA8AH7nS0tIzZ86MGzeOOUPCTPI2bNgwX19f
+siysLCgjy9qQx9oioqKKSkpjx8/3rlzZ9tZNC0tjT7xzNtkY2NTUlLy3+sM
Cgpau3atmZnZa1P3/fv3586dO2nSJFVVVc6pHmNj44kTJ37//fcGBgaFhYXv
8qwAAHQMCQmJt55z6DJNTU3Pnj0bNGgQ5ee+ffvu37+f7Yr+D/fUc/St5Ozs
jKnnAIBn0QfUxo0b//zzT+ZnI+Xl5RSYJ0+eTMtNTEwePHhAoTQ/Pz8nJ2fC
hAnZ2dmxsbGzZs1qOz9XVVVRhE5pE6XcdxqNHB4eToX5+fm99iwEfeouWLCA
j4+PgjTn9y/MFNCrVq3y9/fHuQsAYAVlVM7/4rGOPpxv3rzJDN4YOHAgfUiy
XdH/pp5zcnJipp7T0dHx8fHhjNwDAOBZlGPnzZt37tw55m5hYeHChQspUVO4
pchqZ2dHuZQ+ct3d3Sk2UzSl5fQp19TU1MV1urq66uvrJycnv3ZtWFjYhg0b
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
jh3bt2/f+Pj4tn88yH2Vos5Dz5iAgIC6uno3neoEAAAAoBUJCYnc3Fy2q2gL
Ra8+ffpMnDgxOTmZCYR1dXUbN2787bffoqKiWCwsLy/P09NTT0+PwvyRI0e6
bEI8cXFxSqSt0i/F5traWgrV9JwMGzaMnq63VkLbWbt2rZSUlLGxcTsqp9ci
OzubejcJCQltz5Knqam5ePHi117sBgAAAKDb0dHRYaYH4VkPHz4cOnQoxbyk
pKTCwsKYmJjTp0/Pnj37xo0bvDOqNiMj4/79+xT1BQUFZWVlzc3Nw8LCOuPa
f/X19QcOHJCUlExLS+Nenp6e7uPj4+HhoaioOGDAAH5+/lY/OngVBWAK29bW
1kpKSlu2bPn+++/XrVt3/Pjx/zKbHz2W9qWhoSEvL6+qqkoRuqSkJDAwkDoU
VAn3eW+K1lTYZ599xvmNAAAAAEC35uLiYmpqynYVbaGQrKWlJSwsvGPHjl27
domJiVFAtbe3LyoqetMYBhYxE+I5OjpSqhQQEKA0e/v2bYqOHTghHqXWbdu2
JScncy8MCAigLoaoqCitmjVr1ubNmy0sLEJCQlr92LYNlPYp81taWp48efKv
v/6aNm3apk2bFBQUqGvw6jgQCsmnTp2iQ5ORkZk+ffrGjRvl5OQMDAyoNvq3
1eBwLy+vOXPmvGnCPQAAAIDuJT4+njIS21V8mOrr62NjY21sbE6fPt1RE+JR
lI2IiJgxYwb3NC8cKSkp3t7e5ubmZ86cob4GRdw3TdPxVtRtCQwMtLKy4p7c
hsPa2lpPTy83N3fv3r1ffPHF4cOHQ0NDqeNABzh//nx9fX3u09f37t1btmyZ
jo5O+yoBAAAA4CmU8SjasT7R2QePnuGnT5/evHnz5MmTzIR4lCpfm4HfKjs7
W0ZGhuJr280aGhrS0tI6YwzJy5a3TU5ODgXmYcOGTZo0qaSkhDlHnZWVNWHC
hB07dtBaTmNHR8effvrpxo0bTMeBWlJhjx49ioyMZH2GagAAAIB2UFZWpiTD
dhUfkcrKyqCgoOvXr0tLS4uIiGhra7u7u//3CfHq6uru3r176NChVkOguxgl
5PPnz48YMYLz/xdUmKen56effspcMIjj/v37w4cPd3Z2ZrppoaGhioqK9Khj
x46FhYXRwvj4eA8Pj+Dg4OLiYh4ckwMAANDZMjIyxo0bp66u3knbx0SyHY65
cAnbVXykKDH6+voaGhpKSEhwJsR766DlkpIS+hOjRNr2xBedys3NbcmSJStX
rgwMDGSWJCcnHz16dNiwYQcOHOA0q6mpsba2Hjx4MHOly6ampnXr1lH+NzY2
/vzzz2VlZffs2XPhwgUTExN5eXlqiTPSAADwEUpJSfnkk086aUitiIgIhfPO
2PLHLC4uTlFRke0q4H8Xr6SQqaurKyYmRkGUEmZAQADvzDHCjXK7lJTUqFGj
NDU1mQqbm5upF/bzzz/PmzfPxsaG05L6AhSPZ86cSf0CCs/0ZhMXF8/Kyjp/
/nyfPn1mz54dFhb24sWLxMRE6j4MHz48KiqK1y6YDgAA0Nk6NT8vWrQI+bnD
1dfX79u3j/Vr1QG39PR0V1fXS5cuCQoKysnJWVhYhIeHd9Jg5nZ4/vz5d999
N2TIkCdPnjAjLigAb9y4cfTo0RoaGtxT5yUlJe3du3fDhg0RERHMkuLiYj8/
v6VLl86ZM8fDw4M5hV5QUKCsrPzVV185OjqyckQAAAAs4uTnuro6CgBmZmZe
Xl6vjmmkeGBlZUVrAwICXt2Iv78/rTI3N4+Pj+csTEtL4+Pjoy9o2gV9BXfu
YXxk5OXluZ9q4B1NTU0UTe/evXvu3DkBAYFTp05ZW1s/e/aMxf5OeXm5urr6
p59+Onv2bFNTU6qQ4rSYmNj3339P5VF45p7vjqLy3LlzFRUVOddPqa2tpag8
fvx4aswZrUHNVq9evWDBgpCQEBYOCQAAgFVMfv77778nT578yT/oC5RzdbPG
xkZxcfFevXpx1s6ZM4cexawtKCj45ZdfPuGyZcsWZu7cQYMGcRbKycmxdYAf
JEpB1Nlhuwp4C8rMMTExd+7cUVJSoix99uxZBweHhISEtq/T3eGoz7t48WIK
z1evXt3Y4ujRo5Sf6e6rQy8MDAw+//xzd3d3zhwvFP5//fVX6gtzLtzT0NBA
xzJu3DiK2SUlJV15LAAAALyAyc/k0KFD2dnZFRUVUlJSdJe+8ZkGMjIydFdS
UpISNX3v29raUjCeMmUK83/T9Ki+fft6e3u/bPk5/7Fjx6gxfS+/xPnnzuTm
5sbjV1GBVujv5enTp5aWlidOnKAsraam5uLi0tkzcjBXCVdRURk7diz1YZlr
iCcmJvr7+ycnJ7/630zMBNEzZszgvtq4jo7OgAEDTp8+XVpayixh/rRnzpzp
5+fXxX0BAAAAXsDk57lz53KWUAzu16/fmjVr6DZlZorHf/zxB/dDrly5Qg9h
Lk+2bNmyL774gjPOk76sL1y4QN+qzF2Mf+4QmZmZlLUuX76soKBwuMWRI0dk
ZWWTkpLYLg3ag3qpgYGBJiYmzCUIKaB6eHhwz8DcUWJjY83NzX/88cdp06ZR
z7ftMSQUth0dHX/99VdO3/lly3Do5cuXT5w4kXM578bGxhs3bvTq1evo0aNV
VVVZWVmPHj3q+pPqAAAALGLyM+Ux7oXffPMNRV+6Qd+MtFZbW5t7bW5uLi0U
EhKi25SW6TaF5OPHj1MGaHVdD+Tn90Fpx93dXVpaml6d69ev+/r6JiYm5reg
14VyFy3X0tLCDwm7taKiIh8fHwMDg0Mt6AbdpYUdsnEZGZmNGzfOmzdv8eLF
lNJbDXVu5fnz53v37t2zZ09oaCizpLm5mRI1/RWfOHGC8zajZuvXr588ebKX
l1dGRoampubVq1epI8CczU5NTaUGtBfe+e0kAABAh3vt/BujR49m8rO1tTWt
bTXbMH1R9ujR46+//nrZ8mupM2fOjBgxghkEMnDgQGFhYc50uMjP7ZaQkECZ
RF1dndLIq2sppVCkoSdfV1f3xo0bXV8edIacnBzqhFLQpc4RvfomJiaBgYEV
FRXvs016q1Bvi2I5vWGo5/WmZpWVlcrKyhs2bKAuG/eUzmlpaS4uLjExMczd
uro6IyMjCs/79++nLfv5+VlaWl66dGnp0qUlJSXp6en0aWBqalpeXn7t2jXq
9L1P5QAAADyr7fzs7OxMa+mrkHttWVkZLdyxYwdnCSVq+qI/e/Ys81tCfn5+
Zjnyc/tERkaKi4uHhYW9qcGzZ89UVFRetkytICQkhFPQHx4muKqpqQkICFD0
pZj69OnTTjqpS5u9c+fO2LFjPT092740fFxcHHWc6c/c0dGRum/0UWBubr5r
1y7K/I2NjdTRpgRuY2NDnb5NmzbRe7gzqgUAAGBd2/k5PT29R48e+/bt417r
6upKDzl37tzLlvEb9NXJWUVB+ueff+7fvz9zF/m5HSorK0VFRRMTE9toQ8mK
c9pZXl4+ISGhS0oDFlBMpdfXwcGB+qeUpZWUlCjrxsTEdFSnKTc319raes+e
PfR3zcyc0wYDA4ORI0ceO3YsMzOT7lZXV9MDpaSkqJ6MjAy6LScnl5qaSssN
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
nJzMdkUAAADQDVB+3r9/P9tVALDA0tJy8uTJFJ579uypp6dXUVHx2mYNDQ3F
xcUlJSVNTU1tbK22tjYnJ6exsbFzigUAAABeUVpaivwMHydZWdkvv/yS8vPI
kSOdnJxeG48TEhIuXry4ZcuWHTt2mJmZcX5gSGH7/v37p0+fDg0NfdlyEfBL
ly6tX7/ewsKiS48BAAAAulxJSYm4uDjbVQB0terq6nXr1vXp04fy86JFi147
83NWVpaampqcnJyWltbSpUtXrVrl7+/PrIqLixMUFPzpp5/u3LlDdyMjI+fM
mTNgwABK2l16GAAAANDlkJ/h4xQdHU2Jt0ePHpSfxcTEkpKSXm1jbW19/Phx
X19fDw+PJUuW/PLLL3fv3mVWeXp6Tp8+nZYw0+JR0paWlqb8zM/P36WHAQAA
AF2uuLj4wIEDbFcB0NVMTEzGjRvH/HjwwoULhYWFrRpQ1/LMmTPq6uoVFRVm
ZmZjxoxZuXJleHj4y5b5PSwsLAYOHLh8+fLc3FxmyZMnT+bPn79v3z4WDgYA
AAC6EOXngwcPsl0FQFe4d++evLz84cOHd+/ePX369H79+jH5+aefftq7dy8t
19bWTkxMZBpXVlYGBQXFxMTk5eXJyMgMGTJEUlKS+Y0hZWZFRUXKz8LCwg0N
DUx7eiDdPX/+PGuHBwAAAF2iqKgI+Rk+EhSAZ82aNXny5DFjxowYMWL4P776
6quRI0eOGjVq586dzBlm0tTUVFdXR/HY399/1apV9ChjY2PmAitRUVF///33
t99+q66uztk4JW16uJubGzvHBgAAAF0F+Rk+HhEREV5eXo/+zcPDw93d/eHD
hw8ePKDwXFZW1upRFhYWEydOXLFiBec3htR+xowZP/74o6urK7OEwrafn9/K
lSsLCgq69JAAAACgy1F+PnToENtVAPCourq6c+fODRgwQFhYmMnGFJWtrKwG
Dx68bNmylJQUpllpaamlpaW4uHjbc0QDAADAB4C+9zH/BsCblJWVHTt2rF+/
fnJycsxQ55qaGn19/V69em3atInSNdMsPj5eSkrK3t6e1WIBAACgK1RWVgoL
C7NdBQCPqqqqUlBQ6N+/P6Xo+vp6WpKRkUG3e/bsSfm5trb2Zcu1VGxtbQUE
BIqKitiuFwAAADodBQDMuAXwJk1NTbdu3frhhx8WLVp07969Fy9eGBoaLly4
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
e/xe38537t/9LepOyx1ezz963J37nHO/z33fp/O6Tte5Ttu2aCzcvXtXOO99
qQjW4OTk9PLlS6wZDQRsqZKSUlVvGhER0ecGGWPHjh0dO3ZEGO7SpQuO6dJ0
p7SwsGjUqBEW6d69Ow701VAnUenwPZwyZQpCo2Q/Cl9f36lTpyIz37p1KyYm
ZunSpTt37kRARfLcsmVLQkKCq6srgms1XIKHhGxqaqqpqYnofvHiRVtb2xUr
Vri4uAgdNp49e+bs7LxkyRIUc/PmzUWLFgk3T8RG4VfxSjAFy6L1Om3atJ9+
+mnx4sXYeYXxN7CGAwcOqKioXL9+3cvLC7EZP9HUdXBwqOpNIyIi+txkZWUh
Swgnk0eOHOnt7V3mIsL1hg0bNsQibdu23bVrVzXUSVS6gIAAhORiNxzMzs6+
cuUKMmd8fHxYWJi8vPyZM2eQn+fOnXvkyBHESycnp8DAwGq4BM/Kyurs2bNP
nz5FkEbIR7hFGZKvi2C/du3a8PBwFKatrX337t2kpCQE7IiICPE8yM/YCh8f
H+9/YZNfvXolPItcbWRk9OTJE4TzNWvW3L9/PzY29sKFC1W9aURERJ+bx48f
z5gxQ+j8LNmdshTIJPr6+rVr18Yibdq0sbS0rIY6iSoIiVRFRQUh1tfXd9as
WQix0dHRzs7ODx8+rOqXzsvLMzEx8fT0LGUeMzOzDRs2BAcHm5ubr1ix4ubN
m5cvX/bz85P+RkV6enpYCRK4gYGBrq4utvf8+fOSw+URERFRpXBzcxMG06hX
r56pqak0B+sXL14oKSkJkbtLly52dnbVUCdRBSUmJiJe2traOjg4LFu2zMrK
6tChQ7du3aqGMcxjYmJ27txZ+kjUHh4emzZtcnR03LJlC/Lz4cOH//nnH2na
s2JoGmBZtAuQ1VeuXIk1ODk5cfwNIiKiSrdr1y5kYCThjh07HjlyRJp/ZN+9
e3fy5MlCfu7fv/+JEyeqoU6iisvMzHz48OHz58/T0tLCw8Ojo6M/4MYlH+D+
/ftoqKLhWfps8fHxqColJSUuLu7BgwevXr0qV8cSzIyXiIiIwNZhG4ULFStW
OBERERUndH5u0KABkvDw4cO9vLykWcrFxeWHH34Q8vOYMWPeOb4WEREREdGn
JzIyctq0aUISXrx4sTQdQQsKCrZv396yZUssUqtWLSxV+rC3RERERESfjIsX
Lw4cOBBJuG7duiYmJsKdy0oXFxenqqoqXDyIFL158+bc3NxqKJWIiIiIqOpk
ZWXNnz9/zr8WLlz44MGDkrPt3Lmzc+fO5er87O3tPXr0aOGU9ciRI6Xs8kFE
REREVMNpaGgI4Xnu3Llubm4lZ8jJydHU1BQ6P48YMeLq1atlrhOL7Nixo127
dlikRYsW69atE489S0REREQ138aNG/39/aXpdfD5iI2NPXfunImJiZGREcKz
vLx8QEDAO+d88uSJeORnkUgk3MWsdCEhIX/99deXRcaPH3/9+vXKLp+IiIiI
qoSHh4e6uvrQoUO/++67ffv2ZWZmyroiWcrOzkY7ws7Obvny5RoaGnhDkJkT
EhIWL178zm4bAjc3t0GDBiE816lTBy2RMpshqampW7du7dSpExbp27evg4ND
RkZGsXlyc3NTUlLK/DhQMGYrKCgQT8nLy5NmwZycnOTk5MLCwtJnIyIiIqJi
hJFOt23b1rFjx8GDB3+evXCjoqJcXFyMjIxEIpG5ubmrq+vLly8lZ0hMTCxl
cUtLS2Hk5/bt2x8+fLj0UIpgfPbsWTRYvvzyy86dOxsbGxcbzBaLh4SEYJ06
Ojp49ubNm+Le1AjGly9fPnr0aExMzNuie0nY2NisWbNGuFc4UjRCPhZctWrV
hg0bsKB4nVjQ3d390KFDwmvhp5WVFWaT5ibjRERERFQS8qGamlqtWrWmTp36
/Pnzct1r4J2whvT0dKzWycnp4MGDlVJk5UJ5165dQ/5UUlLS1tZGtgwKCsrL
yyvverKzszU0NBo2bIj8jFR85cqV0md2c3ObMGEC5kfYRoIteVu0sLAwU1NT
XV1dFRWV/v37r1ixIi4uTnjqzp07s2bNGj9+vK+vL35FJP7555+bNWuGCI3w
HBERYWJignVqamr26dNHXV09OTlZWPDevXvTpk0bNWrUjRs38Cs2vG/fvs2b
N8fKy7u9RERERCR48ODByJEjW7ZsuXHjxg8eiBj58G1R34CQkBBnZ+ekpCQk
tB49elRqpR8Oqf7hw4eI9AYGBiKRyMLCwsPDIyEhoSLrjIyMRKND6PwsLy8f
Hh7+vjkRg48cOfLbb7/Jycl1794doRczF2uqZGRk2Nra4k27f//+0aNHMdvk
yZPxZgrFHzt2rEuXLr///vvdu3ffFt2+cMqUKYjiysrKr169OnDgwPLly7Gg
i4sLwjlmE8I5ovWZM2fatGkzfPhwPPu2qPc1VvvVV18tXLiwIttORERE9DnL
y8v7559/Bg4c+J///Gf37t3lOgVdWFgYExNjbW29a9eutLS03NxchENkM4S6
iIgIBQWFqitbGq9fv/b29kZtioqKurq6yKWhoaGSfYY/GN4lNBN+/PFHhOfa
tWuvX7++5H1+0aZAjsVsWlpa/fv3b9KkyaBBg3bs2PHkyZOSbzKSrZ6e3r59
+/A2mpmZIWnjbXz+/DmewhRTU9MGDRpgChomb4vCtoODw/fff493GwuuXbvW
zs4uJSVl27ZtyMazZ88Wup2gpK1bt9avX3/WrFnp6elvi26+jDehb9++2tra
FX8TiIiIiD5biLt79+5FQuvevXtUVFTpnRny8/ORk+/evWtra4s5T5w44efn
161bN09PT0xXU1NDNsNKkB7PnDnzzmHfqhTicVhY2PHjxxFHEeAtLS2vXr1a
WWPEPXjw4NChQ4ipGzdunDBhQrNmzYT8PGnSJBMTky1btlhYWGzfvh0zIPHq
6Oggyv7www8tW7bs06ePqqrqxYsXxT0rinn48OH58+fR6EDx8+fPb926tbm5
Od5q4anFixc3b97c0NBQHP59fX3l5eWtrKwQ0V1cXCIjI1EbFmzXrh1qE3pi
Y8FFixa1atUKb4U4sd+6dQtxGm9LpbwhRERERJ8qxKfSUzFy3a+//lq3bl0V
FZXAwMB3zoNUFh8fj2iKXIcY+d13312/ft3e3v7ChQvTp0+3s7PLzMw0MzOb
OXMmZkNkPX369PtWVemSkpKuXLmC7CoSifT19ZHqkUUrfZQJtDIGDRrUsWNH
ROKGDRvW+1eTJk3atGnToUOHTp06dS3Svn37tm3b9u3bd+LEibq6uqjnyZMn
pZz6zsnJwbsn9LjAGzt48GBXV1fhKWzX0KFDsaojR46I5/fy8lJXV8c8aLNk
ZGTgE7l06dK33377yy+/uLu7C/Ncu3YNv2Li0aNHxQveuHFj4cKFaOxU7jtD
RERE9GlITU1Fjn39+jUirvhitHfy8fFB7kWERgJcsWKF8O/+t0W5DsFs9+7d
iYmJSHfnz59fsGDBrVu37t+/j5i6bdu28PBwNzc3pNY9e/ZgKQcHB8Q/zInE
bmhoWPr4FRWEFkFISIijo6OOjs6yZcusrKx8fX2xyVX3iv7+/ra2ttvfY8eO
HTuLWFpa7tq1Cw0KZ2dnvFd4E6RM8tnZ2Vu2bGncuLG48wbexsOHDyONjx07
VjywBtaGQK6qqopMLkzBO48XbdSo0ezZs4V+3fgITp061bx582HDht27d0+Y
DTEbn+Dff/9d+peBiIiI6HODfIWAdOzYMRMTE4Q6c3Pzdu3aIUS9L8XFxMQg
jCkqKp49e7Zt27ZycnLnzp1Dcn5b1AcAIXDOnDnGxsZJSUlYp7y8vIeHB+IZ
wuTWrVvfFl0f16dPn9OnTyOeIT8PGjQIIQ1rOHr0aFXk5/j4eHd3982bNyO0
I6KjvJJjWXyknj17pqSk1KRJEyMjI+FkdWZm5qZNm+rVq4dmCzZcmC05ORkp
fe3atbm5ucIUBGl8gi1btsRE4VNOS0vDPFhwxowZ4jYFPkEbGxttbW2O/0xE
REQkCflqy5YtSJgXLlxYvXr1iBEjunTpcuLEiXfOnJeX5+jo2Llz5+DgYDxG
IsXMY8aMQUh+8+aNi4sLMrOent7cuXOR5Xx8fL7//vuAgAAEsBs3bjg5OSFm
Y7bRo0ebmZl5enpu374dgU1TUxMvFxUVVVlbhKAYGBi4f/9+LS0tFRWVPXv2
+Pn5fXr3fAkKCpo5c2bXrl2RcoUpCQkJq1atql+/PkKv0B0abt++vWbNGrz5
kgvibe/evbuVlZUw5eXLl/jUGjVqhLdL3PkZs61YsQKfaTVuExEREdFH4MiR
I0hTZ8+eReKKiYlB9OrZs+e+ffveOfPDhw+nT5++fv164dK2iIgINTW11q1b
z5s3D4k6LCwMQVrIz4hh4eHhSNeYjvx89OhRhFjhTCZeS1lZeePGjV5eXi9e
vMDrVkq4ff78OZoASOYikcjY2PjMmTPR0dEVX22NFRISMnv27G7dutna2gpT
QkND8c43bNgQKVqIwWlpafgodXR0YmNjSy4ozs/44PAJNmnSRENDQ5iCBfGR
qaqqis9jExEREREg4s6aNWvatGnCLedSU1O3b98uJyeHiFvy+jVEsh07dowb
Nw4xVZiC6Isw9scffwh32RDOeSLCrVu3Diu8fv06nrKzs3vw4MHhw4cDAgKE
pbKKiLsTVER2dvbt27ft7e3ViuABfhXGl/7kJSUlGRgYtG/fXklJCQ2Zp0+f
7tq1a9CgQW3btp06dSre7bi4uFOnTqFBhJ+SfTAQiTds2NCuXTs0NLAgWhl7
9uwRLnWcMGHCvXv3sODp06fxfmJBGW4gERERUQ3k7e3duHHjmTNniv9rj+jb
smVLJyenYkNwYIbAwMAxY8YsXry4WEdlf39/IyMjLy8vIT8j1C1duhQTEcIV
FBQmTpxoZmZ26dKltLS0yiobke/MmTPGxsZIgFg58rxwAd1nBZEYjYXly5eP
Hz9+yZIlyMmrVq3atm2bvr4+3vOFCxeuXLkSUw4cOFBsHDy0jPBRIh7//vvv
WBANH8yGdpOhoSFWtWjRImHBvXv3pqSkyGrriIiIiGomW1vbZs2aIS+Jx1hA
HO3WrZuFhUWxOTMyMhC0mjdvLvT0KPZsfhHh8d27d5Hlpk+ffujQoevXr794
8QIxrOQi5ZWZmenn57dnzx4VFRUtLa39+/cjBFbKSWwiIiIiIilt2LChRYsW
6urqwilKpNyDBw+2a9cO04vNmZ2djUispKRUZqfiN2/eYJ6srCxE7opXKNyV
z9DQUCQSbd682d3dnT1yiYiIiEiGmjZt+vvvvwvnh3Nzczdu3FinTh0rK6ti
6TcvLy8yMrLip5GlkZqa6uvrixqWLVumo6Pj6OgYEhJS+i1diIiIiD4HLi4u
wrjBJEM9e/bs2rXr06dPCwoKbt68OXjwYDk5OQsLi5IfjbiPdFUoLCyMiIg4
ceKEvr6+SCTavn37lStXkpKSqu4ViYiIiD4669evDwkJkXUVnztzc/N+/foh
tW7atElVVXXGjBmdO3fW0tKq0rQs9urVq6tXr1paWiooKOjp6R0/fjwsLKyU
W1cTERERfc5OFJF1FfTW09Nz3bp1u3btCgoKun79etOmTZcvX151L4d4HBoa
evToUV1dXUVFRbyut7f369evq+4ViYiIiD4NwcHBRkZGsq6C3grnewsLC9+8
eePj49OhQwc1NbX79+9X4ohzb4vujufh4WFhYSESiQwMDJycnB4+fFg9Z7mJ
iIiIPg3Z2dmLFy/mdWE1BFJ0SkqKlZVV3759hwwZ8tdff9nZ2VVwnfhwg4KC
Dh06pK2traSkZGNjc+3atfT09EopmIiIiOgzpK+vHxYWJusq6H8kJibu3bt3
6NCh48aNMzU1rciqXr586erqam5uLhKJjIyMXFxcoqKiKqtOIiIios+Zo6Oj
s7OzrKug/1HBm83l5OQEBATs27dPQ0Nj+fLldnZ2/v7+n8mttImIiIiqzZ07
d8zMzGRdBX242NjYc+fOmZiYiEQi/MRjTJF1UURERESfrJSUFEVFRV5E9nHJ
zs729/e3s7Nbvny5hobGvn37AgICOJQ3ERERUfVQU1N78eKFrKugskVFRbm4
uBgZGYlEInNzc1dX15cvX8q6KCIiIqLPzo4dO3x9fWVdBb1benr6tWvXbGxs
lJSUtLW1Dx06FBQUxCFTiIiIiGTo3LlzBw4ckHUV9P+9efPm4cOHTk5OBgYG
IpHIwsLCw8MjISFB1nURERER0f8IDQ1dt26drKugt69fv/b29t61a5eioqKu
ru7Ro0fx0fBW2kREREQ1TXp6uoKCgqyr+EwhHoeFhR0/flxPTw+fgqWl5dWr
V1+9eiXruoiIiIioNMuWLXv9+rWsq/iMJCUlXblyZfv27SKRSF9f/8SJExER
EYWFhbKui4iIiIikYmRkdP/+fVlX8YnLy8sLCQlxdHTU0dFBg8XKysrX1zc1
NVXWdRERERFRudnZ2V2+fLkq1vzmzZuoqKhhw4b17Nmz27t07969T58+ff/V
v3//8ePHm5ubP378uCrqqX7x8fHu7u6bN28WiUSGhobOzs6PHj2SdVFERERE
VCEXLlyooiE4CgsLIyIiJk6cOGLECMTjunXrflGkTp06iM2jiowePXro0KGD
Bw/+z3/+U79+/Xr16jVp0qRLly7Gxsa5ublVUVVVQ9mBgYH79+/X0tJSUVHZ
s2ePn59fZmamrOsiIiIiospx69YtCwuLKlp5fn5+YmJifHz8vXv3fv75ZyE8
Dxo06MWLFwn/ii+CKffv39+wYUPLli1r1aqFFL1gwYLs7OwqKqzSPX/+HC0R
MzMzkUiE8H/mzJno6GhZF0VERERElS8yMlJfX79KX+LNmzd4ldatWyM/y8nJ
aWtrv3O2wsLCtLQ0f3//bt26Yc6GDRuuXbu2Jo/hhnh/+/Zte3t7tSJ4gF8/
osxPRERERB8gISEB2a9KXyI3N9fV1fXLL79EKm7RooWTk1MpM+fl5Z06dUro
6dG0adPAwEDE7yotr7yio6PPnDljbGwsEonMzMwuXLjw/PlzWRdFRERE9L/y
8/NlXcInLiMjY8mSJVX6EikpKSYmJkIk7tSpU0xMTJkl9e3bV5hfXV29JnwH
MjMz/fz89uzZo6KioqWltX//fgT7j7SHNhEREdU0P/74o+QYC/369Rs3bpyR
kVFcXFy51nP//n1xiDp79ixWZWpqKs2C69atw8ziwcHS09MRdYTHN27cwFPH
jx8vVyVlCggIwGoPHjxYuasV8/X1raI1vy26i8f8+fOrbv2Aj37q1Kn4HOvW
rTtixIgyu2QUFhYuW7ZM+Oh79eqVk5NTpeWV4tGjR87OzoaGhiKRaPPmze7u
7vHx8bIqhoiIiD5VLVu2/Oqrr0ZKaN++PYJQ8+bNvby8pF/P77///uWXX6qp
qRkbG4eHh2MNK1eulGbB5cuXY2bhniAJCQmdOnXCGoSnUACe2rt3b/k3qzSI
5Vjt7t27K3e1ghkzZvz6669VsWbBmzdv5s6dW6XrRwrt3Lkz3qJGjRpJ8yFi
ERMTk1q1agmROyYmpjq7cKDlhQaLlZUVMryOjo6jo2NISEheXl61FUBERESf
G+TnPn36FJt4/PjxBg0aIEK/fPlSyvV069Zt4MCBFSwGyQ0ZTJyfq0iV5me8
mVWanwsKChYsWFB160fyvHLlSu3atfEWtWrVytnZucxFkJY3bdok5GcIDAys
6tvzCUPtnThxQl9fXyQSbd++HTUnJSVV6YsSERERCd6Zn2Hnzp3IQrq6upIT
U1NTz5w5c+DAgVu3boknZmRkPHnypH379sOGDcODxMREZDw8ePXqlTBDdHS0
cHr59u3bWNbd3V2yJ2pycjJmRiLCery9vfGi2tramJKfn5+dnY0H6enpeBYP
EhISihWJNUv2M4mPjz916tTBgwdDQkJK2WRxfs7JyXF1dcX8QUFBJWfDyo8e
PXrkyJEHDx4UewqJESvBtuDlYmNjxRNR5Ndff/3DDz/gQaXcrg7vJMqTL7Jt
2za0L/CeIDFWfM3vg7I3b94sJOEuXbqIt64U+HR0dHS++Jevr28V5Wd8o65e
vWppaamgoKCnp4dWXlhYWE0e8YOIiIg+Se/Lz8hpcnJy/fr1E0+xsrJq1KiR
OCYNGDDg6dOnb4tOVn8hYdGiRS9evJDsv4Gl1NXVR44cKZ6nR48eUVFRwrPi
/hv//POP5HoePnwo2X+jd+/ePXv2lKwQ2QnPrl279m1Rdl23bl29evXEi//+
++9I5u/cZCE/I4MJA68JJk6cKP6nP7YdWyEMQCEYP368+PRmTExM//79xU/V
rl1bGBAD+V+y/u3bt3/4p/Kvw4cPb9q0CWvOysry8PBQVla2t7fX0tKq+Jrf
5+XLlzNnzhR6YowePVqaJIx5hP7Sgjt37lRifkY8Dg0NRUMGTTlFRcVdu3ah
kSU0x4iIiIhk4n35GX755ZdatWoJqVIIt9OmTRPG/vL09GzXrl3fvn1zcnJK
nn8umZ8RxiZMmBAYGBgfH79x40Y8+/fffwvPivNzyfPPkvnZzMwMj/38/MTl
ITmjPMRsPN6yZQueVVJSQspFeDt16lTjxo1HjRr1zu0S8jOsXr06NjY2ISFh
7ty5+NXW1laYYfHixUIyT0tLQ5a2trZG/cOHDxe69c6ePbtp06Y3b958WzRU
xYIFCzDz+fPnK/38M97qZcuWSd4LD+8S3tUNGzZUcM2liIyM7Nq1K7YIb2Cx
/z68Dz6p7t27i1sTz549q3j/Z3woaC9YWFiIRCIDAwMnJyd80DVtZDwiIiL6
PJWSn8eNG4dEJHSBRlRGrJLsdyGM+nvkyBHh106dOo0dO1Z4XDI/t2jRQvJG
Fb169RKfTJa8frBY/2fJ/IwwWadOHRUVFeEpRKlu3bohsb8tGq8Y6x80aJBk
8du3bxf6EpTcLiE/T5w4UTwlLi4OU4Rx4aKjo7/88ssZM2ZILqKnp4cZLl++
jMf9+/f/5ptvxKdY0V4wMTERjxlSif2f9+3bd+zYsWITL1y4gHhfKZ1DSsI7
6e7uLnR+bt269enTp8tcRGg1CItAx44ds7KyPuzV0VILCgo6dOgQGlBoCtnY
2Fy7di09Pf3D1kZERERURUrJzyNGjEAiSkpKEuIl4rSXhLNnz2Li0qVLhZlL
z89jxoyRXPOoUaPat28vPJYyP8OECRNatWolnA8XzlQjYb4tuqU1HsvLy0uW
Z29vj4lItiW3S8jPZmZmkhORAIVT4kePHsWzxYIr4rG4r4i6ujoef//99xs2
bPD39y92UrSy8nNBQYGioiLCebHplpaWqqqq0lzW9wFSUlLMzc2FJIzmSZkj
P78t6rxx8OBBceeN6dOnl3fsCzTQXF1d8boikcjIyMjFxUXct4eIiIioBiol
P3fp0gXRFwEpKCjoi/eYOnWqMHPp+Vk8mwBztmvXTngsfX52cnLCr+fOncPj
JUuWyMnJpaWl4bGQ5N8JWbfkdgn5edeuXZIT69SpI+Rn4cLJYmP3CS2IZcuW
4XFWVpampmaTJk2El2jdujW2VNzLorLyc3h4+OrVq4tNzM3NRahGe6HkU5UC
H9yMGTPEnZ+luTQP88yZM0f8hiNLS9P5OScnJyAgAM0fDQ0NfAHs7OzQEuGt
tImIiOij8L78/ODBgy+KrsJ7W5TlhFPNT0oQ35+iGvIz0mOrVq2QchG0mjVr
tnDhQmH65cuXMZuRkVHJ8t55CeE7x68T52fhxLWQ0sUiIyMxUfLCPRTj4eGx
Zs2aXr16fVF0NaIwvbLy84kTJ0reOMbHx2fTpk15eXny8vKS/aIrS0REhDDy
c+PGjVetWiXNIq9evcJXSAjPHTp0kHIQOTMzMzQEtm/fHhoaWrGSiYiIiKrb
+/KzMAiDEOEQ2OTk5Ip1MI6NjdXV1b1y5Yrwa6Xk58ePH+Ox+Pq4kvdP0dDQ
wNoOHz4seYoYL1erVq2//vpL8iWCgoLWrl179+7dkptWen6+efMmntXT05N8
VuiigEpycnLMzc0PHTokfgpTunTp0r17d+HXysrPhoaG9+/fl5yCT0FdXT0s
LOxtUX9s4cLJSoQWgZubm9CTuU2bNtJ0ESksLDxy5Ih45GcTExMpR5NDC8jf
39/a2hopWl9fH68VHR1d4S0gIiIiqg7Iz19//bXkOVtE4mnTpiEO/fbbb+LO
vUpKSl9IjFCBmCQEbPF52krJzzExMXisqqoqPFUyP9+7d084z9mjRw/Jjsfj
x49H8Dt//rzwa1ZW1tChQ7/88kvMX3KTS8/PWG3//v2bNm0aHBwsPPX8+XPE
Y7xRwtlsvHTHjh3FJ97j4uKaNWsm3vbvv/++Z8+eFRyUGDXIy8tLXq0JNjY2
4potLCzu3LlTkZcoCR8BAjDeGeRhbK80gRYxePDgwUJ47tevX8ne2mVCAg8N
DUWDCC0jtA7QTkGrgUM6ExERUU0m/ud7MYjHkoM84PHAgQMxfciQIYh2yJB4
rKysLJ6hUvJzfn5+69at8Wvnzp2Rct95/+6ff/5Z6K0hOfHZs2e9evVC8MOa
586di3z7RYkrBMVKz88QEhKC8urXr4+yhdHqkJA9PDyEZ9FkwMytWrXCU3Pm
zGnTpk3jxo3FaXb+/PlCp+h3XrooJaTKhQsXinto5OTk2NvbGxgY4IEwxdra
2sfH54PX/06xsbFTpkwROj+PGjWqzBAr3NsFM2ORr776ytPTs4Ljy6GA06dP
r1u3TkFBAZ+On58fe0QTERFRDbRp06b1/5eDg8OjR49KzpmXl3fgwAHkupEj
RyoqKl64cEHy2W3btol7NaSnp2M9wmhvYGpqWqwrL+a0sLAQHl+8eBEzi5MS
squqqurixYvv37//5MkTPFWsDwZyGiaWvC8e0qaVlRUy8OjRo7GGa9euvW+T
Y2JisAZhAGexDRs2ODk5iX9NTk5G/J4xY8b06dOR1dEikJw5ODhYW1v7jz/+
mDZtmqGhoeQ4FSkpKQi6ixYtOnr06PsKkAYSsqOjIzYKuR2vhTwp2eF5//79
bm5uFVl/MYi+YWFhQrujSZMm4rbP+wjnjbt06fJF0ZjPO3fuLHa2XJLwdv3+
++/jxo1btWpVmWe20Zi6cuXK5s2bRSIRmiH4In3AmW0iIiIi+qykpaUht8vL
y1taWpa8Hfm+ffvEzZNKkZOTc+7cOeGWi23btpVsSpSE8BweHj5gwADMj/CM
FkRGRsb7Zj579mzfvn0xj7e3N9o+CxYsmD9/vvRV3bp1y8bGZunSpXp6eqiK
Q9sRERER0QdApLx69WolrjA5OXndunVC150ePXoId2Z/p/z8/IsXL/br169O
nToNGjTYvHmzMIrgOyUmJiI8T5s2LTY2Ni8vLyIionfv3s2bNy9vecLpcUdH
Ry0tLTU1NQcHB7QpUEl510NEREREn6edO3dK3sq84hCYx44dK3R+Hjly5Duj
aU5OjoeHx7x581q1aoXw3LNnz9OnT5d+f0DhRurq6urCbHfu3OnUqVOxkVLK
68WLF2fOnDE0NBSJRJaWlteuXauKofyIiIiI6FNiYmIiHh6kIhwdHfX19TU1
NSdNmtSgQQPkZwTjXr16IfGuKKKjo6Onp6ehoTFjxow+ffq0bt26YcOGyM+6
urqPHj0SX8/4Pg4ODnJycs2aNZs9e/auXbvu3r375MkTKceILlNqaqqXl5eF
hQWC9MaNGy9dupSQkFApayYiIiKiTwziqzQ31y7TN99806hRI0Tc+vXri4de
QYSWkyDMgNjcrl07xOydO3dGRkYiu0oz2gYydqdOnWrVqoVwjhTdoUOH1atX
p6SkVLxySbm5uUjmtra2SkpKeGdOnDjxzgtgiYiIiOizpaysXMole9K7f//+
9fe4efNmoATMGRsbm5iYiNeVfpy6goICb2/v+fPnd+3aVbg4EWn84sWLFa/8
nVBYRETE8ePHV6xYoaqqunfv3qCgoLy8vCp6OSIiIiL6KCCULl68uFJWVVhY
mP8eeJXC/6tca0aUdXd3d3BweP36dXJy8vPnz318fAYMGFCnTh1LS8tKKb50
cXFx586dMzIyEolEO3bswKuX3lWbiIiIiD5ViYmJmpqasq6iDB4eHp07d27e
vDkeCFcj4qeBgUHjxo1PnTpVnZWkpaV5e3tv27YNQdrY2PjChQvie0cSERER
0ecgIiKi2O0XayBra+sGDRr07NkzKipK6O9RUFDw559/DhgwQJo7g1eFvLy8
wMBAe3t7ZWVlHR2df/755+HDhzKphIiIiIiqk5+fX/V0gaiIoKCgNm3arF69
Ojw8PD4+PiAgQEVFBXH6/PnzZY7aUQ0iIyORn1euXIksbWdnh/LYTZqIiIjo
U4UIevjwYVlXUYb8/HzUKS8vP3z48GHDhk2ZMkVfX//27dtZWVnSX35YDZDt
L1y4YGxsLBKJtm3b5u3tXcrtYIiIiIjoY3To0CFEPllX8anJyMjw8fHZuXMn
grSRkdG5c+devnwp66KIiIiIqBLs2LHD399f1lV8svLy8oKCgvbt26eqqqqt
rX3s2LGIiIgadc6ciIiIiMpl3bp1SHSyruKz8Pjx45MnT65evXrZsmW2trZ3
7tzJzc2VdVFEREREVD6amppxcXGyruLzkpiY6OrqamJiIhKJtmzZ4uXlVel3
USQiIiKiKqKoqMhbgchKZmbmtWvXdu3apaCgYGho6OLi8vz5c1kXRURERESl
kZeX52BrMldQUBASErJ//341NTVNTU1HR8ewsDB2kyYiIiKqgebOnSvrEuj/
ePr0qZOTk56e3tKlS21sbG7dulUTxrgmIiIiordFpz0XLFgg6yro3ZKSktzd
3U1NTUUi0aZNmzw9PV+/fi3rooiIiIg+azk5OYsWLZJ1FVSG7OxsPz8/Kysr
BQUFAwOD06dPx8TEyLooIiIios9RZmYmIpmsqyBpFRQUhIaGHjx4UF1dXUND
49ChQ/gVE2VdFxEREdHnIjU1ddmyZbKugj7Es2fPnJ2d9fX1lyxZYm1tfePG
jezsbFkXRURERPSJe/XqlaqqqqyroArBh+jp6Wlubi4SiczMzNzd3ZOTk2Vd
FBEREdGnKTExUV1dXdZVUOXIycnx9/e3trZWVFRcu3btqVOnnj59KuuiiIiI
iD4psbGxOjo6sq6CKllhYeGDBw+OHDmiqamppqZ24MCBkJAQdpMmIiIiqrjI
yEgDAwNZV0FVCE0kFxcXQ0NDBQWF3bt3X79+PSsrS9ZFEREREX2sgoODTU1N
ZV0FVcjr16+dnJzu3btX5mxeXl6bN28WiUQmJiZubm6JiYnVUyERERHRJ+PW
rVvbtm2TdRX0gXJyciIiInR0dPT19R8+fJibmyvlUrdv396zZ8+yZctWr16N
7B0VFVXVpRIRERF9Gry9vW1sbGRdBX2IN2/euLm5ITmvWrXq2bNnH7aG8PDw
o0ePamtrL1++fN++fcHBwfn5+ZVeKhEREdEnw9XV9eDBg7Kugj5EaGjoH3/8
geZPdHQ0kvDbojycmpoaFxeXkZGRlZWVnJwsTJfGixcvzp49u379epFIZGlp
6evrm5mZWZXlExEREX2UnJ2dT5w4Iesq6EPo6ekNGTIkJydHPCU/P9+hiJGR
0cKFCy9evChljw5JSOBXr17dunUrgrSxsfGlS5cSEhIqtXAiIiKij9jBgwcR
kGRdBZWbnZ3drFmz9uzZIzmxsLDQy8sLEydMmCAnJ3f58mXJdF1eyN4BAQG2
trbKysqrVq1COysyMrLChRMRERF93Hbv3n3t2jVZV0HlNmzYMFVV1fDw8JJP
3b9/f/bs2f3794+Nja2sl4uIiDh+/LiOjo6Kioq9vf29e/fy8vIqa+VERERE
HxEzM7OgoCBZV0Hl1rVr1717977zqRMnTgwYMGDFihWvXr2q9NeNi4s7f/78
hg0bRCLR9u3bfXx80tPTK/1ViIiIiGqsNWvWPHnyRNZVUPno6+tPnDjx+vXr
73x2/fr1TZo0cXNzq0jnjTIhNiM8I0IjSCNOI1QjWlfdyxERERHVEMuXL09K
SpJ1FVQ+P/30Exo+MTExJZ8KDQ2dO3fuf/7zn0rsvFG6vLy8e/fu2dvbq6io
6OjoHD9+PCIionpemoiIiKj6ycvLf8AQDSRbAwcOtLKyeudTJ0+erLrOG2WK
jIw8ceLEqlWrlJWVbW1tAwIC+O0iIiKiT0l2dvbixYtlXQWVz+nTp+fOnXv8
+PF3Prt+/fqmTZtWdeeNMiUkJFy6dMnY2FgkEm3duvXq1aupqakyrIeIiIio
UiDkqKury7oKKh/k5z/++OPWrVsln6r+zhtlyszM9PX1tbS0RJBGtj979uyL
Fy9kXRQRERHRB3r06JG+vr6sq6DyuXr1ateuXbOysiQnZmdnv/2384a2trZM
Om+ULj8/Pzg4eN++fcuXL0eFR48eDQ8Pl/72iEREREQ1QWBg4KZNm2RdBZXP
+fPnly5d+uDBA/GU9PR0LS0tExOTv//+u0mTJq6uru/rvJGQkODp6YkEjjRb
iSVdunTJz89P+vmjoqKcnJxWr169bNmyPXv23L59W7a9TYiIiIik5OPjY21t
LesqqHwiIyMXL17s7+8vnpKRkREWFnbs2LG//vqradOmKioqHh4e77xwLy8v
D0F35cqVf/zxx8aNG728vColSEdHR69fv/4DOo0kJia6ubkh+YtEos2bN6Oe
169fV7we+sy9efPm+fPn+vr6gYGBxZ7CLlBYWFg9ZWDnwn6KduI7v9UFBQVx
cXHx8fE1v/H4EZVKRFQNzp8/f/jwYVlXQeWTmZmprq6OqCkZA3CAS0tLwzEu
PDwcQdre3j4gIKCUlSQlJZ05c2bVqlUI0sbGxleuXKnI/QRfvny5Zs0arOSD
15CVlXX9+vXdu3crKCgYGhq6uLjUnC7c9HFBeH716hW+2zt27BBPxNcb37GE
hARfX9/q7N2EvdXc3NzAwKBk8kQZCxYsmDx5Mv4OV1s9Hwalzps3D6VeunRJ
1rUQEckeghZClKyroHJzd3d3cHB456ljBOnU1FQc76Q8U5ScnHz27FmEjXHj
xm3YsMHPz+99Z+cwHWtGOMnOzi42T0ZGBkKCkZFRsZI+oHsz6g8JCTlw4ICa
mpqmpuaRI0cePHhQbScM6ROQm5uL9teYMWPEuwC+ljdu3Pjnn3/QOmvfvn3p
TctKFx8fP2LEiJLJUzhJ/m0R7EHVUwzeCkT68i6FUp89e4Y6+/fvz1PQRER2
dnYVOWdIMnTz5k0clytxhUKQ3rlzZ8nV4ugZFxd37tw5hOSFCxfu378/ODgY
E/Py8sQJed26devXr3/58qXkgvh1X5EPG3Pj6dOnp06dWrt2raKiorW1tb+/
P4/dVKaEhISxY8dKnhlIT09fvnw5GolTp05t3rx5NednfGmxyyDPl2zwIsoa
Gho2adKkek5Box36+PHjvXv3fsCyQqlNmzblIYOIyMLC4s6dO7Kugmq6V69e
aWtrI5Ns3LjR19cXzS5lZWUcTE+ePCn0+sjIyMBBedSoUSVPODs7O0+ePNnR
0bEiHa2R7d3d3c3MzEQiETK8p6dnDRxghGqIixcvlhyg5u2/CbCq8/ObIuLH
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
RRdMBQQE2NnZKSsrr1y58p9//omMjKz0V6FKlJGRYWRkZG5uXm2vmJubi+/z
oEGDBgwY8NNPPyHWhoSECJWsXbsWxZQ3taIVkJycnJSUhAf4mZiYKL70AKvK
ysrCHoQdMDs7G6Fdmj2x6ggVAvaUxCLVOdg7EVE127hxo+QIS0RVJCYmJigo
KDMzE/l52rRpu3fvxqHfxsZGV1f3ypUr586dW758Ob6KCKUV7NqxcOHCqh5J
AxUiP+vo6CBL29vbBwYG1sxu0ngf/vzzzw4dOrRo0aJhw4YN/iUnJ9emTZt2
7dp17Nixc+fOnTp1wjzCHeXGjBmDpOfh4VHD/y8gJWyFiYkJPqBqe0WExtx/
iYdBRptu/fr1Ut7grxQl47d4Sk27h2xNq+edLl++PGLECHztmzZtKt5B8AC/
tm3btn379tg1sINgN8GvLVu27NWr18yZM3fs2IHGPse9JPrM6evrP3r0SNZV
0OciLS3txIkTAwcORLR4+fLlL7/8gl+Tk5Otra23b9+On0ePHkWiRpwWBpIt
7/r9/Pw0NDSqovJ3io+Pv3DhgrGxsUgk2rZtm7e39wfUXHVSUlKQHlesWLFk
yZJvvvnmiyJ169adOHGipqbmyiLCPWVUVFTQqMHnguSAeXr27GllZZWUlPRR
pCCiD4OGFdo12AWmT5+OqCzsIGhLzpo1S0tLC3sH9h1hB1FQUBg/fnzfvn3R
9vzqq6+EPt41amcnomqmra394sULWVdBn4vU1FRLS8u1a9ciee7bt2/s2LE5
OTlZWVmbN28OCwu7du2as7MzjlNXr15FqN69e7enp2dUVJT0A8phPTIZTyY9
Pd3Hx2fHjh0I0kZGRsj/0vdErQZ42xGhkQ1q1arVrl27d97HHB/E9evX0fro
1q0b5mzYsKGFhQW2q/qrJapm/v7+iMT42n/55ZcIz+KrocUKCwvxJ8vJyWnO
nDnYg2rXrv3DDz+cPHlStn1miEiGVFRUXr16Jesq6HNRUFBw4cIF5MyNGzfO
nTsXcRfh+ebNmwi9OEIFBwcrKyuvWLEiPz8fEXTgwIFPnjw5f/68jo4O0nWx
VT148MDGxubs2bNI2uKJU6ZM+YD24Js3b8zNzRHXo6OjK7iBeXl5QUFBe/fu
VVVVxYYcP348IiJC5mdxExMTBw8ejHiA4/7QoUNLuXc5nsL7IJyFbty4Md58
3uicPnn4a9O7d29855s0abJq1ar39dzGjoy2PNqYcnJy2JWGDRt248aNai6V
iGoIkUhUc24JR58DHJvi4uJiY2OPHDmyZ88eExMTT09P4Yzotm3bNDU17927
h6OStrY2MrbQd3TatGklIyhyHWbbsGHDuHHjcMhDkHZzc1NXV/+AkrDy27dv
//e//925c2clxsVHjx6hXaCrq6ukpGRra3v37t3c3NzKWrn0hJGHW7RogXjQ
oEEDpPrS58c7MHXq1C+//BLzDx8+nO1r+rShzWtvb9+oUSN84Xv16oXGbykz
Y2/y9/fHfoGZmzVrpqamlpWVVW2lElHNIS8vXzMvfaJPm3BdVXx8PLI0UqUQ
jxGe7ezshMEKDAwMAgMDExISvLy8Tp48Wcqq8AW+cuWKsbHxt99+O2XKlDNn
zgijTJfLzZs3R48ePXPmzKr4hyy24tKlS2gOoLlqYWGBLarOq/Pw9p47d65W
rVrCKWW8P2Uucv78+dq1awvnq9F+4UAK9AnD7ok/OELn5xEjRpR5Shnz46+N
sEMNGTJEcpRvIvp8zJs3T+b/XKbPmfjrJ9wm2NTUdOvWrRMmTLC3t8/KynJy
cvLx8SnZHfGdJk+ejPkRU//444+VK1e6uLhI3n6udNHR0cOGDVNUVKx4F45S
ZGZmXrt2zdLSEkHa0NAQUbYarj5IT0/X09MTOj936NBBmsH9Xr9+3aBBAyFR
GBkZyeS0OVH1CAoKmjVrltBanDNnTpmj9+AvFVr0wg7y9ddf79+/v1rKJKIa
pLCwEPlZ1lUQ/S8cmFJTU2NiYhAsTUxMbGxsDh8+LOX/R27cuCHuvIH1XL16
FWtAFJfyTG9SUhIOhb///nv13DENFYaEhDg4OKipqWlpaTk6OoaFhVVRSxab
NmrUKBzr69SpM3z4cGlOJqOSZs2aCfkZ0YJdvOgT5urq+v333wv9MVavXi3N
DnLp0iVhB2nTpg0awlVfIxHVLEgm8vLysq6C6P9AeMvNzU1JSRF6d0i5lIWF
RcmRN6RPpMHBwRMnTvztt9+qf8SJqKgoJycnPT29pUuXoslw69atSuxDIlzx
1LJlS2FIDR0dHWmWQoQQ5+cRI0awhyd9qtCSRTNWuGC2d+/eeCzNUhcvXhQW
wc/qHDCTiGqI7OxskUgk6yqI3q1c52OnTp1akdsOPn36dNy4cXPmzJHhXQUT
ExMvX75sYmKCvXLz5s1Xrlyp+MlwtJHd3NyEvppNmjRxdnaWZik0XurVqyfk
54EDBzI/06cqOTnZ0NBQ+KoPHz78+vXrZS5SUFBw8uRJYQdp3LixiopKNdRJ
RDVKenq6oqKirKsgqqiAgABNTc0PWxYpHQfEx48fd+7cecSIEVVx7+/yQsPW
z89v9+7dCgoK69atE250/mGrwj5ubGwsdH5u3779s2fPpFnq7t27derUEULF
f//7X+Zn+lSFhobOmzdPGPn5r7/+kuYfXmlpadg3hTZp8+bNyxzQhog+PczP
9Gm4ffv2hw3EmpGRER0dffjwYW1t7Q4dOgwaNKhGDdeGYH///v2DBw+qq6tr
aGigThzuxf0zpbn9WVJS0vjx44XOz4MHD5ZydL59+/YJ42/AzJkz2f+ZPlXu
7u4DBgwQ/juzcuVKaXaQmJgYZGZh70Cb1NTUtBrqJKIaJSsrS0FBQdZVEFWC
D7j4LioqysHBYdSoUWvXrrW3tx87duyff/6JvFoV5VUccr6zs7O+vj7avNbW
1j4+PosXL3Z1dS1lEaHzc7t27YTOz9J31FyyZIkw/jOsW7eO42/QJ0no/Ny8
eXNhJA07OztplgoKCpo4caKwd/Tu3dvR0bGq6ySimiYnJ2fRokWyroKoWuGg
+fTp04MHD/79999Dhw7FQfPly5eIiL/++uvgwYMjIiJkXWAZkpOTPTw8Vq1a
tWDBgvnz55ubm7/vekNs1KVLl8Sdn//55x9p1p+Xl9evXz9hKaToCxcu8BaE
9NGRZtyepKQkAwMDIQkPGzYMbdIyF0GbFHtfjx49hKXwR+Pu3buVUS8RfUwQ
JHAIlnUVRNUqMzNTS0tr+PDhOjo63t7eQueE6OjouXPnIjdK3g28JkNsRsFz
5szBTyUlpZiYmJLzpKWlrVu3Ttz5OSoqSpo1P3z4UHzxYNeuXRMSEjhEPH10
5s2bt2TJks2bN7u6uuKb/844HRwcPHv2bHHnZ2kGY8dfD3t7+7p162Kp+vXr
ow1e/SP2EJHM4bCIg6+sqyCqVmg2Xrx40c/PLzExUZwMkRIXL148duzYwMBA
HCKRIUNCQmpsbszKykLLd46EhQsXoi1QbDZs1Lhx44TOz0OGDJHyNPLWrVvF
nTdWrFhRkc4bTk5Oc4hkav78+fiJvfv8+fPFxnZ2c3P78ccfhWE0Vq1aJc0O
giiO5qqwd3Tr1s3a2vqD9w4i+qgtWrSoKm5YTFTDFTuSIipPnjx58ODByM8u
Li5nzpxRV1c/ffo0pr969arGBulSSHZ+/uqrr6QcnwTJHElb6LzRvn37e/fu
8ebd9DFCZkYbU0FBQU1N7cKFCyXPEiMt79+/v0WLFkLn571795a5TuwLnp6e
/fv3xyL16tX7888/sYtVTflEVNOpqKhUzw3XiGqy3NxcZ2dnkUiUlpZ28+ZN
Hx+fgQMHXrt2DYddCwuLK1euPHz48MGDBx9RkM7Ly3N3dxeScLNmzaTp/Iyt
wyLC/6br1KmzevVqKW/+SFTTIDxbWlqGh4e/bwa0i9evXy/sIMOHD/f19S1z
nYmJiaampthBsBQit729faWWTEQfkxUrVkjT6Yvok5ecnIyEnJKSEhAQoK+v
r6qqmpmZiSDdpk2bZ8+eIUsvXLhQ1jWWAxoC4pGfO3ToIM2JMrwD48ePFxLF
kCFDsNUl2ws5OTlZWVlltiPQ7sjPz//w6okqpsxuyaGhoXPnzpW+8zPakh4e
Hr/++qsw7LOysnJ8fHyxeQoLC7Ozs8v8l25BQUFGRobkf3awQ2UXKX1BLIL9
mv8SIqoJkBMePXok6yqIapCtW7euWbPG39//5s2ba4sgCuLxhAkTZF1aOeDg
LoyyVadOnUGDBpWZZnHstrKyEoZ97tWrF6JCscM01nD79u0TJ07s27cPb47k
qWm8lpeXV3R0tNCDFM0QOzs7TKmCzSKqHJcvXxZGfm7UqFGZIz9jX4iIiEBm
xt4kJyc3derUO3fuSM6AAPz69Wtvb+8jR44cO3YM4VzcxsSe8uTJE19f34SE
hLdFXaSw++zdu1cYuAOzoc2OBR2LYN8RrxN7HBbEfiRc1Jybm+vn52dtbR0Y
GFjp7wYRlZeZmVlQUJCsqyCqQQwNDRGhccxav349GpgBAQGpqamurq5S3vy6
JsBBOTIysn379sLIz2pqaqXPn5GRcfLkSaGzdLdu3Q4cOFDyHNf169cXL168
dOnSHj16jBgxAu1u8Tz29va9e/dGZhZO+qmqqjZu3Hj48OFVsWlEFYe07ODg
IHR+7tmzZ+kjP2Nm5Nh169ZhfuxNY8eOdXNzKzYPMjD2IHl5+RkzZnz77bcK
CgpJSUnCU3FxcfiT8uuvv164cOFt0RWIiN8I7QsXLhTOJ6NNOn/+/Llz52LX
wy6GvzbCgq9evdLT0+vXr5+np+fbosuB8dINGjTAzJX/jhBROdnY2Fy9elXW
VRDVFDhW3r59G+3KLVu2zJ4929jYODMz88yZM+7u7rIurRxyc3MvXrwo7vx8
5MiR982JpB0TE4Ms0alTJ8yPQ7+VlVXJ8IxD+fTp0/EU3o0//vijbt26Z8+e
FYbmyM/PHz9+fL169fbs2YMcjinKysrIz0jjVbqNRB8M4RZNY2EHGTp0aCn/
K8nKyrp3797q1avbtGmD0Dtu3Dh884v1X8IucO3aNUTfU6dO3b1795dffvnu
u+/8/PyEZ4OCgn766aevv/76/Pnz+PXx48eTJk3CHoQGJvYm/LWZNWsW/sJE
RET06dOne/fuISEhb/+9/hfNUuxH4vw8ZsyYOnXqDBgwoOreGSKS0vHjx11c
XGRdBVENgqNhWlpaXFycq6srgrS1tTV2EyEZfixev36tq6srjLKF46/kP4UF
ODpji6KionBo1tbWRsaWk5MbNmzYsWPH3tm3GcFgwoQJSNE4iPfo0aN+/fpY
UOjCgfjds2fPBg0aXL9+XeglEhoaigjRr1+/athSog8QEBCA9qBwdcCMGTOi
o6OLzYB2NL7t+CZj3//rr7+wg7Rv337evHlI2iV3EOwUu3btUlNTy87Oxh+N
Fi1aIOIGBwe/Leq8cenSJQTvn3/+WbgGAYEcx1zk5IkTJyYmJu7YsUNVVTUn
J+fq1auYrW/fvkKPSix45coVNEsRoYWO1miuYuUoY+zYsdXxHhFRqdzc3Pbv
3y/rKohqHBwlcQhLSUlJTk4WOi7WfPfv38cx9/Lly4cPH/7hhx/Ed045c+YM
JnoUwQzu7u7nzp3bs2fPsmXLevXq1bBhQxy1FRUVS7mTGuLB0aNHcQQ/ffp0
kyZN+vTp8/z5cyFIODs7t2rV6ptvvpEMIVjz7Nmzq2ObiaSGbzjafUih69ev
R4LFDlK7du3x48djdxB2EM8iOCw6OTlt3rx55syZnTp1Qh4eMmSIsbHxw4cP
37naZ8+e2dnZYbVJSUnm5uZoS+LLL1wMiL8eW7ZsQXtz8uTJ4ksG0G5FFEfe
RiN927Zt2CXR4DU1NcWCCPNCT+zU1FQ03pGfEbMlh6lHMxZ5u1reLSIqza1b
t7D/yroKIqoES5Ys6d27d+fOnZs2bVq7SJ06dXAIRoTGxB49evTs2RNBF8kB
ibdZs2b4ddCgQYsXLz5x4kTpgwbgwI08UFhYKBKJEAa0tbXT0tKEp3R0dBo1
aiQvL5+YmCieX0VFBUf/qt1aonKaNm3a119/jd1BTk5OvIPg29uhQ4euXbti
B8GzaFFiZ2nZsmXr1q2//fbbMWPGrFq1ytvbu5QbCeGpV69eYQ8KDQ1F3EXk
trS0FJ5CVJ4zZw52NwMDA/H8T548UVZWtrGxyc/Px14jXGA4evToNm3aoFUr
zPPy5cspU6ZgR96wYYN4QcyMSO/g4FA1bw8RlcPTp091dXVlXQURVQLsyzhY
/13CnKLbfM+bN2/+/PkLFixA1l20aBFy7969e4uNpFE6hATkc+Tny5cvC0sV
FBSMGjWqbt26u3fvFo8YhjgxYcIE4WopoppDXV1dyh1EUVHR0NDw+PHjYWFh
Uo7EiH0B+0Xbtm0HDBhw7949YeLdu3f79u2LZC6++vjNmzchISGIwbdu3RKm
CN2n0Z7FnBEREcI8Dx8+7NKlS7t27VxdXcUL4ng9ZMgQlFTJ7wsRlR+azDiS
fkR3hSAiWfH29m7SpEn37t1fvnwpTImPj+/WrVu9evV8fHzEMSM8PPy3337j
UZ4+K6mpqVZWVtgXpk2bJr60Fum3YcOGP/74oxCM3xYdc93c3CZPniy+pEJY
EM3SSZMmCZ030Di9evVqnTp1evXqJR6YGuv09PQcOXIkR1YnqiHU1NQ+lu6d
RCRD1tbWcnJy48ePF9+01N/fv23btu3atYuKihLPZmlpuWbNmri4OBmVSSQD
sbGxK1asaNasmaampjAFCXn//v21a9cePXq0uH8U9gszMzMjIyPxgmiEamho
NG3aVFtbW5iSmZl58OBB5Odhw4aJB8NJSUnR19c3Nzevxm0iotKYmpqK/9lE
RPQ+O3fu/Oqrr2bMmIFDuTDl2LFjLVq06NWr17Nnz4QpiYmJf/31l6ura5k3
UyP6lMTExCA5t2rVSk9PT5iCfcHY2Lhu3bqTJk0S/smbn5+PJufcuXMlb7+C
RK2qqtq8efO1a9cKU9A+Xb9+ff369cX3bCooKAgODp44cSL/rUNUcxw6dOjc
uXOyroKIajoPD4+2bdv+8MMPaHFnZmY+efJk6dKlHTt2bNeunZeXV0ZGBpKA
paWlmppamXdDJvrEIPTiy9+6dWvE49jY2NTU1KtXryI5o4E5ePDgyMhI7CCh
oaEmJiYI2JK3O8Scu3btQn6eNWsWFkxPT/fz80NUbtmy5YABA6KiorCvhYeH
GxoaYkF2tiSqOa5du7Zjxw5ZV0FENR2O4yoqKn379lVXV9+/f//69esXLVqk
ra39448/ikSiffv2bd++ff78+Tdv3pT+mkSiT0NhYWFQUBAy8KBBgwwMDOzt
7XV1dRcuXLhs2bKBAwdqamoeOHDA2NgY+44wwrPkgojH06dPR1pet24d9qNV
q1Zhh1JWVsaepaOjc+jQoY0bNy5ZsiQmJkZWW0dEJcXFxZV5e18iIkhPTz9+
/PiaNWvwR2Pbtm1PnjzJysq6ePEisjSCgampKSIEwzN9noQ7fdva2uoUQe6N
L3L06NHVq1draWnZ2NhghpILIkI/e/YMC64ogqSdVMTR0RELIntbW1uLu0gR
Uc2xdOlS8QVBRERERERUuk2bNt2+fVvWVRARERERfRzOnTvHWxoREREREUkp
JiZGQ0ND1lUQEREREX00li9fziGniIiIiIikZG9vf+nSJVlXQURERET0cQgI
CJC8oygREREREZWioKBg2bJlCQkJsi6EiIiIiOjjcODAAWdnZ1lXQURERET0
cXj06JG2trasqyAiIiIi+mjo6OiEhYXJugoiIiIioo+Dp6enhYWFrKsgIiIi
Ivo45OXlKSkpcSBoIiIiIiIpOTk57d27V9ZVEBERERF9HFJTU8+ePSvrKoiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiKhqWVhYqKqqamtrr1q1as2aNXpFVq9evWLFCvwaGhqKefLz8wMC
ApSVlZcvX66hoaGjo4MZhNnwWFNTEyt58+aNsMLCwkJ/f391dXU1NTX81NLS
wqqwfvyKnzLdViIiIiKiipo2bdo333zTqVOnZs2atWjRomXLlq1aterSpct/
/vOf0aNHBwUFYZ6cnJyzZ8/269evV69emK1JkybCnK1bt+7evfsPP/yAnCxe
IcL24cOHe/fu3bhx46+++qpRo0bC/JgyadIk2W0oEREREVElcHZ23r9//9q1
a+vUqfPFF1/Url0bcXrLli0ODg54Ki0tDfMUFBQ8fPjwyJEj1tbWY8eO/aJI
/fr1//rrr//X3t0HRVX9cRwPNhAQROUxoQAhUAuDhFJqLCkwny0j6EkSqGyG
qEizUFGZ0oSiGS1MyKBBS3OEaZhSM0upyajUGkrtYXjwARDkwUFEhWV/39kz
c2d/y8L4+2WA8n79de+555499+7+8Tl3z55dv369lJeVlWkN6vV6Sd15eXmL
Fi2S8GxlZRUWFrZ8+fJNmzbt2bOn/y4UAAAAuGKOHTvm4uIiqdjW1nbatGkd
HR0Wq7W1tWVmZqr87OTktG3btp4a7OrqqqysdHV1DQ4Olhx+7ty5f63vAAAA
QF+rqKgIDAyUVGxjYxMZGdlTtfb29oKCAi0/f/LJJz3V7OzsLC4ulvz8wQcf
aFOjAQAABrLKysqV/y07O7uwsPDvv//ury5t3rw5MzPTtKSn55z9Kz8/X+5V
f/eiT1VXV99xxx1q/kZYWFhP1dra2rKyslR+dnR0zMnJsVhNAnNDQ8PUqVNn
zJjR2tr6r/UaAADgSvrmm2+u68GCBQv6Jbg+8MADrq6uarupqWn+/Pm9PMDs
R/fcc8+NN97Y373oUydPnoyKipLPhpWV1bhx4y5dutS9jl6vr6iomDx5svoU
OTg4rF692mJr6ieEXl5eX3755b/ccQAAgCtG5efnn3++0sTevXvVY8a1a9f2
fZf27NmjBebdu3dLN8jPA0RtbW1MTIzKzwEBAc3Nzd3rtLW1vfvuu0OHDlX5
2d7efvHixd2rdXV1VVdXR0RE9NcwDQAA4P+j8vPy5cvNyk+dOqXT6W699dZ+
6ZWG/Dyg1NfXJyUlqWDs6+t7/PhxswqdnZ3l5eVhYWGRkZFqpY4hQ4Y8/fTT
3Zu6ePHiW2+95efnd/jw4T7pOwAAwJXRU34WN9xwg4uLi9ru6OiQtDNhwgRH
R0cbG5vg4OA33nhDwpI6mpGRkZiYWFxc7OHhcdNNNxUVFUnhn3/+GR8f7+/v
L+2PHDkyOjr6u+++0xo/dOjQjBkznJycJF+NHz8+KytLa+2VV16ZM2eObBQW
FsohOX3cuHH33nuvOtre3r5ixQopkXJJXy+//LJaPM2ip556Svq2ZcsWGQio
bufl5ZlWaGxsTE5O9vHxkdYCAwOXLFliNhH3ww8/DA8Pt7W1lUuQXkm3tUOD
MD+fOXMmNTVV5We59t9++82swtmzZ1euXDlmzJiSkhL5qKiVOmJiYsyq6fX6
o0ePSrVXX32Vnw0CAICrS0/5+eTJkzqd7vbbb1e7TzzxhFRLSEiQPLlu3bo7
77xTdiVCq6OPPvroqFGjJAxLuYSi/fv3V1VVjRgxwtvbe82aNQUFBa+99pqz
s7O9vb00azA+3B42bJik2ffee2/Tpk2zZ8+W1tLS0lRr2vzn0tJS9brz5s2T
VGYwxngJ0tKxZ555RpqV9DV06NCwsDAJ1Rav7pZbbpFRgIODw6pVq7Zv3/7g
gw+aXmxDQ4PEewnwL774orQmbV5//fVyyW1tbarCCy+8IPUjIyM3bty4du1a
SYx2dnZff/21OjoI83Nzc7MMXlR+9vLy+v77702PyrtTVlYmQ5v09PTa2lo3
NzepJrc0KirKrB25wzJUkXen+xNsAACAAc7i/OfPPvssJCREytXKCX/99Zds
JyYmamdJXh0+fPjdd9+tdiU/SwXJqFoF9ZTy559/1kokJ0vJ5s2bZTsvL0+2
tcfRXV1dErFmzZqldk1/P2g2f0P6I7vvv/++1qyq8Oabb1q8OklocnTHjh3a
C02fPt3W1raurk525arlaElJiVZfRgdSorL6wYMHraysYmJitAekkgk9PDwk
cqtH5YMwP589e1ZbWMPT03PXrl3aIbWYRnJysoyhZJRUX1/v5+dncaUOvV4v
99bHx2f9+vV9fgUAAAD/VE/rb1hbW0sW0qLj6dOnJTtpZ7W0tPj6+krGVrsq
P1dVVWkVJGFWVFSYvpBkYKmTm5sr25LPZXvmzJkHDhzo/vV9L/l5ypQpzs7O
2kwPJSAgIDw83OLVSX6WuGta8vnnn0uDBQUFsu3l5RUcHGx6VDojhXKWbC9d
utRsCCDS0tKk8McffzQMyvzc2tq6ceNG9Qlxd3f/9NNPtUOXLl366quv5G7L
QMlgnOmhhmDyQQoKCjJ9y5qbmxMSEiIiIkw/UQAAAFcLlZ8lCmrrP2dmZm7b
ts00DBuMzwyLiopSUlKmT58ucUglqNtuu00dlfys0+nMknBtbe0777wTHx9/
1113jRw5Up0i6ctgTNfz5s1TJXIoLi5OXlGLWL3kZwm3NjY2vv/Nzs5OGrF4
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
    
    "], {{0, 540.}, {960., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{304.7994791666669, Automatic},
  ImageSizeRaw->{960., 540.},
  PlotRange->{{0, 960.}, {0, 540.}}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.840514337030567*^9, 3.840514357560854*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"1fb03d14-fae8-47d3-b964-6091db28765c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dIsdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"R", "[", 
     RowBox[{"Iw", ",", " ", "Is", ",", " ", "Iww"}], "]"}], "-", " ", 
    RowBox[{"d", " ", "Is"}], "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]s", "[", 
      RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Dww"}], "]"}], " ", "Is"}], 
    "  ", "-", " ", 
    RowBox[{"\[Eta]w", "  ", "Is"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "\[Eta]w", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]w"}], ")"}], "Iw"}], " ", "-", 
     " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]w", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]w"}], 
       "]"}], "Iw"}]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{"p", " ", "\[Eta]w", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]ww"}], ")"}], "Iww"}], " ", "-", 
     " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]ww", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Dww", ",", "\[Beta]ww"}], 
       "]"}], "Iww"}]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDsdt", " ", "=", 
   RowBox[{
    RowBox[{"B", "[", 
     RowBox[{
     "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "Is", ",", " ", "Iw", ",", 
      " ", "Iww"}], "]"}], "  ", "-", " ", 
    RowBox[{"\[Mu]", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]ww", " ", "+", " ", "\[Lambda]w"}], ")"}], " ", 
     "Ds"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDwdt", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]w", " ", "+", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}]}], ")"}], " ", 
     "Ds"}], "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]w"}], ")"}], " ", "Dw"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], " ", "+", 
       "\[Lambda]w"}], ")"}], "Dw"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDwwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"q", " ", "\[Lambda]ww", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], " ", "+", " ", 
       "\[Lambda]w"}], ")"}], "Dw"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]ww"}], ")"}], "Dww"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dWdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fw", " ", "Dw"}], " ", "+", 
    RowBox[{"fww", " ", "Dww"}], "-", " ", 
    RowBox[{"\[Delta]", " ", "W"}], " ", "-", " ", 
    RowBox[{"\[Eta]w", " ", "Is"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"odesRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIsdt", ",", " ", "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDsdt", ",", 
     " ", "dDwdt", ",", " ", "dDwwdt", ",", " ", "dWdt"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Iww", ",", " ", "Ds", ",", " ", "Dw", 
     ",", " ", "Dww", ",", " ", "W"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forceInf", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Eta]w", " ", "->", " ", 
      RowBox[{"\[Gamma]", " ", "W"}]}], ",", " ", 
     RowBox[{"\[Lambda]w", " ", "->", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", " ", 
     RowBox[{"\[Lambda]ww", " ", "->", " ", 
      RowBox[{"\[Beta]ww", " ", "Iww"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pFreeCond", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"W", "->", " ", "0"}], ",", " ", 
     RowBox[{"Iw", "->", " ", "0"}], ",", " ", 
     RowBox[{"Iww", "->", " ", "0"}], ",", " ", 
     RowBox[{"Dw", "->", " ", "0"}], ",", " ", 
     RowBox[{"Dww", "->", " ", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pDFreeCond", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Dw", "->", " ", "0"}], ",", " ", 
     RowBox[{"Dww", "->", " ", "0"}]}], "}"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8405143370307837`*^9, 3.840514357561187*^9}, {
  3.840613818784862*^9, 3.8406138190466747`*^9}, {3.840622068041583*^9, 
  3.8406220712787*^9}, {3.8406226057660847`*^9, 3.8406226355364523`*^9}, {
  3.842346006699486*^9, 3.842346008489582*^9}, {3.842346360786207*^9, 
  3.842346360929158*^9}, {3.843707120024187*^9, 3.843707127453362*^9}, {
  3.843897252066915*^9, 3.843897252277727*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ecc45c9b-5f94-4de1-bd14-3c41ca5147c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Predator and transmission functions", "Subtitle"]], \
"Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.840513954339038*^9, 3.840513962320778*^9}, 
   3.840513998388597*^9, 3.840514064790514*^9, 3.84051414129815*^9, 
   3.8405143370308733`*^9, 
   3.84051440329694*^9},ExpressionUUID->"cad77751-659b-44e2-b56a-\
e0b0ce225f72"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"func0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is", ",", " ", "Iww"}], "]"}], " ", "\[Rule]",
       " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw", "+", "Iww"}], ")"}]}]}], ",", " ", 
     
     RowBox[{
      RowBox[{"\[CapitalPi]s", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Dww"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw", " ", "+", " ", "Dww"}], ")"}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]w", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]w"}], 
       "]"}], "\[Rule]", "  ", 
      RowBox[{"\[Beta]w", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw", "+", "Dww"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[CapitalPi]ww", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]ww"}], 
       "]"}], "->", "  ", 
      RowBox[{"\[Beta]ww", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw", "+", "Dww"}], ")"}]}]}], ",", " ", 
     
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{
       "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "Is", ",", " ", "Iw", ",", 
        " ", "Iww"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw", " ", "+", " ", "Dww"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw", "+", "Iww"}], ")"}]}]}]}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"func1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is", ",", " ", "Iww"}], "]"}], " ", "\[Rule]",
       " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"k", 
          RowBox[{"(", 
           RowBox[{"Is", " ", "+", " ", "Iw", "+", "Iww"}], ")"}]}]}], ")"}], 
       
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw", "+", "Iww"}], ")"}]}]}], ",", " ", 
     
     RowBox[{
      RowBox[{"\[CapitalPi]s", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Dww"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw", " ", "+", " ", "Dww"}], ")"}]}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]w", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]w"}], 
       "]"}], "\[Rule]", "  ", 
      RowBox[{"\[Beta]w", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw", "+", " ", "Dww"}], ")"}]}]}], ",", 
     
     RowBox[{
      RowBox[{"\[CapitalPi]ww", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Dww", ",", " ", "\[Beta]ww"}],
        "]"}], "->", "  ", 
      RowBox[{"\[Beta]ww", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw", "+", "Dww"}], ")"}]}]}], ",", " ", 
     
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{
       "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "Is", ",", " ", "Iw", ",", 
        " ", "Iww"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw", " ", "+", " ", "Dww"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw", "+", "Iww"}], ")"}]}]}]}], "}"}]}],
   ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.84018702131579*^9, 3.840187145472247*^9}, {
   3.84025313506612*^9, 3.840253188087673*^9}, {3.840255202260453*^9, 
   3.8402552641031427`*^9}, {3.840255964555702*^9, 3.840255981728077*^9}, {
   3.84025602111843*^9, 3.840256021878152*^9}, {3.840257743860053*^9, 
   3.8402577554716873`*^9}, {3.840267793838622*^9, 3.840267825570528*^9}, {
   3.840268981884829*^9, 3.840268982268783*^9}, {3.840269884243981*^9, 
   3.840269913734189*^9}, {3.840270115858906*^9, 3.840270116626006*^9}, {
   3.840513987422031*^9, 3.8405139917754583`*^9}, 3.840514064790922*^9, 
   3.840514141299168*^9, 3.840514337031354*^9, 3.840514403297439*^9, {
   3.8406220916864357`*^9, 3.840622136071615*^9}, {3.84328755316253*^9, 
   3.8432875722755938`*^9}, {3.843622921028451*^9, 3.8436229274778767`*^9}, {
   3.84363867307338*^9, 3.843638674239193*^9}, {3.8475354347350607`*^9, 
   3.8475354718469*^9}, {3.8641027004493*^9, 3.864102701927451*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"961657ec-8b09-4286-ac15-81d19c10ddea"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.},
 CellChangeTimes->{{3.840187150414484*^9, 3.8401872248120317`*^9}, 
   3.8405140648168907`*^9, 3.840514141299603*^9, 3.840514337031599*^9, 
   3.8405144032976837`*^9, 3.840613817302079*^9},
 CellLabel->
  "In[329]:=",ExpressionUUID->"34e108e3-d62e-46ad-8018-aae1a9cccd01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Reproduction ratio of a resident (Existence condition for parasite)\
\>", "Subtitle",
 CellChangeTimes->{{3.8423459280119*^9, 3.842345935809875*^9}, {
  3.8436228415848017`*^9, 
  3.843622847362196*^9}},ExpressionUUID->"c4eb3cfc-91ae-4d98-8434-\
57f9e040e577"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MmatRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]w"}], ")"}]}], " ", "-", " ", 
        "\[CapitalPi]w"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "\[Gamma]", " ", "Is"}]}], " ", 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]ww"}], ")"}]}], "-", " ", 
        "\[CapitalPi]ww"}], ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{"p", " ", "\[Gamma]", " ", "Is"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]w", " ", "Ds"}], ",", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]ww", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]w"}], ")"}]}], " ", "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], " ", "+", 
          "\[Lambda]w"}], ")"}]}], ",", " ", "0", ",", " ", "0"}], "}"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"q", " ", "\[Beta]ww", " ", "Ds"}], ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], " ", "+", " ", 
         "\[Lambda]w"}], ")"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]ww"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "fw", ",", " ", "fww", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], " ", "-", " ", 
        RowBox[{"\[Gamma]", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"MmatRes", "/.", "forceInf"}], ")"}], ".", 
      RowBox[{"{", 
       RowBox[{
       "Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww", ",", " ", 
        "W"}], "}"}]}], " ", "==", " ", 
     RowBox[{"{", 
      RowBox[{
      "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt", ",",
        " ", "dWdt"}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalPi]w", "[", 
        RowBox[{"Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]w"}], 
        "]"}], "->", " ", "\[CapitalPi]w"}], ",", 
      RowBox[{
       RowBox[{"\[CapitalPi]ww", "[", 
        RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Dww", ",", "\[Beta]ww"}], 
        "]"}], "->", " ", "\[CapitalPi]ww"}]}], " ", "}"}]}], "/.", 
   "forceInf"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.84234595221434*^9, 3.8423464722142477`*^9}, {
  3.842346586632948*^9, 3.842346642737568*^9}, {3.843707144904138*^9, 
  3.843707153217988*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5777bd51-2660-46b0-9aa7-2e1d50cf2bba"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.842346349953766*^9, {3.842346416184401*^9, 3.842346472586466*^9}, {
   3.84234658776644*^9, 3.842346643031724*^9}, 3.8424176344710207`*^9, 
   3.842512745710511*^9, 3.843282091660705*^9, 3.843622832524613*^9, 
   3.843638432694282*^9, 3.843706978292466*^9, 3.843707155389175*^9, 
   3.84371000657797*^9, 3.843721932028797*^9, 3.843732527979558*^9, 
   3.843896022746223*^9, {3.843896190490116*^9, 3.843896195099296*^9}, 
   3.8438964754241047`*^9, 3.843900066085709*^9, 3.84390145645573*^9, 
   3.8439015720968647`*^9, 3.844162586549714*^9, 3.844311373491539*^9, 
   3.844315466165989*^9, 3.844318183453878*^9, 3.8444032576577177`*^9, 
   3.844491475618412*^9, 3.844852959766304*^9, 3.844854717208356*^9, 
   3.844854757476528*^9, 3.8448549244790907`*^9, 3.844855066306443*^9, 
   3.844921874360343*^9, 3.845101417049697*^9, 3.845104764865353*^9, 
   3.8451050908733587`*^9, 3.8451216016970587`*^9, 3.84537138546455*^9, 
   3.845373165569578*^9, 3.84537593942905*^9, 3.8454447017965097`*^9, 
   3.845447305692258*^9, 3.8455216021928253`*^9, 3.8457184244751053`*^9, 
   3.847535543985696*^9, 3.862045805330497*^9, 3.8635913237084017`*^9, 
   3.8641105391172714`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"865d064f-1cfd-478e-8da4-8a096cde5eb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MmatRes", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.843817849605335*^9, 3.843817865063204*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"1c1b24b6-9aa3-406d-b134-a3c35f09ebaf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]w", "-", "\[CapitalPi]w"}], "0", "0",
       "0", 
      RowBox[{"Is", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", "\[Gamma]"}]},
     {"0", 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]ww", "-", "\[CapitalPi]ww"}], "0", 
      "0", 
      RowBox[{"Is", " ", "p", " ", "\[Gamma]"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]w"}], 
      RowBox[{"2", " ", "Ds", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{"-", "\[Lambda]w"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}], "-", "\[Mu]", 
       "-", "\[Sigma]w"}], "0", "0"},
     {"0", 
      RowBox[{"Ds", " ", "q", " ", "\[Beta]ww"}], 
      RowBox[{"\[Lambda]w", "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}]}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]ww"}], "0"},
     {"0", "0", "fw", "fww", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.843817851668758*^9, 3.8438178653853703`*^9}, 
   3.843896195133606*^9, 3.843896475480624*^9, 3.843900066123612*^9, 
   3.843901456463089*^9, 3.843901572138638*^9, 3.844315466190802*^9, 
   3.8443181834749126`*^9, 3.8444032576895227`*^9, 3.84449147566835*^9, 
   3.844852959801868*^9, 3.844854717245831*^9, 3.844854757511235*^9, 
   3.844854924515522*^9, 3.844855066331428*^9, 3.844921874383226*^9, 
   3.8451014170700493`*^9, 3.845104764897347*^9, 3.845105090913166*^9, 
   3.845121601720171*^9, 3.84537138548958*^9, 3.845373165594845*^9, 
   3.845375939456106*^9, 3.8454447018235083`*^9, 3.845447305718643*^9, 
   3.845521602219801*^9, 3.845718424562505*^9, 3.847535544015361*^9, 
   3.862045807278219*^9},
 CellLabel->
  "Out[66]//MatrixForm=",ExpressionUUID->"b671cb77-ed0d-4da4-9e9b-\
f9a871b74deb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FmatRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "fw", ",", " ", "fww", ",", " ", "0"}], 
      "}"}]}], "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VmatRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "+", " ", "\[Alpha]w"}], ")"}], " ", "+", " ", 
        "\[CapitalPi]w"}], ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], "\[Gamma]", " ", "Is"}]}], " ", 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "+", " ", "\[Alpha]ww"}], ")"}], "+", " ", 
        "\[CapitalPi]ww"}], ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"-", "p"}], " ", "\[Gamma]", " ", "Is"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]w"}], " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]ww", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]w"}], ")"}], " ", "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], " ", "+", 
          "\[Lambda]w"}], ")"}]}], ",", " ", "0", ",", " ", "0"}], "}"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", " ", "q"}], " ", "\[Beta]ww", " ", "Ds"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], " ", "+", " ", 
          "\[Lambda]w"}], ")"}]}], ",", " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]ww"}], ")"}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Delta]", " ", "+", " ", 
        RowBox[{"\[Gamma]", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FmatRes", " ", "-", " ", "VmatRes"}], " ", "==", " ", "MmatRes"}],
   "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.8423466473088903`*^9, 3.842346756965837*^9}, 
   3.842498159998479*^9, {3.843707163185244*^9, 3.8437071665649767`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"14f4961a-b9de-4f7d-b977-a0c1db2d98bd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQB+JXi1c82LjgjaPZr56aK0BayV/i/G8g7etV/ZZp4RtH
VeXjU6sWvXG88Cbim8LiN47PJoZM0QDSmdt7ebyAdE2dnwqIPtzI1u4NpFdM
Z18YAKS94o5FBgLp/60b28KAdIBUdVk5kE47lR29DEhf008tANHy8wsmg+i8
Vy4hK4D0H1cBppVAekN5qwCIVvr8slljyRvHo0UWWoVAOkXZXbMYSHcfeV9T
AqQr/pmxzwPSe0TLpE4CaY+lv2ZXLn3juGTOivIqIL1MdmMNiD7VPXEimP/I
ezGI7nDzdZoNpPvkld9+AtJyf+b2fwHSv+rjdoDofYIWJ/6AxHcY7C9b9sYx
Sn/L3HIgzVec/6MCSOvU7u6eBaTtdCwuzgbSEa4eEgeANIO7sLHC8jeOxz8x
lE9fBbSnR7bP5dgbxylMW4zNT75xVDg1YafJqTeOALX+yQM=
  "],
 CellLabel->"Out[29]=",ExpressionUUID->"fbc9402d-1bad-4493-a0cf-6150271a5ed6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"R0Res", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Eigenvalues", "[", 
      RowBox[{"FmatRes", ".", 
       RowBox[{"Inverse", "[", "VmatRes", "]"}]}], "]"}], "[", 
     RowBox[{"[", "5", "]"}], "]"}], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8423467599777613`*^9, 3.842346784324127*^9}, {
   3.842347129708733*^9, 3.842347131384697*^9}, 3.843645313018078*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"49e9061d-1fae-4e11-8941-0a7b7e5bfaaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NumR0Res", " ", "=", " ", 
   RowBox[{"Numerator", "[", "R0Res", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DenomR0Res", " ", "=", " ", 
   RowBox[{"Denominator", "[", "R0Res", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.842347119391028*^9, 3.842347148928565*^9}, {
   3.8424181554256363`*^9, 3.842418195878849*^9}, {3.8437195703115177`*^9, 
   3.8437195855514174`*^9}, 3.843720472950934*^9, {3.8437227042457952`*^9, 
   3.8437227054278603`*^9}, 3.8460655753471613`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"7f78b5b4-f088-414f-80a1-1d30ad834275"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Ds", " ", "Is", " ", "\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"fww", " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], " ", "\[Beta]w", " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]w", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}]}], ")"}], 
           
           RowBox[{"(", 
            RowBox[{
            "d", " ", "+", " ", "\[Alpha]ww", " ", "+", " ", 
             "\[CapitalPi]ww"}], ")"}]}], "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", "  ", "\[Beta]ww", " ", "2", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], 
              RowBox[{"(", " ", 
               RowBox[{"\[Lambda]w", "+", 
                RowBox[{"2", "  ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}]}], 
               ")"}]}], " ", "+", " ", 
             RowBox[{"p", "  ", "\[Beta]ww", " ", "q", 
              RowBox[{"(", " ", 
               RowBox[{"\[Lambda]w", "+", 
                RowBox[{"2", "  ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}], "+", 
                "\[Mu]", "+", "\[Sigma]w"}], ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{
            "\[Alpha]w", " ", "+", " ", "\[CapitalPi]w", " ", "+", " ", "d"}],
             ")"}]}]}], ")"}]}], "+", 
       RowBox[{"fw", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
            "\[Alpha]ww", "  ", "+", " ", "d", " ", "+", " ", 
             "\[CapitalPi]ww"}], ")"}], "\[Beta]w"}], "+", " ", 
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
            "\[Alpha]w", " ", "+", " ", "d", " ", "+", " ", "\[CapitalPi]w"}],
             ")"}], " ", "\[Beta]ww"}]}], "  ", ")"}]}]}], " ", ")"}]}], "==",
     "NumR0Res"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.842347151796332*^9, 3.842347156133786*^9}, {
   3.8423472024800777`*^9, 3.842347226721974*^9}, {3.842347312715358*^9, 
   3.842347354588957*^9}, {3.842347397528555*^9, 3.842347399495782*^9}, {
   3.842347465093574*^9, 3.842347481428651*^9}, {3.842347512899976*^9, 
   3.842347554593276*^9}, {3.842347640937223*^9, 3.842347667861445*^9}, {
   3.842347715712759*^9, 3.842347734806402*^9}, {3.8423477807295628`*^9, 
   3.842347837481907*^9}, {3.8424131681073513`*^9, 3.842413176041315*^9}, {
   3.84241322261559*^9, 3.842413234731056*^9}, {3.8424132730513783`*^9, 
   3.842413282864148*^9}, {3.842413340626071*^9, 3.84241351511239*^9}, {
   3.8424176975452223`*^9, 3.842417773590106*^9}, {3.8424178365664167`*^9, 
   3.842417891324226*^9}, {3.842417937638818*^9, 3.8424179967647743`*^9}, {
   3.842424668190571*^9, 3.84242467209335*^9}, {3.842424847764904*^9, 
   3.84242486383325*^9}, {3.842425371832512*^9, 3.842425457884923*^9}, 
   3.843719594401211*^9, {3.843720118769651*^9, 3.8437201270221357`*^9}, {
   3.8437202117227077`*^9, 3.843720246396487*^9}, {3.843720419635194*^9, 
   3.843720442922886*^9}, {3.8437205229198217`*^9, 3.8437205270613317`*^9}, {
   3.843720566525386*^9, 3.843720576720255*^9}, {3.843721126355514*^9, 
   3.843721181338793*^9}, {3.843721238514102*^9, 3.843721244636374*^9}, {
   3.8437212803587112`*^9, 3.843721286446806*^9}, {3.843721317785719*^9, 
   3.843721319765325*^9}, {3.843721351011591*^9, 3.843721358189601*^9}, {
   3.843721390667614*^9, 3.8437214366999197`*^9}, {3.843721471900806*^9, 
   3.843721516608138*^9}, {3.8437219536302147`*^9, 3.843721956218898*^9}, {
   3.8437221090598707`*^9, 3.8437221154505367`*^9}, {3.843722174934757*^9, 
   3.843722283607585*^9}, {3.843722398247354*^9, 3.843722455723665*^9}, {
   3.843723107725583*^9, 3.843723121844743*^9}, {3.843723155957919*^9, 
   3.843723161752389*^9}, {3.8437231934108467`*^9, 3.8437232112449923`*^9}, {
   3.843723328661316*^9, 3.84372333513538*^9}, {3.8437233665410137`*^9, 
   3.843723370935363*^9}, {3.8437234073993797`*^9, 3.843723411758466*^9}, {
   3.843728439532881*^9, 3.8437284412695713`*^9}, {3.843728537397089*^9, 
   3.843728600740714*^9}, {3.8437286347647057`*^9, 3.843728648328209*^9}, {
   3.843728726733589*^9, 3.843728767510515*^9}, {3.84372879892767*^9, 
   3.843728811560494*^9}, {3.8437288936469*^9, 3.8437289585039454`*^9}, {
   3.843728994219901*^9, 3.843729130346178*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"5f06793d-9a46-4e44-b324-30d6b01ba610"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8423471565247517`*^9, {3.842347209284667*^9, 3.842347227800776*^9}, {
   3.8423473184699697`*^9, 3.842347355020711*^9}, 3.8423474004875507`*^9, {
   3.8423474745190153`*^9, 3.8423474819830236`*^9}, {3.842347519405548*^9, 
   3.8423475550129232`*^9}, 3.84234766834258*^9, 3.842347707817792*^9, {
   3.842347770435482*^9, 3.842347792855789*^9}, 3.8423478379856586`*^9, {
   3.8424132351763067`*^9, 3.842413283329282*^9}, {3.842413435708743*^9, 
   3.842413466642838*^9}, {3.842413503373502*^9, 3.842413515486771*^9}, {
   3.842417642212739*^9, 3.842417661894724*^9}, {3.8424177150478907`*^9, 
   3.842417719255196*^9}, {3.842417774203566*^9, 3.842417775802381*^9}, {
   3.842417855492606*^9, 3.8424178917694273`*^9}, {3.842417956336472*^9, 
   3.842417997219215*^9}, 3.842424672725121*^9, 3.842424752731192*^9, {
   3.842424861780633*^9, 3.842424864272053*^9}, {3.84242536950387*^9, 
   3.842425458361368*^9}, {3.842425999232408*^9, 3.842426009107109*^9}, {
   3.842426268709073*^9, 3.842426295373948*^9}, 3.842512755734535*^9, 
   3.843282101904234*^9, 3.843622853466957*^9, 3.8436384432057323`*^9, 
   3.843706984426021*^9, 3.84370718422545*^9, 3.8437196114260483`*^9, 
   3.843720081375792*^9, {3.8437201231298723`*^9, 3.843720127501601*^9}, 
   3.843720214386922*^9, 3.843720246938038*^9, 3.843720370802087*^9, {
   3.8437204219452667`*^9, 3.843720466702961*^9}, 3.843720527502824*^9, {
   3.8437205677444077`*^9, 3.843720584182205*^9}, {3.843721119195004*^9, 
   3.843721245047565*^9}, 3.843721293250477*^9, {3.843721327899473*^9, 
   3.843721338439687*^9}, 3.8437213729356823`*^9, {3.8437214085910053`*^9, 
   3.8437214371695547`*^9}, {3.843721475115719*^9, 3.843721517100758*^9}, {
   3.843721914432007*^9, 3.843721979906679*^9}, 3.843722085241407*^9, {
   3.843722116049098*^9, 3.8437221189275084`*^9}, {3.843722181099525*^9, 
   3.843722208749748*^9}, 3.843722250081646*^9, {3.84372228409511*^9, 
   3.843722287514481*^9}, 3.843722323027108*^9, {3.8437224286129217`*^9, 
   3.843722456576427*^9}, 3.8437225435791807`*^9, {3.843723112075191*^9, 
   3.843723122623172*^9}, {3.843723169270484*^9, 3.843723211709014*^9}, 
   3.843723294284156*^9, 3.843723371523546*^9, 3.843723412445346*^9, 
   3.84372844191957*^9, {3.8437285403237057`*^9, 3.843728574272084*^9}, 
   3.843728623162589*^9, 3.843728656574216*^9, 3.8437287331817617`*^9, {
   3.843728767955186*^9, 3.8437287700394297`*^9}, 3.843728812018345*^9, {
   3.8437288764713507`*^9, 3.84372889599382*^9}, 3.843728926487212*^9, {
   3.843728972908371*^9, 3.843729051813073*^9}, 3.843729100289589*^9, {
   3.8437291311711683`*^9, 3.843729133176437*^9}, 3.84372927115342*^9, 
   3.843894911955765*^9, 3.843896039695726*^9, 3.8438961959668427`*^9, 
   3.843896476339696*^9, 3.843900066964967*^9, 3.8439014573611183`*^9, 
   3.843901572994198*^9, 3.844311390018746*^9, 3.8443154667915583`*^9, 
   3.844318184292663*^9, 3.844403258527947*^9, 3.8444914765252733`*^9, 
   3.844852960669115*^9, 3.844854718084545*^9, 3.844854758353093*^9, 
   3.8448549254139833`*^9, 3.844855067224619*^9, 3.844921875237934*^9, 
   3.845101417916655*^9, 3.84510476583035*^9, 3.845105091144953*^9, 
   3.845121602590848*^9, 3.845371386360145*^9, 3.845373166478121*^9, 
   3.8453759403302803`*^9, 3.845444702718883*^9, 3.84544730662038*^9, 
   3.845521603125667*^9, 3.845718425471849*^9, {3.8460663652098703`*^9, 
   3.846066372685961*^9}, 3.846066894756277*^9, 3.847535544403359*^9, 
   3.862045812201634*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"43264c7c-a137-448c-8013-638ecbc28fc2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Ds", " ", "Is", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"fww", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], " ", "\[Beta]w", " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]w", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]w", "+", "\[CapitalPi]w"}], ")"}], "  ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]w", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], 
             "+", "\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"p", "  ", "\[Beta]ww", " ", "2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], 
           RowBox[{"(", " ", 
            RowBox[{"\[Lambda]w", "+", 
             RowBox[{"2", "  ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", "\[Lambda]ww"}]}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], ")"}], "  ", 
           
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]ww", "+", "\[CapitalPi]ww"}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]w", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], 
             "+", "\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"  ", 
           RowBox[{"p", "  ", "\[Beta]ww", " ", "q"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], ")"}], "  ", 
           
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]ww", "+", "\[CapitalPi]ww"}], ")"}], "  ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]]}], ")"}]}], " ", 
      "+", " ", 
      RowBox[{"fw", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], " ", "\[Beta]w"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]w", "+", "\[CapitalPi]w"}], ")"}], "  ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]w", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], 
             "+", "\[Mu]", "+", "\[Sigma]w"}], ")"}]}]], "+", 
         FractionBox[
          RowBox[{"  ", 
           RowBox[{"2", " ", "p", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q"}], ")"}], "  ", "\[Beta]ww", "  "}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]ww", "+", "\[CapitalPi]ww"}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{"\[Lambda]w", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], 
             "+", "\[Mu]", "+", "\[Sigma]w"}], ")"}], " "}]]}], ")"}]}]}], 
     ")"}]}], "==", "R0Res"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.846066944223221*^9, 3.846067259988765*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"2ed3597e-9591-487f-a9da-3ba78d6aebde"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8460672001042337`*^9, 3.846067205817647*^9}, 
   3.846067261040262*^9, 3.8461406601169853`*^9, 3.847535544662828*^9, 
   3.862045818460712*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"933750d1-dfe1-47e2-84a9-1bf1aab2b2fe"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"R0freePar", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"R0Res", "/.", 
      RowBox[{"\[Lambda]w", "->", " ", "0"}]}], "/.", 
     RowBox[{"\[Lambda]ww", "->", " ", "0"}]}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.842527807269709*^9, 3.842527876003934*^9}, {
   3.843282117031982*^9, 3.843282243017824*^9}, {3.8432874808944283`*^9, 
   3.843287491303299*^9}, {3.8432875318157673`*^9, 3.843287541639099*^9}, 
   3.8436384521191072`*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"4e256e8d-505d-4fd7-8ace-dafd3da754d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Is", " ", "\[Gamma]", " ", 
        FractionBox[
         RowBox[{"  ", 
          RowBox[{"p", "  ", "q", " ", "\[Beta]ww", " "}]}], 
         RowBox[{"  ", 
          RowBox[{"d", "+", "\[Alpha]ww", "+", "\[CapitalPi]ww", "  "}]}]], 
        " ", 
        FractionBox["Ds", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}]], 
        FractionBox["fww", 
         RowBox[{
          RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], "+", " ", 
       RowBox[{"Is", " ", "\[Gamma]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "p"}], ")"}], " ", "\[Beta]w"}], 
           RowBox[{" ", 
            RowBox[{"d", "+", "\[Alpha]w", "+", "\[CapitalPi]w", "  "}]}]], 
          "+", 
          FractionBox[
           RowBox[{"  ", 
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], "  ", "\[Beta]ww", "  "}]}], 
           RowBox[{" ", 
            RowBox[{
            "d", "+", "\[Alpha]ww", "+", "\[CapitalPi]ww", "  "}]}]]}], ")"}], 
        FractionBox["Ds", 
         RowBox[{"(", 
          RowBox[{"\[Lambda]w", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], 
           "+", "\[Mu]", "+", "\[Sigma]w"}], ")"}]], 
        FractionBox["fw", 
         RowBox[{
          RowBox[{"Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}]}], "==", 
      "R0Res"}], "/.", 
     RowBox[{"\[Lambda]w", "->", " ", "0"}]}], "/.", 
    RowBox[{"\[Lambda]ww", "->", " ", "0"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.846140709819811*^9, 3.846140837628457*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"db2ff817-a5cb-4597-bd6c-73c13574dce1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8461407196064997`*^9, 3.846140746428327*^9}, 
   3.846140801883298*^9, 3.84614086121764*^9, 3.847535545013115*^9, 
   3.862045821150001*^9, 3.863591369707611*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"85b78d3b-a51f-4ce0-a1a8-9c5e1cdf33c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Simple analytical results (linear birth functions)", \
"Subtitle"]], "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.840514014276919*^9, 3.840514019585744*^9}, 
   3.8405140648170156`*^9, 3.8405141412997627`*^9, 3.84051433703167*^9, 
   3.840514417726609*^9, {3.843635565978847*^9, 
   3.8436355720922728`*^9}},ExpressionUUID->"785f6306-1f08-4037-85f7-\
43f9aedb5288"],

Cell["\<\
Solution where both the intermediate and definitive hosts are free of \
parasites:\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.840268351795437*^9, 3.8402684025097313`*^9}, {
   3.8402687006267443`*^9, 3.840268710054265*^9}, 3.840514141300152*^9, 
   3.840514337032174*^9, 
   3.8405144177272863`*^9},ExpressionUUID->"88346038-a7d5-4c7a-95d2-\
1dbc3a483443"],

Cell[BoxData[
 RowBox[{"solRes0", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"odesRes", "==", 
         RowBox[{"{", 
          RowBox[{
          "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
           ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "/.", "func0"}], "/.",
       "forceInf"}], "/.", "pFreeCond"}], ",", " ", "varRes"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.84018729125229*^9, 3.840187373687316*^9}, {
   3.8402531909736547`*^9, 3.840253192252235*^9}, {3.840255188498026*^9, 
   3.840255215855186*^9}, {3.840255267251403*^9, 3.840255274318655*^9}, {
   3.840256025092759*^9, 3.840256025779974*^9}, 3.840268402510087*^9, {
   3.840268700627323*^9, 3.84026871005468*^9}, 3.840514141300496*^9, 
   3.840514337032456*^9, 3.840514417727694*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"766efe42-5b6b-453e-a7cc-1e0943ad2f93"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    35, 1, 21338864352712041606, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOJbHosyd8954zjFTqoKRC/gtuXZB6TXqEsxGc9946ix
YCU3iG7jUVQB0R4+5nogelvx15/JQHrW1Jtv0oH0p3oGxuZFbxy3FOjM11j8
xjHDr5hhGZCW+9hbAKKfNc2cDKLf3ckJWQGkte5bMK0E0kv81gmA6HXrEzSL
l7xx3McmXlsCpIUOx7HPA9LZBQulTgJp1g61OZVL3zhatV4urwLSFlp3akC0
XOW+iSA6z6hiMYj2Sapwmg2kY9z93n4C0tsUz/R/AdKZH1N3gOhTt5JP/AHS
WgUx+8uWvXFssHowtxxIr7ow+0cFkO7iedE9C0hLsKVenA2kb5iVShwA0ieM
7I0Vlr9xDApXKp++Cqi/+3G/yzFgeBWtsjQ/+cYRAElxrCM=
  "],
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"4202fa2a-c51b-45df-a733-8bda502b8691"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"d", "-", "r"}], "\[Rho]"]}]}]}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBOJZzYsyd89548iWJVUFonuMbXn2AekrGlJMxnPfOPot
WckNom/xKaqA6GP+5nogmk/4289kIK13/OabdCD94xMDY/OiN46Hj+nM11j8
xvHXsmKGZUB658y+AjCtPmsyiP52NjdkBZAu8LNkWgmk05atEwDRM+4maBYv
eeN4JFi8tgRIr2OKZ58HpCvOLZQ6CaTbz6vNqVz6xtHy0uXyKiC9PutODYgO
OLRvIoieOaFiMYg+sq/CaTaQfjbd7+0nIC24/Uz/FyDNXJ22A0RXt6Wc+AOk
L0jG7i9b9sbRReHh3HIgPeXwnB8VQHqu/MvuWUB6nULaxdlA2qK6TOIAkPbr
dzBWWP7GUWemUvn0VW8cd6193O9y7I1j4f5VluYn3zgCAI76sdM=
  "],
 CellLabel->"Out[35]=",ExpressionUUID->"355762a6-1d12-4308-9e7a-987ee651790c"],

Cell[TextData[{
 "Solution where infected definitive hosts do not exist (Note this solution \
is not biologically meaningful because ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "s"], TraditionalForm]],ExpressionUUID->
  "b784302c-8c97-4bf9-b211-5c71c28404b7"],
 " is always negative):"
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8402685071665077`*^9, 3.840268548161446*^9}, {
   3.840268628920817*^9, 3.840268657407669*^9}, {3.84026870062747*^9, 
   3.8402687235254097`*^9}, 3.840514064817547*^9, 3.840514141301457*^9, 
   3.84051433703318*^9, 
   3.840514417728807*^9},ExpressionUUID->"5ae710aa-01ee-4461-923d-\
0d06091b9b74"],

Cell[BoxData[
 RowBox[{"solResD0", " ", "=", "  ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"odesRes", "==", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
            ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "/.", "func0"}], "/.",
        "forceInf"}], "/.", "pDFreeCond"}], ",", " ", "varRes"}], "]"}], "//",
    "FullSimplify"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8402677757045383`*^9, 3.840267786308628*^9}, {
   3.840267832542877*^9, 3.840267844515133*^9}, 3.840268548161957*^9, {
   3.840268700627775*^9, 3.840268723525737*^9}, 3.840514064817706*^9, 
   3.840514141301783*^9, 3.84051433703347*^9, 3.840514417729145*^9, {
   3.840622524283876*^9, 3.84062252903902*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"3213acb1-f9e1-47ab-bbfd-d715a7c0f813"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    36, 2, 21338864352712041606, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.847535545123148*^9, 3.862045825082218*^9, 
  3.8635913793126717`*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"dbdb3a38-85b1-4af6-99d9-e885309b9a47"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Iww", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["\[Delta]", "\[Gamma]"]}]}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Delta]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["d", "2"], "-", 
           RowBox[{"p", " ", "r", " ", "\[Alpha]w"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r"}], "+", 
              "\[Alpha]w"}], ")"}], " ", "\[Alpha]ww"}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "r"}], "+", "\[Alpha]w", "+", "\[Alpha]ww"}], 
             ")"}]}]}], ")"}], " ", "\[Gamma]"}]]}]}], ",", 
     RowBox[{"Iww", "\[Rule]", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"d", "-", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"d", "+", "\[Alpha]w"}], ")"}], " ", "\[Delta]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["d", "2"], "-", 
          RowBox[{"p", " ", "r", " ", "\[Alpha]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r"}], "+", 
             "\[Alpha]w"}], ")"}], " ", "\[Alpha]ww"}], "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "r"}], "+", "\[Alpha]w", "+", "\[Alpha]ww"}], 
            ")"}]}]}], ")"}], " ", "\[Gamma]"}]]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "-", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Alpha]w"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", "\[Alpha]ww"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["d", "2"], "-", 
           RowBox[{"p", " ", "r", " ", "\[Alpha]w"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r"}], "+", 
              "\[Alpha]w"}], ")"}], " ", "\[Alpha]ww"}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "r"}], "+", "\[Alpha]w", "+", "\[Alpha]ww"}], 
             ")"}]}]}], ")"}], " ", "\[Gamma]"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Iww", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], "\[Rho]"]}], ",", 
     RowBox[{"W", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.84753554518222*^9, 3.862045825178135*^9, 
  3.863591379394515*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"14b4ac9f-7189-4195-b3f0-e1acee6cac0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Condition for positive parasite population (linear birth functions)\
\>", "Subtitle",
 CellChangeTimes->{{3.843287614150427*^9, 3.843287620477557*^9}, {
  3.843623157516308*^9, 
  3.843623164840067*^9}},ExpressionUUID->"40085cc7-ab6e-4469-9298-\
5fb6c171af5a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"R0freePar", "/.", 
         RowBox[{"\[CapitalPi]w", "->", " ", 
          RowBox[{"\[CapitalPi]w", "[", 
           RowBox[{"Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]w"}], "]"}]}]}], 
        "/.", 
        RowBox[{"\[CapitalPi]ww", " ", "->", " ", 
         RowBox[{"\[CapitalPi]ww", "[", 
          RowBox[{"Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]ww"}], "]"}]}]}], 
       "/.", "func0"}], "/.", 
      RowBox[{"solRes0", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "/.", "pDFreeCond"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Reduce", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"%", " ", ">", " ", "1"}], " ", "&&", " ", 
       RowBox[{"fw", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"fww", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"d", " ", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[Gamma]", " ", ">", " ", "0"}], "&&", 
       RowBox[{"1", ">", "p", ">", "0"}], "&&", 
       RowBox[{"1", ">", "q", ">", "0"}], "&&", 
       RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", 
       RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Mu]", " ", ">", "0"}], " ", "&&", " ", 
       RowBox[{"\[Sigma]w", " ", ">=", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Sigma]ww", " ", ">=", " ", "0"}], " ", "&&", 
       RowBox[{"\[Alpha]w", " ", ">=", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Alpha]ww", " ", ">=", "0"}], " ", "&&", " ", 
       RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"\[Delta]", " ", ">", " ", "0"}], " ", "&&", " ", 
       RowBox[{"r", " ", ">", " ", "d"}]}], ",", " ", "Reals"}], "]"}]}], 
   "*)"}], 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "comment", " ", "this", " ", "code", " ", "because", " ", "the", 
    " ", "calculation", " ", "time", " ", "is", " ", "too", " ", "long"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.84328762517489*^9, 3.843287883282989*^9}, {
   3.8432879167940702`*^9, 3.843287919286336*^9}, {3.8432881531506968`*^9, 
   3.843288155770012*^9}, 3.843298430449293*^9, {3.84329912842635*^9, 
   3.843299131615567*^9}, {3.8432992100741587`*^9, 3.8432992103144217`*^9}, {
   3.8436355846022673`*^9, 3.8436355920583563`*^9}, {3.844944217210157*^9, 
   3.844944239719256*^9}, {3.844945851159042*^9, 3.844945885635758*^9}, {
   3.847535571280246*^9, 3.847535580237381*^9}, 
   3.8475358845575647`*^9},ExpressionUUID->"26e6d7f6-8d8b-4ca4-a19b-\
5030d45e4dde"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8475358792973824`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"3fac33fc-075a-446c-b207-0623461df404"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"condParasiteInv1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", ">", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c", " ", "\[Delta]", " ", "\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d"}], " ", "\[Beta]ww"}], "+", 
             RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fw", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", "r", " ", 
                 "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r", " ", 
                 "\[Beta]w", " ", "\[Rho]"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                 " ", "\[Beta]w", " ", "\[Rho]"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "r", " ", 
                 "\[Beta]ww", " ", "\[Rho]"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Alpha]w", 
                 " ", "\[Beta]ww", " ", "\[Rho]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
              
              RowBox[{"(", 
               RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "fww"}], " ", "p", " ", "q", " ", "r", " ", 
                 "\[Beta]ww"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              SuperscriptBox["d", "2"], " ", "\[Beta]w", " ", "\[Beta]ww", 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fw", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "fww"}], " ", "p", " ", "q"}], "+", "\[Mu]", 
                   "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fw", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"p", " ", "q"}]}], ")"}], " ", "r", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r", " ", 
                    "\[Beta]w", " ", "\[Rho]"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", "\[Rho]"}], "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "r", " ", 
                    "\[Beta]ww", " ", "\[Rho]"}], "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Alpha]w", 
                    " ", "\[Beta]ww", " ", "\[Rho]"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "fww"}], " ", "p", " ", "q", " ", 
                    "\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Beta]w"}], "+", "\[Rho]"}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "2", " ", "r", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"r", " ", "\[Beta]w", " ", "\[Rho]"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Rho]"}], 
                    "+", 
                    RowBox[{"r", " ", "\[Beta]ww", " ", "\[Rho]"}], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Rho]"}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], ")"}]}]}], ",", " ", 
     RowBox[{"fw", ">", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", "\[Beta]w"}], "-", 
           RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "fww"}], " ", "p", " ", "q", " ", "r", " ", 
            "\[Beta]ww"}], "+", 
           RowBox[{"d", " ", "\[Beta]ww", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"fww", " ", "p", " ", "q"}], "-", "\[Mu]", "-", 
              "\[Sigma]ww"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"d", "-", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
            "\[Beta]ww"}], "+", 
           RowBox[{"\[Alpha]ww", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]w", "-", 
              RowBox[{"p", " ", "\[Beta]w"}]}], ")"}], " ", "\[Rho]"}], "-", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "r", " ", 
            "\[Beta]ww", " ", "\[Rho]"}], "-", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Alpha]w", " ", 
            "\[Beta]ww", " ", "\[Rho]"}], "+", 
           RowBox[{"r", " ", "\[Beta]w", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]ww", "-", 
              RowBox[{"p", " ", "q", " ", "\[Beta]ww"}], "+", "\[Rho]", "-", 
              RowBox[{"p", " ", "\[Rho]"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], ")"}]}]}], ",", " ", 
     
     RowBox[{"fww", "<", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", "\[Beta]ww"}], "-", 
          RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], 
       RowBox[{"p", " ", "q", " ", 
        RowBox[{"(", 
         RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]ww"}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"condParasiteInv2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Gamma]", ">", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"c", " ", "\[Delta]", " ", "\[Rho]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "d"}], " ", "\[Beta]ww"}], "+", 
             RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"fw", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", "r", " ", 
                 "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r", " ", 
                 "\[Beta]w", " ", "\[Rho]"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                 " ", "\[Beta]w", " ", "\[Rho]"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "r", " ", 
                 "\[Beta]ww", " ", "\[Rho]"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Alpha]w", 
                 " ", "\[Beta]ww", " ", "\[Rho]"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
              
              RowBox[{"(", 
               RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "fww"}], " ", "p", " ", "q", " ", "r", " ", 
                 "\[Beta]ww"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              SuperscriptBox["d", "2"], " ", "\[Beta]w", " ", "\[Beta]ww", 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fw", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "fww"}], " ", "p", " ", "q"}], "+", "\[Mu]", 
                   "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", 
             RowBox[{"d", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"fw", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"p", " ", "q"}]}], ")"}], " ", "r", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "r", " ", 
                    "\[Beta]w", " ", "\[Rho]"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", "\[Rho]"}], "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "r", " ", 
                    "\[Beta]ww", " ", "\[Rho]"}], "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Alpha]w", 
                    " ", "\[Beta]ww", " ", "\[Rho]"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "fww"}], " ", "p", " ", "q", " ", 
                    "\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]w", " ", "\[Rho]"}], "+", 
                    RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Beta]w"}], "+", "\[Rho]"}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "2", " ", "r", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"r", " ", "\[Beta]w", " ", "\[Rho]"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Rho]"}], 
                    "+", 
                    RowBox[{"r", " ", "\[Beta]ww", " ", "\[Rho]"}], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Rho]"}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], ")"}]}]}], ",", " ", 
     RowBox[{"fww", ">=", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", "\[Beta]ww"}], "-", 
          RowBox[{"\[Alpha]ww", " ", "\[Rho]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]ww", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], 
       RowBox[{"p", " ", "q", " ", 
        RowBox[{"(", 
         RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]ww"}]]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.843288283266861*^9, 3.843288293939105*^9}, {
  3.843298376129668*^9, 3.8432984209767027`*^9}, {3.8435341674150743`*^9, 
  3.843534197471992*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"06183493-a025-4f8f-94b4-64ccbad3bbb2"],

Cell[CellGroupData[{

Cell["\<\
Stability of disease free equilibrium (linear birth function)\
\>", "Subtitle",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.840271997504999*^9, 3.840272003230513*^9}, 
   3.8405140648177643`*^9, 3.8405141413019238`*^9, 3.840514337033615*^9, 
   3.840514429119138*^9, 3.8406227221344757`*^9, {3.843643651294598*^9, 
   3.843643656275661*^9}, {3.843644781680325*^9, 
   3.843644783461403*^9}},ExpressionUUID->"118a79e6-9565-4747-b8f9-\
1ba112b1eb1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jmat", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"odesRes", "/.", "func0"}], "/.", "forceInf"}], ",", " ", 
     RowBox[{"{", "varRes", "}"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.8405140648178883`*^9, 3.840514141302197*^9, 3.8405143370338297`*^9, 
   3.840514429119684*^9, {3.8405428439732533`*^9, 3.840542844669961*^9}, 
   3.840622722142933*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"f5f468d7-1209-46ec-8f8e-031c19f4223e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Jmat", "/.", 
    RowBox[{"solRes0", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "/.", "pFreeCond"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"eivPF", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "%", "]"}], "//", "FullSimplify"}]}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.840274361836464*^9, 3.8402744475116377`*^9}, 
   3.840274496222281*^9, {3.840274749167842*^9, 3.840274749757592*^9}, {
   3.8402747960781803`*^9, 3.840274812627369*^9}, 3.840514064834634*^9, 
   3.84051414130319*^9, 3.840514337034724*^9, 3.840514429121194*^9, 
   3.840622722143345*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"c368376e-26a1-4c56-855e-453094ed67f6"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partd", 
   "\"Part specification \\!\\(\\*RowBox[{\\\"solRes0\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"", 2, 30, 1, 21342267951595627913, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.864110548186316*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"11577228-6a8c-4943-8eea-73172fed1607"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"solRes0\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"2\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"}\\\
\"}]\\) is neither a list of replacement rules nor a valid dispatch table, \
and so cannot be used for replacing.\"", 2, 30, 2, 21342267951595627913, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.8641105482219267`*^9},
 CellLabel->
  "During evaluation of \
In[30]:=",ExpressionUUID->"20a54171-4b0d-4a89-9c56-2220bac8913e"],

Cell[BoxData[
 TagBox[
  RowBox[{"Jmat", "/.", "\[VeryThinSpace]", 
   RowBox[{"solRes0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.840622668892795*^9, 3.840622722143589*^9, 
  3.843299561950347*^9, 3.844854950691225*^9, 3.844855088415421*^9, 
  3.8475355517538767`*^9, 3.8620458338152523`*^9, 3.863591387347999*^9, 
  3.8641105482324085`*^9},
 CellLabel->
  "Out[30]//MatrixForm=",ExpressionUUID->"6029b48f-361e-420a-9fb6-\
cd76b8fdfefb"],

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"Jmat", "/.", "\[VeryThinSpace]", 
   RowBox[{
   "solRes0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  "]"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.840622668892795*^9, 3.840622722143589*^9, 
  3.843299561950347*^9, 3.844854950691225*^9, 3.844855088415421*^9, 
  3.8475355517538767`*^9, 3.8620458338152523`*^9, 3.863591387347999*^9, 
  3.864110548236454*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"f0c88209-9e4d-47fa-963a-0be0bc87ba1f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jmat", "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"varRes", "->", " ", "0"}], "]"}]}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"eivExtinct", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "%", "]"}], "//", "FullSimplify"}]}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8405428593073807`*^9, 3.840542874563037*^9}, 
   3.8406139066430597`*^9, 3.840622722144096*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"a5ab7fe9-e74b-452f-9c5b-23c13e6eb24c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "+", "r"}], "r", "r", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]w"}], "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]ww"}], "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "\[Mu]"}], "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]w"}], "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]ww"}], "0"},
     {"0", "0", "0", "0", "fw", "fww", 
      RowBox[{"-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.840542875752674*^9, 3.840613906643477*^9, 
  3.84061434459832*^9, 3.840622673067066*^9, 3.840622722144388*^9, 
  3.8448549550419827`*^9, 3.84485509274417*^9, 3.847535556090281*^9, 
  3.862045840462736*^9, 3.863591392818406*^9},
 CellLabel->
  "Out[40]//MatrixForm=",ExpressionUUID->"05de1e16-8b58-4969-b53e-\
15f9740bb9d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "d"}], "+", "r"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]w"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]ww"}], ",", 
   RowBox[{"-", "\[Delta]"}], ",", 
   RowBox[{"-", "\[Mu]"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]w"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]ww"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{3.840542875752674*^9, 3.840613906643477*^9, 
  3.84061434459832*^9, 3.840622673067066*^9, 3.840622722144388*^9, 
  3.8448549550419827`*^9, 3.84485509274417*^9, 3.847535556090281*^9, 
  3.862045840462736*^9, 3.863591392822361*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"9bb7f784-bec0-4aca-9938-89261d63d492"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical results func0 (linear functions)", "Subtitle",
 CellChangeTimes->{{3.840258379305201*^9, 3.840258382362982*^9}, {
   3.8405135109393053`*^9, 3.840513517497058*^9}, 3.840514098829278*^9, 
   3.840514141303795*^9, 
   3.84051433703531*^9},ExpressionUUID->"e661217e-bce4-44e1-b057-\
703613878664"],

Cell[CellGroupData[{

Cell["General view", "Chapter",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8405145285713043`*^9, 3.8405145687894583`*^9}, {
   3.840617835613304*^9, 3.840617849195436*^9}, 
   3.840621766122772*^9},ExpressionUUID->"369dbb49-df9d-4039-a34e-\
81579b52b3b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vartRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.840267043256103*^9, 3.840267082942012*^9}, 
   3.840514098860284*^9, 3.84051414130414*^9, 3.840514337035565*^9, 
   3.840514568789918*^9, {3.840617835617147*^9, 3.8406178491959867`*^9}, 
   3.8406217661232653`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"ca1869e2-dd1d-4aa2-a47e-3913afb28c30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"varRes", ",", " ", "vartRes", ",", " ", 
     RowBox[{
      RowBox[{"odesRes", "/.", "func0"}], "/.", "forceInf"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysfunc0", " ", "=", " ", 
   RowBox[{
    RowBox[{"odesRes", "/.", "forceInf"}], "/.", "func0"}]}], ";"}]}], "Input",\

 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.84026711610391*^9, 3.840267150030972*^9}, {
   3.8402673483779573`*^9, 3.8402673510901318`*^9}, {3.840269935333167*^9, 
   3.840269935550186*^9}, 3.8402700833694267`*^9, 3.840270124595428*^9, {
   3.84027185477328*^9, 3.840271854986679*^9}, 3.840514098873705*^9, 
   3.8405141413044443`*^9, 3.840514337035857*^9, 3.8405145687902327`*^9, {
   3.840617835621526*^9, 3.84061784919632*^9}, {3.840617993041376*^9, 
   3.840617993254683*^9}, 3.840621766123581*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"f1a8604d-2c29-49aa-a127-beb9acfa02df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEco0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.9"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "2.9"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "6.5"}], ",", 
     RowBox[{"fww", "->", " ", "7.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.9"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.8402671771488247`*^9, 3.840267333289815*^9}, 
   3.840267380805736*^9, {3.840268899492694*^9, 3.8402688997230463`*^9}, {
   3.840269290135006*^9, 3.840269290443408*^9}, {3.840269401560028*^9, 
   3.8402694044078083`*^9}, {3.840269815904819*^9, 3.8402698160592947`*^9}, {
   3.840269940759324*^9, 3.8402699465312433`*^9}, {3.840270545548256*^9, 
   3.8402705593353777`*^9}, {3.840270627639761*^9, 3.840270630653143*^9}, 
   3.840271670908229*^9, {3.840271726307644*^9, 3.840271726520396*^9}, {
   3.8402719441150093`*^9, 3.840271944219903*^9}, 3.840514098886499*^9, 
   3.840514141304799*^9, 3.840514337036195*^9, 3.840514568790616*^9, {
   3.840529264639326*^9, 3.840529265210904*^9}, {3.840530167216806*^9, 
   3.840530167937089*^9}, 3.840530380715819*^9, {3.8406138457432957`*^9, 
   3.840613845933887*^9}, {3.8406178356240883`*^9, 3.840617849196773*^9}, 
   3.840618931380859*^9, {3.840619136060405*^9, 3.840619137568012*^9}, {
   3.840619189626096*^9, 3.840619191703432*^9}, {3.840619257151396*^9, 
   3.840619259726961*^9}, {3.840619536171184*^9, 3.8406195663234053`*^9}, {
   3.840619790472558*^9, 3.840619797359726*^9}, {3.8406198454044027`*^9, 
   3.8406198498648157`*^9}, {3.840619918783684*^9, 3.840619950061468*^9}, {
   3.840619991486444*^9, 3.8406199938690567`*^9}, 3.840621766129657*^9, {
   3.8406227514737587`*^9, 3.84062275312122*^9}, {3.843298866820068*^9, 
   3.8432988673104362`*^9}, {3.8435369978205433`*^9, 3.8435370304179*^9}, {
   3.8436412752074623`*^9, 3.8436412904355288`*^9}, {3.843642538211543*^9, 
   3.843642544472919*^9}, {3.843642576428927*^9, 3.843642606604705*^9}, {
   3.843642663886593*^9, 3.84364268045193*^9}, {3.8437100463829403`*^9, 
   3.8437100511995983`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"7cf35002-4119-41d1-8ddf-f833a6d87d32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "35"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init0", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "2"}], ",", 
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], "==", "0.3"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", 
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], "==", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "10"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sols0", " ", "=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"odesRes", "/.", "func0"}], "/.", "forceInf"}], "/.", 
         "prEco0"}], ")"}], " ", "\[Equal]", " ", "0"}], "]"}], ",", " ", 
     "varRes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndsol0", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"sys", "/.", "prEco0"}], ",", " ", "init0"}], "]"}], ",", " ", 
     "varRes", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Is", "[", "t", "]"}], ",", " ", 
         RowBox[{"Ds", "[", "t", "]"}]}], "}"}], "/.", "ndsol0"}], "]"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", "All"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(I\), \(s\)]\)\>\"", ",", "  ", 
        "\"\<\!\(\*SubscriptBox[\(D\), \(s\)]\)\>\""}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Time\>\"", ",", " ", "\"\<Densities of susceptible hosts\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Evaluate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "maxt", "]"}], ",", 
     RowBox[{"W", "[", "maxt", "]"}]}], "}"}], "/.", "ndsol0"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
         RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
         RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
         RowBox[{"Dww", "[", "t", "]"}], ",", 
         RowBox[{"W", "[", "t", "]"}]}], "}"}], "/.", "ndsol0"}], "]"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", "All"}], "}"}]}], 
     ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(I\), \(w\)]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(I\), \(ww\)]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(D\), \(w\)]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(D\), \(ww\)]\)\>\"", ",", " ", 
        "\"\<W\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Time\>\"", ",", " ", 
        "\"\<Densities of infected hosts and parasite pool\>\""}], "}"}]}], 
     ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<diseasefree_linear.jpg\>\"", ",", "%"}], "]"}], 
   "*)"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.840267355206079*^9, 3.8402673960220337`*^9}, {
   3.840267448765839*^9, 3.8402675713739357`*^9}, {3.840267608373993*^9, 
   3.840267677059222*^9}, 3.840268914998992*^9, {3.840269308443866*^9, 
   3.840269314566875*^9}, {3.84026934468056*^9, 3.840269348918481*^9}, {
   3.840269422079461*^9, 3.840269442681776*^9}, 3.8402694812022457`*^9, {
   3.840269970004361*^9, 3.840269971552166*^9}, {3.840270149298127*^9, 
   3.840270237327553*^9}, {3.840270598509842*^9, 3.840270604595924*^9}, {
   3.840271651721135*^9, 3.840271651866849*^9}, {3.840271778976617*^9, 
   3.840271779238429*^9}, {3.840271859452159*^9, 3.840271860359956*^9}, 
   3.840271963981258*^9, 3.840514098886758*^9, 3.8405141413051043`*^9, 
   3.840514337036592*^9, 3.84051456879116*^9, {3.8405407563158712`*^9, 
   3.8405407599626513`*^9}, {3.8405408401396637`*^9, 3.840540927027614*^9}, {
   3.8406138522960157`*^9, 3.840613861642527*^9}, {3.840617835626295*^9, 
   3.840617849197897*^9}, {3.84061916122434*^9, 3.840619173438177*^9}, {
   3.840619212543065*^9, 3.840619216350124*^9}, {3.840619600868989*^9, 
   3.840619609924817*^9}, {3.840619869003289*^9, 3.8406198919005527`*^9}, 
   3.840621766130748*^9, {3.8435370478131943`*^9, 3.843537048286395*^9}, 
   3.8436425107884607`*^9, {3.843642620055634*^9, 3.8436426522093363`*^9}, {
   3.843644681770894*^9, 3.843644681980153*^9}, {3.843895463811347*^9, 
   3.843895485799382*^9}, {3.844143882366214*^9, 3.8441439497246017`*^9}, {
   3.8441439885595703`*^9, 3.8441441078949747`*^9}, {3.8448551454901123`*^9, 
   3.8448551464723263`*^9}, {3.8448551851625443`*^9, 3.844855185451644*^9}, {
   3.8620458697311153`*^9, 3.862045958652194*^9}, {3.87101272217144*^9, 
   3.87101272236763*^9}},ExpressionUUID->"d8645f92-3e73-4196-a8fb-\
1b38e8d378c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "5.580867563795758`*^-14", ",", "6.200963959773064`*^-15", ",", 
    "2.166258129109538`*^-12", ",", "1.973018000799878`*^-15", ",", 
    "1.0565605172091034`*^-10"}], "}"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.844855186645587*^9, 3.8475355569403048`*^9, {3.8620458493690968`*^9, 
   3.862045962461378*^9}, 3.863591406613413*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"09f456fa-3063-4749-8b30-e8b7a1388494"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
4IVHPJbJaqrgdvhP+GN7U9x5c179tpYqWIuplSuKH8cR6okblkdVobjwuPQX
SzO8XTbqQ3tKFW5rRY50Up7EQwklZ9fOqALJS/XVMJ+TuNIjTG3cShU6HVwP
HJw7iT0UpP9WXVKFU3mHLIa/ncJTBTe8HT1VYebxGX6FqdP4DP/uaL63KiTk
TpRKB5zB7+9F6P++qQoGfyR1FTjO4mdeKVxOoaogntHF0XHGAl9C1TXOSarw
9/VkbuKBc7i3+LBIYaoqCIa90OVvPYcPi3yImUtXhXJqEouscGssSDNsfS1H
FaRZWJUpWS7g0U/bu66VqjAaXH/ycOVFbKob7lBUowptvnaXfkra4jeVB3oW
61VhHrFJZWfa4vRHAo/dW1XhZWbBv8rES9jqChz1HFSF7TS75IpcO/xhoO1F
6Ygq5DA8V/NUvoI1jE6w/RlTBfW20OX191cwl8Klyeu/9/Ugr3v6adUef94I
jbyxpQrn1OQMecOvYl1nhqWKXVWQU1B856DshMu/JVmsk6mB3f0VO9dpJ5zQ
nCPlQ68GTwrbhERsXLBZbGuHL58aJDB6iuVHu+HG3ePK1YJq4DSmrP6C6I4V
PAbTN0XVoOfVy775bHfMeOb3tZtyasBFTUuIjPLAnYfomQKQGggbrBbpB13H
2gmJvnVH1ICCceK6DoUXfkHBN76tpwZmzr6tH+964ejfsqWBx9Vg7WOdjkTh
DWxQZmoefFEN5s7d0M/g8sVVYgN1DXZqEJj9MlK/3hdLpNqIkVxVg4cUuVGX
HP0wVaD7eoiHGkgb/i7y+HATv9NLSL19Ww0cT7MZ57UH4kn72o83I9Qg2O3l
TEtUEKaK/El2PVpt/z9GolpkHIwNWlWvXU5Qg9cGnEfzPUJwp/7wYd0nauDv
Q9nUJ3EbzztQ+GjnqoFLx21Si/TbmDFKrlC5QA1Osi91t7OGYrO2YA6xUjUw
dv/+s44+DPcZiM5SNqsBk91DpW2hCLzqaCK4+14NxAQM6eiKIzDbHe/T6+1q
4FbqR/XicCQ+097WMPVJDb4U8oWTukfhr4bXklrH1YBbuODk7X/R+N/V5PaG
STUYGSSXqciPwXzRDbuvf6tB4alGwSNWsfjCB+ar+ctqoOmXm/D9w108YVSp
c4dUHXS/Uzi98ozH5M7fPW9RqgPr2UteRiPxWDSGJt+PVh1Eh/+lRRvcx/Yd
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
z8W1NQa4f2fgePo+/D+e8Yww
              "]]}, 
            Annotation[#, "Charting`Private`Tag$22640#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
cf2Z3+VAGTz/Xbah8ecAnFhgpDkeLoOnBNm9b+4ahbFpp0zVWBnkrPSAzpbv
cG6khsCavGOfgsI9NvAHLH1hqZu7KYNHaejDfxnPQUin26H2PBls1kx3Oqj1
B6ibX42WFskgqb38qOmDVUis5/SPfSyD1MriVPp8/4Cr6jyN63MZLPn2o+XU
4C7Mf/g2U/+VDKYGc6rqfqFGqXt8MsLNMlgYeEr3aRIDVtz2rdvqkMF9Jt/p
rtIyIym99dBgrwweTLZn65Viw8Z4obEXwzL4IYhvn/MdTuwJ6qAJmJXBvxR3
xfR1BNHeVzzryIoMbl8j/K1lFsZJ9xAZxS0Z9H7bFn9tXgS9HD/VMdHI4nmD
51ZuD3d4tg3B8heTLGZspsQLknZ4pWXEWAuHLCbJZZ/3TJREOpOv/vcFZFHl
lcw7pSIpTAEF2mhxWfx8J5/m9lVp5NW4luUoJ4st7iJfZ+UIeFd+SAbUZDHy
gqQb6T4BZSVU6/m1ZZHneMO4yfJOHwvEW24YyGJ2rOyjvp0+0uYYG/tyUBb9
rrrMSynLYBOjZsCzo7J44evp9EoZGbSgSqZNs5PFw3NRBWJsMvjl72SWt7Ms
7iYXuNjNENDhj7asheeOPscb+egaAjKxUnT1+MsiF01/wlwQAWsUG/1Ohsqi
jcJxzmkVArJ7GdW6Jcrim9uRWrQ3pbFl2sI0qlwW5fL3R1vtzHXF4dNu1Uuy
aO1x5GFEtjgObQozwj9ZTE9s+aF1QBzj+L4/fkcth1sqwxTba2L43cZttZtT
Dg1+DlmUnhTDzE/e134T5VA169X+VjlRpGiNKBQJlUNXMaEtCiphfDilb1Jy
VQ5PKGUm678RwhM0NDMKiXJo3maVGhQlhE/141S08+SQbt/d4moaIXSrT208
/loOZ+K3jiopCiLH0FHX4VY5/D0912xQJ4CNfzkZXLrlkH55vJrxoADya946
7Dsuh8XKjF/yvfixq/LuSAK1PJ5//APkmnkxtNslmm2vPPb1cvtqOPIiYUFS
KptTHkUieZLebfJgtHzZhSJJeeTk3y4/RuRBYsnTrdcH5PFoZZVFRQMX3sl9
x796Qx4rMxkePGThwNt2sl+sM+Tx1N7W1KlGdszkTUt5miuPdn9K1o0D2DEx
w4HG97E8jtVssJwbYsOgxL9zM13yyH+FQa6phhWPXFF6M8amgMV72obs7zOj
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
mhMN1R/OO0iTuDT32ajg4XIUEhvzuiBDooLLzfeGIqux55/iRPJWEkt9//34
+JgfM/vOnH6yncQtIlVFGaQgOr5+0N8kxzpLPfropCSCSg9HbQYUSHwRbPJ4
hYE4zsQrfmLbQWLYN6FUnQpJLPM9YyGqQuK+Bqm+tTXSGGz1oH3nThKtPeL0
5jJlkNIeNdDfRSJv0OOQo3pbkXerYsNJDRJfBU/NihVtw7ZVZ8hgTRJfjq0x
Kvy4HZPG86puaJEoZPdKX6JcFo91jGg93kdivqBGkIStHMo8VSh5AySWXNp1
y6NdDn+mOqv2a5N4U8v8uq+wPBZczHvwj07i+lppC01NefRxGNkuQpEo6zD9
e2yvPO7VU8hSZZJ4OCjoTK2sPHKoOG/SO8D6P9dN5/fL5PGVYF6yvR6J3tx2
84w2OYxeGBYMMiBxa5zZWbv/5ND0i3xckiGJswK5EzWGcvg19354oylLb4/P
Kk6VyOKc1n0vlaMkmsn3HFZw2o6ytvcM/pxh4Vs023q+2oKvUvcUTLmS+Ghw
X7zq+S148mMD/6A7iXOc3zc1qW7BLMPhjjZvEi8HFN3JTpdBSVCwzD1PYsDH
acHN4ZtRaONDB5MoEtPntb7VBUph0aH9r5kxJBId0bnXtaXQ9Fqz3P44Fp70
Dg0tLimMWzU+uv0/El/PeIf+ipZE3vkdXn9TWPx5xi41HdqEHO8fBd/NI1H3
qsUA97qNmMFP+5b2kMQomTbpqgIxRP02ekIBiZqlwwtvD4rh+dop7qAnJMa4
fGQbiBPFucKdUablJKosuozabxHBsZiiG/8aSUwx7qz/eUkIoxpJ1jwk0S37
uBifhhAqLH9v9bOFxAuDwu46Q4LoFDi76V07ifPCsTJDhoLY56yRfa+bxC+X
W/f5KKzHbp2nhWbDJCZeXaFWwS+AtINZFt6jJG4zwWalJn68ZxrzN2Gc1Z/m
KueyrvBjwHH7Ax3TJI6qbamJ5OJHUW/+b8ZLJN4IiCocXMGHFwOWwj3+kvi5
piFSJmkt/gwaUIxno3Au08+QlFyLTyMq/FuXUdjhlHetY9catEh34jdcTeHM
VLOZmzcvVt0xLXFdS2Hnjpo0n5W8uP0+HI3hpzD9cNlZoVs8OFckeLdZkMIr
JQUyPC2rMLHxBepLUGjoTu3drL0S38+KuB3YQaFHTk20qhM37l9aJnRKhUKO
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
4Q==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$22640#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Densities of susceptible hosts\"", TraditionalForm], 
            None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 
           Thickness[0.003]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0., 50.}, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(s\\)]\\)\"", 
           "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(s\\)]\\)\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
cOvR/XxjMuRf/PGa4t84ef3epaqx/8hwCy7X/zUdIyMJ42kOczLkWBLKPLpH
yNfKJNgNrMjAxTzF5xk4TG40oSAH2JCh9WnDpEXgEJl57Jvzy3NksHNI9vum
+Z18IqDg7jdnMigebDz9XK6ffJ/pdtmeC2RoiBildDXpI/enOY9rX9zN38Y7
euRRD1lQFVg8Lu3iof2Rt7TnK9mxiVczNYAMLQF3JgpSvpBfWS/ZdwST4QrT
xbuCx7vIvxdab1GE7eKj/cZ4mv8zWSUys0gpggxFT8VmIqg6yYG8YT/O3STD
YNybtk/bbeQPry0ZE2PJ0JRkLfZTuJVMeUhFpf4uGQgyQnuOu30iG/Qwn11J
JIOe/iXzpO4mcozbZJTkIzLUemWaMtk0kjkSHvVHZ5BB56Lbne6PdeQ9X9k/
+7wgg1FGvPm7Nx/JFNxxjWdekSFB0eDjndxa8ooFQ6XeazJwsj3pbi6vIc89
vlYo/243Pu81L9aBavL4981sriLy7jyZV1JhrCb3HwzI2Cnd5edpaPNmdCW5
4emFuM/VZMh1KawZri0nfxifiCirI8OSy6vGsbAycr6EXfCzJjL8LT9LxW/6
nvzStd87tnV3f0an45xGKTkt28zVr5MMIYLiF/cplJCTfrXb2HSTwdT3vJWN
ajE5VsHo1OE+MhTSsa68NSoiB+aTD/EOkyFg5UFH05MCsuffEk2qcTIcC3az
LuvLJzuqKyvO/iTDiSNB+hOC+eT/yiT4K+bJ0Gfbu1DWmkc23Exny1wig0fY
BdFlQh4ZoQOMd1bJ0PVR84Cz9luyTO2+FbsdMrxe6R67KfCaLEQT88uIGsF+
+XJ2klgumduAZkyZHsG77JArUpo5ZJpPax00/2uwusOpbMO4CGVFtmxaklGi
cu733Ge8x0lFhGyJshtGSRlNlK0yErJSFFlFkVCkL5U2KjKjZGfFd/68r/e5
7ue3rt/7rCDQW1Xd4cj52zAr6Pf890oCI5RpSzc8yoeR3b8ff5QicFecR8Dc
3C34+rbrdr4igU0VNRdfp+TBe3H7zHhVzvwxYEf1ZC40W368FrSGwD7RfXoZ
NrlQ8aX53C4tAuVpiULnDXKgcBUZtGUTgYnx1mfeFmdDtsOTo4r6BC5dFssf
o5MNcV2lDiNA4Ly7hdcQLQsuqmlZfKERqHND8lZ76004fTDfuI4k8NfOhcJR
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
Mv2GvTNSC+4VH/27uMjGG57vp795asP/d7REDA==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$22921#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
YqtVzq993/6Q/geAlyyJ
              "]]}, 
            Annotation[#, "Charting`Private`Tag$22921#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwUV3c4l98btkch2Tt7Z28+5zz4WA0h2SQke6VISPRFQkJCGSl7JEmRvZNk
FikRiYyQJMTP76/3eq/nnPt5zn2/13vuW8DJ1+w8GQkJyRIFCcn/n4K3/z3K
5nuKBp6Qv5JT3MYvaCSOeLvdxkfuzyxIbmzhluCKx+JuOfgHUxUFXdQ2TlGZ
saNPLMQ75cXLq+07uFPO/wKV2xMc2zGdOHp9F4ey7r3cy32G6ToiUw0QCaQl
66GdhBc4xcDxYh6QwpND8W2bIa/wGceR8UYlMuiOHzT8faEJz31SZGBjIIeV
G3Tfg0taMCfRWeNXBzmEtT2R+JPbhl1XTQaFbCjgANlpr0v3OnAFWfnBe28o
IA02Kn4ldGHx2b11EV5KELqWsep/4zW+XvD9TY4ZJVQ2aCmthLzB0xraJEf8
KEFr58tlH/+3OLWDsjDrCiW81oiqXbzwDmeNfFWpC6CEUi3mcOUn/djs9p+a
LAdKWB13yQksGcCW5b+ebGBKULta0/wsfxA7lBnxkHBSQjgXzde13CFcFew1
lbBAAe211uQKD4axQSXdWe7a/XmtS4X9743gPPj6YyySAu7dM77wM+EDNqkI
d77JQAETKrmxMjdH8bHPpbc/DJCD8PvVYu8bY/jZDYtewVRyqGS5u7gQMo59
LltI8LOTQ8+dcf+5C1+w2SM+fxFeMohNT3udIj+J7zu2nrn2hRSk3bCN4pNJ
vKror2eXRwoB1HeuBpRMYdvD5i1DEqSwq6fUuJI7jf97YjiVCiTA0Raiu5Tw
HWuK2TCbHvmHXyULDccfnMNXz4bVOdTuYAenXhfpm3OY4v1rp9fmO/gxKV+0
5415TD7g2FR4exvLQ0v3fMgCfjdo7HSEdQsfa6A2nr3wE48+Tfkv0vYPlt9z
+s228hObBrv315P9wfH8Z/uEtFbwxdOizwxKN3CgU90l8/YVvPM3oFeTZAMT
Z/3anw+vYpO+K6c4atexWgwfRx/HGna/n79l6rGOpcV7PWft1rAMjcz7Gp51
zOwhxsz+bQ1/aCTcXrnxC39d+nwu+PcvjNn+eJU5reH3ibeeJ6mv4xLS3+ld
PGu4R1adtjhsHYeEmDotfljFVf6plWOUv3G6Rxy/rukqvv772J4G2wbuL1d/
VXdqBfP/e/Hgn8ombjn54pXF6iJmyT6/wnp1Ez/0nlAzjlrENJiZKNO0iXWa
U0jm2BbxzwifBQeDv1hCxqtiXmcBN1KIaDRbbuHqqzddw8rncVX+YMLo/S0c
xRfuNnF8HhfoR0ytfNnCWhYfYqsW5nBi7HisgNs2/mhsLZstO4ft6ZI/RAbv
4K/TdyeXumaxSTmWul+/gz+6C9Gb+c9iovFS+DOSf7ixKufqHvcslk4yFJ2J
/YfZR8wKBC99wzvMe4F6Gbt4L4Opj1JlBr+lV6GlsCcBueySpDPLU3jwOFN6
XygJWPZwnS+omMKjN5dFMx6QwPTYuwtjvlN4hrKQKPOJBDy6PC6PrU/inX/s
EVa2pGBGPJi8SDOJJZf/bpRZkwFtRP/hyvJPWE76/X9BV8hg9+dTphGDT1jF
o4pFJ4MMPHmrBp2nx7HOrIfCh1EyaGHnulvCN46tJ8a9Sa3IISl5bMU8fwzH
9jXMnLGgAIViFMn08z1OpMu8yH+ZAr7hgLvZWe9x6rHLZAt3KWCP8vn68ZPv
cU6nDH/ECAXYlJve2Xoygmsac2xLzCnhBl5y1Igcxt8qrg/umlFBbFGxKK3l
IP6xaH/udQAViFBpsM6yDuIVSY2VlGQqCCB55VAyMoB3CtboJQap4NWZi/yf
LAcwS46z0WlTatigrYhJcO3HOrf1mgtP0UC+M2W48Jm3OOJYdfGgDw0cu3vD
dHe5FzdSCqX8S6CBXxzxE5pxvVgjlMT1dC8NRET2TvS1v8GK7q8O7hnSgpdX
waEBox4srCtvaaFzAAp9ko+fvd2FnXZz4Pq5AyDQLe10mtCFc2sZJMsiDgD/
zVqF84udmEducYe06QB8uZQRNniyE7PyFuaVax6EF0hdyYO3A1P94VmmUKaD
3YzKL56LrZhYdeuDrDkdHFdNv/RfSSuO9N5qtrlIB5wdn27ecG/Fu9MfUiqf
0kH05sNnoj9a8J/+ZHU7GXowCCdVLfjdjOdKaP57JsYAbfHB73ldG7Goa5DP
hD4DrCtFsGjvNGAXgVlLWlcGkC2q3x5OacCT99okzz5mgDBhoS6Nrno8diO8
/4DAIXjbuiB2Gb3C52W36OXpGcEvfr431+MlPjEek8/Bxwglj2b5AhheYqUY
VgKJLCMcu1x4OefZC0zxRc7rnQkjfN6Re/OX9AXOS7zQ453KCKsW3AsCFc/x
l6Xh6BLuw0Co+FMlBM9wZ4YTX7L0YYgTub1x6U8VrtBbeX6FcBgK30Y//vik
CodnHfxmePYwBDgkb/cIVWGekzq63/MOw2VyzzMf2Z9i67Ine0KSTFC47mm0
YFOBwYpw76AmE1htf5cxnSvH4hRvZH4dZ4Iv9yaCLwSV403bWftWbyaIzto5
G59ZhtMO8tY7PmWC0uwIb/r1EjzkERecpcYM6+9pi7uWC3EdGwfjf0bMUMVy
qtgrtRDnteYXetkwQ4Ig4aurZiEO4Gp5rxnKDLn/lqr1EwowY88fpY9NzPDf
+Qp2KcjHJyXOr7IZsIB/wIzw9Yk8vHXr0qvPFizwiAq37dzPw0XL//332HW/
zpe04GSThymqCzgVolmAzZdsc2rsIa5Dc9onO1hAm9fsotl0LhY190yO0mUF
89+/Q15rZOPhmqt2x06zQlTvARH1/ix8nTNe9LAzKzSxbtnzX8jCnybK6rIj
WUGWUdFMO+MBTnFf/lrbwgoCB17GAsN9THLNX3EFs8FxClZVGtV0XDF1/V/N
KTZoqIvcLZ26h22JyV1hZ9ngHRJ9FppwD9fQPrM9eI0NwlXkGVLn0rBX6nqU
aCMb8BnqxkmV3cVjxUHDdlrsUGKGHuSfT8HRdLHZQifY4eTGMNITSMFKvulu
P2zZ4Vuk3vbI52ScpFS7E3SVHfQkSm40WCdj/aYt4ZQ6dmhUoK4zsruDq4bD
Lr1W4wCOWWk2K+bbuOg/F6evRhywtvtX/NmDRJytcvzUtg0HBFp5Uw2JJeK4
dA6Jo2EcMNQ8P6Svm4Cd7Z59SmrhgC2LAjKjxFvYhj7zdfEgB/SrluqziNzC
Jo0RNa3THOCxzq/r3xCHtfiNk9YpOWGd6+F499pNzDIzp2t1jBNe+0rcO+Yb
iw/cfSfnb8sJp+lLn5IwxWIS/RreOC9O+CmlJMBdE4MXC6P+vErkhHnH5cIL
ZDG4w5Ov9MgQJzALzxS9LfkPX/51mum7LRe4tFyfvKMShb0ea+zteXGBOkWl
tNpSJHY6I7DIEc4FDzZ5vDYeR2LjF8sdx3K54OTrPihhj8RiV29eqZjhggsj
5WPXaK9jPmk/167f++ufP9oL7I7ALJ8tTk9SccNJtcOeTrERmAQLH2WS4Aan
YqpX7Acj8ChZ0+Qlb26wunKh/ZBqOO57lv82MZwbkNhH5Zq2MNzuEl9XeJsb
jK4z8LCaheGnndapY0+5gXn+UsrXi6E4Lm7dgLDBDYz329No3oRgTSbJJxTX
eECN1U2B0BqE+0htXr+9zQMKMvVHZN2DsOPqzem0XB74Vf+a1fdwEL7RP88u
0coDrRU3UzvOX8Z9icURJyl5ocAsZVSP9xJ2PChhlnaLFzLbTZ+WtQXgtS0r
r7MPeOGmbPAVq7AAfONHbLR4OS/8E39+iE4tABe/nqur6+MFZs7WPyGV/ngt
pkjoy2E+EKH+8JO+3A/foBD/LZbOB9l1IWTzj7wx27rlodUiPjCKdD05rOSN
i6ZjJOpq+UBCjOHr2S4v/Lb1u/2JcT44U8Ixilc9Mdv1wk4/viPgYeKhEGHp
gYv/iabXPj4C7ctvBLjcL2CtJYuqyOdH4BC3S7bj4Qu471N07/HOI5Co7M61
UueK117Nkkx8PwLf5rd/vT/sivkIQ0rXWfnh/BGyHtzngi9sJ2flW/HDnvkj
57wwJ5xqvNh2xZEf4k2fPdnScsLND/V+nHTjh0Nx2iHK/85hDsNNlY0gflj6
kQP6Eedwd6p9v/49fkhk/BAXnuS472PEyedG+MFP08U8otweW1y/LlH/mR+o
mTzoW/TsceTwx1NJ3/jhK40Lj/cXO/wxJOGB2m9+KDvTmr3GZofjutaUb7II
gOBf0+eiaTZ4wbHBTfK0ANTeOkVuPGCJOarZbu/aCMA7AVs7xnBLTKT2ez7o
JADsmnShv6Us8YNyQbKrAQLQxf7SgOOWBT6xFXP/zR0BOCm689Pa4gwuTzHr
8+oXgCD8zTub9zT+OFu6DqMCsEy6ET700QxTaVBys04KQFRWgN5auhl2mHxx
oeGnAOyaH3kxyW6GGY7ykjIcEoRXwRbxUvym2Lfzu+KTk4Lgn18aU/7EGDdD
mae0hSC8e/TdIVrTGDO+8ntU7CAIDGkMmOP1SVz55C/TY19B2HohM31i/gRe
Sz+4ln5HEARNBzx0CMexDnO/BFumIDSqHTQ9+v4YTklIPZeSJwgHA002sv2O
YaVI3oGEZ4KgbxYUTFJihC97ylZGjghCy6PbSoIyhrjz26/ve58FYeFI2GLR
oAFmd3x5JGxWEG52e1jFBRvgl+bat4P+CEJCeuZjg259/Jdw2seLUwjeS5X/
EwnSw6GMQdIW9kIwveXC4Mqgi3vjNF2GzgvBpe93vlh36mBeSpIHJj5CQBp0
5pfDNR3c+Df24PFrQsB1pccyYV0bk0xn/sAPhaBu4o4hwwJgE/uzgg3FQrDy
MsPpSCnghx+EbDT2b15SyfhiQS/AOr1lr5XahIDCp7T66xTGUc8biyS+CcHD
98Io/wDCw7JRkwVLQjDzktlLKoOAhUsMOIQ3hOD7r7+CjhIE3J7dH8NHLQzl
16Ie1RlrYarYr67MEsLg663LFFumgeNsqET+eQlDW7bjp+AnqhjJ0W3MBwpD
aC3Bk8ROFa9SMnW9DxUGnGv07wmtKrZ6yuteGS8Mr1qthy+7qWARGuVy5zJh
8FJsVJNXVMbNz52VexaEIc/WPOfQlgIOvOVO9eKXMESGnR4yeKGAxc75fni0
vb9/yCLC65LCvh+9eiXsoAgIv5mf9lmXx7bOyQ1yUiIwqsJwgfSfHN5gbNG7
5yECFyZPdXh4yuCS2U62GwEi4H/z3fUUEhlsX9/73S9EBNh3qc+p3juK2y+M
3jwWJwIR0Sd+feyWxncaf779VywC1/+zbKYkSGFpLz4Ll3kR8GgKDH7pIo4n
tYXFTFdFIOV5Wan+IXGcwi65SfgrAj1qlnkUr8TwVqtyJjutKGwWGufvsorh
bs6TEz3ioqDot0gRMiaCnbuuusq7icIBOqPXqilC2EVL1HjDVxQSmPmawEQI
uz7tV34VJArGWpQfFRmEsNt9EUq9GFGgWRvIfxMviH183z2yKth/10r18EwV
wCHsQlPXZkQhTaBlevjuERwa/7abuCgKtlU+Luclj+Aw0uBK2nVR4C62SvBt
5sMRC73XUsjFoHZgOu7TCi+ObrrMVygoBot3W8gTnXhw8oUe2z5HMTjz7tAH
4/84ceqnQN0UNzFwbSjQ1ZHlxHdNj0hZ+YmBktXxRdePHDhdM3Br6poYBB3P
6VNU4sDZh/gyfmeLwbS8iqPPbzZc8sL/Pc9nMRjZKtZTLWXBZdI8jVMzYpDU
SXwf6sqCyx925hcsisELQ33JOkEWXHmL+5LcjhiEFoa5HcpmxjVnO5iJ3OJw
XyHaYCCHCbdQc5p6WouD48Ain8JbRjz7SObY2DlxKPWTmtm+w4jpgKhr4CEO
ld3lb6otGbFVsK+y0FVxuDs7W9D/5hD+OdfBOf5AHHo9/k3QcjFglv/GmYzy
xeFDM7n78lN6rCGwevBF+T6eyXOS/47T42hrnt3kRnEguyeSUR1Fh3l7Ar4e
mxSHAzkH/2VQH8Q6rrHjL+fEIU3iUll82QHsRpY9LLoqDvIMidcZTh/A1Rqv
O8nIJGCN4pBe5WNafLz0SGmdkASw5FsUcdrQ4CvxvRclL0jAXOvnG3kHqXC2
+FevdF8J+NKTeMmxmxK3t/85TxUsAQdUa31Soykx4z9Bq6+xEpBxJ+S+KzUl
VslQMzW5IwE9KpUTND0U2E7Z+FhjhgT8S37LIZlIgQu9r2hllkjAhaQdjz0u
CtxLe1uZ5pkE1En+kGmaJsdr+Y9lLr+SAD5U3stSQY7RxDt+s14JeOdvd+ah
ATl2CfnG2TwsAblW1qrLbOQ4jm2bSebz/nxnVbT/fifDI8ailAeWJcBA6WLU
tdtkeOuH5m7QhgQMvX38gc+VDPPHmP75tisBY8qcUU2IDOsLXVg5TS0Jb3ZG
eS5zkmGvptD5lkOSQF9Id9JhgxQn2yZ/leWQBBr+jpt3R0jxyz+F41n8kvCk
nXRH/QUpnkhpGD4oIQk9wbqHA+6TYnK5obdX5CUhUNI3wD2SFIv3znV+V5eE
FZ3bwSe8SLGx227TGR1JGFk6l2FqTYoDKVhq245JwtX4ougXRqQ4M1eiSv60
JCBhdZZmAilu1sKlObaSsPbH9nWDMimeHTV/TO8iCUZGXYK0CqSY7pJH1lUv
SdB1+NBFpUiK5Q9HpM0HSsIOhXa1vDoprqP5IN4VKgkn9p6dOUQkxTokMq8e
35CEU0Vk9GfNSfGbPzdORsZLgl8tU1uFByk2/zn+5WyqJGR3vmfKiyHFn2YV
AggPJOEnbUTK71JSfH7iJgX3Y0lg0LEvCx0lxcsjk2mbpZLQPG65ocRAhi+/
VZV4/0wSWhxSh5SMyfBee+KrZ68kwYnj4eM3GWQ4tv7byTttkiD0b7L90hoZ
ZqzWmvR5IwkyZY/erFiT44zSlIATQ/t4jnhbb5AcCz76QSE5LgkHhr3M3tlT
4JJM7XvU05JAEGJ+ZLlHgRWT0yW+/ZCEWLI+e4E6Slx/8+er1jVJWNKscyNL
psJ61/WNc7ckIWHnj0v8LWrcF5w1GUYmBVr0DsbCZTTYwm89wPaAFIiuiQzL
btHiLxeOU6ozScFED4HcOuwgdjubd4+NSwpmn5gtdSN6vGLxV2JdQAr+vOx/
HmZ0CF8xNqkfkJCCUo+L21YjjJhMv9D4ibwU2NK40MuoM+FbhN3JeHUp+E82
zXVmjBmzKJ+56KEtBbTJM8eU2ljxA+kySkMjKSi44nPSlpwDiwiTp4uYSoH5
qaqwp6VcuILbRpLcWgrcud68th/gxSrMT+snHaUgXe9HIEcXP246QHOq0U0K
+uyFyYdJhLAh2dmp+35S0Dotns9ZLIIH/j6/eCVYCqzeOx8ifhDHNqt0VJYR
+/1JtXaSC6Xx1znndKVYKaDQ84+mzJbDnpN1kkxJ+/ywORinOiji9Q+HG37e
k4K7xbfGVctVcOg7t1Nvc/b5+p2VppuvgSm7mqZKCvfnS/K6hs9jnNjIFhj7
RAqyj52uWY7Wwew13lSuL6Sg6+EK0+4XPZxb3p6u2yQFil4Wcy96jbB4PreU
QJcULFVIGcpbGeOnDwIadvukgFBJverdZoo1Ul+f+vR+H79YCTqLzXHrLf6v
tRNS8GwdNtPfW+LhkD6qS8tSIEAiuzzZ6oDtA0QyzDakYMY/RUdE6hyedQ+V
ktuVgpeppKohy07Y59xQAz2VNFA/SetwyHXBf6wkTRbopUFKhCRxXtUVR5hc
/9rNKg2Rvh/PDVRcwDSGo4EFvNJAKtUj6kDqju9gWeobItLQplqk+++oB+ZS
jc44d1QaKvLlx2qVPPEjmc9SWFkaDnndSqhl88LSokqNPARpULWfVx8Z8cLV
vLdMtojSUDPu9tw40BsTWL9+/XBCGsTw36HsdW/cSad+6bm5NJQ6dzuaW/tg
Y4ok6hQ7aSC2+7LsPvbBH7ZnM/xcpKFJOPUq90cf7PiLIG3sJQ0q7TGnmLZ9
MD0TSf9woDSkbwqZlx3wxXVyrRdtw6ThiCDP+hq1L75w6gb71//2z/9W6qr9
bx/M4qP/yi1RGkw4jHjER3xwSzzN2Z9p0hD0X3CqebEP9intIbucIw1p6+5F
pRd9MHdPfMFOoTRYOv0palb2wd1zxseiKqXBnFjZuL7ijS9RH16mrd3Hrwur
vFrgjQVFh+4ktUjDbjkbo6OlNw51thzLGpQGn6mduhcVXlhu4qzby/V9fl0f
cd/T88SfdwTo8D9pmE/9ws8474HjuGeedFAehbmohyEn4j3wjJXbn0G2o3Df
5+WVnUF3nD7kF72kdhRu2KgfGDrvhkleX38sGHYUDhSuRz2sPo/Lv+saFv93
FBRfHjXjcj6PbaioFmUTjwI6srCVz3QeV+vGKRJyjgJrxqWuP4Eu2K0xudWy
5SgI8dU8CNB3xv3PHk3GU8rs+1W7Swzc53DY4PkbzAwycC75iT7rR0csuSom
nskmAyXLDaqHMh3xDZky30IxGXj7bHHpHY8jViuu3m0xkoH/JEVPWNs44IfZ
HTx/EmQgZHflgPqSDX5gJ/3hTJoM0HRxNmbF2uB0rpQ71dky4HRDUfaKiA1O
THOkCngiA2NjygvhztY4JHH752K/DLBd24tUWrHEZuHybV+ZZeEueaTHL4Mz
+KRWepg2jyz8SFM/e2HTHBtu7armCsvCEfYgB4oSc4wu95bZK8uC0Bfmi0WM
5ljK50LaqIUsTDtEdwgtmGEKhyz3vgxZMDl4fsN3wATvcVMIH82ThcOWT88n
JZvgrTGPiVslsrAR2NN539wEr5xRO230ShYoBSfd39Scwp9ODmm1f5KFuJXQ
X0OzJ/HHbAqaz4fkAO15e86lHsOj/1TP07HIgSAxzzJG/hgesfNs1eSQgwc9
/C8y3hnhfq7B0Ex+ORiKirlGzmiEO9NyVi3l5UBHcPag5UMD/CxRY3zQTA5+
aJ3uLSLVw073GSjrLOSgNV3po+NLImYq+irz0Ga/32ZBMYcfEfu1xEX6OsnB
n+9KoVe+6mLp9Y8SdAFyEMCubJ8zqIMfW18N1rsjB9o2J19WfQZ82vVUnvRd
OSDPo9f8lAeY7KJQL3OGHLDuXeAYcgPsGP/myNdcOUjIMrbXXMaYp4m7K7xS
DoaT044/VUc4Vbie9eU7OZD5J8B+ilUT68on4ZwhORC4slA3VKOB1wgu7tEf
5OAJtwd3nrUGNrGkazD/IgeaouEaBx6pY7o4O5fVZTm4HpOZeouohm/83KmS
ZJAH/+J+n+eNylhxp//TYSZ5UI17aToWoIy/0uRT/WWVB2BhnqEUV8YgeNKm
i1ce1jQk6T3vKuEd8yxSl6PyUBUgJkUeqogD6wgmWSfkIZCyfz74kjx+btNF
NmYiD2GxZL8vKsrjjS2T5yxn5OGg559EtzU5fEXThSveXh4er05ryF6Uw+H1
cTMhPvIwOJNQ8WhPBjfZsdyrCZAHszvetzzjZDDJvyyjtcvy0Oxq8GGZTQZH
Ep5WuF+Th4pakyQ65aM4pvFDsFWSPGS/0yxbuyGFux3OSaWmysOvoWLTrzxS
+MDej8/v0uXB3by207ZGEsfjXR2Dh/IgZ+93cXhJAic1C9OrVMlDPqvlroaP
OM5s9X/IPCwPjKZ3+nUrRfC40/bpU6PyMPBushw7iGAe8v+obn2Sh9E+nT5/
ehGcrZvuSfZNHt5zF3919RXGj9oblVd/y8PsFGkhm7YQnnExnJPekgfhthZk
sCmIRSkHM9125eEVVwHrrUpBXKT3be8LlQJcyj/9SUtYEJd1HuzpY1eAF/7R
J8fZBfCS693QAzwKEGfi4qD2gR/LUB+R1edXgCL2xtCb9/jxUwOF1AZxBYgu
7JPd4uLHNd1WDmXqCrDtU2DtY82Hm3ry127aKoCtyzt/91UuXMXR7x92VgHs
XNvWiMlc+LHr1oqfswLEd5u98VPiwnFkp35aeipAwVuVrwWhnNhcY3NB5KoC
PJ6pOH+AhwP/KD72rSVTAWIDX86vJrPiT/s/uefZ+3gDJwTb9VnxO72c6aI8
BXDbXFF5tM2Cq6d+Td0uUYAI573zwW4s+Bpn1oR9nQIoDi708hrv+5ebPz/8
HVMAaORPctI/jKk+cFoufVYA6qhhfifaw/ivMPH95JQCLBMaBNT389BEc/pw
17wC1K3e2z23n3+KN7UH7v5VAJWHzz9m/WDAyC21R55TEcgaJfwNSw5i+ZpG
IxFeRVgq8htKNzyIhSnmuzkEFMGEPSlSZ+4Aps0ldO2JK0L9XJpRotQBPPxh
tu2tmiLU1UkNR7TQYHcD9QZ3K0VoPHMji06MCi+Lc3Y8tVOEwyImc5aDlDjg
wN/ev4779Xt2d2bDKXHo25efbrorgt1PrdhX4xQ46bTaTnHIfj2E/GrnI3LM
qsxBsRauCAnxfCvlVuQ4k23zoEaUIkgrk7yoZiDHj8ZecPfcUoT3edzHGMLJ
9vOhquaPB4qg2D7nGuJOijW12XUVHipC8e7lhG+i+35e8M+xkHxFYDmcXHTq
Gwl+/a3G5kCFIvgzFTQdPk+CP3mqhEg2KYJfxZ1Dr7/sIrJg5VqPKUVYEeSR
Nzy7jWKsWVuqvikCWw4rZe7GFqLT/N29Na8IRT4uZbG3txDrbvVo3JoidK3M
TPzq+IvEbyhtlpArQcWphKlo4iYqP89C8otaCYaZ1czqv/9BCgbr1Jp0SvDX
tDLFPP4P0jpQzf6GRQnq/2GHjLENdCpJUXVBRAnC7W1nZ6N+o2F/ZqwoqbTv
r1ef5sv/Rlanf+lflVECB/bWzezJdeTE9szioKoSxNmfHpXWWUeXHyhcljJU
gh81HXuqzL/QgyL5554eSuA60svsOb+Cusecu3N8lIDqa1fZcvEKWj+QNj4U
oASmrxYOOXquoOPeW6RaV5XAqku6anfqJ9qSbzOmi1cCN0MaiTL6ZWT9ynyu
rFwJ/AZaSaSrf6Abi9Hbk0+VoPKr38jSqR+okreWgbVGCVKm1bjEl+YRTQSv
clijElz9ZD69IjWPXhJnr598pwQerb67uO47YusL4l5eUYIYEp9DRqzfkM5e
sYzgbyVQnXbsEe2cQT5yn7Qt/ipBsHsYp0zwDOpMBrdGUmXgODUpXfRlGl2y
pH2eyKQMLeQ0ygOvvqLhyUxjWSVlkN3Ldz6XP4lImN6ec1ZTBq9HRvnzrpNI
Wncv8J6WMpz8x/fOTmISReU7398jKkOe7HGHhXNfkIKH9Ny7M8rwMFdQk+/u
Z3TnV8N1vyBlOD3F7Wxq9BH5DCads7uqDHrJXLW6S2PoxFNnbcNrymD1/XZZ
cPIYovKlJeWPUQaLJxy37k2OotAf5hHv0pSBbvtvgeytD8h1aiFcpkYZdh+T
iDiyjSBic6MDV50y2F/mbYjrHUYCOXcQVaMyhPlYFb2IGkaf7FR3P3cow7cw
xxra30PIdDQyLGFEGS7yO15Tmh5EWu84QxfXleFP9oTb5x/9iLNi0XZ0Uxkq
4695PH7SjzbimzTbd5Th+YNxH41L/ejpsfPb9ylUYGiTjvE1WT8S7awMOc6i
AlZccv+dMu5DhxsMrpQoqkAf8du8vsgbtHyfyzpNVQU0LmoK6XX2oN6QJbVI
TRVQ87EkSXLrQdFqKZvWuipQpq+VsFX5Gu08mwiiPa0Cz2fV9UpNutFsyaXL
bgEqcCLkY0BzVwey4N2dKLqsAuumxVlHL3WgjtvRBvMhKlA/czRoWKgDPQ68
x+ERpQLnfbIsGm60IydUW+eZqgIRQVtF4eZtaLBSW6gsXQXK422ltA62IW2h
nluLD1SAtG3nwaG2VsRPM27nna8Cyue2q2eVW9HEwM6uT40KWH/juPpDrAUZ
E/+78KROBXohafz7bDNqqKHv/9moAjsBjCGfCprRg/t8D/26VMAUKrseSDQj
m/OgGzCqAsw3jlCJBjaikc2omEtbKuDUt7X0jPoVInrSrTzfVYGCodsjFg/r
UPXnVKsNMlXwWrL4EK5Vh5Jb8yWCDqqC3YQbt35QLTKJ73oTzKMK9VedIxl2
X6Dm3VNKtfyqcKSut0Lt0Qsk6z/64K+wKnCPOW6+MnqBGCzmvUOOqkKtwMnM
2swa1HvkIGMoUoUrWlanyE88R1rJKcH1OqrgvuTt5b5djUopeKZ29FVBJm/3
DmlZNYqbl64KO6UKWvbnbGsYq5HhM2Pza46qQEE1UVTzvQq16yenR0bu92sz
Vj7fXYm+ub56GxKtCqhD+BFvQiWiipkhuxi3j+eEeYrMKpFhl4q3c7IqqLat
DBg3P0G9BuPaxDxV0DUUYKKmrUBDhsILlK2qIK5fk1c1WYLW3U7y73aoQuSJ
9Z9j10sQy83LZzZeq0JL7q8hU+ESZPG6u2l2QBU6U+zy+b2L0Ucj79SuKVV4
XE/68wV9Efp6rIZwk1QNznRUhR2OyUfknl8CrlOqgblm9Ql5zXwkfIum6Aqt
GqQKaA3brzxGrm9smDwOq0F9d+rPPvvH6MfxvdljAmoQGXQ/vYL4CK2dMEyi
01YDZt3TT23wQ8Ts7d9BoacGMgY7aoVkD5FSQubWjqEaTM4/Z37TmYsuv110
WTJRAxvkeiPeNBdtnbyj3ueoBmX8F030p7IR6amPX29HqIEtdeWr//Lvo+7G
M0KBN9TASzEuxEj/PkqSGXC2ilWD1mUqKau5TMTP0D3Dn6QG02N8pHpymQje
Pp99mqMGpcsG01/70lHE8Ts/hhrVYJvTxP26bhoyfEUn9bJVDarVBjO3Nu4i
RqlYzwedasDEIN0aVnoX5R64tujSpwZrH5qnk9nvoubXXsu/P6tBSl8W6b3t
FERiaLjG/k8N3LXaR4RW7qDuF20KOyTqwHkykONx1R2UJIYvTlKogyYKPbJ1
6Q7ip1ZZL6JTh6IVxafce0kIOoU21HnUYfKoYfwMVxKKIO79tdVU3/dnkUFB
i/HIsDpEA7A6PDW6+zX7ZjxiFN4IEdZVB/nUuxO84vEol3xpe/GYOgwi/8lD
7rdQc+vHf2E26vDBJztZZ+smItGuIc29og67ht/ZRS1ikA3xe89omDr0kRu+
pSSJQdUGHKmHI9XBfewcq2RpNHIzDhGNilOHc5Vu/x2ljEYDtui463112NK9
HP2g6wbKu9yZKt2gDj/yr84cj4xEO1f+2J9vUYf3h8Oo7VEksggTF8vuUIf1
d0HuPtvX0YEbcbWH+tRh0WZwMjL4Orp4x3hibUIdJEYvTR4Mj0DEsvditSQa
8NijjFrvQhjKfkK9ukqhAaUZgbdFdkLRZpVanSStBhjTD+1kJoeistrMEw8O
a4Dt8DPPo+1XEWuXg/81QQ0QdNu2MVcPQX49tzVeimqAlNIoF/p4BfW8bSZf
ldQAu93Oy0mhV1D4sGCak6IGHMian7XpCEazU7N1ekQN4Hpiq7flGoTgG/uN
cEMNaCoQsMhiCkKZc4YnX5zQgN6Be+KRTZeR8c+SL+JnNODoYxLaPZ7L6MWO
DwWdqwZ4zayyHJsNRLHsf04OxmjAejRF14OKAJTa3T3deksDNlcJyW/8AlDO
lcwrz25rwEbzuZJxxQBUM07IT72nAZIbBb9S6/3Rt5wbOxaFGrDgnmEoNuqH
Vkwskg1KNaBn/cEDzod+aIdUXFztiQbU3noYMubhh1hc3pzmfKEBmsKPx2pJ
/JCOOFPpeKcGPN1u+xDv6YOMx6aht0cDYv6T0/pE64Os456/r+/TAG2Wow1F
xd7Ib9GKLPu9BixmvTCtWPJCOZU51o6zGgBLS2ICMZ5oR+0ozTdKTfgaPCgs
s+uGaH7sZo3QasI3ZbnLHs/cEPP9fsVOek24K0+exuThhiT/XTxbyKoJQdwO
vyrGLyDrlroadxFNWPKJWI/qd0UuAfEnbCQ0Adp/eEfecUV+Qg5fjx3VhAz7
Xk1mc1cU+x8pg7SyJpQWn9SlnziPaowMzy8TNSHf/VdqE9V51LrFuT1hqAnZ
jV6J90dc0NvShaR3JzQhbvE117UCFzRq1yDabKIJIhTyMlFXXNAM/e36SnNN
uFS2/LbD2AWtNDqaPbTShAv9smnnRV3Qjq/C3B07TVCmPH4vhsQF0QhQhEc6
asLPxLffLD47I+bBEeaLLpqgXhf/da/eGfFFFRY7u2lC2Ba5aF2OM5JUuoLN
vTQht1zjbdt/zkjl27ERop8mpPEo7zn4OiOdNB5P5UBN8C99c2PCzhkZGyyT
iAZrwhaFLfl9Y2dkvdmUxhaqCRbM1FO7RGfkUnxHmjpCE968SY6MAGfkZ+Pc
+idKE8Ry4/aKtZ0RQ86PSa1YTfg++D6U+pgzKpv237serwnt68jwqY0zOib+
l7crSRMu8yf0vgh0Rt+9IrTo7u7zm4FNnDOc0Y2n1LamGfv8R5/olO1xRoIb
iVfSsjSBvBY3TNO4oGYNtvTxh5rQdi2UMcPSBTlcy6rhL9CEtYKYvHcv9/lq
Ex45X6IJt/ZkRqNkz6NMmrJfJRWaoGPL3Hiy6TxSO6nItFKlCVPHvv0L93JF
I3fq5JRfaAIbi8o1I60LKOC99qmQV5rwO2LQaVfJDTFyv/ZuatKEmM81nUYO
7qjirEk8RbsmuAWSyMe2eKATjz+UGHVrQjNsR8t6eKEfcw6vE3s1ob9FTPyM
qw+KPTr7fahfE+6U/7UtcPZDogHeVJwjmtCQmgkw4I/aataFHcb29V0NlNO4
eRE5bl/VffRZEwzLp5upHlxCu5jcaW5KE3QXlu4y8QWjBzfiIo7OasLL1UiZ
WvGrSOP14ZyAH5rQ4aO1cHE8HI3SZzS8WN7Hf3/pdXrFdXTZjP/Tzpom8HgE
ts/63EAs9wq3tP9owvrvS3/H3sSgp+MynDHbmuB5Inb10dwtZMxfo9q7pwlc
ek90vIKS0KILweIwhRY8XiHh44tJQXHF7YEWNFoQeeShcwvhHhJfPp5yn04L
6gdaj+bU3EedCkNPJxm1ILpylyHrv1zkEmTTL8KqBUqyjneSCx8hsvqpZQ9O
LfjW5PjJUq8Q5ZC401fyakE1TZnjbZtSpKW3IvVbQAvIHUpEREefoI83g45p
iGpBKGvCzJJpFWJjjo5pl9GCXykBV1r3/VG1JX0BraIWrN2UplerrkVmD1Lb
jVW1QG2J5w/lziu0Msk9naKpBUwWnDs8rI0oQeQR6RjWAm9JEVuhzSYk6SHJ
z0fUgvu05GHz/c2ou+IpcjbUgkEhG7Ot2Bbk+kvNvuiEFmR0xxvJirQiCrXm
q0smWvChx/cgS2Erygs1yFQ4owVubMYVCYxtCFr6XgZZa8GXe6Rny5zb0ASl
xYd6ey0wlO2eSMhrQ1ePff5N6qQF2v4qbsfetSGO2y4sBq5aEKWe+P37Qhuq
GVpQiPfQgnWRLxqmW23InOOi6YCPFhxlE71ustOG1uy2fNkuasHDWuxw61cb
Snp4PdE2aJ/vGJ6Q61NtSGaWpjz3qhbUkjPyxHe1oV7JpDffrmnBv6JTKl8K
2pCHL/sPyRtaYM0lRX8rog3RVGfT+MVqQUvzv+7wM22oYFNE7Hm8FsxFXVyK
E21DU9eVXPBdLaCNOcVV2NSKRNkYEv0y9vU67nzz881W5FHy/cXDLC0o0qq2
iTJrReuDmQcpCrQgwNreLWqyBdEIkz7rrtECoU2l39c3mpFM51tSs1EtOPOJ
svH4mUZ00aZQKuqTFuS1d5O0zDagl8sRZ6ontaCmbVTX90oD0mZXKmab1wJ3
cefBjLx6ZO6WaTL+Vwv4xi/411C8QiEHLuS4cBPgr2WHy0eal6gpG17fPUIA
47M9+ujJC0ShyPWrU4gAFr+cSmYtXqAE27f6EtIEECkc5v9TXINyyxSXl7QI
wCZ2JrLS4TnqMiYhBDkQgMktLUZurwrRTY+5FjkR4KZZ7uEjL6uQSdCzpDFX
Alyx+EjLFlCFPua4zmj6EoCSt+Eqw/xTtLzSe4skggCs/tXm7V8rEUtKxseb
DwkwcUZlM4iiAh0YYR4IyCfA5Xpmv4z75YiEPbHLtpgAhqced4srlaOlzMjq
o08J4Lm0SQxzL0OdeZ6JA80EKDCxFAqaKUHBVQQdzkkC1Lpl/ytnL0I+6y/U
yGYIIHSsVym8rRC5qCjILnwngHLa8auBfoXItE6Up+EnAU5cUVRve1uAJFsP
bTjuEYBnjNM19G4++jwwVVzEh4B3t9hAyOIRGma2y70jiOAe/WpNEtMj1HPm
fVqIKIISV2rVH+/yUM1YT9QJGQRc/umB5ifzUNLUM/sVAgLiYGHzE7OHSGf1
v8Nq9ggy/UIJb2lzkJoiCY3AOQTw9MaeeVY2krkUskt7HoE9B9WIpUI24v7r
szDuhQDFBpnWOWahdRKrjmuhCI4mS1516buPChglr3TdR/C6V0BCaD59//u2
3qTIRUDhMZHVHZeOXry6GaTzGMEjKZaooaPpqNt1/lJDGYL1+nZ6iuB76Ed9
UcCzBgQFF3YYdXjSUEDy6OpKCwKJFNQe2X0XbV+g8ZfpRGARZBJKcvkuomN2
8y3uQ6AV8TA5dzgVHXUX88r5gsDTiSl2IycF1SDLhU/TCCbc6zUenklBiCXG
g2sOARnvXZ3zdCnIuGnW7e4KAkcKPROJsGTkx1pw/hYpBv0Bw1/ynndQdYvw
2SAhDAuPK04NLyQirXvmE9ViGF5mczM+v5yIOrxu2K9JYZDKEzYxJU9E79ln
bL2VMDidqJvOE0hAf7wfWTnrYVjWC/Pd9L+FInSHPuQaYTh8UrOU/MAtRMNJ
bjlxEkNQjfej9EdxiKPd6Yy1BYZ0525mo/GbSINL0OzUBQwuTgucInaxqPWn
6UC8Jwa6YPt/X/Zi0PGO6yY9vhiORH/x3Hwcg+z8poz1gjGQBLvmHv0VjcI7
c49r3sSgGLZbwp3zH2oJOKInVoqho6Ond1IuCm39/pnE8wRDn8rVxZ3FSKR0
pfnT4WcY+JoWTtCWRKKia+cCd+owTESmjXwTjURJ8Y8eDfRguDs4LH1a6jpy
LBAjC/2BgQq3UN99GY4yJTZP+i9juIo2Y+eOh6Phsu4M1zUMFed0Tesnw/bz
rLu86RYGR9WWqj6GMMQxeUaOmRKA7oqpK3PoVbS3eO/sHAsAybXPMJ62f3/K
RFBOswEIW30bn8DBSM3PrfQzBwAjrZoH248gFPBL7c8gD8CRXtEARp0gNPt3
LLFBGGBmYet17d4l1EfF05isBLB1JCD8YsVF5GlI4ZKgsl+forIbdruIaOIW
affjHihQbchKCV9EOvQNZ8K09vFdDIrLs/b9NLPD0gXifr3kXX3ZfX+UzZ/L
QzAH+CPucz/vui9iiJPvPmoBsGDSt2fH4ouu/Wq9yGcF8Nm3+1lykQ9y7PzW
s2cL8O2UuqbtiDcS9JK60uq83//sJ7Z+7IUKXtSMGFwEuNTEHChv7o7YBAyv
q10CSKyv67TecUMxcWPSEkEA/YOmLlX5bsjNfifqwFWAiT/o8fT2BSRJrqPw
NhKAa2/z1/hzV1Rh/DbRLBkg061Qb9TOBfG9dNDQTQW4l23Sp8bmgm4LrHxT
TAPAnJcME/v3/eA6E4F139o8jtkxO2jojBQyrRY+PAToXs1KWNd2QjXfpg3s
nwIQJbPEuxwckeipS79OPgOAWhZ5UlFHdO8lVQ56DjCrWPCK5NNZFHxLYuNI
LcCkaWR9NMlZpCHv+/hr8//5FTcXsLVHDaFbJG79+/tLOZ11zGzQxpPZlchB
gENC3uZ6P62R3PTgZNbwPv+9DFH1CdbosVFp89AowPO1o9dW+qxQHJtdBJ4C
+CRccHzinCWyqGzYY1sDuPZKjj6qwxwlTRf/lF/f528m0MYlyBy9Zkv7cmID
QGOiMdpT0hxphfk0RW4BbHc6jH1MOY0Ejx25tkymDW0Hi1a7L5qhn9MRux3M
2kBIWJK1dTFB4uzey5Os2nDIjyKzRtQEOR2znthm14YJ6gMy60On0PtK+UZ5
Hm1I2xnyt5g1RvVhX8OyhLXB6PEBidIjJ/fzG/FfoLI2OA4wXiF+MUKtx+SW
bqtqg0TPifntMCO0HcbzuURdG5Y3u17z8xkhn5n1+kmCNsRs1Ag+cDJE5k/z
Q0/oa4PX6WvW77b1kcBx6h0hS23IvdJltuFBREojuoNc1trw4Ux9wHEhItI/
G1F02FYbnMoPVt3/pIs8Lv4133PQBku1F+/4zXRR9f2F8o+u2qAf0nHMxVAH
6S++O3vnsjZYxzM3UZ0FZHWZTiU2WBvC/5Y/SxIB5EFiRHctRBvoLa+md49h
dJul9aVXuDbMr7msvdpGaFSr+rBhtDYo/DV1eWxKQB4J6W27d7UhgEWFZgU0
UCj7SMbve9qQb0IR0DujjhIfHvZbzNAGLYOY+MWb6ujZ8ziej1naEEUB9bMf
1NDO59BLz/O1YU4swel4pCq6LXNOzOu5NpTd9cgSoVdGeS+z/jm90IZ4/tmH
+m1KqFrn45B17T4/6XY2niFKaNTidIRBgzZMXW6Ze7qgiASv6Y0JdmjDOWre
6IExBVT9TuLW2LA2SB7+M+88JYeShFryt95rQ6DLnfvqD+WQZ5BVM/eYNvyN
Yuomd5JDgkdiftt/1gaqDaG1t72y6LbPzNmv37SBQZqCl3L9KPJovRpCPqcN
5gYp5tKRR5E+G/Nd4R/aEPrk/Qw501G006Dd47qsDSGDKeJlKtLIgz5HaWFD
G36dzFhUT5FE+udUTtH91Ya8xtAMLRlJJPD8rfvR7f3zmRkMNPVI7OfPnWzf
vX1849ItWRoJpFdmTbtOrQP0sY55LKliiP84y8QOhw4cctmOjVwQRjvZpZu8
3DowP3SeSPNAGH1Y02HGvDog2es7/+qkMErM9De8LqADP9xqtzOqhdD2fF8V
paQOXDyuo9p4WxC9J7i+FZXWAbZB0iUNI0FUdeffdwMZHeAL3TRsJxdEburS
vHEKOqDzuWJp8aoAeh97M4ZBUweOI8cWkWB+VPWJP0+WoANJOdmv7qnzowS5
l/UmWAccL3wPXv5zBBFHZ1eTdXWAamHcdZrqCHoqRrRjP6EDAsNLOqvqvCi+
c1eO314HzH8n7Xxb5kTgPyvPe1YHZlxN0HwyJ1rn7lPgOqcDJjE+6YpqnMjO
P0uJ5bwO3AqnLL4VzYGO8mip0XjrwAOV5dY38uyoz/8KXgnVgWn5T8/HG1lQ
JM85WArXgeBbrFvGl1iQSpeh9o8IHcgnf+LfJc2Csnk4dGdu6EB53Mr3l9nM
yLerRn80Xgf6WfWZcCITYuRdP9n8YJ9/viH7tXRG1N41btyQrQNQ5rko4MCI
ggPaTtXl6sBn9pq7gsKMaLIr2bT6sQ4MTb1PZj9/CD0NkD9TVKYDvpom1rZP
6ZFZt49dUr0OzM0FLuTfPoCoLlrYJzTqwEPq98Lp8gdQHS9yiGvWAc+/rM6j
w7RI8CK94432/fMKbCfLHqFFa7xlzsG9OiCM0VxjKzVKuTjv4fhJB4h6Licr
tCkRl36I/+kJHRDMTatY/kOB8jgOButP6oDxHQEuuScUqKpB+j/pmX29uJxN
i/gpUD+1X87mgg78JY2kYThEjhgebAwlbevA2I2I0CE2UpTmE/Mx6p8OBMqF
VaWPkyBebY6py3s6kDvOekT6IQmSnlVftiPXBbonsb+fypCg43JhNBIHdSFt
ZeT+l/xdQmw7OaGFSxesVjhp565uExjvpepW8+hCdbYuSSvPNuGeu8ixQj5d
+Ok9mvi9cYtQwGBgmSCoCz2lA1Hk1FuEDqs4f2tJXaCyzXQgLdgkkC0xFqyq
60K4zhKtL/cGIa7pYdmMpi4c8u3fI3v3m3A4WeHZB4IutEaKv8qN+k3gVzVv
btDWhTDLcp+Fn+sEfP3ex5tGusBBL8R2dvgXIZSV75CgtS70fo3U63+9Snj7
lNYG2+pC0ztFdWLMKoHP+PdjO3tdWE1SvPlMb5XQFN2rce+cLrjXzeBLHSsE
ss0QVzoPXWg477ynkfuTEPPxQ8NGiC7okwo8EuRbJIxebqNhCdOFoNB5otzz
BYI485PT8td04daGyNzrkwuEnuPR855RuvDF8ldqXNQPAl2DEuvULV04vVCi
/IhknpCcc8frzQNdUL4pWX9Za5YwrRn2Yi5bFwYtv5PWzH8jKI26kVE91IVH
Eiz2R9O/EUYYIR3ydSGz5fOdqs0ZAkfkctvzcl0IEWYqyuyaJmS7HOfObdzX
S5SVKJ0xRfhJoura0KwL3cstX35YThEgS/Dpx1ZdkEnaK85hnyJMjfzVZ+3S
BQKXcPHnjEmCsEFRQNw7XYgOv7ySZPaFUCxB2RM4qQvtU/EDE1PjhEEe7W3v
r7oQS3dLo/P6OGHnUJj0hRldyDvPYk8iNE4w3lhPtJ7TBbuhoVs27h8J660z
p9GKLvgrXh8XpRwjgF37Z2oSIvxOq/M8e+k9weMUySFSMiIwxxywcxV/T0jR
0YItciJURrgvhH4aIcyKV+ctUhNB1yhTv8dghBD/+9GFgUNECDq4yxQhOUwY
TYxazTxChNN/UlPseQcJZJFNgqkCRDjO+4au4csAQerS9ukEISJo/zrUspE3
QAi3vVhzTYwIP16zfFiUGiAIiztfdZElwk/rrt8pBv0E3xYdShlMBFmuqqp5
/beE9OpwFTFtIgxKz5nYzPQSWgvrLvDr7s9H9aNVMqqXwJKo0MNkQISsgVnj
sfY3hDobwdt/jIkQSCv+bM2yh0C1TsrZ4kCE6FPkLP61XYTNyvTEGUciPK+Q
0T7r0kVY8JaloHEmAjl4fclm7CL0f7f7abxvUK81dV0m9e4kZI6/6PjkS4SY
/6TFJ5U6CPHpxpokAUSIvbOm932+nXDtzLdKoUAikCo8r+fPbSe4vGN64BFM
hHNncp7zMLYTZNq8AzYjiCDfJps+86+VwB9BMccdRQT9U1tvxOpbCcyE+/b4
PyJsXOkgRl9tJWzWdBtG3yTCfxyPJuL/tRBaS4SOsCQTocnUgTSDoYVQfaEu
VTWVCJo5KPDmSDOhUNj0gG3aPp9nC2huZTUT4rPDfz/MJMKR8Jj/WuWaCRbJ
Y29kHxHhREc6l0R3I8HwlJ/26XwiXFcjVdC/0EjQpKN+cbmQCLQw6HufppHA
H62U11BKBCWtmk5GswYCk+4b9qlyIghan0vT36onUJI4JVBU7uvdKery+XE9
4ceV28HHq4nQ8bXzqR9pPeGTiuiyTw0R3odeN0959orw7le9c/JLIrRctvZ1
cntFqPb+YTxWT4Rf/RebQj7WEQokr7fvNBLhDTWbCnl6HSHjO7sGfwsRXLLN
lJus6gjh5/RELnQQIeH6acr4mVqCH9+nzLguItilrHYxVNYSnMcDGCte7+vD
pZ5ccK2WYJFOGz3whghlLv3K+adrCYZncrfX3xLBupen57x0LUGDSdWfo58I
DiRi9acO1BL+12CVhmPVRVGEBlTIGJIkMhMK+9rpvfe9qWRskCgVRSRRlChT
pZQpqaRPJGVIZCohRIYoY8YQSmYZK3zvz/U856yz91pr7+co137q16tj4PD5
ac3u4VyQvnXc2raBgdyatjpxzbkgsPPvF78mBvavEtTR+ZgLnNzhzMSvDJQa
NvW0LsqFmWL5dxWtDIyr1ekdZ+FfvoUaw+0MnNl66c5EZS606+9LWv2NgYaz
U0/DvuVC7dyQ5JZuVn8bJxwV2PKgONs/Yv93Bjbargs6pJIHr8+JL7/Ux8Dn
kcxggdN58EztlU/sDwbOToT8vfU2D1yExudyBhg4rklWekm+gS1/1Dy+DDLw
7GHL3bJRb+BPp+vYr2EGrrrnKLFR4S0UlaQ7cY4xkBRy961ofQtBSWP9khMM
5KGT5fXT82F3iJqdziQDvTMDpzNesvx2c+0wmWZg9yO5b8+6CuDrvvQDjrMM
VCzSnRWRK4JYvbF6/z8svd/CxucLRXBcWm3vo38M7NVKSCliK4bNXK6V2QsM
7OpOHb+3pQTGBl6Sn9lIrI9410QllEJ2zWjRAAeJB2TrFLWsy8A7U1V/CReJ
POsKu9OdPoJh9JkciaUk/tO2WRbfVwnLLr/U0F5OYoJoLOHa/Qlqjo6m7uUh
kX09XclV8BkiKVWFU3wkGldkLXs8VAdWimcS/Fax8Ac4ERPeCNKrX66L4SfR
+9KjhI1VX6F/cuRBliCJeTx6HWY57ZDSoiJcK0TiSeUjnmGFXeBW4BL2U4TE
wMoq/5XPv8PW+DReDnES524bhWdr/oCFayPX1kqQuFFk1wd/n0EoPa2yREuK
RL3ySyqU5RgEm7r4GEuz+Jbt4yZO/wYT7bQ5BxnWe/iqw1BgBoTXjrhflSXx
CHdojJnJX2hfVB57IEeire5LS29BNuJJr7PTa3kSi/tGvG9/4CBOVqT2f9rM
0md52bh4BhehkjZ89IcSiaLnPpZeLltGTIYrd7CpksgnoERGDPIQby44HxBX
JzHMZvhnybJVxBXr1HpNTRKdbwgZvFjCT1Dbh433aJFoNrP7u5ejAMErp1xp
r0PiHuk4gQsZgkTdCmfyyjYSX9Jla7i/riGiR1OK7uuRWFH8xLKmRYiwaRjS
ywSWvlNZSyRyhQnZPKWcagMStaRmDPa6ixC/Hp3W6N9O4l+p9B0uq0WJdL+U
1MUdJBapVU203BYlzjsMyYtRJKoofPorMSFK6O9WStCgSVSyqTpdrS9GcKif
XrfbiET1rVfEz50VIz4KpTw4sZvEF+yyD/1Z/9XbfwaFfI1JXBpVnW38RIyw
+KYYFm1C4j1zW655FhYvdeLNMCPxqVe86M0oMaIrKflalQWLf5L7RbmPGJEY
MsjRt4/Ez7G7480PixGn3RR9Fg6Q6DnNJx2vKUZo7HeaEzlE4sXhc52LHGLE
rF6yu/phEncr70q7WS1KFEgPjhrZkijYtp2TESZKBHApOh0/yvIz9JQyl5ko
sbr2xdF7J0hkFHOOXK0UIRTsXhjPO5N4VutqxfFEYeLjI930iTMsP0LV9UyO
CBP2LZX8P8+SWKN/fsOcmDCRYDLYUOfB8jt648zmECFC2kDpUNJlEhW56GcO
59cQwhJpDuYhJHq88nKSOyZAZO0nKug7rHlJT61u3SBAWETUbCbCSHRsehi7
u4+fCFsxOix/l1VvpX2WsyM/wTun6r4QQ2Kdc+Tll5dXExxNr648TyFxOP+j
wIo7fEQcv2FPbBqJToWZb/s38RG4p25HZDprfvnvFG4o5iUul05w+74mse2h
F/XyDw8xm6EZYpHP4jc+MBtzaQUxcifr/mIViaormr4b5y0lQqpI1v4lccMp
wXhz+6WE0tIm61+1JO7UNDLyWrOUOOUzva6xnsQAnSkFUXduove0TuKLNhJ9
Dy9w6CMX0bYzL8NykOVvmQFjftkSwnBvwgGPYVZeo2V0q4o4iBcWdxYiR1n1
K8vFvfDiIC7anjBq+E1ikox0VcgIOyHuwd9j9o/EzOqzGZ69bITfxX/X3BZI
/CCy7e/xBDbil+8P5XA2CrnF3NczTrARecHvvL5wUth08nny/fpFOPDfKX4T
PgrF7zmJ7/k7D0VPLXLOrKKQZ9WPltAb8yCfbHD4Dj+FDlfNyvzF5mE2S+h5
jRCFNrKHN9kQ/+Be1XvcI0Wh931mpc7DP9A0LeZqpErh1i9xGsdiZoD4xyns
qE5hq+8+2c+GM5DIPvb2hiaF1b6vBkJ/TcN53rKlFToUTkyrZs3BNAjJuD1m
IoXuPsUT335Pgvemw6SDIYULevwadgmT0KtEDwYxKPzY9LqFf98kvNaR0imj
KbR33LHpZ/5vsNhTWcMwpdBPnFNz9t4E5JtluR83p5C02bDL2XQCZA/8Jx5g
SeFtx9DhYZ4JmLQ7b19ykMIgB14PjoBxiPCUWdhuR2HgPTZevitjUBd/Udng
HIUb+pTtRulhEGDLztP1oLBu71T5pu4hMLceJ7UvUPg7mHO69uIQNKw5aaN8
iUK7J89KDmUMQnOg5Z21/qz+4vU6G9V/QbuD2vhMOIWynPsDtV1+gESp0+Xf
kRRK77X7p7z2BxyWfrZ8NIrCwh1+ybsq+qHzq6RM/wMKL1QrtA7I90PXTh7z
hicUxooURxhO9UKfYv/r9AyWPo5WQmKFPSB3ff32lNcUvnMxHXru3QP2vdaf
nmVTWHSBsVJOrwd+xtT3xb5h6dcZkF//pht+8b0XDimmUH5QNyC1tAtGRh96
nqpj5SOC/+HxxQ5Q2d3MeaKBwpQEmBW+2wFnkgTCjjRRePDDyo2GSh0wduTG
8/2tFPKnbdw2bNMOv7+cbyV7KJQxO9q5rLEVZjNN9WUmKEwKllZVZ/sKvFu1
awQnKdY+MjCuTmkG6XzxI1zTLP5xR6sbVs1Al373/zlH4fyT6vSDeU1wv8Gj
Ko2diUVztx70+zeC7tR9Kz1+JnYcit17ZWc9GHv5DCkJMjGqJXfAm7se7Obt
fKSEmDgl8W6tXWkdBHMpPWEXYyLHbPbXFsM6aBMqGCiXZiLsXyamZPQFvLV7
PC3UWIm7rhB0f7EGQt+UraA0mBjsYdXSG1EDCURyjM4WJt7lTchMVKiBasq9
SHwrEy8f5nT1OvgJJPdzL+s2YOKb513a1RVVUHBh8z3nvUyUX/x9U3zgI9T9
Xalga8pEywODeSHhH6Hf9/cbE3MmftUNlFOGj7Dyen6n5n4mTje6V3XdLQeb
aGO5PzZMvPWgtuKVRRks5rplBbkwMc/+qNArzlJo5864+cSViT322/zIvBJ4
YzF+tMCNiZMqqwynXUrAfezMyunzTAxyGbOO6SiGn5ucHU74MtGHR+3M9fL3
UBflIMYIZd2vVNw8EVkIL3sTR23DmWiw/sryWclCuKXR/+FSJBPV+pPUC5IK
gFlz3C0zmokutRvunil5B/lcdlUycUy02ytek8WbD0/drS+zZ7D6Vw+7+ngg
F/yKH5pLvmbptfeWfunNXDiyuk1hWzYTz5taJhup5oJ4ysEm1zdMdIhNunTy
Yg7c/r5PtauYidFxeZVW0tngaWbaXVDPxJ3s+RfbEjPB8r/QnNZGJn6u+vqk
3joTNEZqQ6abmeh2TP9rj2AmDN8w1lVpZ6LM5t4dWoEZYPd+V8SjXla//lNa
29xfwS41ivSeYqLS2Ow5XvaXwNbYyO4+w8TthfXy7JFpkO11osBpjqWH6xFp
D/k0kCkJ0Dk0z8TkIjfOcstU+GNZoqDLRWP/6KvWa++T4cUlXDm7hsYbE/kZ
ii1JcET6c+WoMI1V87vOlF9NAuEPttd+iLLOK/7Oi1JMAr+VvmzNEjRa9cm+
LvR7BlZx7yayZGlc5WO2r4JIhOXlus3nttCo5bPOYNuveChwqoxw0qbR/gPZ
oZoQD+6rrUyObaWxTcRFXtI2HroOelWY6dMYfG7Isab5CeQO5bxVZ9BYIJQl
q9IQBycFtP4bNacxQjYucMPQY5DKKbX+YUlj+SZh255Lj6HhkIXYt/008kyt
y1Tiewz49Fx4zSEavfIrO/dsiQXRrRkBqcdoNOpzrpWPjIHyw6qnnM6x6p+0
5f189z4IHDv59pEHjZ7rY3081e+Dzck4vs8XaBQR5ZdMromGaTfBjC3eNG6X
Vmy+yxcNstdn/swH0DgSUqvcGBMFriFqe9SusbCZitRGRhS8DT/12O4GjZ//
FCl9GboLZo/adpSH0CjrcFpMwfAuXMkovBUaReO+HsYx+l8EVOfMdhZH09g+
lHxhIDUCRN6pq089oNG4ZG3kuyMRkFYe33jwMY3aJpwagxXh0NF+TWpDEo3D
/zLavz8PA92lJulZeTQKN198rbXtDgTx3uD4+ZbGNZOelR8KbsMX/mIL8QIa
Z9YIftGibsNJiS1zPsU0Pqp5yPHAKgTuqYsa0lU07pT02/oq+ib0aJtGXvxE
o6r59zW+SjdBRT+4P6WWxgT77qCp98FQRv0L5m+gUecx7VM0fgMmD3XVt7bT
2BQuFSd1/DrgUTE5vm80Hm0znL/MeR1u2pt5GnTTuOlRdLdF4jWQOVsqkdBH
o4e792qzkSAwDUo64TxCY1762tSB24EQc7M75/EYKw/H+Y/Z6wbCz1DxFXUT
NBpskcxT+REAVx7eStOeoXHCYEV6CCMAqv/7wHZqjpU/RtQx8Sl/EElcMHv4
l0ZNj20tnYn+YJes8/TTPI0dMxpGTQf9IS3ddWZxkcY7Y+9H//L5w/94FITk

              "]]}, Annotation[#, "Charting`Private`Tag$22921#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
pQ9K60z3zTIPoc+uMtuUefThtPLV9t0XTVDMEfdQEz59YBd8clKM1xyZqbz+
6ySgD/++anYrXDuOWDinfMOF9MFF3Utox0Vr1LMpPZMqog/rRpta0ht26MmQ
m0uBmD5sjAjhp1fskXP9q+FGCX3we/bF8IPWWSTz+o/9iJQ+TLg3ey9xOqGF
O9K9FLL6QP37oVbNzguoOMDNikNeH9JDN5zV51xRmO2rNkXFLT8NFxa5Sj3Q
Ae0/JsbKW7w2f/wnLe2F6EWkGxxVt+qnvYrec8obte500w9T14eHrIM8bZ4+
KHk6pyJFUx+YjtppaNj7opPtk5r5SB/GDIVHY+T8kNAHqXdfiT4IR1ff3N3n
h8YfuioMa2/p4fQKeO7lj95cyXm1qasPI11vL8eM+CN/p0kx9gP6QFefEcyp
F4C0jKSeKRjog8IC9VhFdACiknflNTqsD8v3Y6q6igNQHXNO6jkjfbhzqPLM
664AdOyX5O1ks618r+ma6cYCUF/my6gvx/ShyLDoonZtAHpxc4Lqt4U+ZJpL
m+/ODECu3pKhG1b6cKiA5YtEeABSsHT5y2qjDzJbnBuPBqAVzZe+8nb6kHeu
KngbfwAq45uYPnxKHwJKaqw+jPmjSBpJl7P2+gAGSUElr/3RvuZs+6Rz+lDz
5/JPKzl/JH4m2+Sfmz6sLi/sGeH1Q3UPNd7MeehD9WL53Zifvsixq4Fh1Esf
GNVe7Z954IuemU20t/rpQ50Bn85Ddl/ER6RsMi/pw5DgzTfpzD6Iheu109Gb
+tBt+dBAWMQLFVrieoNb+kD/nn+Qa8ITHUtoksC39cGps2nrxOqJbu+c/iN2
Vx9+WVfdlcKeiP6vrO/GA31Qu6VbXV7l/r+KyzSeyn2L43TtDKe6KCrKsAsJ
lYyHvU7L8Pyfp8m4hcyykRIfU4ZESJSIoxTHOWgy5ZRSh0SiduUgQ3SRi9hJ
ZUjJkXL3fb1e/Nb3+1nrxQ+WdN+KLykX/o/mcZWgzENQKGM+/HsFhcrn5j6A
7iHAvR0W2Tcp1NrQ6OzQEQCxTZ+Wxt2hULZLPMN6TQDMVeqd5dZSuEF2LF3y
tj9MZFRdWmwW+jsscnSPii+cbaa+fW4R+v9Pzau3HTzQFu92HW8T3o97zo1z
yTw4eHxW+WUnhevbTDMWpnxg5LDRtdI+CuP/2yLV334A+nZWVzq8p7DRJ7vn
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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$22921#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
aqg=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$22921#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Densities of infected hosts and parasite pool\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 
           Thickness[0.003]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0., 50.}, All}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(w\\)]\\)\"", 
           "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(ww\\)]\\)\"", 
           "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(w\\)]\\)\"", 
           "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(ww\\)]\\)\"", "\"W\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    TemplateBox[
                    Association[
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]], 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.844855186645587*^9, 3.8475355569403048`*^9, {3.8620458493690968`*^9, 
   3.862045962461378*^9}, 3.863591406729103*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"6de6e16b-8e52-47ac-b07b-0c9ac1d598c3"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8402702611374187`*^9, 3.840270279641218*^9}, {
   3.8402703247925463`*^9, 3.840270371411469*^9}, {3.8402712494557943`*^9, 
   3.840271294098413*^9}, {3.840271747540648*^9, 3.840271769242661*^9}, {
   3.840271890578911*^9, 3.8402719247226257`*^9}, 3.8405140988949137`*^9, 
   3.840514141305519*^9, 3.8405143370371*^9, 3.840514568791933*^9, {
   3.840618948190444*^9, 3.840618950245644*^9}, 3.8406217661311626`*^9, 
   3.843644680374757*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"1f02433f-be28-4178-bc43-2bb5cc8d0ccc"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Bifurcation parameter \[Gamma] ", "Chapter"]], \
"Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.840513818220866*^9, 3.8405138233606863`*^9}, 
   3.8405140989112988`*^9, 3.840514141307034*^9, 3.8405143370387487`*^9, 
   3.840514454520589*^9, {3.840614232851659*^9, 3.840614235529089*^9}, 
   3.840617811979319*^9, 3.840617870945619*^9, {3.840617913070766*^9, 
   3.8406179134341927`*^9}},ExpressionUUID->"506f9de0-aabc-4c75-9576-\
ede1482489c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"par\[Gamma]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "7.5"}], ",", 
     RowBox[{"fww", "->", " ", "7.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]range", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.1", ",", " ", "8", ",", " ", "0.05"}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.840513360176461*^9, 3.840513361552371*^9}, {
   3.840513689270657*^9, 3.8405137343369637`*^9}, {3.840513795913856*^9, 
   3.84051383293729*^9}, 3.840514098919145*^9, 3.840514141307314*^9, 
   3.84051433703898*^9, 3.840514454521016*^9, {3.840514624259234*^9, 
   3.840514648971648*^9}, {3.8405146850508127`*^9, 3.8405146964165*^9}, {
   3.8405154191748962`*^9, 3.8405154255667677`*^9}, {3.840515456008613*^9, 
   3.8405154578197107`*^9}, {3.840515547267445*^9, 3.840515548252037*^9}, {
   3.8405156019863453`*^9, 3.840515602143134*^9}, {3.840515714843853*^9, 
   3.840515715133101*^9}, 3.840515764803358*^9, {3.8405291993124123`*^9, 
   3.840529209472171*^9}, {3.840530500152974*^9, 3.840530506598586*^9}, {
   3.840613937741518*^9, 3.840613937839087*^9}, 3.840617870952455*^9, {
   3.8406182116426764`*^9, 3.8406182233930273`*^9}, 3.84062309295673*^9, 
   3.8448549749442463`*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"9a4dbafe-d8e9-4a1d-ab18-fe9641382212"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sols\[Gamma]", " ", "=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"odesRes", "/.", "func0"}], "/.", "forceInf"}], "/.", 
          "par\[Gamma]"}], "/.", 
         RowBox[{"\[Gamma]", "->", " ", "0.1"}]}], ")"}], " ", "\[Equal]", 
       " ", "0"}], "]"}], ",", " ", "varRes"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqinit", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "1.1309523809523814`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Iww", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "2.0000000000000004`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}], ",", 
     RowBox[{"Dww", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8406181072965612`*^9, 3.8406181260137653`*^9}, 
   3.840618920789198*^9, {3.8448552069025373`*^9, 3.84485520711311*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"5a2e2749-aeec-46e6-9088-65c10c455036"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq\[Gamma]zero", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
     "\[Gamma]range", ",", " ", "varRes", ",", " ", "eqinit"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"Is", "/.", "eq\[Gamma]zero"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]zero"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"Ds", "/.", "eq\[Gamma]zero"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]zero"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", "Gray"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p0", ",", " ", "p1"}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{{3.8406143333922863`*^9, 3.840614336941863*^9}, {
   3.8406143845150757`*^9, 3.840614424500957*^9}, 3.840617870958558*^9, {
   3.840618100790797*^9, 3.8406181014034986`*^9}, 3.8448552050002832`*^9, {
   3.8635915474428587`*^9, 3.8635915548732624`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"7774e8c6-8081-4d0b-889f-fc7bc525a710"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.1, 1.1309523809523814`}}, {{0.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.15000000000000002`, 1.1309523809523814`}}, {{
       0.15000000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.2, 1.1309523809523814`}}, {{0.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.25, 1.1309523809523814`}}, {{0.25, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.30000000000000004`, 1.1309523809523814`}}, {{
       0.30000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.35, 1.1309523809523814`}}, {{0.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.4, 1.1309523809523814`}}, {{0.4, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.45000000000000007`, 1.1309523809523814`}}, {{
       0.45000000000000007`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.5, 1.1309523809523814`}}, {{0.5, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.55, 1.1309523809523814`}}, {{0.55, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.6, 1.1309523809523814`}}, {{0.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.65, 1.1309523809523814`}}, {{0.65, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.7000000000000001, 1.1309523809523814`}}, {{
       0.7000000000000001, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.75, 1.1309523809523814`}}, {{0.75, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.8, 1.1309523809523814`}}, {{0.8, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.85, 1.1309523809523814`}}, {{0.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.9, 1.1309523809523814`}}, {{0.9, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.9500000000000001, 1.1309523809523814`}}, {{
       0.9500000000000001, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1., 1.1309523809523814`}}, {{1., 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.05, 1.1309523809523814`}}, {{1.05, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.1, 1.1309523809523814`}}, {{1.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.1500000000000001`, 1.1309523809523814`}}, {{
       1.1500000000000001`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.2000000000000002`, 1.1309523809523814`}}, {{
       1.2000000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.2500000000000002`, 1.1309523809523814`}}, {{
       1.2500000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.3000000000000003`, 1.1309523809523814`}}, {{
       1.3000000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.35, 1.1309523809523814`}}, {{1.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.4000000000000001`, 1.1309523809523814`}}, {{
       1.4000000000000001`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.4500000000000002`, 1.1309523809523814`}}, {{
       1.4500000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.5000000000000002`, 1.1309523809523814`}}, {{
       1.5000000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.5500000000000003`, 1.1309523809523814`}}, {{
       1.5500000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.6, 1.1309523809523814`}}, {{1.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.6500000000000001`, 1.1309523809523814`}}, {{
       1.6500000000000001`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.7000000000000002`, 1.1309523809523814`}}, {{
       1.7000000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.7500000000000002`, 1.1309523809523814`}}, {{
       1.7500000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.8000000000000003`, 1.1309523809523814`}}, {{
       1.8000000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.85, 1.1309523809523814`}}, {{1.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.9000000000000001`, 1.1309523809523814`}}, {{
       1.9000000000000001`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.9500000000000002`, 1.1309523809523814`}}, {{
       1.9500000000000002`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2., 1.1309523809523814`}}, {{2., 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.0500000000000003`, 1.1309523809523814`}}, {{
       2.0500000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.1, 1.1309523809523814`}}, {{2.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.1500000000000004`, 1.1309523809523814`}}, {{
       2.1500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.2, 1.1309523809523814`}}, {{2.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.25, 1.1309523809523814`}}, {{2.25, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.3000000000000003`, 1.1309523809523814`}}, {{
       2.3000000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.35, 1.1309523809523814`}}, {{2.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.4000000000000004`, 1.1309523809523814`}}, {{
       2.4000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.45, 1.1309523809523814`}}, {{2.45, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.5000000000000004`, 1.1309523809523814`}}, {{
       2.5000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.5500000000000003`, 1.1309523809523814`}}, {{
       2.5500000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.6, 1.1309523809523814`}}, {{2.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.6500000000000004`, 1.1309523809523814`}}, {{
       2.6500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.7, 1.1309523809523814`}}, {{2.7, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.7500000000000004`, 1.1309523809523814`}}, {{
       2.7500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.8000000000000003`, 1.1309523809523814`}}, {{
       2.8000000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.85, 1.1309523809523814`}}, {{2.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.9000000000000004`, 1.1309523809523814`}}, {{
       2.9000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.95, 1.1309523809523814`}}, {{2.95, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.0000000000000004`, 1.1309523809523814`}}, {{
       3.0000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.0500000000000003`, 1.1309523809523814`}}, {{
       3.0500000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.1, 1.1309523809523814`}}, {{3.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.1500000000000004`, 1.1309523809523814`}}, {{
       3.1500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.2, 1.1309523809523814`}}, {{3.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.2500000000000004`, 1.1309523809523814`}}, {{
       3.2500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.3000000000000003`, 1.1309523809523814`}}, {{
       3.3000000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.35, 1.1309523809523814`}}, {{3.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.4000000000000004`, 1.1309523809523814`}}, {{
       3.4000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.45, 1.1309523809523814`}}, {{3.45, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.5000000000000004`, 1.1309523809523814`}}, {{
       3.5000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.5500000000000003`, 1.1309523809523814`}}, {{
       3.5500000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.6, 1.1309523809523814`}}, {{3.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.6500000000000004`, 1.1309523809523814`}}, {{
       3.6500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.7, 1.1309523809523814`}}, {{3.7, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.7500000000000004`, 1.1309523809523814`}}, {{
       3.7500000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.8000000000000003`, 1.1309523809523814`}}, {{
       3.8000000000000003`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.85, 1.1309523809523814`}}, {{3.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.9000000000000004`, 1.1309523809523814`}}, {{
       3.9000000000000004`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.95, 1.1309523809523814`}}, {{3.95, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4., 1.1309523809523814`}}, {{4., 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.05, 1.1309523809523814`}}, {{4.05, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.1, 1.1309523809523814`}}, {{4.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.1499999999999995`, 1.1309523809523814`}}, {{
       4.1499999999999995`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.2, 1.1309523809523814`}}, {{4.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.25, 1.1309523809523814`}}, {{4.25, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.3, 1.1309523809523814`}}, {{4.3, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.35, 1.1309523809523814`}}, {{4.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.3999999999999995`, 1.1309523809523814`}}, {{
       4.3999999999999995`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.45, 1.1309523809523814`}}, {{4.45, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.5, 1.1309523809523814`}}, {{4.5, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.55, 1.1309523809523814`}}, {{4.55, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.6, 1.1309523809523814`}}, {{4.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.6499999999999995`, 1.1309523809523814`}}, {{
       4.6499999999999995`, 1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.7, 1.1309523809523814`}}, {{4.7, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.75, 1.1309523809523814`}}, {{4.75, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.8, 1.1309523809523814`}}, {{4.8, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.85, 1.1309523809523814`}}, {{4.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.9, 1.1309523809523814`}}, {{4.9, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.95, 1.1309523809523814`}}, {{4.95, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5., 1.1309523809523814`}}, {{5., 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.05, 1.1309523809523814`}}, {{5.05, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.1, 1.1309523809523814`}}, {{5.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.15, 1.1309523809523814`}}, {{5.15, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.2, 1.1309523809523814`}}, {{5.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.25, 1.1309523809523814`}}, {{5.25, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.3, 1.1309523809523814`}}, {{5.3, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.35, 1.1309523809523814`}}, {{5.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.4, 1.1309523809523814`}}, {{5.4, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.45, 1.1309523809523814`}}, {{5.45, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.5, 1.1309523809523814`}}, {{5.5, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.55, 1.1309523809523814`}}, {{5.55, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.6, 1.1309523809523814`}}, {{5.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.65, 1.1309523809523814`}}, {{5.65, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.7, 1.1309523809523814`}}, {{5.7, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.75, 1.1309523809523814`}}, {{5.75, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.8, 1.1309523809523814`}}, {{5.8, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.85, 1.1309523809523814`}}, {{5.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.9, 1.1309523809523814`}}, {{5.9, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.95, 1.1309523809523814`}}, {{5.95, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6., 1.1309523809523814`}}, {{6., 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.05, 1.1309523809523814`}}, {{6.05, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.1, 1.1309523809523814`}}, {{6.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.15, 1.1309523809523814`}}, {{6.15, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.2, 1.1309523809523814`}}, {{6.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.25, 1.1309523809523814`}}, {{6.25, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.3, 1.1309523809523814`}}, {{6.3, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.35, 1.1309523809523814`}}, {{6.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.4, 1.1309523809523814`}}, {{6.4, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.45, 1.1309523809523814`}}, {{6.45, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.5, 1.1309523809523814`}}, {{6.5, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.55, 1.1309523809523814`}}, {{6.55, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.6, 1.1309523809523814`}}, {{6.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.65, 1.1309523809523814`}}, {{6.65, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.7, 1.1309523809523814`}}, {{6.7, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.75, 1.1309523809523814`}}, {{6.75, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.8, 1.1309523809523814`}}, {{6.8, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.85, 1.1309523809523814`}}, {{6.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.9, 1.1309523809523814`}}, {{6.9, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.95, 1.1309523809523814`}}, {{6.95, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7., 1.1309523809523814`}}, {{7., 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.05, 1.1309523809523814`}}, {{7.05, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.1, 1.1309523809523814`}}, {{7.1, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.15, 1.1309523809523814`}}, {{7.15, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.2, 1.1309523809523814`}}, {{7.2, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.25, 1.1309523809523814`}}, {{7.25, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.3, 1.1309523809523814`}}, {{7.3, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.35, 1.1309523809523814`}}, {{7.35, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.4, 1.1309523809523814`}}, {{7.4, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.45, 1.1309523809523814`}}, {{7.45, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.5, 1.1309523809523814`}}, {{7.5, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.55, 1.1309523809523814`}}, {{7.55, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.6, 1.1309523809523814`}}, {{7.6, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.65, 1.1309523809523814`}}, {{7.65, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.7, 1.1309523809523814`}}, {{7.7, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.75, 1.1309523809523814`}}, {{7.75, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.8, 1.1309523809523814`}}, {{7.8, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.85, 1.1309523809523814`}}, {{7.85, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.9, 1.1309523809523814`}}, {{7.9, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.95, 1.1309523809523814`}}, {{7.95, 
       1.1309523809523814`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8., 1.1309523809523814`}}, {{8., 
       1.1309523809523814`}}}]}}, {{}, {}}}, {{}, {
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.1, 2.0000000000000004`}}, {{0.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.15000000000000002`, 2.0000000000000004`}}, {{
       0.15000000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.2, 2.0000000000000004`}}, {{0.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.25, 2.0000000000000004`}}, {{0.25, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.30000000000000004`, 2.0000000000000004`}}, {{
       0.30000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.35, 2.0000000000000004`}}, {{0.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.4, 2.0000000000000004`}}, {{0.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.45000000000000007`, 2.0000000000000004`}}, {{
       0.45000000000000007`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.5, 2.0000000000000004`}}, {{0.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.55, 2.0000000000000004`}}, {{0.55, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.6, 2.0000000000000004`}}, {{0.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.65, 2.0000000000000004`}}, {{0.65, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.7000000000000001, 2.0000000000000004`}}, {{
       0.7000000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.75, 2.0000000000000004`}}, {{0.75, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.8, 2.0000000000000004`}}, {{0.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.85, 2.0000000000000004`}}, {{0.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.9, 2.0000000000000004`}}, {{0.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{0.9500000000000001, 2.0000000000000004`}}, {{
       0.9500000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1., 2.0000000000000004`}}, {{1., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.05, 2.0000000000000004`}}, {{1.05, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.1, 2.0000000000000004`}}, {{1.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.1500000000000001`, 2.0000000000000004`}}, {{
       1.1500000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.2000000000000002`, 2.0000000000000004`}}, {{
       1.2000000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.2500000000000002`, 2.0000000000000004`}}, {{
       1.2500000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.3000000000000003`, 2.0000000000000004`}}, {{
       1.3000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.35, 2.0000000000000004`}}, {{1.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.4000000000000001`, 2.0000000000000004`}}, {{
       1.4000000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.4500000000000002`, 2.0000000000000004`}}, {{
       1.4500000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.5000000000000002`, 2.0000000000000004`}}, {{
       1.5000000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.5500000000000003`, 2.0000000000000004`}}, {{
       1.5500000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.6, 2.0000000000000004`}}, {{1.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.6500000000000001`, 2.0000000000000004`}}, {{
       1.6500000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.7000000000000002`, 2.0000000000000004`}}, {{
       1.7000000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.7500000000000002`, 2.0000000000000004`}}, {{
       1.7500000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.8000000000000003`, 2.0000000000000004`}}, {{
       1.8000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.85, 2.0000000000000004`}}, {{1.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.9000000000000001`, 2.0000000000000004`}}, {{
       1.9000000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.9500000000000002`, 2.0000000000000004`}}, {{
       1.9500000000000002`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2., 2.0000000000000004`}}, {{2., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.0500000000000003`, 2.0000000000000004`}}, {{
       2.0500000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.1, 2.0000000000000004`}}, {{2.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.1500000000000004`, 2.0000000000000004`}}, {{
       2.1500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.2, 2.0000000000000004`}}, {{2.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.25, 2.0000000000000004`}}, {{2.25, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.3000000000000003`, 2.0000000000000004`}}, {{
       2.3000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.35, 2.0000000000000004`}}, {{2.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.4000000000000004`, 2.0000000000000004`}}, {{
       2.4000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.45, 2.0000000000000004`}}, {{2.45, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.5000000000000004`, 2.0000000000000004`}}, {{
       2.5000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.5500000000000003`, 2.0000000000000004`}}, {{
       2.5500000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.6, 2.0000000000000004`}}, {{2.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.6500000000000004`, 2.0000000000000004`}}, {{
       2.6500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.7, 2.0000000000000004`}}, {{2.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.7500000000000004`, 2.0000000000000004`}}, {{
       2.7500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.8000000000000003`, 2.0000000000000004`}}, {{
       2.8000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.85, 2.0000000000000004`}}, {{2.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.9000000000000004`, 2.0000000000000004`}}, {{
       2.9000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.95, 2.0000000000000004`}}, {{2.95, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.0000000000000004`, 2.0000000000000004`}}, {{
       3.0000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.0500000000000003`, 2.0000000000000004`}}, {{
       3.0500000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.1, 2.0000000000000004`}}, {{3.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.1500000000000004`, 2.0000000000000004`}}, {{
       3.1500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.2, 2.0000000000000004`}}, {{3.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.2500000000000004`, 2.0000000000000004`}}, {{
       3.2500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.3000000000000003`, 2.0000000000000004`}}, {{
       3.3000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.35, 2.0000000000000004`}}, {{3.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.4000000000000004`, 2.0000000000000004`}}, {{
       3.4000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.45, 2.0000000000000004`}}, {{3.45, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.5000000000000004`, 2.0000000000000004`}}, {{
       3.5000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.5500000000000003`, 2.0000000000000004`}}, {{
       3.5500000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.6, 2.0000000000000004`}}, {{3.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.6500000000000004`, 2.0000000000000004`}}, {{
       3.6500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.7, 2.0000000000000004`}}, {{3.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.7500000000000004`, 2.0000000000000004`}}, {{
       3.7500000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.8000000000000003`, 2.0000000000000004`}}, {{
       3.8000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.85, 2.0000000000000004`}}, {{3.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.9000000000000004`, 2.0000000000000004`}}, {{
       3.9000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.95, 2.0000000000000004`}}, {{3.95, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4., 2.0000000000000004`}}, {{4., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.05, 2.0000000000000004`}}, {{4.05, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.1, 2.0000000000000004`}}, {{4.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.1499999999999995`, 2.0000000000000004`}}, {{
       4.1499999999999995`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.2, 2.0000000000000004`}}, {{4.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.25, 2.0000000000000004`}}, {{4.25, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.3, 2.0000000000000004`}}, {{4.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.35, 2.0000000000000004`}}, {{4.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.3999999999999995`, 2.0000000000000004`}}, {{
       4.3999999999999995`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.45, 2.0000000000000004`}}, {{4.45, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.5, 2.0000000000000004`}}, {{4.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.55, 2.0000000000000004`}}, {{4.55, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.6, 2.0000000000000004`}}, {{4.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.6499999999999995`, 2.0000000000000004`}}, {{
       4.6499999999999995`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.7, 2.0000000000000004`}}, {{4.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.75, 2.0000000000000004`}}, {{4.75, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.8, 2.0000000000000004`}}, {{4.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.85, 2.0000000000000004`}}, {{4.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.9, 2.0000000000000004`}}, {{4.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.95, 2.0000000000000004`}}, {{4.95, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5., 2.0000000000000004`}}, {{5., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.05, 2.0000000000000004`}}, {{5.05, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.1, 2.0000000000000004`}}, {{5.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.15, 2.0000000000000004`}}, {{5.15, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.2, 2.0000000000000004`}}, {{5.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.25, 2.0000000000000004`}}, {{5.25, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.3, 2.0000000000000004`}}, {{5.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.35, 2.0000000000000004`}}, {{5.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.4, 2.0000000000000004`}}, {{5.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.45, 2.0000000000000004`}}, {{5.45, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.5, 2.0000000000000004`}}, {{5.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.55, 2.0000000000000004`}}, {{5.55, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.6, 2.0000000000000004`}}, {{5.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.65, 2.0000000000000004`}}, {{5.65, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.7, 2.0000000000000004`}}, {{5.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.75, 2.0000000000000004`}}, {{5.75, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.8, 2.0000000000000004`}}, {{5.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.85, 2.0000000000000004`}}, {{5.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.9, 2.0000000000000004`}}, {{5.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.95, 2.0000000000000004`}}, {{5.95, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6., 2.0000000000000004`}}, {{6., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.05, 2.0000000000000004`}}, {{6.05, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.1, 2.0000000000000004`}}, {{6.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.15, 2.0000000000000004`}}, {{6.15, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.2, 2.0000000000000004`}}, {{6.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.25, 2.0000000000000004`}}, {{6.25, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.3, 2.0000000000000004`}}, {{6.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.35, 2.0000000000000004`}}, {{6.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.4, 2.0000000000000004`}}, {{6.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.45, 2.0000000000000004`}}, {{6.45, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.5, 2.0000000000000004`}}, {{6.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.55, 2.0000000000000004`}}, {{6.55, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.6, 2.0000000000000004`}}, {{6.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.65, 2.0000000000000004`}}, {{6.65, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.7, 2.0000000000000004`}}, {{6.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.75, 2.0000000000000004`}}, {{6.75, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.8, 2.0000000000000004`}}, {{6.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.85, 2.0000000000000004`}}, {{6.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.9, 2.0000000000000004`}}, {{6.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.95, 2.0000000000000004`}}, {{6.95, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7., 2.0000000000000004`}}, {{7., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.05, 2.0000000000000004`}}, {{7.05, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.1, 2.0000000000000004`}}, {{7.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.15, 2.0000000000000004`}}, {{7.15, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.2, 2.0000000000000004`}}, {{7.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.25, 2.0000000000000004`}}, {{7.25, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.3, 2.0000000000000004`}}, {{7.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.35, 2.0000000000000004`}}, {{7.35, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.4, 2.0000000000000004`}}, {{7.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.45, 2.0000000000000004`}}, {{7.45, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.5, 2.0000000000000004`}}, {{7.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.55, 2.0000000000000004`}}, {{7.55, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.6, 2.0000000000000004`}}, {{7.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.65, 2.0000000000000004`}}, {{7.65, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.7, 2.0000000000000004`}}, {{7.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.75, 2.0000000000000004`}}, {{7.75, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.8, 2.0000000000000004`}}, {{7.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.85, 2.0000000000000004`}}, {{7.85, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.9, 2.0000000000000004`}}, {{7.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.95, 2.0000000000000004`}}, {{7.95, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8., 2.0000000000000004`}}, {{8., 
       2.0000000000000004`}}}]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 8.}, {0, 2.2619047619047628`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.},
 CellChangeTimes->{3.8448552149464283`*^9, 3.844855249669414*^9, 
  3.844855747423437*^9, 3.847535562233286*^9, 3.862046116400435*^9, 
  3.8635914916959763`*^9, 3.863591555740548*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"21f86cb2-d810-4cd5-b3b1-3f5f564ac7f1"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colordata", " ", "=", " ", 
   RowBox[{"ColorData", "[", 
    RowBox[{"97", ",", " ", "\"\<ColorList\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varname", " ", "=", " ", "Is"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq\[Gamma]1", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
     "\[Gamma]range", ",", " ", "varRes", ",", " ", 
     RowBox[{"sols\[Gamma]", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"varname", "/.", "eq\[Gamma]1"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Gamma]1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]1"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colordata", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq\[Gamma]2", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
     "\[Gamma]range", ",", " ", "varRes", ",", " ", 
     RowBox[{"sols\[Gamma]", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"varname", "/.", "eq\[Gamma]2"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Gamma]2", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]2"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colordata", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq\[Gamma]13", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
     "\[Gamma]range", ",", " ", "varRes", ",", " ", 
     RowBox[{"sols\[Gamma]", "[", 
      RowBox[{"[", "13", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"varname", "/.", "eq\[Gamma]13"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Gamma]13", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]13"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colordata", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq\[Gamma]16", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
     "\[Gamma]range", ",", " ", "varRes", ",", " ", 
     RowBox[{"sols\[Gamma]", "[", 
      RowBox[{"[", "16", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"varname", "/.", "eq\[Gamma]16"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Gamma]16", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]16"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colordata", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq\[Gamma]17", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
     "\[Gamma]range", ",", " ", "varRes", ",", " ", 
     RowBox[{"sols\[Gamma]", "[", 
      RowBox[{"[", "17", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]range", ",", " ", 
      RowBox[{"varname", "/.", "eq\[Gamma]17"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[Gamma]17", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Gamma]", ",", " ", "\[Gamma]", ",", " ", 
        "\[Gamma]range", ",", " ", "eq\[Gamma]17"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colordata", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p\[Gamma]1", ",", " ", "p\[Gamma]2", ",", " ", "p\[Gamma]13", ",", 
   "p\[Gamma]16", ",", "p\[Gamma]17", ",", 
   RowBox[{"PlotRange", "->", " ", "All"}], ",", " ", 
   RowBox[{"Frame", "->", " ", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Infection rate of free parasite (\[Gamma])\>\"", ",", " ", 
      "\"\<Density of population\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.84053322312894*^9, 3.840533223181831*^9}, {
   3.840533331866531*^9, 3.840533331982815*^9}, 3.8405333847433643`*^9, 
   3.840533417084338*^9, 3.840533454789996*^9, {3.8405335253018417`*^9, 
   3.840533577210206*^9}, {3.8405427131368103`*^9, 3.840542719684285*^9}, {
   3.840614527626143*^9, 3.8406145590240583`*^9}, {3.840614594708493*^9, 
   3.840614660805747*^9}, {3.840615011110395*^9, 3.840615027375164*^9}, {
   3.840615088848475*^9, 3.840615132824698*^9}, {3.8406153171075687`*^9, 
   3.840615393243878*^9}, {3.8406156759996977`*^9, 3.8406157990518723`*^9}, {
   3.840615951447645*^9, 3.840615971909421*^9}, {3.840617645849729*^9, 
   3.84061777526791*^9}, 3.840617870961844*^9, {3.840618150399184*^9, 
   3.840618159818932*^9}, {3.840622888632823*^9, 3.8406230333222303`*^9}, {
   3.8406231186816463`*^9, 3.8406232653850737`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"43249110-21b0-41cf-996f-a576b29b57e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bifurcation parameter \[Beta]w (linear birth functions)", "Subtitle",
 CellChangeTimes->{{3.840617904397909*^9, 3.8406179116679688`*^9}, {
  3.8436232430051394`*^9, 
  3.843623246848158*^9}},ExpressionUUID->"ceef9337-1abf-4513-9f40-\
9e1194708e81"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"par\[Beta]w", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "3.5"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", "  ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "7.5"}], ",", 
     RowBox[{"fww", "->", " ", "7.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[CapitalKappa]", "->", " ", "100"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]wrange", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"1.5", ",", " ", "14.5", ",", " ", "0.1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.840617951177622*^9, 3.840617962255887*^9}, {
  3.840618016194386*^9, 3.84061803600611*^9}, {3.840618870362215*^9, 
  3.840618872151507*^9}, {3.840619305399461*^9, 3.840619305926928*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"3b99c3a5-f045-4556-b19a-33d6a4899ab5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sols\[Beta]w", " ", "=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"odesRes", "/.", "func0"}], "/.", "forceInf"}], "/.", 
          "par\[Beta]w"}], "/.", 
         RowBox[{"\[Beta]w", "->", " ", "1.5"}]}], ")"}], " ", "\[Equal]", 
       " ", "0"}], "]"}], ",", " ", "varRes"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8406182661826*^9, 3.840618281948532*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"3ac9215c-f512-45fa-8b11-cfc5d730b833"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqinit", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "1.1309523809523812`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Iww", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "2.0000000000000004`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}], ",", 
     RowBox[{"Dww", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq\[Beta]wzero", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
    "sysfunc0", ",", " ", "par\[Beta]w", ",", " ", "\[Beta]w", ",", " ", 
     "\[Beta]wrange", ",", " ", "varRes", ",", " ", "eqinit"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Beta]wrange", ",", " ", 
      RowBox[{"Is", "/.", "eq\[Beta]wzero"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Beta]w", ",", " ", "\[Beta]w", ",", " ", 
        "\[Beta]wrange", ",", " ", "eq\[Beta]wzero"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"\[Beta]wrange", ",", " ", 
      RowBox[{"Ds", "/.", "eq\[Beta]wzero"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListMark", "[", 
       RowBox[{
       "Jmat", ",", " ", "par\[Beta]w", ",", " ", "\[Beta]w", ",", " ", 
        "\[Beta]wrange", ",", " ", "eq\[Beta]wzero"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", "Gray"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p0", ",", " ", "p1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.840618290727642*^9, 3.8406182945344477`*^9}, {
  3.8406187732520447`*^9, 3.840618779372552*^9}, {3.840619354174365*^9, 
  3.84061942989815*^9}, {3.840619475548752*^9, 3.840619476716736*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"35fc2d37-0019-4b13-b257-9189770b278a"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.5, 1.1309523809523812`}}, {{1.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.6, 1.1309523809523812`}}, {{1.6, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.7, 1.1309523809523812`}}, {{1.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.8, 1.1309523809523812`}}, {{1.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.9, 1.1309523809523812`}}, {{1.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2., 1.1309523809523812`}}, {{2., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.1, 1.1309523809523812`}}, {{2.1, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.2, 1.1309523809523812`}}, {{2.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.3, 1.1309523809523812`}}, {{2.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.4, 1.1309523809523812`}}, {{2.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.5, 1.1309523809523812`}}, {{2.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.6, 1.1309523809523812`}}, {{2.6, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.7, 1.1309523809523812`}}, {{2.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.8, 1.1309523809523812`}}, {{2.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.9000000000000004`, 1.1309523809523812`}}, {{
       2.9000000000000004`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3., 1.1309523809523812`}}, {{3., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.1, 1.1309523809523812`}}, {{3.1, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.2, 1.1309523809523812`}}, {{3.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.3, 1.1309523809523812`}}, {{3.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.4000000000000004`, 1.1309523809523812`}}, {{
       3.4000000000000004`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.5, 1.1309523809523812`}}, {{3.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.6, 1.1309523809523812`}}, {{3.6, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.7, 1.1309523809523812`}}, {{3.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.8000000000000003`, 1.1309523809523812`}}, {{
       3.8000000000000003`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.9000000000000004`, 1.1309523809523812`}}, {{
       3.9000000000000004`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4., 1.1309523809523812`}}, {{4., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.1, 1.1309523809523812`}}, {{4.1, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.2, 1.1309523809523812`}}, {{4.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.300000000000001, 1.1309523809523812`}}, {{
       4.300000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.4, 1.1309523809523812`}}, {{4.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.5, 1.1309523809523812`}}, {{4.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.6, 1.1309523809523812`}}, {{4.6, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.7, 1.1309523809523812`}}, {{4.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.800000000000001, 1.1309523809523812`}}, {{
       4.800000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.9, 1.1309523809523812`}}, {{4.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5., 1.1309523809523812`}}, {{5., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.1, 1.1309523809523812`}}, {{5.1, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.2, 1.1309523809523812`}}, {{5.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.300000000000001, 1.1309523809523812`}}, {{
       5.300000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.4, 1.1309523809523812`}}, {{5.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.5, 1.1309523809523812`}}, {{5.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.6000000000000005`, 1.1309523809523812`}}, {{
       5.6000000000000005`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.7, 1.1309523809523812`}}, {{5.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.8, 1.1309523809523812`}}, {{5.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.9, 1.1309523809523812`}}, {{5.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6., 1.1309523809523812`}}, {{6., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.1000000000000005`, 1.1309523809523812`}}, {{
       6.1000000000000005`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.2, 1.1309523809523812`}}, {{6.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.300000000000001, 1.1309523809523812`}}, {{
       6.300000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.4, 1.1309523809523812`}}, {{6.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.5, 1.1309523809523812`}}, {{6.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.6000000000000005`, 1.1309523809523812`}}, {{
       6.6000000000000005`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.7, 1.1309523809523812`}}, {{6.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.800000000000001, 1.1309523809523812`}}, {{
       6.800000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.9, 1.1309523809523812`}}, {{6.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7., 1.1309523809523812`}}, {{7., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.1000000000000005`, 1.1309523809523812`}}, {{
       7.1000000000000005`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.2, 1.1309523809523812`}}, {{7.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.300000000000001, 1.1309523809523812`}}, {{
       7.300000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.4, 1.1309523809523812`}}, {{7.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.5, 1.1309523809523812`}}, {{7.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.6000000000000005`, 1.1309523809523812`}}, {{
       7.6000000000000005`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.7, 1.1309523809523812`}}, {{7.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.800000000000001, 1.1309523809523812`}}, {{
       7.800000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.9, 1.1309523809523812`}}, {{7.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8., 1.1309523809523812`}}, {{8., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.100000000000001, 1.1309523809523812`}}, {{
       8.100000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.2, 1.1309523809523812`}}, {{8.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.3, 1.1309523809523812`}}, {{8.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.4, 1.1309523809523812`}}, {{8.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.5, 1.1309523809523812`}}, {{8.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.600000000000001, 1.1309523809523812`}}, {{
       8.600000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.7, 1.1309523809523812`}}, {{8.7, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.8, 1.1309523809523812`}}, {{8.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.9, 1.1309523809523812`}}, {{8.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9., 1.1309523809523812`}}, {{9., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.100000000000001, 1.1309523809523812`}}, {{
       9.100000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.2, 1.1309523809523812`}}, {{9.2, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.3, 1.1309523809523812`}}, {{9.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.4, 1.1309523809523812`}}, {{9.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.5, 1.1309523809523812`}}, {{9.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.6, 1.1309523809523812`}}, {{9.6, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.700000000000001, 1.1309523809523812`}}, {{
       9.700000000000001, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.8, 1.1309523809523812`}}, {{9.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.9, 1.1309523809523812`}}, {{9.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10., 1.1309523809523812`}}, {{10., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.1, 1.1309523809523812`}}, {{10.1, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.200000000000001`, 1.1309523809523812`}}, {{
       10.200000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.3, 1.1309523809523812`}}, {{10.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.4, 1.1309523809523812`}}, {{10.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.5, 1.1309523809523812`}}, {{10.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.6, 1.1309523809523812`}}, {{10.6, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.700000000000001`, 1.1309523809523812`}}, {{
       10.700000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.8, 1.1309523809523812`}}, {{10.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.9, 1.1309523809523812`}}, {{10.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11., 1.1309523809523812`}}, {{11., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.100000000000001`, 1.1309523809523812`}}, {{
       11.100000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.200000000000001`, 1.1309523809523812`}}, {{
       11.200000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.3, 1.1309523809523812`}}, {{11.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.4, 1.1309523809523812`}}, {{11.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.5, 1.1309523809523812`}}, {{11.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.600000000000001`, 1.1309523809523812`}}, {{
       11.600000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.700000000000001`, 1.1309523809523812`}}, {{
       11.700000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.8, 1.1309523809523812`}}, {{11.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.9, 1.1309523809523812`}}, {{11.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12., 1.1309523809523812`}}, {{12., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.100000000000001`, 1.1309523809523812`}}, {{
       12.100000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.200000000000001`, 1.1309523809523812`}}, {{
       12.200000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.3, 1.1309523809523812`}}, {{12.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.4, 1.1309523809523812`}}, {{12.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.5, 1.1309523809523812`}}, {{12.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.600000000000001`, 1.1309523809523812`}}, {{
       12.600000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.700000000000001`, 1.1309523809523812`}}, {{
       12.700000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.8, 1.1309523809523812`}}, {{12.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.9, 1.1309523809523812`}}, {{12.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13., 1.1309523809523812`}}, {{13., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.100000000000001`, 1.1309523809523812`}}, {{
       13.100000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.200000000000001`, 1.1309523809523812`}}, {{
       13.200000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.3, 1.1309523809523812`}}, {{13.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.4, 1.1309523809523812`}}, {{13.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.5, 1.1309523809523812`}}, {{13.5, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.600000000000001`, 1.1309523809523812`}}, {{
       13.600000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.700000000000001`, 1.1309523809523812`}}, {{
       13.700000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.8, 1.1309523809523812`}}, {{13.8, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.9, 1.1309523809523812`}}, {{13.9, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14., 1.1309523809523812`}}, {{14., 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.100000000000001`, 1.1309523809523812`}}, {{
       14.100000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.200000000000001`, 1.1309523809523812`}}, {{
       14.200000000000001`, 1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.3, 1.1309523809523812`}}, {{14.3, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.4, 1.1309523809523812`}}, {{14.4, 
       1.1309523809523812`}}}]}, 
     {GrayLevel[0], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.5, 1.1309523809523812`}}, {{14.5, 
       1.1309523809523812`}}}]}}, {{}, {}}}, {{}, {
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.5, 2.0000000000000004`}}, {{1.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.6, 2.0000000000000004`}}, {{1.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.7, 2.0000000000000004`}}, {{1.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.8, 2.0000000000000004`}}, {{1.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{1.9, 2.0000000000000004`}}, {{1.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2., 2.0000000000000004`}}, {{2., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.1, 2.0000000000000004`}}, {{2.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.2, 2.0000000000000004`}}, {{2.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.3, 2.0000000000000004`}}, {{2.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.4, 2.0000000000000004`}}, {{2.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.5, 2.0000000000000004`}}, {{2.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.6, 2.0000000000000004`}}, {{2.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.7, 2.0000000000000004`}}, {{2.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.8, 2.0000000000000004`}}, {{2.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{2.9000000000000004`, 2.0000000000000004`}}, {{
       2.9000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3., 2.0000000000000004`}}, {{3., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.1, 2.0000000000000004`}}, {{3.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.2, 2.0000000000000004`}}, {{3.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.3, 2.0000000000000004`}}, {{3.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.4000000000000004`, 2.0000000000000004`}}, {{
       3.4000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.5, 2.0000000000000004`}}, {{3.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.6, 2.0000000000000004`}}, {{3.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.7, 2.0000000000000004`}}, {{3.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.8000000000000003`, 2.0000000000000004`}}, {{
       3.8000000000000003`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{3.9000000000000004`, 2.0000000000000004`}}, {{
       3.9000000000000004`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4., 2.0000000000000004`}}, {{4., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.1, 2.0000000000000004`}}, {{4.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.2, 2.0000000000000004`}}, {{4.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.300000000000001, 2.0000000000000004`}}, {{
       4.300000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.4, 2.0000000000000004`}}, {{4.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.5, 2.0000000000000004`}}, {{4.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.6, 2.0000000000000004`}}, {{4.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.7, 2.0000000000000004`}}, {{4.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.800000000000001, 2.0000000000000004`}}, {{
       4.800000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{4.9, 2.0000000000000004`}}, {{4.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5., 2.0000000000000004`}}, {{5., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.1, 2.0000000000000004`}}, {{5.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.2, 2.0000000000000004`}}, {{5.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.300000000000001, 2.0000000000000004`}}, {{
       5.300000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.4, 2.0000000000000004`}}, {{5.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.5, 2.0000000000000004`}}, {{5.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.6000000000000005`, 2.0000000000000004`}}, {{
       5.6000000000000005`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.7, 2.0000000000000004`}}, {{5.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.8, 2.0000000000000004`}}, {{5.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{5.9, 2.0000000000000004`}}, {{5.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6., 2.0000000000000004`}}, {{6., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.1000000000000005`, 2.0000000000000004`}}, {{
       6.1000000000000005`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.2, 2.0000000000000004`}}, {{6.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.300000000000001, 2.0000000000000004`}}, {{
       6.300000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.4, 2.0000000000000004`}}, {{6.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.5, 2.0000000000000004`}}, {{6.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.6000000000000005`, 2.0000000000000004`}}, {{
       6.6000000000000005`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.7, 2.0000000000000004`}}, {{6.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.800000000000001, 2.0000000000000004`}}, {{
       6.800000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{6.9, 2.0000000000000004`}}, {{6.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7., 2.0000000000000004`}}, {{7., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.1000000000000005`, 2.0000000000000004`}}, {{
       7.1000000000000005`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.2, 2.0000000000000004`}}, {{7.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.300000000000001, 2.0000000000000004`}}, {{
       7.300000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.4, 2.0000000000000004`}}, {{7.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.5, 2.0000000000000004`}}, {{7.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.6000000000000005`, 2.0000000000000004`}}, {{
       7.6000000000000005`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.7, 2.0000000000000004`}}, {{7.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.800000000000001, 2.0000000000000004`}}, {{
       7.800000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{7.9, 2.0000000000000004`}}, {{7.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8., 2.0000000000000004`}}, {{8., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.100000000000001, 2.0000000000000004`}}, {{
       8.100000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.2, 2.0000000000000004`}}, {{8.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.3, 2.0000000000000004`}}, {{8.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.4, 2.0000000000000004`}}, {{8.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.5, 2.0000000000000004`}}, {{8.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.600000000000001, 2.0000000000000004`}}, {{
       8.600000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.7, 2.0000000000000004`}}, {{8.7, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.8, 2.0000000000000004`}}, {{8.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{8.9, 2.0000000000000004`}}, {{8.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9., 2.0000000000000004`}}, {{9., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.100000000000001, 2.0000000000000004`}}, {{
       9.100000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.2, 2.0000000000000004`}}, {{9.2, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.3, 2.0000000000000004`}}, {{9.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.4, 2.0000000000000004`}}, {{9.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.5, 2.0000000000000004`}}, {{9.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.6, 2.0000000000000004`}}, {{9.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.700000000000001, 2.0000000000000004`}}, {{
       9.700000000000001, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.8, 2.0000000000000004`}}, {{9.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{9.9, 2.0000000000000004`}}, {{9.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10., 2.0000000000000004`}}, {{10., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.1, 2.0000000000000004`}}, {{10.1, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.200000000000001`, 2.0000000000000004`}}, {{
       10.200000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.3, 2.0000000000000004`}}, {{10.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.4, 2.0000000000000004`}}, {{10.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.5, 2.0000000000000004`}}, {{10.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.6, 2.0000000000000004`}}, {{10.6, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.700000000000001`, 2.0000000000000004`}}, {{
       10.700000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.8, 2.0000000000000004`}}, {{10.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{10.9, 2.0000000000000004`}}, {{10.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11., 2.0000000000000004`}}, {{11., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.100000000000001`, 2.0000000000000004`}}, {{
       11.100000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.200000000000001`, 2.0000000000000004`}}, {{
       11.200000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.3, 2.0000000000000004`}}, {{11.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.4, 2.0000000000000004`}}, {{11.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.5, 2.0000000000000004`}}, {{11.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.600000000000001`, 2.0000000000000004`}}, {{
       11.600000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.700000000000001`, 2.0000000000000004`}}, {{
       11.700000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.8, 2.0000000000000004`}}, {{11.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{11.9, 2.0000000000000004`}}, {{11.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12., 2.0000000000000004`}}, {{12., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.100000000000001`, 2.0000000000000004`}}, {{
       12.100000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.200000000000001`, 2.0000000000000004`}}, {{
       12.200000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.3, 2.0000000000000004`}}, {{12.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.4, 2.0000000000000004`}}, {{12.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.5, 2.0000000000000004`}}, {{12.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.600000000000001`, 2.0000000000000004`}}, {{
       12.600000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.700000000000001`, 2.0000000000000004`}}, {{
       12.700000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.8, 2.0000000000000004`}}, {{12.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{12.9, 2.0000000000000004`}}, {{12.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13., 2.0000000000000004`}}, {{13., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.100000000000001`, 2.0000000000000004`}}, {{
       13.100000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.200000000000001`, 2.0000000000000004`}}, {{
       13.200000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.3, 2.0000000000000004`}}, {{13.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.4, 2.0000000000000004`}}, {{13.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.5, 2.0000000000000004`}}, {{13.5, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.600000000000001`, 2.0000000000000004`}}, {{
       13.600000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.700000000000001`, 2.0000000000000004`}}, {{
       13.700000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.8, 2.0000000000000004`}}, {{13.8, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{13.9, 2.0000000000000004`}}, {{13.9, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14., 2.0000000000000004`}}, {{14., 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.100000000000001`, 2.0000000000000004`}}, {{
       14.100000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.200000000000001`, 2.0000000000000004`}}, {{
       14.200000000000001`, 2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.3, 2.0000000000000004`}}, {{14.3, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.4, 2.0000000000000004`}}, {{14.4, 
       2.0000000000000004`}}}]}, 
     {GrayLevel[0.5], PointSize[0.009166666666666668], AbsoluteThickness[1.6],
       GeometricTransformationBox[
       TagBox[InsetBox["*", {0., 0.}],
        "InsetString"], {{{14.5, 2.0000000000000004`}}, {{14.5, 
       2.0000000000000004`}}}]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 14.5}, {0, 2.2619047619047623`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.844855759659093*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"2fed1716-e18c-4731-9937-4de57fa50ee9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Stability of disease free equilibrium (nonlinear birth functions)\
\>", "Subtitle",
 CellChangeTimes->{{3.843644760688702*^9, 
  3.843644775093433*^9}},ExpressionUUID->"90b04a1d-bc0b-4740-b77f-\
5e9c44d0fbec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solRes1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"odesRes", "==", 
          RowBox[{"{", 
           RowBox[{
           "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", 
            ",", " ", "0", ",", " ", "0"}], "}"}]}], "]"}], "/.", "func1"}], "/.",
        "forceInf"}], "/.", "pFreeCond"}], ",", " ", "varRes"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"602cbdb3-2ba1-49c8-ac39-b0aacdd2505e"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "svars", 
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"", 2,
    94, 17, 30152257038189632617, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843644872940136*^9, 3.8438953106818*^9, 3.84389609043029*^9, 
   3.843896488344118*^9, 3.8438973285578136`*^9, 3.843900073723412*^9, 
   3.8439015826180964`*^9, 3.844162610414699*^9, 3.844311406329302*^9, 
   3.844318205526572*^9, 3.844403268041953*^9, 3.844491507274473*^9, 
   3.844852969968648*^9, {3.8448569989985247`*^9, 3.8448570043207283`*^9}, 
   3.844921883460888*^9, 3.845101424218478*^9, 3.845104773327598*^9, 
   3.845105096987018*^9, 3.845121607760729*^9, 3.845371396388639*^9, 
   3.845373175152299*^9, 3.845375947279031*^9, 3.845444707843822*^9, 
   3.845447313236425*^9, 3.8454736649194517`*^9, 3.845521607467472*^9, {
   3.845718418105805*^9, 3.845718429332859*^9}, 3.847535897787469*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"363c84cc-bd9f-458a-9e8b-4d7a79be5610"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], 
       RowBox[{"k", " ", "r"}]]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], " ", "r", " ", "\[Mu]"}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}]}], 
       RowBox[{"c", " ", 
        SuperscriptBox["\[Rho]", "2"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.843644872968463*^9, 3.843895310707844*^9, 3.843896090456345*^9, 
   3.843896488370273*^9, 3.843897328569036*^9, 3.8439000737512627`*^9, 
   3.8439015826455717`*^9, 3.844162610443226*^9, 3.844311406347652*^9, 
   3.844318205547387*^9, 3.844403268062132*^9, 3.8444915073021*^9, 
   3.84485296999139*^9, {3.84485699902699*^9, 3.844857004326727*^9}, 
   3.844921883482443*^9, 3.845101424235969*^9, 3.845104773341855*^9, 
   3.8451050969992313`*^9, 3.845121607779482*^9, 3.84537139640944*^9, 
   3.8453731751704273`*^9, 3.8453759473006353`*^9, 3.845444707864057*^9, 
   3.845447313256832*^9, 3.845473664935264*^9, 3.845521607489209*^9, {
   3.845718418122802*^9, 3.845718429342125*^9}, 3.847535897797275*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"920b37f5-f7b7-47da-a4e8-a51d5a70fedd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Ds", "/.", 
       RowBox[{"solRes1", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ")"}], " ", ">", " ", "0"}], " ", "&&",
     " ", 
    RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"d", "  ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"k", " ", ">", "0"}]}], ",", " ", "k", ",", " ", "Reals"}], 
  "]"}]], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"102e67ed-54f5-4f17-92ca-a25677d76100"],

Cell[BoxData[
 RowBox[{
  RowBox[{"r", ">", "0"}], "&&", 
  RowBox[{"0", "<", "d", "<", "r"}], "&&", 
  RowBox[{"\[Rho]", ">", "0"}], "&&", 
  RowBox[{"\[Mu]", ">", "0"}], "&&", 
  RowBox[{"c", ">", "0"}], "&&", 
  RowBox[{"0", "<", "k", "<", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", "d", " ", "\[Rho]"}], "+", 
     RowBox[{"c", " ", "r", " ", "\[Rho]"}]}], 
    RowBox[{"r", " ", "\[Mu]"}]]}]}]], "Output",
 CellChangeTimes->{
  3.843644874095952*^9, 3.843895313454096*^9, 3.843895998174368*^9, 
   3.843896093449903*^9, 3.8438964909412603`*^9, 3.843897333205213*^9, 
   3.843901586488888*^9, 3.844311407653769*^9, 3.8443182056743813`*^9, 
   3.844403268187562*^9, 3.8444915074351683`*^9, 3.844852970113996*^9, 
   3.8448570044546423`*^9, 3.8449218836122303`*^9, 3.8451014243694153`*^9, 
   3.845104773481386*^9, 3.8451050970351963`*^9, 3.845121607907394*^9, 
   3.845371396534473*^9, 3.8453731752968693`*^9, 3.845375947425099*^9, 
   3.845444707993257*^9, 3.845447313384653*^9, 3.8454736650285463`*^9, 
   3.84552160761827*^9, {3.845718418300397*^9, 3.845718429373769*^9}, 
   3.8475359015799503`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"6d19d907-a1f1-4131-9f6c-3c7bd903a486"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jmat", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"odesRes", "/.", "func1"}], "/.", "forceInf"}], ",", " ", 
     RowBox[{"{", "varRes", "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"9bac153f-22a3-4ef3-a406-4ae814a5dd23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jmat", "/.", "pFreeCond"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eivPF", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "%", "]"}], "/.", 
   RowBox[{"solRes1", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{
  3.843895583276002*^9, 3.8438967200780993`*^9, {3.84389734103961*^9, 
   3.843897342176612*^9}, 3.843897782802615*^9, {3.843898017918117*^9, 
   3.843898030449758*^9}, {3.843898069788744*^9, 3.8438980747401323`*^9}, {
   3.843898361256402*^9, 3.843898386683062*^9}, {3.843900048999102*^9, 
   3.843900049146583*^9}, {3.843900093208099*^9, 3.843900095230389*^9}, 
   3.843900197636587*^9, {3.843900431244339*^9, 3.843900433133314*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"97271f66-c8e2-4784-9305-3faeb02658d8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", "r", "-", 
              FractionBox[
               RowBox[{"2", " ", "k", " ", "r", " ", "\[Mu]"}], 
               RowBox[{"c", " ", "\[Rho]"}]], "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "k"}], " ", "r", " ", "\[Mu]"}], "+", 
                RowBox[{"c", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}]}], 
               RowBox[{"c", " ", "\[Rho]"}]], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"4", " ", "\[Mu]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "k"}], " ", "r", " ", "\[Mu]"}], "+", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}]}], 
                    ")"}]}], 
                  RowBox[{"c", " ", "\[Rho]"}]]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"d", "-", "r", "+", 
                   FractionBox[
                    RowBox[{"2", " ", "k", " ", "r", " ", "\[Mu]"}], 
                    RowBox[{"c", " ", "\[Rho]"}]], "+", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "k"}], " ", "r", " ", "\[Mu]"}], "+", 
                    RowBox[{"c", " ", 
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], ")"}], " ", "\[Rho]"}]}], 
                    RowBox[{"c", " ", "\[Rho]"}]]}], ")"}], "2"]}]]}], 
             ")"}]}], ",", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", "r", "-", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], "-", 
              FractionBox[
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], 
               RowBox[{"c", " ", "\[Rho]"}]], "+", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], 
                  RowBox[{"c", " ", "\[Rho]"}]]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], ")"}], "2"]}]]}], ")"}]}], 
           ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"Root", "[", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "]"}], ",", 
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SuperscriptBox["d", "2"], " ", "\[Delta]", " ", 
                SuperscriptBox["\[Mu]", "2"]}], "+", 
               RowBox[{"d", " ", "\[Alpha]w", " ", "\[Delta]", " ", 
                SuperscriptBox["\[Mu]", "2"]}], "+", 
               TemplateBox[{"422"},
                "OutputSizeLimit`Skeleton"], "+", 
               SuperscriptBox["#1", "5"]}], "&"}], ",", "5"}], "]"}]}], "}"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{83., {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 30152257038189632617, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 30152257038189632617, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{60., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 30152257038189632617, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{107., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30152257038189632617 === $SessionID, 
   Out[98], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.843900154491517*^9, 3.843900199005831*^9, 3.843900435055567*^9, 
   3.8439015892887793`*^9, 3.8441626160143833`*^9, 3.844311410022138*^9, 
   3.844318206464445*^9, 3.844403268969698*^9, 3.844491508226317*^9, 
   3.844852970915141*^9, 3.844857005229548*^9, 3.844921884403648*^9, 
   3.84510142515239*^9, 3.845104774284799*^9, 3.845105097689493*^9, 
   3.8451216086881647`*^9, 3.84537139730394*^9, 3.845373176075287*^9, 
   3.8453759482077837`*^9, 3.845444708774312*^9, 3.845447314167633*^9, 
   3.845473665813692*^9, 3.845521608409659*^9, {3.845718419089814*^9, 
   3.845718430017757*^9}, 3.847535908278735*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"ab3477de-5058-48bf-a466-fc6bb434783e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"eivPF", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], " ", "&&", 
      RowBox[{
       RowBox[{"eivPF", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], " ", "  ", "&&", " ", 
      RowBox[{"\[Rho]", " ", ">", " ", "0"}], "&&", 
      RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"k", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"r", " ", ">", " ", "d"}], " ", "&&", " ", 
      RowBox[{"\[Mu]", " ", ">", " ", "0"}]}], " ", ",", "   ", "k"}], "]"}], 
   ",", " ", 
   RowBox[{
    RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Mu]", " ", ">", " ", "0"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"condPfreeStableNL", " ", "=", " ", 
  RowBox[{"%", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.843896133056634*^9, 3.8438961332359447`*^9}, {
   3.843896557020718*^9, 3.843896706876542*^9}, {3.8438976894624777`*^9, 
   3.843897713928726*^9}, {3.843897747955031*^9, 3.843897757839179*^9}, 
   3.843898005317354*^9, {3.8438980488260612`*^9, 3.843898056821519*^9}, {
   3.8438988207466173`*^9, 3.843898835748419*^9}, {3.8439004520575438`*^9, 
   3.84390047815598*^9}, {3.843900524642549*^9, 3.843900529150655*^9}, {
   3.8439020473157473`*^9, 3.843902049236052*^9}, {3.8439021104008512`*^9, 
   3.843902125184515*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"5e733684-b589-4160-83cf-6074edfc1e6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "<", "d", "<", "r"}], "&&", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "c", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"-", "d"}], "+", "r", "+", "\[Mu]"}], "\[Mu]"]]}], ")"}], 
     " ", "\[Rho]"}], "r"], "\[LessEqual]", "k", "<", 
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}], 
    RowBox[{"r", " ", "\[Mu]"}]]}]}]], "Output",
 CellChangeTimes->{
  3.843644904825624*^9, 3.843895348097301*^9, 3.843895984501506*^9, {
   3.843896126951524*^9, 3.843896133951174*^9}, {3.843896536364821*^9, 
   3.843896623567624*^9}, {3.843896658691286*^9, 3.843896726400145*^9}, {
   3.8438976709874887`*^9, 3.843897714371848*^9}, {3.843897752239427*^9, 
   3.843897758359035*^9}, {3.8438979957281113`*^9, 3.843898005787594*^9}, {
   3.843898046062848*^9, 3.843898057301405*^9}, 3.843898321520371*^9, {
   3.843898822633045*^9, 3.843898836106529*^9}, {3.843900440516178*^9, 
   3.843900478633657*^9}, {3.8439005257574177`*^9, 3.8439005293836203`*^9}, 
   3.84390159008468*^9, {3.843902106356082*^9, 3.843902125760607*^9}, 
   3.844162618044436*^9, 3.844311412381708*^9, 3.844318206527499*^9, 
   3.8444032690324297`*^9, 3.844491508276265*^9, 3.8448529709784517`*^9, 
   3.844857005279545*^9, 3.844921884468254*^9, 3.845101425216433*^9, 
   3.845104774356662*^9, 3.845105097717198*^9, 3.84512160875404*^9, 
   3.845371397369258*^9, 3.8453731761431313`*^9, 3.845375948273978*^9, 
   3.845444708843596*^9, 3.8454473142369347`*^9, 3.845473665878818*^9, 
   3.845521608480145*^9, {3.845718419162183*^9, 3.845718430041884*^9}, 
   3.847535911482944*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"21a5938c-cd3f-4f1a-a5cb-b67e258004d7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", "c", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "d"}], "+", "r", "+", "\[Mu]"}], "\[Mu]"]]}], ")"}], 
    " ", "\[Rho]"}], "r"], "\[LessEqual]", "k", "<", 
  FractionBox[
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}], 
   RowBox[{"r", " ", "\[Mu]"}]]}]], "Output",
 CellChangeTimes->{
  3.843644904825624*^9, 3.843895348097301*^9, 3.843895984501506*^9, {
   3.843896126951524*^9, 3.843896133951174*^9}, {3.843896536364821*^9, 
   3.843896623567624*^9}, {3.843896658691286*^9, 3.843896726400145*^9}, {
   3.8438976709874887`*^9, 3.843897714371848*^9}, {3.843897752239427*^9, 
   3.843897758359035*^9}, {3.8438979957281113`*^9, 3.843898005787594*^9}, {
   3.843898046062848*^9, 3.843898057301405*^9}, 3.843898321520371*^9, {
   3.843898822633045*^9, 3.843898836106529*^9}, {3.843900440516178*^9, 
   3.843900478633657*^9}, {3.8439005257574177`*^9, 3.8439005293836203`*^9}, 
   3.84390159008468*^9, {3.843902106356082*^9, 3.843902125760607*^9}, 
   3.844162618044436*^9, 3.844311412381708*^9, 3.844318206527499*^9, 
   3.8444032690324297`*^9, 3.844491508276265*^9, 3.8448529709784517`*^9, 
   3.844857005279545*^9, 3.844921884468254*^9, 3.845101425216433*^9, 
   3.845104774356662*^9, 3.845105097717198*^9, 3.84512160875404*^9, 
   3.845371397369258*^9, 3.8453731761431313`*^9, 3.845375948273978*^9, 
   3.845444708843596*^9, 3.8454473142369347`*^9, 3.845473665878818*^9, 
   3.845521608480145*^9, {3.845718419162183*^9, 3.845718430041884*^9}, 
   3.847535911485721*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"5e85653e-a6d1-4a88-b85f-4693d5313bf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"condPfreeStableNL", "[", 
     RowBox[{"[", "1", "]"}], "]"}], " ", "<", " ", 
    RowBox[{"condPfreeStableNL", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], " ", "&&", " ", 
   RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"r", " ", ">", " ", "d"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843900683608388*^9, 3.843900733590684*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"e312b56c-fe51-40c2-871e-67211b590eab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", ">", "0"}], "&&", 
  RowBox[{"r", ">", "0"}], "&&", 
  RowBox[{"k", ">", "0"}], "&&", 
  RowBox[{"c", ">", "0"}], "&&", 
  RowBox[{"d", "<", "r"}], "&&", 
  RowBox[{"\[Mu]", ">", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["c", "2"], " ", "d", " ", 
      SuperscriptBox["\[Rho]", "2"]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["c", "2"], " ", "r", " ", 
      SuperscriptBox["\[Rho]", "2"]}]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["r", "2"]}], "+", 
     RowBox[{
     "4", " ", "c", " ", "k", " ", "r", " ", "\[Rho]"}]}]]}]}]], "Output",
 CellChangeTimes->{{3.84390069644566*^9, 3.843900733870295*^9}, 
   3.8439015946500072`*^9, 3.843902130819448*^9, 3.844162620319997*^9, 
   3.84431141441816*^9, 3.844318206542285*^9, 3.844403269047975*^9, 
   3.844491508299053*^9, 3.844852970991246*^9, 3.8448570053015738`*^9, 
   3.844921884483906*^9, 3.845101425229154*^9, 3.84510477442656*^9, 
   3.845105097748748*^9, 3.845121608772787*^9, 3.84537139738874*^9, 
   3.845373176166966*^9, 3.8453759482973003`*^9, 3.8454447088681927`*^9, 
   3.845447314261323*^9, 3.845473665907503*^9, 3.845521608508101*^9, {
   3.845718419264717*^9, 3.8457184300691633`*^9}, 3.8475359168808327`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"b94a421b-cc14-4d46-b751-2ca164367987"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Condition for positive parasite population (nonlinear birth functions)\
\>", "Subtitle",
 CellChangeTimes->{{3.843623262765636*^9, 
  3.8436232732372503`*^9}},ExpressionUUID->"1674dbd5-8ea5-461b-b72b-\
62519c80a97f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"R0freePar", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Alpha]w", " ", "->", " ", "\[Alpha]"}], ",", " ", 
       RowBox[{"\[Alpha]ww", " ", "->", " ", "\[Alpha]"}]}], "}"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Sigma]w", " ", "->", " ", "\[Sigma]"}], ",", " ", 
      RowBox[{"\[Sigma]ww", " ", "->", " ", "\[Sigma]"}]}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fww", "->", " ", "f"}], ",", " ", 
     RowBox[{"fw", "->", " ", "f"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844144905730077*^9, 3.844144907616708*^9}, {
   3.844159105321065*^9, 3.84415916917319*^9}, 3.844311556108811*^9},
 CellLabel->
  "In[102]:=",ExpressionUUID->"c076dd98-2349-4b56-a590-f965b1470ab5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"R0freePar", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Alpha]w", " ", "->", " ", "\[Alpha]"}], ",", " ", 
             RowBox[{"\[Alpha]ww", " ", "->", " ", "\[Alpha]"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]w", " ", "->", " ", "\[Sigma]"}], ",", " ", 
            RowBox[{"\[Sigma]ww", " ", "->", " ", "\[Sigma]"}]}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"fww", "->", " ", "f"}], ",", " ", 
           RowBox[{"fw", "->", " ", "f"}]}], "}"}]}], "/.", 
        RowBox[{"\[CapitalPi]w", "->", " ", 
         RowBox[{"\[CapitalPi]w", "[", 
          RowBox[{"Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]w"}], "]"}]}]}], "/.", 
       RowBox[{"\[CapitalPi]ww", " ", "->", " ", 
        RowBox[{"\[CapitalPi]ww", "[", 
         RowBox[{"Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]ww"}], "]"}]}]}], "/.",
       "func1"}], "/.", 
     RowBox[{"solRes1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", "pFreeCond"}], "//", 
   "FullSimplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"condPspreadNL", " ", "=", " ", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"%", " ", ">", " ", "1"}], " ", "&&", " ", 
      RowBox[{"1", ">", "p", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"1", ">", "q", ">", "0"}], " ", "&&", " ", 
      RowBox[{"k", "<", 
       FractionBox[
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}], 
        RowBox[{"r", " ", "\[Mu]"}]]}], "&&", 
      RowBox[{"f", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"r", " ", ">", " ", "d"}], " ", "&&", " ", 
      RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Beta]w", " ", ">", "0"}], "&&", 
      RowBox[{"\[Beta]ww", ">", "0"}], "&&", " ", 
      RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Delta]", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Alpha]", " ", ">=", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Mu]", ">", "0"}], " ", "&&", " ", 
      RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", 
      RowBox[{"\[Sigma]", " ", ">=", " ", "0"}]}], ",", " ", "f"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"condPspreadNL", " ", "[", 
   RowBox[{"[", "15", "]"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.843635288611486*^9, 3.8436353229730587`*^9}, {
   3.8436354709150877`*^9, 3.8436354926516647`*^9}, 3.843635615634184*^9, 
   3.843635648925386*^9, {3.843635751135017*^9, 3.843635778792717*^9}, {
   3.8436424386190453`*^9, 3.8436424583494797`*^9}, {3.843643632142263*^9, 
   3.843643638864952*^9}, {3.843895374232336*^9, 3.843895374837451*^9}, {
   3.8441591824588413`*^9, 3.844159204291913*^9}, {3.844159734656535*^9, 
   3.844159735585329*^9}, {3.8441598920487137`*^9, 3.844159903358226*^9}, {
   3.8441599966952877`*^9, 3.844160002498682*^9}, {3.8441603271704063`*^9, 
   3.844160404294825*^9}, {3.8441605443971577`*^9, 3.844160615408638*^9}, {
   3.844160782450848*^9, 3.84416078257933*^9}, {3.8441608481041927`*^9, 
   3.844160866012905*^9}, {3.844161104819371*^9, 3.844161111402651*^9}, 
   3.844856982223584*^9, {3.844857018650222*^9, 3.844857034053412*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"38bd58b2-873a-4dea-a789-0358d98794f5"],

Cell[BoxData[
 RowBox[{"f", ">", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Gamma]", " ", "\[Mu]"}], "+", 
         RowBox[{"c", " ", "\[Delta]", " ", "\[Rho]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", "r", " ", "\[Beta]w", " ", "\[Mu]"}], "-", 
         RowBox[{"c", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}], "+", 
            
            RowBox[{
             RowBox[{"(", 
              RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], 
           ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", "r", " ", "\[Beta]ww", " ", "\[Mu]"}], "-", 
         RowBox[{"c", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]ww"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], 
           ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"\[Gamma]", " ", "\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", "r", " ", "\[Mu]"}], "+", 
         RowBox[{"c", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", "r"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "q"}], ")"}]}]}], ")"}], " ", "r", 
          " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Mu]"}], "+", 
         RowBox[{"c", " ", "\[Rho]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "q"}], ")"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]w", " ", 
             "\[Beta]ww"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
               "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}],
               ")"}], " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}], ")"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.84363529057843*^9, {3.843635477072345*^9, 3.843635493949192*^9}, 
   3.84363578263837*^9, 3.843638605102478*^9, 3.843638686457232*^9, {
   3.84364244446355*^9, 3.8436424602175827`*^9}, 3.843643421595892*^9, {
   3.8436436335257177`*^9, 3.843643639268655*^9}, 3.843644574761423*^9, 
   3.8436449152910213`*^9, 3.843895376876894*^9, 3.843901431250834*^9, 
   3.843901618403882*^9, 3.8439016528196497`*^9, {3.844159185908348*^9, 
   3.84415920604001*^9}, 3.844159738623966*^9, 3.844159903935951*^9, 
   3.844160004058758*^9, {3.844160363137599*^9, 3.844160404803392*^9}, {
   3.844160568556292*^9, 3.84416057355564*^9}, {3.8441606050878887`*^9, 
   3.844160616526868*^9}, 3.844160783460086*^9, 3.844160869525992*^9, 
   3.844161113991647*^9, 3.84416263073359*^9, 3.844311561613339*^9, 
   3.844318210963376*^9, 3.844403281609685*^9, {3.84449149559759*^9, 
   3.8444915170725193`*^9}, 3.844852974790628*^9, {3.844856950895796*^9, 
   3.84485698275963*^9}, {3.844857023426229*^9, 3.8448570358595753`*^9}, 
   3.844921892467003*^9, 3.845101431694854*^9, 3.845104779751424*^9, 
   3.845105100871481*^9, 3.8451216129097023`*^9, 3.845373180665481*^9, 
   3.8453759530117083`*^9, 3.845444713063635*^9, 3.845447318256514*^9, 
   3.84547366671583*^9, 3.8455216126896267`*^9, 3.8457184363070087`*^9, 
   3.847535928791198*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"345bddb7-ca34-4282-9458-7ff9f2a63f46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"R0freePar", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Alpha]w", " ", "->", " ", "\[Alpha]"}], ",", " ", 
             RowBox[{"\[Alpha]ww", " ", "->", " ", "\[Alpha]"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Sigma]w", " ", "->", " ", "\[Sigma]"}], ",", " ", 
            RowBox[{"\[Sigma]ww", " ", "->", " ", "\[Sigma]"}]}], "}"}]}], "/.", 
         RowBox[{"fww", "->", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], "/.", 
        RowBox[{"\[CapitalPi]w", "->", " ", 
         RowBox[{"\[CapitalPi]w", "[", 
          RowBox[{"Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]w"}], "]"}]}]}], "/.", 
       RowBox[{"\[CapitalPi]ww", " ", "->", " ", 
        RowBox[{"\[CapitalPi]ww", "[", 
         RowBox[{"Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]ww"}], "]"}]}]}], "/.",
       "func1"}], "/.", 
     RowBox[{"solRes1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", "pFreeCond"}], "//", 
   "FullSimplify"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"condPspreadNL2", " ", "=", " ", 
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"%", " ", ">", " ", "1"}], " ", "&&", " ", 
      RowBox[{"1", ">", "p", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"1", ">", "q", ">", "0"}], " ", "&&", " ", 
      RowBox[{"k", "<", 
       FractionBox[
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Rho]"}], 
        RowBox[{"r", " ", "\[Mu]"}]]}], "&&", 
      RowBox[{"fw", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"r", " ", ">", " ", "d"}], " ", "&&", " ", 
      RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"c", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Beta]w", " ", ">", "0"}], "&&", 
      RowBox[{"\[Beta]ww", ">", "0"}], "&&", " ", 
      RowBox[{"r", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Delta]", " ", ">", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Alpha]", " ", ">=", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Mu]", ">", "0"}], " ", "&&", " ", 
      RowBox[{"\[Rho]", " ", ">", " ", "0"}], " ", "&&", 
      RowBox[{"\[Sigma]", " ", ">=", " ", "0"}], " ", "&&", " ", 
      RowBox[{"\[Epsilon]", " ", ">", " ", "0"}]}], ",", " ", "fw"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"condPspreadNL2", "[", 
   RowBox[{"[", "16", "]"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.8439016293647213`*^9, 3.8439016472867937`*^9}, {
   3.844144860287909*^9, 3.844144926836339*^9}, {3.844145829504759*^9, 
   3.844145841427265*^9}, {3.8443114678088007`*^9, 3.844311518289085*^9}, {
   3.844311563963313*^9, 3.844311565269105*^9}, {3.844311753678437*^9, 
   3.844311770704197*^9}, {3.844312014368142*^9, 3.844312015661592*^9}, 
   3.844312230184087*^9, {3.8449441454812613`*^9, 3.844944146081037*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"c3056278-63a2-4a94-8821-b0ad570013ba"],

Cell[BoxData[
 RowBox[{"fw", ">", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", " ", "\[Mu]"}], "+", 
       RowBox[{"c", " ", "\[Delta]", " ", "\[Rho]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", " ", "r", " ", "\[Beta]w", " ", "\[Mu]"}], "-", 
       RowBox[{"c", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], 
         ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", " ", "r", " ", "\[Beta]ww", " ", "\[Mu]"}], "-", 
       RowBox[{"c", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]ww"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], 
         ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"\[Gamma]", " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", " ", "r", " ", "\[Mu]"}], "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"d", "-", "r"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"k", " ", "r", " ", "\[Beta]w", " ", "\[Beta]ww", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "p", "+", 
          RowBox[{"p", " ", "q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "\[Epsilon]"}], ")"}]}]}], ")"}], " ", 
        "\[Mu]"}], "+", 
       RowBox[{"c", " ", "\[Rho]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "-", "r"}], ")"}], " ", "\[Beta]w", " ", "\[Beta]ww",
            " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "p", "+", 
             RowBox[{"p", " ", "q", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "\[Epsilon]"}], ")"}]}]}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], "-", 
             RowBox[{"p", " ", "\[Beta]ww", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"q", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "\[Epsilon]"}], ")"}]}]}], 
               ")"}]}]}], ")"}], " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8439016411282263`*^9, 3.843901647777516*^9}, 
   3.843902103574679*^9, 3.844144880550056*^9, 3.84414582286812*^9, 
   3.8441591007093363`*^9, {3.844311504565632*^9, 3.844311518641796*^9}, {
   3.8443117516715393`*^9, 3.844311779755492*^9}, 3.844312017149145*^9, 
   3.844312233412777*^9, 3.8443182156474257`*^9, 3.84440329304324*^9, {
   3.84449149619569*^9, 3.844491521776063*^9}, 3.844852979531419*^9, 
   3.84485695150253*^9, 3.844921897157804*^9, 3.8449441514343977`*^9, 
   3.8451014365144167`*^9, 3.845104784549033*^9, 3.845105104088002*^9, 
   3.845121617621766*^9, 3.845373185343145*^9, 3.845375957739703*^9, 
   3.845444717827756*^9, 3.845447322966833*^9, 3.8454736667430067`*^9, 
   3.845521617444193*^9, 3.845718441035844*^9, 3.847535950356778*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"e6cefba2-75e7-4a46-bf30-35420a4aade5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical analysis (non-linear birth function)", "Subtitle",
 CellChangeTimes->{{3.843895513106325*^9, 
  3.843895528016859*^9}},ExpressionUUID->"e7017bb1-fe30-46aa-97ae-\
2c98e4e46b08"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vartRes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"varRes", ",", " ", "vartRes", ",", " ", 
     RowBox[{
      RowBox[{"odesRes", "/.", "func1"}], "/.", "forceInf"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysfunc1", " ", "=", " ", 
   RowBox[{
    RowBox[{"odesRes", "/.", "func1"}], "/.", "forceInf"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8441607239611683`*^9, 3.844160724173842*^9}, {
   3.844163147430377*^9, 3.8441631476879*^9}, {3.844311577943812*^9, 
   3.844311594869894*^9}, 3.84431224081496*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"28d28ec8-de32-4ad9-9c74-76cda442257d"],

Cell[CellGroupData[{

Cell["Disease-free equilibrium", "Section",
 CellChangeTimes->{{3.844160667362113*^9, 
  3.844160673383209*^9}},ExpressionUUID->"f0e5c282-2e11-46de-a972-\
f00c03036fba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEcoNL", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.9"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "2.9"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "3.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "7.5"}], ",", 
     RowBox[{"fww", "->", " ", "7.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"k", " ", "->", " ", "0.26"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8402671771488247`*^9, 3.840267333289815*^9}, 
   3.840267380805736*^9, {3.840268899492694*^9, 3.8402688997230463`*^9}, {
   3.840269290135006*^9, 3.840269290443408*^9}, {3.840269401560028*^9, 
   3.8402694044078083`*^9}, {3.840269815904819*^9, 3.8402698160592947`*^9}, {
   3.840269940759324*^9, 3.8402699465312433`*^9}, {3.840270545548256*^9, 
   3.8402705593353777`*^9}, {3.840270627639761*^9, 3.840270630653143*^9}, 
   3.840271670908229*^9, {3.840271726307644*^9, 3.840271726520396*^9}, {
   3.8402719441150093`*^9, 3.840271944219903*^9}, 3.840514098886499*^9, 
   3.840514141304799*^9, 3.840514337036195*^9, 3.840514568790616*^9, {
   3.840529264639326*^9, 3.840529265210904*^9}, {3.840530167216806*^9, 
   3.840530167937089*^9}, 3.840530380715819*^9, {3.8406138457432957`*^9, 
   3.840613845933887*^9}, {3.8406178356240883`*^9, 3.840617849196773*^9}, 
   3.840618931380859*^9, {3.840619136060405*^9, 3.840619137568012*^9}, {
   3.840619189626096*^9, 3.840619191703432*^9}, {3.840619257151396*^9, 
   3.840619259726961*^9}, {3.840619536171184*^9, 3.8406195663234053`*^9}, {
   3.840619790472558*^9, 3.840619797359726*^9}, {3.8406198454044027`*^9, 
   3.8406198498648157`*^9}, {3.840619918783684*^9, 3.840619950061468*^9}, {
   3.840619991486444*^9, 3.8406199938690567`*^9}, 3.840621766129657*^9, {
   3.8406227514737587`*^9, 3.84062275312122*^9}, {3.843298866820068*^9, 
   3.8432988673104362`*^9}, {3.8435369978205433`*^9, 3.8435370304179*^9}, {
   3.8436412752074623`*^9, 3.8436412904355288`*^9}, {3.843642538211543*^9, 
   3.843642544472919*^9}, {3.843642576428927*^9, 3.843642606604705*^9}, {
   3.843642663886593*^9, 3.84364268045193*^9}, {3.8437100463829403`*^9, 
   3.8437100511995983`*^9}, {3.843895545611094*^9, 3.843895557174583*^9}, {
   3.8439006253707943`*^9, 3.843900625506741*^9}, {3.843900756184051*^9, 
   3.843900783604395*^9}, {3.844316645822714*^9, 3.8443166462644053`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"300e58d3-e14d-4e2d-9f27-d3c732f0b683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"condPfreeStableNL", "/.", "prEcoNL"}]], "Input",
 CellChangeTimes->{{3.843900546742937*^9, 3.843900593790802*^9}, {
  3.843900629902301*^9, 3.843900630190804*^9}, {3.843900760469131*^9, 
  3.843900788850891*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"f7623711-9d69-4443-818d-290917d12b62"],

Cell[BoxData["condPfreeStableNL"], "Output",
 CellChangeTimes->{{3.8439005657201147`*^9, 3.843900594108416*^9}, {
   3.8439006266934357`*^9, 3.843900630383501*^9}, {3.843900758806944*^9, 
   3.843900789275065*^9}, 3.8441423208653917`*^9, 3.84431656106849*^9, {
   3.8443166358986797`*^9, 3.8443166480684*^9}, {3.8443181957042522`*^9, 
   3.844318218075789*^9}, 3.84440329932867*^9, 3.845447323019127*^9, 
   3.8455216174905577`*^9, 3.845718443586688*^9, 3.847535971993937*^9, 
   3.862046359537078*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"12abd884-4ed6-4b0c-953c-0752f3d9bca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initNL", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "2"}], ",", 
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], "==", "0.3"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", 
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], "==", "1"}], ",", " ", 
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsNL", " ", "=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"odesRes", "/.", "func1"}], "/.", "forceInf"}], "/.", 
         "prEcoNL"}], ")"}], " ", "\[Equal]", " ", "0"}], "]"}], ",", " ", 
     "varRes"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndsolNL", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"sys", "/.", "prEcoNL"}], ",", " ", "initNL"}], "]"}], ",", 
     " ", "varRes", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Is", "[", "t", "]"}], ",", " ", 
         RowBox[{"Ds", "[", "t", "]"}]}], "}"}], "/.", "ndsolNL"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Is\>\"", ",", "  ", "\"\<Ds\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Time\>\"", ",", " ", "\"\<Densities of susceptible hosts\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Evaluate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "maxt", "]"}]}], "}"}], "/.", "ndsolNL"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Evaluate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "maxt", "]"}], ",", 
     RowBox[{"W", "[", "maxt", "]"}]}], "}"}], "/.", "ndsolNL"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
         RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
         RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
         RowBox[{"Dww", "[", "t", "]"}], ",", 
         RowBox[{"W", "[", "t", "]"}]}], "}"}], "/.", "ndsolNL"}], "]"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "10"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", 
        " ", "\"\<Dww\>\"", ",", " ", "\"\<W\>\""}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"Thickness", "[", "0.003", "]"}]}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Time\>\"", ",", " ", 
        "\"\<Densities of infected hosts and parasite pool\>\""}], "}"}]}], 
     ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<Diseasefree.jpeg\>\"", ",", "%"}], "]"}], "*)"}]}]}], "Input",\

 CellChangeTimes->{{3.840267355206079*^9, 3.8402673960220337`*^9}, {
   3.840267448765839*^9, 3.8402675713739357`*^9}, {3.840267608373993*^9, 
   3.840267677059222*^9}, 3.840268914998992*^9, {3.840269308443866*^9, 
   3.840269314566875*^9}, {3.84026934468056*^9, 3.840269348918481*^9}, {
   3.840269422079461*^9, 3.840269442681776*^9}, 3.8402694812022457`*^9, {
   3.840269970004361*^9, 3.840269971552166*^9}, {3.840270149298127*^9, 
   3.840270237327553*^9}, {3.840270598509842*^9, 3.840270604595924*^9}, {
   3.840271651721135*^9, 3.840271651866849*^9}, {3.840271778976617*^9, 
   3.840271779238429*^9}, {3.840271859452159*^9, 3.840271860359956*^9}, 
   3.840271963981258*^9, 3.840514098886758*^9, 3.8405141413051043`*^9, 
   3.840514337036592*^9, 3.84051456879116*^9, {3.8405407563158712`*^9, 
   3.8405407599626513`*^9}, {3.8405408401396637`*^9, 3.840540927027614*^9}, {
   3.8406138522960157`*^9, 3.840613861642527*^9}, {3.840617835626295*^9, 
   3.840617849197897*^9}, {3.84061916122434*^9, 3.840619173438177*^9}, {
   3.840619212543065*^9, 3.840619216350124*^9}, {3.840619600868989*^9, 
   3.840619609924817*^9}, {3.840619869003289*^9, 3.8406198919005527`*^9}, 
   3.840621766130748*^9, {3.8435370478131943`*^9, 3.843537048286395*^9}, 
   3.8436425107884607`*^9, {3.843642620055634*^9, 3.8436426522093363`*^9}, {
   3.843644681770894*^9, 3.843644681980153*^9}, {3.843898504580481*^9, 
   3.843898582600473*^9}, {3.8438988676186333`*^9, 3.8438988719337263`*^9}, {
   3.843898909990052*^9, 3.843898937916938*^9}, {3.8439008195263844`*^9, 
   3.843900872284857*^9}, {3.843901277197896*^9, 3.843901318290845*^9}, {
   3.844142330903413*^9, 3.844142494977479*^9}, {3.844142534382329*^9, 
   3.844142638517645*^9}, {3.8441430312881927`*^9, 3.8441430862568293`*^9}, {
   3.862046388561509*^9, 3.862046399152958*^9}, 3.862046431757056*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"cf4b3c6a-9e7c-4ea0-b57d-d5c17b11b214"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"2.4439762158860487`", ",", "0.009731741970169449`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.843900857420382*^9, 3.843900873827882*^9}, {
   3.843901251875211*^9, 3.843901320009776*^9}, 3.844142324676516*^9, 
   3.8441424051079683`*^9, {3.844142436883416*^9, 3.844142496532015*^9}, {
   3.8441425409997387`*^9, 3.844142589275323*^9}, {3.8441426198517017`*^9, 
   3.844142627091413*^9}, 3.844143039267877*^9, 3.844143082365975*^9, 
   3.844316649925981*^9, 3.844318221215713*^9, 3.844403301348157*^9, 
   3.8454473240951853`*^9, 3.845521618556662*^9, 3.845718444660433*^9, 
   3.847535974793995*^9, {3.8620463616085653`*^9, 3.8620464005373163`*^9}, 
   3.862046433000236*^9, 3.864110566813979*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"c9119b4d-d2c7-4386-8886-a27218c2f188"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0.001507631385753738`", ",", "0.00016761335986007362`", ",", 
    "8.299214808228027`*^-6", ",", "1.7290846725442783`*^-8", ",", 
    "8.519188198072075`*^-6"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.843900857420382*^9, 3.843900873827882*^9}, {
   3.843901251875211*^9, 3.843901320009776*^9}, 3.844142324676516*^9, 
   3.8441424051079683`*^9, {3.844142436883416*^9, 3.844142496532015*^9}, {
   3.8441425409997387`*^9, 3.844142589275323*^9}, {3.8441426198517017`*^9, 
   3.844142627091413*^9}, 3.844143039267877*^9, 3.844143082365975*^9, 
   3.844316649925981*^9, 3.844318221215713*^9, 3.844403301348157*^9, 
   3.8454473240951853`*^9, 3.845521618556662*^9, 3.845718444660433*^9, 
   3.847535974793995*^9, {3.8620463616085653`*^9, 3.8620464005373163`*^9}, 
   3.862046433000236*^9, 3.8641105668224063`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"24ccdd89-4bae-4ba4-b6e9-e14b38f44e32"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwd13dcTf8bAPC6l2hP7XG7F6GMCJV4nkpJkiQVGiQq0rKSkLZS0pd2ym2o
tLS0tYj2oijaU9Kkqd+5v3/q9X6d8zrnfJ7PMz5X2sJe/xKJiYkpnPjD+B99
34JF3tL/0MBehY1Lq9xY1UrRMaLYQGOjvcnWYS5c/VDqQaHcAWZhawOmdk6M
LguQWkt5BCcp6n86GtlR7rdl4KrVE1A/ITtzvYMNv3O9+LfcHgxRxQPXx0ZY
0fbgzWt/pcJhWsbNmU5Zj9ltPfGz6lFwIc034eGRdbh4VadryioGNjd0p92+
yYKH659u+tNOB9fDvSpjg2uwdcn62aRUMvCmcI1+4yfhrWrJXb/fpMArwyOG
ZnbMKPpfW+0v9VTYRs9ND2hgQottSP5plQHnk6ibgg6tAmnJpXHWNRMMHb2G
mKX+QVvPaYlZjTdAVsj64s66As6p7AXT7Vlwl3ftJ5elRdAOHmKZjs2G68Pe
02dIiyDuXG4wZZMDSovaYcJ8C1Cmfnvy91IuXJaOCxc89hfWdfbJ/JIqgKbn
cjEvxGaho6zk5vhIAdRt/2/l74UZSEkMq/z5phBEjDiypDKmQddJ13xMvRhe
OoqcnjCZAorx1rRRjhKoiKd821gyCdMH1yyNfC4BjfMX6jVpkxDCWhgybPUO
pg3+BCwxTUDObW2n68JlEOCqSjo3MQ5RY/tFZlzLwPTYsw+rgz/BronPalqj
HF6+ldOInx4FvqiPpKn2CghUi3735fYQLHHlJTuoVMLpql0T5WmDMPAwTm8y
thKMh51aTv0cgDyr+y9+21TBo6ntt4+79kPMt6sa9g1V4LPWZkK2sQ98j58Z
n9j9HhydI/NitvTB2T0KyhNL7+HTpM6ZoxM9oJ4o3Xvt/Ad4LrOJh/VsD8iJ
cPv+qvoAhfatmd9DuuHfv9HP4wHVsNHK0OSl63d4WRPj+FPqE5D4+mkjJV9h
Nix3W/fjT9BhXHmgsKUDNK1q+1sWPoFjyoNRlal2GCf/PV3YWgN7WTYmlx/9
AtDCwZ2OtZDlFrG46v4ZgmOpH1+m1YI/yS7pSlUbKB7UVX7kUwcuv6vKrpm1
gj+75YzrbB0ErdqWmOW1wI+vd1IdLtRDapHthT0bWsDzVoKk8YEGaE3/vNVs
qAmaMpZJMr8bobripUXSi3rgA1Yzzh1NQN8aElOcVgcHNj9T9rFsAp026abA
D7UQOJs849LcBDeFCjtr+Wsgv1OhaXZdM5St1Xh4/cgn6K14l2p3qBkejNT0
ant8BIWnny9ZvG6G93fzQnbwVYOZ83m1rt5m2BH3nDnE8gP4mP+UNBRuAcl8
rZ3dJe/h23bmjqNeLRDD3mz+x6MKHtTIacubt8J8eYFijWEFJL15u/n181ao
vC8rW99RDi1hauRNda3wy7+HkmFeTsTduFhYqQ2OP+ef0bxbBrq6/WHB9m1w
nmPD43DuMri91+4mR2IbCM/ae3HqvYMasucOJv7PULBPeZHnUwnMjnGxuxz9
DM3XjzQH85SAREv48MyDz1C2RVWV2bwYHGIzYofHP0Pp7Y5eX+4iEDzYydf4
4Qu4z3q7Db/NB9x4+bfWyhfIPaPQd2tnPtiwT9VW7GkHxVU+5sXXb6H4K4tX
Xmw7eNCUmfiz82Co7OmFXe3tIC+oyqp5MA+4k8QPpXB2QHLIvouptblgcWv3
32iXDoj2XRS6MpsDj01LWoXedEBScFWdXWAO5B7Wynw63AGqTvuK1srlwHp+
Mxsvg6/wZ0S3+ZxjNqRnPOq03fENPkn8kOWRzoIxvrHH2he+wQ4e61r2r29A
5pb2oS3PvkFTkz8e/+8NxKqwv+xf+AYlt91cTnK9ga6Yq/rlcp3QeaBNYbwh
E0TIdeQY806IuhKgev9pJgR/enz57PtOsIlNj9QQz4QGuV9CivOdcFyl0CT7
YwawBx3/tEG2C2hMlEQNkwzwNOSSaw7qgoQKFN4XkA63+p9MHTH5DiOzhVHa
/GmQpTlJ3/TkO9g5xO2vLkqF38l6BuSK7+Dlrdbz43IqWDvwvi2V+QFNW4oM
vKtew9mVYNe9Mz9Agu3w5NPIFAg5P7Odf3M3vBkKZ840TIHWylPdk8bd0HEB
tzTzp4COn4Baamk3HPwpktH1XzKRZ7UevBo9kDzvS7+XnASHDt41cTPrgdiX
u0v5rydBl53s3t+3e+DW5V/vVA4lgXCL/1BdSg8I6Z9kFv36Cp6G6Rz15ekF
quqT441Sr2BXzbL03629ICrPQ62bTYSGpdTFS+q9UFB45/f62kRgM+dMVb/V
C89nHy9T7iaCx6YGrtXOXqDPJsuNjiQA1ej+8LW5XpDSMIlYU50AZb47yrq4
+mBXwkwYNTEBln8GOhaq9oFgtnjtMasEiJAA7a3n+uCLjdek9tEEUDzxmxp2
ow/uy4R37ZFLgJtZJ9puvuqDmEz1stez8SAwsJo6UNYHs9400V3f4iFrQ6bX
qW99kDfUHu5bFg8Tzjz75Tn74cjHvTUvn8SDFTSHjzv1g7yh2M/ZffHARP9T
2OnfD5pclL4lajyErRHvqonvB6y1Tk3ljoePny5LJn/pB5t3lNGVsTg4L/cY
wn73w9nufKfQr3EwH/jmvM/6Aci6lMdV/zEOthgs0y8pD0C17DUHpuQ4KMuT
rjI4NQCnrscZz4fHgbHIkUF12wHgVs5wdfOPA98fT2WoLwbgsTrPtn0OcUBR
favF+3YADig9DDW7GAf5cV02TE0DEOozW8ZhFAcj1jKpP5gHIbe2Rn8S4sCt
Vqe+XnQQCsM5/1H2xoHwDqeJ4j2DcNCNwtqwLQ60Zop3RV4ahCVLlZJnQnHQ
c7rvpN/9QYjYd10mhSsOnPPXXb8TOgj+uRC1hyUOku/p5xp9GgSHmBizyD90
UOu5/UWzbxDe7N/Ldus3Hb6pRf/duzQIQcvX75aM0MEpoUJ4k8AQZKkH/rXv
owPb+hElge1DkCEeO+3fRQf6Fc5zZM0hyD7gNMRNnBOU63e7TpsNwW+Dep3F
Zjq07DSO7iXmXJC4S8zRejpcCb5X2hQ0BB80VY2XP9KBNEfvfpc8BCcseRZ4
3tMhwugjU0bFEBwbOavgXU6H3YW/pF90DoFTX13N2VI61IjzqwfMDoHB3lrX
gCI6WDxQtHTlHAavykI2iQI6LPaael3dPAzP7Zn2rn9Lh+DDHolnYRiimWnF
x3PpIPsqqfqo8TBEcAjfHM+mQxVrw4ii4zCsC7lm1J9FBxPbGdYtfsOg0jlv
Ik94tkFYVihuGAJEnjz4/IYOj+UP6bAUD8OpwLUFDYQ3Prt4ba5tGPpvyZPF
ifuL//gGDvwahkdzQWeLCRucSc9oZRmBoMMfO9KJ940XtTZVSI1AGHntq+kc
OnhKLky9URyByANGE955dBB/KMn/8uQIPJ9raL+ST4ecfnWFoCsj8EDZ9XF0
IR10NG1OP/AYgdP89nslS+gwkBR4yy5qBDJtmdeOvyPOaew5oaa5IzCnQ9Ni
qaSDgN3XfJ2GEXBE8xO2H+iQ1vTv64HhEbC/BlclauiguWfj0jamUeI8dXxc
uIEOP54fFRcVGQVRzg00sxY6cJ17ZjavPQo9bLHrKjvpkFhS8GD44ihwcHn6
9vbQ4RClO/aL6yjUao0aHBmig93g1v6c9FGwMq9/PjRFhx6zr+vLP42Ch7cp
X/I8HU51+O6oHxgFMz2JmuJVOijWDt8ZFB0DX99fQZ+JfH19ODRmau8YeGr2
u30VjAPJUs33K3pjILTlnqWcVByQ3yTwCPqMAfM9u4/Fu+Lg1rbT+6j0Mci6
ISC7oETUT9wakx0lY5B/0eicu3ocNIRcfKU5MwZ8Be9u3SHqK8xV+tBt859w
t+51y4R7HLD9abro4fITeIP2D3oFxsE9e7dHT54T57aAQP/LEXFgYdHd9qr2
J4g/Dj1Lzo4DOa3oqx37x6HTRecGfTgOyvlFwpV4foEfq06pilk8KAR8LNWQ
/QUiEymhOnbxkMjiPHBS8xfU5ikA/X48PF74svOK6y+wUL99UzI2Hgy7n32I
GPkFJhWe84ZD8TCWwjO7VDYBvLdOSuU9SACTjWUi67smYEexopnQswRojLYH
gb8TEGOzRr8kKQFyghr85Lb/hv1rfM+3tyTAg1uPpU3Df8PjblGDw9uI/i3t
KdOtOAlD4+Hf2IYS4aPK0533NSaBmhytyb+SCN7GL/ZLEJ3Gefd6RWOBV0AK
yj9y7uokbJ4t5wtTfwWL/8at2qMnAZgHoqbjX8HPrtNJjaQpcNjxxkCWmDcp
8xaZdtxT4DPbvYc1MAmsBRzyOcWnYPZJrtsmYj4NHPP7eGzvFFxL6vgr0kPM
p8LSkWqrKZCecL33Ry8Z6sJktpbVTYFaFkU3/lAK+OUoyJt/nQK2/sP3XU1T
QKtJVenf4BS4ZZ3rfO6aAlXrTI6qrE4BfD8697goBYpvBdnky08DuiiHBKu8
hjSDheTMkGlwOMbzRvZYKgTy1G57eX4G2DcPfVWNSoeC/RK5unYzMO6D0qTq
dBgws4fluzOgoGYqIzydDgfS+A2MQmfgN6fNN82jGTBy1OQeZ8MMSGxuW1ew
lAHqHr8a7xyYhX/2j9ri8jNhfo77pr7gHGR9VzoxrZcFNAmL1VXaHEhexT08
tlmgezjnUZr8HFQoPg8098mChGDjF+uPz4HpuXPh/5Vmgf7Ol9WlHnNwUi7P
3WhnNqRZ7xaVnZqD985uhR6iOWDRafCOXPcHzAIONG4XyQO2yN5rjl//QEJ3
V9Bp5TzIOmsn3j30B/q2YFnOuTwgf/O5U8j8F+5E+DqIxuRBfEfhHsf9f2Fm
7NFLvy1vYegzJekH/S9s7D4Tr6yZD1eaxoMK7syDbKZW9Pv0QuALugMyPvMg
Vux5xaK9EApPsEw8ezZP9J3vAcBUBOyNUsccMubhxcICuVi/CFLr9dfKDM4D
9f7Dwx8Wi2CiJv/OM70FkN/YKH7JqAQc33ta2MssgntwUOc9ahlIDmiy/Nmz
CPcX6nJuKpVBLYk1xRUXwdefeSJArww2YcDUozOLsHJQaj3lQRl8LXzuFu+/
CK9M/2Y2fC8D1czEF19/L4LqWDr/zZflwBv58Zt6/hIEr9lX1qtWCaUFfvdr
qpbAYNardptZJVzt0KGebF6CDMP80rA7lfB+Q7ON2dgS7Bp2mu7PrIQ7QV/n
ncWXoXWbWNIB6Sro9RoTTHdbBsrAyCAv63t448BxSvjoCmzZbh9x5c8HqIvg
v5NmuAJv9LMcDUSqYahKNEbNcgVSnKQd7FWqQVRk60/bByvgfUIpU8mjGjzL
NTzKc1dg6sCR7xv5P4Ih34PsK9R/sDNMnt1D5RMsZk/xlyz9gzKXsNsNebUg
8GNeSZ91FcZTtm1S66mFHeuZzg8LrkJI98tHv1jr4KIJVyrv7lUwjIbj46Z1
ULdG9vBl61X4clY5/Mn6enhx2vIG9+dVOHZBRSDKugFe3r06tsuICXdtLgl4
mdIEu8pY531MmVDGUc/hSnkTlK1JWtt9kQl3N5s81O1ogp6AAUqAAxOWqlV5
WbM0g2SsqdHoIybsOpXrOHSxGSKqTlS9LGbCQO+dmuIbWyCYU+EFH5UZdY0y
P5IKW4Gq3/LaZgszsqkd0jvb1gpvQhwKynYw4zafPS8aJ1qhSSqtze4AM8qG
u3Txb2wDrt2b2WsNmDFexpdjbVAb+BkKO3v4MGNYXdaVyGufwT1m+eTsODPu
+5meLYTtoLcr31F2hngf/btkjmk7SJZff2qxwIwaPtJG9nfbobBvrKlpLQnz
H0heVnvbDtObvp5IkyShXJqlm8muDrBIzT1+WY+E/Fw/Cmy3fAXVArujHdkk
dNm+Kcd4VycwtfZgsQsZH+z2SbR/2Q2eo6UvXR6SUWerkpN2TTewMkWTlHzJ
KJbnsnJsphv4tp+pyn1OXPej03upPbDJp/lIRiYZR1V4JVVv9YD2gQpd+hAZ
aRo7bGMovfBfXJyJr/4arDaSVa706IPNNy47G2xbi0HR94d+PSR+/8+FGrKX
sGDDVc+g+Pc/QXvwyr1gx/VY3XN6z4PQKdAdCJKVlGTDnjqL0IoDczBWaeH2
MY0dq6uPpRqYz4PU044rgTnsON1yfZZqOw8GZrqnDYrYkfV94tNR53konVfa
1vORHd9s9k4zD56H4O28bX/72TEvbD19omoeDoS+k5ER5UCXtP67wVsW4PEV
8UYvbw5UuDcn0Di6ADt4v0iom3Pi56fj+Q6nlmAoYMj9+SVOzGbZeNHVdAmi
2f4OD1/lRKM+03I3qyXgWCOc9diZE719QqOv312CsT9nNL885cQrUWd+M8ct
QULXdzubKk7UPrytpnxyCcSTBt892cqFrjanvrd7LwMbzF3omuHC2UAV5s/R
K+CsumV93iLhLv+l2sQVGFI/l/6EmRuR5T/WoowVqNAqX1Tj5kaZ+3ZOD8tX
wEU/4L/kbdz4k613OmNgBX5e2vT+1gVu5BcwCArd+g/qHp/ewtvIjZyR+6hZ
af/gyK+zf6mnebD0E+WpbOwqvBDwaH1gzIMnW1sE5F6twuyB1xld53iQOdJJ
ZnP6KsT6LVmFWPBgbM9NznXFq7AoE9XB6sCDVr3PrF3bVyHV4nvBpB8PyluP
fY9iYUKeDnPX0jIelNON7OVRZsKOCkvms3K8+PVe5CPTMCacVP0mem8nL0qp
/YiciWDCdeUnFGJ38+IRLg9rn2gm3PdO2WpIkReVWy8rJtGZ8FkRT72TBi+e
oVcONaQy4Ymc4jB/M17U/LlPKquMCT8kCOwqCeLFxjTDH11DTJjrW2VGmePF
jOKIws3bmTFJu1bYZ54XdTiX91zeyYwRHC0tv5Z4cU/kglecPDO6BXVrFpH4
cP9rvmKhfcyoE7a4w5CHD++xjCcNHWLGvle7Vv1l+fDx3V0aFD1m5KqOivl7
gQ/lmTpP8zgy4+W1N3saGvhwne7rZJ00ZhSV+tS+1MyHHOG+tjPpzNigKNG4
5TPxvDsLuWGZRJ3bvi9x7+TD3hnOvh/ZzMjSuiFy3wgfhtlrvj9TyIwJsXmn
XzDzY3CFfTdbNTMOHJivuabAjwnbnxtc7GbGi053czki+JF1vuODPAcJ9+3+
kbs1mh+XvGg37nGSkG0a8zRj+fFqmhLzRy4SZjqyvHVL5MeAD3OlZ3hJuOzw
NH82ix+3RxQN2AuSMMT+VVFXLT/ab7ufY0Uh4Sfb1vLUFX5MNKrd9XgPCXda
yTboXBDADZcXRboMSfjDRso+zVIAG/tLP60YkfCxLT8Pl7UA6qn8viJ5hoSj
jksnG+0E8FV2upfJORLGudZ+PukqgFl7rZTqzEkoFHz1u2GoAJ6jJt13sSbh
avHr8fP1AvjCnnxG5A4JG/nk2G8qbcBmKyOOZ6EkPHTt2mikygb0cGo9fiWM
hOnV6dUVsAFjuqK+QDgJA13lPXk0N+CnZ4llIxEk1Bnat/JafwNOLbuu3/2C
hDUFqr/7rm7AhnGHP/R4Er4/b9Sq92IDrow3FpHekLAo3T1SjiyIF89U536r
JiGLzmnRUBZB1LvSvz7kIwlPjsqEM7MJog93Z7reJxIO0+pDvvAI4g/P6bnK
GqLPhgsFu0kK4h2JDnd6PQmveqT6tikJorPwji3YSkIx4y83XR0E8WC0BRfp
BwnvMm/Tq/suiJqHR7vKpkg4dJi9Y3OvIIJy4B/9aRLq+Y6bPxwQxEULtoAB
whu5M+z3/RTEcH6X3SyzJKwTV3gSOy+IRRdabdX/kFBS8VDDDX4h4v5y9sRF
ElbY6etIHBVCpTMK4txkMrJ1uWjZ5QhhZMqWIF8+Mu67ncz55K0Qagd88J0j
fIGvoyWjUAg5Cpc2W/CTMV9rr+lUmRB6pVieVhYg4+Xc34436oXQZbbEfWgD
GcsDLSNdhoRw907DiztEyOisqjvhLSyM+5+1HLwvRcbBROlnMa7CaCp5Jme7
LBnHPXsXyG7CGNf6syqA8LTFS3NrD2HkDol98Iswk5S0rLyfMMprpMy+liOj
aCiloiJUGJ+dbxvcuIOMej5Sk4NZwvjyPGXrOnkyFltJ6MiNCuMKm8vBJ/vI
+GyLyJqC0yI4eFF2XQmS0cRs86t+YxGsY3auWqNKxo3P9mhzmYig8aMtmjqE
c1aPB120EMEuOZfQb4TbvriLc9mLIFeK6u1ZNTLye40rXPQVwdZYB0MJDTIG
9767xFkkguk1fQOHj5IxKOJy9QWKKJGnJJk5PTLevuV+3ZUmimJLYkd2nCSj
mf4LqdDNoph+JFnRirAc25fbdXKi2LySE9RB+NMdjS37lUTxgP0b4QJ9MpLO
bHzEoS+KmybVkh0NyHhTqE/7rYco5iv+aio3IuPZZ6YNHMOiqDSSHjJoSkbx
bDaxq2OiyKmqJSVsRsbu5rdWn36JIm+t3F1twpbcfMzes6L4nO1WWjphO78P
e1aZxfB9bfXqDXMyurvtDJ8SF8M1rX4uC+fJmGzLbPlFXwxXLmtV9F0k4/zh
hIWYUjG8/HXk2CEbMroWxXhUlYshq/nCOkvCTLsjOEerxLCAwzP+EeF1Uk+k
d9eK4YvnVx+0ERZccD5a1S6Gm08dfGd9hYx70nTCRybFUGNbkav/VeJ7Nswq
ytPEMYL5aWThNTL2D6o5V/iII/e5e1pVjmRUi2mgb/MXxzmW7baDhGONz9YH
B4rj87UujixORHxrHakXn4sjW7WRtBbhb5mxdeQ4cfySWCpcQ7jl7j+KRqk4
2g59d/l4nYwVvIWfqmfF0dy15E3GTTLSD8qL1V+QwEIREmn7HeK6LpvHkqUE
mpr+8tUg3GfeP7bVWgJp40cWTQnT3J8XettJEPMxICqQcPyHhTN4VwILpOV7
JwgnnKgIy34mgU1+zndeE+eqpAunBCOqJbDFutxogysZ07xu8lptl8TtHELs
GfeJelAxdffaJYm9fP6aFYTlZg/PxO2RxGT3XofPhFMsBD73KEnics+l4CXC
SZAddlZTEpUcJdmOPCDevzAppWsuifHx3798IxxxzXbH3qeSWHWXTfmPGxGP
jQYxp55JopGxnM064lwn0nWAxylUEgUKs3yFCYdps0+nR0tioJ5EuDLh5zIp
uVtSJFEiIpPpPuGg3mEV8UpJvPVWbpbZnYw+py8eI89JIodiYt4/wvQTXSaX
5iXRt6tPn9uDqMejp+2qlyTxi6nxDynC0wePPPUnSaEr18ZKJGyyWbadn0cK
f9Xlv39IePffaYuNslLI1kovZPIk448wdxeNC1JI2ZRbOE14IXjJ/5WlFH6c
XzVk9iKjQMCNaFZrKZy9wD/ATfjow8tl9XZSKBZS2SRHOMdGm8XQVQpjJ0Lm
LhH2U+YLvhwqhduSbtz+THhv18tkn3opNO3iTEv2JiPPDuv5jCYpHDPueZFL
ePzBjiMdrVJ4h5riWU44nlY0sOWbFKbd0JD7SljgaptUzZAUDqz4jK/zIeOi
K/kYCxMFFYfjFC8S/sq+r1xLhIJ3zqko8xLn5g8K4SNdohT8Tw6LxAjnmC5z
O4pTkJtdTX4z4aCMCrNwKQoeem62rExY69SJ5dFNFJy70MxtSTg/wnq//24K
Tuw6uzuHcNjWyLT6YxQcPbU/UucRGWdnNBM8jlNQNpj0xJDwidLpKKUTFPxb
sXDrPGGWU9qPE/QpeC/qCe0G4ZuuC1funaGg41P9yQjC+o1GW7ZbUTAqcMp8
iDDHTYG4x+4ULP6o33rDj4zWUBah5knByxHWpvcIV7LaBs97UfDL58IuL8Iu
LyofWj6iYLbM3qIQwqPVTudVgiho03V+/i3hD6LNEuPRxHqDT7jME35QFhB2
rID4HhuxVkd/Mo59L3u2UEjB43+5p50JGy7NBL0qpqDBnifr3AjL7Tv7iFxG
wfdVRwUDCXe83uxS9IGCljnXK5MJ7w59d062jYK6xwotugkPXZuSZP9NwYH9
K73qj8l40n+jWMEkBZdArfso4eIkIyGraQpu1R1sPUH4v/4S7so5Cjaqmced
I4xn/JjuLlNwqDOl04lwxGFa3xirNC5JtOXFED4udjqhZqM0Sl1ZpzZDOGxg
R9m5zdIYw+ra+5fwQNr6znEZaaxu5nJZJuyKxTzcstJoczY2ZG0AGVMv0VxP
yUujbvmve0KE2TKn9LsOSmOs71pWZcLVhwOZJgylMZWjY6cLYT4ua7EHxtLo
d+TR0j3CZu2q+3jOSmOEaV/ZQ8J/bOau7jaVRo3JSMVHhDc/MWm/dVEaL7lH
doUS9vy6LX3VXhrbJ9QWswmr2lWf430kjcNLv14NE17sGNWs8pPG/77bT40R
zlHn2H37MfG+7dwKE4zniZxc//2JND5PyY+fJcxR9S0nKUQafwgrKTAHEvsh
MsGJ8dLIUrXKLUI42JNnYTpBGkvSvH6JET72e/dAwitpLNS9XiVJuLTqdiH7
ayI+WmFmGwnH2zNbtb+RRr16v8M7CTu8Fyize0esj/zjmzrhbbv2v5Yul8aU
1Vk9TcL9EWdC2iqk0U6joEyLsKHDC1vlD9Jo8ehswHHCKmJbRFjqpVFo+man
IeH1jgecor9JYyWU6VoTrug0NdXrksYDfgkXrhC+q+mmRf5B7J//XTtbwhNi
7yVteqVRPpPtlgPhtg+6tQojxHWJTQedCceIW2ysm5PGtVPx6d6ElffI7rD4
K42nslI1fBn3H53dPz8vje+N6e2PGO+/7X1s47I0ctZdHH/MWF9zipMriYpL
j0O+BhNmG7nuyreGinvzLbWeMeLxT8U7aS0VPfOUsp4z4ivbGN62noomcWtu
hxFG75kyOW4qlt6/+T6a8Leo4poKHio6eTRzxBC+ke3VZsxHxYpB3ROxhJN6
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
Q46cl+80CZfObF5YXaVhvtd6K3XC/wOSmANl
              "]]}, 
            Annotation[#, "Charting`Private`Tag$6614#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
g8aGYp6hI1Qomt2zvLkpjiT3N0qKE1T4H39Wc/Y=
              "]]}, 
            Annotation[#, "Charting`Private`Tag$6614#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox["\"Densities of susceptible hosts\"", TraditionalForm], 
            None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 
           Thickness[0.003]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0., 10.}, {0., 5.}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Is\"", "\"Ds\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
DfZ6
              "]]}, Annotation[#, "Charting`Private`Tag$6880#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$6880#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
+r8=
              "]]}, Annotation[#, "Charting`Private`Tag$6880#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJwVV3c4Fm4Xtne89ubllU2JX0n1nEdSkig7yY7MECWpRMsqM5JNheyIkKzs
FSqzlC3rtVf5+v55nutc97nOfZ9z/rivI2ZzVf8yFQUFRd6/5/9/4h0bOiW7
ELRsyhNDQbEI9T1EHROiI/xMhAUpsUXYbagKJBJvwtmEPJWzeBFYI98VMPUF
QETiKXh4aRESq8NEaYlBwK8WljfpswjyC3ZPdh2ewuJ618L9yEUYZk36u/Mt
EgaMG7TdsxfB5Zi367roczgbDt+9vizC296RjBWNBEhaCTmWO7UIW846Q2SH
ZJDZZNjrubUIKZRDQeuaqWBRKvSpi4kMJ9oj9q59SwPdwmLHL/xkmIo7VbPi
mAEbunyxIVJkCLX7Y768/RLMXZTY/iqTYf/+txvksNegXcjQfxDI0LN9JXpR
NAsEnyuZwGkyXG8U2b9QmA0Kq+7niPpkEIjqbZ3TyAHHs9G0vy6Qocoi2GH2
Sy70xlyXD7Uig40spv7tkA/5R7cIkvZkoNr27VzxKwAWmosh75zI0DtiJLyi
WQjh2YrEE25keNWw33mZtQg+3Vtf7XUng08O8/ulb0UwIty85OZJBu3ICbql
lLfAVCtWxHuNDEI+NYZkx2IQ2pBN7v2Hz19KSFs8UAKTsjG/sz3IUK1xY3Fh
uwTey4+8TL5KhkgZfbRQ/w5kGmYLS13IYMemEDofVgr/UZ4aWr9ChoOr9ANz
xmVgmT7XYmdHBvrBX1Jzou+hbfGPMLUlGfqqP3jPTr2H9tIc82+mZMh+FVf3
u7AcGpOcd8bPk8Ev9Br7b98K+Nkp5a6sTQZdT13LGY1K+GbmIlivTgaiqUzu
NMsHeObQfDFBlQxLx2i2p758gAsuBaHVimR4xlj+bNLhIzgpaO75y0eG4hva
ntf4qsE4zHFXdA8ZEmYO8S/7VUNvZJpEMgUZ3Lo4HJY0a0Cgqvy/hvFF4Eho
oiJ/q4XMyYi9+7IWYZv1XZb70TpY1bPyKIpbhLF76ecWU+rAqWucsuTRIrxz
uJO04FgPRodkc7XsFsFMWUVtfvsTPDA+/kGYbxFSW5I9fos2g/WIC/Pm4Dys
xJXI/ghthku+nioD2fNw0qF1tHuzGfo09zoSb87DLPW6UXlPC3wcC2r5yzkP
qsd01YIetUFlhlrigsYcdOXvUEktdIKA6s9Qu6jfcLdFXlvJsgfkAoRiJ4Wm
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
zd3df/vVN/X+Ea6P/gcqTcxN
              "]]}, 
            Annotation[#, "Charting`Private`Tag$6880#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
Fb+IWwcUdP+i/Q9VNpRn
              "]]}, 
            Annotation[#, "Charting`Private`Tag$6880#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Densities of infected hosts and parasite pool\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> 
         Directive[
           GrayLevel[0], 
           Thickness[0.003]], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0., 10.}, {0., 10.}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\"", "\"W\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.843900857420382*^9, 3.843900873827882*^9}, {
   3.843901251875211*^9, 3.843901320009776*^9}, 3.844142324676516*^9, 
   3.8441424051079683`*^9, {3.844142436883416*^9, 3.844142496532015*^9}, {
   3.8441425409997387`*^9, 3.844142589275323*^9}, {3.8441426198517017`*^9, 
   3.844142627091413*^9}, 3.844143039267877*^9, 3.844143082365975*^9, 
   3.844316649925981*^9, 3.844318221215713*^9, 3.844403301348157*^9, 
   3.8454473240951853`*^9, 3.845521618556662*^9, 3.845718444660433*^9, 
   3.847535974793995*^9, {3.8620463616085653`*^9, 3.8620464005373163`*^9}, 
   3.862046433000236*^9, 3.864110566961244*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"c268bc3f-642b-4038-9e53-001d547b98d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solsNL", "[", 
  RowBox[{"[", "18", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8443173073944387`*^9, 3.8443173213640757`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"c630efda-91f1-4925-ab44-eaf0d07bf68d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Is", "\[Rule]", "2.3214285714285547`"}], ",", 
   RowBox[{"Iw", "\[Rule]", "0"}], ",", 
   RowBox[{"Iww", "\[Rule]", "0"}], ",", 
   RowBox[{"Ds", "\[Rule]", "0.07589285714286637`"}], ",", 
   RowBox[{"Dw", "\[Rule]", "0"}], ",", 
   RowBox[{"Dww", "\[Rule]", "0"}], ",", 
   RowBox[{"W", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8443173129342422`*^9, 3.844317321869863*^9}, 
   3.845447324331133*^9, 3.845521618838031*^9, 3.845718444947085*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"f9357243-df77-41c7-82b7-934203b5225d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{"Jmat", "/.", "prEcoNL"}], "/.", 
   RowBox[{"solsNL", "[", 
    RowBox[{"[", "18", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8443172943730793`*^9, 3.8443173511804657`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ebf22f9d-830a-4484-b095-1f51fb6e0b54"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "7.337267247878518`"}], ",", 
   RowBox[{"-", "4.493947672078978`"}], ",", 
   RowBox[{"-", "3.8999999999999995`"}], ",", 
   RowBox[{"-", "1.2171064660110398`"}], ",", 
   RowBox[{"-", "1.1049107142857395`"}], ",", 
   RowBox[{"-", "0.8058386514710587`"}], ",", 
   RowBox[{"-", "0.29182210541754905`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.844317296349699*^9, {3.844317344722007*^9, 3.844317351600143*^9}, 
   3.845447324353086*^9, 3.845521618851891*^9, 3.845718444959641*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"df65b954-4fe6-455a-95be-23ccf3112a15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Disease-stable equilibrium", "Section",
 CellChangeTimes->{{3.844160702445875*^9, 
  3.844160706335455*^9}},ExpressionUUID->"993f772a-052f-4f38-971e-\
9b96c86b3ab0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEcoDSNL", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.9"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "2.9"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "3.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "49"}], ",", " ", 
     RowBox[{"fww", "->", " ", 
      RowBox[{"49", "*", "8.51"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"k", " ", "->", " ", "0.26"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844160764113765*^9, 3.844160771460964*^9}, {
  3.8441610019821777`*^9, 3.844161005208396*^9}, {3.844161075127359*^9, 
  3.8441610885527687`*^9}, {3.8448569246101093`*^9, 3.844856933224225*^9}, {
  3.844947125325164*^9, 3.844947126322548*^9}, {3.845116873996756*^9, 
  3.845116935110561*^9}, {3.845117511045869*^9, 3.845117521614945*^9}, {
  3.845117840356357*^9, 3.845117843241802*^9}, {3.8451207710800037`*^9, 
  3.84512077262337*^9}, {3.84512122191115*^9, 3.8451212220812817`*^9}, {
  3.8451213331242113`*^9, 3.845121337120757*^9}, {3.845374460273302*^9, 
  3.8453744716809807`*^9}, {3.8453750426134357`*^9, 3.845375045715887*^9}, {
  3.845531214027787*^9, 3.845531223369493*^9}, {3.845531915329802*^9, 
  3.8455319165543957`*^9}, {3.845532255018033*^9, 3.845532260403513*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"417bf179-ca33-473b-8b4c-edccff1e5be0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"condPspreadNL", "/.", "prEcoDSNL"}], "/.", 
   RowBox[{"\[Alpha]", "->", " ", "0"}]}], "/.", 
  RowBox[{"\[Sigma]", " ", "->", " ", "0"}]}]], "Input",
 CellChangeTimes->{{3.844160777242807*^9, 3.844160818147517*^9}, {
  3.844161035459774*^9, 3.844161056866715*^9}, {3.844161122804327*^9, 
  3.844161123579296*^9}, {3.844856940049402*^9, 3.844856957477118*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"e4e5dba9-e3a0-4017-8dd0-28ddd2fb0011"],

Cell[BoxData[
 RowBox[{"f", ">", "39.04766826563729`"}]], "Output",
 CellChangeTimes->{{3.844160797425584*^9, 3.844160819032701*^9}, 
   3.8441609762838306`*^9, {3.8441610071127863`*^9, 3.844161057099432*^9}, {
   3.844161090983034*^9, 3.8441611241013393`*^9}, 3.844161695489584*^9, 
   3.8441617646775227`*^9, 3.844315486857139*^9, 3.844317378227684*^9, 
   3.844318227603465*^9, {3.84433066670152*^9, 3.844330689175963*^9}, 
   3.844403309971023*^9, 3.844491525163116*^9, {3.844856935688704*^9, 
   3.844856957892441*^9}, 3.844857065943933*^9, 3.8449471294501257`*^9, {
   3.845116879716399*^9, 3.845116936763774*^9}, 3.845117524030343*^9, 
   3.8451178446987467`*^9, 3.845120774006506*^9, 3.845121223632065*^9, 
   3.845374473802813*^9, 3.845375049812467*^9, 3.845444720254524*^9, 
   3.8454473243855133`*^9, 3.845473673457818*^9, {3.845521618885685*^9, 
   3.8455216251065702`*^9}, 3.8455312248012867`*^9, 3.845531919214238*^9, 
   3.845532262501162*^9, 3.8457184513275223`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"efbb2da1-17cb-4282-8209-ce514a9e4edd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"condsimplifyNL", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]w", "->", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "->", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Sigma]w", "->", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]ww", "->", " ", "\[Sigma]"}]}], "}"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.844161503960465*^9, 3.844161513067196*^9}, 
   3.8448570859103727`*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"738ad165-0f09-4b98-b7eb-75a3c7af2c19"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "500000000"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imsize", " ", "=", " ", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "17.6"}], ",", " ", 
    RowBox[{
     RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.2"}], ",", 
    RowBox[{
     RowBox[{"Iww", "[", "0", "]"}], "==", "0.32"}], ",", " ", 
    RowBox[{
     RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "3.4"}], ",", " ", 
    RowBox[{
     RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", 
    RowBox[{
     RowBox[{"Dww", "[", "0", "]"}], "==", "10.1"}], ",", " ", 
    RowBox[{
     RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ndsolDS", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sys", "/.", "condsimplifyNL"}], "/.", "prEcoDSNL"}], ",", 
       " ", "%"}], "]"}], ",", " ", "varRes", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"AccuracyGoal", "\[Rule]", "Infinity"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsDS", " ", "=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"odesRes", "/.", "condsimplifyNL"}], "/.", "func1"}], "/.",
           "forceInf"}], "/.", "prEcoDSNL"}], ")"}], " ", "\[Equal]", " ", 
       "0"}], "]"}], ",", " ", "varRes"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Is", "[", "t", "]"}], ",", " ", 
         RowBox[{"Ds", "[", "t", "]"}]}], "}"}], "/.", "ndsolDS"}], "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Is\>\"", ",", "  ", "\"\<Ds\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "True", ",", " ", "True", ",", " ", "False", ",", " ", "False"}], 
       "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Time\>\"", ",", " ", "\"\<Densities of susceptible hosts\>\""}], 
       "}"}]}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
         RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
         RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
         RowBox[{"Dww", "[", "t", "]"}], ",", 
         RowBox[{"W", "[", "t", "]"}]}], "}"}], "/.", "ndsolDS"}], "]"}], ",",
      " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", 
        " ", "\"\<Dww\>\"", ",", " ", "\"\<W\>\""}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "True", ",", " ", "True", ",", " ", "False", ",", " ", "False"}], 
       "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Time\>\"", ",", " ", 
        "\"\<Densities of infected hosts and parasite pool\>\""}], "}"}]}], 
     ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"p1", ",", " ", "p2"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Evaluate", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Is", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "maxt", "]"}], ",", 
     RowBox[{"Ds", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "maxt", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "maxt", "]"}], ",", 
     RowBox[{"W", "[", "maxt", "]"}]}], "}"}], "/.", "ndsolDS"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8441611463194513`*^9, 3.844161191544383*^9}, {
   3.8441613518854017`*^9, 3.844161395338008*^9}, {3.8441615005391283`*^9, 
   3.844161523924165*^9}, {3.844161716721589*^9, 3.844161729544368*^9}, 
   3.844161770758308*^9, {3.844162289207279*^9, 3.844162325004945*^9}, {
   3.844162363666583*^9, 3.844162364131711*^9}, {3.844162403081265*^9, 
   3.844162424049741*^9}, {3.844162470027514*^9, 3.8441624721473618`*^9}, {
   3.844162518020471*^9, 3.844162553612866*^9}, {3.8441629778934717`*^9, 
   3.8441630116734867`*^9}, {3.844163192512611*^9, 3.844163210011551*^9}, {
   3.844316576733032*^9, 3.844316591626978*^9}, {3.844317474456936*^9, 
   3.844317547086192*^9}, 3.844317583277916*^9, {3.844317644331766*^9, 
   3.844318043637494*^9}, {3.844318491224901*^9, 3.8443187394622183`*^9}, {
   3.844318772705359*^9, 3.844318861666223*^9}, {3.8443188980225782`*^9, 
   3.84431895925926*^9}, {3.844319007952931*^9, 3.844319042111453*^9}, {
   3.844320010353797*^9, 3.844320011298567*^9}, {3.8443201520339317`*^9, 
   3.8443204435746517`*^9}, {3.844320685069087*^9, 3.844320749146976*^9}, {
   3.844324388660061*^9, 3.8443246323239098`*^9}, {3.844324803648044*^9, 
   3.844324863233645*^9}, 3.8443297917041187`*^9, {3.844330470132835*^9, 
   3.844330552119728*^9}, {3.844330588598415*^9, 3.844330654225556*^9}, {
   3.844330704567185*^9, 3.844330704964944*^9}, {3.844400409499887*^9, 
   3.844400424299177*^9}, {3.844403346079208*^9, 3.844403383461439*^9}, {
   3.844403491386064*^9, 3.844403504417632*^9}, {3.8444035353920803`*^9, 
   3.8444035612143*^9}, {3.844403774837641*^9, 3.844403836545272*^9}, {
   3.844405632519621*^9, 3.84440568585632*^9}, {3.844413949229067*^9, 
   3.844413950389102*^9}, {3.844416631002366*^9, 3.844416775817006*^9}, {
   3.8444168117945147`*^9, 3.844416876601561*^9}, {3.844417098599452*^9, 
   3.844417098725391*^9}, {3.844417342151967*^9, 3.844417383143838*^9}, {
   3.844417878614901*^9, 3.8444178805628347`*^9}, {3.844417945119382*^9, 
   3.8444179462899427`*^9}, {3.8444238300717173`*^9, 3.844423895665655*^9}, {
   3.844424138981144*^9, 3.8444241574376907`*^9}, {3.844424510159299*^9, 
   3.844424542209465*^9}, {3.844424793757825*^9, 3.844424794133328*^9}, {
   3.844424834673911*^9, 3.844424897386764*^9}, 3.844424932365266*^9, {
   3.8444251130709457`*^9, 3.8444251134420633`*^9}, {3.844490359625517*^9, 
   3.8444903597730637`*^9}, {3.844490412560211*^9, 3.84449043734858*^9}, {
   3.844490494422011*^9, 3.844490553199869*^9}, {3.844490699698154*^9, 
   3.844490700065099*^9}, {3.8444907502008953`*^9, 3.8444907589117603`*^9}, {
   3.8444907916043053`*^9, 3.844490819569025*^9}, {3.844490865357141*^9, 
   3.844490897175551*^9}, {3.844490936418065*^9, 3.844491001176558*^9}, {
   3.844491033299254*^9, 3.8444910336424427`*^9}, {3.844491095329081*^9, 
   3.844491095801783*^9}, {3.8444911687080793`*^9, 3.8444911699476433`*^9}, {
   3.844491357188716*^9, 3.844491361387621*^9}, {3.844491401518368*^9, 
   3.844491429489545*^9}, {3.844491536363187*^9, 3.844491536843882*^9}, {
   3.8448571314410686`*^9, 3.844857136567432*^9}, {3.844857498055702*^9, 
   3.844857499054665*^9}, {3.844857542513061*^9, 3.844857544092349*^9}, {
   3.844947142876577*^9, 3.8449471439460783`*^9}, 3.845117702825713*^9, {
   3.845117738746806*^9, 3.8451177698142977`*^9}, {3.8451206860904093`*^9, 
   3.8451206870443773`*^9}, {3.8455313456723948`*^9, 3.845531345843053*^9}, {
   3.845531453078614*^9, 3.845531453444487*^9}, 3.8455318744638577`*^9, {
   3.845532727367345*^9, 3.845532728380493*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"b2b9a67e-9625-45ac-aa4a-e6873cf55152"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF03tM01cUB3BSKopGa6QBBTZBO0VLkTQprjx7aAKiFAflUR6iVEScZAhi
ilJE8VG0RARmFAJplRUElJe0/io0AQVfQFqJLhhwTMUlDF0gmYlRDGpyPP3j
l18++f3uveee+73eyty4fSwHB4f4r8+3t/uMdG9xNk+y/bRugjPwZ9iQX1Ob
imHBjuYJvuuK+2HS7BsvYphVEIv2Ei+ayuB6QgJ6gb3lSCCzDpLQE880RTKu
L8Sjd8lnJf6MEGLQv2vOskQcEc0/3OM5IM7aCtvQgbyoSCk3mFz+0baBz4TD
TvSvQ5sEodxoSEPzYvprfJg42IsWjm94PC2TkyXZ5R9bXsshE51WmpQq4CTA
PnS16Z2nMCsJstCste76IG4a7EfPqsTyjYySxk/37RgdfJEDieg5drtP18nD
EIfOUehKc0MLIRL9T2vFhO8nNYSgXUu3RA5VFJMjFNbOA7zjEIw2sDmaRlkJ
BKK7/B6sXmk7AT+j8zQR986tOwUB6M//X30a7lsGYrSmMtPh38lyCEePhhQU
eOVUUD2c91DAn78I0egBZarWn1cJMnShreCaKNruV61NtrC6Sjo/k3K5ID64
Cn753k/b2Bu1upr27yNtyBx8conO/5NLXf+h5Ctkmfoh38VUS77qoq62OdXb
/1+S/nz2nI4881jsyp7TU95S+8b9IOAa9T9aBve1Rxoof/MGyVSs7g9QoDsE
SXlRrwzk9ScXn+nlNEEyutbRujgj8Tq56ocUZ5fLzeQox5JKyd0WMnt1T5nO
6Qb5+IeLTsdENyEFffTQZkdlehukolVu478V6dsprx6DVf5lWR2Q/r3eS9KM
g86d5HphYmxCs90/Go3s4tAuGu9l1eeG/N1F67GsY/VBqlu0P0NtvlayrJv8
6PNl/79a7R6JWFpjBiPVL9+4xCyYMtJ85ndxdZNFJqp/smQh9MrK27S+pnlr
zXTnbdiFXmHuNRVuY2A32m3PiFY/w0AG+uXo15K1ZrqP5/kLqiDvO3SfjB7b
NZJ7d+h739zL5FMpPaBEa6vHZ4b/s3tseI+ovaKX+rPorTDc+pOF6m9zavzQ
H2ih/Sm817R377S7JXHBo/aohfIiz8sfLb9g97z2TVlJg4XyZWhUhOUzdsf0
D73PHLFQHr8AoT5DEw==
              "]]}, 
            Annotation[#, "Charting`Private`Tag$20326#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF0n0s1HEcB3A753l1LbcUKk9Fzh2zZJx0X7dIoWHI4zweK3mo7JKTZHV0
lofLPOzMCXGeDjn9zkPz2MrDyGrTkISW0Ghp5iFp+/rcH7/99trv8/v83p/f
92MYHu8VRVJSUvLYu/7fdZfYEakxJizSAa1lHrPaYYhR3cglSKglm+VDCxZf
YMfUT3sQh1EztoGdynwYVR9JsXfJlkn2hBFqxI67GbjB5pjC86mP/BR3qgVq
wg72XmVZEdbQ/xn/McmGYoNasYc79PvtOLZIhm1v4urCpjqAszfHTtMIJ8hT
QxXxG+bY0L+fEf3dknIRvr8VviM5y3FBDdjXh87QHaluqBbbxKOn2IzwQi+w
WTHZm7Vz3qgKO+ihXyCd4gMWtq3oW3P8UCU26aSumEkNQhXYq1w7b1MiHOof
iMyZ6QER0J/So2c8ua0wQ/Pvr6coClVjx4p68/8MRkO+xe4r4wPTsZB/jSw1
a0m/DfN+q8uZstjioXbsRL5zX5ZRBnqNvfO7/IOTRSbqwubnRSr9mMlGxH6e
dXSHtp0L5xE0NrHA4wnh/5mxKyIH3hfA+W5pi3oS/IvA7ry3NO22EnC5Nk84
plqqqFcP+bSaVQZeGrQ7Ql4TwzyB3ZMMdO452M0dvREkVYC3q1jznmWVqB67
ie6X6Pq1Cmycrvaok1INLlEeVQvzrUF12PnHAzS0CyVgV+W0PFZvLZh8tCOz
TLUefH8jV/WeTQM4OcFcOTykEc6DqzMZlyKWgvUG8q0yOU1Isp+3gB12Q6MZ
XGrt6+kjaYb6EzIZOdWxBfobjIrjz39pgfyk0YlSJvclzF9VckvA0moFv9sp
tPpcp/CIs2axHMngfW9TdTl9Xgb95SteopmUNvj+TNquY9GhV5CPL7EtXmxW
+KC8s+3uJQLVYOuEjgjESwTs5+z4XmSBHPb3CW2XyzRsB8v0LvNZfe1Q3702
658R0AH9BMLJpeGfCk8Mh9pIczohn8qytdPoqS6Y75rhMWnrVYVrfXf1SpK7
YJ+2BQuZaRUKe/QMrUeOdMH+/gMb7BuP
              "]]}, 
            Annotation[#, "Charting`Private`Tag$20326#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
            FormBox["\"Densities of susceptible hosts\"", TraditionalForm], 
            None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 300, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 500000000}, {0, 5}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Is\"", "\"Ds\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{{10.204081632653061`, 0.06718881591588637}, {
              11454.56930380632, 0.2}}]}, 
            Annotation[#, "Charting`Private`Tag$20395#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{{10.204081632653061`, 0.007465423990693351}, {
              149326.87638210793`, 0.2}}]}, 
            Annotation[#, "Charting`Private`Tag$20395#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF039Qi3EcB/BurVTuzGnnRyv0Q7/WVsZkLbVPQ8JCU1E4tZrO78INLUlY
rItKl7p1LQmFfml5pnbXkKMft3Tc5RaJOAlXDtephLtvn/547rnXPc/z/bw/
3+/ncY4/FJFIs7CwkP67/t8dhsSytCQ3UWipXW8i82xgO/dmtYKigRB6TAdk
OcHipDuvw6k5wCdeLLAaiGM6wlLiSbrvsQDKBfyIDx6IHRXLPdC9L1WpEqYP
8Ih3SodFfhQPBMRXVOdpfAYfAok7mhwfC+T+EEwc4BYWKmYGorN/d7mzqRDw
J77F1KjuvhdjvsfcPZ98GWuw3lj8ROVyeSj4Eu9t9+IEMTeCF7FbuLHIk4oA
Z2Ke2b1tUCKFxcSipOzfVe+lsIh4x5noWA4jEhYS5zd+deTJo8GJmLbIQStk
7gAW8bBCIPWg4nG9lXa80K22MvRpjbcwI0aG9RlGlqt5XAYuxFy7P99zIBHc
iPdrHub9atuD+QdbNnS3vt6P+z1Cr/GszzgCy4k/3r7U6zOmhDDiZNXaRxdc
MmEz8cSPshchPlkgIVblJlh87suG1VN5fsJR9vhlCJjqv6vng1KZj+t7issT
Wp8XTO+3vcZ4ePtVnA+J8inbvrEYXWavzO+yLkGP2ex6NXyhFD3UJphLH9Fi
P7EtZi6suIbeKIEn6mPl6PEK0cCW0ut4vrWc6OSwdxVo14wZ55oZN4FLXGxp
mhEXdQud5xRja19YiQ6zTM8VPawCDjF9flNWqfUd9KnRy9Yn+XfBh/jEYW/L
+F3VwCZWzDMfTNXW4PmwWvP8suS14DmVt0Act8+2Dl3Ci9oSWVmH7y/U6ehp
QfXgPfW/mbSHVr2tx/o0U0+JUHEP+6soTlGLZjbgfjybKPR7c7sBn3eutSvS
gw6/l3rY6DkDOsyv/xqh6UttxHp96ZNBV2ffxzyqSv+iwbr7mHeWvrnx+DoK
3Inn7e5Ua4conM/+7n+R1Xqc34vsSYXQ+QFax1qvEj16AK7ELSP92zNjmvB7
db55qONbE67f07GbX3OpGfNYfeGFmJYY8LyqrW+MGgMM2O825wU1DZumXRU1
ySo+YcD5kiandGfnTHtc/SErvdyA81txY1twCjXtcGP7z4ROAywj/gs/WGaA

              "]]}, Annotation[#, "Charting`Private`Tag$20395#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF0n1MzHEcB/B2XVE2Z7p5qDxEKnrQbkIP6j7dlFCm41Jhuupqnot20iUx
Lt2NHphq1zoSlR6Iy+/UbR0yelhpTFxJTzgnqpW1HjHfPr8/fvvt9c/n+/5+
vm8b4YngaIaRkRH/7/fvb2ngRSbH2nJ79Kp6ASvLq9HlXoWYYsCgSBBaLEz3
4cWWdQZRC8FAvNLdpC+CbQ3fiGeY6xM8qFXwhfj4sfAxnsgevhJ3vJMmBbKd
QE98gD/IdaU48Iv4uvQyw43lBsPETTXWL9xFm2CE2MM2wJ/H9kLLx1vtHClf
GCAuZiuk5b08zPfCJebbetZWPG9COFWyQeSP+Q43rnX2Zu+EHmLbIG2uAxUM
OmKOzq5BH8hHc2Pl46W9fPhIvP9CSLgzay98IM6uHrDmiEKgnZixwlLpyd4P
74kHxe58e0qI8zabc/z3mEVCB/F5xTrP1DDaLK3Vat1kJHQSu5hPD1+FaOgi
Pqp4lvW7IQZ6ifV1O9rqO4/ifYeYlQ5VqadwP1/uX+twmpDANHGc1O/5lVUX
wSTmv6dGbr31dUoDBrE0M8roe5ccxmfzjMJpx8kMGJq9f2t7v0SSDT+IHXiF
UfVvbsD32X1bKLQnQ3PQgZJXjhbVeZjvloUku9U0n36fuQc/DF4pQBsa3Bcx
h5TYr/A6nQtsvI3eGQgvZQmF6Mkibt/ugjvYtwfOIXEBPUXo1alzLtWy7uH7
5xm3zIkQFKOzloWZWdwsgX7iAOOUTO6zUugjZi6pSSswLUOfG8swPetWjvtP
PLnOWHiwAvskXqw7nqSshG5iq/os1zTRA/g8m/cGL+KI2UN0Pkewe28J7eUq
FTPZuwrnrWxRntjyuQrPY7S053uKH2Heorx4GXfeY/TrqZuun+7TbvYzz1WD
CvPz7eeqnftUOE89EKzoSqrG87pSZrxzFjzB/NKSTbn6h08w33x1bfWZbRR8
Il58qFmmNFDY1+62v5Flaux7uuOM2NPmKVpltV3KfU67bqg79GJYDfZflq0z
NP2swfntTYfcKq/VYh6THxzfljUavF+F6d0xrQftfTZLKx/v0uD7lgpmrPIS
NdgHflx8m/yqhu6PrD8tpZB20d19PvGUBvsYpG0cjWqm/QfZkW6D
              "]]}, 
            Annotation[#, "Charting`Private`Tag$20395#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             
             LineBox[{{10.204081632653061`, 0.09037622930974329}, {
              3949.6324871145052`, 0.2}}]}, 
            Annotation[#, "Charting`Private`Tag$20395#1"]& ]}}, {}}, {
        DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
         AxesOrigin -> {0, 0}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
            FormBox[
            "\"Densities of infected hosts and parasite pool\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 300, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0, 500000000}, {0, 0.2}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\"", "\"W\""}, 
          "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
               
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.844317484798222*^9, 3.844317494462618*^9}, 
   3.844317525151593*^9, 3.844317586641141*^9, {3.844317689857646*^9, 
   3.844317744107884*^9}, {3.844317807207354*^9, 3.8443179611547947`*^9}, {
   3.844317992123014*^9, 3.844318045678763*^9}, 3.844318259015588*^9, {
   3.844318496996438*^9, 3.844318521043057*^9}, {3.8443185897903957`*^9, 
   3.844318741524761*^9}, {3.8443188175323133`*^9, 3.844318862168894*^9}, {
   3.844318901349249*^9, 3.8443189598187103`*^9}, {3.844319008534831*^9, 
   3.844319042398046*^9}, 3.8443200119450703`*^9, {3.844320155825042*^9, 
   3.8443202083333273`*^9}, {3.8443202476846867`*^9, 
   3.8443204441897907`*^9}, {3.844320685684684*^9, 3.844320749614176*^9}, {
   3.844324389442589*^9, 3.844324585724516*^9}, {3.844324617085747*^9, 
   3.844324632863668*^9}, {3.844324805379573*^9, 3.844324863650193*^9}, 
   3.844329792378677*^9, {3.844330470865904*^9, 3.844330552773459*^9}, {
   3.844330590125348*^9, 3.844330654760981*^9}, 3.8443307056150703`*^9, {
   3.844400410942936*^9, 3.844400425002304*^9}, {3.8444033219457617`*^9, 
   3.844403383777698*^9}, 3.8444035055887117`*^9, {3.844403540593795*^9, 
   3.84440356164351*^9}, {3.844403775435631*^9, 3.8444038373227262`*^9}, {
   3.8444056339464293`*^9, 3.844405686332185*^9}, 3.8444139508120213`*^9, {
   3.844416626120503*^9, 3.8444167776804543`*^9}, {3.844416814259933*^9, 
   3.844416878227229*^9}, 3.844417100465063*^9, {3.844417345776181*^9, 
   3.8444173851038*^9}, 3.8444178827832613`*^9, 3.844417948166019*^9, {
   3.844423837781604*^9, 3.844423851567542*^9}, 3.844423890162054*^9, {
   3.84442414103852*^9, 3.8444241543705873`*^9}, {3.844424503611589*^9, 
   3.844424544129435*^9}, 3.844424797452115*^9, {3.844424844662074*^9, 
   3.8444249010109777`*^9}, 3.844424934615038*^9, 3.844425115349717*^9, 
   3.844490361712449*^9, {3.8444904152982693`*^9, 3.844490439358206*^9}, {
   3.8444905072233467`*^9, 3.8444905551815*^9}, {3.8444907019423227`*^9, 
   3.8444907612379017`*^9}, {3.8444907935031223`*^9, 
   3.8444908217016697`*^9}, {3.8444908679229918`*^9, 3.844490900436441*^9}, {
   3.844490939292838*^9, 3.844491003302874*^9}, 3.8444910356646347`*^9, 
   3.84449109792381*^9, 3.8444911720156107`*^9, 3.844491363312155*^9, {
   3.844491403550887*^9, 3.8444914361934*^9}, {3.844491528631072*^9, 
   3.844491538875605*^9}, 3.844857090636014*^9, 3.8448571395016727`*^9, 
   3.8448575106315813`*^9, 3.844857546517479*^9, 3.844947136840301*^9, {
   3.845116885993783*^9, 3.845116940252013*^9}, 3.845117530006055*^9, 
   3.845117704452087*^9, {3.8451177503436117`*^9, 3.845117771407235*^9}, 
   3.845117848103919*^9, 3.845120689612237*^9, 3.845120777370779*^9, 
   3.8451212263010178`*^9, 3.845374477959684*^9, 3.845375053468278*^9, 
   3.845444722286641*^9, 3.845447326278324*^9, 3.845473675493042*^9, {
   3.845521620789768*^9, 3.8455216269821777`*^9}, 3.8455312289800043`*^9, 
   3.845531348953229*^9, 3.845531456541893*^9, 3.845531877241578*^9, 
   3.845531923006192*^9, 3.8455322664486933`*^9, 3.8455327314658813`*^9, 
   3.84571845392308*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"bb33bb14-a23b-4104-b4cb-3df67c7d0df5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0.17230488912293632`", ",", "1.846792096056414`", ",", 
    "0.205199121784046`", ",", "0.03196082511592501`", ",", 
    "0.014838083177011718`", ",", "0.012883486963619588`", ",", 
    "4.357662534529248`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.844317484798222*^9, 3.844317494462618*^9}, 
   3.844317525151593*^9, 3.844317586641141*^9, {3.844317689857646*^9, 
   3.844317744107884*^9}, {3.844317807207354*^9, 3.8443179611547947`*^9}, {
   3.844317992123014*^9, 3.844318045678763*^9}, 3.844318259015588*^9, {
   3.844318496996438*^9, 3.844318521043057*^9}, {3.8443185897903957`*^9, 
   3.844318741524761*^9}, {3.8443188175323133`*^9, 3.844318862168894*^9}, {
   3.844318901349249*^9, 3.8443189598187103`*^9}, {3.844319008534831*^9, 
   3.844319042398046*^9}, 3.8443200119450703`*^9, {3.844320155825042*^9, 
   3.8443202083333273`*^9}, {3.8443202476846867`*^9, 
   3.8443204441897907`*^9}, {3.844320685684684*^9, 3.844320749614176*^9}, {
   3.844324389442589*^9, 3.844324585724516*^9}, {3.844324617085747*^9, 
   3.844324632863668*^9}, {3.844324805379573*^9, 3.844324863650193*^9}, 
   3.844329792378677*^9, {3.844330470865904*^9, 3.844330552773459*^9}, {
   3.844330590125348*^9, 3.844330654760981*^9}, 3.8443307056150703`*^9, {
   3.844400410942936*^9, 3.844400425002304*^9}, {3.8444033219457617`*^9, 
   3.844403383777698*^9}, 3.8444035055887117`*^9, {3.844403540593795*^9, 
   3.84440356164351*^9}, {3.844403775435631*^9, 3.8444038373227262`*^9}, {
   3.8444056339464293`*^9, 3.844405686332185*^9}, 3.8444139508120213`*^9, {
   3.844416626120503*^9, 3.8444167776804543`*^9}, {3.844416814259933*^9, 
   3.844416878227229*^9}, 3.844417100465063*^9, {3.844417345776181*^9, 
   3.8444173851038*^9}, 3.8444178827832613`*^9, 3.844417948166019*^9, {
   3.844423837781604*^9, 3.844423851567542*^9}, 3.844423890162054*^9, {
   3.84442414103852*^9, 3.8444241543705873`*^9}, {3.844424503611589*^9, 
   3.844424544129435*^9}, 3.844424797452115*^9, {3.844424844662074*^9, 
   3.8444249010109777`*^9}, 3.844424934615038*^9, 3.844425115349717*^9, 
   3.844490361712449*^9, {3.8444904152982693`*^9, 3.844490439358206*^9}, {
   3.8444905072233467`*^9, 3.8444905551815*^9}, {3.8444907019423227`*^9, 
   3.8444907612379017`*^9}, {3.8444907935031223`*^9, 
   3.8444908217016697`*^9}, {3.8444908679229918`*^9, 3.844490900436441*^9}, {
   3.844490939292838*^9, 3.844491003302874*^9}, 3.8444910356646347`*^9, 
   3.84449109792381*^9, 3.8444911720156107`*^9, 3.844491363312155*^9, {
   3.844491403550887*^9, 3.8444914361934*^9}, {3.844491528631072*^9, 
   3.844491538875605*^9}, 3.844857090636014*^9, 3.8448571395016727`*^9, 
   3.8448575106315813`*^9, 3.844857546517479*^9, 3.844947136840301*^9, {
   3.845116885993783*^9, 3.845116940252013*^9}, 3.845117530006055*^9, 
   3.845117704452087*^9, {3.8451177503436117`*^9, 3.845117771407235*^9}, 
   3.845117848103919*^9, 3.845120689612237*^9, 3.845120777370779*^9, 
   3.8451212263010178`*^9, 3.845374477959684*^9, 3.845375053468278*^9, 
   3.845444722286641*^9, 3.845447326278324*^9, 3.845473675493042*^9, {
   3.845521620789768*^9, 3.8455216269821777`*^9}, 3.8455312289800043`*^9, 
   3.845531348953229*^9, 3.845531456541893*^9, 3.845531877241578*^9, 
   3.845531923006192*^9, 3.8455322664486933`*^9, 3.8455327314658813`*^9, 
   3.845718453931532*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"a38c3540-44fc-459b-8200-135a7a87a2c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "solsDS", "]"}]], "Input",
 CellChangeTimes->{{3.845531885799452*^9, 3.8455318907167473`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"edb9e24f-76c7-4373-8ad1-1697402e61fa"],

Cell[BoxData["29"], "Output",
 CellChangeTimes->{3.845531891195587*^9, 3.845531936082136*^9, 
  3.8455322731077023`*^9, 3.845532733584154*^9, 3.845718453958054*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"0d212921-63f0-4ae8-9cde-70fbf1b68ff6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Iww", ",", " ", "Ds", ",", " ", "Dw", 
     ",", " ", "Dww", ",", " ", "W"}], "}"}], "->", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.1723048891229366`", ",", "1.846792096056414`", ",", 
     "0.205199121784046`", ",", "0.03196082511592497`", ",", 
     "0.014838083177011697`", ",", "0.012883486963619573`", ",", 
     "4.357662534529239`"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"sysfunc1", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], "/.", "prEcoDSNL"}], "/.", 
       RowBox[{"\[Sigma]w", "->", " ", "0"}]}], "/.", 
      RowBox[{"\[Alpha]ww", " ", "->", " ", "0"}]}], "/.", 
     RowBox[{"\[Epsilon]", "->", " ", "8.51"}]}], "/.", 
    RowBox[{"\[Sigma]ww", "->", " ", "0"}]}], "/.", 
   RowBox[{"\[Alpha]w", "->", " ", "0"}]}], "/.", "%"}]}], "Input",
 CellChangeTimes->{{3.84553146734338*^9, 3.845531499723633*^9}, {
  3.8455315319496326`*^9, 3.845531592871831*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"7037ac4b-47e5-4e13-9073-cc7d3814ccc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Is", "\[Rule]", "0.1723048891229366`"}], ",", 
   RowBox[{"Iw", "\[Rule]", "1.846792096056414`"}], ",", 
   RowBox[{"Iww", "\[Rule]", "0.205199121784046`"}], ",", 
   RowBox[{"Ds", "\[Rule]", "0.03196082511592497`"}], ",", 
   RowBox[{"Dw", "\[Rule]", "0.014838083177011697`"}], ",", 
   RowBox[{"Dww", "\[Rule]", "0.012883486963619573`"}], ",", 
   RowBox[{"W", "\[Rule]", "4.357662534529239`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.845531500442819*^9, {3.845531554907907*^9, 3.845531593287691*^9}, 
   3.845531927116988*^9, 3.845718453981241*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"e87e5392-9a14-4601-a83d-cdfec52d0daf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.273559366969494`*^-16", ",", 
   RowBox[{"-", "2.220446049250313`*^-16"}], ",", 
   RowBox[{"-", "2.7755575615628914`*^-17"}], ",", 
   RowBox[{"-", "1.3877787807814457`*^-17"}], ",", "2.0816681711721685`*^-17",
    ",", 
   RowBox[{"-", "6.938893903907228`*^-18"}], ",", "8.881784197001252`*^-16"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.845531500442819*^9, {3.845531554907907*^9, 3.845531593287691*^9}, 
   3.845531927116988*^9, 3.845718453990633*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"6bdd72d2-280f-4fd5-9f04-a834ac9a6801"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Jmat", "/.", "condsimplifyNL"}], "/.", "%"}], "/.", 
   "prEcoDSNL"}], "]"}]], "Input",
 CellChangeTimes->{{3.845531503307312*^9, 3.845531510784025*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"15c49d1d-f0e8-405c-b257-223adf595799"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"5.273559366969494`*^-16\\\", \\\
\",\\\", RowBox[{\\\"-\\\", \\\"2.220446049250313`*^-16\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.7755575615628914`*^-17\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.3877787807814457`*^-17\\\"}], \\\",\\\", \
\\\"2.0816681711721685`*^-17\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.938893903907228`*^-18\\\"}], \\\",\\\", \
\\\"8.881784197001252`*^-16\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"", 2, 106, 5, 30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845718454027817*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"7231aea9-6f36-4fe4-9704-e16757a9a3e4"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"5.273559366969494`*^-16\\\", \\\
\",\\\", RowBox[{\\\"-\\\", \\\"2.220446049250313`*^-16\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"2.7755575615628914`*^-17\\\"}], \\\",\\\", \
RowBox[{\\\"-\\\", \\\"1.3877787807814457`*^-17\\\"}], \\\",\\\", \
\\\"2.0816681711721685`*^-17\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"6.938893903907228`*^-18\\\"}], \\\",\\\", \
\\\"8.881784197001252`*^-16\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"", 2, 106, 6, 30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.84571845403507*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"b6a4f6fd-1790-4e8b-8f88-282d918bfc11"],

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "0.9`"}], "-", 
        RowBox[{"1.2`", " ", 
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw", "+", "Dww"}], ")"}]}], "-", 
        RowBox[{"0.65`", " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}], "+", 
        RowBox[{"2.5`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"0.26`", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"2.9`", " ", "W"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.65`"}], " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}], "+", 
        RowBox[{"2.5`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"0.26`", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.65`"}], " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}], "+", 
        RowBox[{"2.5`", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"0.26`", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}]}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", "1.2`"}], " ", "Is"}], ",", 
       RowBox[{
        RowBox[{"-", "1.2`"}], " ", "Is"}], ",", 
       RowBox[{
        RowBox[{"-", "1.2`"}], " ", "Is"}], ",", 
       RowBox[{
        RowBox[{"-", "2.9`"}], " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2.61`", " ", "W"}], ",", 
       RowBox[{
        RowBox[{"-", "0.9`"}], "-", 
        RowBox[{"2.7`", " ", 
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw", "+", "Dww"}], ")"}]}]}], ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "2.7`"}], " ", "Iw"}], ",", 
       RowBox[{
        RowBox[{"-", "2.7`"}], " ", "Iw"}], ",", 
       RowBox[{
        RowBox[{"-", "2.7`"}], " ", "Iw"}], ",", 
       RowBox[{"2.61`", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.29`", " ", "W"}], ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "0.9`"}], "-", 
        RowBox[{"2.7`", " ", 
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw", "+", "Dww"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", "2.7`"}], " ", "Iww"}], ",", 
       RowBox[{
        RowBox[{"-", "2.7`"}], " ", "Iww"}], ",", 
       RowBox[{
        RowBox[{"-", "2.7`"}], " ", "Iww"}], ",", 
       RowBox[{"0.29`", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.68`", " ", 
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw", "+", "Dww"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.5`"}], " ", "Ds"}], "+", 
        RowBox[{"1.68`", " ", 
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw", "+", "Dww"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1.5`"}], " ", "Ds"}], "+", 
        RowBox[{"1.68`", " ", 
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw", "+", "Dww"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", "3.9`"}], "-", 
        RowBox[{"1.5`", " ", "Iw"}], "-", 
        RowBox[{"1.5`", " ", "Iww"}], "+", 
        RowBox[{"1.68`", " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}]}], ",", 
       RowBox[{"1.68`", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}], ",", 
       RowBox[{"1.68`", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw", "+", "Iww"}], ")"}]}], ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"1.5`", " ", "Ds"}], "-", 
        RowBox[{"1.5`", " ", "Dw"}]}], ",", 
       RowBox[{
        RowBox[{"2.9699999999999998`", " ", "Ds"}], "-", 
        RowBox[{"2.9699999999999998`", " ", "Dw"}]}], ",", 
       RowBox[{
        RowBox[{"1.5`", " ", "Iw"}], "+", 
        RowBox[{"2.9699999999999998`", " ", "Iww"}]}], ",", 
       RowBox[{
        RowBox[{"-", "3.9`"}], "-", 
        RowBox[{"1.5`", " ", "Iw"}], "-", 
        RowBox[{"2.9699999999999998`", " ", "Iww"}]}], ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"1.5`", " ", "Dw"}], ",", 
       RowBox[{
        RowBox[{"0.015`", " ", "Ds"}], "+", 
        RowBox[{"2.9699999999999998`", " ", "Dw"}]}], ",", 
       RowBox[{"0.015`", " ", "Iww"}], ",", 
       RowBox[{
        RowBox[{"1.5`", " ", "Iw"}], "+", 
        RowBox[{"2.9699999999999998`", " ", "Iww"}]}], ",", 
       RowBox[{"-", "3.9`"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2.9`"}], " ", "W"}], ",", "0", ",", "0", ",", "0", ",", 
       "49", ",", "416.99`", ",", 
       RowBox[{
        RowBox[{"-", "0.9`"}], "-", 
        RowBox[{"2.9`", " ", "Is"}]}]}], "}"}]}], "}"}], "/.", 
   "\[VeryThinSpace]", 
   RowBox[{"{", 
    RowBox[{"5.273559366969494`*^-16", ",", 
     RowBox[{"-", "2.220446049250313`*^-16"}], ",", 
     RowBox[{"-", "2.7755575615628914`*^-17"}], ",", 
     RowBox[{"-", "1.3877787807814457`*^-17"}], ",", 
     "2.0816681711721685`*^-17", ",", 
     RowBox[{"-", "6.938893903907228`*^-18"}], ",", 
     "8.881784197001252`*^-16"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.84553151168988*^9, 3.8457184540459023`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"3a9a1fbc-9277-4e88-bd1f-0a2a5058ea90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Select", "[", 
  RowBox[{"solsDS", ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Is", "/.", "#"}], ")"}], ">", "0"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iw", "/.", "#"}], ")"}], ">", "0"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iww", "/.", "#"}], ")"}], ">", "0"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"W", " ", "/.", "#"}], ")"}], ">", "0"}]}], "&"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Jmat", "/.", "condsimplifyNL"}], "/.", "%"}], "/.", 
   "prEcoDSNL"}], "]"}]}], "Input",
 CellChangeTimes->{{3.84431555670685*^9, 3.84431556010293*^9}, {
  3.8443983064323997`*^9, 3.8443983070401983`*^9}, {3.844857534113633*^9, 
  3.8448576237046022`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"4a5d1071-9888-485d-968a-641f002cccee"],

Cell[BoxData[
 TemplateBox[{
  "Greater", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"68422.30204326575`\\\"}], \\\"+\\\", RowBox[{\\\"6.482453385545648`*^-7\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 107, 7, 
   30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845532745850988*^9, 3.8457184540699053`*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"a4fabfd1-5033-44bd-b201-8c3393ad8cbb"],

Cell[BoxData[
 TemplateBox[{
  "Greater", "nord", 
   "\"Invalid comparison with \
\\!\\(\\*RowBox[{RowBox[{\\\"137783.97343479434`\\\", \
\\\"\[VeryThinSpace]\\\"}], \\\"-\\\", \
RowBox[{\\\"1.3097203634377697`*^-6\\\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\
\\) attempted.\"", 2, 107, 8, 30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845532745850988*^9, 3.845718454077669*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"cbe77704-ca42-4886-9a4c-c4d8c0eda5e6"],

Cell[BoxData[
 TemplateBox[{
  "Greater", "nord", 
   "\"Invalid comparison with \\!\\(\\*RowBox[{RowBox[{\\\"-\\\", \
\\\"69589.17420298426`\\\"}], \\\"+\\\", RowBox[{\\\"6.614749716127263`*^-7\\\
\", \\\" \\\", \\\"\[ImaginaryI]\\\"}]}]\\) attempted.\"", 2, 107, 9, 
   30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845532745850988*^9, 3.845718454087987*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"f20313f7-ea62-44d8-ba85-e6c92cae77f6"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Greater\\\", \
\\\"::\\\", \\\"nord\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 107, 10, 30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845532745850988*^9, 3.845718454098111*^9},
 CellLabel->
  "During evaluation of \
In[107]:=",ExpressionUUID->"d100386c-596a-4a49-8b43-e5fc73302ad5"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.844315560417652*^9, {3.844398279838081*^9, 3.8443983077462482`*^9}, 
   3.844413073808371*^9, 3.8444179608998413`*^9, 3.8448571043182907`*^9, {
   3.8448575251843443`*^9, 3.844857535453033*^9}, {3.8448576083276978`*^9, 
   3.844857624263646*^9}, 3.845117538698113*^9, {3.845120711256546*^9, 
   3.845120718398979*^9}, 3.845120793836788*^9, 3.845121229811964*^9, 
   3.845444722379874*^9, 3.845447326312571*^9, 3.845473675609085*^9, {
   3.845521620828061*^9, 3.845521627015486*^9}, 3.8455312511960487`*^9, 
   3.8455313653741207`*^9, 3.845531938705944*^9, 3.8455323203773823`*^9, 
   3.845532745895928*^9, 3.845718454108241*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"bb5cd20f-9dae-4b55-a12c-e7da5cecfd8e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"-", "69.18968160000003`"}], "-", 
               RowBox[{"363.24582840000016`", " ", "Ds"}], "-", 
               RowBox[{"311.3535672000001`", " ", 
                SuperscriptBox["Ds", "2"]}], "+", 
               TemplateBox[{"1470"},
                "OutputSizeLimit`Skeleton"], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"12.8`", "\[VeryThinSpace]", "+", 
                  RowBox[{"6.6000000000000005`", " ", "Ds"}], "+", 
                  RowBox[{"6.6000000000000005`", " ", "Dw"}], "+", 
                  RowBox[{"6.6000000000000005`", " ", "Dww"}], "+", 
                  RowBox[{"2.52`", " ", "Is"}], "+", 
                  RowBox[{"2.62`", " ", "Iw"}], "+", 
                  RowBox[{"4.09`", " ", "Iww"}], "+", 
                  RowBox[{"2.9`", " ", "W"}]}], ")"}], " ", 
                SuperscriptBox["#1", "6"]}], "+", 
               SuperscriptBox["#1", "7"]}], "&"}], ",", "1"}], "]"}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"Root", "[", 
            RowBox[{
             RowBox[{
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"], "&"}], ",", "7"}], "]"}]}], "}"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{83., {3., 11.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{72., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 30140470972732071110, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{81., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 30140470972732071110, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{60., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 30140470972732071110, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{107., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[30140470972732071110 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.844315560417652*^9, {3.844398279838081*^9, 3.8443983077462482`*^9}, 
   3.844413073808371*^9, 3.8444179608998413`*^9, 3.8448571043182907`*^9, {
   3.8448575251843443`*^9, 3.844857535453033*^9}, {3.8448576083276978`*^9, 
   3.844857624263646*^9}, 3.845117538698113*^9, {3.845120711256546*^9, 
   3.845120718398979*^9}, 3.845120793836788*^9, 3.845121229811964*^9, 
   3.845444722379874*^9, 3.845447326312571*^9, 3.845473675609085*^9, {
   3.845521620828061*^9, 3.845521627015486*^9}, 3.8455312511960487`*^9, 
   3.8455313653741207`*^9, 3.845531938705944*^9, 3.8455323203773823`*^9, 
   3.845532745895928*^9, 3.845718455178362*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"728e4b69-254b-4e72-bb22-b8f8fc26ce76"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Bifurcation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "w"], TraditionalForm]],ExpressionUUID->
  "4d968b4f-9d32-4b94-8ad8-a911956b8044"]
}], "Section",
 CellChangeTimes->{{3.8443122555343237`*^9, 3.8443122593850927`*^9}, {
  3.846149454095841*^9, 
  3.846149455395975*^9}},ExpressionUUID->"aa7a2679-6d98-4704-a0e1-\
c72c66d2e8a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parfw", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.9"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "2.9"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "3.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"k", " ", "->", " ", "0.26"}], ",", " ", 
     RowBox[{"\[Epsilon]", "->", " ", "2"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwrangeFWrd", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"40.5", ",", " ", "51.5", ",", " ", "0.05"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwrangeBWrd", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"40.5", ",", " ", "32", ",", " ", 
     RowBox[{"-", "0.05"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwrange", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"32", ",", " ", "51.5", ",", " ", "0.3"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.844312278428505*^9, 3.844312360379758*^9}, {
  3.844856387150639*^9, 3.844856397047364*^9}, {3.844856787181674*^9, 
  3.844856789181418*^9}, {3.844858133617985*^9, 3.8448581704126053`*^9}, {
  3.844858222504217*^9, 3.8448582442431087`*^9}, {3.844858669126287*^9, 
  3.844858672091198*^9}, {3.8449232731946363`*^9, 3.8449232780032463`*^9}, {
  3.844923981757741*^9, 3.844923998011304*^9}, {3.844924068399229*^9, 
  3.844924068996551*^9}, {3.844924590520755*^9, 3.844924594825354*^9}, {
  3.844924642531196*^9, 3.8449246428212843`*^9}, {3.844924813142106*^9, 
  3.84492481369213*^9}, {3.844924859770265*^9, 3.8449248609825068`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"2bfd188a-6c42-45a1-9b25-c38974e00da5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solsfwAll", " ", "=", " ", 
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"odesRes", "/.", "func1"}], "/.", "forceInf"}], "/.", 
           RowBox[{"fww", "->", " ", 
            RowBox[{"\[Epsilon]", " ", "fw"}]}]}], "/.", "parfw"}], "/.", 
         RowBox[{"fw", "->", " ", "40.5"}]}], ")"}], " ", "\[Equal]", " ", 
       "0"}], "]"}], ",", " ", "varRes", ",", " ", "Reals"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8449233139374523`*^9, 3.8449233281552887`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"93c16f53-43d3-454f-bdf2-100b594b7ff3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"solsfw", "=", " ", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"solsfwAll", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Iw", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Iww", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "/.", "#"}], ")"}], ">", " ", "0"}]}], " ", "&"}]}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solsfwzero", " ", "=", " ", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"solsfwAll", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Iw", "/.", "#"}], ")"}], "==", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Iww", "/.", "#"}], ")"}], "==", " ", "0"}], "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "/.", "#"}], ")"}], ">", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dw", "/.", "#"}], ")"}], "==", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dww", "/.", "#"}], ")"}], "==", " ", "0"}], " ", "&&", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "/.", "#"}], ")"}], "==", " ", "0"}]}], " ", "&"}]}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.844852993023115*^9, 3.844853072599365*^9}, 
   3.8448531123138227`*^9, {3.844853176218116*^9, 3.844853237422299*^9}, {
   3.844856253138434*^9, 3.844856254845209*^9}, {3.8448582499173603`*^9, 
   3.844858272112649*^9}, {3.844923307637409*^9, 3.844923341760571*^9}, {
   3.844923722177039*^9, 3.844923763665306*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"00811fad-9d4c-40bb-beea-64ccf03eebf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"solsfwAll", ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Is", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iw", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iww", "/.", "#"}], ")"}], ">", " ", "0"}], " ", "&&", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"W", "/.", "#"}], ")"}], ">", " ", "0"}]}], " ", "&"}]}], 
  "]"}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"869fb935-b584-4317-a964-4b50367a2c22"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", "0.7438466226076167`"}], ",", 
    RowBox[{"Iw", "\[Rule]", "1.3468986404351995`"}], ",", 
    RowBox[{"Iww", "\[Rule]", "0.14965540449279993`"}], ",", 
    RowBox[{"Ds", "\[Rule]", "0.06287104081847121`"}], ",", 
    RowBox[{"Dw", "\[Rule]", "0.024347267110352393`"}], ",", 
    RowBox[{"Dww", "\[Rule]", "0.015423814266510072`"}], ",", 
    RowBox[{"W", "\[Rule]", "0.7312004537713971`"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.8641107089664927`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"a26852e1-40ce-4a76-bbb6-11969f356c8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["solsfw"], "Input",
 CellChangeTimes->{{3.8641106024217553`*^9, 3.864110644800529*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"eb264576-6adf-41eb-9463-8e473d2e4283"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Is", "\[Rule]", "0.7438466226076167`"}], ",", 
   RowBox[{"Iw", "\[Rule]", "1.3468986404351995`"}], ",", 
   RowBox[{"Iww", "\[Rule]", "0.14965540449279993`"}], ",", 
   RowBox[{"Ds", "\[Rule]", "0.06287104081847121`"}], ",", 
   RowBox[{"Dw", "\[Rule]", "0.024347267110352393`"}], ",", 
   RowBox[{"Dww", "\[Rule]", "0.015423814266510072`"}], ",", 
   RowBox[{"W", "\[Rule]", "0.7312004537713971`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.864110604198668*^9, 3.8641106151234455`*^9}, 
   3.8641106452141333`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"b9f7c107-4319-439c-b93b-d05f04d70cda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sysfunc1", "/.", "solsfw"}], "/.", 
    RowBox[{"fww", "->", " ", 
     RowBox[{"\[Epsilon]", " ", "fw"}]}]}], "/.", "parfw"}], "/.", 
  RowBox[{"fw", " ", "->", " ", "40.5"}]}]], "Input",
 CellChangeTimes->{{3.864110649681882*^9, 3.8641106711827674`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"484a113d-c77b-40a0-b504-30e2603ca7b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.220446049250313`*^-16", ",", "0.`", ",", "0.`", ",", 
   RowBox[{"-", "1.6653345369377348`*^-16"}], ",", 
   RowBox[{"-", "2.7755575615628914`*^-17"}], ",", "0.`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.864110671583362*^9, 3.8641107342854385`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"8b3e77d3-cdb7-4fc9-9996-9b54a4542e78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["solsfw"], "Input",
 CellChangeTimes->{{3.845110581534334*^9, 3.845110584681706*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"72a84e2f-b164-4615-8a0a-b06faa35fe4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Is", "\[Rule]", "1.9499789231930884`"}], ",", 
   RowBox[{"Iw", "\[Rule]", "0.3103610854500825`"}], ",", 
   RowBox[{"Iww", "\[Rule]", "0.034484565050009165`"}], ",", 
   RowBox[{"Ds", "\[Rule]", "0.06635159476098869`"}], ",", 
   RowBox[{"Dw", "\[Rule]", "0.008434519849083872`"}], ",", 
   RowBox[{"Dww", "\[Rule]", "0.0012371277216552442`"}], ",", 
   RowBox[{"W", "\[Rule]", "0.06740038429262239`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8451105982504187`*^9, {3.845121672524652*^9, 3.845121686736054*^9}, 
   3.8453714241488123`*^9, 3.845373595255086*^9, 3.845376221293174*^9, 
   3.84544472445648*^9, {3.845447328432248*^9, 3.845447339723853*^9}, 
   3.845473677693655*^9, 3.84552162911754*^9, 3.845718458427475*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"70049578-68b2-4dc8-b267-cbaebe45f5cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sysfunc1", "/.", 
     RowBox[{"fww", "->", " ", 
      RowBox[{"\[Epsilon]", " ", "fw"}]}]}], "/.", "parfw"}], "/.", 
   RowBox[{"fw", " ", "->", " ", "40.5"}]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", "1.9499789231930884`"}], ",", 
    RowBox[{"Iw", "\[Rule]", "1.9499789231930884`1"}], ",", 
    RowBox[{"Iww", "\[Rule]", "0.034484565050009165`"}], ",", 
    RowBox[{"Ds", "\[Rule]", "0.06635159476098869`"}], ",", 
    RowBox[{"Dw", "\[Rule]", "0.008434519849083872`"}], ",", 
    RowBox[{"Dww", "\[Rule]", "0.0012371277216552442`"}], ",", 
    RowBox[{"W", "\[Rule]", "0.06740038429262239`"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8451105952195663`*^9, 3.8451105954898157`*^9}, {
   3.864110689263626*^9, 3.8641106934097843`*^9}, 3.864110741289379*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"2c6c479c-af06-4519-83b7-647113348417"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.5398066278155924`"}], ",", 
   RowBox[{"-", "1.6343160630725337`"}], ",", "0.003145954134601295`", ",", 
   "0.046223540373850264`", ",", "0.14244280370318566`", ",", 
   "0.02074408379603305`", ",", 
   RowBox[{"-", "1.6653345369377348`*^-16"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.845121672541387*^9, 3.845121686743761*^9}, 
   3.8453714241562767`*^9, 3.8453735952644167`*^9, 3.8453762213028*^9, 
   3.845444724466069*^9, {3.845447328452211*^9, 3.845447339733033*^9}, 
   3.845473677713985*^9, 3.845521629138217*^9, 3.845718458449607*^9, 
   3.864110693862773*^9, 3.8641107418970737`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"864e1345-cbab-45b6-84c0-4d8ae136ab03"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqfwFWrd", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
     RowBox[{"sysfunc1", "/.", 
      RowBox[{"fww", "->", " ", 
       RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
     "fw", ",", " ", "fwrangeFWrd", ",", " ", "varRes", ",", " ", "solsfw"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844858275834449*^9, 3.844858321837212*^9}, {
  3.84492380101259*^9, 3.84492384050063*^9}, {3.844924017052515*^9, 
  3.844924017586567*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"c58dedcf-bcbf-433e-abd9-f283a6bf9b6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqfwBWrd", " ", "=", " ", 
   RowBox[{"FollowRoot", "[", 
    RowBox[{
     RowBox[{"sysfunc1", "/.", 
      RowBox[{"fww", "->", " ", 
       RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
     "fw", ",", " ", "fwrangeBWrd", ",", " ", "varRes", ",", " ", "solsfw"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.844858312225143*^9, 3.844858338823587*^9}, {
  3.8449238277233267`*^9, 3.844923853326517*^9}, {3.844924019629524*^9, 
  3.84492402013575*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"b4245020-edf0-4138-b7ea-5778fb4a96fe"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "reged", 
   "\"The point \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2.3197531098982505`\\\
\", \\\",\\\", \\\"0.0013853464500544275`\\\", \\\",\\\", \
\\\"0.00015392738333938074`\\\", \\\",\\\", \\\"0.07585432100787569`\\\", \
\\\",\\\", \\\"0.00004941705337271783`\\\", \\\",\\\", \\\"0.`\\\", \
\\\",\\\", \\\"0.0002523491947333669`\\\"}], \\\"}\\\"}]\\) is at the edge of \
the search region \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}]\\) in coordinate \
\\!\\(\\*RowBox[{\\\"6\\\"}]\\) and the computed search direction points \
outside the region.\"", 2, 119, 15, 30140470972732071110, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.845110962361709*^9, 3.845111052865431*^9, 3.845111313940551*^9, {
   3.845121672692762*^9, 3.845121686872822*^9}, 3.8453714243059053`*^9, 
   3.845373595413645*^9, 3.845376221454566*^9, 3.845444724622958*^9, {
   3.845447328608737*^9, 3.845447339864127*^9}, 3.845473677867736*^9, 
   3.845521629292438*^9, 3.845718458606194*^9},
 CellLabel->
  "During evaluation of \
In[119]:=",ExpressionUUID->"a89dd8a1-b14d-4ac9-bfd1-65f9772a8a02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rangeIs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fwrangeBWrd", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", 
       RowBox[{"fwrangeFWrd", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.1"}], ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rangeDs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fwrangeBWrd", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], ",", " ", 
       RowBox[{"fwrangeFWrd", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.01"}], ",", " ", "0.02"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imsize", " ", "=", " ", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xaxis", " ", "=", 
   RowBox[{"fwrangeFWrd", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", " ", 
      RowBox[{"Length", "[", "eqfwFWrd", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"xaxis", ",", " ", 
       RowBox[{"Iw", "/.", "eqfwFWrd"}]}], "}"}], "]"}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p0", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
        RowBox[{"Jmat", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
        "fw", ",", " ", "xaxis", ",", " ", "eqfwFWrd"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "rangeIs"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", " ", 
     RowBox[{"Frame", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Parasite reproduction in single \
infection(\!\(\*SubscriptBox[\(f\), \(w\)]\))\>\"", ",", " ", 
        "\"\<Equilibrium \!\(\*SubscriptBox[\(I\), \(w\)]\)\>\""}], "}"}]}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xaxis", ",", " ", 
      RowBox[{"Dw", "/.", "eqfwFWrd"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
        RowBox[{"Jmat", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
        "fw", ",", " ", "xaxis", ",", " ", "eqfwFWrd"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "rangeDs"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", " ", 
     RowBox[{"Frame", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Parasite reproduction in single \
infection(\!\(\*SubscriptBox[\(f\), \(w\)]\))\>\"", ",", " ", 
        "\"\<Equilibrium \!\(\*SubscriptBox[\(D\), \(w\)]\)\>\""}], "}"}]}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xaxis", " ", "=", " ", 
   RowBox[{"fwrangeBWrd", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"Length", "[", "eqfwBWrd", "]"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xaxis", ",", " ", 
      RowBox[{"Iw", "/.", "eqfwBWrd"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
        RowBox[{"Jmat", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
        "fw", ",", " ", "xaxis", ",", " ", "eqfwBWrd"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "rangeIs"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"xaxis", ",", " ", 
      RowBox[{"Dw", "/.", "eqfwBWrd"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
        RowBox[{"Jmat", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
        "fw", ",", " ", "xaxis", ",", " ", "eqfwBWrd"}], "]"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "rangeDs"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqfwzero", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"solsfwzero", ",", " ", 
     RowBox[{"Length", "[", "fwrange", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"fwrange", ",", " ", 
      RowBox[{"Iw", "/.", "eqfwzero"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
        RowBox[{"Jmat", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
        "fw", ",", " ", "fwrange", ",", " ", "eqfwzero"}], "]"}]}], ",", " ", 
     
     RowBox[{"PlotStyle", "->", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "rangeIs"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", "#", "}"}], "&"}], " ", "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"fwrange", ",", " ", 
      RowBox[{"Dw", "/.", "eqfwzero"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"%", ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"ListStableMark", "[", 
       RowBox[{
        RowBox[{"Jmat", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
        "fw", ",", " ", "fwrange", ",", " ", "eqfwzero"}], "]"}]}], ",", " ", 
     
     RowBox[{"PlotStyle", "->", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "rangeDs"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp0", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p0", ",", "  ", "p2", ",", " ", "p4"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp1", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p3", ",", " ", "p5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"pp0", ",", " ", "pp1"}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<bifurcation_fw_NL.jpg\>\"", ",", " ", "%"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.844853231005712*^9, 3.8448532318298693`*^9}, {
   3.844853288340657*^9, 3.844853305089642*^9}, {3.8448533507302647`*^9, 
   3.844853361059659*^9}, {3.844856407300385*^9, 3.844856524996907*^9}, {
   3.844856641991387*^9, 3.8448566586503963`*^9}, {3.844857780952753*^9, 
   3.8448578850907593`*^9}, {3.844858448112661*^9, 3.844858646271562*^9}, 
   3.844858685311946*^9, {3.844858729500495*^9, 3.8448587672545767`*^9}, {
   3.844918699512686*^9, 3.844918769925664*^9}, {3.844918871723927*^9, 
   3.8449189363827353`*^9}, {3.8449220264124327`*^9, 
   3.8449220267996883`*^9}, {3.8449224878558903`*^9, 3.844922495158272*^9}, {
   3.844922546931234*^9, 3.844922547397709*^9}, {3.844922693634354*^9, 
   3.844922693846789*^9}, {3.844922727589183*^9, 3.844922746846738*^9}, {
   3.844922809475513*^9, 3.844922811336864*^9}, {3.84492387816013*^9, 
   3.8449239091761293`*^9}, {3.8449239446632338`*^9, 3.844923961104134*^9}, {
   3.844924049060936*^9, 3.844924052820469*^9}, {3.8449240909934483`*^9, 
   3.8449241759861917`*^9}, {3.844924215683133*^9, 3.844924217458549*^9}, 
   3.844924262748769*^9, 3.8449243050248528`*^9, {3.844924410586659*^9, 
   3.8449244742574587`*^9}, {3.84492454815209*^9, 3.844924568635231*^9}, {
   3.844924629866757*^9, 3.844924802558042*^9}, {3.845107455173704*^9, 
   3.845107483204421*^9}, {3.845109112289382*^9, 3.845109133026532*^9}, {
   3.8451123834129066`*^9, 3.8451125551720963`*^9}, {3.8451128763300734`*^9, 
   3.845112906920875*^9}, {3.845112953460187*^9, 3.845113081429338*^9}, {
   3.845113197424102*^9, 3.845113437237494*^9}, {3.8451135091006403`*^9, 
   3.845113541847752*^9}, {3.845113582433773*^9, 3.8451135847597713`*^9}, {
   3.8451136801574287`*^9, 3.845113681347334*^9}, {3.845113724295203*^9, 
   3.845113749476036*^9}, {3.845113822018561*^9, 3.845113899641429*^9}, {
   3.84553946958337*^9, 3.8455395388590097`*^9}, {3.845540005898428*^9, 
   3.8455401492689533`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"90c11f72-af50-4931-9303-5ca509a5b20d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.5, 0.3103610854500825}}, {{40.5, 
           0.3103610854500825}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.55, 0.3156821652848989}}, {{40.55, 
           0.3156821652848989}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.6, 0.3209310490749601}}, {{40.6, 
           0.3209310490749601}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.65, 0.3261109897195224}}, {{40.65, 
           0.3261109897195224}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.7, 0.33122499481235407`}}, {{40.7, 
           0.33122499481235407`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.75, 0.33627585178655856`}}, {{40.75, 
           0.33627585178655856`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.8, 0.34126614983964715`}}, {{40.8, 
           0.34126614983964715`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.85, 0.34619829912833067`}}, {{40.85, 
           0.34619829912833067`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.9, 0.35107454763785306`}}, {{40.9, 
           0.35107454763785306`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.95, 0.3558969960611873}}, {{40.95, 
           0.3558969960611873}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41., 0.36066761096751343`}}, {{41., 
           0.36066761096751343`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.05, 0.3653882364946764}}, {{41.05, 
           0.3653882364946764}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.1, 0.37006060476291225`}}, {{41.1, 
           0.37006060476291225`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.15, 0.3746863451765637}}, {{41.15, 
           0.3746863451765637}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.2, 0.37926699275572884`}}, {{41.2, 
           0.37926699275572884`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.25, 0.3838039956186625}}, {{41.25, 
           0.3838039956186625}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.3, 0.3882987217183645}}, {{41.3, 
           0.3882987217183645}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.35, 0.3927524649223784}}, {{41.35, 
           0.3927524649223784}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.4, 0.3971664505121614}}, {{41.4, 
           0.3971664505121614}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.45, 0.4015418401687239}}, {{41.45, 
           0.4015418401687239}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.5, 0.405879736501599}}, {{41.5, 
           0.405879736501599}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.55, 0.41018118717158425`}}, {{41.55, 
           0.41018118717158425`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.6, 0.414447188650759}}, {{41.6, 
           0.414447188650759}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.65, 0.4186786896580348}}, {{41.65, 
           0.4186786896580348}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.7, 0.4228765943039043}}, {{41.7, 
           0.4228765943039043}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.75, 0.4270417649739226}}, {{41.75, 
           0.4270417649739226}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.8, 0.4311750249767688}}, {{41.8, 
           0.4311750249767688}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.85, 0.43527716098024183`}}, {{41.85, 
           0.43527716098024183`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.9, 0.4393489252554878}}, {{41.9, 
           0.4393489252554878}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.95, 0.4433910377475557}}, {{41.95, 
           0.4433910377475557}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42., 0.4474041879882524}}, {{42., 
           0.4474041879882524}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.05, 0.4513890368663041}}, {{42.05, 
           0.4513890368663041}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.1, 0.455346218266941}}, {{42.1, 
           0.455346218266941}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.15, 0.4592763405928954}}, {{42.15, 
           0.4592763405928954}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.2, 0.46317998817706557`}}, {{42.2, 
           0.46317998817706557`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.25, 0.4670577225961064}}, {{42.25, 
           0.4670577225961064}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.3, 0.4709100838932032}}, {{42.3, 
           0.4709100838932032}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.35, 0.47473759171783003`}}, {{42.35, 
           0.47473759171783003`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.4, 0.47854074638900485`}}, {{42.4, 
           0.47854074638900485`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.45, 0.4823200298884251}}, {{42.45, 
           0.4823200298884251}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.5, 0.4860759067890314}}, {{42.5, 
           0.4860759067890314}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.55, 0.4898088251238516}}, {{42.55, 
           0.4898088251238516}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.6, 0.49351921720013253`}}, {{42.6, 
           0.49351921720013253`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.65, 0.49720750036250216`}}, {{42.65, 
           0.49720750036250216`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.7, 0.5008740777093376}}, {{42.7, 
           0.5008740777093376}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.75, 0.504519338765575}}, {{42.75, 
           0.504519338765575}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.8, 0.5081436601152922}}, {{42.8, 
           0.5081436601152922}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.85, 0.5117474059969532}}, {{42.85, 
           0.5117474059969532}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.9, 0.5153309288638157}}, {{42.9, 
           0.5153309288638157}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.95, 0.518894569912206}}, {{42.95, 
           0.518894569912206}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43., 0.5224386595797088}}, {{43., 
           0.5224386595797088}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.05, 0.5259635180154185}}, {{43.05, 
           0.5259635180154185}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.1, 0.5294694555240819}}, {{43.1, 
           0.5294694555240819}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.15, 0.5329567729859477}}, {{43.15, 
           0.5329567729859477}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.2, 0.5364257622539296}}, {{43.2, 
           0.5364257622539296}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.25, 0.539876706529438}}, {{43.25, 
           0.539876706529438}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.3, 0.5433098807185148}}, {{43.3, 
           0.5433098807185148}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.35, 0.546725551769182}}, {{43.35, 
           0.546725551769182}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.4, 0.5501239789915174}}, {{43.4, 
           0.5501239789915174}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.45, 0.5535054143613647}}, {{43.45, 
           0.5535054143613647}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.5, 0.5568701028086898}}, {{43.5, 
           0.5568701028086898}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.55, 0.5602182824915312}}, {{43.55, 
           0.5602182824915312}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.6, 0.5635501850564995}}, {{43.6, 
           0.5635501850564995}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.65, 0.5668660358865061}}, {{43.65, 
           0.5668660358865061}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.7, 0.5701660543365727}}, {{43.7, 
           0.5701660543365727}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.75, 0.5734504539582707}}, {{43.75, 
           0.5734504539582707}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.8, 0.5767194427136803}}, {{43.8, 
           0.5767194427136803}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.85, 0.579973223179299}}, {{43.85, 
           0.579973223179299}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.9, 0.5832119927404256}}, {{43.9, 
           0.5832119927404256}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.95, 0.5864359437767509}}, {{43.95, 
           0.5864359437767509}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44., 0.5896452638394685}}, {{44., 
           0.5896452638394685}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.05, 0.5928401358204205}}, {{44.05, 
           0.5928401358204205}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.1, 0.5960207381137634}}, {{44.1, 
           0.5960207381137634}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.15, 0.5991872447704721}}, {{44.15, 
           0.5991872447704721}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.2, 0.6023398256461305}}, {{44.2, 
           0.6023398256461305}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.25, 0.6054786465423375}}, {{44.25, 
           0.6054786465423375}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.3, 0.6086038693420633}}, {{44.3, 
           0.6086038693420633}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.35, 0.6117156521392556}}, {{44.35, 
           0.6117156521392556}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.4, 0.6148141493629914}}, {{44.4, 
           0.6148141493629914}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.45, 0.6178995118965612}}, {{44.45, 
           0.6178995118965612}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.5, 0.6209718871914863}}, {{44.5, 
           0.6209718871914863}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.55, 0.6240314193770109}}, {{44.55, 
           0.6240314193770109}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.6, 0.627078249365118}}, {{44.6, 
           0.627078249365118}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.65, 0.6301125149513284}}, {{44.65, 
           0.6301125149513284}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.7, 0.6331343509114511}}, {{44.7, 
           0.6331343509114511}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.75, 0.6361438890946887}}, {{44.75, 
           0.6361438890946887}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.8, 0.6391412585128092}}, {{44.8, 
           0.6391412585128092}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.85, 0.642126585426208}}, {{44.85, 
           0.642126585426208}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.9, 0.6450999934263746}}, {{44.9, 
           0.6450999934263746}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.95, 0.6480616035153928}}, {{44.95, 
           0.6480616035153928}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45., 0.6510115341824001}}, {{45., 
           0.6510115341824001}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.05, 0.6539499014771332}}, {{45.05, 
           0.6539499014771332}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.1, 0.6568768190808021}}, {{45.1, 
           0.6568768190808021}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.15, 0.6597923983743198}}, {{45.15, 
           0.6597923983743198}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.2, 0.6626967485040978}}, {{45.2, 
           0.6626967485040978}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.25, 0.6655899764453456}}, {{45.25, 
           0.6655899764453456}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.3, 0.6684721870631936}}, {{45.3, 
           0.6684721870631936}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.35, 0.6713434831716335}}, {{45.35, 
           0.6713434831716335}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.4, 0.6742039655902904}}, {{45.4, 
           0.6742039655902904}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.45, 0.6770537331993126}}, {{45.45, 
           0.6770537331993126}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.5, 0.6798928829922272}}, {{45.5, 
           0.6798928829922272}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.55, 0.6827215101270923}}, {{45.55, 
           0.6827215101270923}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.6, 0.6855397079758142}}, {{45.6, 
           0.6855397079758142}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.65, 0.6883475681718177}}, {{45.65, 
           0.6883475681718177}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.7, 0.6911451806560777}}, {{45.7, 
           0.6911451806560777}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.75, 0.693932633721635}}, {{45.75, 
           0.693932633721635}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.8, 0.6967100140566336}}, {{45.8, 
           0.6967100140566336}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.85, 0.6994774067859189}}, {{45.85, 
           0.6994774067859189}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.9, 0.7022348955112478}}, {{45.9, 
           0.7022348955112478}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.95, 0.7049825623502656}}, {{45.95, 
           0.7049825623502656}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46., 0.7077204879741281}}, {{46., 
           0.7077204879741281}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.05, 0.7104487516440142}}, {{46.05, 
           0.7104487516440142}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.1, 0.7131674312463465}}, {{46.1, 
           0.7131674312463465}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.15, 0.7158766033270632}}, {{46.15, 
           0.7158766033270632}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.2, 0.7185763431246461}}, {{46.2, 
           0.7185763431246461}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.25, 0.7212667246022556}}, {{46.25, 
           0.7212667246022556}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.3, 0.7239478204787565}}, {{46.3, 
           0.7239478204787565}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.35, 0.7266197022588807}}, {{46.35, 
           0.7266197022588807}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.4, 0.7292824402624117}}, {{46.4, 
           0.7292824402624117}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.45, 0.7319361036524661}}, {{46.45, 
           0.7319361036524661}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.5, 0.7345807604630399}}, {{46.5, 
           0.7345807604630399}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.55, 0.7372164776255379}}, {{46.55, 
           0.7372164776255379}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.6, 0.7398433209946966}}, {{46.6, 
           0.7398433209946966}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.65, 0.7424613553736328}}, {{46.65, 
           0.7424613553736328}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.7, 0.7450706445381644}}, {{46.7, 
           0.7450706445381644}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.75, 0.7476712512605094}}, {{46.75, 
           0.7476712512605094}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.8, 0.7502632373321493}}, {{46.8, 
           0.7502632373321493}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.85, 0.7528466635861645}}, {{46.85, 
           0.7528466635861645}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.9, 0.7554215899188874}}, {{46.9, 
           0.7554215899188874}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.95, 0.7579880753108528}}, {{46.95, 
           0.7579880753108528}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47., 0.7605461778473601}}, {{47., 
           0.7605461778473601}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.05, 0.763095954738224}}, {{47.05, 
           0.763095954738224}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.1, 0.7656374623371424}}, {{47.1, 
           0.7656374623371424}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.15, 0.7681707561604278}}, {{47.15, 
           0.7681707561604278}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.2, 0.7706958909052988}}, {{47.2, 
           0.7706958909052988}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.25, 0.7732129204675816}}, {{47.25, 
           0.7732129204675816}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.3, 0.7757218979590135}}, {{47.3, 
           0.7757218979590135}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.35, 0.778222875724056}}, {{47.35, 
           0.778222875724056}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.4, 0.7807159053561677}}, {{47.4, 
           0.7807159053561677}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.45, 0.7832010377138181}}, {{47.45, 
           0.7832010377138181}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.5, 0.7856783229358743}}, {{47.5, 
           0.7856783229358743}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.55, 0.7881478104567446}}, {{47.55, 
           0.7881478104567446}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.6, 0.7906095490210014}}, {{47.6, 
           0.7906095490210014}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.65, 0.7930635866977338}}, {{47.65, 
           0.7930635866977338}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.7, 0.7955099708944261}}, {{47.7, 
           0.7955099708944261}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.75, 0.7979487483705162}}, {{47.75, 
           0.7979487483705162}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.8, 0.8003799652506542}}, {{47.8, 
           0.8003799652506542}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.85, 0.8028036670375253}}, {{47.85, 
           0.8028036670375253}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.9, 0.805219898624435}}, {{47.9, 
           0.805219898624435}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.95, 0.8076287043075154}}, {{47.95, 
           0.8076287043075154}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48., 0.8100301277976467}}, {{48., 
           0.8100301277976467}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.05, 0.8124242122321004}}, {{48.05, 
           0.8124242122321004}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.1, 0.8148110001858596}}, {{48.1, 
           0.8148110001858596}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.15, 0.8171905336826739}}, {{48.15, 
           0.8171905336826739}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.2, 0.8195628542058477}}, {{48.2, 
           0.8195628542058477}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.25, 0.8219280027087261}}, {{48.25, 
           0.8219280027087261}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.3, 0.8242860196250187}}, {{48.3, 
           0.8242860196250187}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.35, 0.8266369448787539}}, {{48.35, 
           0.8266369448787539}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.4, 0.828980817894068}}, {{48.4, 
           0.828980817894068}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.45, 0.8313176776047527}}, {{48.45, 
           0.8313176776047527}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.5, 0.8336475624635534}}, {{48.5, 
           0.8336475624635534}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.55, 0.8359705104512483}}, {{48.55, 
           0.8359705104512483}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.6, 0.8382865590855644}}, {{48.6, 
           0.8382865590855644}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.65, 0.8405957454297889}}, {{48.65, 
           0.8405957454297889}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.7, 0.842898106101249}}, {{48.7, 
           0.842898106101249}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.75, 0.845193677279594}}, {{48.75, 
           0.845193677279594}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.8, 0.8474824947148447}}, {{48.8, 
           0.8474824947148447}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.85, 0.8497645937353179}}, {{48.85, 
           0.8497645937353179}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.9, 0.8520400092552939}}, {{48.9, 
           0.8520400092552939}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.95, 0.8543087757825496}}, {{48.95, 
           0.8543087757825496}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49., 0.8565709274257742}}, {{49., 
           0.8565709274257742}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.05, 0.8588264979016775}}, {{49.05, 
           0.8588264979016775}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.1, 0.861075520542099}}, {{49.1, 
           0.861075520542099}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.15, 0.8633180283008323}}, {{49.15, 
           0.8633180283008323}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.2, 0.8655540537603854}}, {{49.2, 
           0.8655540537603854}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.25, 0.8677836291385259}}, {{49.25, 
           0.8677836291385259}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.3, 0.8700067862947015}}, {{49.3, 
           0.8700067862947015}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.35, 0.8722235567363703}}, {{49.35, 
           0.8722235567363703}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.4, 0.8744339716251036}}, {{49.4, 
           0.8744339716251036}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.45, 0.8766380617826244}}, {{49.45, 
           0.8766380617826244}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.5, 0.8788358576967015}}, {{49.5, 
           0.8788358576967015}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.55, 0.881027389526868}}, {{49.55, 
           0.881027389526868}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.6, 0.8832126871101142}}, {{49.6, 
           0.8832126871101142}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.65, 0.8853917799663447}}, {{49.65, 
           0.8853917799663447}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.7, 0.8875646973038245}}, {{49.7, 
           0.8875646973038245}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.75, 0.8897314680244126}}, {{49.75, 
           0.8897314680244126}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.8, 0.8918921207287864}}, {{49.8, 
           0.8918921207287864}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.85, 0.8940466837214602}}, {{49.85, 
           0.8940466837214602}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.9, 0.8961951850157611}}, {{49.9, 
           0.8961951850157611}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.95, 0.8983376523386788}}, {{49.95, 
           0.8983376523386788}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50., 0.900474113135622}}, {{50., 
           0.900474113135622}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.05, 0.9026045945750725}}, {{50.05, 
           0.9026045945750725}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.1, 0.9047291235531543}}, {{50.1, 
           0.9047291235531543}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.15, 0.9068477266980616}}, {{50.15, 
           0.9068477266980616}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.2, 0.9089604303744874}}, {{50.2, 
           0.9089604303744874}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.25, 0.9110672606878611}}, {{50.25, 
           0.9110672606878611}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.3, 0.9131682434885826}}, {{50.3, 
           0.9131682434885826}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.35, 0.9152634043761217}}, {{50.35, 
           0.9152634043761217}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.4, 0.9173527687030534}}, {{50.4, 
           0.9173527687030534}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.45, 0.919436361578986}}, {{50.45, 
           0.919436361578986}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.5, 0.9215142078745115}}, {{50.5, 
           0.9215142078745115}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.55, 0.9235863322248762}}, {{50.55, 
           0.9235863322248762}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.6, 0.925652759033823}}, {{50.6, 
           0.925652759033823}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.65, 0.9277135124771814}}, {{50.65, 
           0.9277135124771814}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.7, 0.929768616506442}}, {{50.7, 
           0.929768616506442}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.75, 0.931818094852275}}, {{50.75, 
           0.931818094852275}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.8, 0.9338619710279862}}, {{50.8, 
           0.9338619710279862}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.85, 0.935900268332844}}, {{50.85, 
           0.935900268332844}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.9, 0.9379330098554383}}, {{50.9, 
           0.9379330098554383}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.95, 0.9399602184768855}}, {{50.95, 
           0.9399602184768855}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51., 0.9419819168740292}}, {{51., 
           0.9419819168740292}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.05, 0.9439981275225612}}, {{51.05, 
           0.9439981275225612}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.1, 0.9460088727000814}}, {{51.1, 
           0.9460088727000814}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.15, 0.9480141744890725}}, {{51.15, 
           0.9480141744890725}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.2, 0.9500140547799218}}, {{51.2, 
           0.9500140547799218}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.25, 0.9520085352737127}}, {{51.25, 
           0.9520085352737127}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.3, 0.9539976374851423}}, {{51.3, 
           0.9539976374851423}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.35, 0.9559813827452869}}, {{51.35, 
           0.9559813827452869}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.4, 0.957959792204297}}, {{51.4, 
           0.957959792204297}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.45, 0.9599328868341276}}, {{51.45, 
           0.9599328868341276}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.5, 0.9619006874311407}}, {{51.5, 
           0.9619006874311407}}}]}}, {{}, {}}}, {{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.5, 0.3103610854500825}}, {{40.5, 
           0.3103610854500825}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.45, 0.30496428240309165`}}, {{40.45, 
           0.30496428240309165`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.4, 0.2994879211945974}}, {{40.4, 
           0.2994879211945974}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.35, 0.2939278201227539}}, {{40.35, 
           0.2939278201227539}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.3, 0.2882794051783991}}, {{40.3, 
           0.2882794051783991}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.25, 0.28253765649349927`}}, {{40.25, 
           0.28253765649349927`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.2, 0.2766970450064922}}, {{40.2, 
           0.2766970450064922}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.15, 0.27075145706754783`}}, {{40.15, 
           0.27075145706754783`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.1, 0.26469410405145194`}}, {{40.1, 
           0.26469410405145194`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.05, 0.25851741316515614`}}, {{40.05, 
           0.25851741316515614`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40., 0.2522128944339576}}, {{40., 
           0.2522128944339576}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.95, 0.24577097718888813`}}, {{39.95, 
           0.24577097718888813`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.9, 0.23918080704478412`}}, {{39.9, 
           0.23918080704478412`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.85, 0.23242999103418302`}}, {{39.85, 
           0.23242999103418302`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.8, 0.22550427373249346`}}, {{39.8, 
           0.22550427373249346`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.75, 0.2183871200622969}}, {{39.75, 
           0.2183871200622969}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.7, 0.21105916964025434`}}, {{39.7, 
           0.21105916964025434`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.65, 0.20349751073603092`}}, {{39.65, 
           0.20349751073603092`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.6, 0.19567469511131366`}}, {{39.6, 
           0.19567469511131366`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.55, 0.18755737085305318`}}, {{39.55, 
           0.18755737085305318`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.5, 0.17910433485763586`}}, {{39.5, 
           0.17910433485763586`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.45, 0.17026367204115986`}}, {{39.45, 
           0.17026367204115986`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.4, 0.16096839593056614`}}, {{39.4, 
           0.16096839593056614`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.35, 0.1511295023346463}}, {{39.35, 
           0.1511295023346463}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.3, 0.14062426860537847`}}, {{39.3, 
           0.14062426860537847`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.25, 0.12927508896239256`}}, {{39.25, 
           0.12927508896239256`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.2, 0.11680737248891308`}}, {{39.2, 
           0.11680737248891308`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.15, 0.10275374066847873`}}, {{39.15, 
           0.10275374066847873`}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.1, 0.08618548448817426}}, {{39.1, 
           0.08618548448817426}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.05, 0.06460156534506868}}, {{39.05, 
           0.06460156534506868}}}]}}, {{}, {}}}, {{}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32., 0.}}, {{32., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32.3, 0.}}, {{32.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32.6, 0.}}, {{32.6, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32.9, 0.}}, {{32.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{33.2, 0.}}, {{33.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{33.5, 0.}}, {{33.5, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{33.8, 0.}}, {{33.8, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{34.1, 0.}}, {{34.1, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{34.4, 0.}}, {{34.4, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{34.7, 0.}}, {{34.7, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35., 0.}}, {{35., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35.3, 0.}}, {{35.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35.6, 0.}}, {{35.6, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35.9, 0.}}, {{35.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{36.2, 0.}}, {{36.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{36.5, 0.}}, {{36.5, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{36.8, 0.}}, {{36.8, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{37.1, 0.}}, {{37.1, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{37.4, 0.}}, {{37.4, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{37.7, 0.}}, {{37.7, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38., 0.}}, {{38., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38.3, 0.}}, {{38.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38.6, 0.}}, {{38.6, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38.9, 0.}}, {{38.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{39.2, 0.}}, {{39.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{39.5, 0.}}, {{39.5, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{39.8, 0.}}, {{39.8, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{40.1, 0.}}, {{40.1, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{40.4, 0.}}, {{40.4, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{40.7, 0.}}, {{40.7, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41., 0.}}, {{41., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41.3, 0.}}, {{41.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41.6, 0.}}, {{41.6, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41.9, 0.}}, {{41.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{42.2, 0.}}, {{42.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{42.5, 0.}}, {{42.5, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{42.8, 0.}}, {{42.8, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{43.1, 0.}}, {{43.1, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{43.4, 0.}}, {{43.4, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{43.7, 0.}}, {{43.7, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44., 0.}}, {{44., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44.3, 0.}}, {{44.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44.6, 0.}}, {{44.6, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44.9, 0.}}, {{44.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{45.2, 0.}}, {{45.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{45.5, 0.}}, {{45.5, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{45.8, 0.}}, {{45.8, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{46.1, 0.}}, {{46.1, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{46.4, 0.}}, {{46.4, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{46.7, 0.}}, {{46.7, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47., 0.}}, {{47., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47.3, 0.}}, {{47.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47.6, 0.}}, {{47.6, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47.9, 0.}}, {{47.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{48.2, 0.}}, {{48.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{48.5, 0.}}, {{48.5, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{48.8, 0.}}, {{48.8, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{49.099999999999994`, 0.}}, {{
           49.099999999999994`, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{49.4, 0.}}, {{49.4, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{49.7, 0.}}, {{49.7, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50., 0.}}, {{50., 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50.3, 0.}}, {{50.3, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50.599999999999994`, 0.}}, {{
           50.599999999999994`, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50.9, 0.}}, {{50.9, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{51.2, 0.}}, {{51.2, 0.}}}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{51.5, 0.}}, {{51.5, 0.}}}]}}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{32., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{
         FormBox[
         "\"Equilibrium \\!\\(\\*SubscriptBox[\\(I\\), \\(w\\)]\\)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"Parasite reproduction in single \
infection(\\!\\(\\*SubscriptBox[\\(f\\), \\(w\\)]\\))\"", TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{32., 51.5}, {-0.1, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.5, 0.008434519849083872}}, {{40.5, 
           0.008434519849083872}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.55, 0.008538804453918974}}, {{40.55, 
           0.008538804453918974}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.6, 0.00864053239996721}}, {{40.6, 
           0.00864053239996721}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.65, 0.008739821468683353}}, {{40.65, 
           0.008739821468683353}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.7, 0.008836780718516951}}, {{40.7, 
           0.008836780718516951}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.75, 0.008931511371380773}}, {{40.75, 
           0.008931511371380773}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.8, 0.009024107586123485}}, {{40.8, 
           0.009024107586123485}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.85, 0.009114657136144242}}, {{40.85, 
           0.009114657136144242}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.9, 0.00920324200531419}}, {{40.9, 
           0.00920324200531419}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.95, 0.009289938913949742}}, {{40.95, 
           0.009289938913949742}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41., 0.009374819784631606}}, {{41., 
           0.009374819784631606}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.05, 0.009457952156091591}}, {{41.05, 
           0.009457952156091591}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.1, 0.00953939955208593}}, {{41.1, 
           0.00953939955208593}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.15, 0.009619221811106658}}, {{41.15, 
           0.009619221811106658}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.2, 0.009697475381909617}}, {{41.2, 
           0.009697475381909617}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.25, 0.009774213589101953}}, {{41.25, 
           0.009774213589101953}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.3, 0.009849486872422472}}, {{41.3, 
           0.009849486872422472}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.35, 0.009923343002841187}}, {{41.35, 
           0.009923343002841187}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.4, 0.00999582727816652}}, {{41.4, 
           0.00999582727816652}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.45, 0.010066982700499414`}}, {{41.45, 
           0.010066982700499414`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.5, 0.010136850137549053`}}, {{41.5, 
           0.010136850137549053`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.55, 0.01020546846957964}}, {{41.55, 
           0.01020546846957964}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.6, 0.010272874723523184`}}, {{41.6, 
           0.010272874723523184`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.65, 0.010339104195605868`}}, {{41.65, 
           0.010339104195605868`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.7, 0.010404190563672977`}}, {{41.7, 
           0.010404190563672977`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.75, 0.010468165990253705`}}, {{41.75, 
           0.010468165990253705`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.8, 0.010531061217281026`}}, {{41.8, 
           0.010531061217281026`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.85, 0.010592905653285672`}}, {{41.85, 
           0.010592905653285672`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.9, 0.010653727453782688`}}, {{41.9, 
           0.010653727453782688`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{41.95, 0.010713553595490371`}}, {{41.95, 
           0.010713553595490371`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42., 0.010772409944948824`}}, {{42., 
           0.010772409944948824`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.05, 0.010830321322058465`}}, {{42.05, 
           0.010830321322058465`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.1, 0.010887311558979424`}}, {{42.1, 
           0.010887311558979424`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.15, 0.010943403554808358`}}, {{42.15, 
           0.010943403554808358`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.2, 0.010998619326396772`}}, {{42.2, 
           0.010998619326396772`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.25, 0.011052980055639382`}}, {{42.25, 
           0.011052980055639382`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.3, 0.011106506133526735`}}, {{42.3, 
           0.011106506133526735`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.35, 0.011159217201234022`}}, {{42.35, 
           0.011159217201234022`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.4, 0.011211132188482308`}}, {{42.4, 
           0.011211132188482308`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.45, 0.011262269349394491`}}, {{42.45, 
           0.011262269349394491`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.5, 0.011312646296043642`}}, {{42.5, 
           0.011312646296043642`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.55, 0.011362280029869649`}}, {{42.55, 
           0.011362280029869649`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.6, 0.011411186971134748`}}, {{42.6, 
           0.011411186971134748`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.65, 0.011459382986559019`}}, {{42.65, 
           0.011459382986559019`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.7, 0.011506883415277646`}}, {{42.7, 
           0.011506883415277646`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.75, 0.01155370309323955}}, {{42.75, 
           0.01155370309323955}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.8, 0.01159985637616307}}, {{42.8, 
           0.01159985637616307}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.85, 0.011645357161151986`}}, {{42.85, 
           0.011645357161151986`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.9, 0.011690218907063753`}}, {{42.9, 
           0.011690218907063753`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{42.95, 0.011734454653721688`}}, {{42.95, 
           0.011734454653721688`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43., 0.011778077040047451`}}, {{43., 
           0.011778077040047451`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.05, 0.011821098321188803`}}, {{43.05, 
           0.011821098321188803`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.1, 0.011863530384709227`}}, {{43.1, 
           0.011863530384709227`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.15, 0.011905384765902778`}}, {{43.15, 
           0.011905384765902778`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.2, 0.01194667266229152}}, {{43.2, 
           0.01194667266229152}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.25, 0.011987404947356515`}}, {{43.25, 
           0.011987404947356515`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.3, 0.012027592183555633`}}, {{43.3, 
           0.012027592183555633`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.35, 0.012067244634667677`}}, {{43.35, 
           0.012067244634667677`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.4, 0.012106372277510328`}}, {{43.4, 
           0.012106372277510328`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.45, 0.012144984813067833`}}, {{43.45, 
           0.012144984813067833`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.5, 0.012183091677064618`}}, {{43.5, 
           0.012183091677064618`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.55, 0.012220702050018477`}}, {{43.55, 
           0.012220702050018477`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.6, 0.012257824866805881`}}, {{43.6, 
           0.012257824866805881`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.65, 0.012294468825766226`}}, {{43.65, 
           0.012294468825766226`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.7, 0.012330642397373647`}}, {{43.7, 
           0.012330642397373647`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.75, 0.012366353832498941`}}, {{43.75, 
           0.012366353832498941`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.8, 0.012401611170288937`}}, {{43.8, 
           0.012401611170288937`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.85, 0.012436422245682156`}}, {{43.85, 
           0.012436422245682156`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.9, 0.012470794696580502`}}, {{43.9, 
           0.012470794696580502`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{43.95, 0.012504735970699284`}}, {{43.95, 
           0.012504735970699284`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44., 0.012538253332110338`}}, {{44., 
           0.012538253332110338`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.05, 0.01257135386749582}}, {{44.05, 
           0.01257135386749582}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.1, 0.012604044492128989`}}, {{44.1, 
           0.012604044492128989`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.15, 0.01263633195559531}}, {{44.15, 
           0.01263633195559531}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.2, 0.012668222847268425`}}, {{44.2, 
           0.012668222847268425`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.25, 0.012699723601553645`}}, {{44.25, 
           0.012699723601553645`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.3, 0.012730840502910791`}}, {{44.3, 
           0.012730840502910791`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.35, 0.012761579690667567`}}, {{44.35, 
           0.012761579690667567`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.4, 0.012791947163634224`}}, {{44.4, 
           0.012791947163634224`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.45, 0.012821948784530947`}}, {{44.45, 
           0.012821948784530947`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.5, 0.012851590284233567`}}, {{44.5, 
           0.012851590284233567`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.55, 0.012880877265850977`}}, {{44.55, 
           0.012880877265850977`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.6, 0.012909815208639746`}}, {{44.6, 
           0.012909815208639746`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.65, 0.01293840947176446}}, {{44.65, 
           0.01293840947176446}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.7, 0.012966665297910664`}}, {{44.7, 
           0.012966665297910664`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.75, 0.012994587816760541`}}, {{44.75, 
           0.012994587816760541`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.8, 0.013022182048330855`}}, {{44.8, 
           0.013022182048330855`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.85, 0.01304945290618921}}, {{44.85, 
           0.01304945290618921}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.9, 0.01307640520054471}}, {{44.9, 
           0.01307640520054471}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{44.95, 0.013103043641225852`}}, {{44.95, 
           0.013103043641225852`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45., 0.013129372840547434`}}, {{45., 
           0.013129372840547434`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.05, 0.01315539731607151}}, {{45.05, 
           0.01315539731607151}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.1, 0.013181121493268666`}}, {{45.1, 
           0.013181121493268666`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.15, 0.013206549708082702`}}, {{45.15, 
           0.013206549708082702`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.2, 0.013231686209404313`}}, {{45.2, 
           0.013231686209404313`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.25, 0.013256535161455302`}}, {{45.25, 
           0.013256535161455302`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.3, 0.013281100646090189`}}, {{45.3, 
           0.013281100646090189`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.35, 0.013305386665017438`}}, {{45.35, 
           0.013305386665017438`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.4, 0.013329397141942435`}}, {{45.4, 
           0.013329397141942435`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.45, 0.013353135924638382`}}, {{45.45, 
           0.013353135924638382`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.5, 0.013376606786944762`}}, {{45.5, 
           0.013376606786944762`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.55, 0.013399813430699998`}}, {{45.55, 
           0.013399813430699998`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.6, 0.013422759487607972`}}, {{45.6, 
           0.013422759487607972`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.65, 0.013445448521042869`}}, {{45.65, 
           0.013445448521042869`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.7, 0.013467884027793843`}}, {{45.7, 
           0.013467884027793843`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.75, 0.013490069439752929`}}, {{45.75, 
           0.013490069439752929`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.8, 0.013512008125547923`}}, {{45.8, 
           0.013512008125547923`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.85, 0.013533703392122301`}}, {{45.85, 
           0.013533703392122301`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.9, 0.01355515848626405}}, {{45.9, 
           0.01355515848626405}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{45.95, 0.013576376596086931`}}, {{45.95, 
           0.013576376596086931`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46., 0.013597360852463535`}}, {{46., 
           0.013597360852463535`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.05, 0.013618114330414738`}}, {{46.05, 
           0.013618114330414738`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.1, 0.013638640050454082`}}, {{46.1, 
           0.013638640050454082`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.15, 0.013658940979892878`}}, {{46.15, 
           0.013658940979892878`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.2, 0.013679020034102858`}}, {{46.2, 
           0.013679020034102858`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.25, 0.01369888007774227}}, {{46.25, 
           0.01369888007774227}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.3, 0.01371852392594326}}, {{46.3, 
           0.01371852392594326}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.35, 0.01373795434546477}}, {{46.35, 
           0.01373795434546477}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.4, 0.013757174055810294`}}, {{46.4, 
           0.013757174055810294`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.45, 0.013776185730312203`}}, {{46.45, 
           0.013776185730312203`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.5, 0.01379499199718577}}, {{46.5, 
           0.01379499199718577}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.55, 0.013813595440549681`}}, {{46.55, 
           0.013813595440549681`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.6, 0.013831998601419445`}}, {{46.6, 
           0.013831998601419445`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.65, 0.013850203978670641`}}, {{46.65, 
           0.013850203978670641`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.7, 0.013868214029974625`}}, {{46.7, 
           0.013868214029974625`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.75, 0.013886031172708816`}}, {{46.75, 
           0.013886031172708816`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.8, 0.013903657784839147`}}, {{46.8, 
           0.013903657784839147`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.85, 0.013921096205779556`}}, {{46.85, 
           0.013921096205779556`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.9, 0.013938348737226821`}}, {{46.9, 
           0.013938348737226821`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{46.95, 0.013955417643971077`}}, {{46.95, 
           0.013955417643971077`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47., 0.013972305154686764`}}, {{47., 
           0.013972305154686764`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.05, 0.013989013462698692`}}, {{47.05, 
           0.013989013462698692`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.1, 0.014005544726729546`}}, {{47.1, 
           0.014005544726729546`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.15, 0.014021901071625877`}}, {{47.15, 
           0.014021901071625877`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.2, 0.014038084589065488`}}, {{47.2, 
           0.014038084589065488`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.25, 0.01405409733824486}}, {{47.25, 
           0.01405409733824486}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.3, 0.014069941346549356`}}, {{47.3, 
           0.014069941346549356`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.35, 0.014085618610205491`}}, {{47.35, 
           0.014085618610205491`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.4, 0.014101131094914897`}}, {{47.4, 
           0.014101131094914897`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.45, 0.014116480736474106`}}, {{47.45, 
           0.014116480736474106`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.5, 0.014131669441375618`}}, {{47.5, 
           0.014131669441375618`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.55, 0.01414669908739564}}, {{47.55, 
           0.01414669908739564}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.6, 0.014161571524165126`}}, {{47.6, 
           0.014161571524165126`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.65, 0.014176288573727824`}}, {{47.65, 
           0.014176288573727824`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.7, 0.014190852031082784`}}, {{47.7, 
           0.014190852031082784`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.75, 0.014205263664713787`}}, {{47.75, 
           0.014205263664713787`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.8, 0.014219525217106125`}}, {{47.8, 
           0.014219525217106125`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.85, 0.014233638405249268`}}, {{47.85, 
           0.014233638405249268`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.9, 0.014247604921128282`}}, {{47.9, 
           0.014247604921128282`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{47.95, 0.014261426432202323`}}, {{47.95, 
           0.014261426432202323`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48., 0.014275104581871728`}}, {{48., 
           0.014275104581871728`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.05, 0.014288640989934022`}}, {{48.05, 
           0.014288640989934022`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.1, 0.014302037253028456`}}, {{48.1, 
           0.014302037253028456`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.15, 0.01431529494507004}}, {{48.15, 
           0.01431529494507004}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.2, 0.014328415617673252`}}, {{48.2, 
           0.014328415617673252`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.25, 0.014341400800565205`}}, {{48.25, 
           0.014341400800565205`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.3, 0.014354252001990232`}}, {{48.3, 
           0.014354252001990232`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.35, 0.014366970709103368`}}, {{48.35, 
           0.014366970709103368`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.4, 0.014379558388355668`}}, {{48.4, 
           0.014379558388355668`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.45, 0.01439201648587038}}, {{48.45, 
           0.01439201648587038}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.5, 0.014404346427810197`}}, {{48.5, 
           0.014404346427810197`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.55, 0.014416549620736038`}}, {{48.55, 
           0.014416549620736038`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.6, 0.014428627451958262`}}, {{48.6, 
           0.014428627451958262`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.65, 0.014440581289878707`}}, {{48.65, 
           0.014440581289878707`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.7, 0.014452412484325777`}}, {{48.7, 
           0.014452412484325777`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.75, 0.014464122366882031`}}, {{48.75, 
           0.014464122366882031`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.8, 0.014475712251203936`}}, {{48.8, 
           0.014475712251203936`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.85, 0.01448718343333511}}, {{48.85, 
           0.01448718343333511}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.9, 0.014498537192011836`}}, {{48.9, 
           0.014498537192011836`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{48.95, 0.01450977478896215}}, {{48.95, 
           0.01450977478896215}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49., 0.014520897469199212`}}, {{49., 
           0.014520897469199212`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.05, 0.014531906461306327`}}, {{49.05, 
           0.014531906461306327`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.1, 0.014542802977717916`}}, {{49.1, 
           0.014542802977717916`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.15, 0.014553588214992754`}}, {{49.15, 
           0.014553588214992754`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.2, 0.014564263354082433`}}, {{49.2, 
           0.014564263354082433`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.25, 0.014574829560593262`}}, {{49.25, 
           0.014574829560593262`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.3, 0.01458528798504283}}, {{49.3, 
           0.01458528798504283}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.35, 0.014595639763111689`}}, {{49.35, 
           0.014595639763111689`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.4, 0.014605886015888737`}}, {{49.4, 
           0.014605886015888737`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.45, 0.014616027850112161`}}, {{49.45, 
           0.014616027850112161`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.5, 0.014626066358405252`}}, {{49.5, 
           0.014626066358405252`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.55, 0.014636002619506655`}}, {{49.55, 
           0.014636002619506655`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.6, 0.014645837698497094`}}, {{49.6, 
           0.014645837698497094`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.65, 0.014655572647019955`}}, {{49.65, 
           0.014655572647019955`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.7, 0.014665208503498704`}}, {{49.7, 
           0.014665208503498704`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.75, 0.014674746293348574`}}, {{49.75, 
           0.014674746293348574`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.8, 0.014684187029185315`}}, {{49.8, 
           0.014684187029185315`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.85, 0.014693531711028366`}}, {{49.85, 
           0.014693531711028366`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.9, 0.014702781326500871`}}, {{49.9, 
           0.014702781326500871`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{49.95, 0.014711936851025278`}}, {{49.95, 
           0.014711936851025278`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50., 0.014720999248015187`}}, {{50., 
           0.014720999248015187`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.05, 0.014729969469063298`}}, {{50.05, 
           0.014729969469063298`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.1, 0.01473884845412581}}, {{50.1, 
           0.01473884845412581}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.15, 0.014747637131702507`}}, {{50.15, 
           0.014747637131702507`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.2, 0.014756336419014571`}}, {{50.2, 
           0.014756336419014571`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.25, 0.014764947222177574`}}, {{50.25, 
           0.014764947222177574`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.3, 0.014773470436372126`}}, {{50.3, 
           0.014773470436372126`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.35, 0.014781906946010663`}}, {{50.35, 
           0.014781906946010663`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.4, 0.014790257624901179`}}, {{50.4, 
           0.014790257624901179`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.45, 0.014798523336407549`}}, {{50.45, 
           0.014798523336407549`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.5, 0.014806704933608006`}}, {{50.5, 
           0.014806704933608006`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.55, 0.014814803259448056`}}, {{50.55, 
           0.014814803259448056`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.6, 0.014822819146893621`}}, {{50.6, 
           0.014822819146893621`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.65, 0.014830753419079032`}}, {{50.65, 
           0.014830753419079032`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.7, 0.014838606889452956`}}, {{50.7, 
           0.014838606889452956`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.75, 0.014846380361921704`}}, {{50.75, 
           0.014846380361921704`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.8, 0.014854074630990071`}}, {{50.8, 
           0.014854074630990071`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.85, 0.014861690481898608`}}, {{50.85, 
           0.014861690481898608`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.9, 0.014869228690759762`}}, {{50.9, 
           0.014869228690759762`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{50.95, 0.01487669002469022}}, {{50.95, 
           0.01487669002469022}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51., 0.014884075241941653`}}, {{51., 
           0.014884075241941653`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.05, 0.014891385092028791`}}, {{51.05, 
           0.014891385092028791`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.1, 0.014898620315855177`}}, {{51.1, 
           0.014898620315855177`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.15, 0.014905781645836278`}}, {{51.15, 
           0.014905781645836278`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.2, 0.014912869806021705`}}, {{51.2, 
           0.014912869806021705`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.25, 0.014919885512213021`}}, {{51.25, 
           0.014919885512213021`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.3, 0.014926829472081729`}}, {{51.3, 
           0.014926829472081729`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.35, 0.01493370238528391}}, {{51.35, 
           0.01493370238528391}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.4, 0.014940504943572583`}}, {{51.4, 
           0.014940504943572583`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.45, 0.014947237830909158`}}, {{51.45, 
           0.014947237830909158`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.009166666666666668], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{51.5, 0.014953901723571984`}}, {{51.5, 
           0.014953901723571984`}}}]}}, {{}, {}}}, {{}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.5, 0.008434519849083872}}, {{40.5, 
           0.008434519849083872}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.45, 0.00832755106062275}}, {{40.45, 
           0.00832755106062275}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.4, 0.008217759640382941}}, {{40.4, 
           0.008217759640382941}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.35, 0.008104994845759897}}, {{40.35, 
           0.008104994845759897}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.3, 0.007989092037967525}}, {{40.3, 
           0.007989092037967525}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.25, 0.007869870800382227}}, {{40.25, 
           0.007869870800382227}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.2, 0.007747132714607023}}, {{40.2, 
           0.007747132714607023}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.15, 0.0076206587147972255`}}, {{40.15, 
           0.0076206587147972255`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.1, 0.007490205917974366}}, {{40.1, 
           0.007490205917974366}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40.05, 0.00735550379738101}}, {{40.05, 
           0.00735550379738101}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{40., 0.007216249524062199}}, {{40., 
           0.007216249524062199}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.95, 0.007072102244042175}}, {{39.95, 
           0.007072102244042175}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.9, 0.006922675977322223}}, {{39.9, 
           0.006922675977322223}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.85, 0.006767530709318525}}, {{39.85, 
           0.006767530709318525}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.8, 0.006606161077497134}}, {{39.8, 
           0.006606161077497134}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.75, 0.006437981807579919}}, {{39.75, 
           0.006437981807579919}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.7, 0.0062623086777121055`}}, {{39.7, 
           0.0062623086777121055`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.65, 0.0060783332058098735`}}, {{39.65, 
           0.0060783332058098735`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.6, 0.005885088324965671}}, {{39.6, 
           0.005885088324965671}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.55, 0.005681400779616644}}, {{39.55, 
           0.005681400779616644}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.5, 0.005465823357642876}}, {{39.5, 
           0.005465823357642876}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.45, 0.005236535406696218}}, {{39.45, 
           0.005236535406696218}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.4, 0.004991191332879489}}, {{39.4, 
           0.004991191332879489}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.35, 0.004726679350978239}}, {{39.35, 
           0.004726679350978239}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.3, 0.004438715371333098}}, {{39.3, 
           0.004438715371333098}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.25, 0.0041211088810223775`}}, {{39.25, 
           0.0041211088810223775`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.2, 0.003764303537477448}}, {{39.2, 
           0.003764303537477448}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.15, 0.0033520584950548055`}}, {{39.15, 
           0.0033520584950548055`}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.1, 0.002852152178100305}}, {{39.1, 
           0.002852152178100305}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{39.05, 0.002177950782596618}}, {{39.05, 
           0.002177950782596618}}}]}}, {{}, {}}}, {{}, {
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32., 0.}}, {{32., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32.3, 0.}}, {{32.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32.6, 0.}}, {{32.6, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{32.9, 0.}}, {{32.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{33.2, 0.}}, {{33.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{33.5, 0.}}, {{33.5, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{33.8, 0.}}, {{33.8, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{34.1, 0.}}, {{34.1, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{34.4, 0.}}, {{34.4, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{34.7, 0.}}, {{34.7, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35., 0.}}, {{35., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35.3, 0.}}, {{35.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35.6, 0.}}, {{35.6, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{35.9, 0.}}, {{35.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{36.2, 0.}}, {{36.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{36.5, 0.}}, {{36.5, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{36.8, 0.}}, {{36.8, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{37.1, 0.}}, {{37.1, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{37.4, 0.}}, {{37.4, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{37.7, 0.}}, {{37.7, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38., 0.}}, {{38., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38.3, 0.}}, {{38.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38.6, 0.}}, {{38.6, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox[".", {0., 0.}],
            "InsetString"], {{{38.9, 0.}}, {{38.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{39.2, 0.}}, {{39.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{39.5, 0.}}, {{39.5, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{39.8, 0.}}, {{39.8, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{40.1, 0.}}, {{40.1, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{40.4, 0.}}, {{40.4, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{40.7, 0.}}, {{40.7, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41., 0.}}, {{41., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41.3, 0.}}, {{41.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41.6, 0.}}, {{41.6, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{41.9, 0.}}, {{41.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{42.2, 0.}}, {{42.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{42.5, 0.}}, {{42.5, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{42.8, 0.}}, {{42.8, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{43.1, 0.}}, {{43.1, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{43.4, 0.}}, {{43.4, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{43.7, 0.}}, {{43.7, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44., 0.}}, {{44., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44.3, 0.}}, {{44.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44.6, 0.}}, {{44.6, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{44.9, 0.}}, {{44.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{45.2, 0.}}, {{45.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{45.5, 0.}}, {{45.5, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{45.8, 0.}}, {{45.8, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{46.1, 0.}}, {{46.1, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{46.4, 0.}}, {{46.4, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{46.7, 0.}}, {{46.7, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47., 0.}}, {{47., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47.3, 0.}}, {{47.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47.6, 0.}}, {{47.6, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{47.9, 0.}}, {{47.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{48.2, 0.}}, {{48.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{48.5, 0.}}, {{48.5, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{48.8, 0.}}, {{48.8, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{49.099999999999994`, 0.}}, {{
           49.099999999999994`, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{49.4, 0.}}, {{49.4, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{49.7, 0.}}, {{49.7, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50., 0.}}, {{50., 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50.3, 0.}}, {{50.3, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50.599999999999994`, 0.}}, {{
           50.599999999999994`, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{50.9, 0.}}, {{50.9, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{51.2, 0.}}, {{51.2, 0.}}}]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          0.011000000000000001`], AbsoluteThickness[1.6], 
          GeometricTransformationBox[
           TagBox[InsetBox["*", {0., 0.}],
            "InsetString"], {{{51.5, 0.}}, {{51.5, 0.}}}]}}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{32., 0},
      DisplayFunction->Identity,
      Frame->{{True, False}, {True, False}},
      FrameLabel->{{
         FormBox[
         "\"Equilibrium \\!\\(\\*SubscriptBox[\\(D\\), \\(w\\)]\\)\"", 
          TraditionalForm], None}, {
         FormBox[
         "\"Parasite reproduction in single \
infection(\\!\\(\\*SubscriptBox[\\(f\\), \\(w\\)]\\))\"", TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->300,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{32., 51.5}, {-0.01, 0.02}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.845113698714044*^9, {3.845113731976726*^9, 3.845113750278912*^9}, {
   3.84511388034726*^9, 3.8451139005315104`*^9}, {3.845121673380978*^9, 
   3.845121687366252*^9}, 3.845371424985882*^9, 3.8453735960907516`*^9, 
   3.845376222149119*^9, 3.845444725266498*^9, {3.845447329202353*^9, 
   3.845447340357295*^9}, 3.845473678454988*^9, 3.845521629887998*^9, 
   3.845539535792779*^9, {3.8455400387622347`*^9, 3.845540098948151*^9}, {
   3.845540132151945*^9, 3.8455401458584557`*^9}, 3.8457184591984987`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"d957d04f-5969-480b-aa24-9b895626ea5f"]
}, Open  ]],

Cell["Find value of the bifurcation point", "Text",
 CellChangeTimes->{{3.8449489247908297`*^9, 
  3.844948933378076*^9}},ExpressionUUID->"36d2a7e6-3809-4ebc-a687-\
239fdb7a3d41"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rr", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"39", ",", " ", "40", ",", " ", "0.0002"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FollowRoot", "[", 
   RowBox[{
    RowBox[{"sysfunc1", "/.", 
     RowBox[{"fww", "->", " ", 
      RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
    "fw", ",", " ", "rr", ",", " ", "varRes", ",", " ", "solsfwzero"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", " ", "=", 
   RowBox[{"ListStableMark", "[", 
    RowBox[{
     RowBox[{"Jmat", "/.", 
      RowBox[{"fww", "->", " ", 
       RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "parfw", ",", " ", 
     "fw", ",", " ", "rr", ",", " ", "%"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pos", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"xx", ",", " ", "\"\<*\>\"", ",", " ", "1", ",", " ", "1"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", "[", 
   RowBox[{"[", "pos", "]"}], "]"}], " ", "==", " ", 
  "\"\<*\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xx", "[", 
    RowBox[{"[", 
     RowBox[{"pos", "-", "1"}], "]"}], "]"}], " ", "==", " ", "\"\<.\>\""}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"fwbifur", " ", "=", " ", 
  RowBox[{"rr", "[", 
   RowBox[{"[", "pos", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.844948957576449*^9, 3.844949026913875*^9}, {
  3.84494937265868*^9, 3.844949500892421*^9}, {3.8449506937123938`*^9, 
  3.84495073415364*^9}, {3.844951321694228*^9, 3.84495138490245*^9}, {
  3.844951461364829*^9, 3.8449514763720818`*^9}, {3.844951528617654*^9, 
  3.8449515289251213`*^9}, {3.8449516174210997`*^9, 3.844951627833375*^9}, {
  3.845107507588093*^9, 3.845107509562202*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"e9265132-3533-4eab-a85f-b60a66f7ec51"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.844951542915056*^9, {3.8451075033958178`*^9, 3.845107518887992*^9}, 
   3.8451152516902637`*^9, {3.845121682430636*^9, 3.84512169643499*^9}, 
   3.8453714335283327`*^9, 3.8453736049551897`*^9, 3.845376230715617*^9, 
   3.8454447337735577`*^9, {3.84544733763337*^9, 3.845447349278141*^9}, 
   3.845473687074736*^9, 3.845521638341887*^9, 3.845718468196698*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"2e2cd1ea-4ddd-48b3-b5db-e4f858a3091e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.844951542915056*^9, {3.8451075033958178`*^9, 3.845107518887992*^9}, 
   3.8451152516902637`*^9, {3.845121682430636*^9, 3.84512169643499*^9}, 
   3.8453714335283327`*^9, 3.8453736049551897`*^9, 3.845376230715617*^9, 
   3.8454447337735577`*^9, {3.84544733763337*^9, 3.845447349278141*^9}, 
   3.845473687074736*^9, 3.845521638341887*^9, 3.845718468204606*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"a2146a4b-ea87-49e5-98a1-3b0d0db4a46f"],

Cell[BoxData["39.0122`"], "Output",
 CellChangeTimes->{
  3.844951542915056*^9, {3.8451075033958178`*^9, 3.845107518887992*^9}, 
   3.8451152516902637`*^9, {3.845121682430636*^9, 3.84512169643499*^9}, 
   3.8453714335283327`*^9, 3.8453736049551897`*^9, 3.845376230715617*^9, 
   3.8454447337735577`*^9, {3.84544733763337*^9, 3.845447349278141*^9}, 
   3.845473687074736*^9, 3.845521638341887*^9, 3.845718468212459*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"4ac1c365-54d6-4729-9727-c4d519ef59ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Bifurcation \[Epsilon]  and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "w"], TraditionalForm]],ExpressionUUID->
  "fef99c93-0ecf-49a9-821e-b39b5c10b30c"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["f", "ww"]}], TraditionalForm]],ExpressionUUID->
  "4a7b2857-755d-4cbd-95c0-bc33e4c7f3d7"],
 " = \[Epsilon] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "w"], TraditionalForm]],ExpressionUUID->
  "a82bfefe-3a45-47f2-84b9-abb9dc80c3d2"],
 ")"
}], "Section",
 CellChangeTimes->{{3.844924919500676*^9, 3.8449249334270773`*^9}, {
  3.845463066397607*^9, 3.845463067513219*^9}, {3.846149433676395*^9, 
  3.8461494454139147`*^9}},ExpressionUUID->"ae1deeab-d144-4a10-b1e6-\
0ff8f71acbb7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par\[Epsilon]fw", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.9"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "2.9"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "3.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"k", " ", "->", " ", "0.26"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8449439418239193`*^9, 3.844943943054366*^9}, {
   3.844944003287615*^9, 3.844944031682549*^9}, {3.844944076147064*^9, 
   3.8449440941759443`*^9}, {3.844945945337989*^9, 3.844945946286515*^9}, {
   3.844946698934945*^9, 3.844946700229003*^9}, 3.844946974085932*^9, {
   3.844947055719336*^9, 3.844947062598049*^9}, 3.8450325259774113`*^9, 
   3.845032852046254*^9, 3.845033863428028*^9, {3.845104531087228*^9, 
   3.845104537021776*^9}, {3.8451045926126423`*^9, 3.845104632008391*^9}, {
   3.845115264508595*^9, 3.845115270588809*^9}, {3.8451162455259733`*^9, 
   3.84511624921614*^9}, 3.8451162881484613`*^9, {3.8455216351827517`*^9, 
   3.8455216356151342`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"81980613-0e79-4a33-8eb2-24063997a0ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]start", " ", "=", " ", "0.01"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]end", " ", "=", " ", "10"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]interval", " ", "=", " ", "0.1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwstart", " ", "=", " ", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwend", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwinterval", " ", "=", " ", "0.5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.845463184810894*^9, 3.8454632427204123`*^9}, {
  3.845523204700487*^9, 3.845523211436722*^9}, {3.8455310324430304`*^9, 
  3.8455310398020697`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"42a710c0-6a92-479e-88fa-6f6c16cee734"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]fwAllresults", " ", "=", " ", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"NSolveCodim2Positive", "[", 
       RowBox[{
        RowBox[{"sysfunc1", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "par\[Epsilon]fw", 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", " ", "->", " ", "i"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"fw", "->", " ", "j"}], "}"}], ",", " ", "\[Epsilon]fw", ",",
         " ", "eq", ",", "varRes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "i", ",", " ", "\[Epsilon]start", ",", " ", "\[Epsilon]end", ",", " ", 
        "\[Epsilon]interval"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "j", ",", " ", "fwstart", ",", " ", "fwend", ",", " ", "fwinterval"}], 
       "}"}]}], "]"}], "//", "AbsoluteTiming"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8454632481531878`*^9, 3.8454633509818563`*^9}, 
   3.845463923972271*^9, {3.8455218654505253`*^9, 3.845521865745228*^9}, {
   3.845522278660985*^9, 3.8455223189426727`*^9}, {3.845522385023788*^9, 
   3.845522401943369*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"1f12da49-84e7-422b-bb4e-48db71685589"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]fwAllresults", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "/", "60"}]], "Input",
 CellChangeTimes->{{3.845530906369351*^9, 3.845530912574513*^9}, {
  3.845718363644685*^9, 3.845718364735342*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"15f9f9e5-732e-49ce-bfd0-f29b08e8d76e"],

Cell[BoxData["39.21282886666667`"], "Output",
 CellChangeTimes->{3.845530912941079*^9, 3.845539275056034*^9, 
  3.845720824586461*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"79bd29e8-4db4-46ef-b0a7-bf48e9f8b3dd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq\[Epsilon]fw", " ", "=", 
   RowBox[{"eq", "/.", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"\[Epsilon]fwAllresults", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]fwlist", " ", "=", " ", 
   RowBox[{"\[Epsilon]fw", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"\[Epsilon]fwAllresults", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8455224139725637`*^9, 3.845522437555932*^9}, {
  3.8455230087860727`*^9, 3.845523012087503*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"87b6ed96-08db-4e4f-8671-56bb7043b944"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"range\[Epsilon]fw", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Epsilon]start", ",", " ", "\[Epsilon]end"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"fwstart", ",", " ", "fwend"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imsize", " ", "=", " ", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"marklist", " ", "=", " ", 
   RowBox[{"ListStableMarkTwoParameters", "[", 
    RowBox[{
     RowBox[{"Jmat", "/.", 
      RowBox[{"fww", "->", " ", 
       RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "par\[Epsilon]fw", 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", " ", "fw"}], "}"}], ",", " ", 
     "\[Epsilon]fwlist", ",", "eq\[Epsilon]fw", ",", " ", "True"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p0", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"\[Epsilon]fwlist", ",", "  ", 
    RowBox[{"PlotStyle", "->", "marklist"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "range\[Epsilon]fw"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", " ", 
    RowBox[{"Frame", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Epsilon]\>\"", ",", " ", 
       "\"\<Reproduction in single infection \!\(\*SubscriptBox[\(f\), \(w\)]\
\)\>\""}], "}"}]}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"GridLinesStyle", "->", " ", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Black"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<bifurcation_epsilonfw_NL.jpg\>\"", ",", " ", "%"}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.845464173478375*^9, 3.845464210418694*^9}, {
  3.845522344819931*^9, 3.845522371952772*^9}, {3.845523058385726*^9, 
  3.8455231193074512`*^9}, {3.845530956003315*^9, 3.84553095743217*^9}, {
  3.84553929109018*^9, 3.845539323724742*^9}, {3.8455393563321543`*^9, 
  3.8455393871640873`*^9}, {3.845540382056883*^9, 3.8455404031308327`*^9}, {
  3.845540486135749*^9, 3.8455405072623663`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"73e12d64-47f6-447e-93d1-d8233e84bdf6"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxl3D3PrmlZxfHbF3wZ8B18dxBt8BvYoOfszcBYgi2ViZWFWJlgswqxxU9g
gzX1mFisaGdnLDBWoomJAZMxCpnJTCYe++E515H118b8Zp4VkuNe7mvt67nx
U3/wx1/8wx98PB5/+rHH49X//rOPf+Pz3/rKn//u49X/+OUpPz7bPrBgw483
kYcFG358DnlYsOHH55GHBRt+vIU8LNjw4/fOb33pa3/33U//be5bnvuWDyzY
8Ny387Bgw3PfzsOCDc99Ow8LNjz37Tws2PDc99++8urg/5D7lue+5QMLNjz3
7Tws2PDct/OwYMNz387Dgg3PfTsPCzY89/3nr3/5M699859y3/Lct3xgwYbn
vp2HBRue+3YeFmx47tt5WLDhuW/nYcGG576/89o355/8S+5bnvuWDyzY8Ny3
87Bgw3PfzsOCDc99Ow8LNjz37Tws2PDc94tvv/7Vb3/hX3PP8oEFG557dh4W
bHju2XlYsOG5Z+dhwYbnnp2HBRueew7mn/x7+lqe+5YFG557lg8s2PDcs/Ow
YMNzz87Dgg3PPTsPCzY893w679v/kXuW557lAws2PPftPCzY8Ny387Bgw3Pf
zsOCDc99Ow8LNjz3/c6rc3/7P3Pf8ty3fGDBhue+nYcFG577dh4WbHju23lY
sOG5b+dhwYbnvp98KvR/5b7luW/5wIbnnv3zsGDDc8/Ow4INzz07Dxue+/XP
w4IN5+8H7+R+5fz94J3cr38ezt8H3sn9yoIN5+8D7+R+nYcN5+8D7+R+/fNw
9v87uV//58GG535//91Pzz/579yvPPcrH1iw4bln52HBhueenYcFG557dh4W
bHju23lYsOG579O5v/Q/uW957ls+sGDDc9/Ow4INz307Dws2PPftPCzY8Ny3
87Bgw3Pf770693f/N/ctz33LBxZs/vyb+HnY8Nyz87Bgw3PPzsOCDc89Ow8L
Njz3/MtX5/3a93LP8tyzfGDD08/+eViw4bln52HBhueenYcFG557dh4WbDjP
p3fxfHoXz6d38Xx6N/3sPJzn1bu5b+dhw3levZv7dh42nOfVu7lv52HDeX69
m/t2Hjac59d7eH69h+fXe3h+vYfn13u5b+ffRB4WbDjPr/dy387DhvP8ei/3
7TxsOM+v93LfzsOG8/x6H8+v9/H8eh/Pr/fx/Ho/9+38m8jDgg3n+fV+7tt5
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
6VPnYcGGp0+dhwUbnj51HhZsePrUeViw4elT52HBhqdPnYcFG54+dR4WbDh7
fPtUPrBgw9nj26fOw4azx7dPnYcNZ49vnzoPG84e3z51HjacPb596jxsOHt8
+9R52HD2+Pap87Dh7PHtU+dhw9nj26fygQUbzh7fPnUeNpw9vn3qPGw4e3z7
1HnYcPb49qnzsOHs8e1T52HD2ePbp87DhrPHt0+dhw1nj2+fOg8bzvvxTzz7
tA8s2HDej988LNhw3o/fPCzYcN6P3zws2HDej988LNhw3o/fPCzYcN6P3zws
2HDej988LNhw3o/fPCzYcPb49ql8YMGGs8e3T52HDWePb586DxvOHt8+dR42
nD2+feo8bDh7fPvUedhw9vj2qfOw4ezx7VPnYcPZ49unzsOG837855992gcW
bDjvx28eFmw478dvHhZsOO/Hbx4WbDjvx28eFmw478dvHhZsOO/Hbx4WbDjv
x28eFmw478dvHhZsOHt8+1Q+sGDD2ePbp87DhrPHt0+dhw1nj2+fOg8bzh7f
PnUeNpw9vn3qPGw4e3z71HnYcPb49qnzsOHs8e1T52HD2ePbp/KBBRvOHt8+
dR42nD2+feo8bDh7fPvUedhw9vj2qfOw4ezx7VPnYcPZ49unzsOGs8e3T52H
DWePb586DxvO+/FfePZpH1iw4bwfv3lYsOG8H795WLDhvB+/eViw4bwfv3lY
sOG8H795WLDhvB+/eViw4bwfv3lYsOG8H795WLDh7PHtU/nAgg1nj2+fOg8b
zh7fPnUeNpw9vn3qPGw4e3z71HnYcPb49qnzsOHs8e1T52HD2ePbp87DhrPH
t0+dhw1nj//is0/7wIINZ4/fPCzYcPb4zcOCDWeP3zws2HD2+M3Dgg1nj988
LNhw9vjNw4INZ4/fPCzYcPb4zcOCDef749un8oEFG873x7dPnYcN5/vj26fO
w4bz/fHtU+dhw/n++Pap87DhfH98+9R52HC+P7596jxsON8f3z51Hjac749v
nzoPG84e3z6VDyzYcPb49qnzsOHs8e1T52HD2ePbp87DhrPHt0+dhw1nj2+f
Og8bzh7fPnUeNpw9vn3qPGw4e3z71HnYcN6P/9KzT/vAgg3n/fjNw4IN5/34
zcOCDef9+M3Dgg3n/fjNw4IN5/34zcOCDef9+M3Dgg3n/fjNw4IN5/34zcOC
DWePb5/KBxZsOHt8+9R52HD2+Pap87Dh7PHtU+dhw9nj26fOw4azx7dPnYcN
Z49vnzoPG84e3z51HjacPb596jxsOHv8l5992gcWbDh7/OZhwYazx28eFmw4
e/zmYcGGs8dvHhZsOHv85mHBhrPHbx4WbDh7/OZhwYazx28eFmw478e3T+UD
Czac9+Pbp87DhvN+fPvUedhw3o9vnzoPG8778e1T52HDeT++feo8bDjvx7dP
nYcN5/349qnzsOG8H98+dR42nD2+fSofWLDh7PHtU+dhw9nj26fOw4azx7dP
nYcNZ49vnzoPG84e3z51HjacPb596jxsOHt8+9R52HD2+Pap87DhvB//lWef
9oEFG8778ZuHBRvO+/GbhwUbzvvxm4cFG8778ZuHBRvO+/GbhwUbzvvxm4cF
G8778ZuHBRvO+/GbhwUbzh7fPpUPLNhw9vj2qfOw4ezx7VPnYcPZ49unzsOG
s8e3T52HDWePb586DxvOHt8+dR42nD2+feo8bDh7fPvUedhwvj/+q88+7QML
Npzvj988LNhwvj9+87Bgw/n++M3Dgg3n++M3Dws2nO+P3zws2HC+P37zsGDD
+f74zcOCDef74zcPCzacPb59Kh9YsOHs8e1T52HD2ePbp87DhrPHt0+dhw1n
j2+fOg8bzh7fPnUeNpw9vn3qPGw4e3z71HnYcPb49qnzsOHs8e1T+cCCDWeP
b586DxvOHt8+dR42nD2+feo8bDh7fPvUedhw9vj2qfOw4ezx7VPnYcPZ49un
zsOGs8e3T52HDef9+K89+7QPLNhw3o/fPCzYcN6P3zws2HDej988LNhw3o/f
PCzYcN6P3zws2HDej988LNhw3o/fPCzYcN6P3zws2HD2+PapfGDBhrPHt0+d
hw1nj2+fOg8bzh7fPnUeNpw9vn3qPGw4e3z71HnYcPb49qnzsOHs8e1T52HD
2ePbp87DhvN+/PVnn/aBBRvO+/GbhwUbzvvxm4cFG8778ZuHBRvO+/GbhwUb
zvvxm4cFG8778ZuHBRvO+/GbhwUbzvvxm4cFG84e3z6VDyzYcPb49qnzsOHs
8e1T52HD2ePbp87DhrPHt0+dhw1nj2+fOg8bzh7fPnUeNpw9vn3qPGw4e3z7
1HnYcPb49ql8YMGGs8e3T52HDWePb586DxvOHt8+dR42nD2+feo8bDh7fPvU
edhw9vj2qfOw4ezx7VPnYcPZ49unzsOG8378k88+7QMLNpz34zcPCzac9+M3
Dws2nPfjNw8LNpz34zcPCzac9+M3Dws2nPfjNw8LNpz34zcPCzac9+M3Dws2
nD2+fSofWLDh7PHtU+dhw9nj26fOw4azx7dPnYcNZ49vnzoPG84e3z51Hjac
Pb596jxsOHt8+9R52HD2+Pap87Dh6dNXv/2Ft1//yK8/+7QPLNjw9KnzsGDD
06fOw4INT586Dws2PH3qPCzY8PSp87Bgw9OnzsOCDU+fOg8LNjx96jws2PD0
6e3X55/89vapfGDBhqdPnYcFG54+dR4WbHj61HlYsOHpU+dhwYanT52HBRue
PnUeFmx4+tR5WLDh6VPnYcGGp0+v6vXVP9o+lQ8s2PD0qfOwYMPTp87Dgg1P
nzoPCzY8feo8LNjw9KnzsGDD06fOw4INT586Dws2PH3qPCzY8PTpk6/+wPqr
7VP5wIINT586Dws2PH3qPCzY8PSp87Bgw9OnzsOCDU+fOg8LNjx96jws2PD0
qfOwYMPTp87DgqdPX3z1B9Q/bn/KBxZsePrTeViw4elP52HBhqc/nYcFG57+
dB4WbHj603lYsOHpT+dhwYanP52HBRvOXvrUs0/7wIINZz/fPCzY8OMF8rBg
w9nPNw8LNpz9fPOwYMPZzzcPCzac/XzzsGDD2c83D2fv7OddPrBgw9m3+3l3
Hjb8eIE8LNhw9u1+3p2HDWff7ufdedhw9u1+3p2HDWff7ufdedjwA5/n/Pn+
nae9sJ9v+cCCDc/n23lYsOH5fDsPCzY8n2/nYcGG5/PtPCzY8Hy+nYcFG57P
t/OwYMPz+XYeFmz4gT4cWPD/68/dm9un8oEFG87e3D51Hjacvbl96jxsOHtz
+9R52HD25vap87Dh7M3tU+dhw9mb26fOw4azN7dPnYcNZ29unzoPG54+fX9/
bJ/KBxZsOPtz+9R52HD25/ap87Dh7M/tU+dhw9mf26fOw4azP7dPnYcNZ39u
nzoPG87+3D51Hjb8eAt5WLDhvP/9jWef9oEFG85+vXlYsOHs15uHBRvOfr15
WLDh7NebhwUbzn69eViw4ezXm4cFG85+vXlYsOH8febmYcGGp09/87Snrk/7
wIINT586Dws2PH3qPCzY8PSp87Bgw9OnzsOCDU+fOg8LNjx96jws2PD0qfOw
YMPTp87Dgg1Pn76/p65P+8CCDWeP3zws2HD2+M3Dgg1nj988LNhw9vjNw4IN
Z4/fPCzYcPb4zcOCDWeP3zws2HD2+M3Dgg1nj1+f9oEFG84ev3lYsOHs8ZuH
BRvOHr95WLDh7PGbhwUbzh6/eViw4ezxm4cFG84ev3lYsOHs8ZuHBRvOHr8+
7QMLNpw9fvOwYMPZ4zcPCzacPX7zsGDD2eM3Dws2nD1+87Bgw9njNw8LNpw9
fvOwYMPZ4zcPCzY8ffqLpz31m88+7QMLNjx96jws2PD0qfOwYMPTp87Dgg1P
nzoPCzY8feo8LNjw9KnzsGDD06fOw4INT586Dws2nD2+fSofWLDh7PHtU+dh
w9nj26fOw4azx7dPnYcNZ49vnzoPG84e3z51HjacPb596jxsOHt8+9R52HD2
+Pap87Dh7PHtU/nAgg1nj2+fOg8bzh7fPnUeNpw9vn3qPGw4e3z71HnYcPb4
9qnzsOHs8e1T52HD2ePbp87DhrPHt0+dhw1nj2+fygcWbDh7fPvUedhw9vj2
qfOw4ezx7VPnYcPZ49unzsOGs8e3T52HDWePb586DxvOHt8+dR42nD2+feo8
bHj69PtPe2r7VD6wYMPTp87Dgg1PnzoPCzY8feo8LNjw9KnzsGDD06fOw4IN
T586Dws2PH3qPCzY8PSp87Bgw9On/wMHMPnE
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.01, 32.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"Reproduction in single infection \\!\\(\\*SubscriptBox[\\(f\\), \
\\(w\\)]\\)\"", TraditionalForm], None}, {
     FormBox["\"\[Epsilon]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1}, {}},
  GridLinesStyle->{
    Thickness[Large], 
    GrayLevel[0]},
  ImageSize->300,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01, 10}, {32, 50}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8455231199330072`*^9, 3.845524216656776*^9, 3.845530959832608*^9, {
   3.845539276047701*^9, 3.845539325016144*^9}, {3.845539368021007*^9, 
   3.8455393883629713`*^9}, 3.84554040112099*^9, {3.845540502331724*^9, 
   3.8455405058688087`*^9}, 3.8457208256885033`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"74a3f751-79d4-49c2-a76b-4d1e4d5ff217"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Bifurcation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "w"], TraditionalForm]],ExpressionUUID->
  "1c06a107-3947-4f1e-8370-e1614d3aebe8"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "w"], TraditionalForm]],ExpressionUUID->
  "ca0c5faa-56de-4fd7-95e0-1ff78d462f6a"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["f", "ww"]}], TraditionalForm]],ExpressionUUID->
  "4b89fb66-3330-43cf-81a4-760c3791b950"],
 " = \[Epsilon] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["f", "w"], TraditionalForm]],ExpressionUUID->
  "ebabfbf7-6e9f-4a9b-9462-400918e75ef5"],
 ")"
}], "Section",
 CellChangeTimes->{{3.845541251509322*^9, 3.845541275935624*^9}, {
   3.846066199826665*^9, 3.846066200288615*^9}, 
   3.846149451772509*^9},ExpressionUUID->"8f95e269-ed4f-4eda-86f6-\
b51d0beb69f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par\[Beta]wfw", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "0.9"}], ",", 
     RowBox[{"r", " ", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "2.9"}], ",", " ", 
     RowBox[{"\[Alpha]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Alpha]ww", "->", " ", "0"}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ","}], "*)"}], " ", 
     RowBox[{"\[Beta]ww", "->", " ", "1.5"}], ",", 
     RowBox[{"p", "->", " ", "0.1"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "3.9"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Sigma]ww", "->", " ", "0"}], ",", 
     RowBox[{"q", "->", " ", "0.01"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"k", " ", "->", " ", "0.26"}], ",", " ", 
     RowBox[{"\[Epsilon]", " ", "->", " ", "2"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845541296900337*^9, 3.8455413145210857`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"abd0a8bc-9ac7-4354-bbc3-06806891340a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]wstart", " ", "=", " ", "0.01"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]wend", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]winterval", " ", "=", " ", "0.05"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwstart", " ", "=", " ", "32"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwend", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fwinterval", " ", "=", " ", "0.2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8455413442752523`*^9, 3.845541389369946*^9}, {
  3.845541815097953*^9, 3.845541824281836*^9}, {3.8457183325782013`*^9, 
  3.845718349591152*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"c45169f7-36b2-4f10-afdd-24f93b0789fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]wfwAllresults", " ", "=", " ", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"NSolveCodim2Positive", "[", 
       RowBox[{
        RowBox[{"sysfunc1", "/.", 
         RowBox[{"fww", "->", " ", 
          RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "par\[Beta]wfw", 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Beta]w", " ", "->", " ", "i"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"fw", "->", " ", "j"}], "}"}], ",", " ", "\[Beta]wfw", ",", 
        " ", "eq", ",", "varRes"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "i", ",", " ", "\[Beta]wstart", ",", " ", "\[Beta]wend", ",", " ", 
        "\[Beta]winterval"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "j", ",", " ", "fwstart", ",", " ", "fwend", ",", " ", "fwinterval"}], 
       "}"}]}], "]"}], "//", "AbsoluteTiming"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.845541405784296*^9, 3.8455414390252647`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"4adc8b85-5e9b-4dcb-a10c-fee3d95869b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]wfwAllresults", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "/", "60"}]], "Input",
 CellChangeTimes->{{3.845541773011795*^9, 3.845541783515828*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"c006b2e2-a3d7-4f8c-abf7-bab0179261e2"],

Cell[BoxData["305.71312006666665`"], "Output",
 CellChangeTimes->{{3.845541776225862*^9, 3.845541783939431*^9}, 
   3.845545517304728*^9, 3.8455464709786043`*^9, 3.845708767777258*^9, 
   3.845739660087006*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"291f69bb-044d-4c7f-9303-683f73dfd22c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq\[Beta]wfw", " ", "=", 
   RowBox[{"eq", "/.", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"\[Beta]wfwAllresults", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]wfwlist", " ", "=", " ", 
   RowBox[{"\[Beta]wfw", "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"\[Beta]wfwAllresults", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "1"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.845541458789051*^9, 3.8455414766190166`*^9}, 
   3.845546511521016*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"55f9099c-b82c-4f7b-9d9e-e3b7d972087c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"range\[Beta]wfw", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Beta]wstart", ",", " ", "\[Beta]wend"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"fwstart", ",", " ", "fwend"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imsize", " ", "=", " ", "300"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"marklist", " ", "=", " ", 
   RowBox[{
    RowBox[{"ListStableMarkTwoParameters", "[", 
     RowBox[{
      RowBox[{"Jmat", "/.", 
       RowBox[{"fww", "->", " ", 
        RowBox[{"\[Epsilon]", " ", "fw"}]}]}], ",", " ", "par\[Beta]wfw", ",", 
      RowBox[{"{", 
       RowBox[{"\[Beta]w", ",", " ", "fw"}], "}"}], ",", " ", 
      "\[Beta]wfwlist", ",", "eq\[Beta]wfw", ",", " ", "True"}], "]"}], "//", 
    "AbsoluteTiming"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"marklist", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"\[Beta]wfwlist", ",", "  ", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"marklist", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "range\[Beta]wfw"}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "imsize"}], ",", " ", 
   RowBox[{"Frame", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Manipulation in single infection \!\(\*SubscriptBox[\(\[Beta]\), \
\(w\)]\)\>\"", ",", " ", 
      "\"\<Reproduction in single infection \!\(\*SubscriptBox[\(f\), \
\(w\)]\)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.5", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", "Black"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<bifurcation_betawfw_NL.jpg\>\"", ",", " ", "%"}], "]"}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.84554148926378*^9, 3.8455415411116962`*^9}, 
   3.845541793005742*^9, {3.8457087257133093`*^9, 3.845708740679927*^9}, {
   3.8457087868989267`*^9, 3.845708799894486*^9}, 3.845710740714623*^9, {
   3.845717788715125*^9, 3.8457178315462513`*^9}, {3.845974125065117*^9, 
   3.8459741280432568`*^9}, {3.8459741866998453`*^9, 3.84597419593749*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"8dac8929-df5c-453d-ac65-ba358b559111"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.01`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "60"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.845717793214806*^9, 3.845717832916299*^9, 
  3.845739660384713*^9, 3.8459741284917183`*^9, 3.845974196588278*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"c14ecd07-cdcd-4a51-a48f-80c3936f2dfb"],

Cell[BoxData["3.316304`"], "Output",
 CellChangeTimes->{3.845717793214806*^9, 3.845717832916299*^9, 
  3.845739660384713*^9, 3.8459741284917183`*^9, 3.845974199903781*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"3e34310a-caf3-412d-aa35-c0782e1e9dac"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd2juzZVnW3+Wk7vdy5JQjAk84OIVP7vvZe61FhLBlEUG7+LKOIxvcyYeQ
Mx3Zwp18CDkjghAQErx9qTu7++QaM8ZTjmLWW/3kr9WVe/8jz/iv/sf/+X/4
nz569+7df/PP3737+//7f/3Lf/fP/81//D//uz/946/t/f5+9/e/Xuf7f2t/
/2u+/9sfn3/1+f4/xt//mu9/cIH37r9//2/+4z/+xts/v675fvv15/vt15/v
t19/vt9+/bV6Ay/w3m3V+2Gr3o8bfRt9G314Da/jDbzAe/7/z3/5j7/xf3/4
9ZZ8v/168/326833268332+/3lK9wHu3Vu+HtXo/rtVbV/pW+vAaXscbeIH3
/N+r9m30bfRt9G304TW8jjfwAu/5v9ff/8f7l//u//ngP/L95s/3mz/fb/58
v/mP6r1bqvfDUr0fl+qtS/X+tNCH1/A63sALvOe/P7VvpW+lb6VvpQ+v4XW8
gRd4z39/at9G30bfRt9GH17D63gDL/Ce//781//qf/n3f/4X/+mDd8/3mzff
b958v3nz/eY9qvfDo3o/Pqq3Pqr3p0f1XvEaXscbeIH3/Pe59i30LfQt9C30
4TW8jjfwAu/573PtW+lb6VvpW+nDa3gdb+AF3vPf59q30bfRt9G30YfX8Dre
wAu857/Pf/kXf/8b+z//ku+3f36+3/75e77f/vvM99t/n3v11nv1/nSv3ite
w+t4Ay/wnr+fat+Dvgd9D/oe9OE1vI438ALv+fup9i30LfQt9C304TW8jjfw
Au/5+6n2rfSt9K30rfThNbyON/AC7/n7qfZt9G30bfRt9OE1vI438ALv+fvp
f//z3//Gf/7Q95Lvt775fuub77e++X7re6lew+t4Ay/wnr9/a9+dvjt9d/ru
9OE1vI438ALv+fu39j3oe9D3oO9BH17D63gDL/Cev39r30LfQt9C30IfXsPr
eAMv8J6/f2vfSt9K30rfSh9ew+t4Ay/wnr9/a99G30bfRt9GH17D63gDL/Ce
v3//13//97/x/3749W75fvv15vvt15vvf+T3+X779W7VC7x3L9X7Yb73z4vi
rS/0vdCH1/A63sALvOfnRe2703en707fnT68htfxBl7gPT8vat+Dvgd9D/oe
9OE1vI438ALv+XlR+xb6FvoW+hb68Bpexxt4gff8vKh9K30rfSt9K314Da/j
DbzAe35e1L6Nvo2+jb6NPryG1/EGXuA9Py/+Maf/1f/34ff/Nd9v//n5fvvP
z/fbf/6W77f/frfq/Xir3nqr3p9u1XvFa3gdb+AF3vPzqfbN9/75VPte6Huh
D6/hdbyBF3jPz6fad6fvTt+dvjt9eA2v4w28wHt+PtW+B30P+h70PejDa3gd
b+AF3vPzqfYt9C30LfQt9OE1vI438ALv+flU+1b6VvpW+lb68Bpexxt4gff8
fKp9G30bfRt9G314Da/jDbzAyz+v+qcPfdd8v32+zPdb33y/9c33W9+1eg2v
4w28wHt+/tW+G303+m703ejDa3gdb+AF3vPzr/bN9/75V/te6HuhD6/hdbyB
F3jv7vTd6bvTd6fvTh9ew+t4Ay/w8s83/yk//2rfg74HfQ/68Bpexxt4gZd/
vvlP+flX+xb6FvoW+vAaXscbeIGXf775T/n5V/tW+lb6VvrwGl7HG3iBl3++
+U/5+Vf7Nvo2+jb68Bpexxt4gZd/vrn7l3y/+fP99vkw32/+fL/5l+q9u1bv
h2v1frxWb71W709X+vAaXscbeIH3/HytfTf6bvTd6LvRh9fwOt7AC7x3L/TN
9/75Wvte6HuhD6/hdbyBF3j5593z87X23em703enD6/hdbyBF3j5593z87X2
Peh70PegD6/hdbyBF3j5593z87X2LfQt9C304TW8jjfwAi//vHt+vta+lb6V
vpU+vIbX8QZe4OWfd8/P19q30bfRt9GH1/A63sALvPzz7j9/eF/y/dY732+f
N/P91jvfb72X6r3iNbyON/AC7/l5Xfuu9F3pu9J3pQ+v4XW8gRd4z8/r2nej
70bfjb4bfXgNr+MNvMB790LffNefb/w5P69r3wt9eA2v4w28wMufb/w5P69r
352+O313+vAaXscbeIGXP9/4c35e174HfQ/6HvThNbyON/ACL3++8ef8vK59
C30LfQt9eA2v4w28wMufb/w5P69r30rfSt9KH17D63gDL/Dy5xt/zs/r2rfR
t9G30YfX8DrewAu8/PnGXz78eud8v/168/3268332+fFfL/9eufqBd7z+6B4
P1yq9+OleuuFvgt9eA2v4w28wHt+H9S+K31X+q70XenDa3gdb+AF3rsbfTf6
bvTd6LvRh9fwOt7AC7z8+dVf8vtgf9efX/0lvw9q3wt9eA2v4w28wMufX/0l
vw9q352+O313+vAaXscbeIGXP7/6S34f1L4HfQ/6HvThNbyON/ACL39+9Zf8
Pqh9C30LfQt9eA2v4w28wMufX/0lvw9q30rfSt9KH17D63gDL/Dy51d/ye+D
2rfRt9G30YfX8DrewAu8/PnVXz/830/5fvu/n/P91j/fb58/8/3Wf67en87V
e8VreB1v4AXe8/ul9l3ou9B3oe9CH17D63gDL/DeXem70nel70rflT68htfx
Bl7g5c8f/5rfL7XvRt+Nvht9eA2v4w28wMufP/41v1/2d/3541/z+6X2vdCH
1/A63sALvPz541/z+6X23em703enD6/hdbyBF3j588e/5vdL7XvQ96DvQR9e
w+t4Ay/w8uePf83vl9q30LfQt9CH1/A63sALvPz541/z+6X2rfSt9K304TW8
jjfwAi9//vjX/H6pfRt9G30bfXgNr+MNvMDLnz/+7YN/yvebP99vnw/z/ebP
9/79VLzn91PxfjhX78dz9dZz9f50pg+v4XW8gRd4z++n2neh70Lfhb4LfXgN
r+MNvMB7d6XvSt+Vvit9V/rwGl7HG3iBlz8f/lt+P9W+G303+m704TW8jjfw
Ai9/Pvy3/H7a3/Xnw3/L76fa90IfXsPreAMv8PLnw3/L76fad6fvTt+dPryG
1/EGXuDlz4f/lt9Pte9B34O+B314Da/jDbzAy58P/y2/n2rfQt9C30IfXsPr
eAMv8PLnw3/L76fat9K30rfSh9fwOt7AC7z8+fDf8vup9m30bfRt9OE1vI43
8AIvfz68v0/5fuud77fPm/l+653vt95T9V7xGl7HG3iB9/y+q31n+s70nek7
04fX8DrewAu8dxf6LvRd6LvQd6EPr+F1vIEXePnz+vl9V/uu9F3pu9KH1/A6
3sALvPx5/fy+q303+m703ejDa3gdb+AFXv68fn7f7e/68/r5fVf7XujDa3gd
b+AFXv68fn7f1b47fXf67vThNbyON/ACL39eP7/vat+Dvgd9D/rwGl7HG3iB
lz+vn993tW+hb6FvoQ+v4XW8gRd4+fP6+X1X+1b6VvpW+vAaXscbeIGXP6+f
33e1b6Nvo2+jD6/hdbyBF3j58/qfPnjHfL99Hsz3mzffb95879+XxfvhVL0f
T9VbT9X706l6r3gNr+MNvMB7fl/WvjN9Z/rO9J3pw2t4HW/gBV7eS/yU35e1
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
xd9zj9S+O313+u704TW8jjfwAi/vF3/PPVL7HvQ96HvQh9fwOt7AC7y8X/w9
90jtW+hb6Fvow2t4HW/gBV7eL/6ee6T2rfSt9K304TW8jjfwAi/vF3/PPVL7
Nvo2+jb68Bpexxt4gZf3i3986Huf77fPl/l+65vvfb/s732/FK/hdbyBF3jv
DvQd6DvQd6DvQB9ew+t4Ay/w8p7zj9wvte9I35G+I314Da/jDbzAy3vOP3K/
1L4TfSf6TvThNbyON/ACL+85/8j9UvvO9J3pO9OH1/A63sALvLzn/CP3S+27
0Heh70IfXsPreAMv8PKe84/cL7XvSt+Vvit9eA2v4w28wMt7zj9yv9S+G303
+m704TW8jjfwAi/vOf/I/bK/6z3nH7lfat8LfXgNr+MNvMDLe84/cr/Uvjt9
d/ru9OE1vI438AIv7zn/yP1S+x70Peh70IfX8DrewAu8vOf8I/dL7VvoW+hb
6MNreB1v4AVe3nP+kful9q30rfSt9OE1vI438AIv7zn/yP1S+zb6Nvo2+vAa
XscbeIH33C//7N/e/sO//mfv3r+93+d73zP7e98z+3vfM/t73zPFe8VreB1v
4AXec8/UvgN9B/oO9B3ow2t4HW/gBd5zz9S+I31H+o70HenDa3gdb+AF3nPP
1L4TfSf6TvSd6MNreB1v4AXec8/UvjN9Z/rO9J3pw2t4HW/gBd5zz9S+C30X
+i70XejDa3gdb+AF3nPP1L4rfVf6rvRd6cNreB1v4AXec8/Uvht9N/pu9N3o
w2t4HW/gBd5zz9S++d73TO17oe+FPryG1/EGXuA990ztu9N3p+9O350+vIbX
8QZe4D33TO170Peg70Hfgz68htfxBl7gPfdM7VvoW+hb6Fvow2t4HW/gBd5z
z9S+lb6VvpW+lT68htfxBl7gPfdM7dvo2+jb6Nvow2t4HW/gBd5zz/zrf/yN
uWf2975n9ve+Z/b3vmf2975niveK1/A63sALvOeeqX0H+g70Heg70IfX8Dre
wAu8556pfUf6jvQd6TvSh9fwOt7AC7znnql9J/pO9J3oO9GH1/A63sALvOee
qX1n+s70nek704fX8DrewAu8556pfRf6LvRd6LvQh9fwOt7AC7znnql9V/qu
9F3pu9KH1/A63sALvOeeqX03+m703ei70YfX8DrewAu8556pffO975na90Lf
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
xxt4gZf3wHPP1L47fXf67vThNbyON/ACL++B556pfQ/6HvQ96MNreB1v4AVe
3gPPPVP7FvoW+hb68Bpexxt4gZf3wHPP1L6VvpW+lT68htfxBl7g5T3w3DO1
b6Nvo2+jD6/hdbyBF3h5Dzz3zP7e98z+3vfM/t73zP7e90zxXvEaXscbeIGX
98Bzz9S+A30H+g704TW8jjfwAi/vgeeeqX1H+o70HenDa3gdb+AFXt4Dzz1T
+070neg70YfX8DrewAu8vAeee6b2nek703emD6/hdbyBF3h5Dzz3TO270Heh
70IfXsPreAMv8PIeeO6Z2nel70rflT68htfxBl7g5T3w3DO170bfjb4bfXgN
r+MNvMDLe+C5Z/Z3vQeee6b2vdCH1/A63sALvLwHnnum9t3pu9N3pw+v4XW8
gRd4eQ8890zte9D3oO9BH17D63gDL/DyHnjumdq30LfQt9CH1/A63sALvLwH
nnum9q30rfSt9OE1vI438AIv74Hnnql9G30bfRt9eA2v4w28wMt74M8/vN/n
e98z+3vfM/t73zP7e98zxXvFa3gdb+AFXt4Df557pvYd6DvQd6APr+F1vIEX
eHkP/Hnumdp3pO9I35E+vIbX8QZe4OU98Oe5Z2rfib4TfSf68Bpexxt4gZf3
wJ/nnql9Z/rO9J3pw2t4HW/gBV7eA3+ee6b2Xei70HehD6/hdbyBF3h5D/x5
7pnad6XvSt+VPryG1/EGXuDlPfDnuWdq342+G303+vAaXscbeIGX98Cf557Z
3/Ue+PPcM7XvhT68htfxBl7g5T3w57lnat+dvjt9d/rwGl7HG3iBl/fAn+ee
qX0P+h70PejDa3gdb+AFXt4Df557pvYt9C30LfThNbyON/ACL++BP889U/tW
+lb6VvrwGl7HG3iBl/fAn+eeqX0bfRt9G314Da/jDbzAy3vguWf2975n9ve+
Z/b3vmf2975niveK1/A63sALvLwHnnum9h3oO9B3oA+v4XW8gRd4eQ8890zt
O9J3pO9IH17D63gDL/DyHnjumdp3ou9E34k+vIbX8QZe4OU98Nwzte9M35m+
M314Da/jDbzAy3vguWdq34W+C30X+vAaXscbeIGX98Bzz9S+K31X+q704TW8
jjfwAi/vgeeeqX03+m703ejDa3gdb+AFXt4Dzz2zv+s98Nwzte+FPryG1/EG
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

     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.01, 32.},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"Reproduction in single infection \\!\\(\\*SubscriptBox[\\(f\\), \
\\(w\\)]\\)\"", TraditionalForm], None}, {
     FormBox[
     "\"Manipulation in single infection \\!\\(\\*SubscriptBox[\\(\[Beta]\\), \
\\(w\\)]\\)\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{1.5}, {}},
  GridLinesStyle->{
    Thickness[Large], 
    GrayLevel[0]},
  ImageSize->300,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01, 4}, {32, 60}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.845717793214806*^9, 3.845717832916299*^9, 
  3.845739660384713*^9, 3.8459741284917183`*^9, 3.845974200018374*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"4ca1eb4b-f46f-4326-bfec-e6f8675fa280"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mutant dynamics", "Subtitle",
 CellChangeTimes->{{3.840620065356855*^9, 3.8406200675336027`*^9}, {
  3.845541265101153*^9, 
  3.845541265108594*^9}},ExpressionUUID->"40c92401-458f-47ef-b719-\
5d1a0071e43c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
NUYQBEE8dwjLSlpa2scffywlJbV3717hkYr4dffu3TNnzvzpp5/Qap40adKR
I0eKioq6HU0Bo3Lnzp3g4GA0UVVUVKBriYmJIvvGRWZy8Mhfv9De3u7u7q6q
qtrJGxITFhbm7e2dlJSEz5mZmfBjeXl5cB2QVxgPkWVHyIiICG6xDgHYQhls
/a66ujoYD6i2yJBc5LAoenp6sbGx/VPC/gO33IoVK3BD4i9qQ0zIF+wmIQiC
eLGxsrIaOnQoHu9oEQv0OYBz585JS0tDGffs2aOpqQmhHDt2LNrFwiE7ec9/
OAq0wREVPIaxsTH8BlyH8MuXnirFwDkQMa8SJB+u0FUk/DFUVFSwfdC6Sk5M
tE94G53cv3+fM2xddUoIHO8qCTgTV1dXJycnmBMx/Ru9qPOuThEfVX19Pfci
Ccbshx9+eP3110+cOME63HqaFkEQBDEI2b9//1tvvSU8eIPx8OFD1umxcOHC
P//8kx1hozq5MPAekFF/f38DAwM1NTVnZ+eUlJSmpibJRwV0JXaSiKD4r/wH
hVVY/HEJcytSr4UPPnr0KC4uztvbW6RVE5+u+AG03WZYmNra2qCgoKKioh6d
1SPYTnC4eXDDwCYhxerq6vLy8nv37sGCIum8vLycnJz09PTU1NSYmJg1a9Yo
Kiris46OzgcffPDxxx8bGhoyp8pfxj76okH+2o4gCOKF5Alvt47p06e/8sor
3333nUDbWQC0zbnBe+wvmtuQiZs3byorK7P1uEpLS4WT6Cppgc8SNvb7scUt
ya99hz9+6G9+fj5bNq3vsUlSY5ziP3jwgCl+RUUFLhOEPj4+Pjc3Fx8yMjIg
+snJyQkJCbGxsVFRUeHh4biawcHBAQEBvr6+8Ehubm4uLi6Ojo52dnY2NjZW
VlYWFhZmZma4Ja5du3b16lWYBC0tLbhNVVVVBQWFixcvXrp0CTcGvmpoaGhr
a1+5ckVfXx/hTU1Ncbdcv37d2tra1tbWwcEBBjUwMHD16tWHDx/GB9jaV199
9aeffvLz8+t1RYmpN4IgCOLpg+bkp59+KiUlJScnJ8k61WibZ2dn+/j4QD6g
L+7u7lAr/lEfvXuw96V/QyC8hBkQ8yZCZC+HmByKebXxhLeCK+qnqakJdq6u
rq6mpqaysrKsrKykpKS4uLigoACKn5mZyZr5iYmJUPzo6Gim+Ldu3YL+Qnah
+B4eHuwNCBQfMg3Ft7S0hOIbGxszxdfV1cUVUVdXh8QrKipe4gGXqKKiAsXX
1NTEJUMwBMYpUHycDsWHeXDkAUeBJLy8vPz9/ZEozEZYWFhERAQygywlJSWl
pKQgk1lZWXApyDYyf/fuXRQExYHzZHvPoZgobI8MFas3VA4K+/jxY27ljVWr
VnHTeVgYRItguEuf8Cb2sj4TdtPiRCSNr/zTdvCBGS3WoYSQyGd9fT2bEdza
2oo8IxL2KxkSgiCIAQXNzHfffXfIkCGGhoZiZAKaEhkZCY1j63HhM5rJEibR
UwPQo/CSBIagtLW1QW6gPgKKD8WEdObl5UFGWRsfzXloPUQWZcQHyK6A4qMx
DnW+efMmlBqSDeE2MTFB7RkYGDAPBnGHxKNpzxT/8uXLMACwAfgJlkBPTw+K
j2Y+rAJTfESFNj7idHFxgX9DQsgDEoX+wnIgG0zxYUUg+sgk/B4sCrJdVFSE
IpSWlpaXl6NQTD2Z4qPIYiYsS/IGqnf0PSrUw7hx4956663z58/zb0wD2xAS
EqKmpqajo4PKgSliU6rho3CZ2GJxqGHUPIKx932oHFyaU6dO4fLhIKpaX1+f
fUVlwrbhqp07dw71z5ZgFSgCORCCIIh+ZO/evWzwBp7YAgrO1uOCAjKhhA5C
5vAkF46k234AtChhZvgVn62ZCa3kXuVDRlkbH6oaHx8fExMDqUUTG0oRFBQE
fYEKe3p6Ij9QfHt7e+gFFATmh1N8qAmn+JB4WCPWsY/GPoQJUgVtQkHQxoc3
YIpvYWGBGOAc7HggwPr163EQaQUEBMBs3L59G3IWFRUFxU9ISIAhSUtLQ7Wg
KvLz85FzOBaUAu4LJUL7mu0Fz9r4wnvQ9AhJzu2ql6ancT5DbeW/62CTcPmG
Dx/+3//+F5eV3zLFxcUxtzB37txVq1bhM+wfLiW+ysrK4izW84PP+/btKy4u
xiWAf8Mlnj179u+//w7jByeDa7po0aJ58+bBZuDmwU21Z88eaWnp3q0nQxAE
QUgIlHHGjBls5Y179+5xxyHKaJWfOHECrfLr1697eXmhrc1e5XOKL/AqH4oP
BYeOs1f5EG7oO1SeKT7+Qv0RG/cqnym+qakpU3w8/BEbmvmsjY9UfHx8IAdQ
fPgNuA6m+PAhcCPwJJmZmfAncClQfDgWZL6srAyKzzrM4WrgbWCNJBcRhISX
OHDgANIV2HmWvRPpdSV32w/TU63vXVT94igGaCQMKh91jsuHK7t58+ZXX30V
N+TNmzerq6vZqGPUv6urK9voZ/r06evWrUtJScFx3BILFiz49ddfcavAYMD4
bd++ffny5YgHn+FYYA4XL148YcIE3LGICgnt2LFj5MiRuEvZKnO4V7/44gtc
dO4SU7cGQRBEv4N2Ohu8sWXLFv5FPnfv3r1p06adO3eePn0a3gOWAwaAvWXg
FB/nZmVlQfELCwuZ4peXl/MrPh7vUHyBTd96zUCrABrLcnJyCQkJbCwK/paU
lMDksPcgaC/3Lle966P4u1FRUYF77PDhw2vXroX6v/TSS5988omMjIy8vLyf
nx/uIpiBTB56enqTJ082NDRk9gC3JezH8ePH2bRZOMZly5bhOuKGrKmpgSeJ
i4ubNGkSbCQbyfzgwYNFixbNnTuXLeuBm/PQoUNwI1znHkEQBNG/sKfrjRs3
hg0bBr9hYGAgMH0VtgGPekVFxfPnz0Nw0QxUUFDAcx7NTKhwUVGRmD1bu023
Rz/1elqK5LS3t0OnjIyMuJ4NFPDEiRN//PHH8OHDUQPwUWLGlw5cxnrBYMuP
GLis4ma7deuWlZXVdR64LVmnGT6wfgwWuLKyct++fXALkZGRnbz9X9TU1KZM
mWJtbd3J6ySxtLSEG9HQ0OD2EzQ3Nx81apStrS27XWNjY8ePH3/hwgV2QWFL
pk2bBn/SlZ8kCIIg+gW28sbbb78dFhbGBosKjyS8d++er68vmvkmJiZwIDEx
MT4+PtACFRUV+BA8yaEUaHiy7hHx9GKRhKczWTU/P//LL79MTU3lRlywv3l5
eagcMzMzbiRtHxd/EJMH4SN9j/Z5Gfr46NEjNoWHn0Ye/GOYk5KSFi9evHnz
ZmYPmP2YM2dOeHh4J29FkWPHjv3yyy+4P9PS0tgyrbjD+bsvcCm/+OILGxsb
Zj/s7e1x3XFjw9XAw5SVlT2jCiAIgnhhecLbVp4N3sADuaSkpLMLlccDn015
gCg7OTmxTdbwMMdxPOGzsrJCQkLs7Ox0dHTgQNCcxNM+MTGxtLS0o6NDktcN
3U4+HTitZDG3trZ6eXl9/vnnKKZAABRzyJAhKK+Y03uRosARtO7j4uL668VT
t0kPQu8hYa+Xi4vLzz//fPHiRbZsO26zJUuWbNmyhd297GXKjh07oqKijI2N
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
qqrKNsANDg6GE+h2PCF/5FC6qKiof/zjHx9++CHEUWR4hKmrq7Oysvrzzz/Z
YlMip4I+R+BW5+ZiD2hC3U4pvXPnjqampiTjJXqU1W7/p/gD9OXVZEtLi5ub
m/BrOIIgCPHs3bv3+vXraPfxP3DwZIYkSUlJOTo69tfyC5I80ERKM3TW399f
YGSpyJCDin7JofAbE+4D/EBWVhZ7/6Krq6uoqGhubu7l5ZWQkHDv3j0xVw16
gZp86aWXvvrqK7iXroLhHqiqqioqKurRi61By1O7SbrtfOO3lxJG2NlP+e+q
A6RH/5tsns7g/KcjCGLQgkarnZ3d6dOnuSMQd7aOxI4dO0aPHs26TPt9mChH
j566BQUFaFipqKjwjyz9Oz/3+MsOF1FcXAw/5u7ubmRkpKCgoK+v7+zsHBER
kZ+f39zc7OHhwUYv1NbWbtmyZciQIdLS0uLXdnhhEP/mYkBvIQkj79ai9FN2
/tb/LwRBPFtcXV337NnDDWCrqKiQk5Nbv379hx9+qK6uLnJWAtrOA70+uZin
IlLPyMiATYLxcHJy4t+C82+OQA9VZWVlSkoKtwHu5cuX165d6+DgcOfOnYkT
J7711lubN28WGLj4NxSjwWA2JDmxv3o5/oaXmCCIQUJBQYGioiL/GuaPHj2C
61i1atXy5cttbGyEx9LDhFhbW6MFXVhY2O/5kfx5iDY7W7OUG1naL8PhXlR2
7dp16dIlNze3kJCQd955B34S9cZ+GvwvpwiCIIjnmie8yfhaWloiFwmECbG1
tWUrH/LT2tqanZ0dExNz/vz506dPowUtHK2YFMUH6AUCI0vZUkviR8f1ex4G
OSgsW1IMl9vIyEhKSmr06NEBAQESnjvAuSMIgiBefKAmbN2hTlHKImZIf1NT
U15eXnJysrq6Ottkqra2tqskujrY2NiYkZHRX0s+spGlsE/GxsbR0dH8k0b/
zvDXP67R9u3bhwwZMmPGDLayd7dTYwiCIAii3+np8DZ4leLi4szMzBs3bpw8
eVJZWVlgyMcT3ibdAvNfuM/wOefOnRPuQulLtvG5qKjI3d1dVVUVuUpJSelq
eaUX9T2CGP8ASzZ58uRXX31106ZN/ANuxUzafZFqhiAIgnh+YY6iuro6i4fA
oI7W1laIvqWlpY+PT3t7u8A8TXyNjY3Fr31JvavBdYgcRoiNLHV0dMzJyREe
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
KA0YBGtra5Eekxd8fwQWqYrFSxbMd3wKGK+orKxUUVGB3rh169aNGzd27NgR
HR0N7dEIGYBdli5dumjRogZFFH0NBIUiEjAUcnJyHTt2/PXXX/kt5/Xu3Tsv
L6+vvvqqU6dOc+fOpWuNUiifOMTJ1tXVrVq1SkFBQYw2ITU11cPDw8XFxZWF
m5vbAxbu7u4JCQn8BiViY2MhMx4+fKiqqnr8+HHoDUiUxhWgoqLi66+/VlNT
a+qZUCiU/6W4uHj48OFdunTZuXMnvzTogOrq6h06dOjTp8/JkydbsngUCkVi
iYmJgWcfM2ZMZGSkuB5UycrKCgoKCmARGBiIzyAWISEhGRkZ3E+LEKytrf38
/MrLy2HQoqKiZs6cmZub2+CdFJ7gWLCHOByTnl9KOrJBoQgPTAR6dOfOnaWl
pc3NzfklS09PX7p0KXkYFoalJUtIoVAkE3jkixcv3rlzZ/LkyYhHXr16VVtb
W1ZW9ubNGzj9Fy9eVFdXFxQUkEkUNTU1EANQC2/fvq2rqxNwc6SoqCgxMTHh
fyFb8vLyeLp42LGrV68SgUEWC5owYcKzZ8+eP39ObsegGDhoKQuSA76Qe0Cv
X79+9+4dis3krKysPGDAALLKEHJGeVBmfGILzgVHITui/CUlJdgLafAdp08X
JqKICtrPy5cvmyJc25DoRT9C54KQ6N27N7ozzzToXDApPXr06N+/v5KSEnN2
MB3M7VF8vmNB/mJ+Ig37LU785PlwGaFxN1spFEoLg47s4+Ozd+9ea2trWMsT
J07MmzcvJycHqsDU1NTFxSUoKMjMzCw4OJjcB4H2QJyCLfDy2AhT4+bm5ufn
B/vDnTnUgqenJxIwt1QY4uPjeY5vVFRUbNmyhTwmA10B8aOgoACNgaMbGhpG
RUXZ2dndu3cvIiLixo0beSywxdnZGebo1q1bEEJaWlrkbjLynzNnzqpVq4gt
QmFwRo6OjtjXwMAAEuvRo0fICkfBGRkZGUFZxcbGImrDTw0NjWaueEr7AQ0M
ehhtFa0UX4Tfq8Et/Da2OtD2y5Yt69Chw6RJk6DPeaZBb4Ix+eyzz/7++2/m
Li26W3JyMrpeZmYmND9Mjbe3t6+vLxLgL/R0/ITFwHYiMHD62B4XFwfjg3+J
DgHo+MRKIDTALviUzIqiUCgM6PhycnIeHh4k0k9LS/vpp5/u3r0LIbF161Z0
/IyMjPXr10N+2Nvbnz17Nj8/H5568+bN6O///vtvWFiYl5cX3D3PWaawJy/Y
qKqqYr7zm5UKeYPDQRjg0Lq6uvD7WVlZZWVl9+/fh9XC0bW1tc+fPw9tgDI8
fvwYVuvy5cvYiBJiRxwRP6E3AgICVFRUhg0bJi8vD81Tz5pMsmPHDktLSxRj
8eLF+BkaGrphw4Y3b95AYKASkOeRI0dw3CdPntApHxThgaeDTjY3N//qq6/Q
6tBcRdqX/TtCdXheNFHG24q/uEKXR8B26IEhQ4Z06dJl48aN3ImhCoqKirZt
29a9e/clS5agrzG7Q1ocO3Zs7ty5a9euRS87yWLKlCkIedA30QFhZBAj/P77
77Az5CUstra2+/fvnz9/PhROYWEhMsHnt99+q6enhzDn6tWr0tLSOjo6PEMe
CoUiOUBOhIeHM9PLEUrAIMDh5ubmwqFnZ2f7+flBVyBqU1JSun79Ory/q6sr
TAS6/JYtW0h4AnvS4BKggp9aZb4bGxv7+PhER0dHRERA88BqkSFWIyMjZWVl
yIl//vkHR0TBFBQUoqKiEFtBZiQlJZmZmSEBbI61tTV2QQKcF7IKDg7GOSLn
ly9fLl++HIoFpV29ejUM+7Vr12CsIJygW5AbtsCglZSUQPOgAOKsZUp7gZ87
hltE3zEwMJg1axY8I7k91+BeBGhvMtaHTocGv2vXLvQ1NGDxlpwDkZQMSQxJ
DzXl5OQE+wAN37FjRxkZGXRM0rU/sEBXhTGJj4+Hku/VqxdEBRIz+eAviARE
LlpaWgMGDEDPJf+ePn26f//+69atS05ORib+/v6QE/r6+ujvqAcEPqgWWKGh
Q4ei8yK9o6MjlAx0CA6HkvTp0+fEiRONW6KHQqG0GDCSHJaHzMqAC4YRQNQG
e3Lz5s3Xr1+jR8MCZGZmwoMjBkGXh95wcXEhN1nEUhiYF1ja8vJylIExwgQU
BuIBmmH79u0wPjExMTDLODoMDsIlZ2fnM2fOXLlyxcvLC9qDSBScBSQEPkk+
UEooMLbY2NggJbYoKiqqq6vDgqWnp+/evRsyAzqEDNfwGyKmUBi4XXZVVRU8
aY8ePQwNDQXvS6Yo1LNkMDoUulhxcfGpU6ciIyPj4uKgmdEmm6vcbAijOtC7
IQPg1tFxVq5cOXfu3IsXL65Zs0ZKSqpbt26amproMggB0D2RxsTEZNOmTcOH
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
m1auXInC19XVoTb69euHWiKTi8gKYKhDUl0S3oAlvHgUCoXS8lDD2BSYcTC4
woSEhK5du0JvwFGSqbxkO1wnlABZFwUJ5s6dGxQURHaHf4ck0NLSSk1NhQxY
vXo1ebZo6dKlU6dONTMzs7W1hU4wMjLy9PSEKmBf5bUR+hOFgU8vLi6GE0dp
w8PDfXx8XFxcbGxszM3NdXV1r7LQ0dHBoe/evevs7Pzo0aOwsDByr6eoqKiq
qkpUTcv+GRERoaysbGFhMWXKFKgy9gEc5Aw18ssvvzCL5uGgXbp0gVhCBUIv
bd26FVUUGBiIMqOKoFXIPJB6ltIjj/ZwrOHfKuBMc3Jy5OXlf2KBMyVfcEGh
spaw2LJlC3Qg6lMS7nNRKBQKpU3w/PnzgICAhw8f7tixQ4rFhQsXvFkgkIe/
hnvds2fPmDFjhg0btm/fvuzsbI4c4J4gOZDmxx9/hLuHDNDX1w8JCXn58mU9
SyQUFBSEhoZaW1urqKhAGCBbOOUGX2oj/Awc9r/g3CsrK8kbjePi4lAMLy8v
R0dHHN3U1BTlvHz5sqqqKkqI84IccnNz8/f3j4yMTE5OhgYoKyuDuBJwrNra
WgiewYMH37hxg307NiJb8nIfUiTks4JFXl4eqhEaDIfLzc3duHHj2bNnIZOg
35AJxIalpeXJkyeh3GJiYqKjo7Ejaiw9Pb2F/Tjz/oKkpKTly5fPmDGjT58+
ZDGWn3/+ecGCBfPnz589eza+DxkypHv37hMmTICio28KoFAo7QkaQIkdpkoR
dI8aNQpaYsCAAQMHDhw0aNDQoUPxc8SIESNHjsTn8OHDEbYfOXIkLCyMXzwL
pwM/DpeKHaFM1NXV4X+ZO3dMevgy+HQ/Pz+y+ujt27cbfNUIz8dyuTfy/Ivf
T5S2vLwcMiklJSUqKgpyy8PDw97e/tatW0ZGRhoaGjgXTU1NY2NjlBDbPT09
AwMDoQQgYO7duwdl1bt3bz09PUZd1PO6TYmTRY1BhOBYsbGxS5YsqaiogPaQ
l5eHwKiqqlJSUjp//jw2wmsrKCggJSTH7t27FRUV79y5c+nSJUbStMDkZ45Z
wdA8qB9ojE6dOqHkhYWF1dXV5KWNKHlqaqqamhqu9fjx43Eu0GC0h1Ionyzt
r/tzD25TxAJC6VgWcKbx8fHkMyEh4clHoBDIHAx+lQ/HCh8E9wT/iOD9t99+
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
W+LG+fHjx9u3b0PSkM6oFEqzUl5enp2dLTzM06dPx44d2wKZiY+P19DQgN7Q
0tJiPpTw9lZdu3Ztx44dJSUlnZycaP8NCoXybZKbm3vw4MGePXuiPSQ9Nxow
3gSBX7586ejoeOHCBVHWrqVdPr4+muSe5uXlCVl0lWBlZTVnzhzhYTZs2CAl
JdWY6f1FDHz16tXhw4d37dr1xIkTzLICdf/3IaqsrJwwYQLyIyMjExsbyw7W
yCxRKBRK6+fTp0/+/v5//vln27Zt0Xpfv3597ty57FGuvKAlLCoq4ruf/CLO
mJgYMzMzNKp1/HqSUL5uGn+jYYtNTEwMDQ1RlwTpXgiS7t27C4mktLQU4lld
XT0nJ6dJciWIDx8+oLZ///33Q4cOdXd3FxQsKiqqR48eEhISampqkOVNpb3p
Y0WhUL4ISMO+fv160o1/1apVDx8+rFchHDp0SHiAOs6UIG5ubs7Ozmj2uQ4J
GUFD+TqotwqJct+9vb2hgfmO4yAzaLVr1+7Zs2cw94mJiRcuXOAKA7kyceJE
e3v7gICA4uJi9iEyw+fOnTv5KmcRYS6hoKBg48aNbdq0mT17dlxcnKDAu3bt
6tSp03fffXf58mVkniuShqVOJ72hUChfIhEREZqamk+fPiWNoRBLAYkiKBIu
LXH//n24ftHR0XR2o2+BxqgLvsydO3ffvn28+3NycmC1u3XrNnjw4I4dO3bt
2nXGjBnsafZra2t79uzp6OgYGRm5evXq3bt3o1bv37+fTOM/fvz49+/fu7q6
kgWXRYevfYfGmDlzJvTGhg0bCgsLucakE3Jzc4cNG9a2bdtFixa9evWKCQDB
zzwa2MAlsFd5/sCBKyoSjJ0ldnKiLxJNoVAoLQm7sfLz80M7DH9QiHNK9ujo
6Aj/5sIG/ilMw7lz54gvybc1pnyt1NTUaGhoBAcHi3UWY9Y9PT3l5OQqKyuZ
OnP37l3IjO+++27ixIkjR46cNWtWeno6b42ClpCRkamqqkJF7dWrl7a2NnZm
ZGT8/PPPkAcqKiqBgYFOTk5i5UcQ7u7uQ4cOheYxNTWFzuE9ETuPHTvWuXPn
IUOGJCYmMgIDEigoKAhqvLq6GttJSUleXl4QSMjzf//9l52d7evre+PGjfLy
ciZCBIuPj0fmy8rKyB4IjIKCAjxliLa4uBheA+2JSqFQWie8benRo0ejoqKE
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
U1tbCxWRkJAQFxcXHx+PDTSP2EhMTEzikJKS8vz5c66VTXiNLNpJCAx46GQn
fNtBgwY5OjqS7gSIbfTo0Xp6ekR+QJwEBAQEBgaimQ0LC4OBgAscFRUFd/7e
vXvICfIAU5icnAx9Al8YZiszMxO+8LNnz/Ly8qCREA/MJdzz8vJy2DWkAmON
hhrKR9D7E7HsWhO+Kml8VEIMoqBD4o4AEkW68E1dSE5Ep16LL0TniFIC4p5b
bz5FuVgmG9B4o0aNkpGRQVUXtEIQ6n+PHj2gN44ePUr631IoFMpXjyAnV0gb
W1NTAwd50qRJzFwQBw4cUFZWhpAg00JaWVkNHDjQ398fWiIoKCg2NhZyAtoG
G5Ao0dHRaG9v3boVHh4OZxwiBGrk+vXrvr6+cFQhXTw8PC5fvnzhwgVXV1dn
Z2fImHPnztnZ2dna2sJnROQnT540MzODB338+HEDAwM479gwNjbGHuy3tLRE
mNOnTyO8vb09PHpEAoGECC9dugR3G/F7eXnBwffz80Mmb9y4gTwgJ8gPHGRe
IQQnHY7848ePcb0ZGRlsIVRYWEiEUFlZGRFCKBwIIRgaZgpQ9rsCcbWE6OqI
K/4GvIcRFGe9qYuSSVHeb4ieZ3Flj1iRs2MWS5jVcd7+ofopKCjgceDbeYOc
i4onLy8PvbFv3z5maFgTil4KhUJpSYQ3lUJsBF8rwCY3N3fNmjULFiwgAw1g
YefOnaumpkYWSYepXbp06bRp09De6uvrQz8wC542H2jna2trYeirq6th9NGG
QwCUlJRADBQVFeXn5yPPEAlZWVnp6elpaWnIKrIHIcEWQnfu3ImMjITkYIQQ
pAgECYQQxAkkCrTKlStXLl68CCEEAePk5AQxA0kDYXPq1Cm2EIL4gQSCEDI0
NDThwCWEznIgQgixMUIIxYW0kCJMEpcQQt6QQ+QTuUWeiRBKTk4mQgjXxQgh
XO+LFy9wd1ACKAeUBvNGCKUkpMNAve83RDxFXITIJLHib46XS6KfhV/Ut23b
tklJSU2fPp3pBsyLhYWFnJwc9AYqCTPCiOoNCoXybSKk9YPJ09DQ2LVrF/n0
DJdfRUUFnhr5egJzhkMIoKenB7MrpNVt8oy1wpg/ffrEJYTIhF0QA2whBKmA
YoRsgHh49OgREUL379+Pi4u7d+8eZEZUVBQkx61bt4gQCgwMJELIx8cHQghC
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
qg3olurq6tTU1JycHDog5evm/wHuXOHI
    "], {{0, 405.}, {720., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFAFpJaBSSWxoCCHBcjKzSspCnJ3UoiIjFJgf8jADoS8DGIMConJxQWOAQE+
INUwGhV8u8YAMpDhsi7IrFNSU5tU6wV8LWYKX734SrQJUz0K4EpJLU4G0n+A
ODW5oKiEgYExBchWLi8pALE7gGyRIqCjgOw5IHY6hL0BxE6CsI+A1YQEOQPZ
N4BsheSMRKAZjD+AbJ0kJPF0JDbUXhDgdsksLshJrFQIMCbgWjJASWpFCYh2
zi+oLMpMzyhRcASGUqqCZ16yno6CkYGhOQMDKMwhqj8HgsOSUewMQqz5PgOD
7f7////vRoh57Wdg2AjUybUTIaZhwcAgyM3AcGJnQWJRIliIGYiZ0tIYGD4t
Z2DgjWRgEL4A1BNdnGZsBJZn5HFiYGC99///ZzUGBvbJDAx/J/z//3vR//9/
FwM132FgOJAHACk3cm0=
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> <|
     "Exif" -> <|
       "ExifTag" -> 26, "PixelXDimension" -> 720, "PixelYDimension" -> 
        405|>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{358.8984374999994, Automatic},
  ImageSizeRaw->{720., 405.},
  PlotRange->{{0, 720.}, {0, 405.}}]], "Input",
 CellChangeTimes->{{3.846069177249696*^9, 
  3.846069194930298*^9}},ExpressionUUID->"c0c57942-60d3-4cc0-8c43-\
e9730260cd7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", "p", " ", 
    FractionBox[
     RowBox[{"M", " ", "W"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", " ", "+", " ", "W"}], ")"}], "2"]]}], "+", " ", 
   RowBox[{"p", " ", 
    FractionBox[
     SuperscriptBox["M", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", "+", "W"}], ")"}], "2"]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], 
    FractionBox["W", 
     RowBox[{"M", " ", "+", " ", "W"}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "p"}], ")"}], 
    FractionBox["M", 
     RowBox[{"M", "+", "W"}]]}], "+", 
   RowBox[{"p", " ", 
    FractionBox[
     SuperscriptBox["W", "2"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"M", " ", "+", " ", "W"}], ")"}], "2"]]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.840620437289873*^9, 3.840620549156514*^9}, 
   3.8406206453432693`*^9, {3.843798803211968*^9, 3.8437988046824913`*^9}, {
   3.84379884925508*^9, 3.8437988746867323`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"c36919b7-595f-44cb-8fd9-18307a02e918"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.840620544681448*^9, 3.840620549541847*^9}, {
   3.840620648126422*^9, 3.840620654181031*^9}, 3.8407075539880342`*^9, 
   3.8407087014875183`*^9, 3.840709790176271*^9, 3.840710945484049*^9, 
   3.8408758420001087`*^9, 3.841227112730246*^9, 3.841305307770814*^9, {
   3.8437988698860197`*^9, 3.843798875161975*^9}, 3.8459741396437817`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"b89e0c09-a95e-4c82-a425-6947757e4b75"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dImdt", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "\[Eta]m", " ", "Is"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]m"}], ")"}], " ", "Imut"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]m", "[", 
      RowBox[{
      "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]m", ",", " ", "Dm", 
       ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}], "Imut"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"p", " ", "\[Eta]mm", " ", "Is"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mm"}], ")"}], " ", "Imm"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]mm", "[", 
      RowBox[{
      "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mm", ",", " ", "Dm",
        ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}], "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"p", " ", "\[Eta]mw", " ", "Is"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mw"}], ")"}], " ", "Imw"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]mw", "[", 
      RowBox[{
      "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mw", ",", " ", "Dm",
        ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}], "Imw"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"\[Lambda]m", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]mm"}], " ", "+", " ", "\[Lambda]mw"}], 
         ")"}]}]}], ")"}], "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]m"}], ")"}], " ", "Dm"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]w", " ", "+", " ", "\[Lambda]m", "+", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], 
        RowBox[{"(", " ", 
         RowBox[{
         "\[Lambda]ww", " ", "+", " ", "\[Lambda]mw", "+", "\[Lambda]mm"}], 
         ")"}]}]}], " ", ")"}], "Dm"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"q", " ", "\[Lambda]mm", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]m", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "\[Lambda]mm"}], " ", "+", " ", "\[Lambda]mw"}], 
         ")"}]}]}], ")"}], "Dm"}], " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mm"}], ")"}], "Dmm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"q", " ", "\[Lambda]mw", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]m", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Lambda]mm"}], " ", "+", " ", "\[Lambda]mw"}], 
         ")"}]}]}], ")"}], "Dw"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]w", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Lambda]ww"}], " ", "+", " ", "\[Lambda]mw"}], 
         ")"}]}]}], ")"}], "Dm"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mw"}], ")"}], " ", "Dmw"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fm", " ", "Dm"}], " ", "+", " ", 
    RowBox[{"fmm", " ", "Dmm"}], " ", "+", " ", 
    RowBox[{"fmw", " ", "Dmw"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "M"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Eta]m", " ", "+", " ", "\[Eta]mw", " ", "+", " ", "\[Eta]mm"}], 
      ")"}], "Is"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"odesMut", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dImdt", ",", " ", "dImmdt", ",", " ", "dImwdt", ",", " ", "dDmdt", ",", 
     " ", "dDmmdt", ",", " ", "dDmwdt", ",", " ", "dMdt"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varMut", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Imut", ",", "  ", "Imm", ",", "Imw", ",", " ", "Dm", ",", " ", "Dmm", 
     ",", " ", "Dmw", ",", " ", "M"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"forceInfMut", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Eta]m", " ", "->", " ", 
      RowBox[{"\[Gamma]", " ", 
       FractionBox["M", 
        RowBox[{"M", "+", "W"}]], 
       RowBox[{"(", 
        RowBox[{"M", " ", "+", " ", "W"}], ")"}]}]}], ",", " ", 
     RowBox[{"\[Eta]mm", " ", "->", 
      RowBox[{"\[Gamma]", " ", 
       FractionBox[
        SuperscriptBox["M", "2"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"M", "+", "W"}], ")"}], "2"]], 
       RowBox[{"(", 
        RowBox[{"M", " ", "+", " ", "W"}], ")"}]}]}], ",", " ", 
     RowBox[{"\[Eta]mw", " ", "->", "  ", 
      RowBox[{"\[Gamma]", " ", "2", " ", 
       FractionBox[
        RowBox[{"M", " ", "W"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"M", " ", "+", " ", "W"}], ")"}], "2"]], 
       RowBox[{"(", 
        RowBox[{"M", " ", "+", " ", "W"}], ")"}]}]}], ",", " ", 
     RowBox[{"\[Lambda]m", " ", "->", " ", 
      RowBox[{"\[Beta]m", " ", "Imut"}]}], ",", " ", 
     RowBox[{"\[Lambda]mw", " ", "->", " ", 
      RowBox[{"\[Beta]mw", " ", "Imw"}]}], ",", " ", 
     RowBox[{"\[Lambda]mm", " ", "->", " ", 
      RowBox[{"\[Beta]mm", " ", "Imm"}]}], ",", " ", 
     RowBox[{"\[Lambda]w", " ", "->", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", " ", 
     RowBox[{"\[Lambda]ww", " ", "->", " ", 
      RowBox[{"\[Beta]ww", " ", "Iww"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQzXQp5mTa3DeOJ168Owuit3e2PgHRHE1Pn4PoO6dm
9qQD6Q+bFk8E0QZR1fNA9EtLgYUg+tR0yfgMID35yrssEG23R1A3E0gn1b+2
B9FOQr9cQXT7pvlFIHrht+uVINoqYMI8EF3HlLsIRB9M5l8ComOKw8+D6E/K
bWA65B4XYxbI3tV7wTSbDrsAiHZQMwfTi7Z5sfaCzFnRDabX3vaTBtETVk8H
0z+mHgsD0ZvPnw0H0QsehjTvB9Ln5pq1gehp9tf1+ucB6d8SBiB6GafSKfnl
bxwtfk08A6Il9pyuPg2k2VY9bQTRAJRyo+M=
  "],
 CellLabel->"In[23]:=",ExpressionUUID->"d9e3ff15-ba04-44c8-bf06-ffbc241605d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mmat", " ", "=", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]m"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]m", "[", 
         RowBox[{
         "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]m", ",", " ", 
          "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}]}], ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "\[Gamma]", " ", "Is"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]mm"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]mm", "[", 
         RowBox[{
         "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mm", ",", " ", 
          "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}]}], ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{"p", " ", "\[Gamma]", 
        FractionBox["M", 
         RowBox[{"M", "+", "W"}]], "Is"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]mw"}], ")"}]}], " ", "-", " ", 
        
        RowBox[{"\[CapitalPi]mw", "[", 
         RowBox[{
         "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mw", ",", " ", 
          "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}]}], ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{"p", " ", "\[Gamma]", " ", "2", 
        FractionBox["W", 
         RowBox[{"M", " ", "+", " ", "W"}]], "Is"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Ds"}], ",", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]m"}], ")"}]}], "-", " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]w", " ", "+", " ", "\[Lambda]m", "+", " ", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
            "\[Lambda]ww", " ", "+", " ", "\[Lambda]mw", "+", "\[Lambda]mm"}],
             ")"}]}]}], " ", ")"}]}], ",", " ", "0", ",", " ", "0", ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"q", " ", "\[Beta]mm", " ", "Ds"}], ",", " ", "0", ",", " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]m", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Lambda]mm"}], " ", "+", " ", "\[Lambda]mw"}],
            ")"}]}]}], ")"}], ",", "  ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mm"}], ")"}]}], ",", " ", 
       "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Dw"}], ",", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Dw"}], ",", " ", 
       RowBox[{
        RowBox[{"q", " ", "\[Beta]mw", " ", "Ds"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw", " ", "Dw"}]}], ",", 
       " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]w", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Lambda]ww"}], " ", "+", " ", "\[Lambda]mw"}],
            ")"}]}]}], ")"}], ",", " ", "0", ",", 
       RowBox[{"-", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mw"}], ")"}]}], " ", ",", 
       " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fm", ",", " ", "fmm", ",",
        " ", "fmw", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], " ", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", 
           RowBox[{"2", " ", 
            FractionBox["W", 
             RowBox[{"M", "+", "W"}]]}], "+", 
           FractionBox["M", 
            RowBox[{"M", "+", "W"}]]}], ")"}], "\[Gamma]", " ", "Is"}]}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.840625967504665*^9, 3.840625979340063*^9}, {
   3.8406260247833853`*^9, 3.84062608101897*^9}, {3.8406261226539907`*^9, 
   3.8406261531747637`*^9}, {3.84062621655686*^9, 3.840626446187743*^9}, {
   3.840626478927162*^9, 3.84062666195397*^9}, {3.840626714715987*^9, 
   3.840626785767215*^9}, 3.840626821073241*^9, {3.840697679719825*^9, 
   3.840697732889677*^9}, {3.840698073998891*^9, 3.8406986770448923`*^9}, {
   3.840698730293057*^9, 3.8406987330164623`*^9}, {3.840698952548826*^9, 
   3.840698952725219*^9}, {3.840699133917935*^9, 3.8406991351289577`*^9}, {
   3.840699197929571*^9, 3.840699202574643*^9}, 3.840875830902709*^9, {
   3.841227144405538*^9, 3.841227151159944*^9}, {3.845717659452156*^9, 
   3.845717671378642*^9}, {3.8460693102023277`*^9, 3.8460693505502*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"bd8b9c23-7e4f-4b24-8a55-baacc54a177a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Mmat", ".", "varMut"}], ")"}], "/.", "forceInfMut"}], ")"}], "==", 
   RowBox[{"(", 
    RowBox[{"odesMut", "/.", "forceInfMut"}], ")"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.84069873797436*^9, 3.840698741686726*^9}, {
  3.840698972851047*^9, 3.840699030479938*^9}, {3.84069907688947*^9, 
  3.8406990823699102`*^9}, {3.8406991442566*^9, 3.840699181618246*^9}, {
  3.840699212916603*^9, 3.8406992998375807`*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"53e7da18-1761-45ee-9341-3e018e692890"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.84069874241217*^9, {3.840698957731773*^9, 3.840699082810362*^9}, {
   3.840699137970414*^9, 3.8406992284269733`*^9}, {3.840699261198585*^9, 
   3.840699300325427*^9}, 3.840699673051055*^9, 3.8407057119346046`*^9, 
   3.8407087467306423`*^9, 3.84076453857762*^9, 3.840875945023609*^9, 
   3.8412271572436857`*^9, 3.8459741565691853`*^9, {3.845974226528348*^9, 
   3.845974241001829*^9}, {3.846069324220503*^9, 3.846069353314247*^9}},
 CellLabel->
  "Out[439]=",ExpressionUUID->"828afa67-aa95-48bd-8cee-762864889e80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mmat", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.841227893620337*^9, 3.841227897093965*^9}, 
   3.845974174408833*^9, {3.845974221644162*^9, 3.8459742235058117`*^9}},
 CellLabel->
  "In[440]:=",ExpressionUUID->"0fba924e-c8ab-460c-b5d4-5dc69da319e3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]m", "-", 
       RowBox[{"\[CapitalPi]m", "[", 
        RowBox[{
        "Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]m", ",", "Dm", ",", "Dmm", 
         ",", "Dmw"}], "]"}]}], "0", "0", "0", "0", "0", 
      RowBox[{"Is", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " ", "\[Gamma]"}]},
     {"0", 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]mm", "-", 
       RowBox[{"\[CapitalPi]mm", "[", 
        RowBox[{
        "Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]mm", ",", "Dm", ",", "Dmm", 
         ",", "Dmw"}], "]"}]}], "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"Is", " ", "M", " ", "p", " ", "\[Gamma]"}], 
       RowBox[{"M", "+", "W"}]]},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]mw", "-", 
       RowBox[{"\[CapitalPi]mw", "[", 
        RowBox[{
        "Ds", ",", "Dw", ",", "Dww", ",", "\[Beta]mw", ",", "Dm", ",", "Dmm", 
         ",", "Dmw"}], "]"}]}], "0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "Is", " ", "p", " ", "W", " ", "\[Gamma]"}], 
       RowBox[{"M", "+", "W"}]]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{"2", " ", "Ds", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mm"}], 
      RowBox[{"Ds", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw"}], 
      RowBox[{
       RowBox[{"-", "\[Lambda]m"}], "-", "\[Lambda]w", "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]mm", "+", "\[Lambda]mw", "+", "\[Lambda]ww"}], 
         ")"}]}], "-", "\[Mu]", "-", "\[Sigma]m"}], "0", "0", "0"},
     {"0", 
      RowBox[{"Ds", " ", "q", " ", "\[Beta]mm"}], "0", 
      RowBox[{"\[Lambda]m", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Lambda]mm"}], "+", "\[Lambda]mw"}], ")"}]}]}], 
      
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]mm"}], "0", "0"},
     {
      RowBox[{"Dw", " ", "\[Beta]m"}], 
      RowBox[{"2", " ", "Dw", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mm"}], 
      RowBox[{
       RowBox[{"Dw", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw"}], "+", 
       RowBox[{"Ds", " ", "q", " ", "\[Beta]mw"}]}], 
      RowBox[{"\[Lambda]w", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]mw", "+", 
          RowBox[{"2", " ", "\[Lambda]ww"}]}], ")"}]}]}], "0", 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]mw"}], "0"},
     {"0", "0", "0", "fm", "fmm", "fmw", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["M", 
           RowBox[{"M", "+", "W"}]], "+", 
          FractionBox[
           RowBox[{"2", " ", "W"}], 
           RowBox[{"M", "+", "W"}]]}], ")"}], " ", "\[Gamma]"}], "-", 
       "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.841227898016885*^9, 3.8457176858688307`*^9, {3.845974156707123*^9, 
   3.8459741749053183`*^9}, {3.845974226671177*^9, 3.845974245493948*^9}, 
   3.8460693562288303`*^9},
 CellLabel->
  "Out[440]//MatrixForm=",ExpressionUUID->"93ba0d1a-354d-423e-b218-\
ba975c305910"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fmat", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", "0", ",", " ", "0", ",", " ", 
       "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", "0", " ", ",", 
       " ", "0", ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fm", ",", " ", "fmm", ",",
        " ", "fmw", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8406993040907097`*^9, 3.840699388355545*^9}, {
  3.840699433821987*^9, 3.840699457602055*^9}, {3.840699639211607*^9, 
  3.840699639617209*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"204508a9-3ab2-4ee3-972f-5a57bb1ebe32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vmat", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "+", " ", "\[Alpha]m"}], ")"}], "+", " ", 
        RowBox[{"\[CapitalPi]m", "[", 
         RowBox[{
         "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]m", ",", " ", 
          "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}]}], ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}], "\[Gamma]", " ", "Is"}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "+", " ", "\[Alpha]mm"}], ")"}], "+", " ", 
        RowBox[{"\[CapitalPi]mm", "[", 
         RowBox[{
         "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mm", ",", " ", 
          "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}]}], ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"-", "p"}], " ", "\[Gamma]", 
        FractionBox["M", 
         RowBox[{"M", "+", "W"}]], "Is"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"d", " ", "+", " ", "\[Alpha]mw"}], ")"}], " ", "+", " ", 
        RowBox[{"\[CapitalPi]mw", "[", 
         RowBox[{
         "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mw", ",", " ", 
          "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}]}], ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{"-", " ", "p"}], " ", "\[Gamma]", " ", "2", 
        FractionBox["W", 
         RowBox[{"M", " ", "+", " ", "W"}]], "Is"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]m"}], " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "q"}], ")"}]}], "\[Beta]mw", " ", "Ds"}], ",", 
       "  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]m"}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]w", " ", "+", " ", "\[Lambda]m", "+", " ", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
            "\[Lambda]ww", " ", "+", " ", "\[Lambda]mw", "+", "\[Lambda]mm"}],
             ")"}]}]}], " ", ")"}]}], ",", " ", "0", ",", " ", "0", ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", " ", "q"}], " ", "\[Beta]mm", " ", "Ds"}], ",", " ", "0",
        ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]m", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Lambda]mm"}], " ", "+", " ", 
             "\[Lambda]mw"}], ")"}]}]}], ")"}]}], ",", "  ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mm"}], ")"}], ",", " ", "0", 
       ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[Beta]m"}], " ", "Dw"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Dw"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "q"}], " ", "\[Beta]mw", " ", "Ds"}], " ", "-", 
        " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw", " ", "Dw"}]}], ",", 
       " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]w", " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "\[Lambda]ww"}], " ", "+", " ", 
             "\[Lambda]mw"}], ")"}]}]}], ")"}]}], ",", " ", "0", ",", " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mw"}], ")"}], " ", ",", " ", 
       "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0", ",", " ", 
       RowBox[{"\[Delta]", " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", 
           RowBox[{"2", " ", 
            FractionBox["W", 
             RowBox[{"M", "+", "W"}]]}], "+", 
           FractionBox["M", 
            RowBox[{"M", "+", "W"}]]}], ")"}], "\[Gamma]", " ", "Is"}]}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.840699461731371*^9, 3.84069959396259*^9}, 
   3.840875855816568*^9, {3.8412271656942863`*^9, 3.841227171058416*^9}, {
   3.84571785929478*^9, 3.845717874136286*^9}, 3.8457179544788218`*^9, {
   3.846069364070077*^9, 3.8460693803360853`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"bfa17c7f-7ecb-4f92-b214-829e90890efa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fmat", " ", "-", " ", "Vmat"}], " ", "==", " ", "Mmat"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.840699609877615*^9, 3.840699616117393*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"2f278db8-f6a6-495e-9d4d-a378df4c472a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.84069961661789*^9, 3.840699678167152*^9, 
  3.840705715082355*^9, 3.840708750055233*^9, 3.8407097967852507`*^9, 
  3.840710954001243*^9, 3.840764542277005*^9, 3.840875858859886*^9, 
  3.840876247983423*^9, 3.841227173856863*^9, 3.84130531840164*^9, 
  3.84597425681973*^9, 3.846069383759906*^9},
 CellLabel->
  "Out[443]=",ExpressionUUID->"abdaaa5b-d13d-4404-8400-194b98a44eaf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"R0", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Eigenvalues", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Fmat", ".", 
                RowBox[{"Inverse", "[", "Vmat", "]"}]}], ")"}], "/.", 
              "forceInfMut"}], "/.", " ", 
             RowBox[{
              RowBox[{"\[CapitalPi]m", "[", 
               RowBox[{
               "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]m", ",", 
                " ", "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}], "->", 
              " ", "\[CapitalPi]m"}]}], "/.", 
            RowBox[{
             RowBox[{"\[CapitalPi]mm", "[", 
              RowBox[{
              "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mm", ",", 
               " ", "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}], "->", 
             " ", "\[CapitalPi]mm"}]}], "/.", " ", 
           RowBox[{
            RowBox[{"\[CapitalPi]mw", "[", 
             RowBox[{
             "Ds", ",", " ", "Dw", ",", "Dww", ",", " ", "\[Beta]mw", ",", 
              " ", "Dm", ",", " ", "Dmm", ",", " ", "Dmw"}], "]"}], "->", " ",
             "\[CapitalPi]mw"}]}], "]"}], "[", 
         RowBox[{"[", "7", "]"}], "]"}], "/.", 
        RowBox[{"M", "->", " ", "0"}]}], "/.", " ", 
       RowBox[{"Imut", "->", " ", "0"}]}], "/.", 
      RowBox[{"Imw", " ", "->", " ", "0"}]}], "/.", 
     RowBox[{"Imm", "->", " ", "0"}]}], "//", "Simplify"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.8406996815991077`*^9, 3.8406997273699217`*^9}, {
   3.84069978317879*^9, 3.8406999201878757`*^9}, {3.840703199570414*^9, 
   3.840703216218164*^9}, 3.840703260585627*^9, {3.840704170989924*^9, 
   3.840704182644683*^9}, {3.84077389528648*^9, 3.840773915734292*^9}, {
   3.841227178822887*^9, 3.841227185649222*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"a385d432-be35-45fa-a7dc-91acf0e85508"],

Cell[CellGroupData[{

Cell[BoxData["forceInfMut"], "Input",
 CellChangeTimes->{{3.840700557538493*^9, 3.8407005591309547`*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"35e40cee-58c6-4017-a003-04affb853768"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Eta]m", "\[Rule]", 
    RowBox[{"M", " ", "\[Gamma]"}]}], ",", 
   RowBox[{"\[Eta]mm", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["M", "2"], " ", "\[Gamma]"}], 
     RowBox[{"M", "+", "W"}]]}], ",", 
   RowBox[{"\[Eta]mw", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "M", " ", "W", " ", "\[Gamma]"}], 
     RowBox[{"M", "+", "W"}]]}], ",", 
   RowBox[{"\[Lambda]m", "\[Rule]", 
    RowBox[{"Imut", " ", "\[Beta]m"}]}], ",", 
   RowBox[{"\[Lambda]mw", "\[Rule]", 
    RowBox[{"Imw", " ", "\[Beta]mw"}]}], ",", 
   RowBox[{"\[Lambda]mm", "\[Rule]", 
    RowBox[{"Imm", " ", "\[Beta]mm"}]}], ",", 
   RowBox[{"\[Lambda]w", "\[Rule]", 
    RowBox[{"Iw", " ", "\[Beta]w"}]}], ",", 
   RowBox[{"\[Lambda]ww", "\[Rule]", 
    RowBox[{"Iww", " ", "\[Beta]ww"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.840700559473835*^9, 3.8407057186562366`*^9, 
  3.840708753469948*^9, 3.840709800000795*^9, 3.8407109574008417`*^9, 
  3.8407645458033447`*^9, 3.840771769180744*^9, 3.8408758637319202`*^9},
 CellLabel->
  "Out[590]=",ExpressionUUID->"1d84ed8c-5853-4cfe-93c3-f8852a9794b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NumR0", " ", "=", " ", 
   RowBox[{"Numerator", "[", 
    RowBox[{"Simplify", "[", "R0", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DenR0", " ", "=", " ", 
  RowBox[{"Denominator", "[", 
   RowBox[{"Simplify", "[", "R0", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.840703765958405*^9, 3.840703801657277*^9}, {
   3.840703863091383*^9, 3.840703953339878*^9}, {3.8407040924748898`*^9, 
   3.840704103993565*^9}, {3.8407041439808207`*^9, 3.8407041906997337`*^9}, {
   3.840707579866119*^9, 3.840707581038863*^9}, {3.84597482113892*^9, 
   3.845974822294396*^9}, {3.846049014870913*^9, 3.846049016513674*^9}, {
   3.8460693960375443`*^9, 3.846069416325498*^9}, 3.846071830644368*^9},
 NumberMarks->False,
 CellLabel->"In[37]:=",ExpressionUUID->"885fef94-ca98-4eba-926f-dda7259421e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], ")"}], " ", 
  
  RowBox[{"(", 
   RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"2", " ", "Iww", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "+", 
    "\[Mu]", "+", "\[Sigma]m"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"\[Mu]", "+", "\[Sigma]mw"}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.845974822686709*^9, 3.846049016928505*^9, {3.8460693886902647`*^9, 
   3.846069397901554*^9}, 3.846071831110894*^9, 3.8472568844806423`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"eb535206-bc2f-48fa-82ee-f619b60747ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Is", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Dw", " ", "fmw", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]ww"}], "+", "\[Mu]", 
         "+", "\[Sigma]m"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
           "\[Alpha]mw", " ", "+", " ", "\[CapitalPi]mw", " ", "+", " ", 
            "d"}], ")"}], " ", "\[Beta]m"}], "+", 
         RowBox[{"2", " ", "p", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], 
          RowBox[{"(", " ", 
           RowBox[{
           "\[Alpha]m", " ", "+", " ", "\[CapitalPi]m", " ", "+", "d"}], 
           ")"}], " ", "\[Beta]mw"}]}], " ", ")"}]}], "+", "  ", 
      RowBox[{"Ds", " ", "fmw", " ", "Iw", " ", "\[Beta]w", " ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"2", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw", " ", 
          RowBox[{"(", 
           RowBox[{"\[CapitalPi]m", "+", "\[Alpha]m", " ", "+", " ", "d"}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], "\[Beta]m", " ", 
          RowBox[{"(", 
           RowBox[{"\[CapitalPi]mw", "+", "\[Alpha]mw", " ", "+", "d"}], " ", 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", "Ds", " ", "fmw", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]ww", " ", "Iww", 
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
           "\[Alpha]mw", " ", "+", " ", "\[CapitalPi]mw", " ", "+", " ", 
            "d"}], ")"}], "\[Beta]m"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[Alpha]m", " ", "+", " ", "\[CapitalPi]m", " ", "+", " ", "d"}], 
           ")"}], "\[Beta]mw", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]ww", " ", "Iww", " ", 
          "2", " ", "p", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}]}], " ", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "\[Alpha]m", " ", "+", " ", "\[CapitalPi]m", " ", "+", " ", "d"}], 
           ")"}], "\[Beta]mw", " ", "p", " ", "q", "   ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Iw", " ", "\[Beta]w"}], " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]ww", " ", "Iww", 
             " ", "2"}], "+", " ", "\[Mu]", "+", "\[Sigma]m"}], ")"}]}]}], 
        " ", ")"}]}], "+", 
      RowBox[{"Ds", " ", "fm", " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]mw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
           "\[Alpha]mw", " ", "+", " ", "\[CapitalPi]mw", " ", "+", "d"}], 
           ")"}], " ", "\[Beta]m"}], "+", " ", 
         RowBox[{"2", "p", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], 
          RowBox[{"(", " ", 
           RowBox[{
           "\[Alpha]m", " ", "+", " ", "\[CapitalPi]m", " ", "+", " ", "d"}], 
           ")"}], " ", "\[Beta]mw"}]}], ")"}]}]}], " ", ")"}]}], "==", 
   "NumR0"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.840704870350088*^9, 3.840704956398391*^9}, {
   3.840705304909382*^9, 3.8407053075365467`*^9}, {3.840705339032666*^9, 
   3.8407053482772627`*^9}, {3.840705437092702*^9, 3.840705480792069*^9}, {
   3.8407055507626057`*^9, 3.84070558978898*^9}, {3.840705622644249*^9, 
   3.840705641851457*^9}, {3.8407056729612217`*^9, 3.840705677924313*^9}, {
   3.8407057502537127`*^9, 3.840705772082405*^9}, {3.840705825431447*^9, 
   3.8407058391808043`*^9}, {3.840705900704324*^9, 3.840705952752454*^9}, {
   3.840706029251465*^9, 3.8407060603492117`*^9}, {3.84070620255406*^9, 
   3.840706205198732*^9}, {3.8407062886475477`*^9, 3.840706303390736*^9}, {
   3.8407063678902397`*^9, 3.840706404618165*^9}, {3.8407073245134497`*^9, 
   3.84070741544728*^9}, {3.840707455761374*^9, 3.840707465883383*^9}, {
   3.840707620046702*^9, 3.8407076613985643`*^9}, {3.840708274036092*^9, 
   3.8407083112451344`*^9}, {3.840708384269253*^9, 3.840708390757103*^9}, {
   3.8407084289051313`*^9, 3.840708540279299*^9}, {3.840708611960478*^9, 
   3.840708649734106*^9}, {3.840708844172708*^9, 3.840708858763608*^9}, {
   3.8407089063107147`*^9, 3.840708921850878*^9}, {3.8407090646879683`*^9, 
   3.840709128293223*^9}, {3.8407091797582808`*^9, 3.840709193534803*^9}, {
   3.8407092611502457`*^9, 3.840709281051746*^9}, {3.840709344571376*^9, 
   3.840709436854156*^9}, {3.840709548192236*^9, 3.840709617821225*^9}, {
   3.8407098261610107`*^9, 3.840709827624918*^9}, {3.840709884394011*^9, 
   3.840709900805613*^9}, {3.840710577859408*^9, 3.8407105922488403`*^9}, {
   3.8407106321438704`*^9, 3.8407106568880568`*^9}, {3.840710689219643*^9, 
   3.8407107563732862`*^9}, {3.840710821230414*^9, 3.8407108337592573`*^9}, {
   3.8407108673617153`*^9, 3.840710926040618*^9}, {3.840710998263637*^9, 
   3.840711132267028*^9}, {3.8407112066696043`*^9, 3.840711215753437*^9}, {
   3.8407112551711493`*^9, 3.8407113594711637`*^9}, {3.8407114510750513`*^9, 
   3.840711483294909*^9}, {3.8407115557442627`*^9, 3.840711558157263*^9}, {
   3.840712132593507*^9, 3.840712152174678*^9}, {3.840712569079019*^9, 
   3.840712571221003*^9}, {3.840773931125659*^9, 3.840773963767584*^9}, {
   3.845974841866063*^9, 3.845974871146414*^9}, {3.846045570327106*^9, 
   3.846045579882443*^9}, {3.846045611108613*^9, 3.846045612567895*^9}, 
   3.8460456496461477`*^9, {3.8460456864022923`*^9, 3.846045728117803*^9}, {
   3.846045780588369*^9, 3.846045847160021*^9}, {3.846046648547803*^9, 
   3.846046656587242*^9}, {3.846046687417926*^9, 3.846046800562271*^9}, {
   3.846046975934114*^9, 3.846046984457966*^9}, {3.8460470164046993`*^9, 
   3.846047022673246*^9}, {3.846047256465773*^9, 3.846047288708014*^9}, {
   3.8460483302483473`*^9, 3.8460484189156733`*^9}, {3.846048449531329*^9, 
   3.846048488515781*^9}, {3.846048547177135*^9, 3.8460485973199863`*^9}, {
   3.846048651302042*^9, 3.8460487221906567`*^9}, {3.8460487833628674`*^9, 
   3.84604878527522*^9}, {3.84604882917619*^9, 3.846048886281928*^9}, {
   3.846048922818109*^9, 3.846048947104473*^9}, {3.846049055972948*^9, 
   3.846049094505973*^9}, {3.846049126329425*^9, 3.846049165049094*^9}, {
   3.846049195087325*^9, 3.846049455426217*^9}, {3.846049514964507*^9, 
   3.8460495485643253`*^9}, {3.846049595439679*^9, 3.846049602748654*^9}, {
   3.846050243561359*^9, 3.8460502456970863`*^9}, {3.846050284975791*^9, 
   3.846050394667123*^9}, {3.846050456632915*^9, 3.84605047492395*^9}, {
   3.846050535199753*^9, 3.84605056791418*^9}, {3.846050668928657*^9, 
   3.846050686662966*^9}, {3.8460507199354067`*^9, 3.84605072366284*^9}, {
   3.846051013811537*^9, 3.846051070069017*^9}, {3.846069431488171*^9, 
   3.846069490694154*^9}, {3.846069612292819*^9, 3.8460696144321337`*^9}, 
   3.84606966029878*^9, {3.846070475703698*^9, 3.846070533889278*^9}, {
   3.846070566029895*^9, 3.8460707404092913`*^9}, {3.846070883347467*^9, 
   3.846070906343272*^9}, {3.84607094737352*^9, 3.8460710439615602`*^9}, {
   3.846071083316641*^9, 3.8460711379714518`*^9}, {3.8460713954192343`*^9, 
   3.846071466277948*^9}, {3.8460715037469893`*^9, 3.846071553505183*^9}, {
   3.846071600629121*^9, 3.846071709648739*^9}, {3.846071759683103*^9, 
   3.846071820157337*^9}, 3.846071855633556*^9, {3.846071978601246*^9, 
   3.846072163118487*^9}, {3.846072197273898*^9, 3.846072215013565*^9}, {
   3.846072733903954*^9, 3.846072844970545*^9}, {3.846072890970621*^9, 
   3.846072984556328*^9}, {3.846073071791565*^9, 3.846073086044701*^9}, {
   3.846073156428906*^9, 3.846073163810726*^9}, {3.8460731973188543`*^9, 
   3.846073223275673*^9}, {3.8460732651030912`*^9, 3.846073272357016*^9}, {
   3.84607351334475*^9, 3.846073694705113*^9}, {3.846073788012163*^9, 
   3.846073857553143*^9}, {3.8460738934443827`*^9, 3.846073956943655*^9}, {
   3.846074007924429*^9, 3.846074009030946*^9}, {3.84607405440096*^9, 
   3.846074061341761*^9}, {3.846074098474534*^9, 3.846074108824279*^9}, {
   3.846074281854548*^9, 3.84607431068673*^9}, {3.846074727670546*^9, 
   3.846074862890401*^9}, {3.846074908395431*^9, 3.84607502154486*^9}, {
   3.846075200542337*^9, 3.846075211171376*^9}, {3.8460753043868437`*^9, 
   3.84607534071563*^9}, {3.846075379852285*^9, 3.846075391904172*^9}, {
   3.846075437950582*^9, 3.846075519877163*^9}, {3.846075556988806*^9, 
   3.8460755727773438`*^9}, 3.846075611923273*^9, {3.846075648927711*^9, 
   3.846075669194991*^9}, {3.8460758086386433`*^9, 3.8460758220817957`*^9}, {
   3.846075857597249*^9, 3.846075884833226*^9}, {3.846075938711019*^9, 
   3.8460759492395687`*^9}, {3.84607600126623*^9, 3.846076034245756*^9}, {
   3.846076069507143*^9, 3.846076079859708*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"c18bbc05-c69d-4298-ad63-a3d44e085a07"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.846074821821965*^9, 3.8460748687628593`*^9}, {
   3.846074931203124*^9, 3.8460749692310457`*^9}, {3.8460750057937317`*^9, 
   3.846075022114018*^9}, 3.8460751268594418`*^9, 3.846075173868575*^9, {
   3.846075206996312*^9, 3.84607521181176*^9}, {3.8460753109894857`*^9, 
   3.84607534288095*^9}, {3.84607539279397*^9, 3.846075394426507*^9}, 
   3.846075458414679*^9, {3.846075606643096*^9, 3.846075612598934*^9}, {
   3.846075669776195*^9, 3.846075672699936*^9}, {3.846075944717436*^9, 
   3.846075946850067*^9}, {3.846076013565061*^9, 3.846076040774811*^9}, {
   3.846076080405006*^9, 3.846076081824819*^9}, 3.8461331235907183`*^9, 
   3.847256886649287*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"eab9aa0d-2441-47ee-8e8d-02eebb90ff78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]", " ", "Is", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{" ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "  ", "\[Beta]m"}]}], 
           RowBox[{" ", 
            RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m", "  "}]}]], 
          "+", 
          FractionBox[
           RowBox[{" ", 
            RowBox[{"2", " ", "p", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw", " "}]}], 
           RowBox[{"  ", 
            RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", " "}]}]]}],
          ")"}], 
        FractionBox[
         RowBox[{"Dw", " "}], 
         RowBox[{"\[Mu]", "+", "\[Sigma]mw"}]], 
        FractionBox[
         RowBox[{" ", "fmw"}], 
         RowBox[{
          RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], 
       "+", " ", 
       RowBox[{"\[Gamma]", " ", "Is", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"   ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "\[Beta]m", " "}]}], 
           RowBox[{" ", 
            RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m", "   "}]}]], 
          "+", 
          FractionBox[
           RowBox[{"   ", 
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw"}]}], 
           RowBox[{"   ", 
            RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", " "}]}]]}],
          ")"}], 
        FractionBox[
         RowBox[{"Ds", " ", 
          RowBox[{"(", " ", 
           RowBox[{"\[Lambda]w", " ", "+", "   ", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Lambda]w", " ", "+", " ", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], "+", "\[Mu]", 
            "+", "\[Sigma]m"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]mw"}], ")"}]}]], 
        FractionBox["fmw", 
         RowBox[{
          RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], 
       "+", " ", 
       RowBox[{"\[Gamma]", " ", "Is", 
        FractionBox[
         RowBox[{"2", " ", "\[Beta]mw", " ", "p", " ", "q", "   "}], 
         RowBox[{" ", 
          RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", " "}]}]], 
        FractionBox[
         RowBox[{" ", "Ds", " "}], 
         RowBox[{"\[Mu]", "+", "\[Sigma]mw", " "}]], 
        FractionBox["fmw", 
         RowBox[{
          RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], 
       "+", 
       RowBox[{"\[Gamma]", " ", "Is", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"  ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], "  ", "\[Beta]m"}]}], 
           RowBox[{" ", 
            RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m", "   "}]}]], 
          "+", 
          FractionBox[
           RowBox[{"  ", 
            RowBox[{"2", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw"}]}], 
           RowBox[{" ", 
            RowBox[{
            "d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", "  "}]}]]}], ")"}], 
        FractionBox["Ds", 
         RowBox[{"(", 
          RowBox[{"\[Lambda]w", " ", "+", " ", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], "+", "\[Mu]", 
           "+", "\[Sigma]m"}], ")"}]], 
        FractionBox["fm", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], 
          ")"}]]}]}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]w", "->", " ", 
        RowBox[{"Iw", " ", "\[Beta]w"}]}], ",", " ", 
       RowBox[{"\[Lambda]ww", " ", "->", " ", 
        RowBox[{"\[Beta]ww", " ", "Iww"}]}]}], "}"}]}], ")"}], "==", "R0"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8461331838905373`*^9, 3.8461332395504093`*^9}, {
   3.846133451221147*^9, 3.846133455069303*^9}, {3.8461334979064837`*^9, 
   3.846133602806634*^9}, {3.8461336441830473`*^9, 3.8461336459713507`*^9}, {
   3.846134003198732*^9, 3.846134032548397*^9}, {3.846134072216318*^9, 
   3.846134168621894*^9}, {3.846134396966723*^9, 3.8461346006764507`*^9}, {
   3.8461349358220243`*^9, 3.84613499074489*^9}, {3.8461350733702908`*^9, 
   3.846135119507386*^9}, {3.846135197912498*^9, 3.846135200277946*^9}, {
   3.84613523848247*^9, 3.846135305548605*^9}, {3.846135475860201*^9, 
   3.84613556493226*^9}, {3.8461355969532833`*^9, 3.846135659030559*^9}, {
   3.846135710035977*^9, 3.846135829487821*^9}, {3.846135895880311*^9, 
   3.8461359185501423`*^9}, {3.846135969582675*^9, 3.846136047778862*^9}, 
   3.846139800134727*^9, {3.8461398861033697`*^9, 3.846139895183591*^9}, {
   3.846139996434637*^9, 3.846140092474419*^9}, {3.8461403994120913`*^9, 
   3.846140552665674*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"cea5394b-3864-4af4-be43-28a0a55d1053"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.846133239955661*^9, {3.846133455788426*^9, 3.8461334583416433`*^9}, 
   3.84613354665322*^9, 3.846133603546691*^9, {3.846134033189745*^9, 
   3.8461340353828163`*^9}, 3.8461341692374*^9, 3.8461343891221247`*^9, {
   3.846134450046259*^9, 3.8461344812083073`*^9}, 3.846134515654586*^9, {
   3.846134556739027*^9, 3.846134601367388*^9}, {3.846134943518243*^9, 
   3.8461349679571533`*^9}, 3.8461351201823397`*^9, 3.8461352011070147`*^9, {
   3.846135245331559*^9, 3.846135258338139*^9}, {3.846135296389894*^9, 
   3.846135306308811*^9}, 3.846135463688508*^9, {3.8461355167535887`*^9, 
   3.84613556082998*^9}, {3.846135630301635*^9, 3.846135661388855*^9}, {
   3.846135726513549*^9, 3.846135755690243*^9}, {3.846135799583621*^9, 
   3.846135824162291*^9}, 3.846135872383472*^9, {3.84613592125294*^9, 
   3.846135935255931*^9}, {3.846135989271984*^9, 3.8461360385218887`*^9}, 
   3.846139898733016*^9, 3.8461400271396503`*^9, {3.8461403926649017`*^9, 
   3.846140462654635*^9}, {3.8461405132330503`*^9, 3.84614055392758*^9}, 
   3.847256888834824*^9, 3.8473437171138678`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"60a25f5d-3b8d-4c6c-a847-887d7f346af2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trade-off between manipulation and reproduction", "Subtitle",
 CellChangeTimes->{{3.847257170723624*^9, 
  3.84725720458539*^9}},ExpressionUUID->"a85ab9be-3e0d-4653-bbc8-\
13a4453c86e5"],

Cell[CellGroupData[{

Cell["\<\
General case (no specific function for tradeoff and predation)\
\>", "Section",
 CellChangeTimes->{{3.847261123334152*^9, 3.8472611408904047`*^9}, {
  3.847359987599725*^9, 
  3.8473599914154863`*^9}},ExpressionUUID->"b634e6bb-5f49-48d4-be58-\
4c9efac3b630"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"traitRelation", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]m", "->", " ", 
      RowBox[{"\[Beta]m", "[", "xm", "]"}]}], ",", 
     RowBox[{"\[Beta]mw", "->", " ", 
      RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], ",", 
     RowBox[{"fm", "->", " ", 
      RowBox[{"fm", "[", "xm", "]"}]}], ",", 
     RowBox[{"fmw", "->", " ", 
      RowBox[{"fmw", "[", "xm", "]"}]}], ",", 
     RowBox[{"\[CapitalPi]m", "->", " ", 
      RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}], ",", 
     RowBox[{"\[CapitalPi]mw", " ", "->", " ", 
      RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"virulenceSimplify", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]mw", " ", "->", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]mw", "->", " ", "\[Sigma]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.84734374331481*^9, 3.847343782504754*^9}, {
   3.8473448397789507`*^9, 3.847344861314364*^9}, 3.847358437254506*^9},
 CellLabel->
  "In[332]:=",ExpressionUUID->"ec2f5191-46de-49ce-ac88-baa21292881d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"R01", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", " ", "Is", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{" ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "  ", "\[Beta]m"}]}], 
         RowBox[{" ", 
          RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m", "  "}]}]], "+", 
        FractionBox[
         RowBox[{" ", 
          RowBox[{"2", " ", "p", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw", " "}]}], 
         RowBox[{"  ", 
          RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", " "}]}]]}], 
       ")"}], 
      FractionBox[
       RowBox[{"Dw", " "}], 
       RowBox[{"\[Mu]", "+", "\[Sigma]mw"}]], 
      FractionBox[
       RowBox[{" ", "fmw"}], 
       RowBox[{
        RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], "/.",
      "traitRelation"}], "/.", "virulenceSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R02", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", " ", "Is", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"   ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "\[Beta]m", " "}]}], 
         RowBox[{" ", 
          RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m", "   "}]}]], 
        "+", 
        FractionBox[
         RowBox[{"   ", 
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw"}]}], 
         RowBox[{"   ", 
          RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", " "}]}]]}], 
       ")"}], 
      FractionBox[
       RowBox[{"Ds", " ", 
        RowBox[{"(", " ", 
         RowBox[{"\[Lambda]w", " ", "+", "   ", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Lambda]w", " ", "+", " ", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], "+", "\[Mu]", 
          "+", "\[Sigma]m"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]mw"}], ")"}]}]], 
      FractionBox["fmw", 
       RowBox[{
        RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], "/.",
      "traitRelation"}], "/.", "virulenceSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R03", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", " ", "Is", 
      FractionBox[
       RowBox[{"2", " ", "\[Beta]mw", " ", "p", " ", "q", "   "}], 
       RowBox[{" ", 
        RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", " "}]}]], 
      FractionBox[
       RowBox[{" ", "Ds", " "}], 
       RowBox[{"\[Mu]", "+", "\[Sigma]mw", " "}]], 
      FractionBox["fmw", 
       RowBox[{
        RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]]}], "/.",
      "traitRelation"}], "/.", "virulenceSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R04", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]", " ", "Is", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "p"}], ")"}], "  ", "\[Beta]m"}]}], 
         RowBox[{" ", 
          RowBox[{"d", "+", "\[Alpha]m", "+", "\[CapitalPi]m", "   "}]}]], 
        "+", 
        FractionBox[
         RowBox[{"  ", 
          RowBox[{"2", "p", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw"}]}], 
         RowBox[{" ", 
          RowBox[{"d", "+", "\[Alpha]mw", "+", "\[CapitalPi]mw", "  "}]}]]}], 
       ")"}], 
      FractionBox["Ds", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]w", " ", "+", " ", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "q"}], ")"}], "\[Lambda]ww"}], "+", "\[Mu]", "+",
          "\[Sigma]m"}], ")"}]], 
      FractionBox["fm", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}], 
        ")"}]]}], "/.", "traitRelation"}], "/.", "virulenceSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "R01", " ", "+", " ", "R02", " ", "+", " ", "R03", " ", "+", " ", 
       "R04"}], " ", ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]w", "->", " ", 
        RowBox[{"Iw", " ", "\[Beta]w"}]}], ",", " ", 
       RowBox[{"\[Lambda]ww", " ", "->", " ", 
        RowBox[{"\[Beta]ww", " ", "Iww"}]}]}], "}"}]}], ")"}], "==", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"R0", "/.", "traitRelation"}], "/.", "virulenceSimplify"}], 
    ")"}]}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.847344909565083*^9, 3.8473449433531647`*^9}, {
   3.8473452069720383`*^9, 3.847345251024209*^9}, 3.8473459516742287`*^9, {
   3.847346051237368*^9, 3.847346095945022*^9}, {3.84734613010918*^9, 
   3.847346152097337*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"b4e400a4-e332-48af-99d0-b8a8ab9af2bc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.847346074175432*^9, 3.8473460953869143`*^9}, {
   3.847346127696823*^9, 3.847346152699967*^9}, 3.847358439215144*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"342991fa-7472-498c-a2d3-2c5fd636d775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dR0dxm", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"R01", ",", " ", "xm"}], "]"}], "+", " ", 
    RowBox[{"D", "[", 
     RowBox[{"R02", ",", " ", "xm"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{"R03", ",", " ", "xm"}], "]"}], "+", 
    RowBox[{"D", "[", 
     RowBox[{"R04", ",", " ", "xm"}], "]"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.847345979273342*^9, 3.847345996070168*^9}, {
  3.84734616195266*^9, 3.8473461831501303`*^9}, {3.847346687054056*^9, 
  3.847346690397574*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"e4b28d0a-4da3-4bd4-91bd-4900f78776c3"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]], 
  RowBox[{"Is", " ", "\[Gamma]", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Ds", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{"\[Beta]m", "[", "xm", "]"}]}], 
           RowBox[{"d", "+", "\[Alpha]", "+", 
            RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}]]}], "-", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], 
          RowBox[{"d", "+", "\[Alpha]", "+", 
           RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["fm", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], 
      RowBox[{"\[Lambda]w", "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], "+", 
       "\[Mu]", "+", "\[Sigma]"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "Ds", " ", "p", " ", "q", " ", 
       RowBox[{"\[Beta]mw", "[", "xm", "]"}], " ", 
       RowBox[{
        SuperscriptBox["fmw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Alpha]", "+", 
         RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"Dw", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{"\[Beta]m", "[", "xm", "]"}]}], 
           RowBox[{"d", "+", "\[Alpha]", "+", 
            RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}]]}], "-", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], 
          RowBox[{"d", "+", "\[Alpha]", "+", 
           RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["fmw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], 
      RowBox[{"\[Mu]", "+", "\[Sigma]"}]], "+", 
     FractionBox[
      RowBox[{"Ds", " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]w", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}]}], 
        ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{"\[Beta]m", "[", "xm", "]"}]}], 
           RowBox[{"d", "+", "\[Alpha]", "+", 
            RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}]]}], "-", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], 
          RowBox[{"d", "+", "\[Alpha]", "+", 
           RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["fmw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]w", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], "+", 
         "\[Mu]", "+", "\[Sigma]"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "Ds", " ", "p", " ", "q", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Alpha]", "+", 
         RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "Ds", " ", "p", " ", "q", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], " ", 
       RowBox[{"\[Beta]mw", "[", "xm", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[CapitalPi]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"d", "+", "\[Alpha]", "+", 
          RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"Ds", " ", 
       RowBox[{"fm", "[", "xm", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], 
           RowBox[{"d", "+", "\[Alpha]", "+", 
            RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}]]}], "-", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          RowBox[{"d", "+", "\[Alpha]", "+", 
           RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
           RowBox[{"\[Beta]m", "[", "xm", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]", "+", 
             RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]", "+", 
             RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], ")"}], "2"]]}], 
        ")"}]}], 
      RowBox[{"\[Lambda]w", "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], "+", 
       "\[Mu]", "+", "\[Sigma]"}]], "+", 
     FractionBox[
      RowBox[{"Dw", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], 
           RowBox[{"d", "+", "\[Alpha]", "+", 
            RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}]]}], "-", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          RowBox[{"d", "+", "\[Alpha]", "+", 
           RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
           RowBox[{"\[Beta]m", "[", "xm", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]", "+", 
             RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]", "+", 
             RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], ")"}], "2"]]}], 
        ")"}]}], 
      RowBox[{"\[Mu]", "+", "\[Sigma]"}]], "+", 
     FractionBox[
      RowBox[{"Ds", " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]w", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}]}], 
        ")"}], " ", 
       RowBox[{"fmw", "[", "xm", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], 
           RowBox[{"d", "+", "\[Alpha]", "+", 
            RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}]]}], "-", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          RowBox[{"d", "+", "\[Alpha]", "+", 
           RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
           RowBox[{"\[Beta]m", "[", "xm", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]", "+", 
             RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"2", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[CapitalPi]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "+", "\[Alpha]", "+", 
             RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], ")"}], "2"]]}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]w", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}], "+", 
         "\[Mu]", "+", "\[Sigma]"}], ")"}]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8473459834572372`*^9, 3.8473459967457333`*^9}, {
   3.847346177193184*^9, 3.8473461924479647`*^9}, 3.847346693139247*^9, 
   3.847358449451118*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"20380fe2-d168-41ee-b893-6bc8893a4d7c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear predation function (func1)", "Section",
 CellChangeTimes->{{3.847261170684216*^9, 
  3.8472611840457077`*^9}},ExpressionUUID->"df6e77cb-c1b5-4dd2-acfb-\
a70a5b270ae0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func1WithTrait", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalPi]m", "[", "xm", " ", "]"}], "\[Rule]", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", 
         RowBox[{"\[Beta]m", "[", "xm", "]"}]}], ")"}], "Dtotal"}]}], ",", 
     RowBox[{
      RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}], "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", 
         RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], ")"}], "Dtotal"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8473467260889463`*^9, 3.847346800835599*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"2b71a1db-733b-4150-8de2-438b29038449"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dR0dxm", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalPi]m", "'"}], "[", "xm", "]"}], "->", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Rho]", " ", "+", " ", 
               RowBox[{"\[Beta]m", "[", "xm", "]"}]}], ")"}], "Dtotal"}], ",",
             " ", "xm"}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalPi]mw", "'"}], "[", "xm", "]"}], "->", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Rho]", " ", "+", " ", 
               RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], ")"}], "Dtotal"}], 
            ",", " ", "xm"}], "]"}]}]}], "}"}]}], "/.", 
      RowBox[{
       RowBox[{"\[Lambda]w", "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Lambda]ww"}]}], "->",
        " ", "X1"}]}], "/.", 
     RowBox[{
      RowBox[{"d", "+", "\[Alpha]", "+", 
       RowBox[{"\[CapitalPi]m", "[", "xm", "]"}]}], "->", " ", "X2"}]}], "/.", 
    RowBox[{
     RowBox[{"d", "+", "\[Alpha]", "+", 
      RowBox[{"\[CapitalPi]mw", "[", "xm", "]"}]}], "->", " ", "X3"}]}], "/.", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}], "->", " ", "X4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"%", " ", "==", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"Is", " ", "\[Gamma]"}], 
     RowBox[{
      RowBox[{"3", " ", "Is", " ", "\[Gamma]"}], "+", "\[Delta]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Ds", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}]}], "X2"], "+", 
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], "X3"]}], ")"}], " "}], 
        RowBox[{"X1", "+", "X4"}]], 
       RowBox[{
        SuperscriptBox["fm", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dw", " ", "+", 
            FractionBox[
             RowBox[{"Ds", " ", "X1", " "}], 
             RowBox[{"(", 
              RowBox[{"X1", "+", "X4"}], ")"}]]}], " ", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " ", 
              RowBox[{"\[Beta]m", "[", "xm", "]"}]}], "X2"], "+", 
            FractionBox[
             RowBox[{"2", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", 
              RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], "X3"]}], ")"}]}], "+", 
         " ", 
         FractionBox[
          RowBox[{"2", " ", "Ds", " ", "p", " ", "q", " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], "X3"]}], "X4"], 
       RowBox[{
        SuperscriptBox["fmw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      RowBox[{"Ds", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], 
       FractionBox[
        RowBox[{"2", "  ", "p", " ", "q", "  "}], 
        RowBox[{"X3", " ", "X4"}]], 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "-", 
      RowBox[{"Ds", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], 
       FractionBox[
        RowBox[{"2", "  ", "Dtotal", " ", "p", " ", "q", "  ", 
         RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
        RowBox[{
         SuperscriptBox["X3", "2"], " ", "X4"}]], 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      FractionBox[
       RowBox[{"Ds", " ", 
        RowBox[{"fm", "[", "xm", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"Dtotal", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X2", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X3", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
       RowBox[{"X1", "+", "X4"}]], "+", " ", 
      RowBox[{"+", 
       FractionBox[
        RowBox[{"Dw", " ", 
         RowBox[{"fmw", "[", "xm", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"Dtotal", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " ", 
              RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
             SuperscriptBox["X2", "2"]], 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
            RowBox[{
             SuperscriptBox["\[Beta]mw", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", 
              RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
             SuperscriptBox["X3", "2"]], 
            RowBox[{
             SuperscriptBox["\[Beta]mw", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
        "X4"]}], "+", 
      FractionBox[
       RowBox[{"Ds", " ", "X1", " ", 
        RowBox[{"fmw", "[", "xm", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"Dtotal", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X2", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X3", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
       RowBox[{"X4", " ", 
        RowBox[{"(", 
         RowBox[{"X1", "+", "X4"}], ")"}]}]]}], ")"}]}]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.8473468128593607`*^9, 3.847346922595881*^9}, {
   3.847346984685582*^9, 3.84734706798295*^9}, {3.847347119433106*^9, 
   3.847347225034375*^9}, {3.847354080595262*^9, 3.847354175929742*^9}, {
   3.847354214117057*^9, 3.847354293813554*^9}, {3.84735435305543*^9, 
   3.847354358072407*^9}, {3.847354855164328*^9, 3.84735485613501*^9}, {
   3.8473549524629383`*^9, 3.8473550153548737`*^9}, {3.847355050125289*^9, 
   3.8473550606367693`*^9}, {3.8473551299092216`*^9, 3.847355132749475*^9}, {
   3.847355380061543*^9, 3.84735539512192*^9}, 3.847356923588303*^9, {
   3.84735883025949*^9, 3.847358842416018*^9}, {3.8473588862601557`*^9, 
   3.8473589017560377`*^9}, {3.8473589341653833`*^9, 3.847358994545505*^9}, {
   3.847359695881566*^9, 3.847359723568782*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"a16694d2-2cb8-4f05-84d9-799db29d26fb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.847358843123611*^9, 3.84735890236887*^9, 3.847359118143156*^9, 
   3.847359192022596*^9, {3.84735970655891*^9, 3.847359723933291*^9}},
 CellLabel->
  "Out[363]=",ExpressionUUID->"68aa93e8-7b1d-4bb5-ab27-952ce93c2528"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   FractionBox[
    SubscriptBox["dR", "0"], "dxm"], "=", "0"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"<->", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"Ds", " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}]}], "X2"], "+", 
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], "X3"]}], ")"}], " "}], 
        RowBox[{"X1", "+", "X4"}]], 
       RowBox[{
        SuperscriptBox["fm", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dw", " ", "+", 
            FractionBox[
             RowBox[{"Ds", " ", "X1", " "}], 
             RowBox[{"(", 
              RowBox[{"X1", "+", "X4"}], ")"}]]}], " ", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " ", 
              RowBox[{"\[Beta]m", "[", "xm", "]"}]}], "X2"], "+", 
            FractionBox[
             RowBox[{"2", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", 
              RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], "X3"]}], ")"}]}], "+", 
         " ", 
         FractionBox[
          RowBox[{"2", " ", "Ds", " ", "p", " ", "q", " ", 
           RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], "X3"]}], "X4"], 
       RowBox[{
        SuperscriptBox["fmw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      RowBox[{"Ds", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], 
       FractionBox[
        RowBox[{"2", "  ", "p", " ", "q", "  "}], 
        RowBox[{"X3", " ", "X4"}]], 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "-", 
      RowBox[{"Ds", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], 
       FractionBox[
        RowBox[{"2", "  ", "Dtotal", " ", "p", " ", "q", "  ", 
         RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
        RowBox[{
         SuperscriptBox["X3", "2"], " ", "X4"}]], 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      FractionBox[
       RowBox[{"Ds", " ", 
        RowBox[{"fm", "[", "xm", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"Dtotal", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X2", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X3", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
       RowBox[{"X1", "+", "X4"}]], "+", " ", 
      RowBox[{"+", 
       FractionBox[
        RowBox[{"Dw", " ", 
         RowBox[{"fmw", "[", "xm", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"Dtotal", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " ", 
              RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
             SuperscriptBox["X2", "2"]], 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
            RowBox[{
             SuperscriptBox["\[Beta]mw", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", 
              RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
             SuperscriptBox["X3", "2"]], 
            RowBox[{
             SuperscriptBox["\[Beta]mw", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
        "X4"]}], "+", 
      FractionBox[
       RowBox[{"Ds", " ", "X1", " ", 
        RowBox[{"fmw", "[", "xm", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"Dtotal", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X2", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X3", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
       RowBox[{"X4", " ", 
        RowBox[{"(", 
         RowBox[{"X1", "+", "X4"}], ")"}]}]]}]}], " ", "=", " ", "0"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"<->", " ", 
     RowBox[{
      RowBox[{"Ds", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], 
       FractionBox[
        RowBox[{"2", "  ", "p", " ", "q", "  "}], 
        RowBox[{"X3", " ", "X4"}]], 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "-", 
      RowBox[{"Ds", " ", 
       RowBox[{"fmw", "[", "xm", "]"}], 
       FractionBox[
        RowBox[{"2", "  ", "Dtotal", " ", "p", " ", "q", "  ", 
         RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
        RowBox[{
         SuperscriptBox["X3", "2"], " ", "X4"}]], 
       RowBox[{
        SuperscriptBox["\[Beta]mw", "\[Prime]",
         MultilineFunction->None], "[", "xm", "]"}]}], "+", 
      FractionBox[
       RowBox[{"Ds", " ", 
        RowBox[{"fm", "[", "xm", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"Dtotal", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X2", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X3", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
       RowBox[{"X1", "+", "X4"}]], "+", " ", 
      RowBox[{"+", 
       FractionBox[
        RowBox[{"Dw", " ", 
         RowBox[{"fmw", "[", "xm", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"Dtotal", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " ", 
              RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
             SuperscriptBox["X2", "2"]], 
            RowBox[{
             SuperscriptBox["\[Beta]m", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "+", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
            RowBox[{
             SuperscriptBox["\[Beta]mw", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}], "-", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", 
              RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
             SuperscriptBox["X3", "2"]], 
            RowBox[{
             SuperscriptBox["\[Beta]mw", "\[Prime]",
              MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
        "X4"]}], "+", 
      FractionBox[
       RowBox[{"Ds", "  ", 
        RowBox[{"fmw", "[", "xm", "]"}], "  ", "X1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " "}], "X2"], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"Dtotal", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "p"}], ")"}], " ", 
             RowBox[{"\[Beta]m", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X2", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]m", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "+", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " "}], "X3"], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}], "-", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "Dtotal", " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "q"}], ")"}], " ", 
             RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], 
            SuperscriptBox["X3", "2"]], 
           RowBox[{
            SuperscriptBox["\[Beta]mw", "\[Prime]",
             MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}], 
       RowBox[{"X4", " ", 
        RowBox[{"(", 
         RowBox[{"X1", "+", "X4"}], ")"}]}]]}]}], " ", "=", " ", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"Ds", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "p"}], ")"}], " ", 
              RowBox[{"\[Beta]m", "[", "xm", "]"}]}], "X2"], "+", 
            FractionBox[
             RowBox[{"2", " ", "p", " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}], " ", 
              RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], "X3"]}], ")"}], " "}], 
         
         RowBox[{"X1", "+", "X4"}]], 
        RowBox[{
         SuperscriptBox["fm", "\[Prime]",
          MultilineFunction->None], "[", "xm", "]"}]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Dw", " ", "+", 
             FractionBox[
              RowBox[{"Ds", " ", "X1", " "}], 
              RowBox[{"(", 
               RowBox[{"X1", "+", "X4"}], ")"}]]}], " ", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "p"}], ")"}], " ", 
               RowBox[{"\[Beta]m", "[", "xm", "]"}]}], "X2"], "+", 
             FractionBox[
              RowBox[{"2", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", "q"}], ")"}], " ", 
               RowBox[{"\[Beta]mw", "[", "xm", "]"}]}], "X3"]}], ")"}]}], "+",
           " ", 
          FractionBox[
           RowBox[{"2", " ", "Ds", " ", "p", " ", "q", " ", 
            RowBox[{"\[Beta]mw", "[", "xm", "]"}], " "}], "X3"]}], "X4"], 
        RowBox[{
         SuperscriptBox["fmw", "\[Prime]",
          MultilineFunction->None], "[", "xm", "]"}]}]}], ")"}]}]}], 
   "\[IndentingNewLine]"}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
   "xm", " ", "is", " ", "the", " ", "underlying", " ", "manipulation", " ", 
    "trait", " ", "that", " ", "affect", " ", "the", " ", "transmission", " ",
     "rate", " ", "and", " ", 
    RowBox[{"fecundity", ".", "\[IndentingNewLine]", "We"}], " ", "know", " ",
     "that", " ", 
    RowBox[{
     RowBox[{"\[Beta]m", "'"}], "[", "xm", "]"}], " ", "has", " ", "the", " ",
     "same", " ", "sign", " ", "as", " ", 
    RowBox[{
     RowBox[{"\[Beta]mw", "'"}], "[", "xm", "]"}]}], ",", " ", 
   RowBox[{
   "but", " ", "they", " ", "have", " ", "the", " ", "opposite", " ", "signs",
     " ", "of", " ", 
    RowBox[{
     RowBox[{"fm", "'"}], "[", "xm", "]"}], " ", "and", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"fmw", "'"}], "[", "xm", "]"}], ".", " "}]}]}], 
  TraditionalForm]}],ExpressionUUID->"8fde4fca-c631-42a3-9ca5-2fffbc994534"]],\
 "Text",
 CellChangeTimes->{{3.847354900020527*^9, 3.847354910694384*^9}, {
  3.847355177489243*^9, 3.8473551832578506`*^9}, {3.84735540686864*^9, 
  3.847355406868699*^9}, {3.847357180420713*^9, 3.847357264884047*^9}, {
  3.847359204810004*^9, 3.847359211152667*^9}, {3.847359426433136*^9, 
  3.847359591365192*^9}, {3.8473596631712008`*^9, 3.8473596631718187`*^9}, {
  3.847359742219522*^9, 3.8473597885402193`*^9}, {3.8473598190985737`*^9, 
  3.8473598226498613`*^9}},ExpressionUUID->"a9e37030-7987-4995-8ef5-\
030351a1e0a0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{23, Automatic}, {Automatic, 0}},
TaggingRules->Association["TryRealOnly" -> False],
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"43c87cd2-cadb-4edb-adc2-8d7d4ac4403f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 159, 3, 146, "Title",ExpressionUUID->"483eab07-900c-4006-baff-febb9820f003"],
Cell[CellGroupData[{
Cell[764, 29, 222, 4, 42, "Input",ExpressionUUID->"dac3e6c1-0f10-4bf9-afb3-14227c80d39d"],
Cell[989, 35, 2309, 46, 49, "Output",ExpressionUUID->"42ab818a-7e4c-495e-9daf-b36b7f4c184d"]
}, Open  ]],
Cell[3313, 84, 3021, 72, 414, "Input",ExpressionUUID->"fc1a2412-89f0-49f4-b951-88d232706ada"],
Cell[6337, 158, 3777, 82, 385, "Input",ExpressionUUID->"29ccce53-ba30-4d5f-8cb6-142f26400e85"],
Cell[10117, 242, 4949, 101, 585, "Input",ExpressionUUID->"6cc37638-2b0e-4c3a-8d33-f791fefce2a3"],
Cell[15069, 345, 4057, 90, 585, "Input",ExpressionUUID->"23da9c6c-6b7a-4429-9738-3d6fe38f26f3"],
Cell[19129, 437, 7928, 179, 899, "Input",ExpressionUUID->"7b06fd56-25bb-4ff0-ba9e-ff1e7e230c33"],
Cell[27060, 618, 2706, 67, 348, "Input",ExpressionUUID->"35567525-2d27-4946-a4be-0274bbe088f5"],
Cell[29769, 687, 5726, 135, 633, "Input",ExpressionUUID->"e13c168c-6f9c-4c51-8f33-65573a30096f"],
Cell[35498, 824, 5770, 130, 614, "Input",ExpressionUUID->"4f208944-344c-47c3-b96b-bc8e806ab0bf"],
Cell[41271, 956, 8300, 179, 928, "Input",ExpressionUUID->"03285433-5fe5-4529-bb0a-55a113f476c3"]
}, Closed]],
Cell[CellGroupData[{
Cell[49608, 1140, 284, 5, 105, "Title",ExpressionUUID->"e2410933-2bd8-405a-85df-b2c02a65e69a"],
Cell[CellGroupData[{
Cell[49917, 1149, 178, 3, 102, "Chapter",ExpressionUUID->"347ecd39-c728-456d-9e67-25129abde59f"],
Cell[50098, 1154, 4682, 98, 186, "Input",ExpressionUUID->"8b081d47-922f-4ce6-8a45-a63998a7e6d2"],
Cell[54783, 1254, 1596, 41, 71, "Input",ExpressionUUID->"c2856705-6bd8-4884-8f3f-1a5c6518ece5"],
Cell[56382, 1297, 1876, 47, 109, "Input",ExpressionUUID->"54054f20-67bb-4aa7-ba74-1444f4fee045"],
Cell[58261, 1346, 940, 24, 100, "Input",ExpressionUUID->"4c120fe5-edf2-4f0b-a0c4-4c05eb9f3d97"],
Cell[CellGroupData[{
Cell[59226, 1374, 562, 14, 42, "Input",ExpressionUUID->"78e5f8a6-c964-4cd9-b6b3-430439c7f94c"],
Cell[59791, 1390, 1027, 26, 89, "Output",ExpressionUUID->"501f5d2c-8c4d-4219-ab41-8668cce1b2a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60855, 1421, 679, 16, 42, "Input",ExpressionUUID->"cde0c728-6854-4259-8f49-f7464b0022e3"],
Cell[61537, 1439, 1538, 41, 91, "Output",ExpressionUUID->"9f4f60f7-32df-46db-afc9-b7ae8868c7a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63112, 1485, 178, 3, 96, "Subchapter",ExpressionUUID->"14104169-d0d0-4365-b4ec-280c816a651d"],
Cell[CellGroupData[{
Cell[63315, 1492, 159, 3, 100, "Section",ExpressionUUID->"2b8aed48-32f8-4b42-bbc2-723030fa0481"],
Cell[63477, 1497, 2205, 53, 71, "Input",ExpressionUUID->"ca531b34-2fa4-493b-b8e4-9371f424e05d"],
Cell[CellGroupData[{
Cell[65707, 1554, 202, 3, 46, "Input",ExpressionUUID->"83da6842-e37e-456f-89ab-9974ac8633b4"],
Cell[65912, 1559, 1761, 49, 170, "Output",ExpressionUUID->"f20f22eb-55e8-40a8-9295-4121603031a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67710, 1613, 439, 12, 46, "Input",ExpressionUUID->"a1e8e329-d1be-437b-979f-f76e9c69a842"],
Cell[68152, 1627, 369, 5, 69, "Output",ExpressionUUID->"42b50e14-190b-41e5-8f3f-b465cfeb92f7"]
}, Open  ]],
Cell[68536, 1635, 460, 10, 46, "Input",ExpressionUUID->"7735dd75-8017-4b11-91c7-55fb02c97018"],
Cell[CellGroupData[{
Cell[69021, 1649, 599, 15, 46, "Input",ExpressionUUID->"9429d688-f9ec-4e2d-bcb9-a0289b0cdc56"],
Cell[69623, 1666, 643, 15, 69, "Output",ExpressionUUID->"9573b973-e305-4ec4-9fb9-fcfb07521e56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70303, 1686, 876, 21, 46, "Input",ExpressionUUID->"b02d50f7-6fb3-4f6e-8d39-af6987745ce0"],
Cell[71182, 1709, 3129, 84, 104, "Output",ExpressionUUID->"b255c227-a91d-43e8-a52f-28b6f86401a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74360, 1799, 180, 3, 101, "Section",ExpressionUUID->"fcba5493-30b4-446e-87dd-e9e18e89e6a6"],
Cell[74543, 1804, 2407, 62, 112, "Input",ExpressionUUID->"b45977e5-c6d8-496c-9d5c-1587e84cf79e"],
Cell[CellGroupData[{
Cell[76975, 1870, 444, 12, 46, "Input",ExpressionUUID->"b3287b01-f6b4-40bd-ba65-2b61082c79c7"],
Cell[77422, 1884, 270, 4, 69, "Output",ExpressionUUID->"aa8d1964-ee3f-4dbc-b39a-323293248235"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77729, 1893, 405, 8, 46, "Input",ExpressionUUID->"d1789bb6-c8cb-45de-8d7f-6b645cb73e82"],
Cell[78137, 1903, 6270, 171, 284, "Output",ExpressionUUID->"295cf7df-3de9-46c2-9dad-60a40b8212c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84444, 2079, 1188, 31, 46, "Input",ExpressionUUID->"b1f6f05f-b198-4d17-b565-c5f735368457"],
Cell[85635, 2112, 1954, 52, 94, "Output",ExpressionUUID->"eeb3c1ce-6992-474b-81e1-a5d0c4f1d814"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87626, 2169, 1103, 25, 46, "Input",ExpressionUUID->"36d6ffe1-129a-4934-b870-c599e625b52c"],
Cell[88732, 2196, 3364, 88, 232, "Output",ExpressionUUID->"160e7282-681d-4bd4-b59b-f8b2419106fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92157, 2291, 215, 4, 97, "Subchapter",ExpressionUUID->"d64a0ded-64d0-4075-ba2d-09e7966fc28b"],
Cell[92375, 2297, 806, 17, 78, "Input",ExpressionUUID->"6ed70da2-74b9-4272-aaa8-b89d16802528"],
Cell[93184, 2316, 2197, 35, 46, "Input",ExpressionUUID->"c979be48-2d2f-47a1-957b-f3b8c0e37375"],
Cell[CellGroupData[{
Cell[95406, 2355, 2011, 48, 140, "Input",ExpressionUUID->"55d5cab9-f537-4b4d-9735-0b5cf3b5a569"],
Cell[97420, 2405, 527, 12, 32, "Message",ExpressionUUID->"a6e75068-bb22-4835-9f85-7ec6ec7df7ca"],
Cell[97950, 2419, 380488, 6481, 192, "Output",ExpressionUUID->"797d6bee-10c9-467e-93ba-24db0cfc74dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478475, 8905, 845, 17, 46, "Input",ExpressionUUID->"8ea701cb-7d5f-4eb8-86f0-e262a5488b67"],
Cell[479323, 8924, 150769, 2561, 342, "Output",ExpressionUUID->"5a2573cf-43ba-43ec-afcf-87300dd61679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630129, 11490, 2880, 65, 171, "Input",ExpressionUUID->"eaae251d-2492-4d42-9114-33cc4e92dfda"],
Cell[633012, 11557, 4315, 98, 194, "Output",ExpressionUUID->"bb066ad9-d28c-4f1b-a29b-1d00271d9dde"],
Cell[637330, 11657, 81942, 1598, 403, "Output",ExpressionUUID->"721a1409-493c-4879-b7a1-c1b26c3fd744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[719309, 13260, 1247, 29, 78, "Input",ExpressionUUID->"46548b4d-d1a5-4147-84c5-f12430ccc883"],
Cell[720559, 13291, 338539, 5638, 380, "Output",ExpressionUUID->"51fc81f4-2c88-4d0d-9258-987861f5e32f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059159, 18936, 160, 3, 103, "Chapter",ExpressionUUID->"c8b3643a-8ca5-4753-b494-7789cf86e24d"],
Cell[1059322, 18941, 1505, 36, 109, "Input",ExpressionUUID->"e02ce4e6-1f0f-4d01-b8dc-d71d61f0ae94"],
Cell[CellGroupData[{
Cell[1060852, 18981, 207, 3, 46, "Input",ExpressionUUID->"49b43f36-2a13-4237-ac96-26a3fc260efd"],
Cell[1061062, 18986, 326, 7, 69, "Output",ExpressionUUID->"ad7c7056-6ffd-4ea0-96a6-dfa246e63062"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061425, 18998, 2208, 46, 78, "Input",ExpressionUUID->"b4614149-c749-4eef-8591-14dc03082f53"],
Cell[1063636, 19046, 1575, 41, 118, "Output",ExpressionUUID->"283acba8-3584-417c-8766-ab5cde5bef92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065248, 19092, 433, 11, 46, "Input",ExpressionUUID->"e773f48c-330d-4bb1-8ad0-9aebbbea19cd"],
Cell[1065684, 19105, 323, 5, 69, "Output",ExpressionUUID->"c48f7ac6-0cb4-41b1-ba6f-722c275229e4"]
}, Open  ]],
Cell[1066022, 19113, 924, 19, 46, "Input",ExpressionUUID->"72304ae8-36ed-44c8-a998-a6e789ab7eba"],
Cell[1066949, 19134, 2014, 42, 46, "Input",ExpressionUUID->"36f33078-a446-4e94-b0f0-8ccee5b0f0fb"],
Cell[CellGroupData[{
Cell[1068988, 19180, 453, 9, 78, "Input",ExpressionUUID->"2c42f6d6-2daa-4e4e-8ae1-d699c349df18"],
Cell[1069444, 19191, 496, 7, 69, "Output",ExpressionUUID->"0b130aba-f67a-4253-bd8c-0d8742c311e4"],
Cell[1069943, 19200, 1453, 39, 118, "Output",ExpressionUUID->"8325870d-8643-400b-85be-7dc107c7b7e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1071433, 19244, 705, 13, 46, "Input",ExpressionUUID->"320b80f9-ca57-4ec7-8986-c3b3295f1ba9"],
Cell[1072141, 19259, 995, 22, 91, "Output",ExpressionUUID->"282a7d71-0147-4c7d-a8c1-2610d238ea25"]
}, Open  ]],
Cell[1073151, 19284, 1250, 29, 61, "Text",ExpressionUUID->"5c1cc6c7-92f6-422f-a9e0-b38f3933e7cc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1074450, 19319, 184, 3, 105, "Title",ExpressionUUID->"1498aa17-3947-474c-a8ca-a07393843471"],
Cell[CellGroupData[{
Cell[1074659, 19326, 238, 4, 84, "Chapter",ExpressionUUID->"20f5d60e-c355-40a0-8552-7849fe0c242e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1074900, 19332, 60308, 993, 277, "Input",ExpressionUUID->"1fb03d14-fae8-47d3-b964-6091db28765c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1135211, 20327, 5145, 142, 388, "Input",ExpressionUUID->"ecc45c9b-5f94-4de1-bd14-3c41ca5147c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1140393, 20474, 388, 7, 84, "Chapter",ExpressionUUID->"cad77751-659b-44e2-b56a-e0b0ce225f72",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1140784, 20483, 4508, 112, 202, "Input",ExpressionUUID->"961657ec-8b09-4286-ac15-81d19c10ddea",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}],
Cell[1145295, 20597, 354, 6, 46, "Input",ExpressionUUID->"34e108e3-d62e-46ad-8018-aae1a9cccd01",
 CellGroupingRules->{"GroupTogetherGrouping", 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1145686, 20608, 270, 6, 79, "Subtitle",ExpressionUUID->"c4eb3cfc-91ae-4d98-8434-57f9e040e577"],
Cell[CellGroupData[{
Cell[1145981, 20618, 3277, 90, 171, "Input",ExpressionUUID->"5777bd51-2660-46b0-9aa7-2e1d50cf2bba"],
Cell[1149261, 20710, 1300, 19, 52, "Output",ExpressionUUID->"865d064f-1cfd-478e-8da4-8a096cde5eb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150598, 20734, 210, 3, 46, "Input",ExpressionUUID->"1c1b24b6-9aa3-406d-b134-a3c35f09ebaf"],
Cell[1150811, 20739, 2460, 62, 170, "Output",ExpressionUUID->"b671cb77-ed0d-4da4-9e9b-f9a871b74deb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153308, 20806, 3265, 92, 171, "Input",ExpressionUUID->"14f4961a-b9de-4f7d-b977-a0c1db2d98bd"],
Cell[1156576, 20900, 629, 11, 52, "Output",ExpressionUUID->"fbc9402d-1bad-4493-a0cf-6150271a5ed6"]
}, Open  ]],
Cell[1157220, 20914, 507, 11, 46, "Input",ExpressionUUID->"49e9061d-1fae-4e11-8941-0a7b7e5bfaaa"],
Cell[1157730, 20927, 608, 11, 78, "Input",ExpressionUUID->"7f78b5b4-f088-414f-80a1-1d30ad834275"],
Cell[CellGroupData[{
Cell[1158363, 20942, 4934, 99, 140, "Input",ExpressionUUID->"5f06793d-9a46-4e44-b324-30d6b01ba610"],
Cell[1163300, 21043, 3576, 50, 52, "Output",ExpressionUUID->"43264c7c-a137-448c-8013-638ecbc28fc2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1166913, 21098, 4358, 115, 288, "Input",ExpressionUUID->"2ed3597e-9591-487f-a9da-3ba78d6aebde"],
Cell[1171274, 21215, 276, 4, 52, "Output",ExpressionUUID->"933750d1-dfe1-47e2-84a9-1bf1aab2b2fe"]
}, Open  ]],
Cell[1171565, 21222, 588, 13, 46, "Input",ExpressionUUID->"4e256e8d-505d-4fd7-8ace-dafd3da754d8"],
Cell[CellGroupData[{
Cell[1172178, 21239, 1938, 53, 108, "Input",ExpressionUUID->"db2ff817-a5cb-4597-bd6c-73c13574dce1"],
Cell[1174119, 21294, 295, 4, 52, "Output",ExpressionUUID->"85b78d3b-a51f-4ce0-a1a8-9c5e1cdf33c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1174451, 21303, 432, 7, 84, "Chapter",ExpressionUUID->"785f6306-1f08-4037-85f7-43f9aedb5288",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1174886, 21312, 414, 9, 53, "Text",ExpressionUUID->"88346038-a7d5-4c7a-95d2-1dbc3a483443",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1175303, 21323, 1018, 22, 46, "Input",ExpressionUUID->"766efe42-5b6b-453e-a7cc-1e0943ad2f93",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1176324, 21347, 830, 18, 41, "Message",ExpressionUUID->"4202fa2a-c51b-45df-a733-8bda502b8691",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1177157, 21367, 1043, 26, 72, "Output",ExpressionUUID->"355762a6-1d12-4308-9e7a-987ee651790c",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1178203, 21395, 679, 15, 54, "Text",ExpressionUUID->"5ae710aa-01ee-4461-923d-0d06091b9b74",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1178885, 21412, 994, 22, 78, "Input",ExpressionUUID->"3213acb1-f9e1-47ab-bbfd-d715a7c0f813",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1179882, 21436, 463, 11, 41, "Message",ExpressionUUID->"dbdb3a38-85b1-4af6-99d9-e885309b9a47",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[1180360, 21450, 3912, 112, 207, "Output",ExpressionUUID->"14b4ac9f-7189-4195-b3f0-e1acee6cac0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1184309, 21567, 270, 6, 79, "Subtitle",ExpressionUUID->"40085cc7-ab6e-4469-9298-5fb6c171af5a"],
Cell[CellGroupData[{
Cell[1184604, 21577, 2674, 56, 140, "Input",ExpressionUUID->"26e6d7f6-8d8b-4ca4-a19b-5030d45e4dde"],
Cell[1187281, 21635, 158, 2, 52, "Output",ExpressionUUID->"3fac33fc-075a-446c-b207-0623461df404"]
}, Open  ]],
Cell[1187454, 21640, 18440, 453, 696, "Input",ExpressionUUID->"06183493-a025-4f8f-94b4-64ccbad3bbb2"],
Cell[CellGroupData[{
Cell[1205919, 22097, 491, 9, 79, "Subtitle",ExpressionUUID->"118a79e6-9565-4747-b8f9-1ba112b1eb1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1206413, 22108, 569, 13, 46, "Input",ExpressionUUID->"f5f468d7-1209-46ec-8f8e-031c19f4223e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1206985, 22123, 769, 17, 78, "Input",ExpressionUUID->"c368376e-26a1-4c56-855e-453094ed67f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1207757, 22142, 508, 11, 41, "Message",ExpressionUUID->"11577228-6a8c-4943-8eea-73172fed1607",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1208268, 22155, 606, 13, 41, "Message",ExpressionUUID->"20a54171-4b0d-4a89-9c56-2220bac8913e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1208877, 22170, 595, 13, 69, "Output",ExpressionUUID->"6029b48f-361e-420a-9fb6-cd76b8fdfefb",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1209475, 22185, 558, 11, 52, "Output",ExpressionUUID->"f0c88209-9e4d-47fa-963a-0be0bc87ba1f",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1210036, 22198, 558, 13, 78, "Input",ExpressionUUID->"a5ab7fe9-e74b-452f-9c5b-23c13e6eb24c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1210597, 22213, 1492, 40, 224, "Output",ExpressionUUID->"05de1e16-8b58-4969-b53e-15f9740bb9d1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1212092, 22255, 817, 20, 52, "Output",ExpressionUUID->"9bb7f784-bec0-4aca-9938-89261d63d492",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1212958, 22281, 310, 5, 79, "Subtitle",ExpressionUUID->"e661217e-bce4-44e1-b057-703613878664"],
Cell[CellGroupData[{
Cell[1213293, 22290, 289, 5, 103, "Chapter",ExpressionUUID->"369dbb49-df9d-4039-a34e-81579b52b3b2",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1213585, 22297, 808, 17, 46, "Input",ExpressionUUID->"ca1869e2-dd1d-4aa2-a47e-3913afb28c30",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1214396, 22316, 1020, 21, 78, "Input",ExpressionUUID->"f1a8604d-2c29-49aa-a127-beb9acfa02df",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1215419, 22339, 2922, 47, 78, "Input",ExpressionUUID->"7cf35002-4119-41d1-8ddf-f833a6d87d32",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1218344, 22388, 6961, 169, 450, "Input",ExpressionUUID->"d8645f92-3e73-4196-a8fb-1b38e8d378c1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1225308, 22559, 529, 11, 55, "Output",ExpressionUUID->"09f456fa-3063-4749-8b30-e8b7a1388494",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1225840, 22572, 233800, 3967, 375, "Output",ExpressionUUID->"6de6e16b-8e52-47ac-b07b-0c9ac1d598c3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[1459655, 26542, 567, 8, 46, "Input",ExpressionUUID->"1f02433f-be28-4178-bc43-2bb5cc8d0ccc"],
Cell[CellGroupData[{
Cell[1460247, 26554, 509, 8, 112, "Section",ExpressionUUID->"506f9de0-aabc-4c75-9576-ede1482489c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1460759, 26564, 2219, 41, 109, "Input",ExpressionUUID->"9a4dbafe-d8e9-4a1d-ab18-fe9641382212",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1462981, 26607, 1240, 31, 109, "Input",ExpressionUUID->"5a2e2749-aeec-46e6-9088-65c10c455036",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1464224, 26640, 2177, 55, 202, "Input",ExpressionUUID->"7774e8c6-8081-4d0b-889f-fc7bc525a710",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}],
Cell[1466404, 26697, 83537, 1626, 366, "Output",ExpressionUUID->"21f86cb2-d810-4cd5-b3b1-3f5f564ac7f1",
 CellGroupingRules->{"GroupTogetherGrouping", 10003.}]
}, Open  ]],
Cell[1549956, 28326, 7224, 185, 605, "Input",ExpressionUUID->"43249110-21b0-41cf-996f-a576b29b57e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1557217, 28516, 254, 4, 79, "Subtitle",ExpressionUUID->"ceef9337-1abf-4513-9f40-9e1194708e81"],
Cell[1557474, 28522, 1541, 31, 109, "Input",ExpressionUUID->"3b99c3a5-f045-4556-b19a-33d6a4899ab5"],
Cell[1559018, 28555, 629, 17, 46, "Input",ExpressionUUID->"3ac9215c-f512-45fa-8b11-cfc5d730b833"],
Cell[CellGroupData[{
Cell[1559672, 28576, 2505, 65, 233, "Input",ExpressionUUID->"35fc2d37-0019-4b13-b257-9189770b278a"],
Cell[1562180, 28643, 68670, 1344, 366, "Output",ExpressionUUID->"2fed1716-e18c-4731-9937-4de57fa50ee9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1630899, 29993, 219, 5, 79, "Subtitle",ExpressionUUID->"90b04a1d-bc0b-4740-b77f-5e9c44d0fbec"],
Cell[CellGroupData[{
Cell[1631143, 30002, 606, 16, 78, "Input",ExpressionUUID->"602cbdb3-2ba1-49c8-ac39-b0aacdd2505e"],
Cell[1631752, 30020, 1048, 19, 41, "Message",ExpressionUUID->"363c84cc-bd9f-458a-9e8b-4d7a79be5610"],
Cell[1632803, 30041, 1718, 42, 74, "Output",ExpressionUUID->"920b37f5-f7b7-47da-a4e8-a51d5a70fedd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1634558, 30088, 706, 17, 46, "Input",ExpressionUUID->"102e67ed-54f5-4f17-92ca-a25677d76100"],
Cell[1635267, 30107, 1217, 25, 73, "Output",ExpressionUUID->"6d19d907-a1f1-4131-9f6c-3c7bd903a486"]
}, Open  ]],
Cell[1636499, 30135, 321, 8, 46, "Input",ExpressionUUID->"9bac153f-22a3-4ef3-a406-4ae814a5dd23"],
Cell[CellGroupData[{
Cell[1636845, 30147, 803, 15, 78, "Input",ExpressionUUID->"97271f66-c8e2-4784-9305-3faeb02658d8"],
Cell[1637651, 30164, 12819, 324, 245, "Output",ExpressionUUID->"ab3477de-5058-48bf-a466-fc6bb434783e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1650507, 30493, 1771, 36, 109, "Input",ExpressionUUID->"5e733684-b589-4160-83cf-6074edfc1e6c"],
Cell[1652281, 30531, 1849, 38, 98, "Output",ExpressionUUID->"21a5938c-cd3f-4f1a-a5cb-b67e258004d7"],
Cell[1654133, 30571, 1780, 37, 98, "Output",ExpressionUUID->"5e85653e-a6d1-4a88-b85f-4693d5313bf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1655950, 30613, 683, 15, 46, "Input",ExpressionUUID->"e312b56c-fe51-40c2-871e-67211b590eab"],
Cell[1656636, 30630, 1418, 33, 94, "Output",ExpressionUUID->"b94a421b-cc14-4d46-b751-2ca164367987"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1658103, 30669, 226, 5, 79, "Subtitle",ExpressionUUID->"1674dbd5-8ea5-461b-b72b-62519c80a97f"],
Cell[1658332, 30676, 798, 20, 46, "Input",ExpressionUUID->"c076dd98-2349-4b56-a590-f965b1470ab5"],
Cell[CellGroupData[{
Cell[1659155, 30700, 3727, 79, 243, "Input",ExpressionUUID->"38bd58b2-873a-4dea-a789-0358d98794f5"],
Cell[1662885, 30781, 4550, 112, 115, "Output",ExpressionUUID->"345bddb7-ca34-4282-9458-7ff9f2a63f46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1667472, 30898, 3273, 72, 243, "Input",ExpressionUUID->"c3056278-63a2-4a94-8821-b0ad570013ba"],
Cell[1670748, 30972, 3899, 101, 132, "Output",ExpressionUUID->"e6cefba2-75e7-4a46-bf30-35420a4aade5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1674696, 31079, 192, 3, 79, "Subtitle",ExpressionUUID->"e7017bb1-fe30-46aa-97ae-2c98e4e46b08"],
Cell[1674891, 31084, 1109, 27, 100, "Input",ExpressionUUID->"28d28ec8-de32-4ad9-9c74-76cda442257d"],
Cell[CellGroupData[{
Cell[1676025, 31115, 169, 3, 100, "Section",ExpressionUUID->"f0e5c282-2e11-46de-a972-f00c03036fba"],
Cell[1676197, 31120, 3119, 49, 71, "Input",ExpressionUUID->"300e58d3-e14d-4e2d-9f27-d3c732f0b683"],
Cell[CellGroupData[{
Cell[1679341, 31173, 319, 6, 42, "Input",ExpressionUUID->"f7623711-9d69-4443-818d-290917d12b62"],
Cell[1679663, 31181, 585, 9, 66, "Output",ExpressionUUID->"12abd884-4ed6-4b0c-953c-0752f3d9bca9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1680285, 31195, 7135, 173, 414, "Input",ExpressionUUID->"cf4b3c6a-9e7c-4ea0-b57d-d5c17b11b214"],
Cell[1687423, 31370, 843, 14, 66, "Output",ExpressionUUID->"c9119b4d-d2c7-4386-8886-a27218c2f188"],
Cell[1688269, 31386, 954, 16, 70, "Output",ExpressionUUID->"24ccdd89-4bae-4ba4-b6e9-e14b38f44e32"],
Cell[1689226, 31404, 101717, 1796, 405, "Output",ExpressionUUID->"c268bc3f-642b-4038-9e53-001d547b98d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790980, 33205, 232, 4, 42, "Input",ExpressionUUID->"c630efda-91f1-4925-ab44-eaf0d07bf68d"],
Cell[1791215, 33211, 595, 12, 66, "Output",ExpressionUUID->"f9357243-df77-41c7-82b7-934203b5225d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1791847, 33228, 331, 7, 42, "Input",ExpressionUUID->"ebf22f9d-830a-4484-b095-1f51fb6e0b54"],
Cell[1792181, 33237, 621, 13, 66, "Output",ExpressionUUID->"df65b954-4fe6-455a-95be-23ccf3112a15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1792851, 33256, 171, 3, 100, "Section",ExpressionUUID->"993f772a-052f-4f38-971e-9b96c86b3ab0"],
Cell[1793025, 33261, 1920, 33, 78, "Input",ExpressionUUID->"417bf179-ca33-473b-8b4c-edccff1e5be0"],
Cell[CellGroupData[{
Cell[1794970, 33298, 486, 9, 46, "Input",ExpressionUUID->"e4e5dba9-e3a0-4017-8dd0-28ddd2fb0011"],
Cell[1795459, 33309, 1061, 15, 70, "Output",ExpressionUUID->"efbb2da1-17cb-4282-8209-ce514a9e4edd"]
}, Open  ]],
Cell[1796535, 33327, 539, 12, 46, "Input",ExpressionUUID->"738ad165-0f09-4b98-b7eb-75a3c7af2c19"],
Cell[CellGroupData[{
Cell[1797099, 33343, 8674, 192, 481, "Input",ExpressionUUID->"b2b9a67e-9625-45ac-aa4a-e6873cf55152"],
Cell[1805776, 33537, 45016, 885, 70, "Output",ExpressionUUID->"bb33bb14-a23b-4104-b4cb-3df67c7d0df5"],
Cell[1850795, 34424, 3435, 52, 70, "Output",ExpressionUUID->"a38c3540-44fc-459b-8200-135a7a87a2c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854267, 34481, 215, 4, 46, "Input",ExpressionUUID->"edb9e24f-76c7-4373-8ad1-1697402e61fa"],
Cell[1854485, 34487, 247, 4, 70, "Output",ExpressionUUID->"0d212921-63f0-4ae8-9cde-70fbf1b68ff6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1854769, 34496, 1232, 31, 140, "Input",ExpressionUUID->"7037ac4b-47e5-4e13-9073-cc7d3814ccc0"],
Cell[1856004, 34529, 691, 14, 70, "Output",ExpressionUUID->"e87e5392-9a14-4601-a83d-cdfec52d0daf"],
Cell[1856698, 34545, 585, 13, 70, "Output",ExpressionUUID->"6bdd72d2-280f-4fd5-9f04-a834ac9a6801"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1857320, 34563, 316, 8, 46, "Input",ExpressionUUID->"15c49d1d-f0e8-405c-b257-223adf595799"],
Cell[1857639, 34573, 852, 16, 70, "Message",ExpressionUUID->"7231aea9-6f36-4fe4-9704-e16757a9a3e4"],
Cell[1858494, 34591, 851, 16, 70, "Message",ExpressionUUID->"b6a4f6fd-1790-4e8b-8f88-282d918bfc11"],
Cell[1859348, 34609, 5647, 159, 70, "Output",ExpressionUUID->"3a9a1fbc-9277-4e88-bd1f-0a2a5058ea90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1865032, 34773, 950, 27, 78, "Input",ExpressionUUID->"4a5d1071-9888-485d-968a-641f002cccee"],
Cell[1865985, 34802, 516, 11, 70, "Message",ExpressionUUID->"a4fabfd1-5033-44bd-b201-8c3393ad8cbb"],
Cell[1866504, 34815, 531, 12, 70, "Message",ExpressionUUID->"cbe77704-ca42-4886-9a4c-c4d8c0eda5e6"],
Cell[1867038, 34829, 514, 11, 70, "Message",ExpressionUUID->"f20313f7-ea62-44d8-ba85-e6c92cae77f6"],
Cell[1867555, 34842, 476, 10, 70, "Message",ExpressionUUID->"d100386c-596a-4a49-8b43-e5fc73302ad5"],
Cell[1868034, 34854, 781, 13, 70, "Output",ExpressionUUID->"bb5cd20f-9dae-4b55-a12c-e7da5cecfd8e"],
Cell[1868818, 34869, 10642, 266, 70, "Output",ExpressionUUID->"728e4b69-254b-4e72-bb22-b8f8fc26ce76"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1879509, 35141, 356, 10, 77, "Section",ExpressionUUID->"aa7a2679-6d98-4704-a0e1-c72c66d2e8a9"],
Cell[1879868, 35153, 2341, 47, 157, "Input",ExpressionUUID->"2bfd188a-6c42-45a1-9b25-c38974e00da5"],
Cell[1882212, 35202, 745, 19, 42, "Input",ExpressionUUID->"93c16f53-43d3-454f-bdf2-100b594b7ff3"],
Cell[1882960, 35223, 2148, 57, 128, "Input",ExpressionUUID->"00811fad-9d4c-40bb-beea-64ccf03eebf4"],
Cell[CellGroupData[{
Cell[1885133, 35284, 616, 18, 42, "Input",ExpressionUUID->"869fb935-b584-4317-a964-4b50367a2c22"],
Cell[1885752, 35304, 629, 13, 66, "Output",ExpressionUUID->"a26852e1-40ce-4a76-bbb6-11969f356c8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1886418, 35322, 179, 2, 42, "Input",ExpressionUUID->"eb264576-6adf-41eb-9463-8e473d2e4283"],
Cell[1886600, 35326, 648, 12, 66, "Output",ExpressionUUID->"b9f7c107-4319-439c-b93b-d05f04d70cda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1887285, 35343, 395, 9, 42, "Input",ExpressionUUID->"484a113d-c77b-40a0-b504-30e2603ca7b2"],
Cell[1887683, 35354, 385, 7, 70, "Output",ExpressionUUID->"8b3e77d3-cdb7-4fc9-9996-9b54a4542e78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1888105, 35366, 181, 3, 42, "Input",ExpressionUUID->"72a84e2f-b164-4615-8a0a-b06faa35fe4d"],
Cell[1888289, 35371, 864, 16, 66, "Output",ExpressionUUID->"70049578-68b2-4dc8-b267-cbaebe45f5cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1889190, 35392, 927, 19, 100, "Input",ExpressionUUID->"2c6c479c-af06-4519-83b7-647113348417"],
Cell[1890120, 35413, 734, 13, 87, "Output",ExpressionUUID->"864e1345-cbab-45b6-84c0-4d8ae136ab03"]
}, Open  ]],
Cell[1890869, 35429, 600, 14, 42, "Input",ExpressionUUID->"c58dedcf-bcbf-433e-abd9-f283a6bf9b6e"],
Cell[CellGroupData[{
Cell[1891494, 35447, 603, 14, 42, "Input",ExpressionUUID->"b4245020-edf0-4138-b7ea-5778fb4a96fe"],
Cell[1892100, 35463, 1194, 21, 69, "Message",ExpressionUUID->"a89dd8a1-b14d-4ac9-bfd1-65f9772a8a02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1893331, 35489, 11093, 288, 871, "Input",ExpressionUUID->"90c11f72-af50-4931-9303-5ca509a5b20d"],
Cell[1904427, 35779, 193183, 3762, 347, "Output",ExpressionUUID->"d957d04f-5969-480b-aa24-9b895626ea5f"]
}, Open  ]],
Cell[2097625, 39544, 179, 3, 52, "Text",ExpressionUUID->"36d2a7e6-3809-4ebc-a687-239fdb7a3d41"],
Cell[CellGroupData[{
Cell[2097829, 39551, 1993, 52, 214, "Input",ExpressionUUID->"e9265132-3533-4eab-a85f-b60a66f7ec51"],
Cell[2099825, 39605, 497, 8, 66, "Output",ExpressionUUID->"2e2cd1ea-4ddd-48b3-b5db-e4f858a3091e"],
Cell[2100325, 39615, 497, 8, 66, "Output",ExpressionUUID->"a2146a4b-ea87-49e5-98a1-3b0d0db4a46f"],
Cell[2100825, 39625, 501, 8, 66, "Output",ExpressionUUID->"4ac1c365-54d6-4729-9727-c4d519ef59ca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2101375, 39639, 732, 22, 100, "Section",ExpressionUUID->"ae1deeab-d144-4a10-b1e6-0ff8f71acbb7"],
Cell[2102110, 39663, 1785, 32, 71, "Input",ExpressionUUID->"81980613-0e79-4a33-8eb2-24063997a0ad"],
Cell[2103898, 39697, 803, 20, 186, "Input",ExpressionUUID->"42a710c0-6a92-479e-88fa-6f6c16cee734"],
Cell[2104704, 39719, 1287, 30, 100, "Input",ExpressionUUID->"1f12da49-84e7-422b-bb4e-48db71685589"],
Cell[CellGroupData[{
Cell[2106016, 39753, 321, 7, 42, "Input",ExpressionUUID->"15f9f9e5-732e-49ce-bfd0-f29b08e8d76e"],
Cell[2106340, 39762, 217, 4, 66, "Output",ExpressionUUID->"79bd29e8-4db4-46ef-b0a7-bf48e9f8b3dd"]
}, Open  ]],
Cell[2106572, 39769, 751, 20, 71, "Input",ExpressionUUID->"87b6ed96-08db-4e4f-8671-56bb7043b944"],
Cell[CellGroupData[{
Cell[2107348, 39793, 2552, 64, 214, "Input",ExpressionUUID->"73e12d64-47f6-447e-93d1-d8233e84bdf6"],
Cell[2109903, 39859, 9651, 175, 341, "Output",ExpressionUUID->"74a3f751-79d4-49c2-a76b-4d1e4d5ff217"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2119603, 40040, 837, 27, 100, "Section",ExpressionUUID->"8f95e269-ed4f-4eda-86f6-b51d0beb69f2"],
Cell[2120443, 40069, 1272, 26, 78, "Input",ExpressionUUID->"abd0a8bc-9ac7-4354-bbc3-06806891340a"],
Cell[2121718, 40097, 792, 19, 202, "Input",ExpressionUUID->"c45169f7-36b2-4f10-afdd-24f93b0789fb"],
Cell[2122513, 40118, 1095, 27, 109, "Input",ExpressionUUID->"4adc8b85-5e9b-4dcb-a10c-fee3d95869b2"],
Cell[CellGroupData[{
Cell[2123633, 40149, 270, 6, 46, "Input",ExpressionUUID->"c006b2e2-a3d7-4f8c-abf7-bab0179261e2"],
Cell[2123906, 40157, 293, 5, 52, "Output",ExpressionUUID->"291f69bb-044d-4c7f-9303-683f73dfd22c"]
}, Open  ]],
Cell[2124214, 40165, 716, 20, 78, "Input",ExpressionUUID->"55f9099c-b82c-4f7b-9d9e-e3b7d972087c"],
Cell[CellGroupData[{
Cell[2124955, 40189, 2675, 65, 357, "Input",ExpressionUUID->"8dac8929-df5c-453d-ac65-ba358b559111"],
Cell[2127633, 40256, 395, 10, 52, "Output",ExpressionUUID->"c14ecd07-cdcd-4a51-a48f-80c3936f2dfb"],
Cell[2128031, 40268, 254, 4, 52, "Output",ExpressionUUID->"3e34310a-caf3-412d-aa35-c0782e1e9dac"],
Cell[2128288, 40274, 24485, 419, 325, "Output",ExpressionUUID->"4ca1eb4b-f46f-4326-bfec-e6f8675fa280"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2152834, 40700, 212, 4, 79, "Subtitle",ExpressionUUID->"40c92401-458f-47ef-b719-5d1a0071e43c"],
Cell[2153049, 40706, 85550, 1410, 322, "Input",ExpressionUUID->"c0c57942-60d3-4cc0-8c43-e9730260cd7f"],
Cell[CellGroupData[{
Cell[2238624, 42120, 1138, 36, 78, "Input",ExpressionUUID->"c36919b7-595f-44cb-8fd9-18307a02e918"],
Cell[2239765, 42158, 471, 7, 52, "Output",ExpressionUUID->"b89e0c09-a95e-4c82-a425-6947757e4b75"]
}, Open  ]],
Cell[2240251, 42168, 6737, 190, 405, "Input",ExpressionUUID->"d9e3ff15-ba04-44c8-bf06-ffbc241605d9"],
Cell[2246991, 42360, 5745, 139, 317, "Input",ExpressionUUID->"bd8b9c23-7e4f-4b24-8a55-baacc54a177a"],
Cell[CellGroupData[{
Cell[2252761, 42503, 613, 15, 46, "Input",ExpressionUUID->"53e7da18-1761-45ee-9341-3e018e692890"],
Cell[2253377, 42520, 571, 9, 52, "Output",ExpressionUUID->"828afa67-aa95-48bd-8cee-762864889e80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2253985, 42534, 285, 5, 46, "Input",ExpressionUUID->"0fba924e-c8ab-460c-b5d4-5dc69da319e3"],
Cell[2254273, 42541, 3931, 109, 252, "Output",ExpressionUUID->"93ba0d1a-354d-423e-b218-ba975c305910"]
}, Open  ]],
Cell[2258219, 42653, 1508, 36, 109, "Input",ExpressionUUID->"204508a9-3ab2-4ee3-972f-5a57bb1ebe32"],
Cell[2259730, 42691, 5338, 139, 317, "Input",ExpressionUUID->"bfa17c7f-7ecb-4f92-b214-829e90890efa"],
Cell[CellGroupData[{
Cell[2265093, 42834, 290, 7, 46, "Input",ExpressionUUID->"2f278db8-f6a6-495e-9d4d-a378df4c472a"],
Cell[2265386, 42843, 431, 7, 52, "Output",ExpressionUUID->"abdaaa5b-d13d-4404-8400-194b98a44eaf"]
}, Open  ]],
Cell[2265832, 42853, 2018, 47, 140, "Input",ExpressionUUID->"a385d432-be35-45fa-a7dc-91acf0e85508"],
Cell[CellGroupData[{
Cell[2267875, 42904, 188, 3, 46, "Input",ExpressionUUID->"35e40cee-58c6-4017-a003-04affb853768"],
Cell[2268066, 42909, 1151, 28, 72, "Output",ExpressionUUID->"1d84ed8c-5853-4cfe-93c3-f8852a9794b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2269254, 42942, 837, 16, 78, "Input",ExpressionUUID->"885fef94-ca98-4eba-926f-dda7259421e7"],
Cell[2270094, 42960, 888, 23, 52, "Output",ExpressionUUID->"eb535206-bc2f-48fa-82ee-f619b60747ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2271019, 42988, 9398, 176, 171, "Input",ExpressionUUID->"c18bbc05-c69d-4298-ad63-a3d44e085a07"],
Cell[2280420, 43166, 791, 11, 52, "Output",ExpressionUUID->"eab9aa0d-2441-47ee-8e8d-02eebb90ff78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2281248, 43182, 5421, 138, 261, "Input",ExpressionUUID->"cea5394b-3864-4af4-be43-28a0a55d1053"],
Cell[2286672, 43322, 1211, 18, 52, "Output",ExpressionUUID->"60a25f5d-3b8d-4c6c-a847-887d7f346af2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2287932, 43346, 192, 3, 79, "Subtitle",ExpressionUUID->"a85ab9be-3e0d-4653-bbc8-13a4453c86e5"],
Cell[CellGroupData[{
Cell[2288149, 43353, 268, 6, 101, "Section",ExpressionUUID->"b634e6bb-5f49-48d4-be58-4c9efac3b630"],
Cell[2288420, 43361, 1272, 30, 78, "Input",ExpressionUUID->"ec2f5191-46de-49ce-ac88-baa21292881d"],
Cell[CellGroupData[{
Cell[2289717, 43395, 5251, 152, 388, "Input",ExpressionUUID->"b4e400a4-e332-48af-99d0-b8a8ab9af2bc"],
Cell[2294971, 43549, 254, 4, 52, "Output",ExpressionUUID->"342991fa-7472-498c-a2d3-2c5fd636d775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2295262, 43558, 656, 17, 46, "Input",ExpressionUUID->"e4b28d0a-4da3-4bd4-91bd-4900f78776c3"],
Cell[2295921, 43577, 12326, 329, 549, "Output",ExpressionUUID->"20380fe2-d168-41ee-b893-6bc8893a4d7c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2308296, 43912, 180, 3, 101, "Section",ExpressionUUID->"df6e77cb-c1b5-4dd2-acfb-a70a5b270ae0"],
Cell[2308479, 43917, 745, 20, 46, "Input",ExpressionUUID->"2b71a1db-733b-4150-8de2-438b29038449"],
Cell[CellGroupData[{
Cell[2309249, 43941, 9981, 263, 557, "Input",ExpressionUUID->"a16694d2-2cb8-4f05-84d9-799db29d26fb"],
Cell[2319233, 44206, 273, 5, 52, "Output",ExpressionUUID->"68aa93e8-7b1d-4bb5-ab27-952ce93c2528"]
}, Open  ]],
Cell[2319521, 44214, 16650, 443, 835, "Text",ExpressionUUID->"a9e37030-7987-4995-8ef5-030351a1e0a0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

