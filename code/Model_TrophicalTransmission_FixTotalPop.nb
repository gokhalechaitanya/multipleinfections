(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2284554,      43167]
NotebookOptionsPosition[   2260880,      42786]
NotebookOutlinePosition[   2261302,      42803]
CellTagsIndexPosition[   2261259,      42800]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Single infection with trophical transmission", "Title",
 CellChangeTimes->{{3.825668663761571*^9, 3.8256686880677233`*^9}, 
   3.826272929194303*^9, {3.827819505375657*^9, 
   3.827819511550613*^9}},ExpressionUUID->"ca6339fa-87b0-4c9a-bcc5-\
07c99afb164f"],

Cell[CellGroupData[{

Cell["Ecological dynamics of a resident", "Chapter",
 CellChangeTimes->{{3.825769393130102*^9, 
  3.825769403189344*^9}},ExpressionUUID->"00267e49-4f01-4b7a-b465-\
4503f9c63b4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIsdt", " ", "=", " ", 
    RowBox[{
     RowBox[{"R", "[", 
      RowBox[{"Iw", ",", " ", "Is"}], "]"}], "-", " ", 
     RowBox[{"d", " ", "Is"}], "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "Is"}], "  ", "-", " ", 
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "intermediate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Iw"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], 
      "Iw"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDsdt", " ", "=", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
     "  ", "-", " ", 
     RowBox[{"\[Mu]", " ", "Ds"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}]}]}], ";"}], 
  "  ", 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "definitive"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDwdt", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}], "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], " ", "Dw"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "definitive"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dWdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fw", " ", "Dw"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "W"}], " ", "-", " ", 
    RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.825656713077812*^9, 3.825656819315256*^9}, {
   3.8256675673352013`*^9, 3.825667571392377*^9}, {3.8256676047331753`*^9, 
   3.8256679949825287`*^9}, 3.825668657319312*^9, {3.825669024736739*^9, 
   3.825669107703614*^9}, {3.825669201205226*^9, 3.825669201481333*^9}, {
   3.825669256379244*^9, 3.82566950377395*^9}, {3.825669536259808*^9, 
   3.8256696344884987`*^9}, {3.8256696689148417`*^9, 3.825670143310657*^9}, {
   3.825670345459824*^9, 3.825670438958109*^9}, {3.825670488620307*^9, 
   3.825670543829121*^9}, {3.825670663648823*^9, 3.825670761696919*^9}, {
   3.825671013629569*^9, 3.825671139741517*^9}, {3.825742172557213*^9, 
   3.8257421729950933`*^9}, {3.825742207420051*^9, 3.8257422478914013`*^9}, {
   3.82574345173761*^9, 3.82574350922976*^9}, {3.825760175997797*^9, 
   3.82576018688303*^9}, {3.8257606621022377`*^9, 3.825760675998103*^9}, 
   3.8257607945724363`*^9, {3.825760904709169*^9, 3.82576091270079*^9}, {
   3.8257617801084433`*^9, 3.8257617912632027`*^9}, {3.8257621523527527`*^9, 
   3.825762165308137*^9}, {3.825762201784202*^9, 3.825762208487948*^9}, {
   3.825762251027261*^9, 3.825762354682111*^9}, 3.8257625163120213`*^9, {
   3.825762659025866*^9, 3.825762659901341*^9}, {3.825762902484415*^9, 
   3.825762910346539*^9}, {3.8257634961592484`*^9, 3.825763496692479*^9}, {
   3.825766757419752*^9, 3.825766767356141*^9}, {3.825766833920692*^9, 
   3.825766853096877*^9}, {3.825766897662359*^9, 3.8257668980739517`*^9}, {
   3.8257682274738283`*^9, 3.825768355004142*^9}, {3.825996664752124*^9, 
   3.825996692179337*^9}, {3.82626863451892*^9, 3.826268767236582*^9}, {
   3.8262689370700693`*^9, 3.826268937767343*^9}, {3.826268980930978*^9, 
   3.8262689879990473`*^9}, {3.82626904542638*^9, 3.826269047123454*^9}, {
   3.826271241094585*^9, 3.82627124404462*^9}, {3.827819518344512*^9, 
   3.827819536797364*^9}, {3.8278209102469873`*^9, 3.8278212216057177`*^9}, {
   3.827821911512141*^9, 3.827821969572859*^9}, {3.8278221978352613`*^9, 
   3.8278222272418337`*^9}, {3.827822510921095*^9, 3.827822511765992*^9}, {
   3.827823318435688*^9, 3.827823330286881*^9}, {3.827823839514995*^9, 
   3.8278238647577143`*^9}, {3.8280753879957237`*^9, 3.82807539054478*^9}, {
   3.82807610064509*^9, 3.828076102177025*^9}, {3.8280786078866158`*^9, 
   3.82807862016877*^9}, {3.829382110716173*^9, 3.829382222814026*^9}, {
   3.829382282426675*^9, 3.829382339462714*^9}, {3.82938254818421*^9, 
   3.829382549728499*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"1f09bc19-4e76-4681-bb03-666be7d80279"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827822459562306*^9, 3.827822484038743*^9}, {
   3.82930004587323*^9, 3.829300078603044*^9}, 3.829300337544739*^9},
 CellLabel->
  "In[130]:=",ExpressionUUID->"08ab7a49-e39b-4abb-bfcf-3344bce114af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func1", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829288616107027*^9, 3.8292886259950533`*^9}, {
  3.829289279204534*^9, 3.829289283627792*^9}, {3.82928933576853*^9, 
  3.829289352141361*^9}, {3.8292897198397703`*^9, 3.8292897211117163`*^9}, {
  3.829300310231729*^9, 3.829300322388371*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"dc11f015-4138-463f-99bb-5a2bc8ef7948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw", ",", " ", "W"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIsdt", ",", " ", "dIwdt", ",", " ", "dDsdt", ",", " ", "dDwdt", ",", 
     " ", "dWdt"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8278235561211777`*^9, 3.8278235895996933`*^9}, {
  3.827823939807645*^9, 3.827823944103592*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"f9870ea7-3eb4-4c4c-ac44-51c0f88b4712"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func0"}], "/.", 
     RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.82782571391743*^9, {3.828076226269494*^9, 3.8280762269740458`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"40f22f17-4072-4551-abee-6878ca5b08ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], "\[Rho]"]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.827825716047372*^9, 3.8280754028129396`*^9, 3.828076111650443*^9, 
   3.828076227621562*^9, 3.828076300563541*^9, 3.828078712930681*^9, 
   3.828086164640039*^9, 3.8292880769844103`*^9, {3.829300326235674*^9, 
   3.82930034116356*^9}, 3.8359758069190683`*^9, 3.840797419676227*^9, 
   3.840797466225956*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"cfea430e-f0b6-47c7-91b9-8170edf3f339"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0Func1", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func1"}], "/.", 
      RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}],
     "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.829289374739566*^9, 3.829289377514204*^9}, {
  3.829289628424356*^9, 3.829289632462536*^9}, {3.829290198591793*^9, 
  3.829290200130179*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"86b4a1c5-09fb-4f4a-9003-ad80da6b36c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"\[CapitalKappa]", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[CapitalKappa]"}], "r"]}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Mu]"}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", " ",
          "\[Rho]"}]}], 
       RowBox[{"c", " ", "\[CapitalKappa]", " ", 
        SuperscriptBox["\[Rho]", "2"]}]]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.829289379669998*^9, 3.829289633821643*^9, 3.829289727885021*^9, 
   3.829290200649737*^9, {3.8293003277196293`*^9, 3.829300342558381*^9}, 
   3.835975807334427*^9, 3.840797419712879*^9, 3.8407974662441397`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"48d52ba5-8478-418d-a89c-23d6e62155bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability of the equilibrium", "Subchapter",
 CellChangeTimes->{{3.828075643251759*^9, 
  3.8280756472434187`*^9}},ExpressionUUID->"619a35d5-cd93-4b58-9eeb-\
4918a7b1ffca"],

Cell[CellGroupData[{

Cell["Linear functions", "Section",
 CellChangeTimes->{{3.82928999027208*^9, 
  3.82928999320476*^9}},ExpressionUUID->"5bedc337-ccf0-4960-ad0a-\
246111f56bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", "r", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", "  ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8280756685967827`*^9, 3.8280758314732227`*^9}, {
   3.8280758639554453`*^9, 3.828075892701819*^9}, {3.828075940412252*^9, 
   3.8280759898078003`*^9}, {3.828078724139042*^9, 3.828078752078988*^9}, 
   3.829290027566111*^9, {3.829300130500415*^9, 3.82930016017767*^9}, {
   3.8293002159920588`*^9, 3.82930022248534*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"cbbfe1f8-6815-48a6-845d-0f388dcb62f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.82807600588461*^9, 3.82807600787519*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"80fc8eae-fb1f-459a-8db6-454bb416cb27"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "+", "r", "-", 
       RowBox[{"W", " ", "\[Gamma]w"}], "-", 
       RowBox[{"\[CapitalPi]0", "[", 
        RowBox[{"Ds", ",", "Dw"}], "]"}]}], "r", "0", "0", "0"},
     {
      RowBox[{"W", " ", "\[Gamma]w"}], 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{"\[CapitalPi]1", "[", 
        RowBox[{"Ds", ",", "Dw", ",", "\[Beta]w"}], "]"}]}], "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", "\[Mu]", "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}], "0"},
     {"0", "0", 
      RowBox[{"Iw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "0", "0", "fw", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.828076008300259*^9, 3.8280761179662313`*^9, 
  3.828078755173183*^9, 3.829300226482354*^9, 3.829300351878982*^9, 
  3.835975807384198*^9, 3.840797419727216*^9, 3.840797466249741*^9},
 CellLabel->
  "Out[138]//MatrixForm=",ExpressionUUID->"29a6bd20-b41f-410e-8d1b-\
486cdf33bb86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", ".", "var"}], " ", "/.", "func0"}], ")"}], "\[Equal]", " ", 
   
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func0"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.828076010664349*^9, 3.828076033593799*^9}, {
  3.829300240583639*^9, 3.829300247307254*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"b6a2d9dd-aa58-44db-b753-617dc4e7e622"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.828076016562026*^9, 3.8280760341117353`*^9}, 
   3.828076120029529*^9, 3.828076306539208*^9, 3.828078757851067*^9, {
   3.8293002276825333`*^9, 3.829300247807722*^9}, 3.82930035279112*^9, 
   3.8359758074574738`*^9, 3.840797419744809*^9, 3.840797466262216*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"433c8c9f-9f38-411a-98d6-e02238fe5887"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aeigens", " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"A", "/.", "func0"}], "]"}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.828076310764051*^9, 3.828076351937457*^9}, {
   3.828078760409507*^9, 3.828078764213051*^9}, 3.829300257241005*^9, {
   3.829300738466364*^9, 3.829300765221094*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"30f2022b-44b1-4066-a4a4-8055819bb60c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076332256621*^9, 3.828076411850637*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"542f9952-c7be-455e-b204-c922ed16a464"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Delta]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "+", "r"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", 
   RowBox[{"-", "\[Mu]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828076339826378*^9, 3.828076412505925*^9}, 
   3.8280787697360687`*^9, 3.828086172676084*^9, 3.829288085095286*^9, 
   3.829300269150385*^9, 3.829300355076603*^9, 3.835975811722212*^9, 
   3.8407974209542418`*^9, 3.840797466280827*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"2c545ebe-1637-40c4-8e78-8876f57d63da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"\[Mu]", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[Rho]", ">", "0"}], ",", " ", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"\[Beta]w", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076438838669*^9, 3.828076629434969*^9}, {
  3.828076660323764*^9, 3.828076692435136*^9}, {3.829300361942924*^9, 
  3.829300364001012*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"687b7706-89d0-43d3-836e-9f061d42007e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"r", " ", "\[Beta]w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
        RowBox[{"r", " ", "\[Beta]w"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], "]"}]}], 
     RowBox[{"2", " ", "\[Rho]"}]]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{"d", " ", "\[Beta]w"}], "-", 
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], "\[Rho]"], 
          RowBox[{
           RowBox[{"d", " ", "\[Beta]w"}], ">", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.828076443588296*^9, 3.828076448866023*^9}, {
   3.828076491595972*^9, 3.828076509364583*^9}, {3.8280765436147547`*^9, 
   3.828076629902029*^9}, 3.828076660810093*^9, 3.828076692932027*^9, 
   3.828078772766087*^9, 3.828086177404166*^9, 3.829288089287722*^9, 
   3.829300275948649*^9, {3.8293003581064453`*^9, 3.829300366801404*^9}, 
   3.835975813281784*^9, 3.8407974213836737`*^9, 3.8407974662943497`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"d4c0e6f5-07a3-456b-8b12-5d94aa9fc373"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic growth intermediate hosts", "Section",
 CellChangeTimes->{{3.8292900059177437`*^9, 
  3.82929001400443*^9}},ExpressionUUID->"a9e5d69c-a01f-4843-a6de-\
0048bd5b8a5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], 
          ")"}]}], " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "-", "  ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", 
       RowBox[{"r", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}]}],
        ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.829290041468392*^9, 3.829290083293619*^9}, 
   3.8292901573628817`*^9, {3.829300399906165*^9, 3.829300442929491*^9}, {
   3.829300483360271*^9, 3.829300508729198*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"3b56881e-1eaa-44d9-aaa9-12fe23ff709c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AFunc1", "/.", "func1"}], ")"}], ".", "var"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func1"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.829290095052435*^9, 3.829290098954587*^9}, {
  3.829300515668148*^9, 3.829300521210037*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"72927999-1ef4-462c-9434-f839bbb3501a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.829290099646719*^9, 3.829290159160308*^9, 
  3.829300521645545*^9, 3.835975813568886*^9, 3.840797421402938*^9, 
  3.84079746629928*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"8f245896-7b36-4ddc-821a-fdb9b276f562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AeigensFunc1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"AFunc1", "/.", "func1"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8292901719851007`*^9, 3.8292901810399313`*^9}, {
   3.82929074163208*^9, 3.829290752355545*^9}, 3.8293005303519163`*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"8adb9b6b-5caf-4cb9-ad8a-e00a59804d13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "-", 
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", "\[Sigma]"}], "+", 
        RowBox[{"2", " ", "c", " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]", " ", "\[Sigma]"}], 
        "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "-", 
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", "\[Sigma]"}], "+", 
        RowBox[{"2", " ", "c", " ", 
         RowBox[{"(", 
          RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]", " ", "\[Sigma]"}], 
        "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292907421726227`*^9, 3.829290763056777*^9}, 
   3.8292919693355*^9, 3.829300538962901*^9, 3.835975821247108*^9, 
   3.8407974234481*^9, 3.840797466330503*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"c8700008-0290-43e5-817b-7e00a0fb9068"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
         "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.829290252923359*^9, 3.829290287663924*^9}, {
  3.8292910415729322`*^9, 3.829291069670826*^9}, {3.829291112620542*^9, 
  3.829291130398438*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"84934df3-cf32-4f91-9d81-68e378acf7de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "r"}], ")"}], " ", "\[Gamma]w", " ", 
      "\[CapitalKappa]"}], "r"]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", "r", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "d", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "-", 
      RowBox[{"c", " ", "r", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
      RowBox[{"r", " ", "\[Sigma]"}], "+", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", 
           " ", "\[Rho]"}], "+", 
          RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
     RowBox[{"2", " ", "r"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "r", " ", "\[Mu]"}], "-", 
     RowBox[{"c", " ", "d", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
     RowBox[{"c", " ", "r", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "-", 
     RowBox[{"r", " ", "\[Sigma]"}], "+", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", 
          " ", "\[Rho]"}], "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
    RowBox[{"2", " ", "r"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.829290258431539*^9, 3.829290289447657*^9}, {
   3.829291042355114*^9, 3.8292910703968067`*^9}, {3.82929111571244*^9, 
   3.8292911317045403`*^9}, 3.835975823277211*^9, 3.840797424059361*^9, 
   3.840797466352166*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"b102d632-44e6-4dd4-bc64-4bb372fe7c4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", "  ", 
      RowBox[{"c", ">", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Mu]", "+", "\[Sigma]"}], ">", "0"}], ",", " ", 
      RowBox[{"p", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829291289871559*^9, 3.829291290239362*^9}, {
  3.8292916950073843`*^9, 3.829291720881555*^9}, {3.829291758744101*^9, 
  3.8292917610597973`*^9}, {3.829291796461124*^9, 3.829291823491487*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"cd261487-9253-4d90-83db-fca19426ca3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "-", 
        RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], ")"}]}], "-", 
     
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "c"}], " ", "d", " ", "\[Beta]w", " ", 
         "\[CapitalKappa]"}], "+", 
        RowBox[{"c", " ", "\[Alpha]", " ", "\[CapitalKappa]", " ", "\[Rho]"}],
         "+", 
        RowBox[{"\[Rho]", " ", 
         SqrtBox[
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "\[Beta]w"}], "-", 
                 RowBox[{"\[Alpha]", " ", "\[Rho]"}]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "-", 
                 RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], 
                ")"}]}]}], ")"}], "2"], 
           SuperscriptBox["\[Rho]", "4"]]]}]}], ")"}]}]}], 
    RowBox[{"2", " ", "c", " ", "\[CapitalKappa]", " ", 
     SuperscriptBox["\[Rho]", "2"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "-", 
        RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], ")"}]}], "+", 
     
     RowBox[{"\[Rho]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"c", " ", "d", " ", "\[Beta]w", " ", "\[CapitalKappa]"}], "-", 
        RowBox[{"c", " ", "\[Alpha]", " ", "\[CapitalKappa]", " ", "\[Rho]"}],
         "+", 
        RowBox[{"\[Rho]", " ", 
         SqrtBox[
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "\[Beta]w"}], "-", 
                 RowBox[{"\[Alpha]", " ", "\[Rho]"}]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Mu]", "-", 
                 RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], 
                ")"}]}]}], ")"}], "2"], 
           SuperscriptBox["\[Rho]", "4"]]]}]}], ")"}]}]}], 
    RowBox[{"2", " ", "c", " ", "\[CapitalKappa]", " ", 
     SuperscriptBox["\[Rho]", "2"]}]], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8292913245970497`*^9, 3.829291725907846*^9, 3.8292917660872*^9, {
   3.8292918006740217`*^9, 3.829291828360304*^9}, 3.8359758291214542`*^9, 
   3.840797425425202*^9, 3.8407974663834677`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"94749692-b9ca-4255-951d-6085d4a7d90c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeSystem", "[", 
    RowBox[{"var_", ",", " ", "vart_", ",", " ", "sys_"}], "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"syst", " ", "=", " ", 
      RowBox[{"sys", "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"var", "\[Rule]", " ", "vart"}], "]"}]}]}], ";", " ", 
     RowBox[{"sysfull", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"vart", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", 
        "syst"}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278227166917267`*^9, 3.827822753230462*^9}, {
   3.827822922653831*^9, 3.827822930881901*^9}, {3.827822982773337*^9, 
   3.827823037108107*^9}, 3.827823101237512*^9, 3.82782326171789*^9, 
   3.8278233565488863`*^9, {3.829292626735865*^9, 3.829292643598576*^9}, {
   3.829292689348095*^9, 3.8292926898161993`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"63f7c73d-1637-4f69-a84a-4b1687dab978"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.827821229838979*^9, 3.827821235402285*^9}, {
  3.827822320596498*^9, 
  3.827822326849743*^9}},ExpressionUUID->"05888b6a-d911-418e-82cf-\
b8497d51ae84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysFunc0", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func0"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysFunc1", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func1"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827822569148403*^9, 3.827822704174527*^9}, {
   3.82782318211902*^9, 3.827823191092559*^9}, {3.827823394132936*^9, 
   3.827823503736817*^9}, {3.827823561478395*^9, 3.8278236008621883`*^9}, 
   3.827823822161427*^9, 3.8278239657774*^9, {3.829289669271122*^9, 
   3.829289678688631*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"ca867795-a0ef-422d-9e37-44cd7e4ad312"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEco", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.9"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278223341819477`*^9, 3.827822444366211*^9}, {
   3.827822502232439*^9, 3.8278225649661427`*^9}, {3.827825386494244*^9, 
   3.827825410863459*^9}, {3.827825453929977*^9, 3.827825454403831*^9}, {
   3.827825522729954*^9, 3.827825550524976*^9}, 3.8278256021678753`*^9, {
   3.827825650036694*^9, 3.827825650806609*^9}, {3.8280740126142387`*^9, 
   3.828074014681838*^9}, {3.828074290887507*^9, 3.828074291596635*^9}, {
   3.82807437954491*^9, 3.828074379943386*^9}, {3.828074423685811*^9, 
   3.8280744257790956`*^9}, {3.8280744969747133`*^9, 3.828074497466743*^9}, {
   3.828074529108124*^9, 3.828074551945829*^9}, {3.828074599895774*^9, 
   3.828074621473525*^9}, {3.82807468419691*^9, 3.828074700019969*^9}, {
   3.8280747397753277`*^9, 3.8280747404372063`*^9}, {3.8280866177014112`*^9, 
   3.828086617870452*^9}, {3.8280867505244417`*^9, 3.828086751093014*^9}, {
   3.829288379414507*^9, 3.829288379901534*^9}, {3.829288433156987*^9, 
   3.829288433462543*^9}, 3.829288506903331*^9, {3.829289683788238*^9, 
   3.8292897118374643`*^9}, {3.829290329283586*^9, 3.829290329519761*^9}, 
   3.829290393474928*^9, 3.829290916726027*^9, {3.829290975953576*^9, 
   3.8292909848376493`*^9}, {3.829297048005028*^9, 3.8292970485160303`*^9}, {
   3.829300549003931*^9, 3.829300556258101*^9}, {3.8293012617683773`*^9, 
   3.829301262999346*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"940291cb-860b-42f6-a8a6-939164131f81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc0", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "30"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sys", "/.", "func0"}], "/.", "prEco"}], ")"}], " ", 
      "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func0", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc0", "/.", "prEco"}], ",", " ", "initFunc0"}], "]"}], 
    ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.827822957647459*^9, 3.827822969409224*^9}, {
   3.827823644111948*^9, 3.827823657623238*^9}, 3.827823709992982*^9, {
   3.827823999487968*^9, 3.827824025530137*^9}, {3.8278240605321407`*^9, 
   3.827824067947177*^9}, {3.828074564712682*^9, 3.8280745652597237`*^9}, {
   3.8280747017880707`*^9, 3.828074702577971*^9}, {3.828074773328237*^9, 
   3.828074774978272*^9}, {3.828074964773364*^9, 3.828074977832465*^9}, {
   3.828086197642436*^9, 3.8280862131636887`*^9}, {3.829289817759626*^9, 
   3.829289821771514*^9}, {3.8292924292035313`*^9, 3.829292435207684*^9}, {
   3.829296644229384*^9, 3.829296671808436*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"80ddafbb-bc10-4885-a06a-70e23ecf87f2"],

Cell[BoxData[
 TemplateBox[{
  "NDSolve", "ndsz", 
   "\"At \\!\\(\\*RowBox[{\\\"t\\\"}]\\) == \
\\!\\(\\*RowBox[{\\\"55.150469564915255`\\\"}]\\), step size is effectively \
zero; singularity or stiff system suspected.\"", 2, 155, 3, 
   30108220672733028614, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.829301265150618*^9, 3.835975829548744*^9, 
  3.8407974254952097`*^9, 3.840797466422864*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"984201c0-5cd5-404e-80b0-2caec3b99ba4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAj9LxK3ldrz4zCu4kV/8jQNi45QIF
xew/0w5Q8Qn/JT9BvaeqxPr9P1/q+8yspyM/vCIptTtFBkBmF1MGixZAP0SW
QmKFaA1AKxIhp2D8Vz9YeFmwV5MSQPNoUYJqC2w/Zw8v1UgwFkCNKb1wYV14
P+gZsCKqGhpAIDz/qnJ1gz8fPNOWw/IdQJsSEh1FQo0/GORJmFzEIEBhs3/v
VBOVP9njf3kPtiJAbBlIzE4nnz+GmIRtsIYkQEeYK+eLZ6Y/D1nadC1OJkCZ
H+Xl9PuvP1HThZBiPChAb5GO+mmHtz9/AgC/hQkqQCuyG2Dy3cA/ZuvPAWH9
K0BFCWB20OzIPyjg8FcY6C1ATkW0WAtJ0j/XieDAvbEvQFRBKCv4JNo/n/YS
nw3RMEAF2vmvwkPjP8kCHWezuDFAe4dRwKGq6z/Q61E5tbMyQCSkmSb4efQ/
xVovFSWqM0DTGvdDHhj+PzAkdPoLkDRADRZAnPmMBUB3yuPpTok1QG+MwHUo
0A9ANMu64ghyNkDw3xPR4uEWQN9ROuUwVjdApbKku3JXIEBnteTxtE04QBr5
OKTIDihAUTFNRfi1OEBiMVTaEccsQAjPyQU=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAowA3gjWyO0BiMVTaEccsQEWqZIUI
CjxAg9z4OWW1sz9gAtzCoAI9QGmfs8B6lGI/8bS6CbDqPUCycfNDEyxdP2/t
QVotzj5ABUrsQcyxYj/KAvS0BsU/QF9iadi972o/TrmGjKtVQEBs+cXwfz1z
P6XfqMOB0kBA8qG4DV1nfD83s35/E0dBQHvb2hn/cIQ/wMkoQFy5QUDuMbtX
DTeNP7dO6AVTNUJAuQmXhciElT/pgFtQBalCQNEawsko5J4/iSHkn2UmQ0Bi
udtVoNqmPyAFQfR8oUNAXkak3Z7JsD/ylVHNTxREQBmcbTWpCLg/MpV3q9CQ
REBc5XtkervBP61BUQ4NBUVA84pimql/yT8fMf91AHdFQGJbm1nrM9I/AI/C
4qHyRUBFZOyTgcnaPxyaOdT+ZUZAdKkSwAk14z+mE8bKCeNGQCwK1//iY+w/
J9AmxstdR0DO2Pm5HtX0P+M5O0ZJ0EdAuoVWEi/L/T8NEmXLdExIQGAZF8uF
9QVAcpdC1VvASEAbHnwtNIsPQEWLNeTwPUlATHUZfQ5aF0APwvz3PLlJQIz8
R5wNKiFAFKZ3kEQsSkCG3e1LxpYoQOiFeVbYWEpAYjFU2hHHLEBiCNPg
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$43268#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 55.150469564915255`}, {0., 
                   14.388808081414656`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAj9LxK3ldrz4zCu4kV/8jQNi45QIF
xew/0w5Q8Qn/JT9BvaeqxPr9P1/q+8yspyM/vCIptTtFBkBmF1MGixZAP0SW
QmKFaA1AKxIhp2D8Vz9YeFmwV5MSQPNoUYJqC2w/Zw8v1UgwFkCNKb1wYV14
P+gZsCKqGhpAIDz/qnJ1gz8fPNOWw/IdQJsSEh1FQo0/GORJmFzEIEBhs3/v
VBOVP9njf3kPtiJAbBlIzE4nnz+GmIRtsIYkQEeYK+eLZ6Y/D1nadC1OJkCZ
H+Xl9PuvP1HThZBiPChAb5GO+mmHtz9/AgC/hQkqQCuyG2Dy3cA/ZuvPAWH9
K0BFCWB20OzIPyjg8FcY6C1ATkW0WAtJ0j/XieDAvbEvQFRBKCv4JNo/n/YS
nw3RMEAF2vmvwkPjP8kCHWezuDFAe4dRwKGq6z/Q61E5tbMyQCSkmSb4efQ/
xVovFSWqM0DTGvdDHhj+PzAkdPoLkDRADRZAnPmMBUB3yuPpTok1QG+MwHUo
0A9ANMu64ghyNkDw3xPR4uEWQN9ROuUwVjdApbKku3JXIEBnteTxtE04QBr5
OKTIDihAUTFNRfi1OEBiMVTaEccsQAjPyQU=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAowA3gjWyO0BiMVTaEccsQEWqZIUI
CjxAg9z4OWW1sz9gAtzCoAI9QGmfs8B6lGI/8bS6CbDqPUCycfNDEyxdP2/t
QVotzj5ABUrsQcyxYj/KAvS0BsU/QF9iadi972o/TrmGjKtVQEBs+cXwfz1z
P6XfqMOB0kBA8qG4DV1nfD83s35/E0dBQHvb2hn/cIQ/wMkoQFy5QUDuMbtX
DTeNP7dO6AVTNUJAuQmXhciElT/pgFtQBalCQNEawsko5J4/iSHkn2UmQ0Bi
udtVoNqmPyAFQfR8oUNAXkak3Z7JsD/ylVHNTxREQBmcbTWpCLg/MpV3q9CQ
REBc5XtkervBP61BUQ4NBUVA84pimql/yT8fMf91AHdFQGJbm1nrM9I/AI/C
4qHyRUBFZOyTgcnaPxyaOdT+ZUZAdKkSwAk14z+mE8bKCeNGQCwK1//iY+w/
J9AmxstdR0DO2Pm5HtX0P+M5O0ZJ0EdAuoVWEi/L/T8NEmXLdExIQGAZF8uF
9QVAcpdC1VvASEAbHnwtNIsPQEWLNeTwPUlATHUZfQ5aF0APwvz3PLlJQIz8
R5wNKiFAFKZ3kEQsSkCG3e1LxpYoQOiFeVbYWEpAYjFU2hHHLEBiCNPg
                    
                    "]]}, Annotation[#, 
                    "Charting`Private`Tag$43268#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 55.150469564915255`}, {0., 
                   14.388808081414656`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.150469564915255`}}, {
       5, 7, 1, {1750}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
tNqe0ugQZeMNyn/PKWGC8qWgNnV/rqf8H7Rtyrc=
       "], {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2GEoMF50B+B3/5mZmSRJkkySJEmSJEmSJEmSJEmSJJMkSZIkSZIkSZIk
SZIkSZIkSZJkkiRJkiRJkrTn3a3nw/38O6dz7/nv+v8pb/2XP3/+/G/gn/8/
/xDA32sQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwyx+F8A8BBBJEMCGEEkY4EUQSRTQx
xBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0N
NNJEMy38LfI22umgky666aGXPvoZYJAhhhlhlDHGmWCSKaaZYZY55llgkSWW
WWGVNdbZYJMtttlhlz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe
+eCTL7754Ze/zf8PAQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLnX+VPAIEEEUwI
oYQRTgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFFFMCaWUUU4F
lVRRTQ211FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0M
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0Pv/wd/P8QQCBBBBNCKGGEE0EkUUQTQyxxxJNAIkkk
k0IqaaSTQSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK220
00EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8AiSyyzwiprrLPBJlts
s8Mue+xzwCFHHHPCKWecc8ElV1xzwy133PPAI08888Irb7zzwSdffPPDL3/+
Tf4EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwy99H/z8EEEgQwYQQShjhRBBJFNHE
EEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU0
0EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsus
sMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+98
8MkX3/zwy59/lz8BBBJEMCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJF
Njnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJH
PwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLE
MSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsffPLFNz/88vfD/w8BBBJEMCGE
EkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVU
UkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPM
Msc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ88
8sQzL7zyxjsffPLFNz/88uc/5E8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFM
CqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFO
B5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHN
Drvssc8BhxxxzAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//F32
/UMAgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUU
UUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOM
Mc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHOBZdc
cc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//PlP+RNAIEEEE0IoYYQTQSRRRBND
LHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNA
I00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPC
Kmuss8EmW2yzwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J19888Mvfxf9/xBAIEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllk
k0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330
M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPCKmuss8EmW2yzwy577HPAIUcc
c8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPBJ19888Mvf/5L/gQQSBDBhBBK
GOFEEEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJ
FdXUUEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDL
HPMssMgSy6zwf3AuhOM=
        "], CompressedData["
1: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
rF2QTvck6lSG2gRrB4DAzAnF7d/uxP8BR+eDYw==
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAApUX8DPBIIUBegFqDD+gHP9njf3kP
tiJACy/MXTJT9T6GmIRtsIYkQKvTWvP2euA+D1nadC1OJkA2dVFdCobJPlHT
hZBiPChAIlrIcQEDsj5/AgC/hQkqQA+ARLIdB5s+ZuvPAWH9K0DvdWXWWJeC
Pijg8FcY6C1AHZTKbEf8aT7XieDAvbEvQE/ebrNfeFM+n/YSnw3RMEBQJ7Wg
ENQ6PskCHWezuDFADHEjSE/UIz7Q61E5tbMyQAFrnHVz9go+xVovFSWqM0BA
2WOY9LPyPTAkdPoLkDRATynej0Of3D13yuPpTok1QCQvP6HW/Vo+NMu64ghy
NkCndAfXGHhGvt9ROuUwVjdA6fyvML2SDj5nteTxtE04QNZ8bpBRR0I+ZXP2
B7A0OUB2VXlo2VtCvj8OMygHLzpAAG/mmOHE/z0HLxhSzCQ7QHUrrHjutuQ9
RapkhQgKPECqK78NN86lPWAC3MKgAj1Adiz35m+VeD3xtLoJsOo9QKhc2izz
GHM9b+1BWi3OPkARgtDo1VdsPcoC9LQGxT9AGoQg0s8gYD1OuYaMq1VAQK0m
XEqyNVA9pd+ow4HSQEBBuvxiH5E7PTezfn8TR0FA8RacF2k9Jz3AyShAXLlB
QLVEYtI1IhM9t07oBVM1QkAKzshiOlD8POmAW1AFqUJAhDZ6YPbq5TyJIeSf
ZSZDQNzNCpG+3848IAVB9HyhQ0AhByarzOO1PPKVUc1PFERA/+CwPYOeoDwy
lXer0JBEQFzsuBtQBoY8rUFRDg0FRUB8vLzkQmVfPB8x/3UAd0VAnsI2k0gc
UrwAj8LiofJFQJCPSTWDZ3W8HJo51P5lRkBiZkFpCe2jPKYTxsoJ40ZALB02
bXVq5Dwn0CbGy11HQLfkTuwOsg094zk7RknQR0DSPSuNZERevQ0SZct0TEhA
2OiksrBIej1yl0LVW8BIQIzaF+O0Kic+RYs15PA9SUCt+LS0swG+PQ/C/Pc8
uUlAwGj7IV/8iL0UpneQRCxKQKyg52VvJh0+iPgHLvqoSkCKI59OhMf8PTf4
S1BrHUtAgG1xvjmckj0PD6JQax1LQJD0np0SsPy+/ZJtFQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43325#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-0.00002735880284609034, 
                   0.00004559800474379713}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAApUX8DPBIIUBegFqDD+gHP9njf3kP
tiJACy/MXTJT9T6GmIRtsIYkQKvTWvP2euA+D1nadC1OJkA2dVFdCobJPlHT
hZBiPChAIlrIcQEDsj5/AgC/hQkqQA+ARLIdB5s+ZuvPAWH9K0DvdWXWWJeC
Pijg8FcY6C1AHZTKbEf8aT7XieDAvbEvQE/ebrNfeFM+n/YSnw3RMEBQJ7Wg
ENQ6PskCHWezuDFADHEjSE/UIz7Q61E5tbMyQAFrnHVz9go+xVovFSWqM0BA
2WOY9LPyPTAkdPoLkDRATynej0Of3D13yuPpTok1QCQvP6HW/Vo+NMu64ghy
NkCndAfXGHhGvt9ROuUwVjdA6fyvML2SDj5nteTxtE04QNZ8bpBRR0I+ZXP2
B7A0OUB2VXlo2VtCvj8OMygHLzpAAG/mmOHE/z0HLxhSzCQ7QHUrrHjutuQ9
RapkhQgKPECqK78NN86lPWAC3MKgAj1Adiz35m+VeD3xtLoJsOo9QKhc2izz
GHM9b+1BWi3OPkARgtDo1VdsPcoC9LQGxT9AGoQg0s8gYD1OuYaMq1VAQK0m
XEqyNVA9pd+ow4HSQEBBuvxiH5E7PTezfn8TR0FA8RacF2k9Jz3AyShAXLlB
QLVEYtI1IhM9t07oBVM1QkAKzshiOlD8POmAW1AFqUJAhDZ6YPbq5TyJIeSf
ZSZDQNzNCpG+3848IAVB9HyhQ0AhByarzOO1PPKVUc1PFERA/+CwPYOeoDwy
lXer0JBEQFzsuBtQBoY8rUFRDg0FRUB8vLzkQmVfPB8x/3UAd0VAnsI2k0gc
UrwAj8LiofJFQJCPSTWDZ3W8HJo51P5lRkBiZkFpCe2jPKYTxsoJ40ZALB02
bXVq5Dwn0CbGy11HQLfkTuwOsg094zk7RknQR0DSPSuNZERevQ0SZct0TEhA
2OiksrBIej1yl0LVW8BIQIzaF+O0Kic+RYs15PA9SUCt+LS0swG+PQ/C/Pc8
uUlAwGj7IV/8iL0UpneQRCxKQKyg52VvJh0+iPgHLvqoSkCKI59OhMf8PTf4
S1BrHUtAgG1xvjmckj0PD6JQax1LQJD0np0SsPy+/ZJtFQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43325#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-0.00002735880284609034, 
                   0.00004559800474379713}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.150469564915255`}}, {
       5, 7, 1, {1750}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
tNqe0ugQZeMNyn/PKWGC8qWgNnV/rqf8H7Rtyrc=
       "], {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2GEoMF50B+B3/5mZmSRJkkySJEmSJEmSJEmSJEmSJJMkSZIkSZIkSZIk
SZIkSZIkSZJkkiRJkiRJkrTn3a3nw/38O6dz7/nv+v8pb/2XP3/+/G/gn/8/
/xDA32sQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwyx+F8A8BBBJEMCGEEkY4EUQSRTQx
xBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0N
NNJEMy38LfI22umgky666aGXPvoZYJAhhhlhlDHGmWCSKaaZYZY55llgkSWW
WWGVNdbZYJMtttlhlz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe
+eCTL7754Ze/zf8PAQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLnX+VPAIEEEUwI
oYQRTgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFFFMCaWUUU4F
lVRRTQ211FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0M
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0Pv/wd/P8QQCBBBBNCKGGEE0EkUUQTQyxxxJNAIkkk
k0IqaaSTQSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK220
00EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8AiSyyzwiprrLPBJlts
s8Mue+xzwCFHHHPCKWecc8ElV1xzwy133PPAI08888Irb7zzwSdffPPDL3/+
Tf4EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwy99H/z8EEEgQwYQQShjhRBBJFNHE
EEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU0
0EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsus
sMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+98
8MkX3/zwy59/lz8BBBJEMCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJF
Njnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJH
PwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLE
MSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsffPLFNz/88vfD/w8BBBJEMCGE
EkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVU
UkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPM
Msc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ88
8sQzL7zyxjsffPLFNz/88uc/5E8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFM
CqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFO
B5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHN
Drvssc8BhxxxzAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//F32
/UMAgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUU
UUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOM
Mc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHOBZdc
cc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//PlP+RNAIEEEE0IoYYQTQSRRRBND
LHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNA
I00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPC
Kmuss8EmW2yzwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J19888Mvfxf9/xBAIEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllk
k0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330
M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPCKmuss8EmW2yzwy577HPAIUcc
c8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPBJ19888Mvf/5L/gQQSBDBhBBK
GOFEEEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJ
FdXUUEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDL
HPMssMgSy6zwf3AuhOM=
        "], CompressedData["
1:eJwsl3c4l98bx41IyBYhm4wyK8R5nsdIiLJXNmXLikRCQkhCskOUjKwScp7n
Y0TZs4xsQigzVPT7/vE7/72u+31f55z3fZ37vo6Aww3Da+RkZGSlR8n+v5gw
catHTdtaKVhonWE5HTkTpnlFjpn/P67KzjPioGDCMi8nuOlcTMGUd+c/xHAz
YavpHhf35VKwPQmJpqkzTBjne9q5j7wpmPw5X2e+y0yYsu0bzjLaFIzYMyt4
m8GEbdG7JLd2JWMHPpl3Hb8xYWUie8qkx8mYZdmC2ilZZizL3WPyiWkydufk
ujxrMDNGyXPLWp0nGav7EeqqRc+CZf3pm2AvTsK0DPq5eDJYMIs0qQxO5SRM
wb/f+IUwKxY8EDR6uucx9sktQueghBWTlU1DlK4/xq4MjZudl2HDxkMmS/nI
HmNaa6FB903YsYTSZdazfInYQdGLi3XuxzDXRxricU8TsMWRPM33fhyYHc3h
GwlHHmK1QoEOtl6cGLt7YlZSUhwm8elrmavVcWw7uVpqViYW028fHHqEcGEB
swuhmzMxWMGgjZKWPTeWy3bvlrtiNMb22dQr3ZsH88dMrn8tvY+RKVBZL3qe
wDwa/ox4gEgsf/bl3SBLXsyw49W7JwsR2MKMW5C/Ah/2+liFKsercIwlKyl7
k4IfI5F///rzbhg28+G8vZMjP9Z+qFe7aDAUo99ICtSf5MciRw5/pKUNwTjV
O6n+XRHARv7tRQfdCcJUbg7yOtcIYHLqn0QviwViXbTK1ddYBTGpYs5h0qGb
GM/YyBrJWRAT+ceu1HrUDxNbx/gk3whiNtQHHJuID5b3upvxwp4gRq38kb9d
7AbmCAyNzNSFMNB1Z43vrjsmWM+cmxwphH0k3dMgxF2w2Kzzns1QCOtKD+Ep
4buG8RZz/M74KYTpxXJ8ZrRwwA5kX1I2cAljhdHL/yRzbDF7m1rmWlQYO05N
9zFoxxLz5bziyWIrjH2ZV94PqDbFeNNNe1SDhLE/mnFSXR8NsRcSbGZns4Wx
rWa3e3U9Wpi6WaGLb7Uwpr/9ly28ShkjfTtxbBYKY1M+RXvpOQLYqtZYUScu
jJF0jb0O4Sykna9UdRV1wtjH5d34x69kSDdUo5RVyoWxkFfONz10lUm8w44i
NLnC2OcG88oqWzWSpeo7uqx4Yaw2uiVKL0mT5Lg+4eN9UxgrssndmNLVIcUM
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
1g==
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAASw3e9N4wCkAM8FN/uJ5mP0SWQmKF
aA1AXH2fJ/srTj9YeFmwV5MSQAkTh/uoTyM/Zw8v1UgwFkCcUVeQfBX8PugZ
sCKqGhpAWaqp/5LW0T4fPNOWw/IdQA4UmOiPqqc+GORJmFzEIECe8hYXreyB
Ptnjf3kPtiJACnEK9XcGWD6GmIRtsIYkQEm9OZXPlDI+D1nadC1OJkC2TL7P
v7kOPlHThZBiPChAdnapNwEP5z1/AgC/hQkqQBWsKZdpU8Q9ZuvPAWH9K0Bx
8ADDip+gPSjg8FcY6C1AGoK8Y2JHfT3XieDAvbEvQNHjZZYSTF49n/YSnw3R
MECwU/IvlxI+PckCHWezuDFA//Q39HD4IT3Q61E5tbMyQLahfMY8GQY9xVov
FSWqM0CmjiJjnO/vPDAkdPoLkDRA5aeAbBYw4Dx3yuPpTok1QNLyN7n6lNg8
NMu64ghyNkDEqnbgHeXhPN9ROuUwVjdAHDbU6Uct/zxnteTxtE04QEZORAj6
1D89ZXP2B7A0OUAwXCJ8XMWnPT8OMygHLzpAbJyd3obMZD7g+y8jfG06QAzw
U3+4nmY/TX/CNA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAoHGI4UkwQEAM8FN/uJ5mP065hoyr
VUBA+2ft635YUj+l36jDgdJAQP9E+emYESc/N7N+fxNHQUA+glBhB2oAP8DJ
KEBcuUFAi0y08gEw2D63TugFUzVCQFnJmgicBK8+6YBbUAWpQkDCIBX9QKOG
Pokh5J9lJkNApHQcXihkWz4gBUH0fKFDQJuMRJ1ScDA+8pVRzU8UREDkysmb
5l33PTKVd6vQkERA5c45YV1s8D2tQVEODQVFQD+Njv9pZw4+HzH/dQB3RUB+
HfvabBEBPgCPwuKh8kVAnIct+jy86T0cmjnU/mVGQI4jwGrhqtw9phPGygnj
RkAkCsUcC5GxPSfQJsbLXUdAxOQjEdTEsb3jOTtGSdBHQJCu7IGNwVM9DRJl
y3RMSEDqO4TnxvdqvXKXQtVbwEhAk2EOV+iHdL1FizXk8D1JQLNXEnqA+n69
D8L89zy5SUAU9sjY9bigvRSmd5BELEpA0IYKKC5h4L2I+Acu+qhKQJCi81jX
YVe+N/hLUGsdS0DOwn2PjEUPv8p4T1BrHUtA/MKXZd0kW79+VsMq
                    "]]},
                     Annotation[#, 
                    "Charting`Private`Tag$43382#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-0.0016567384794791687`, 
                   0.0027612307991358217`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAASw3e9N4wCkAM8FN/uJ5mP0SWQmKF
aA1AXH2fJ/srTj9YeFmwV5MSQAkTh/uoTyM/Zw8v1UgwFkCcUVeQfBX8PugZ
sCKqGhpAWaqp/5LW0T4fPNOWw/IdQA4UmOiPqqc+GORJmFzEIECe8hYXreyB
Ptnjf3kPtiJACnEK9XcGWD6GmIRtsIYkQEm9OZXPlDI+D1nadC1OJkC2TL7P
v7kOPlHThZBiPChAdnapNwEP5z1/AgC/hQkqQBWsKZdpU8Q9ZuvPAWH9K0Bx
8ADDip+gPSjg8FcY6C1AGoK8Y2JHfT3XieDAvbEvQNHjZZYSTF49n/YSnw3R
MECwU/IvlxI+PckCHWezuDFA//Q39HD4IT3Q61E5tbMyQLahfMY8GQY9xVov
FSWqM0CmjiJjnO/vPDAkdPoLkDRA5aeAbBYw4Dx3yuPpTok1QNLyN7n6lNg8
NMu64ghyNkDEqnbgHeXhPN9ROuUwVjdAHDbU6Uct/zxnteTxtE04QEZORAj6
1D89ZXP2B7A0OUAwXCJ8XMWnPT8OMygHLzpAbJyd3obMZD7g+y8jfG06QAzw
U3+4nmY/TX/CNA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAoHGI4UkwQEAM8FN/uJ5mP065hoyr
VUBA+2ft635YUj+l36jDgdJAQP9E+emYESc/N7N+fxNHQUA+glBhB2oAP8DJ
KEBcuUFAi0y08gEw2D63TugFUzVCQFnJmgicBK8+6YBbUAWpQkDCIBX9QKOG
Pokh5J9lJkNApHQcXihkWz4gBUH0fKFDQJuMRJ1ScDA+8pVRzU8UREDkysmb
5l33PTKVd6vQkERA5c45YV1s8D2tQVEODQVFQD+Njv9pZw4+HzH/dQB3RUB+
HfvabBEBPgCPwuKh8kVAnIct+jy86T0cmjnU/mVGQI4jwGrhqtw9phPGygnj
RkAkCsUcC5GxPSfQJsbLXUdAxOQjEdTEsb3jOTtGSdBHQJCu7IGNwVM9DRJl
y3RMSEDqO4TnxvdqvXKXQtVbwEhAk2EOV+iHdL1FizXk8D1JQLNXEnqA+n69
D8L89zy5SUAU9sjY9bigvRSmd5BELEpA0IYKKC5h4L2I+Acu+qhKQJCi81jX
YVe+N/hLUGsdS0DOwn2PjEUPv8p4T1BrHUtA/MKXZd0kW79+VsMq
                    "]]},
                     Annotation[#, 
                    "Charting`Private`Tag$43382#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-0.0016567384794791687`, 
                   0.0027612307991358217`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.150469564915255`}}, {
       5, 7, 1, {1750}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
tNqe0ugQZeMNyn/PKWGC8qWgNnV/rqf8H7Rtyrc=
       "], {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2GEoMF50B+B3/5mZmSRJkkySJEmSJEmSJEmSJEmSJJMkSZIkSZIkSZIk
SZIkSZIkSZJkkiRJkiRJkrTn3a3nw/38O6dz7/nv+v8pb/2XP3/+/G/gn/8/
/xDA32sQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwyx+F8A8BBBJEMCGEEkY4EUQSRTQx
xBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0N
NNJEMy38LfI22umgky666aGXPvoZYJAhhhlhlDHGmWCSKaaZYZY55llgkSWW
WWGVNdbZYJMtttlhlz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe
+eCTL7754Ze/zf8PAQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLnX+VPAIEEEUwI
oYQRTgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFFFMCaWUUU4F
lVRRTQ211FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0M
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0Pv/wd/P8QQCBBBBNCKGGEE0EkUUQTQyxxxJNAIkkk
k0IqaaSTQSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK220
00EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8AiSyyzwiprrLPBJlts
s8Mue+xzwCFHHHPCKWecc8ElV1xzwy133PPAI08888Irb7zzwSdffPPDL3/+
Tf4EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwy99H/z8EEEgQwYQQShjhRBBJFNHE
EEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU0
0EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsus
sMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+98
8MkX3/zwy59/lz8BBBJEMCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJF
Njnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJH
PwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLE
MSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsffPLFNz/88vfD/w8BBBJEMCGE
EkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVU
UkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPM
Msc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ88
8sQzL7zyxjsffPLFNz/88uc/5E8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFM
CqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFO
B5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHN
Drvssc8BhxxxzAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//F32
/UMAgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUU
UUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOM
Mc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHOBZdc
cc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//PlP+RNAIEEEE0IoYYQTQSRRRBND
LHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNA
I00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPC
Kmuss8EmW2yzwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J19888Mvfxf9/xBAIEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllk
k0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330
M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPCKmuss8EmW2yzwy577HPAIUcc
c8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPBJ19888Mvf/5L/gQQSBDBhBBK
GOFEEEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJ
FdXUUEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDL
HPMssMgSy6zwf3AuhOM=
        "], CompressedData["
1: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
3B1MlpZlS1RIl/A/CFlb1g==
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAvyK22QeoIkBOexh0NfR6Ptnjf3kP
tiJAYNGgN/ludz6GmIRtsIYkQHB9d6Ge0FA+D1nadC1OJkCgcsCBVE0pPlHT
hZBiPChAU/v60XSPAD5/AgC/hQkqQG29CfGZSdk9ZuvPAWH9K0AXxUPpzP+w
PSjg8FcY6C1AZtSi9wOqhj3XieDAvbEvQPJ8VuiUlWA9n/YSnw3RMECqapyP
XbE0PckCHWezuDFATLUsym26DD3Q61E5tbMyQCT8bevLieU8xVovFSWqM0Am
7Le5R+W8PDAkdPoLkDRA9/B4ON9clTx3yuPpTok1QIGPw3HSUWo8NMu64ghy
NkDOPo5jWhRDPN9ROuUwVjdA8GvtU3ntGzxnteTxtE04QHtHOE78tfE7ZXP2
B7A0OUAXTCxLRsnQOz8OMygHLzpAAHUwhC9KCTwHLxhSzCQ7QGcUnPJFPxs9
RapkhQgKPEA+b1qykr3tPWAC3MKgAj1AUHPayKPdxz3xtLoJsOo9QDTJGsDB
TqI9b+1BWi3OPkAtMvj9z4F8PcoC9LQGxT9AnqijeAzpUj1OuYaMq1VAQDMM
eR1x2is9pd+ow4HSQEDW5ZTVj50BPTezfn8TR0FAcTPLwpIP2TzAyShAXLlB
QKdE9lctZbI8t07oBVM1QkCnzsbqJGqHPOmAW1AFqUJAhgmWV7/oYDyJIeSf
ZSZDQK/BE/2+CjQ8IAVB9HyhQ0BH5jV/7ScHPPKVUc1PFERADNaP1EfTxTsy
lXer0JBEQMyeWgxfdc07rUFRDg0FRUC0gkM6+xXuOx8x/3UAd0VAGZb96kd0
4jsAj8LiofJFQFIbeOchJdQ7HJo51P5lRkBP3IJHNkLQO6YTxsoJ40ZAVNb8
JRN3xDsn0CbGy11HQERHl5y4fbK74zk7RknQR0A12jXlRMynuw0SZct0TEhA
wxEDLLNPsztyl0LVW8BIQPped6zsLq07RYs15PA9SUA1CIY4WIV/Ow/C/Pc8
uUlA46k22XiVZzsUpneQRCxKQMygWRxYh/Y7iPgHLvqoSkB0X8qjw7BQvDf4
S1BrHUtADEgcVRgGv7zkb0xQax1LQE57GHQ19Ho+3yhyEA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43439#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-4.3054183529341164`*^-16, 
                   1.0041125355533953`*^-7}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAvyK22QeoIkBOexh0NfR6Ptnjf3kP
tiJAYNGgN/ludz6GmIRtsIYkQHB9d6Ge0FA+D1nadC1OJkCgcsCBVE0pPlHT
hZBiPChAU/v60XSPAD5/AgC/hQkqQG29CfGZSdk9ZuvPAWH9K0AXxUPpzP+w
PSjg8FcY6C1AZtSi9wOqhj3XieDAvbEvQPJ8VuiUlWA9n/YSnw3RMECqapyP
XbE0PckCHWezuDFATLUsym26DD3Q61E5tbMyQCT8bevLieU8xVovFSWqM0Am
7Le5R+W8PDAkdPoLkDRA9/B4ON9clTx3yuPpTok1QIGPw3HSUWo8NMu64ghy
NkDOPo5jWhRDPN9ROuUwVjdA8GvtU3ntGzxnteTxtE04QHtHOE78tfE7ZXP2
B7A0OUAXTCxLRsnQOz8OMygHLzpAAHUwhC9KCTwHLxhSzCQ7QGcUnPJFPxs9
RapkhQgKPEA+b1qykr3tPWAC3MKgAj1AUHPayKPdxz3xtLoJsOo9QDTJGsDB
TqI9b+1BWi3OPkAtMvj9z4F8PcoC9LQGxT9AnqijeAzpUj1OuYaMq1VAQDMM
eR1x2is9pd+ow4HSQEDW5ZTVj50BPTezfn8TR0FAcTPLwpIP2TzAyShAXLlB
QKdE9lctZbI8t07oBVM1QkCnzsbqJGqHPOmAW1AFqUJAhgmWV7/oYDyJIeSf
ZSZDQK/BE/2+CjQ8IAVB9HyhQ0BH5jV/7ScHPPKVUc1PFERADNaP1EfTxTsy
lXer0JBEQMyeWgxfdc07rUFRDg0FRUC0gkM6+xXuOx8x/3UAd0VAGZb96kd0
4jsAj8LiofJFQFIbeOchJdQ7HJo51P5lRkBP3IJHNkLQO6YTxsoJ40ZAVNb8
JRN3xDsn0CbGy11HQERHl5y4fbK74zk7RknQR0A12jXlRMynuw0SZct0TEhA
wxEDLLNPsztyl0LVW8BIQPped6zsLq07RYs15PA9SUA1CIY4WIV/Ow/C/Pc8
uUlA46k22XiVZzsUpneQRCxKQMygWRxYh/Y7iPgHLvqoSkB0X8qjw7BQvDf4
S1BrHUtADEgcVRgGv7zkb0xQax1LQE57GHQ19Ho+3yhyEA==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43439#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-4.3054183529341164`*^-16, 
                   1.0041125355533953`*^-7}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.150469564915255`}}, {
       5, 7, 1, {1750}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
tNqe0ugQZeMNyn/PKWGC8qWgNnV/rqf8H7Rtyrc=
       "], {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2GEoMF50B+B3/5mZmSRJkkySJEmSJEmSJEmSJEmSJJMkSZIkSZIkSZIk
SZIkSZIkSZJkkiRJkiRJkrTn3a3nw/38O6dz7/nv+v8pb/2XP3/+/G/gn/8/
/xDA32sQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwyx+F8A8BBBJEMCGEEkY4EUQSRTQx
xBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0N
NNJEMy38LfI22umgky666aGXPvoZYJAhhhlhlDHGmWCSKaaZYZY55llgkSWW
WWGVNdbZYJMtttlhlz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe
+eCTL7754Ze/zf8PAQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLnX+VPAIEEEUwI
oYQRTgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFFFMCaWUUU4F
lVRRTQ211FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0M
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0Pv/wd/P8QQCBBBBNCKGGEE0EkUUQTQyxxxJNAIkkk
k0IqaaSTQSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK220
00EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8AiSyyzwiprrLPBJlts
s8Mue+xzwCFHHHPCKWecc8ElV1xzwy133PPAI08888Irb7zzwSdffPPDL3/+
Tf4EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwy99H/z8EEEgQwYQQShjhRBBJFNHE
EEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU0
0EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsus
sMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+98
8MkX3/zwy59/lz8BBBJEMCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJF
Njnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJH
PwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLE
MSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsffPLFNz/88vfD/w8BBBJEMCGE
EkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVU
UkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPM
Msc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ88
8sQzL7zyxjsffPLFNz/88uc/5E8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFM
CqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFO
B5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHN
Drvssc8BhxxxzAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//F32
/UMAgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUU
UUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOM
Mc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHOBZdc
cc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//PlP+RNAIEEEE0IoYYQTQSRRRBND
LHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNA
I00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPC
Kmuss8EmW2yzwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J19888Mvfxf9/xBAIEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllk
k0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330
M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPCKmuss8EmW2yzwy577HPAIUcc
c8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPBJ19888Mvf/5L/gQQSBDBhBBK
GOFEEEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJ
FdXUUEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDL
HPMssMgSy6zwf3AuhOM=
        "], CompressedData["
1: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
huhQJKFumkxxPgIO+JNIlbKPIb5wXqDmg2j4ohNd7fBzNaR2oKq4YiYOthOr
iS4h00IC4vFZO68XsIb2ei27vg6yncH28PdGIkzhnj3qcOk2opdrntI2mgJf
QWh7zLMMEJOaWLIerddw5n+1x4ZrdxDLE/vYr1cy4ZqansMZfktkM3vpvVXF
G9jgHaw2G2SN/NyzV/3NnAv7X5LPC160Q7pI1QXm5vLhYENqhYu0Toj4XnyD
skIxHJsiRS/C5oZUp/rVWkuXwRHm8+b3tTwRrkDm8J7jClivJvjLur4vUtg3
hvzUrIKf/97paLR+hNRSRm8VEtXAVcyzBYoST5HdvZVYA4U6WGtVQFAfBCN6
MYJXlOka4Q+Hql107GHIF3rNfk7DZniqVO/df1vPkY8FNr+I41rgSkY+l3zb
OKS3uvI3q0QbvCQwfaBv+QKJkJBf7bnWAedZhsT30icjjOvjqR4nXfAb2bKr
PwtTkavJdeOq9X3wysMXNOQNmUj7ZjEZ++wAfIr6k5bkZiNfy46l2x2GYU2R
Zg61q/nI4JF7G5XjGEzmnivemV2M3Fr7I3H5dBLWrEmedHhZjng9arhQJzID
B+YI3W2ir0L4XMkU3FTm4INvysqEmBrkCnto5mTpAjxxo840erQesSnqffY7
8SdcrVFTlJzQhFw4fZvCR7cGv0xmljCda0H0OXeS7qlswe94TwqP6dsR+byX
esWZ27DQdfHOINCF7Pvai/Wf7MK6dqi68rs+5JSTYLDV/RvejSkVP5kdRMK3
D0MCL/2Fk6TXRVInR5GWf18X7105gasnTljTfkwhMSSyf8toiZGaDms9yb0Z
ZFOfscjLkAT57iNr8IF6AdGoLjDMoidHemJjXm9P/UQGBXsShm9SIUVprqlt
b9YRprdtXsNKZ5G5L+2pqnrbSMUkP2dqAAPCS670mebOHiKq4cDVXcOE7LdY
i1vQHyBk4kDzrzELYqHIoMSbd4RYCJZrbAawI9t+hO+fpIjR+0PmTUZa5xF6
kXxCcg8p+oF5ht1hmwcZvP9s/pcrJXpDtCOTnocfKRSg+iG+QIsuNZPrcpYI
ICaUvjfSZBlR8yV698FaYUSa61XOcs45tHLX7NyMrRjy64mAGN0xO3rg8OWw
dVMCMZeZMvM0voC+6zyaexkljagpfS1LNeZDif3nuK6RySGjIuM3xQsFUNhb
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
        "]}, {
       Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA8+lCZ4KoIkB2Etz26tLmPtnjf3kP
tiJA8EQhaS794z6GmIRtsIYkQN8NI7t73rs+D1nadC1OJkCHCbdNlEmTPlHT
hZBiPChACmOU0eBXZT5/AgC/hQkqQFl5bA6MoDo+ZuvPAWH9K0D6SzPaDT8K
Pijg8FcY6C1ANMcdE2fk1T3XieDAvbEvQHKC4Cs96pE9n/YSnw3RMECNG8g0
+MB9vckCHWezuDFAkMyjTag/Pr3Q61E5tbMyQLx/H5QKmFk9xVovFSWqM0Be
3JBGjrhBPTAkdPoLkDRAwAddw8J3h713yuPpTok1QDYIsE205Vm+NMu64ghy
NkBe89ApC4tIPt9ROuUwVjdA+gvZHb90Ib5nteTxtE04QMSiEetDjUG+ZXP2
B7A0OUD1P2jBhelCPj8OMygHLzpAXCUuazB7+r0HLxhSzCQ7QASKuM5YAJ+9
RapkhQgKPEAwMjCH4rIHPmAC3MKgAj1AHc/lvNLSBj7xtLoJsOo9QAVKnccD
ru49b+1BWi3OPkDh/I9VKtTQPcoC9LQGxT9AxKDnOa1grT1OuYaMq1VAQFM1
HDVZhIo9pd+ow4HSQEBL4a7pMApkPTezfn8TR0FAvBvlQWBDQD3AyShAXLlB
QKjNXaHrWRo9t07oBVM1QkAUk9QUefzxPOmAW1AFqUJAT8qOvFWoyjyJIeSf
ZSZDQDPyzDS8VZ88IAVB9HyhQ0DtgSCAMYFwPPKVUc1PFERAINYIAbK7ALwy
lXer0JBEQKf8yy9ZiE88rUFRDg0FRUD+kj6OJdpwPB8x/3UAd0VA1Pn2fdri
cTwAj8LiofJFQIfIoJi6uoA8HJo51P5lRkAyrw0+qX6qvKYTxsoJ40ZAC/eC
KCDD6Lwn0CbGy11HQMaWT+Le7BC94zk7RknQR0BpBMWtfKxgPQ0SZct0TEhA
QNFbGO3be71yl0LVW8BIQCJD/3dRTyi+RYs15PA9SUDCIBtXRtDDvQ/C/Pc8
uUlAAE6l8M3eVL0UpneQRCxKQDQzfs3wMhy+iPgHLvqoSkA1PnUZJJHkvTf4
S1BrHUtAEouiRo4AsL38nhcbACBLQHYS3Pbq0uY+fT52fQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43496#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-2.4118723778589218`*^-8, 
                   0.000010883282552062402`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAA8+lCZ4KoIkB2Etz26tLmPtnjf3kP
tiJA8EQhaS794z6GmIRtsIYkQN8NI7t73rs+D1nadC1OJkCHCbdNlEmTPlHT
hZBiPChACmOU0eBXZT5/AgC/hQkqQFl5bA6MoDo+ZuvPAWH9K0D6SzPaDT8K
Pijg8FcY6C1ANMcdE2fk1T3XieDAvbEvQHKC4Cs96pE9n/YSnw3RMECNG8g0
+MB9vckCHWezuDFAkMyjTag/Pr3Q61E5tbMyQLx/H5QKmFk9xVovFSWqM0Be
3JBGjrhBPTAkdPoLkDRAwAddw8J3h713yuPpTok1QDYIsE205Vm+NMu64ghy
NkBe89ApC4tIPt9ROuUwVjdA+gvZHb90Ib5nteTxtE04QMSiEetDjUG+ZXP2
B7A0OUD1P2jBhelCPj8OMygHLzpAXCUuazB7+r0HLxhSzCQ7QASKuM5YAJ+9
RapkhQgKPEAwMjCH4rIHPmAC3MKgAj1AHc/lvNLSBj7xtLoJsOo9QAVKnccD
ru49b+1BWi3OPkDh/I9VKtTQPcoC9LQGxT9AxKDnOa1grT1OuYaMq1VAQFM1
HDVZhIo9pd+ow4HSQEBL4a7pMApkPTezfn8TR0FAvBvlQWBDQD3AyShAXLlB
QKjNXaHrWRo9t07oBVM1QkAUk9QUefzxPOmAW1AFqUJAT8qOvFWoyjyJIeSf
ZSZDQDPyzDS8VZ88IAVB9HyhQ0DtgSCAMYFwPPKVUc1PFERAINYIAbK7ALwy
lXer0JBEQKf8yy9ZiE88rUFRDg0FRUD+kj6OJdpwPB8x/3UAd0VA1Pn2fdri
cTwAj8LiofJFQIfIoJi6uoA8HJo51P5lRkAyrw0+qX6qvKYTxsoJ40ZAC/eC
KCDD6Lwn0CbGy11HQMaWT+Le7BC94zk7RknQR0BpBMWtfKxgPQ0SZct0TEhA
QNFbGO3be71yl0LVW8BIQCJD/3dRTyi+RYs15PA9SUDCIBtXRtDDvQ/C/Pc8
uUlAAE6l8M3eVL0UpneQRCxKQDQzfs3wMhy+iPgHLvqoSkA1PnUZJJHkvTf4
S1BrHUtAEouiRo4AsL38nhcbACBLQHYS3Pbq0uY+fT52fQ==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43496#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 
                   55.150469564915255`}, {-2.4118723778589218`*^-8, 
                   0.000010883282552062402`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.150469564915255`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 55.150469564915255`}}, {
       5, 7, 1, {1750}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1:eJw91wc0le8fAHB7hZCRkZVQJNvlvTxfK65rJRFZyWrIiAolhDJLKlqKSBkV
EokoNKgQQv1QGtIQQmX1f8c5f+c4n/Pee5/n+a73vSj4hjj5s7GwsLDiv6+5
WP7/4/hNlS3Vv8SEss5kjP0/2UvNMyaZ9W0vQyc4kOoBFcEV/wTR0GIai+A7
WSQqz2bMkFdBhqYPotI6NdAGLeO3AaCDnJ3+StyYMEL199xLIh1NkUNb7dOz
qpZo5I34aA0LA0V8i+Ac6LdFAfO9EypvnJBw/KTXBytXVM8l8CKvehvS3Xh6
VbmwD+LjLehJtfZF79pvpQUd8UOXFfPKrZICkXdUeody2i4k2xk9yZkVjEKy
76SEM0NRx4NSKd+XYWjD14LSTZv2oUyx83TTngjksv7X+LGf+5GspW3+S74o
9MmjaLOYcgwqj1ji9DA9jCLSXWsLPI4gWaet1dP34xDbUKJg7rN4ZPvaslhL
4Cg6+5IL2h0T0fDjJ/1+p5PQ2sbjYUt9yWhfDYMvV/o4arjFd1XLOwVxX2/H
2gtSkeOV9B6/z2ko4svX54UGmcg2t9A33OIk8qrv9hIJzkKc0dwp4d6nUJkB
VvVqUzbaPLN3UNviNJqrLODO1j+DCkJfa/1SPYsYGnwem6Vz0MQ34+QqgVyU
cyPs9gqWc8gksOjNvqlz6NsLtoTz3BdQrq7P2ocyF5HFhYbOUa1LaJJV+qCg
VR7KCzoop+dxGRWN7vpQTruCFs5LGpg2X0FO9k9Te+zy0XXWA0OB/fko5phD
B+/lAmQnoNpU6n8VyWezVNipF6JfKwfyf04Vota8ilNZ94pQrlLqUZ24a2hX
iW9E78ZiZKyJ+R8QuI7sJ0okD4jcQD63pV7ulyhBYaGpCftlSlGC5pz+foUy
dHpi57dI5XJUdHvgcqTaTXQ3lOEcqXkL+eV6JNZJ3UYl9w5d2VZ0G028uVi/
sKEC6S/U91+qq0CHVw1Om1hWomaTRaF3HZWI12fV+nj3KuQYb8xQ/FSFzhZ4
+jeH3EGlEzXMPtFq9NBERPvbvWr0On3Pyn9ed9H3N4+XRDhqEOtahU/KN2qQ
+IGYdiP7WqTe2lth/6sW6af4by4ouIdM7WamZzbVIaZw0lkG633k0itKu3T7
PvI5Vzgw4V2Pdnvqxlgsb0D7FVpkch80ICjnnX2V/wDxGTp0CCQ1ol2+Ns5K
uk3IQfVH08OiJqQ7fmK9t8RDJHlH+/zC8YfozVSGAw/bI3RBa4xDNOYR8gy1
qJObfoRkb10OUQtuRsM/5pQMPjejK+oub8y8WxCf5VJ0MncrivC8Jt12qxUN
RdrXC2x9jKwzZz02sTxBldfyFk9ff4JkGjfm9Ts+RZaLna419s/QXmyb8Fnb
NpQT9aktwqYdNdWEJG62fo7GZv4aa298gUR0E38LWbxEuqu2FnyO60Bq7GeV
h7w6kbLC9LGZ/zqRPHIa49/WhaQ9b9soDXQh8RjBMsz1FRI+t0dgc+8rtKym
be+uzd2Iq1e1M76rG13LlZqYYO9BVh78Qj76PWhUbmlDR1APOvbhp4PJhR6k
Wvw+pPxFD3q6q/uEDEsv4lVakeZu3otsBp2Sc5N7UdrZU/Gvn/WidodXh0QF
XiN+XpGDTo6vUcueg7UyZ1+jQ51Dfz6/fY10dS0NKxT60Pec0qiYwD5UOC9c
Z1neh7olquZd1PsRq66zcVBpP9J0nImNWjeAvPecbUq9MYAyjhuwXVR9g+oL
+83Li98gWtGz6B63t6i6qK5iftl/SOta6RfFB/+hm9cuytmEDiK14gyXMMUh
VFwcm5HbM4SUroe0NCYPI+m91xPNvg8j3vOhBSOq7xDnYjpb4bZ3iNXnhq9/
5ju0+Kj1kfLDd+jPmhHFL7/eIfWf97p9V7xHPrVZiYPa71F2/E69rU7v0RMb
08+vwt6juRWSOXZZ71GNRH/hjUfv0T7pnErO6fdog5xL0/Y1I+ibotjLBpcR
VKzc81by+AhyFnwSOT81glhn7y0f9PyAbg6W3Xjw9APa1nrZ/IrOR8RTfmow
Pu8juns66cAO3k/oo7iMRlXRJyRyrvIjm9lnBNKMC05Dn9HeS8ObCqJH0UW5
/TxT4l9QWz5/o2nVF/Rn9dXILIcxtG1H4YmPe8ZQQ0HRDYPUMSQ3cq05tXgM
JShcHxxsGUMffW781hwZQ1ZXSoQT/42hKOeFkeM6X1Epj/2djMCvaLD+ctKp
C1+RUNikS07HV2S2xlz1Ivs3tE1mZVy01TcUseJH39a0byiD79EGg45v6Bpr
zjGxFd/R26b48v3F35FQ3J7uPuwHskSuf2mdP1D0kqnceb9xdKtB3XL+zzi6
Itqy0/PlT/S0ev2T4U0T6K3fs/Rz1yfQ+Ap/p83/JhBrM8tKAZdJJBp+cfBx
2SRSUaBdjWOfQkad3UFG7lPI/kiIxvTtKbRdY9l0OfcvFDF47V6g1y/kcmFt
fuLLX4jmVnY832QaSUlsCH1wcxot9lS4vpWdQcOndNGfzBn00LFGWezfDLoq
aCSoHTKLkp/Xz9gPz6KgVDS42+E3srF+1HK88TdS57IsK9rwBwm2PMl+dPkP
8vnWu3rg7x9UIfKx6ufmv4jNaMqc6+ZftHk7S48MzxwqPC7op+M7h2ZvyUwz
6ueQVd+6RB/xeZS7RBM9EDqPxtZYFWa0zSMjuy26hUoLKD1iR0td7AIavBDm
3NW/gDSaj3wc1V5ER75mRCylL6JO4YscYqOL6DjtlUeoyxJC3jzV7a1LaDbJ
REBF7x8qL4vwTyj8hyp39g6N87KA4OGJ1IumLLDr5DIDmygWaL2q/OH3bRZQ
qDE9UfSFBYbdh5ID9Vnh0lJ07NpEVthWILH/WxcrSG68E1wuxwZ9Y47+IcFs
cCbjh4fWfTZw0kp1/sXDDkK9yrbVLuzw8mCz+YFCdkiX8cEMp9jBpmlBex5x
AI/fuXUNGRwgE/CD/e4YB2gGmQ7etOQEi11n7hbnc8LWPWMnrixywp69xjvP
uXFBXGiW2alqLpCrCHbrleaGB5OM0JUJ3OCprXxs2xduWAhny8uz54ELVUN3
3t/hAaPpunYlaV4YCSr0y8vlhbTBjEUJcT7QdTpwNiubDwYf+2xYJrwMkjCb
p4mZy0Djts72pWX80Ke0au5ACj8cOceVPcklAKqCE2q7EwWgK2Gg5SOrIET/
fuTpdUQQFPeUzfYtCEL7uzMnNkUvh4gtR1Tbfy8HQf87PgVGQrBDbu167ygh
qBm49Fe6VgiWnRZ53D8rBD72x06d0ROGOzwLXk4RwsDbHKq2vEoYPA9/+t0+
KQwVBu4txzVFgGvq5UnLEBFwLzP3ZLspAjcDatc2fhcBdoX1szFqK8D1bf4j
2q4VUHpG/MTM9RXA4pi2rXJ0BTjzsaiGKIvCjZaIaTV/UViMHWv6clUUyudq
OdzHRMFz/3Hrdg0xEJhyTadHiEFDsEpn+T0xCB6bXSH3TwxW+T92PWkhDpJP
eRO0s8RBXM2urGdQHEQyT77ev04CBCe7WSQPSMAyZwm1+80SwF3jvsVTaCUE
1emwVvqvhKcN/OVc91fC2oeftm4TkoTUlgcct/0l4euTnNsc9yWB2R7q4SYk
BZesPg2Kh0nBeLObd0+XFAC8fJelLQ1Z9Wa+DtnS8IFW84F/Whp0q9X825xl
QLFMv9asRQaWXzVddl9nFSycs/XSuboKxk66VpSKyMLrY74cSgmy0Bwb7Hpx
Uhbiw1JE4/fLAfIr6vKfl4MjpT5Wa0AehgrHi3IS5ME47xAHX6s8XMzh23GI
WwE2jcxodW9VAO7171nWlShAw4HnHXHzChD+qCavz1YRVAWuBmvkKcKQayY9
6aci9FSKi7W6rYZnApd/cLSshsYglccWGkpQ3XwrLzFXCUplaQda2NZAflST
A0fwGljMN7qY/nMNuLXd+SIargx3pzT0Lk0rg4j0jfg1B1Rgr/nql+V/VaB9
9yUp/UOqoHJaIvDBkiok1mdVbYxfC+8+LmPpYF8HdIFkW9fkdXBOj+XcMI8a
zHhGfwpMU4NNydNaEwLq4CbfHrYzSh186vIrRj6qQ5DzwcltjushdNxeq/f+
ejhwfE2YvYoGHFFcuP3klAYk17+agCUNyHS5oVm3cwOcnTgSqtO7ARws1ba6
yGuC0ynxPyIumuAyzJrbkaYJ7uo/DNIfaoJXVH+f9W9N8H3cfIBzvRb4r7gl
8chXC3b6nK+JzdWC4PIkV+ylFoTNhf7+za4N4/x71WM1tWG33O7tHJ7a8EUr
6Gxqijb4W/i3C93VhhEXX5acEW3w3umtt2q5DgzGeOy6iumAe6bb5bVBOtB3
xaXn1mkdcK7azKv/UAe6Wh1N6n/ogH2/3T4zKV1o/2pz/elGXbBetBq036cL
j5dbivRe1gVzRTOrbc91oUkXHXr/RxeMregVgWv0oM7N8POPTXpgsEdfOiJW
D/antkaNX9GDvNH1/e339aDV4qz+jdd68D1/6XTypB6s+Bfwawe/PmAeHZtM
VfTB957BbVkzfYgwGOfw99WHpOpCt9IEfcjR2XZzskAfUDFvGlu9PoxK1Qau
6NWHE5kBFkrj+mDAJqagx20AQ5HNi5byBpA8FvbGxdAANDzlawKdDOB158vs
g7sNINbicGhKogEo16rZnb9kAC/V3qwtvWsA+y8f56rvMIBVKww+PP9iAK3J
nxoHWWnAL941PIp7Xve63AKu6uYj3kJsNKhI/Dz4Bhe7a+dRxE6D1tE7b0I4
aLCmr75tKz8Nkh631JmK0uBz9fOSdTI02FjUc36FEg088t+/4VChQfilcanZ
tTQ4fm7efVSdBn7um1zadWlgKl286RadBrL/LdhmW9Bg7qKT9QFbGoQu+YRv
ccD38w65qOOE7/Pw8GPhLTRwKQm7NrSNBo7Z/smlvjSwOeQWcHAnDcz97TZa
htLgRPT23vfhNHhzItIvNpIGykUpv6QO0uBC31JJZCwNlvNF+HYm0iCRPiap
lkaDv3u9upKyaLBUraUym00DjkWOwwFnacBn0f/qdS4N0o/NLSbn4evaZdYa
FNLglCByHr1BA1Gn7UdybtHA7f75a28raHBJqeeF3B0ajGQIzOy4S4PG8Wru
7jr8dQcvKbNGGsTc5lpf0Yx/XvgWkn9Kg8Vd2RXObTQoaDmwOuU5Xi9ZjzMN
L2mw4/LPee1eGhyRP+p7/S0ed774s1UjNKhVLNmQ/YUGkymW6ve+0mDd5DvV
4e808N16aA3nTxrk5/I8OjtFg+H+016qs3g9JRXm7/3F6/VshEWPzRAyowq5
bvMZwsVPok9f8htCyaaklB+ChlDbMGPDL2wIT9YG8KutMIThO7b3V4kZwm+k
s0tIwhDPW1KSXdIQovcWdQXLGcInYa3U/jWG4Fhdb2aubgh1W63ny7UNQfFF
yb5HmCGkmgp8f21hCJPVIX7f7AzBbd2r//65GMK/pg13x/0ModA148RguCHY
jH8Neh5nCD8Trc3uZxrCGelr0iUXDeEg3+ajk5WGsO3vv6+0Z4Zg8qXMKW7Y
EBT63OqezBgCx2MuxeX8RrDrzM/ty9YZQYdffz63tRHo6T58zx5gBDpykte4
o43g787OEKFUIzA67vqw66wRRF8bEsm+agRajtXdMeVG8OVv2mm/Gvz1Uk+m
bKMRLPPcwNb/2AguCrLey3ppBA/abhod7TGCd8ke9RFvjIDNnM8k4J0RJBh9
lV3zyQjYtdv+fRgzgsS1Je8Kxo2AUyH14fZfRjAiEh4n+9sIGjnc0ds5I7g0
a7qUs4Sf82VtgzMbBiyzf5KDOTFIZn/qmMyDwTLhHKnLyzDIkg34WCOIgYS6
3s1OYQyO26Nqb1EM5kIZ9ePiGOzJ3tx8WBKDoWrPNn4ZDBz7A7suyGLwcC6s
f50CBrIjWq62qzGIeTbZG7wGg4HbFc4nVDDQzw3rvr0Wg+wjWk6v1DCYCJjs
/LUeAzv7CgcxTQxK9MJe6mtj8IMDfH/pYKDZIzh7Sw+DiKuDKXsMMKgJL1u1
1hCPwzSm4pMRBsbCNpYFdAzi3q0c8DLBoPnW6B5pwIDryF2WflMMbOyTTp82
xyCn8agmlyUGnzQTnh/YiIF2QVzQmBW+bsURjm0MDF4kHr7y3AYD6dkYuokt
BjsDo/tv2WFwt/9ghIIDBhw2B4SyHTHYdD+yjMMJg8vqEdb7N2Pw/VL4x1Fn
DIyWh8W5ueB1iguRaXfFoHcyuJbuhsHqHXucb7pjENqza0LOA4MHljvTszzx
eAQsf3p64+e2qw898MH3TxV9IeeL72O9cD9uBwZ/TE7+yPPDz9dTkmvwxyBS
vdbxbQAGOqttE/4GYjAp+a5KYicGt4QiPuntwmAvN4+E824M1JcuWIfvweBp
T32sdzAGO0oH79juxeBf/NJXwxAMLmyVU1AJxcBgA7iKhmHQzbk9gzUcX/9f
fPM4Ll9Vwd+3+zC4ltK84VkEBmY+H/3vRmIwqM958ep+DKIElF+dPICB2MeN
PLEHMaioCzTZHYX3L+t4xNZoDNoGhJS9YzCwUjzX538Ig5ZdCil7DmNgWnXD
aF8snv+81veoIxhgFnWX4uIwqE03czgWj4FebxtLZgIGKuOtooFHMZDkfoj/
kYDHI19Pl0zCYIFW4ziFO76p0q89GYPhXeUHC49h0HX0evrh43jfL1694pKC
wZ3qvDsbUvH4X557ypOGQe7o6f/e46aynJyoS8fnUTKN43QGBsHaySuDMzHw
ZsarbzyBwdpzySOGJzH49Tktd30WBg26WfYKp/D7IuEsh1g2Pt+dF+p4TmMg
JZsfuoD7cfc15YkzGNy8V/rfh7MYHOSuONWXg9dry13r9lwM+K/eX3pwDoPX
E013Ks9jcMXk8a5rFzDYld4uf/4iBrpvOl9nXMJgSeV1enwe3q/It2aRlzE4
1fzuT9AVDDyEP9/0yMdA2fubn2MBfp+UTUhZXMWgbm6m06AQg0Tr+WS1Inxe
P64atbyGQeURsPIpxoAhvaM4+joG7+4mcZ+5gcfldD3wVgkGy8fbnjwrxfO9
MLI0UYbPjfWc3sqb+PkzwsHoFgb2V9cWBtzGIM/R9G1GBV7nxa0i1ZX45zXD
/jDuYNDhmzI0VI0BnMlv2VeDwe0n90p47mEgP9d18lId/rxQ/7pfux4DVm82
zycNeB3OrLFJbcTgaLu1gd1DfA5Y9ygJNeNzTjsh3N2CgeXeyqUzj/H6FvZ+
2/oUgydv/vRLt2GQUFZr9vc5BtuVov0WX2KALmLJrF3480R0sZizG4PFtAfP
eHsxeMse902gD69HjKmAyAAGTKkrvWpvMfivdumS5SDeX1fPAO9hIr/7GlHv
MThxWur3qQ94vDpRjWWf8Lnt6jv2eBSfl6Rxg4yv+HPFkPPL5h8Y3PshnSs1
gUF9vrb1+yl8Xrcw/hTP4M81Xp/re//geTTs36o3j8HjsAyehUUMHLqqLhSz
0mFA843GZk46+J5kebTEQ4dvP5W3lPDTIcLB7ssWITos3twXwypKh2TB84Ll
EnRYvrcpf6s0HeyFM97+kKND+h03saNKdGhzVXZYuZYOPPNTx8vX08Eqr/GR
mTYdkkzTF/r06dD8cat+MEYH1uNrQtmADuJK7o95N9JBvSlTRtiWDqYezeEr
nejg8uf3U7mtdNh9Wl1OxYsOcZrbIzX86HD2+Zl2vV10KA1qUzAOpUNZvSJ/
wkE6lAvFzD6Oo8NNv+53y1LocKtWrd0xC5c/sfrMOTrc9vnv8pt8OlTc0U2V
K6FDJU9GhF8lHdY8OHHY/AEdcvedSlZso8OytWdOsL6mQ+xQTu6793SYzD6f
3/iDDn6MSyV5f+nQt3S56jCnMdjcKaj3EDaG9uoVP5irjcG2JnEVpmcML2pn
7NZZGYN9XUCspJsxdN7vu8mz2xg2NVgP/z5kDK8e3Fs+mmkMm5vWwesrxnDi
yfPzaffwfV7unYFXxsD9Wshx9qsxmA9WlpSym8CRj86c22VM4P63WW9xPRP4
PZVb125nAjpzRmLxASawJw1xRMebQKGMxa/wiyYwWG49srvGBMSQXZffKxOw
79zU5PnDBJK3u9xy4UHQOOWe57Aawe+j3hnWJgg6+V3ikBuC62ds9+lHIIiX
NQ9YfwKBW7Ghm1IJAm1NTVvpVgR895SRyDsEH0xXafPOI/D6lCLCsgygr2Gr
5zz+b+KmsyrXZ9cBtO2dnZo0AjC3ajX+YQPQIHf6+Bd3AP0/vt0fdgHc7tSS
HY4GSJRbOVOXBuC2d6n97EUAjYaPBeHlAGz87VH2D/B93Ssc13UAlN7IUeF6
BxD35/DS+wkA3mLJf9NcppC9pfof9ypTkOHYxCKtYwpFld9ZNBimsGH7cVZT
b1OoXa7E5hxpCtu3eaX3Zpri63LFXa+bQuXUqyv9D01hm4mAmvtbU/x7y6r6
7bQppC6Iz21eYQbCIZ9NnmuZQe776qMWjmYg65z0tH6vGRQ9dhbQyzCDiGkO
vd4qM7BQrPaIfGMGKxz9E8VYzWHksFhZtYo5VJS2dm+xN4e4gcj5mQhz0D8Q
VRlZaA4/RA/vnOk2h6uVcfKR7Bbg5pjYN61tgT/XjmVG+FpAa1qa5XSWBRxa
e2Jh30ML0H5yqurXhAXsE5l7y73SEqo9t3PIIEuYvf5UXTPAEmjTG7ZYZFhC
FMo5vPWOJdxPXSra89YSFnv9X8axbQQThRezp9duhLg9unI3HDfCw5oLVg0H
NgI7O3toV95GsLDflfupdSMkn+tq+vt9I7i9THpqJmAF6uxGnWnrreCfwXhf
j50VvNpTMLxqrxUU5buMBmRawcHXfD9v3bSCR5+yH890W4HAjEwe9tcKXDmu
RcbLWkPBig12T8yt4btirZLATmsw0DZdcMq0hgTTtu7cKmtwTipjfK23BpVn
mY3YY2uY4w/Ty+iwhueOm0uH+q2hdPXoZ9831pA2G604+tYadj0T9No9aA2M
iwXnfg5Zg2qIfu++d9bAY9Ym9Oe9NYyKetke+mANAUkeBemfrOHTjPufi6PW
4BfgZl8+Zg0fXrsWNnyzBl8rl7kXP6zhfY2z49BPPA6L/i/BU9bwtHNb/OK0
NWCew5IZv63h1phvpcycNSju/2xTtmANsgciW27+swapgxwmFWwMEIvKrqni
ZIBwtKLWXR4GONOHlrYLMSB36dxzgZUMeNu05fw9OQbIHRUO8ldhwLbzzSeq
tPH3KyJrWE0Y0PtUZdiBwYBCe9Gdq20ZsK+H5desPQPM3X8catvEAJF3A1x5
zgx47//4ZJgrA9Jnxtc0uzHAIEnivqgHAz6IgmOAFwMyC4M+1fgwQHY1/ajY
DgbczF+usM+fASbyHx50BjLgZd5dD41dDPARWHh2KYwBkzGmBgJRDDj6Nbnw
UByeh9tz4e/HGPA6gb9ubTYDrDJklP6eYUBNjnrm01wGqBbQ/+RcwOMus/UN
zGMAT43Hc/18PN89fvtFrzLgssIe+alCBnx7va+t4xoeX3pMRPl1Bjz5+T02
sYQBrpu9UraVMWD0bke29k0GHJAyzeO9zQB557YK1UoGPMvY3Gp1hwFhT/7r
D7jLACnWgO9JtQywHk3X2NrEgP0vqkLXPWXA1ao3lQsdDOg6xzrzso8Bx9f3
vlv5Ac/z4fXnvuMMmHY+VFv2lwGlXxwKZzlsYPuh1SdByAZWCv2OSZW2gZdX
2wJ7lG0gySBvs6y2DWDtYSjI2AamvCzVKq1twGhYcJfSJhsYymmbaHO1gaOO
yQfCvGxAhddsScLfBtofLiY+2G0DodH3lvmH28Bqz6O57odtoA/ZrXE8bgNp
ihKVltk2YML53gTLw/cdLWnXvGEDRW0RW5Xv2IBbuckn6UYb4D/JEy7cZgNN
4a+WuHptIGLLxbSFYfwcWsDKqa820H11oWLbLxuIXZ7NbJ23ASV6Zt8gKxPa
glJ2zHIz8Tnp/13GzwQZUE3fIcyEzdzhPjpiTEh5eV+XXZIJTWc4ebtlmOBz
6WhprxwTWIpY7fsVmXC57MjEmzVMaPnh3mWvyoSvGvqVj9YxYXmocLb+eibo
VnzfV7KBCU+kt7gVaDFhW3KDyXkdJvycWKN0So8JCdsyeVMNmCD+eHY83pAJ
0QbmJaIYE4aun/AvpjPBVOo/eSMTJhSlqf73HDGBdzEix9sUj0vLTPSmGX4d
sDxrwRy/Pv+fANMSv+64kXpuI37NfoD7ixV+TbNI1GcwYbhlM4edDROqN+1I
3MFkQtpQOEe0LRO2705IPGnHBNqfLI5ieyYIJuUnNjgw4aNwBUePIxMM7el8
9ZuYcCL1yfJCJ/z1x05i6ZuZYMQ+JBXhjL+Odsp7bGGCdEGevZcLE65x9Bzy
cWWCViBvqe9WJtQ/Mxnwc2OCtXoEd6A7E7ozb+jt3MYEr8mhHbs98HptFj0V
7MmEyLuMphAvvK6SR8bDvJmQHnNHJsKHCRJDYzb7tzOhAOSiDvoyQeOqc3H0
Dibc40ztPeTHBIugRvYj/kzoaJvWig/A6zX+0nJLIBMqhW+4rQ1iwmq9o8GL
uGe2esZ37WQC1yGDM0W7mHDgsvCNqN1M+PLoW73dHia4f27tVAhmQjvvlY8z
uLq8VdFX9zLhEs9joU0hTODmGbi2hBvK/Z1eFsqEAa5/r9zCmGDGJbKTO5wJ
pZxr/t3BFeOknfHdx4RYDqaaUAQTmKcH+K7grlQK+rohkgmfqmafNeJWmifd
cNjPhCPdK1KGcW13FASFHGCC5C9N63+4nxMaVU4cZEKViD23XBQT4gr++3wT
d8JY9ZdSND6HA/v+ncftimhcJhyD5y20bOUx3IpSF6VFXAWrAs19h5iQNfKD
PobLGmvI8D7MhDDJpC29uCN3OrczY/FzOqRfleGOfQ0wEzzChB+clZUhuJPy
i4pduDOYdbZ2HBP+umSzn8ZdDBvaN4PLmrH2o0s8EzivRzjX4vI2N7ZIJjBh
45fplF24CQLrHO7jNmp7i/IfZcKC6+kBD1za4Wd55biRBUs7lnArnuisdUhk
wvj3oPHLuGoieVUTuIEG3QdNk/D7wWIiIBE3fZPAlie4eV7rzPmS8XW7rbTs
cJsP+smdxO1Nihfoxv1yKm9e7BgT5i7fH9uKy1/e33cBV7ZupnUId3nFV0Hx
40x4NjJzjombIMq6Jh6XvpH/9l3cmQMS2HfcWzcUHyukMGHn2/WbXHEvn9FO
KsR97WBwbxKXn4/+wySVCeYtoJCOGxVruWUA9zbNJkU5jQmjU/YN+3BXlW+e
bMJ1Dty6RjCdCakKnm7bcB++3Z5xHddr6lzoF9x5nlebVTOYkCPHZxCEq6tv
JnUdt8s2enEUd2fna3WZTLzuzjoejrjn+k6kJeJqbfteV4vbNmT99Tuut9My
X4kTeB6tLwZMcVMNT27agytf7vTsLG61vJjpQ9zAd8vufcCVvMKmxXWSCc+9
/15XxY2Vm5Bn4moOf84Nxk1i7ktMwR2o+RdShKuhlL7tIe7RkyutBnH7Fgq1
/+IKrh15sjyLCZZb5DyVcQ/Fe0zRcavKzx3bjPt14LXMLtwVrQYeh3Dpt3Mv
ZOL6X/j75gpuZrK7VBVuTdh9t1Zcqdl7Yj24h6Nru0Zw3y/dzZjEtThazWA5
xYRi7jucy3G1xyS+SuE2tMW8VMa1Lhuu1MbtyTDPMcH1DimOscGdPCsq6ox7
9EF8mSeu2Odxi0Dc6wIeg6G4RnrPIqNx6QXhOgm4xstlJlNw0aHWm1m4pmN7
95zDNXdZuS4fN/P8maBi3DdDIsXluMqrT36qwg0LFFCqI+IpTfVtwvVfHN7d
iivooBfZhnv3SmpsBxHX1PCxHlxuC72sAdzeAOX8QdyrKRIV73FDy3gefsI1
6fjbOYbLP/X13Q/cENcqlUncV/Uxe6dx9RUtqn/jnjvGvzCHu/C9x2wJd7+J
1yhLNv68ODGaxo67832oJhfuB+25Hh5cz8SjUctwhxS0Lgjg+jQO1eNfjTDi
kT4kjLtjzpBFFPdTzqiCOG5OMN8bCVyG+fpTkrjzKx1tpHFvjoezrSLWt5yp
k8U9/DB3lTzu+QcX4hRwa+7nfVDE7anN36iEO1ldeGMN7irvf0+Uca153D+r
4EZU3OFYi3vZffnqdbjt7LtM1XAL1P1U1XGjtngtX4/rGLt1llCl2GlQA3ep
w7ZlA5FX9MVYTdwna77TtHDLOrFfhFkxaeXauPuV3wbq4D54vXqJkOvYntO6
uA4G1ev0iPxGF5sIh3M2uurjflk80kk4seMewwD377OpR4Rsmup0Gu6ys/7V
hBbuGhKGuIdkfx8krB5pfEM4fu043YiIc/emPMIjk1o/CPsOiNAx3A1LU6mE
xxK7BwiH+e6o0ok6MpyDCEeOTRcT7nh8epTwE4eeijFugHlvAGGXuup5Qkw8
5gXhtX8vWExwhcbkdQljXu0LJDRwe3OScHoY6ggrAoo/EAb/EBBAuOsiIvQJ
V7UOuBIKi6MoQo7AwvOEf2p46wm/84QMEr6w8f5DeCvdYQXgnnyJNAjDhTQZ
hM5O8n6ExeNvogjnUs+cILRTcSwivNLMd5/wl3drJ6FNNnOEMP9x1y/CP39d
OU2JPq8fEics9vFTJTQOTdQnfHWk0IIw6ESLE+FS3kcfwtM3OUIIxY9tjybM
9X6QRChNk84ivCR08CKh3FhPMeGT2rHbhCHHl+4RSmxd0UzYpKL6nPBdU3k3
Iau7zltCxV+1I4Tm6SZfCdO8d00QdmufnSWU4Xq0QOg38IPNjIj7xDQ34TfL
eX5CjQVWEcLwSh4Jwg97FKUJnVXocoSt77esJtS/GKJC6N3YsY4wZWSDBmEl
50ktwreqE7qEswZNBoTCVieNCNVdfIwJrfw1gdA3gsWc0KZkoyWh9rt0K0Ip
8W4GIautpC3hWLy3PaHBA2NHwqQ5aSfCbv25zYQK+/q3EIbcuutK2PDttBuh
gK7ENkLPQ+c8CMtapL0IF/jzvAltt8hvJ7x4qcCXMCtheAdhcqCMP2GMrVsA
YajW2UBCP/HuIEK3+eW7CO3f2e4mfCFvt4fQbrtdMOHzfLu95P4jdiGE7Yr2
oWSeO+zDCNuu2ocTPrwvv4+wtnuK9Na3lgjCa+w5kWRc0jv3E2brYAcIU5kC
BwnVIu+TPs/bGUUY/FQimlBwqpX0lnREDKGjpeIhwqm9naTZubGHCZUs+WMJ
qyfPkVrlqRwh7LepJt352yyOcP5qJ2m6o1c8oeziN9KSPO8Ecg6gm/TR+41H
yXocrSN9o6SRSBjwOJ90KlAsiTCWN4XUq3qUFG3fmEwoL1BEynqP/RjhiJ8v
6SOhh6RX6+WOEyYGxZKuEnpOerdGMoXM0zuQdIyrmjThJlsqobSLI+mdxUuk
9kXfSI8FqaWR9VfbTTo/XkKqW/mVdG/kunTC67RdpCPzN0ilG8dI3ynIZhAW
JjqR7hxNJtWwuU86VfaTtGa5UiY5R+FbSaE3nbRppIYUTYyQNi4KnCCvlxmS
Nq70o66VT5A+0KkjNTH9RNpVyHOS0J9HnfTPbgfS9I5wUjmds6SVZ++Rbpz7
j3TAkyWLMCdyFemWDCNSkSJX0s76CNLMnixS2+83Sfk4npM+kR4jneFiPUWo
OLWS1HFQk/TwU2vSkiof0v68g6ScqSdJdSKvkzbJ1ZPat3WQ/hfxgXSn3G/S
38/4ssn7PEKWVEROm/TKM0vS0JktpKYKAaTCdvtJ3x9MJq0sPEua0HmN1Gnh
Lqmi6hPSMxE9pDwP35PGCPwkHXdbIN1+jfc0Yc+UOKkVUiKtS9Mi7Yuhk87s
tiJd4eFEqmXrSepADyINVt9HmiYTS3qDP4V0A/8p0rvLLpDSlxWSPuIrJ2Xw
3SXt4G0k3cL7lPQ/ni5S79B+0pG+YVJ/NEr65do46W7BWdLxyEXSsEGOM4TT
FvykJp4ipMciV5J2ZsiSSl5TIt3xYB1p2WtN0plxfWodtzEpB78ZabuQFWmW
mC2pq9Qm0lVyLqQfVm8jvaHqQxqy3p80ymEn6dGwYNLM7DDS3OpI0oK+KNLy
v4dJa6QTSB8aJ5MmFqaQWi3LIOULP0n6oj+b9CTKId187TypuEAe6cC+fNJr
JoWk4bzFpKjnBin/5TLS/p23SIt0K6nP/btD5d9WQ5ogXEf6eGs9Ke+VB6R2
o03U+RrNpD2RraQrG55Q5+c/I72Q3E7qsfsFqaxjB+mwbhdpvmQ3qe9SD9Wn
E69JS+X7qX5VDFD9NHtL9a3nP1Jj/yFq3ewwaajpe9Ij6SNUnfs+kF5U/ETt
F/yZ9F7tKOlT9jHSq2JfqXUq30jdDb+T6jF/kAp5jpN+2/uT9EncBOmc3ySp
BmOKimP9L9KzwtOkz2YoFwdmSLUezJL6F/wmlfb6Q/pK8i9pSi8lypojnbWd
p+aCZ4Ga0xZKqbhF0i5siTSgl3J+7z+qHzwsZwnXFFDWYaykDr2UH/eykUbx
sJMKFlAWYhzU+/co19A4SQPuUl7T5SIdraRU1eIm3XmL8sZ6HtKvpZRq63hJ
91ynzBHmI30YTfn9A6WE3TJSs7uUwXL8pLnHKZsnKcfdBUglWygt1guShpyl
PP+PsiVoOWlXI+WguBDpWDDlbAslm4wwlf8+Sqk2ShUFEVKdg5Sog5KpvIJ0
62FKvx7KUDVR0kMJlCkDlGc0xUjzj1F+66DUWylOGutD+fQ6pcgkpYehBFXv
eMqfzygNRVaSHnWnfFFAKfGN0kdHkrQkhnK6mdKEX4r0uDNl10VK6U+U/uul
SW9FUv5toDTjkiFNt6d8fZZSfpgSSa8i9XaljM2mvNRB2bBMlvQ/K8r5o5TS
TZRGC5RuNDlqHiMoc29T1n6n7FOVp/rmRymeT6k3SOksqUAasYUyO4uy8gXl
K15F0klLSqEESs0HlA5zlCH6q0kzwynLb1K++Er5XVmJdNkOSrXLlDZvKXdK
rKH6v5ny+gnKJ+2Uo9zKpFwWlMpxlJb1lH5/KBN1VUivhlI+KqMc+ULJukaV
6sN2SrhE6T1AGSu2ljRvE2VDBuXgM8oFznVUH8wosVhK9zrKqFnKc9pqVB/2
UvaVUP7+TCm+Wp3qgzfllguUEX2Up1esJ61yoAyIp1xZRdn+kfKwuAbVD2vK
kSjKM6WUXiOUypIbSMcdKGuSKY80UFpPUwqpaZIObKfMz6VUfkxZ+otSU0GL
tNqe0ugQZeMNyn/PKWGC8qWgNnV/rqf8H7Rtyrc=
       "], {
       Developer`PackedArrayForm, CompressedData["
1:eJwd2GEoMF50B+B3/5mZmSRJkkySJEmSJEmSJEmSJEmSJJMkSZIkSZIkSZIk
SZIkSZIkSZJkkiRJkiRJkrTn3a3nw/38O6dz7/nv+v8pb/2XP3/+/G/gn/8/
/xDA32sQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwyx+F8A8BBBJEMCGEEkY4EUQSRTQx
xBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0N
NNJEMy38LfI22umgky666aGXPvoZYJAhhhlhlDHGmWCSKaaZYZY55llgkSWW
WWGVNdbZYJMtttlhlz32OeCQI4454ZQzzrngkiuuueGWO+554JEnnnnhlTfe
+eCTL7754Ze/zf8PAQQSRDAhhBJGOBFEEkU0McQSRzwJJJJEMimkkkY6GWSS
RTY55JJHPgUUUkQxJZRSRjkVVFJFNTXUUkc9DTTSRDMttNJGOx100kU3PfTS
Rz8DDDLEMCOMMsY4E0wyxTQzzDLHPAssssQyK6yyxjobbLLFNjvsssc+Bxxy
xDEnnHLGORdccsU1N9xyxz0PPPLEMy+88sY7H3zyxTc//PLnX+VPAIEEEUwI
oYQRTgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFFFMCaWUUU4F
lVRRTQ211FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0M
s8wxzwKLLLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8D
jzzxzAuvvPHOB5988c0Pv/wd/P8QQCBBBBNCKGGEE0EkUUQTQyxxxJNAIkkk
k0IqaaSTQSZZZJNDLnnkU0AhRRRTQilllFNBJVVUU0MtddTTQCNNNNNCK220
00EnXXTTQy999DPAIEMMM8IoY4wzwSRTTDPDLHPMs8AiSyyzwiprrLPBJlts
s8Mue+xzwCFHHHPCKWecc8ElV1xzwy133PPAI08888Irb7zzwSdffPPDL3/+
Tf4EEEgQwYQQShjhRBBJFNHEEEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBI
EcWUUEoZ5VRQSRXV1FBLHfU00EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDK
GONMMMkU08wwyxzzLLDIEsussMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJ
FdfccMsd9zzwyBPPvPDKG+988MkX3/zwy99H/z8EEEgQwYQQShjhRBBJFNHE
EEsc8SSQSBLJpJBKGulkkEkW2eSQSx75FFBIEcWUUEoZ5VRQSRXV1FBLHfU0
0EgTzbTQShvtdNBJF9300Esf/QwwyBDDjDDKGONMMMkU08wwyxzzLLDIEsus
sMoa62ywyRbb7LDLHvsccMgRx5xwyhnnXHDJFdfccMsd9zzwyBPPvPDKG+98
8MkX3/zwy59/lz8BBBJEMCGEEkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJF
Njnkkkc+BRRSRDEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJH
PwMMMsQwI4wyxjgTTDLFNDPMMsc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLE
MSeccsY5F1xyxTU33HLHPQ888sQzL7zyxjsffPLFNz/88vfD/w8BBBJEMCGE
EkY4EUQSRTQxxBJHPAkkkkQyKaSSRjoZZJJFNjnkkkc+BRRSRDEllFJGORVU
UkU1NdRSRz0NNNJEMy200kY7HXTSRTc99NJHPwMMMsQwI4wyxjgTTDLFNDPM
Msc8CyyyxDIrrLLGOhtsssU2O+yyxz4HHHLEMSeccsY5F1xyxTU33HLHPQ88
8sQzL7zyxjsffPLFNz/88uc/5E8AgQQRTAihhBFOBJFEEU0MscQRTwKJJJFM
CqmkkU4GmWSRTQ655JFPAYUUUUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFO
B5100U0PvfTRzwCDDDHMCKOMMc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHN
Drvssc8BhxxxzAmnnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//F32
/UMAgQQRTAihhBFOBJFEEU0MscQRTwKJJJFMCqmkkU4GmWSRTQ655JFPAYUU
UUwJpZRRTgWVVFFNDbXUUU8DjTTRTAuttNFOB5100U0PvfTRzwCDDDHMCKOM
Mc4Ek0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHOBZdc
cc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//PlP+RNAIEEEE0IoYYQTQSRRRBND
LHHEk0AiSSSTQipppJNBJllkk0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNA
I00000IrbbTTQSdddNNDL330M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPC
Kmuss8EmW2yzwy577HPAIUccc8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPB
J19888Mvfxf9/xBAIEEEE0IoYYQTQSRRRBNDLHHEk0AiSSSTQipppJNBJllk
k0MueeRTQCFFFFNCKWWUU0ElVVRTQy111NNAI00000IrbbTTQSdddNNDL330
M8AgQwwzwihjjDPBJFNMM8Msc8yzwCJLLLPCKmuss8EmW2yzwy577HPAIUcc
c8IpZ5xzwSVXXHPDLXfc88AjTzzzwitvvPPBJ19888Mvf/5L/gQQSBDBhBBK
GOFEEEkU0cQQSxzxJJBIEsmkkEoa6WSQSRbZ5JBLHvkUUEgRxZRQShnlVFBJ
FdXUUEsd9TTQSBPNtNBKG+100EkX3fTQSx/9DDDIEMOMMMoY40wwyRTTzDDL
HPMssMgSy6zwf3AuhOM=
        "], CompressedData["
1:eJwsV3c8Vu//RtkjO2SvCIXH9tz3c0QSkTRIClkNe4UPQtmEzIZRJERkJ+c8
x0yUkRFJGZnZm4yv3+v1u/+7Xud13+/rXNd5X+d9i9xyMbGjpKCgKGSm+P8F
Efv/W0+T8SyFabR6HyAlsYoyL9KS8YwIp0C3A2ymgWx3pSbjhGvNCm83AdJ1
37n2+aNkvNJJ7O/MEkDKhylPBLgl4zOOfNnyfwFyXSue3/tmMp6uZ7JU3weQ
F8zBGt/Fk3G/3yPKMfUAqSENFbDMJuHXKV6/iX4HkOjADzd4ypPwOwZegfgz
gNCpv7iy6J+Ex+pKGH7yAAh72Okn/1iTcL33GwXPDAGSXapzhj0vEV9/e+OH
khRAeqdXPhw9nYjfjrxtEn8IICwtJWGLv57gtx5xYm9+E5Hsk05BIYFP8Mmg
jtvP44hIQrOjjmxBAt5Z1PVKUJuIUGapexWOxuODR+bbt7c0EYDzvqc6Ho+v
F7LH7pZpInd7iQaPZx/jd359Mtx01URUXRsjL2TG4v/GaTfJ8pqIeZbYuzbb
GJzFzezJxSENZLO8xUqzOwoPO4ozej7WQNQe3RbcuhmJX3+ZTtOtrYEEP2nz
OEcdga9z28+I7KojXCq/HuMNYfji3CPqYzXqyHO52RTVtFB8l+lQW6CfOjJx
90FpQ9AjXJD5lxQHVEfKabuvvPvvIR4nXubwZV4NsdkyWkuSCcFj0rRIHTlq
SBnB5FnMZhC+z3ePMc9SDTFJXp3+jj3Ap0+pPlkQVEP6loJ1pmsCcLoIRbtz
o6qIxtEyvdDh//CGI0jIrXxVxBsSggJk/PDxjQ9Six6qSH56hJ1kmg/OCh0/
76iqIt/dWUwZf3rjV54qTqlTqCI2n/aDlnW98KcWrjf0v6ggdLec/F/1eOCd
36k3fzxXQd7wUd1xCXbH9dK8CS+dD56fkQYS+m44QUtW2FxHBZH/pNO1JuOK
i0jqen3mV0GuZ1PR9ug545FcHxqrN5SRUo9r+QW3HHGGrmKR7A/KiLbs22ji
mTs4d/LSQ70QZaS78r+wjHh7nI/a4fFnY2XkVmzWh0dKtjgfiA6QlVVGxti2
qpAHt/CopZRPWQzKiBI8Mcm+boWXnBY53P9XCan8xbUXcdwSp+ccWIzpUEKi
LrnQFL+xwJXC7dVDKpSQta6la1225jhncoJdcLoSklU8I33KzAz/8s94/Vq4
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
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.829292429894418*^9, 3.829292435995099*^9}, {
   3.829296646449772*^9, 3.8292966725444393`*^9}, 3.829297050384918*^9, {
   3.829300558433523*^9, 3.829300568780965*^9}, 3.829301265348404*^9, 
   3.835975829885915*^9, 3.840797425672892*^9, 3.840797466464099*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"31ca71cf-b39b-4efa-aea8-99c11f1d9b09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", " ", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8280748033473263`*^9, 3.828074834605345*^9}, {
  3.8280749526989317`*^9, 3.828074995235281*^9}, {3.82807615136594*^9, 
  3.828076155194503*^9}, {3.8280862187462473`*^9, 3.8280862195250797`*^9}, {
  3.829301277077961*^9, 3.829301292365621*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"e1a7834a-ccca-401b-92c9-a73370150f20"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+/jYHMb7he3ZnRlw/wP8DqpD
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43558#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Y38+SXKKS7x+r67SYcXRsdGlV5LzP+iLkbU=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43558#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Sz3+bGyYwrzq29CnikPY/0TNUvc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43558#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUlnc8198Xx5VNJHtn700yPvf9PpT6fOwVMopCVmYZJSFFEkJWZimrSEmy
R1+jrOwRyQ4hIST9+v11H6/Huee8nvecx72PK3jBy9TpIBkZmRQFGdn/V6G4
P0+y+BuxO1LFzvrKv/G3NJJHL7tk44kpu2I6rBTQGFiSJ+FSikftfvS8X0YN
iaoztgyxb/EfR+SMF9looUXB5xKVSz3ezPTr/DVjWghm+1v5N6cZj8v+7tM5
SwPJCTrY3v1WfN7dq774KA2UHo5p3r72EW9JrrDUlaSGtphe4ualbvzgYyNJ
JV4qWIs4NB9Y9AlnibcU96WmhBvNpZK/cvrw43W2Hz//JIdk2Cr5eX8IvxSs
KHl+6gAI30z74RMxgnvIvOv8vEAGL2sJKmvXxvDOqyJE/82/eLvGrXfLl77g
mdZD2abhe3gxgSXkWOkkLhPIf6d2cRf/MeaYfaXoK+544gntjMsOHsJNM7We
M437Vmaujz/ewt+/O0uulDGDu+hXiPbabuJ0Z4tFfFJm8dGKUI8+iQ08JcXw
0ur9eTzX/9660c8f+IRqTpTc3QU84c76Feq1NVxk8Efh5YhvePRjw9z7W6v4
S9aHy0vXlnDP/cH3/leW8a3XcwzS/sv4ba0P71eHF3Fkpibv5vMdX5e+8DvJ
/Bv+4cGYz8KlVVwSz6E1iJnDo1KT2xMV13B3oaXLf3VmcRkX3Fq5dA3PGnEq
4mGewX2pH1z3LfqBH12UFgsZ/4qzDakfYpZYx7cj7QwnRifxymdTGWVP13ET
BSajN51f8H0dlbq1nJ84JfaYutfwM57LNm4Yz7+Bm1Es1qyVj+InZ29/kc/Y
wHdrqpI1lEbwexFDZF4pm/jTI27t4pcHcTnz0AeMbFv4voMXj5PEAN4rLClU
krCFm3igm383+3DO5msnvt//ha8pFhiovP+EVycI98fQb+OWWi3F8009+LkL
HY4yd7dxo1zuFuOcbjzvAP8d94gdPMuRgkZcrAM//amFnf7gLn46dzszIPYD
vpjjlV90cxfHyPnqhhjacUVobPt27Td+nZPS9bF+C95/2O3s3e3fuITn6lAB
7X944BfmRQn/PTwzrixnY7gZrwtxpHfx+YNHdhFoSUWNuIMhQwb16h9czG8z
z6OoAafgr5DJ99jHr7xpeMviW4/r1lIbzl36i3+8zqX0fa8aV/x7YZN97S8e
cuHLePipKjxG4HyXMIEMcqmFO5aKKvHQxkNChFAyWNkO6rsl8Ra/cqHqqvl7
MtD9yBbZUPsGdyF3afegOQC2Y9Rx8q7luG0eG99t/QNgN5546arka/zknPf7
N/0HIFUyMOfm9EtcLZKfs4vzIHz3e/hi+k0pLiPR4T5nexDu6rbpSPz3Ahdo
D6rfzzkI1xjDNj6tF+MsbuIsHLMHIbwkLI8CFeFU9APO8pLkoEj9xvbA4wJ8
tzi86vRlcrjVVRIkIpCPT30fdwjcJIfnBgYcXQ55+GDsvTfx6hTgw10WFCn0
BP8gr05beIMCbhkuKXzYysXreuZsGxspINzzjITjeA7+yifp5QglJSj7SaZ5
FGXjz5i1KdZJlLBcxJLqVJWJp79etaSLpYQp459ulQuP8LBN3b8a7FTA6Zfd
wJOWil9J3jY1s6aC2msMPz9wpOAux589c8+iApnKq5UMJQ9x22Gz3VtTVBCS
5r/sa52EGwcdMMwQowaPa8Wnc3gS8ZPcpbnlbtTwlhtLMVp7gKtV2252lFDD
lbKrfkZD8bjAn7cZf1RpoIjmcklJ6X2cNctpje06DZzg1soonLiH0+AsJ+Xq
aWDGKoTEJRWN731pSDlFTguSVAvMeHwUvhrquXTuNC0o1l/KDTwciU8J8uIB
92iBhkgdjj27jQ82tSfEddPCbxXuWj6zCLyOQlSjwZIOLPh7J4e/heGvnvbe
H35EB/OLE+7Yp1D82anQr2tf6MA/PJ0iM/Emnj4ve4xWhB6W2vR9f+fdwGOj
xqIEXehh3Z7nSGb/dTxc8u5n9ef0oM18bLlA4Bru/0FVwXSNHoKVNZsdIgNx
u0MJQ+GBhyAtOWfLPesqbvwCl35UcwgiZGKOv9e7gp80/B7ymowBaGJuWg0y
+OFqq+m9H08yAO8BXjubaR9cJp4oNhPFAHGirTMiH71xAcWtoL0OBgi4p3NH
NMoLZ+190sl6hBHgwn19lfTL+B7L3ys6aYzwqL0zRYjDDV8rf95mN84IXBdl
ZC6HuOAzZ6x5/QUPQ+gNkfR3+8748Ba1d6zTYZiQjacIS3bCP6a8aX5WeBgG
hXjkTU864nVqFznqvx+G/fq59wNUF/ERj6g3S5xMkKWf5vPfZwe8k0GVlsKO
CZq9zhJCgs/jvXrMqV3BTOD/+kfaTokdPnx3RSwtgwn++7lT/+W3DT5DmX9S
7jMTvI9AjHsTVvjiiVt927+ZYJax5LmHryW+Fnb+QjPPESifto6t5rbA9/5w
hFrZHAHOS32+2k/N8IOEDUbh60fAlHRuj3TbFKe51pP5Pf0ITC5QP+m8aoKz
bEVVh48eAVznKa04rRHOqeKka7B7BGT8IuhVtQ1wfl+tEQ5uZkgJXfUxfqiH
S63sbD0/ywwDzrMT7beIuILM4O2AIGZw6mvzv8x7Gld1e8WqncYMw4/9fz9p
18G159yUhoaZIcxb/aOY3QmcKHK6MXebGYiXDR/pamnjhheEjT04WSBkbYG2
9JgWfnZi7PIBKxaIGWVq4U/B8HO8lXsfA1igzEb744tBAu5onXQvOYUFuqyW
ZRflNXHvQf1C6SEWiFa2tMqWVMP9WSXVtrZYgOWoxGvnVlU82JSytYGdFXwL
JAr9g47hUV21M2csWIFTrdB3jE0Zjz2U7ifgzwpftu6UH95XxJN0/Q8uPWSF
DAHxXtKWAp7dIicQOsAKq6TeSHsxOTyPgr5Ud5MVdKyUNu08ZPAi7XnExsYG
jwXuuhR9lMIr6rJtiszZgFHr+tr1HnG8Zu/64pUrbFDOp33a2k8Mb9KwCsKT
2MD2aHyWipQo3lXBlNLfxwZvrlNkXOgWwvs3lkWzf7LBVcvE/YxqQXxUqb3c
lYUdTk1Isue+FcBnS8J6903ZIbTxgN1GBR++uGzn0O7LDq8lTn7SJ+fF16Q0
1hIT2IF0e9s63YUb33u2ziDZyw6021tDLoEc+MHZroyfP9hhptHcR1+AHacR
LpauO8IB9jI9h+fGWHHW7IskMxMOOCB3MqX5LjPOPY4P8/lwwKx7kut20BFc
gIf30kI8BwizXIyuDmLCpVP6I270cEBw7aj1HJEBVxh4yUJc44Cx46pXIx/R
46os9x8zM3FCkVYYdxMVHa4dp9OQb8QJz5TmYt0FqfFQ3fLCXk9OOHT6onx9
PyVeRymc+Oc+JxDiVfIb0ylwjWAyZ7MOTnhtmKBSaX0QDzzuZRSyxAmkXRbu
GtMDeMX6uFohHRfMaM9NJJ8lw5Vdq+n/ErkgIKE+5ZfAH8xXRGpT0oULzol/
KKQM+Y29/JI6YR7JBTlTHdap6zuYjIV/WdF/XCDd1hoqxfcLczsymz4wwwWL
jx16K3o2sYIOswgyCm64KeJpvpG8gYmcULS00OYGuab4VgPLdezCfjaEOXDD
RElYfoTRDyznHaPU81Bu+MAwZX3XYg3jVVjeO1DPDUyfZ+yieb5j1kvWczIT
3KA026o9FbiEpT5r77b8ww3VttHCdd+/YWx8+Y9faPLArmhS/zDnPGY+zBYz
bM0DrNTr2zkds1hCYsRV8ms8UKIfsMOZOIMx0l0gnq3kgbdPai0/m01h+v/1
KEYM8UATN7mCtv5XLDoU5ynd4gH/6vQFf7NJjOoX7wrFMV7YKDryi5J9HDv5
6t6QvDkv+Cq/Myj1G8PCL+82WPvxgswXy7efFkaw/emhxJdlvODs92T4OusQ
Rsg+dWOshxcueHM9vt02gF2zfuNMtcYLxB4ih2pcP/arJ0HdVo4PNF0r+IKM
ezHVmAPCkQZ8UPVE0+wQ6RN25bT3oVcefOCMcDpf4x5srdbgC3UxH4Ry7+nW
MXVickE1bUof+OA21JSVeH7EPFSkX9l94wOnPfMqsZl2bKGI5vZrcX54PcWx
ZMjUiok5B3hOnOKHFey7c9L7/zBHwTlLWmd+iMb/bkTce49NpjRLnc/jh/OO
yRb8Bk0Yv5kSa3QzPxznVVKb12nEbBlz/5RP8UO2z37EDYMGbCQipIdO8Ci0
hZEzO9LXYpzw/d0xOArC5+jC37pWYxa/bZ7Ynz8Kj4SPP7775R3W66PuX5F5
FIzzRo+qHHqLMckWnP9acxRMexqaPzS8wQwX2EmHPh8F1m1Of9qocsxJfpdB
kUEA2nyWM4/ovsL0xyKfcvILQCK36MUA2TJMJZINkckLAFGnpOuY0EuMV/lJ
/zwuACyKxdmGhiUYxRcFj25jAfj9MzI21f85thxdR/7WQQB01tK4n1UXYX2q
+o+yfAVA0WLhbBlPIfY49tKHy0kCQP+5K21O9BkWrbHpcOapADCVF75U78zD
fObCdwgVAnCVvf5OzN0nmFUC0wORVgGgraCwCzn7GAMsS+LQsAA88hJZnNbM
xSQWpRt+LvzjMYmxeCOfgzElv7Mc2xEAQu3nN5WXsrAv3/vvFPEIQutx132e
3nSsJe0Cf4KMIFy+I8MyqZCGleisvQlCgtD98PcrocIULPnHDQMHQ0E42O8V
p6SejIVk0s8SzwsCt8hDD/cvSZgzKS1YwVsQnvnnX61PT8QMNsVYOcMEgd7g
ScWeawLGa6B9Yv6xIKzzvSn9jcVjFDvdo12vBeFJFOnljYhYbCnPzrfivSCM
mpJGfxTGYL3GS7RZA4LgeLfq+43laKxqLzD39pwgWDY06Sro3sUeF1CpX/4l
CH/uRZpwNEZi0eZJPeY0QjCszvIwxugOdvZ56V9hKSHwMyvlHC+5hYEVSqHX
FAJ8X+r4z+BwTILio9xPPSFQ/zhYeNUuDGN6adUyaisELH9ftJ82CsW2bebs
mi4LwSXXS4LHn4Rgk9RXNgtDhKBjizF1rCUYa3194P6DOCEws/uk4k99HUum
56uxLxOCT7fOfKUdDsBC3haZEZuEgPNTqAju5I85XVRbku8TghWuYDce2quY
/uGWcI4ZIbiV9NSWs8kPU6k24/67IQRe8vwc1bG+GO+lr2VzlMLAOUHzU8XT
B6Ng8SJ1sQsD+eUdtTvnvbE+t+jATDVhmFlNJdLOeWBV7JxMt0nCIKdSp/JO
1B173PQ038NaGIr6u+uab7pi0Z7KuLm7MAh90Ix2/nkJ8+VuHNQMFoaAdQsb
ylBnzLrF0FP4vjB0DglU9gk7YVq+nynps4TBliJNjHL8Isb04ZfKaL0wXLRJ
MD4f5YBtX73d0dgjDEoHnNPfBthjXwRZHAu/CgNbAkut79o5rKUz53f8ujB4
RVyvDzlih5UEySUGkouAzRnuPgFjGyxZtEbKnlUEtkOp4uYKz2Ihn0hNp0VF
4NQti2g7XivMQNLpB/tpEYjgy0IeOmew3XtXq8ctRMBTabD9GZM5VrBy+3ae
swgsOPl6vfluilGUP+NSuiMCtpPeIdeHjbFX7G+ntx+KgCoVnE5oNcLOB7W+
qH8qAvN5wW+4dgywKmxBy+A/ETh8/plBdpEu5pK7Tc86IAKKoU9z48RJGBsF
7eDojAgIyIuuxlWdxrzbJd1cKERhKSGrJIVXB+OX0VCRZxUFYrj6eu63E9jH
WN39TWFRiKJgtC5u08bEzN0Tbp0QBe8uTtvDlYD1V1y31TUTBW11s1fiMTgW
xhUjduSiKNxgMw0dbEKYXHDG2pCvKGheFe+TYCZgnyeeV2WFi4JQWsKtK9c1
sGit2ginBFEgC6qy7/yjhqnldRrKPBYFnt+XFW1SjmOJritT7xpF4eTN123l
NMcw6Nh/HvpJFKYMpnl7PitjK3KHA05/FYVuy9Gb9Q1KWMaDo1qMP0Th3Fqs
ctkrRUx3Q55+gEwMrprYWYqVK2DbFjDwiEkMlGTyjGbvyWNP3xlnXxAQg8fR
B9dcOmUxsps+ymu4GJzZr20VzpbCSr6G/akwEoMweXe9fklJzOZkQuuN82KQ
fln20oVWcYwm//GDk15iENIi00h3VQyroH1tQ39TDLqFy/7SKItijh7Nor2x
YnB3/iTbFoUIdqS7bzU1SwxcF96zm3wTwjySNm6J1YmBsZVIddOUAMb9i8Lw
e6cYlOk8ThP5dhRrPcvGWT4uBhTNtMa3RPgxoaOqz7X+iEH08t7loUFurCfs
lD8Ngzgc6ntWUmnMhYXMWEA3rzjEXLlZ9/ArBzZSGNBvSxCHoumFSyvabNid
Q1FZwvri0FUSF1fPxIqpeKW6LNqIw5L8g8fH15ixeJV3ewHXxaFVIlShZYIJ
w1LaW7B74iBWEnAhafAwtrQzEk/5SBzmtITI6mkZsVP1uyKJVeIgNW5eNf+O
DtsQpF89+0EcWDv2ix+p0GK5ETzvBEbFYbbh6Mz4e2rMcF761vw3cVApJRrc
daXC9kgEg5IdceDkoO8NFKTEip7rc1yllQA+vbJrD7+TY5aH7b5qcklAYmFx
lmXXQexV/42r7WoSgH1UDX3YQoYV3Ha8MEWSgFFyr65nsX9Rlqqe0W9rCQhu
2hoxL/2DkuYVCaweErCBmfZmLv5G0amckrI3JEDNyMLnh+YuCiX9ZTsVKwF5
NCr6XgXbyH939uD5bAn4xC9e+l35F7po+/pzfKMEeN4hJtOnbSBrhvT2wl4J
cHXbmNBw/4mM60IrmqYlgNTzUi3aYB2d8rr0ZGxDAvCwmttahB+IIGAYv0Ep
CXaGseeHVdaQ0ieVGwwckjApP9ZsHryCJMJ53MQkJOHS8937gmXLiHVm4YSV
riT00akkUvt9Q3QPuxV8bCTBqvHdBO3OPCI7VcEX7SEJwXSBTNSJc2g5/9av
6lhJMP/6py94axpNWbnN9GdLwuKlgztMDVNomNbk0/eXknCH8W0/U/pX9J87
f/HRvn86v7hkYm8C1fBSpqrNSEL/Xt6Tt0zj6FXnUoTJ5j+/JqJ59okxlCX/
7twtDinAU/5Eye8PoaTJbL0MCSmY5BYsenJ9EEU/uKP2Rl0KKo+igUKGAeT/
04x53kYKQub+pt737kUeeRp//3pIgYhOwMhvrU/owhnBZc4QKfA9F+XHJ9mD
rKhoRhTjpOD6auiPZ3pdyPDtyn+6OVKg2qBoO+zWgU66DLy6WCYF0lEje4ef
f0AaXDXZwU1SMBp134P3UDsSv343qGRGCrQ1vPhWeFoQv4y3c+umFPy63Bpv
/N97xDpuYTZJJQ2XJ0OPN4U2I7pYBDsc0rB9+NAg0bQJkeEissyS0tB7w3WC
RqsRba3ScUtrSEOfXhnpPrEBLef8oDqpJw1fMz5M3WyrQ8MH6yevXpaGijtK
lSX3qlHX66edsSHSIFmrnneUsgq9d4ypyo+TBnLJQ5aXb1WiKja//IYcaRgb
cK1U4nqLylrOJo2USYNqvSRXWMcbVBAAYetN0vCTOodvI7UcZUmIe9L3S8NC
r4Cb+LXXKDp64zTakoYL1xI8kGsZCtUcU7GgloHADGl3S8+XyH+5UdCLUwai
jfQNU9ZK0AXDuN85GjJw59NPMnrTYmT19+rCOz0ZaGZ73u3+pBAZvrQd6LWV
gVVKDTPXQwVIk1mqlOKmDDyNKpDpl3yKug5Yt3fGycDLGcNm+dEnyP7H3enk
HBkoZSjfqEx5jNYn3/05XyYDXVoFjzScclFEzzcOySYZ0K//nXBTJwexN3Ap
rff+i0f9cXvqn4UKS0n61dMy8ISfvOZPQgbqii0MNaCUhdrr25EmmmnIPmQk
nZ1dFnTjpkaLK1LQ+mXaN1/EZOFmVmNwAykZRdipdxccl4WJE+TdLetJiMPA
9ZsPURZ6udiUt0oTUREhjVzzrCw8iLZXFA5PQASZdj4KN1n4ZXCoLtjvAeri
2TneeU0WkjsjxDRuxiN7eknT5HuywH1s+UQqIQ6t71p5nM+Qha17nN2nEu+j
iMWoOxIvZGG/cc7WYeMeYh+tzPlRKwvElfHfuGk0KmxfqKrqkgVV/a69I++j
EOEd58CtL7Lw2z3O8aFVJOoqIK7qr8nC5lSQLDvtHbQeWSD85YgcuEnLduBP
bqGIgGFUICQHQeL5yaE3wxH7JRorH2U5mB3gN9k8F4YKLNR8NU7Kwbu95iI7
nVCkecolhvyMHHyKeP+11CMEdR1LfdbhJAfPPQQFS92Ckb1oW8NDfzlo6O74
nn3vGlpn3R49FykHDzo2BF0HA1EEhcSmeKocqBpHTZEbBSD2DcvDPwrkYEGc
K/5R31VUMB0pWfVODgT5FfNLz11BGn1vT9z6IAeTOtzHD2z7os6meTv9MTlg
ecVvZJLvg+xfcQSyLctB79Woffsr3mg993TCxJ4cnCWeKJzq9EQRDwKe5zPI
wwWnB4+kNj0Qe1h+ize/PJQoFz/XA3dU4D00qS4vD0T/YHnVIlekaU/9+yDI
w2s7r2UqORfUZXScrcNYHvK4V4pHW5yRPX5J/qGDPLSOX1Dt8nJC63IppHO+
8qA25zLwS9IRRfC3XhS/JQ+9soVDJocvInbGXzfWEuXh+MEJy2nOC6jwj1jq
uzx5qH7bbMWh4YAI3y1ehb/5t/8x+7iVsz3q+nynQ69FHgbkxbpFhc4j+46K
OdYheRhmZn+5Z2OH1qvnyCbm5aG749vz6SwbdLuYnSd/Wx6uBv+xKKa2RjEG
T7grKRTgcTG1nmmcFeJHfSphbAqQUzpyS+3LGTSvstQ4y6cAvSmMB6+mmaOX
MuRGumIK4ObUSe1rboaCRHg+l8gpwGeHaVdNelOkzavsynJcAYRjo52jW4wR
PaveVgCuAIFjNfHWR41QP/3FW59PKwCJZvP1zBd9lEV+nUnLWAGCCjc+Gn3V
RZd+J2Q+tVKAODuH3z8VSCjJcLk5yF4BNHZasvuKT6OGXJ1FAxcF4KZLtXwg
dgotb2QxCXkrgFB/pv5S0UnESdxW3QpQgOuPcguytU+gk49M7D7c/OeX5/HQ
45cW8l4pupUVqQBvlNoITH2AMrQoinzjFKDr3J03Vu9w1JZk13MqRQGKD3vd
NDyEoY35ii3ubAVwlpnMOXSfgAQ0mfhWn/3zU6B4TymviQK/NrmmVCiAwAhj
pV+eGspT4Y13r1OAp1d0xzvPHUc9kVcr8BYFcDJ+66HFpYr2Rrs+s3QpgDJt
wZ4o/TEkKSdBvjCgAGFLVGVhUirIIixMsmZcAajIupYLnJRReP+oUfzsv3yj
X8xrRUpo9Nr9DLVNBahrsCqSZ1BEVF1zTYf+KMCkw+lXh7kUkJIgfJukUARz
32NsRhflUHTr+rG7rIpQfPpGNCO7NKrg1re141WEqxoXrY8nSqKpy0/DFUUU
wdJpG9cXlUAarFbdI8qKQJNuo/nSQxQ5XyrbfKGpCDpcId0rv4RRQhUdb/gJ
Rfig5plqECyE6hgctS30FEG1TKuwkk4QLdnXukiZKQK5P6+UmstRxFnOHrdv
rQiU/H3jrcx86CS195veC4oQo9hL+UuVB3lbt489c1ME7/tVP9TTuFDGC6GD
130VIZYv0KRnnQO1kQVLGF1TBKfybUYnY3a0YTZgKByuCL4iUqxP6liRQL7c
1V93FUEFdnWP6bIg/d3IRx8fKILkqEVmy98jKNDga2N2miKUaNulby8xobwc
jQW/XEVYGuGePcLChHp+JjISCxXhZdNe9oFuRrR36rsKb5ki7KY946R7zYAk
0k/ZrFUqQovgh+SaV4eQ+ffssPcNiiCmvR+cWkKPQmEnP7VNESSmR2T5IunQ
i0TTLo8eRdg66E/2WIQWjc4Vb8CwIuiZrpu3blAjKg1KHrZJRWCufFnczkiN
lO6f0/o2rwjtX6+9vWhBhc5Nvr1Uu6oInDe4pY1LKRGjLN8BxsNKMBxYtb6+
fABphPqLT7ErAUbRULfWQ4ac+7oNKviV4F6qekpn6F9CXVB4+jk5JbDeFbX3
f/mbsNgx1qCkqgQ0vglaJts7BHaBY/NUmBJcP0KVOcm3TdD2i2UY01ECOHx2
nwrfIni1zCuXGijBo+PnMokhG4QGeO4uY6EEbsO1b7u/rhOYqr2fFJ5Tgq+9
/IEXqn4Q7I8dGxO7pAST0TuLh5vXCC9Ld5jzvJRARLjprnb2KsEkLzw8K1QJ
cuO+npH8vURYT6VfT32gBPQ7LzUWZxcIifeTHBIfK4F6BYcI+4l5gko436f7
r5XAYsngsn7cLGHA/xlEvVeCwHL3NTutaYK/u/zL8AEl2H7a27Mf+JXAYV95
9MacEny+crPSQfQLodJcKy7glxJ8rxLeu5c8SrAifdj3oVEGspXXal3eg4Qd
ZObpwaUMVC5JzNQefYR0pc/jzlLK0JZcMGiv2EPQEHcycNBUBhmmDYdcu4+E
6FzJ2xMnlMH3zre8/v/aCWM8KzU2+sqgTO/aauzcRghmCpCxsFOGNV/txzK/
/yN0RGs69jkpw0saSR75/94T+CjJMow9lYG9Y0A2NqeZULcTRa93Uxm8rnXY
JZxvIpBNpy/iuf/iGTpfKnLqCMZ254VqC5Xh+OPtF0XbNYTcIWFrjVfKkMkS
xijpWU3Q7njertKsDHt5mSd9HCoJt97UFUjOKkNy0fcsElcZoV/+1uSz78pg
VPTtk3dhKUGk6DSnyJYy1JgEVuffeEF4n9UTyU+tAo9myUNvvikgUEVNObNI
qkBuynv/mKLHhGhrKtE/Hirw3qj6P6cbjwiYwqGtb1dUoOiHbLa/aDrhByVz
62CwCjDXh7H7PEslWJXxub6MUYFDvQLb/vMPCaI0x15cfK4Cv4Q4Nshm4wkN
by4e+7CkAhWsYzvPz4QRtpgadVLcjkHWi25zRiYfwsXW686KLqowxC0jT3f+
JKGRmsvE/awaGG3rsN7D1zTnnsjpjjioQcDxyq6bd1Y0D8HJE6fd1MA/ppNo
+2pZ0yrQ65jwdTW4erFWIM7km+bqwn9cYxlqQExoraKqnNbk++A7pTupBqot
vV0h94Y0g2I6/KQuqUM4v5EV9UJOdZbElEeqlzr02TJ/q+B9Vf3+/S8nqkB1
uDO/szB9qbqa6Y+Q1VSUOmzvDpyTtq2uzr8cREgvUocHMrVqx7pGqgcMxSjp
VtQhT8PY8RPzYvXuouZ+wJY6cGudnRf6SVEjEGnya3ZfHUpOlspV9FDUeNQH
f2s8rAEPajkaLY0FCOQKfZ1BihoALzaIiwvKBImOhZZ5dQ0giqGvzuoXCYYu
+/VntP9pGKcqzrtGSM+RfKVopgE5e58fW3BdJDQQ8OJsGw14xrJ5XeF5Ts3c
sHkeg6MG+Dy0u1LP/a7m0FW3zOseGmDKGVihadBSo3gkNPnbFQ24MvNOeuVV
W00VzZBEa7AGZOUFCxTSN9dok8lV50VoAOZouRy+3Vbz8VeEQXiMBghVYPc9
hEdqzFfHvpxP0gBLZ1fhsfwvNZ/nlHxRhgbYnVzNPAzjNU4Tdyl48jRgxVYm
1qR3oGZlYDJ5u1gDJsZO1iU2LNX4dx6XHHytAfqfpl9ND+/U/H0fW/26WgP8
NQ0cVvOGCVE1swYPmjVgz9yp+FHTHwJTOWHS86MGIKpyUdnTB1BacaKvfp8G
xNqSZdxkpkVCTxYppMY0gEr6l9cOFScqStdKoZ7WgCNrd+SxRaVa5YRUydlF
DfAcD41I9dKorbm7Wt20/o+3WHdHn0GhVifslGHOrgZQy1+5LJrBgLoCMydv
HNSE2ffpXLV+OrUW3hu+NnSaIGKt/uxGLdR+uaRHqc6sCRX6ejfPdCgil/OP
U9i5NeGvMbZP+UsZrVnsSG4IasIeT/fjoU9KKMjQuOaTpCaMkVLIq8dOoYOn
8g1LFTXB375okCvFCt1D+5Mx6prALvjROuW0M2I9dsbPTUsTqKK2QoZ4/VCG
zHNKIkkT5llHTfvXQpGoCHmqqIkmfJe2jhhqvIdKeKylyM9qwqW/cYY5CclI
laWsZtJeE+KnGe9fOfkY1dPRGNW5aAJ9y1kaG9ILRDx4/usjb03oTEi6v3Pk
Lfq088YvKFATWG6bTEU9bUTWPw5RWYZqwn59527oSDuaWriYqhKlCXjFXnHd
90/IfbJKijleE+ZCL5ebhw2hjaEjtaspmiAZbmQaYTuOgrtdjDqzNSE46nuk
SPFXRNla/7UoXxNaH/RE9+TNoNg69itRpZoQQ+hjYL05jzgqLlM5v9WE4jtj
dFsciyjnxfvUE/WaYLKpnCpnsowknvJIC7ZqQuFyEGs/+woqy/Ct3e/SBIYJ
71Z9h1WkkdRu9HlQE2yv9BSMcK2hpnsCU+8mNEHz3pWb+vprSO9WwJWUOU34
dFdQ3dxoDfVf66K6uqIJZd/oS3ek1pCdr2ia6ZYmvBMeoxfqWkVzrsHSCvua
cMpIV82dbRV5OvTVMlARQJqOKY1fbQX9spIyXmIgwFh5o+V9+I5CjcOm2tgI
ULw0Ui1+fBnREIevPOMjQOJE/eZroSXEffxOmoMsAVZdbwh8WV5AT+TGpfFj
BGgJJDsy1TuPZMRU6ngRAUa5PEopa+cQYpuaGtInwGNXhbXAf/2y/4lkDD0I
sFnV9tNmZBIxMJP19F8hQCrFsTXF4S+oSqHJz+YGAWLyAvP+skwgVs9T1S6x
BJi5y+XJ1zmKGmNozq8mE6BRl9vAlDSCPIs/HPTPJkBOhlBD1cgQalsw1L31
kgBZPGvcfCoD6Cr1kRXad//4bV6zhO/1ISGxvgfxjQSoY3Wx/DXQi4IvWo5k
9hLANI4zerqyB0mGc90QGSPAk/H02bSwbjSYMyZQPE0A8mGXO9YvOpHCxHmX
yg0CePw957ho+gGN7wkewv8QgPbEmyCyD20ommem9D9KBKVq3tPxlq1oxsrl
Vy87AvkeVTlS2Xv0IEDq0dmjCBL4p79IXW9GWPIyNimO4IWs2/ttiyaU2ud9
57sagjdBtDIO0IB01pWkrmghUKTp6sVS69A602bnLgnBos1MrmhHDcqWf+sT
Zoog0XxZdJC7GukbBrHR2CBwMwp69yH8Hdrx0HwXexHBb06D2PsHK9Gze39s
2TwQPHJfHWxKrUBk7WF5QjcQaKRhIRfJy9GL+RPEwtsIWAOr73oPvELWVFTL
8rH//HjffJJ7V4aoRdviKpIRjL2oY0p68RKVn4hWRtkIlELv71hcLEUOF/SH
mvMRWBvorxy++wIxhjFe132JIO5zSGP2h2LkUpfQZNmIIHbA3uNregFiGzd3
nmhHcOP4O/FUsXzU9JudzqkXgRm73b5y21PkxT3yYmkUwYnxm0ccQ/IQr/oj
E99pBLYUDQx/Tj9B7ZZ2m9tLCGZUw6LHhB8jf/+jaTc3ENBxZPvNM+WintdP
JmMoMeiIdww8fSwL3eh1imBhxOB+BYPlslsGkvohLpHOjoGvT/XTtOp0NHR4
8aPAUQy2MvdmXommoQi551754hjwrHnefZOfghQNPFnkFDAwHj53WAeS0YS7
wttyNQzMu6ff06wkIbXC8v1GEgYu7xgqT0UkoNlW/8dEUwyot3XUr7k9QAlz
aqe6rTF4VqUQZeIQj3DK39/OXMSgp1Hg4MvuWLQsXHv/szsG9BSjJqq7MShN
+6bixSsYyHinhd+Ae+iUg9bAt2AMTjPOWK/k3EW5Wf/x/rqPwagV5S530R2U
YSszdCYZA7WxIptjFrdRKnfig/IsDOpdRzvY2SNQ4vCOHkv+P/4TUvIPF8JR
bLI9lW8pBlq/xOXyO8LQXfPWhp63GJj9Z+d1qjEURTDLXZdvwKBtzuvUcvRN
dC329+pyDwZrXp4UQuvX0VX9C0V6IxhESTSxZxhcQ9507Y5FX//Vd+7yzGsM
RO5t8kdpFzHQtJsM69cPQM53kkcurWMgtvMhrO37VeRw8k9iyy4GRK/RYfzJ
FWR70NFQlBwH121NbWYPP2Qaotg8xYLD2QKmAC1lH2RASL2hxYuD74OJomR5
b0Tc3T+eI4ID8+5TxtP+nuhEpdP6vgwOg9Q0x/4WeiDMv+O53TEcalpoNKq3
3ZC6ivKlGoQDX+XLlnl7V6SynibIcwqH3QuT6nuTl5C056XkYQsc/tAsCYQL
OyExmS7j4+dxOObTbWU3fREJLarQJ1/CgbaaQpO+4gLiK3j034YXDvd/suYF
pjsgTueDoWaBOPzSWWlMjLNHLCKuGq9CcXBIEur/T+I8Ypzq3mC6i8OAoflp
SmM7RHEu07UrDYeULZkOr7Wz6C8PhYjsYxyGKO7bBDhbod0Rt4l7RTjkh0tq
Nf60QJspn1IXX+FAyDziNpt8Bq2dUTMjVeMQPQZm+YbmaIklm6GgGYfOMiy3
l8sMzX2ibKPqwIFekbxL7ZcJ+mzQR3j/Gf/3PzwUJt1uhIboNX4JzeJwyuSw
gsisAeptzykL+/6Pb++7TSOfPuqMpPaY3MSh97iexXkfXdSm4ymG7+PQQtv0
22aCiKbC3NYMyQF6FvkUjl08jb5MZhqEUANkxHU3xO3roNEsCprxwwCFJFz4
it8JNPznuNMhVoDF4SHGh7raaMDWvUmTE6BcIPzWOWUt1FudddSdFyDzfuih
KhlAPdy9wekCACUkiUUTdwx1BVGOtosAZOv0G6WkE9DHYbXjOxIAkVdCVe7O
aqCW5OwflooA17YbBhpbj6P3m72GkccA/rx2lxCwVUWN5lTPK9QB+B0vkElT
HUN1r9Vp59A//pgFoaj3yqiG+bIzmzYA+bnFLdpkJVTlk9N88hQAZaRvblqQ
Iqrs6RO4ogugvJrpLeCpgF7Haoz1mgJw+r7M2qOXRRceMVJWWQCsvtxXAw9p
xFwwJZdrDXAg95ZL+bQk8m6MDve6AEDK9f68wSyOjnade27hDHC0sps9uE0U
dY0qDSI3gHcv1mgD40WQzMao5CFfgKgjxM/ZZkJojKzU7OdVAAbHVqU9fUEU
zXDrxmgQQBhxJ4z6jABaEJP+VBAGYKTxIDOPhw+lKP/djbsNEJ0yYqR1jQed
gj6RgLsAd6KZ8wlrXCjv7PVAnQcAHweOFq/xciAzZ6PHMg//zYefmcXiExs6
6CfcwZL2L7+p5KlJKiuyj/l4dCoHQOTz9Mm2s8zocFo2qT3vX7/qhffOmx5B
dU/9/F4WAOxuNI3VnmVCvPU8rSEvAWok3iRMCjGgjx9X15zKAaarVm4FhtKj
a8PN3AaVAEqTn3bvbtKi4R/unjwNAHk2jT4DAtQoch9PPfge4OuoKlNSPyVS
pWdt+tb6r3+qG0lb6RQoSaSGrbIbINQ+1f+uzUF0QjEez+4D6CMsK1SbHUDr
yNH1zhCAouqAXKU1GTK2PFRr/gVAuPg9b7XwH8Lfi5NzmtMAweQJN7+E/iaU
eJczCc8D5CrsdARv7hAORds6/lgBMLS43cgv8ItQnawQO7wOQHP4eXlu3ybB
7QlFZf0WgHmJu1Nl2gahreY5few+QB1P64uBs+sEsUHz87ZUWpAYZp6xZrVG
iFjdeyXFqAW/M/mbSo9+J0zRPKXaYdOCr4IMWZd/fCOAkIF1K58WrNsml4jz
zhOyNDdfPBTVghTYi/z4cIawZ555wFFWC1LHScdlLaYI1p46Z5SOaUFy3Aa9
7ZlJQmXk9wIypAWOmiNltZzjBPbch3tdJ7XA6HVJ8pfFEcKVKmScqf9vP9to
bzPbEGFr1/gN6xktuKR6kOK6bT8hSNORO8ZOCw5ObvIVbH4iVI1972h10ILI
v6sXZsZ7CHvXA26SO2uB/k91YZWSbkJITfTMNU8tWK1vSDj94yMhHJWVuN7U
AueDTZG3a/4jRNYNBVrFa0HWq/3s3oUGQts5B+mkJC14/XBnU6WpnkD3d3G8
O1ULMpY4F8p7awkx+L726VwteOrpb/tcv4oQ3yDCoPpKC/4c/XzE60o54ZN9
Sb1PhRZ0cC+f8Tv2msB8QM33RdU/Hf1tkI7uFeGhlt6QSLMW/Pi4TxfUW0pI
b/LJZen/5x8NNHyNBYSxC7/NjIa1YDqHlqMQzyfwkt+muvdZC8QXM11KBp4S
sk6kuh+c1QI6XuGPzVpPCE/e1x37sakF51w5BnU3MwnPW+g/dHFoA8t9k1jC
0QRC/Yen63dttMHzlb3O5+RrhFecPT43zmsDZ2L+aWqWIEKe8+6a90VtEMjV
KbN/GkCIPmi0aumuDQ4TOTMSNFcJ5hrbS6LXteEjdeeXh3nehMVC3dnGdG3Y
FMno+D7mSGC9uzq0M6INhrJU+sahxgTX0+q1rlYn4A5Hb7HVU2FCRoHiG3e3
k0ATc+Wi0OCa5oOftWHeAToQHWZIV2A2pTlXdNXfxfcUyDHONBjmNGu+P5WQ
Gh5+GjifCf4YCQ/TPGA0OhUXSgTWydVDi0K3NMm0Kg7kBJFgdJme+ptFiGYU
xy+D3khdOB9iPOzLeqImqa1tuumeLih9Gh0RkjxRkx2UHvQ6ThdGdd0EKfWh
pmIMPU1K0YXJO3/r/ajVamazI/Ys8nVBzJTeKfukVY22BHPxWIsunHCb11am
SCIYjkxDxwddiEm6ZMWwn0I4G/1msKZLF+oDaFYZE58QHDUjPV706kJk75m+
0KIygvey1cGsQV2QWJCaGS6uJgRnSqXGjupChLYXjW3iW0KU4Z7szQld2Haz
DMGyrxCS/nY2e03pQup7ElLUaKzJfpl91n5OF3QLPT2WaT/VFDn4rBov6sLQ
VlYKOjNaU8F84rbWii6kmwVWd13+WtPUzMqjtK4L7cNmjiO7X2u6rsy9FNrS
BbXcB3Efl77UzA7e/Uy+rwuqODmDbNhkzZ6aLM0spR6I/DkKXSfGamgW9zMH
aPXALIQtsjpyuIblUY9yC4Me1OmMEy/Ijdfw6z9urziiB4IPrgYEGA3WSP3x
O5/PpgfyOQ+lTmh21qiW6GymcOnBloXks5NvG2u0z3Pci+LTg895LGL5H+tq
DJm+CQQJ6sHUyZ/+sp45hLONVRWuonoQ8kCtL6H+EcHRN0bfWlIPKiNHVbh9
22u8hc9N6crqwYCdcWS0WVtNcL98oKaiHqQf4FxpCGmribp9gFHmmB60CjxY
FTJ/VZOk2veEV10PpCKSX91WCqzJns9TZ0B6kDjrJMw7VEsoSvXv/gN6IMru
Ht3T2keoIBGdVk7qQZwePY0VxRShaZfr9wRRD3Tz+ns6xL4TOouX4rv19WA9
Ke0/XYctwrBtrViDsR7QqGbber0hQzMMcTUvzf+dP4M7534qDVqrszfNtfrH
m911I2P3CNrzUlp4YKsHuV9T/1tU50Y0ghQh4fZ6sNywMrclIoxYegdY/Bz1
wM1Fcs+NRgbx38ovvOiiB139MsYXs1SQlEoQbu6hB3+dWVkqb2FIdVZ34KS3
HlTv+8SYNpxC2sm87seu6MFexdxZOgETZHh6hUwsUA9u7fPGy3Fbo7Pb9cns
wXrgr+px6wHBETkWPpChDtWDnLMLzfmc3sjb+mLTr1t6ILTSecOp4hpizF6c
JETpQd+l32epzt1Fz6d9/obF/JvPtaY7+m+ykK7EDl9rvB5cpbUNus3QgeY9
QgmHHupB7LzwSFL3y9MRZdQ2Jml6EBHds/XMm4IotBUblJypB55j9dQZppLE
Bg321LHcf/NR+OxyY1KLeO5mZoXAMz0QOBnz35y+GXGvWWTAqUgPXm1M9W1+
dCCm0zz/WVSiBxNqp/P9ky4T1QyUmdde6UGNicXS1IA/ceBBlcKxt3qwrfZz
0KM0lOg7qGV0rVoPfDw4O27ZRRKZeNov19frwV2lu2ZSOXHEkvPGMRTv/+nf
I8ekPiUR9fOGikhtevA08Rbt9dZ04uLCufbYDj3g1t/7BDM5xCjZufm+Hj1Y
PKp28PNGHlHM9zIV14AeJE0ysennFBKbKzZEzo3oAZOEEJ3hjxKi/e/rJ56M
68GZ9lveRkGviPs4+YWFr3rw/FxJx42hN8SMiOhQ2Tk9oM09lxaf+o6o0X4k
23dRD1jPXbCYa6wlDjOk1b5d+TffsuZGT5lGor+pwOe9dT1wqTcwditrJrKm
5O9q/frHg1WwP/RtIZaNyXFF/v7nxz5jnuXbTjQUqDje8fcfv2yd7rHyDuKy
I7I4QqEPfm/YMij4eogSK3qJjw7pg9W1F8EJjP3EFqW+skkmfZCOvPpsFh8k
OgZY94iy6cOHjf6Pb1KHiQdrvq64celDrmp9jDX3GDGbzJXhJZ8+XKkXvyvd
Mk4k6KxJbwrqQ9aBMIUGw0ni6N0AXQ0xfWCqFrAe7vlKZGe5E/leTh98R8+J
HeCZJZZbMjyjVdaHrtdrLq4zc0TTjKT3hsf1QZ2et3ClZYF4X/TJgRFcH+5y
i134O7JMlHKTEuA/qQ8dOtvXpuhXiW0lZdhFoj6ouT9daHu+RqRQa7j+3Vgf
UqlkNMNFfxIfB59OVzqjD9Yst14dDtwgQmNXZcBZffj13/2F0ZFN4nXd8c0D
F/ShM65MIbxjm8gZ58h62lkfyu3fM9Od2yVW9C0pxbjpA0EvxEycbI+4brvr
xe6nDze/jMYHBfwlxueGxdoE6ENAbrXci2dkJLk5mhc51/UhisuSNSn9AMnN
i2NRKkIf7JO9ZH9kkpO+hqk44g/14eng7qlHHDQkMXbGWO80fXjj/LxdmkRL
ciuaf5ubqQ9iUc1qRRF0pI3edHqKZ/ogQbviycLNQKIROfC6reJfvXMXsiMc
jpAMKkc/71Tpw8gHriQkwkxK0C+nkq7Xh/yo7iPxy8wknquXrO+36oNRzaMf
prGsJLmWzgOmw/oQcuHmybucnCQ/63zpW5/1wfLtj/DTdFykypXQM+WT+kA5
JzuudZCbpMWhUsj+7V/9JFc5AiUvydwl3XhsRx+K9MaEGmQESGl7ftcO7esD
HBJQel4vQJqIN8hDBw1g/0ZpKrWFIOnSO7LtbDoDWLVwYDp2X4h0je5StiOP
ASgzbkpFiomS6rOg/eFRA1i843eVblCURKHM/bNF2ABorz62N7wrRrpv03lK
UsYAfBLf18JvcVLOc+WV7wQDyKLZZ1lmkCbNAgPnUS0D8LSZmYn/LE2SGpjT
MtYxgLn5yezTpTKk8j9pD18ZGMBCXHcgi4McqdWQDAWcMwDfp68f5fxWIB2a
HnEuuGAAMx0/ltv8FEnGAa/jR5wNQPrn9yGhFUXSaLbzjKaXAXx+EdR585sS
aWWt4x5ZqAEYrxsHePxWIbEmpo3ezTWAfN+49vB4dRLdAMsn36cG8MXSQDFA
WINExhHbalNoAPGZrSnplRqk7+nh5bJl//ifnJkI+aZJannsHvupwQAcaJPr
FZwxUuArpM01aQAHxg1y3Oa1SJ4bb9UOzhjABv0PIfMT2iRHVSX5pXkDsOar
Puqfo00yqRLjrV01AAFW/xb3cydIUk2Ht+z/GgD5Xeeblt9OksY/fS0s4DeE
B0bSFvsEIqmfxTbngZAhWE7w9Tu/IJI+nBlMviZmCAUHyFoljpJIFSMfbunL
GUK3ko5uI5UuKf7ra7s1ZAimAa9uhMzpkbR/3D6iZmcIX08xG/36ZkRSUyaj
EXQwBKPnXhoBasYkuavX9mmdDCHTSonyZbAxiWfHc2nMwxDGFZ862FGbkDbI
rP67GWwIMeEvj7wXNSU9Y5IKan1kCLbBo5IFkeb/7s/ZbYocQ7g6WOysPmFO
elt9N0A771/+SaPCmmNnSG3O367WPv/HG7gfljV/hrRYU+D7utYQpDYzDDcs
LEmyruIe2V8MoYuqp5HRyZpUgVkufZ42hO1qQfZzH61JGGukG/eCIbSuMASW
K9mQDOvnXB6u/YvP5z+7TmFL8mZ75nTvgBFEfQ0NTi23I5U3ipwPEDaCfusJ
Ta48exIhxXyiXNwIZkvoFNq+2JP+84iwW5c2gjz/BTlKXgfSIMeMzWUVIxD0
LPsunexA+nX5idVFHSNIOEscxB5cIGlwC5kaXTICIUrKaIYnjqRG36M64sVG
IN8cL7+g7kra3VyN5y01Aivcnd/ulitJJajh85HXRjDJiPHZd7qSCm46XNmr
MoJMAzVP5otupPiYJ08+fTACo17vM8cfupPsn4kfDF40ggZCyPYOqyfp73LK
+QVWYwixqTjF1OxDypALpZxmNwbCZpWJwg8fkpq3S/E4pzGUGrmtZx/1Jfn+
VPvVy2sMrNw3qbxu+JLmdkZia0WMwbQtaLOP4EfqouKtS1AxhsbnQV0bH66Q
sgRyeJG5MRx51u/mIxZIYoxWbJO1MIaLOu8eLtoFkm7+bPLjtzIG3ZOvfSsf
BpLsW2Y//LUxhkdWTSfNqIJIQh7SQU0XjUHoKckiZimI9OxtxcBpP2PY5pxO
PtlynVRi2BlrmmAMuf/5dcbX3STxV57TOJFkDNdORcfHkoWS4gTXZpWTjaFB
4xM3uVAoyXuDGbGlG8Oa8ctPAU6hJKV0q6WhXGOYSVU0SlwJJVXMTp+2KzOG
shrl2hLacFJt8C6ZS48xvA3tpjjrGEHaKp1bC+/9l19YcIciLoKkMN07mdlv
DFH+Z5yW3kWQ8kjFDX3DxvDg5PS4O9NtUjS7bSj+1RgqGiYJhIbbJIuXtX/Z
140hKWepCpOOJK1Oh+7/x2ICHCoRvxflo0kSHJdXJtlMoJgj4avJhWjSBd2z
E785TMBrC+nuJEWTBl8q1inymoDWmgSR7nc0qebG1I1MERPI/2oboP7hHimK
4+SfK8dMYEHov+K1K/dJgnrUe8KWJmApddnKJySepDJwopf7rAnc7h3sGkuL
J506H1pwxMYElA7899DxTTzJzW/H/O85k3/vNavVp+V4UvmjpRejziYwEtcQ
zmX3gHRqufv8A38TqCPzYfY7kUByu5/avP/QBNhl+GQaxJNIwRwDaZspJiB6
momb7XQSKTb3iPdymgnYvHvpFe2cRHr9Jpp3NNMEnGonkgafJpH2xoOvvnlq
AiK7So+2RB+S4uQcxD3emMDK7oi6o0wyqbxb8t5Ivwk8rT7c42aaSooXbny6
O2gCPx1OtS4GppLcA6waeEZMoO3wFikxO5UkdDRy027cBMjQzqlz31NJcZ4z
56dmTUB1m+fKRHQayY0hW2Vp6x9vuyae3plOEtBjndjjNIXyGOmaJN9MUkzL
voKAnSn8KQk9lp2dSwKfOUW+86bwSOXtVm5FLmmDp0uJ28EUVAUmKyo7c0m2
PpkqrE6mEJZVZSG0l0uS5SWo0Vw2BXN3D+r5s49JXT5B+FqwKeTOJDUjrick
Jr4Ng4YMU3A2uGNnl59HSvT75mb/2RQCX5l26JIXkLhPXfMxmzAFl8dB18iP
FpAec9IHnpo0hV8eGv6fNApIr2plbsvMmAL1rEbAC98CUg+1d/b2kinU5zNF
OE8XkBgztvrif5uCaenI6nRbISnqPTlq5DaDiZvKp3TyiknBbPyHhc6aQel6
Yo57Vimps4zWGrcxA4fZH/8LVQKq/SeLwq9JHk71pFxdU0BsLiAoxuavSb+G
zDqXYVNAtnVTXscXsEkC+HpmDGpTQGaUNq01YbBJh9rXvfZ6U0Aztq7Erfaw
SZKfkWzLnFNA5XlpXDAsskmpKQXKdOBTQAR0ID+jwrRJBvQBGcFeVEASjwdm
7Dm6SacwsX6e51RAHFWzOSWTwEkpYqpO/W1VQKXSLG3ehMRJ20m5slXrVUDz
0sjdmrjISdKjei0/c1ZAMeknZdvizUn4s1E8IvJWQHpAERldqNFJ/7hytYZu
V0Ashb/BuZ7USUswRkV89VdAA+VJ6pIw2EnHXS9pa3NYQCgr82s739tJEmNo
u511WEBdIUlsePDbSV5ooQ3Qd1hAVUW6hrwB3En2chOyNHxYQBv2xg9aJNxJ
JIj3+v2EWEDgGHib6mncSYCyv4yQllhAklKq4GL23Ek6B1CwtblYQLQO1l26
FN5JhgyJAui7WEBTFp523SbeSdERwlQavlhAMElI2Ac53kloHDT5fsJYQIoQ
HHxyXd5JlzEYQkjLWEBrQ69un6beSfRb4NPa3FhAwyj1Rlk630lAYRkmDd9Y
QO4bSp3xTN9Ji2ZSeD/hWEAlueRTkV/fSSJxxByk5VhAhNHD5+aE30lRhqhl
be5YQOeXF9Pqz99JnIvht5/wWECI+YdUvuLfSeiQGgrS8lhAqcTvQZn130mA
m4yuNvdYQIM7P7OyDeBJzKDFAGn5WEAN50hQKxfgSRem/lKb+1hAKrc6pqcg
4Eliqzelzf1YQNHHz7UnKuBJrrBw9///WED+NMN/qzPgSah3ZIA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43558#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WNF/aBc62Pp72cwvO7SbJR27QaKii30/s+rRof9MWP7xjO7JbnY+kJk2a0xY
72+FZW3rZdcnOeRNKGqzttzJ93EZoED6SpJLp3sRcTHlp8G9ETZ/PrdRyxMh
8rf769d0/GXz+9D/ceriAqb30OSt8BQFdtmeaPqEi5DjHp++jeYoICpL1Qgp
EScPZz92CF9i62cNMZIn0o6Z5nWoveCggvgEP03v0iRx/znvxAQ3FR7HivVE
pc1gc4X6Fer8VNAc1WEuneUiW5WejDgmRIVQv7iJiY3zRN6LZHqqKBU4dIpn
Ax5Ls3iINxLtElT475leXnKUDMupZqlbSJYKY/YheaG7V4iK+h3ZZgpU0A9S
ufPPVIQs8drBN0yJCoOvjiQKqfKTfZpvGJZvpkLV7QzOYh1RVvO7mjUT6lTg
8jSaNM1VZKm0TrzdupMK439+DVT8/k2c/6SU6KxDBad5Ue9RYfb73GntmLKb
CgmJtjHxn7eTtb9e2vJpDxVkbYaPmttIsmK6SyYEgd0v206TvJfM6v/ZX7HP
lArcGdbKRmE7WdAndek8TgXtr7mz+xyNycmDuHkZnQpduwWjfTotyVMjwZLj
TDYfGhUfVkcxMuNvzo8t+6nQ70zn98hRZ2VPfs0+as/ud6Nmq5SJFItrRtAv
+QgVLLjcth8xVGEdnsf2fDxKhZbbab8WX3GSy5a8uQVd2fytfRYsHziEredI
f2fqTgWZlc4S57r1ZM81rYnnvKlglLSjXLZChNzAw+VU6seev13xo678JKYo
oLP1bwC7vszCk6WU/1ghQi6Tamep4K57MzxASZL1SeR2pVMYFe4ZNLdmKQwQ
GuINl+5GUOGld2pU84E+Ikpq1rwtkgo+HkY/ZvB/xK3Gxt66a1Rwoefv9zYY
wNKCk4OLblDhSKWn6MWD01iOuue6jJtUEGlLPDQqUomVfsUe30pi74N2/NI1
ue9EXcy6PZdTqBByYF3qutU+7D32s+VMGhUeUN9vMrDhJHeNFbq6PqKCaub4
mm++HOS+tEtLtllUyLjDaHrk8hkbZ9omoFwqVGwwWOwnLRNLnFu26D9n7/fq
+Zdiu5YJvqJ5YksRFZ6Kc+oLbO3BxF3eWMuUUSHnz+gF/i18ZEWJe0P8lVS4
ZLscfH9+BtvW4B22wKLCwJ6XnE+4hFh6gSAxUkcFf1EifG+AAst4y/rcrw1U
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
OA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$43558#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8280748355955143`*^9, {3.828074954219873*^9, 3.828074996816227*^9}, 
   3.828075443221216*^9, {3.828076133782419*^9, 3.828076155756703*^9}, 
   3.8280788308028927`*^9, 3.828086220330195*^9, 3.829288386327449*^9, 
   3.829288440152604*^9, 3.829288512281698*^9, 3.829289825061927*^9, 
   3.8292903963679934`*^9, 3.829300571815585*^9, {3.829301267910563*^9, 
   3.829301293283963*^9}, 3.835975830394988*^9, 3.840797425814328*^9, 
   3.8407974665518637`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"d01ec8ef-38f1-4120-b166-0c60e701c8bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prEcoFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "5.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "9.9"}], ",", " ", 
     RowBox[{"\[CapitalKappa]", "\[Rule]", " ", "50"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "700"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc1", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "100"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sys", "/.", "func1"}], "/.", "prEcoFunc1"}], ")"}], " ", 
     "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc1", "/.", "prEcoFunc1"}], ",", " ", "initFunc1"}], 
     "]"}], ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.829289836115881*^9, 3.8292898786984653`*^9}, 
   3.829289928815617*^9, {3.829290349293017*^9, 3.829290355545183*^9}, {
   3.8292909878604403`*^9, 3.82929098902839*^9}, {3.829292492461904*^9, 
   3.829292530486247*^9}, 3.829296677600597*^9, {3.829296715496174*^9, 
   3.829296715850922*^9}, {3.829296890284697*^9, 3.829296890447839*^9}, {
   3.829296939284951*^9, 3.8292969884923773`*^9}, {3.829297074505315*^9, 
   3.829297118199197*^9}, {3.8292972096052923`*^9, 3.829297210519383*^9}, {
   3.829300591073004*^9, 3.829300594922571*^9}, 3.829301320155313*^9, {
   3.8293050158654213`*^9, 3.829305105294956*^9}, {3.829305168801544*^9, 
   3.8293051856636667`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"e977780a-4867-43ea-959b-1a9b2ab6363a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "27.334134835853384`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "22.834134835853412`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.011365120930361926`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.4325211729161288`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.03913907513155437`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.7999999999999998`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "39.57777777777776`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "4.397530864197529`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "38.37777777777775`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.6000000000000059`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.0476520975181189`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.047652097518117054`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.0031268094962339003`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "37.77777777777775`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "3.7163123621590892`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "8.21631236215909`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.06293335645933688`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.8618001911150232`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "1.185620220654956`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "4.499999999999971`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "5.990000000000027`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "2.018541162669255`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "2.481458837330651`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.4394108040950212`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "1.8172997050669297`"}], ",", 
     RowBox[{"W", "\[Rule]", "1.2546840939285833`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.8000000000000012`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "1.8000000000000014`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.20000000000000034`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.5999999999999981`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999999981`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.1820689655172421`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.18206896551724228`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.200000000000001`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}, 3.835975830781477*^9, 3.840797425852606*^9, 
   3.8407974665853863`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"70a1dbbf-5a4c-45b2-90e2-deb5c3abc4f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D51FbOx0t4jQB2Xq96N
0iZAikNEQ2EHZj9lmKjdRcg3QAbL7WlkpxI/PfBd2rKqQUAsbE2D8KRTP3Fy
Kd9BVEdAqqE4qUe1KUDkE/pGrXhNQBEaY3UyHuY+e3mVkRSaUUB6Mlz4ftu1
P6R4MLFAtVRAkF3Avzy2GT/hZmxd7MFXQDGqa7JzZ34/7nPYQyCaWkCB2kcd
Xhc9QJoQx1vCr11AnhBxO/6yBz8L5vJWdkhgQF8ddNzsIe8/U7tSRsuxYUC8
VK+Gz3ZzP2vYc07XOWNAPdOgnHtRYj/rBK1zp6dkQKc+zQHLMTZAOnmnsS40
ZkAeH9ktTSv5PhRl8rV1uWdANkRN6WjiC0BWYFXXgCRpQLJVBMuLhBQ/Z6N5
EUOuakB/fdp1A4SIP+D1tWjJHWxAtFhU98WsPUApkLPYBqxtQBqLFSZ0KyA/
/KEBDwQzb0D55Q9zB1wyQJzhM7HiT3BAP5hZ83aM3z4hlkfnnhVxQLoMHHGq
wMQ/WlLnKz3OcUCORjxU/a/cP1hKr1M7g3JANC6BuurACj8+5tcHlUdzQHzi
ykdZniVA2ImMytD+c0BTmV3wMFTlPlrRoRloxXRAa8PQp5HsuD+hVN9LX4h1
QKscpbDR9z4/nN+ojDg+dkD8DcRBzbYwP38O01ltA3dAT6pnUb2sO0AWRYk1
hLt3QLohvwPEKOA+crdn9PpveEDqjH1pr9eTP7bNpj/NM3lAcIFICeMMwD+u
63GZgep5QIZ6XzhZKBY/jq2df5GwekB7VhMNPFAzQCJ3VXSDaXtApeznMH/N
3D57fDVM1R58QBGvxrtSoYM/vCV2sILjfEBGV/J13Rr3P7HWQiMSm31AizZk
TReiED+OK3Ai/WF+QNdlTQOc0jFAMLzFBEglf0C5rH0/UnjpPoZUp/V0239A
pHraxvRUtj9iyHS5flCAQGUATxxwbCU/W+pb/7OsgEBr6cq8OtFEPzcq1zYZ
B4FAQqaeZ6q0HkAHvII0LGmBQLR/4EH4ZuA+sVF0ObDEgUD1iCSEZw6iP085
lgTiJ4JAg0cpGdnPUT/PPkzBQ4mCQFLfW8n4gGU/KUhIhRbkgkCg7piRd0s1
QHejdA+XRoNAqSU2kRmr8z6fAuegiKKDQGVVB61m79A/u7OJ+CcGhEB+5f47
iYnxPrqCwEH3Z4RA+bc4/PVWnD+TVT2SN8OEQFzA7kEmszlAX3rqqCUmhUAD
1gJuoTAlPwWj3caEgoVAtdpSBB3OEUAWlsf5/9+FQEi7Pi8heuo+sDm9Jw==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43893#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 29.67489572343102}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D51FbOx0t4jQB2Xq96N
0iZAikNEQ2EHZj9lmKjdRcg3QAbL7WlkpxI/PfBd2rKqQUAsbE2D8KRTP3Fy
Kd9BVEdAqqE4qUe1KUDkE/pGrXhNQBEaY3UyHuY+e3mVkRSaUUB6Mlz4ftu1
P6R4MLFAtVRAkF3Avzy2GT/hZmxd7MFXQDGqa7JzZ34/7nPYQyCaWkCB2kcd
Xhc9QJoQx1vCr11AnhBxO/6yBz8L5vJWdkhgQF8ddNzsIe8/U7tSRsuxYUC8
VK+Gz3ZzP2vYc07XOWNAPdOgnHtRYj/rBK1zp6dkQKc+zQHLMTZAOnmnsS40
ZkAeH9ktTSv5PhRl8rV1uWdANkRN6WjiC0BWYFXXgCRpQLJVBMuLhBQ/Z6N5
EUOuakB/fdp1A4SIP+D1tWjJHWxAtFhU98WsPUApkLPYBqxtQBqLFSZ0KyA/
/KEBDwQzb0D55Q9zB1wyQJzhM7HiT3BAP5hZ83aM3z4hlkfnnhVxQLoMHHGq
wMQ/WlLnKz3OcUCORjxU/a/cP1hKr1M7g3JANC6BuurACj8+5tcHlUdzQHzi
ykdZniVA2ImMytD+c0BTmV3wMFTlPlrRoRloxXRAa8PQp5HsuD+hVN9LX4h1
QKscpbDR9z4/nN+ojDg+dkD8DcRBzbYwP38O01ltA3dAT6pnUb2sO0AWRYk1
hLt3QLohvwPEKOA+crdn9PpveEDqjH1pr9eTP7bNpj/NM3lAcIFICeMMwD+u
63GZgep5QIZ6XzhZKBY/jq2df5GwekB7VhMNPFAzQCJ3VXSDaXtApeznMH/N
3D57fDVM1R58QBGvxrtSoYM/vCV2sILjfEBGV/J13Rr3P7HWQiMSm31AizZk
TReiED+OK3Ai/WF+QNdlTQOc0jFAMLzFBEglf0C5rH0/UnjpPoZUp/V0239A
pHraxvRUtj9iyHS5flCAQGUATxxwbCU/W+pb/7OsgEBr6cq8OtFEPzcq1zYZ
B4FAQqaeZ6q0HkAHvII0LGmBQLR/4EH4ZuA+sVF0ObDEgUD1iCSEZw6iP085
lgTiJ4JAg0cpGdnPUT/PPkzBQ4mCQFLfW8n4gGU/KUhIhRbkgkCg7piRd0s1
QHejdA+XRoNAqSU2kRmr8z6fAuegiKKDQGVVB61m79A/u7OJ+CcGhEB+5f47
iYnxPrqCwEH3Z4RA+bc4/PVWnD+TVT2SN8OEQFzA7kEmszlAX3rqqCUmhUAD
1gJuoTAlPwWj3caEgoVAtdpSBB3OEUAWlsf5/9+FQEi7Pi8heuo+sDm9Jw==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43893#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 29.67489572343102}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1311792, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1311792, 
                10245296594295525147080587039808895622031190034492316267296, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10245296594295525147080587039808895622031190034492316267296,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAIKFFZVMxJUD1Gt77s9TSPx2Xq96N
0iZAB3oj3D9/cT9lmKjdRcg3QKiQttO1MjQ/PfBd2rKqQUDkR0X/+gI2P3Fy
Kd9BVEdAzlGJC6D8uz/kE/pGrXhNQEASLV1v/uY+e3mVkRSaUUBys+JEzoGA
P6R4MLFAtVRAfMDnRgoDND/hZmxd7MFXQJ4gPmYBOFU/7nPYQyCaWkBP+zrv
+eTAP5oQx1vCr11AqqENmoHK/T4L5vJWdkhgQAx+G1BLuaU/U7tSRsuxYUBZ
5ixzis+RP2vYc07XOWNAgg0dmm8eQT/rBK1zp6dkQKCffVne2b4/OnmnsS40
ZkCSc8J7CCfzPhRl8rV1uWdA8tQywDQWtD9WYFXXgCRpQNkeRO0SIC8/Z6N5
EUOuakB/qGLpZ29eP+D1tWjJHWxABH29b52JxD8pkLPYBqxtQOgzCuNX9w4/
/KEBDwQzb0BjqUXU4u69P5zhM7HiT3BASdE08CfX6z4hlkfnnhVxQF1OTRX4
Uoo/JXNn6VCIcUD1Gt77s9TSP4QAvWk=
                    "]], 
                    
                    LineBox[{{289.05634055408734`, 0.2942323646206398}, {
                    296.2019841048509, 0.00003098799949709099}, {
                    308.4738844331331, 0.10697314017153625`}, {
                    319.92597441575845`, 0.0000209388463899611}, {
                    332.3379150696761, 0.0088749422442124}, {344.52326571692, 
                    0.00168257940523481}, {355.888806018507, 
                    0.00010147416185631264`}, {368.21419699138636`, 
                    0.1276419005010057}, {379.7197776186089, 
                    9.671672652090077*^-6}, {390.9987682391576, 
                    0.0026695808952637693`}, {403.2376095309986, 
                    0.23306471165015166`}, {414.6566404771828, 
                    0.00004470502575202706}, {427.0355220946593, 
                    0.11783767408235316`}, {438.594593366479, 
                    0.000010493993333554638`}, {449.92707463162486`, 
                    0.0015708865356000709`}, {454.9951814832811, 
                    0.2942323646206398}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA/ECBEShPfUD1Gt77s9TSP7HWQiMS
m31AYmzA0NYDAz+OK3Ai/WF+QLmPb3EWzL0/MLzFBEglf0BqvtkwANXoPoZU
p/V0239ArtFhI8vEgD9iyHS5flCAQEBypPyAkEE/W+pb/7OsgEDriIn5DW4q
Pzcq1zYZB4FAHiamlKdzuT8HvII0LGmBQPryZAxiVuQ+sVF0ObDEgUDB8gcf
HyFxP085lgTiJ4JA2ZogPS16cD/PPkzBQ4mCQOHk/BEXVEM/KUhIhRbkgkDS
+zRb6KK+P3ejdA+XRoNA+3xUnDlA8D6fAuegiKKDQDegBx3WoZI/u7OJ+CcG
hEAd6lDUmsYEP7qCwEH3Z4RAfsA7M4mTbD+TVT2SN8OEQFiE1chCOMs/X3rq
qCUmhUCPUG8sqOwSPwWj3caEgoVAe6d+5mLctT8Wlsf5/9+FQBWJcZozNv0+
kdWfQg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43950#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 0.2942323646206398}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAIKFFZVMxJUD1Gt77s9TSPx2Xq96N
0iZAB3oj3D9/cT9lmKjdRcg3QKiQttO1MjQ/PfBd2rKqQUDkR0X/+gI2P3Fy
Kd9BVEdAzlGJC6D8uz/kE/pGrXhNQEASLV1v/uY+e3mVkRSaUUBys+JEzoGA
P6R4MLFAtVRAfMDnRgoDND/hZmxd7MFXQJ4gPmYBOFU/7nPYQyCaWkBP+zrv
+eTAP5oQx1vCr11AqqENmoHK/T4L5vJWdkhgQAx+G1BLuaU/U7tSRsuxYUBZ
5ixzis+RP2vYc07XOWNAgg0dmm8eQT/rBK1zp6dkQKCffVne2b4/OnmnsS40
ZkCSc8J7CCfzPhRl8rV1uWdA8tQywDQWtD9WYFXXgCRpQNkeRO0SIC8/Z6N5
EUOuakB/qGLpZ29eP+D1tWjJHWxABH29b52JxD8pkLPYBqxtQOgzCuNX9w4/
/KEBDwQzb0BjqUXU4u69P5zhM7HiT3BASdE08CfX6z4hlkfnnhVxQF1OTRX4
Uoo/JXNn6VCIcUD1Gt77s9TSP4QAvWk=
                    "]], 
                    
                    LineBox[{{289.05634055408734`, 0.2942323646206398}, {
                    296.2019841048509, 0.00003098799949709099}, {
                    308.4738844331331, 0.10697314017153625`}, {
                    319.92597441575845`, 0.0000209388463899611}, {
                    332.3379150696761, 0.0088749422442124}, {344.52326571692, 
                    0.00168257940523481}, {355.888806018507, 
                    0.00010147416185631264`}, {368.21419699138636`, 
                    0.1276419005010057}, {379.7197776186089, 
                    9.671672652090077*^-6}, {390.9987682391576, 
                    0.0026695808952637693`}, {403.2376095309986, 
                    0.23306471165015166`}, {414.6566404771828, 
                    0.00004470502575202706}, {427.0355220946593, 
                    0.11783767408235316`}, {438.594593366479, 
                    0.000010493993333554638`}, {449.92707463162486`, 
                    0.0015708865356000709`}, {454.9951814832811, 
                    0.2942323646206398}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA/ECBEShPfUD1Gt77s9TSP7HWQiMS
m31AYmzA0NYDAz+OK3Ai/WF+QLmPb3EWzL0/MLzFBEglf0BqvtkwANXoPoZU
p/V0239ArtFhI8vEgD9iyHS5flCAQEBypPyAkEE/W+pb/7OsgEDriIn5DW4q
Pzcq1zYZB4FAHiamlKdzuT8HvII0LGmBQPryZAxiVuQ+sVF0ObDEgUDB8gcf
HyFxP085lgTiJ4JA2ZogPS16cD/PPkzBQ4mCQOHk/BEXVEM/KUhIhRbkgkDS
+zRb6KK+P3ejdA+XRoNA+3xUnDlA8D6fAuegiKKDQDegBx3WoZI/u7OJ+CcG
hEAd6lDUmsYEP7qCwEH3Z4RAfsA7M4mTbD+TVT2SN8OEQFiE1chCOMs/X3rq
qCUmhUCPUG8sqOwSPwWj3caEgoVAe6d+5mLctT8Wlsf5/9+FQBWJcZozNv0+
kdWfQg==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$43950#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 0.2942323646206398}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1311792, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1311792, 
                10245296594295525147080587039808895622049636778566025789232, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10245296594295525147080587039808895622049636778566025789232,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3Px2Xq96N
0iZAkP3JbejS0j9lmKjdRcg3QAVQT/AeqwZAPfBd2rKqQUBeqxP4wAjKP3Fy
Kd9BVEdAlFRIVLktrT/kE/pGrXhNQLeZYhN/1fE/e3mVkRSaUUCyS9zxNvay
P6R4MLFAtVRAhEK5W3uDEEDhZmxd7MFXQL2adiy2FcI/7nPYQyCaWkAJXeib
nlfiP5oQx1vCr11AODfSliWS4z8L5vJWdkhgQEQ02JDyKKU/U7tSRsuxYUBW
Nqr5NvwXQGvYc07XOWNAqxmz4tD8yD/rBK1zp6dkQDyrJ71dhcI/OnmnsS40
ZkBMLwFh2o/oPxRl8rV1uWdA5r9dTSFOoj9WYFXXgCRpQD6X6e6GABBAZ6N5
EUOuakBl4AOPjda/P+D1tWjJHWxAJRcGgMx7AEApkLPYBqxtQMBfqKvpadw/
/KEBDwQzb0BF1yRgsMy3P5zhM7HiT3BA9afSX8LPAEAhlkfnnhVxQJxz3Tbw
E7A/WlLnKz3OcUBydTJKSy4gQFhKr1M7g3JAfM2StEnK4j8+5tcHlUdzQIPd
g9fsWak/2ImMytD+c0AOuZBNvzEEQFrRoRloxXRA6/L5IY9Usj+hVN9LX4h1
QB37IdN9yBNAnN+ojDg+dkD81nRSc+jWP38O01ltA3dARJrezNgU2D8WRYk1
hLt3QIuH7ZQ4XPY/crdn9PpveEDZ5Hl5IgO8P7bNpj/NM3lArOaUpWiJHUCu
63GZgep5QHKuC69Y7t8/jq2df5GwekCNwTfZwk26PyJ3VXSDaXtAk+FF221O
/D97fDVM1R58QPkNKcED5MA/vCV2sILjfED3CHsfEhciQLHWQiMSm31AqJo7
+Fl+4T+OK3Ai/WF+QHGD1X4CjbY/MLzFBEglf0BQmaJX4oPwP4ZUp/V0239A
vCaWPijcsj9iyHS5flCAQE4wYwEtoBFAW+pb/7OsgECwHOH52arRPzcq1zYZ
B4FApR1CoegGpT8HvII0LGmBQBYKUUGjCPY/sVF0ObDEgUDrDY+D1+i3P085
lgTiJ4JAQPbEaaVdFUDPPkzBQ4mCQOJmNKt47Mc/KUhIhRbkgkB9+j1DSoXA
P3ejdA+XRoNA2cLjrroY6z+fAuegiKKDQML+s5pWbqw/u7OJ+CcGhEDCaMvn
K9oHQLqCwEH3Z4RAfiHGrkl9uT+TVT2SN8OEQGyQ3jZeQhJAX3rqqCUmhUAW
mHb3vDHaPwWj3caEgoVAQwmnMaWLoj8Wlsf5/9+FQHz7zAWj7AVAb5fQiw==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$44007#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 9.045060142296718}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3Px2Xq96N
0iZAkP3JbejS0j9lmKjdRcg3QAVQT/AeqwZAPfBd2rKqQUBeqxP4wAjKP3Fy
Kd9BVEdAlFRIVLktrT/kE/pGrXhNQLeZYhN/1fE/e3mVkRSaUUCyS9zxNvay
P6R4MLFAtVRAhEK5W3uDEEDhZmxd7MFXQL2adiy2FcI/7nPYQyCaWkAJXeib
nlfiP5oQx1vCr11AODfSliWS4z8L5vJWdkhgQEQ02JDyKKU/U7tSRsuxYUBW
Nqr5NvwXQGvYc07XOWNAqxmz4tD8yD/rBK1zp6dkQDyrJ71dhcI/OnmnsS40
ZkBMLwFh2o/oPxRl8rV1uWdA5r9dTSFOoj9WYFXXgCRpQD6X6e6GABBAZ6N5
EUOuakBl4AOPjda/P+D1tWjJHWxAJRcGgMx7AEApkLPYBqxtQMBfqKvpadw/
/KEBDwQzb0BF1yRgsMy3P5zhM7HiT3BA9afSX8LPAEAhlkfnnhVxQJxz3Tbw
E7A/WlLnKz3OcUBydTJKSy4gQFhKr1M7g3JAfM2StEnK4j8+5tcHlUdzQIPd
g9fsWak/2ImMytD+c0AOuZBNvzEEQFrRoRloxXRA6/L5IY9Usj+hVN9LX4h1
QB37IdN9yBNAnN+ojDg+dkD81nRSc+jWP38O01ltA3dARJrezNgU2D8WRYk1
hLt3QIuH7ZQ4XPY/crdn9PpveEDZ5Hl5IgO8P7bNpj/NM3lArOaUpWiJHUCu
63GZgep5QHKuC69Y7t8/jq2df5GwekCNwTfZwk26PyJ3VXSDaXtAk+FF221O
/D97fDVM1R58QPkNKcED5MA/vCV2sILjfED3CHsfEhciQLHWQiMSm31AqJo7
+Fl+4T+OK3Ai/WF+QHGD1X4CjbY/MLzFBEglf0BQmaJX4oPwP4ZUp/V0239A
vCaWPijcsj9iyHS5flCAQE4wYwEtoBFAW+pb/7OsgECwHOH52arRPzcq1zYZ
B4FApR1CoegGpT8HvII0LGmBQBYKUUGjCPY/sVF0ObDEgUDrDY+D1+i3P085
lgTiJ4JAQPbEaaVdFUDPPkzBQ4mCQOJmNKt47Mc/KUhIhRbkgkB9+j1DSoXA
P3ejdA+XRoNA2cLjrroY6z+fAuegiKKDQML+s5pWbqw/u7OJ+CcGhEDCaMvn
K9oHQLqCwEH3Z4RAfiHGrkl9uT+TVT2SN8OEQGyQ3jZeQhJAX3rqqCUmhUAW
mHb3vDHaPwWj3caEgoVAQwmnMaWLoj8Wlsf5/9+FQHz7zAWj7AVAb5fQiw==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$44007#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 9.045060142296718}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1311792, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1311792, 
                10245296594295525147080587039808895622068083522639735339968, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10245296594295525147080587039808895622068083522639735339968,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D68U5MJkTP7Px2Xq96N
0iZASkms7mLu6z9lmKjdRcg3QJbYdHulXgdAPfBd2rKqQUB7a2nqmUrBP3Fy
Kd9BVEdAjVBlCOzOiz/kE/pGrXhNQMikYCx5WOQ/e3mVkRSaUUA36s4OS7ql
P6R4MLFAtVRAgh4pUUbVAkDhZmxd7MFXQEcs+JP1p7Q/7nPYQyCaWkCA3hmQ
0bybP5oQx1vCr11Aj4voaF1T1j8L5vJWdkhgQEmTmNJmq5c/U7tSRsuxYUDh
QC+61zILQGvYc07XOWNANlXeRV6FvD/rBK1zp6dkQPpKnRzZOY4/OnmnsS40
ZkBqGYNexgTcPxRl8rV1uWdAGrPXsanCkT9WYFXXgCRpQCPDs1AcQAJAZ6N5
EUOuakADgnY+mzCyP+D1tWjJHWxAiEVPNouAtD8pkLPYBqxtQB2SzpwXNdA/
/KEBDwQzb0BEL82mpCuMP5zhM7HiT3BAcSLybDkt8z8hlkfnnhVxQOnAv0hm
bKI/WlLnKz3OcUDtC11khQMPQFhKr1M7g3JAV62yJmVv1T8+5tcHlUdzQDjD
QTz+sow/2ImMytD+c0D+qonG9gj3P1rRoRloxXRAUGdoy14ApT+hVN9LX4h1
QAVjnWaGjAZAnN+ojDg+dkARnbifnSLKP38O01ltA3dACoN5wumilT8WRYk1
hLt3QAGadjSSgek/crdn9PpveEB6IR0TPQOwP7bNpj/NM3lAJhGZ1XtLD0Cu
63GZgep5QNn5IBKtNtI/jq2df5GwekBpIw0DeniMPyJ3VXSDaXtAhwGgQ/ok
8D97fDVM1R58QEVSkIHYS7M/vCV2sILjfEBRO63iiDEMQLHWQiMSm31AjX9H
1tL00z+OK3Ai/WF+QPt5Dtf6C4w/MLzFBEglf0CrhSUu2NbiP4ZUp/V0239A
jFNyXCubpT9iyHS5flCAQJb5o+90GQRAW+pb/7OsgEB+2qYRpijEPzcq1zYZ
B4FAq87GuXNXjj8HvII0LGmBQP83Dc1NIuk/sVF0ObDEgUAnBpZnTlurP085
lgTiJ4JAWegmIwdVCEDPPkzBQ4mCQOa9vcD2Trs/KUhIhRbkgkBNCsimhIKN
P3ejdA+XRoNACocAh/7o3j+fAuegiKKDQBGOxwqvRaA/u7OJ+CcGhECzHDwH
+jT7P7qCwEH3Z4RAUn9NsIQnrT+TVT2SN8OEQEW0vxnr7co/X3rqqCUmhUDQ
4igJJuLNPwWj3caEgoVAIhkJ5rrfkD8Wlsf5/9+FQIL52zUjAvk/FP+/pw==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$44064#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 3.9118572890603387`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D68U5MJkTP7Px2Xq96N
0iZASkms7mLu6z9lmKjdRcg3QJbYdHulXgdAPfBd2rKqQUB7a2nqmUrBP3Fy
Kd9BVEdAjVBlCOzOiz/kE/pGrXhNQMikYCx5WOQ/e3mVkRSaUUA36s4OS7ql
P6R4MLFAtVRAgh4pUUbVAkDhZmxd7MFXQEcs+JP1p7Q/7nPYQyCaWkCA3hmQ
0bybP5oQx1vCr11Aj4voaF1T1j8L5vJWdkhgQEmTmNJmq5c/U7tSRsuxYUDh
QC+61zILQGvYc07XOWNANlXeRV6FvD/rBK1zp6dkQPpKnRzZOY4/OnmnsS40
ZkBqGYNexgTcPxRl8rV1uWdAGrPXsanCkT9WYFXXgCRpQCPDs1AcQAJAZ6N5
EUOuakADgnY+mzCyP+D1tWjJHWxAiEVPNouAtD8pkLPYBqxtQB2SzpwXNdA/
/KEBDwQzb0BEL82mpCuMP5zhM7HiT3BAcSLybDkt8z8hlkfnnhVxQOnAv0hm
bKI/WlLnKz3OcUDtC11khQMPQFhKr1M7g3JAV62yJmVv1T8+5tcHlUdzQDjD
QTz+sow/2ImMytD+c0D+qonG9gj3P1rRoRloxXRAUGdoy14ApT+hVN9LX4h1
QAVjnWaGjAZAnN+ojDg+dkARnbifnSLKP38O01ltA3dACoN5wumilT8WRYk1
hLt3QAGadjSSgek/crdn9PpveEB6IR0TPQOwP7bNpj/NM3lAJhGZ1XtLD0Cu
63GZgep5QNn5IBKtNtI/jq2df5GwekBpIw0DeniMPyJ3VXSDaXtAhwGgQ/ok
8D97fDVM1R58QEVSkIHYS7M/vCV2sILjfEBRO63iiDEMQLHWQiMSm31AjX9H
1tL00z+OK3Ai/WF+QPt5Dtf6C4w/MLzFBEglf0CrhSUu2NbiP4ZUp/V0239A
jFNyXCubpT9iyHS5flCAQJb5o+90GQRAW+pb/7OsgEB+2qYRpijEPzcq1zYZ
B4FAq87GuXNXjj8HvII0LGmBQP83Dc1NIuk/sVF0ObDEgUAnBpZnTlurP085
lgTiJ4JAWegmIwdVCEDPPkzBQ4mCQOa9vcD2Trs/KUhIhRbkgkBNCsimhIKN
P3ejdA+XRoNACocAh/7o3j+fAuegiKKDQBGOxwqvRaA/u7OJ+CcGhECzHDwH
+jT7P7qCwEH3Z4RAUn9NsIQnrT+TVT2SN8OEQEW0vxnr7co/X3rqqCUmhUDQ
4igJJuLNPwWj3caEgoVAIhkJ5rrfkD8Wlsf5/9+FQIL52zUjAvk/FP+/pw==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$44064#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 3.9118572890603387`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1311792, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1311792, 
                10245296594295525147080587039808895622086530266713444922544, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10245296594295525147080587039808895622086530266713444922544,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          
          DynamicModuleBox[{
           Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
           TemplateBox[{
             TemplateBox[{
               PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAwO01mk+XJUAatw90H+EaQB2Xq96N
0iZA6Uj6biJ39j9lmKjdRcg3QJeX+plAzRJAPfBd2rKqQUAtoPMSctfLP3Fy
Kd9BVEdAsOhyx6CWZD/kE/pGrXhNQKxuIKOtY/A/e3mVkRSaUUCJBlK+LdSw
P6R4MLFAtVRArH0siahGDkDhZmxd7MFXQKWgErRzlMA/7nPYQyCaWkC/AqTj
r6FiP5oQx1vCr11AQPj4t+n74T8L5vJWdkhgQND9LhC0xJk/U7tSRsuxYUBq
rS5AY2kUQGvYc07XOWNASUIx6RPzxj/rBK1zp6dkQI9/GkLOplo/OnmnsS40
ZkA4P3VR+ZHmPxRl8rV1uWdADs+LXvqogz9WYFXXgCRpQAC4b30HWw1AZ6N5
EUOuakCtMZvlYyO9P+D1tWjJHWxAU26qCT6eej8pkLPYBqxtQIASf5EsHNo/
/KEBDwQzb0BtCQ5ajtRdP5zhM7HiT3BAf/fHvzLl/j8hlkfnnhVxQMBc8xCg
las/WlLnKz3OcUC1DxH9znkKQFhKr1M7g3JA2jRv8UJE4T8+5tcHlUdzQEel
6/nl52g/2ImMytD+c0AAILyKKo4CQFrRoRloxXRAMkB2COEtsD+hVN9LX4h1
QJWT944o8xFAnN+ojDg+dkBxEh566AzVP38O01ltA3dANKTSXyygXj8WRYk1
hLt3QFq7XKfki/Q/crdn9PpveEAwft3144+5P7bNpj/NM3lAo/Lw4Ro9EUCu
63GZgep5QBGSJn62V90/jq2df5GwekBBhcmRQLhcPyJ3VXSDaXtAtSFc4qAC
+j97fDVM1R58QCKoJlX78b4/vCV2sILjfEBfpa5kqKgAQLHWQiMSm31AEstg
TkgT4D+OK3Ai/WF+QKm74E5sjV4/MLzFBEglf0Ce38RrEFruP4ZUp/V0239A
7eZ81oG4sD9iyHS5flCAQDhpjF1TIBBAW+pb/7OsgEAxKNrizTvQPzcq1zYZ
B4FA1tGyLvnZcT8HvII0LGmBQGfbLI4mP/Q/sVF0ObDEgUBRFAqkD621P085
lgTiJ4JAxfZaZ8ggE0DPPkzBQ4mCQIVBhvc/+MU/KUhIhRbkgkCCxfCL+hZb
P3ejdA+XRoNAiHfKc0Xm6D+fAuegiKKDQM/B2q1mT6c/u7OJ+CcGhEAxb4nB
AOoFQLqCwEH3Z4RAZg8Cf2kutz+TVT2SN8OEQNYX+ppbtpM/X3rqqCUmhUD5
b4iXDhLYPwWj3caEgoVAE0+aNPsgfz8Wlsf5/9+FQPRWdjr1JARAWCvGLg==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$44121#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 6.71984654756468}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAwO01mk+XJUAatw90H+EaQB2Xq96N
0iZA6Uj6biJ39j9lmKjdRcg3QJeX+plAzRJAPfBd2rKqQUAtoPMSctfLP3Fy
Kd9BVEdAsOhyx6CWZD/kE/pGrXhNQKxuIKOtY/A/e3mVkRSaUUCJBlK+LdSw
P6R4MLFAtVRArH0siahGDkDhZmxd7MFXQKWgErRzlMA/7nPYQyCaWkC/AqTj
r6FiP5oQx1vCr11AQPj4t+n74T8L5vJWdkhgQND9LhC0xJk/U7tSRsuxYUBq
rS5AY2kUQGvYc07XOWNASUIx6RPzxj/rBK1zp6dkQI9/GkLOplo/OnmnsS40
ZkA4P3VR+ZHmPxRl8rV1uWdADs+LXvqogz9WYFXXgCRpQAC4b30HWw1AZ6N5
EUOuakCtMZvlYyO9P+D1tWjJHWxAU26qCT6eej8pkLPYBqxtQIASf5EsHNo/
/KEBDwQzb0BtCQ5ajtRdP5zhM7HiT3BAf/fHvzLl/j8hlkfnnhVxQMBc8xCg
las/WlLnKz3OcUC1DxH9znkKQFhKr1M7g3JA2jRv8UJE4T8+5tcHlUdzQEel
6/nl52g/2ImMytD+c0AAILyKKo4CQFrRoRloxXRAMkB2COEtsD+hVN9LX4h1
QJWT944o8xFAnN+ojDg+dkBxEh566AzVP38O01ltA3dANKTSXyygXj8WRYk1
hLt3QFq7XKfki/Q/crdn9PpveEAwft3144+5P7bNpj/NM3lAo/Lw4Ro9EUCu
63GZgep5QBGSJn62V90/jq2df5GwekBBhcmRQLhcPyJ3VXSDaXtAtSFc4qAC
+j97fDVM1R58QCKoJlX78b4/vCV2sILjfEBfpa5kqKgAQLHWQiMSm31AEstg
TkgT4D+OK3Ai/WF+QKm74E5sjV4/MLzFBEglf0Ce38RrEFruP4ZUp/V0239A
7eZ81oG4sD9iyHS5flCAQDhpjF1TIBBAW+pb/7OsgEAxKNrizTvQPzcq1zYZ
B4FA1tGyLvnZcT8HvII0LGmBQGfbLI4mP/Q/sVF0ObDEgUBRFAqkD621P085
lgTiJ4JAxfZaZ8ggE0DPPkzBQ4mCQIVBhvc/+MU/KUhIhRbkgkCCxfCL+hZb
P3ejdA+XRoNAiHfKc0Xm6D+fAuegiKKDQM/B2q1mT6c/u7OJ+CcGhEAxb4nB
AOoFQLqCwEH3Z4RAZg8Cf2kutz+TVT2SN8OEQNYX+ppbtpM/X3rqqCUmhUD5
b4iXDhLYPwWj3caEgoVAE0+aNPsgfz8Wlsf5/9+FQPRWdjr1JARAWCvGLg==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$44121#1"]& ]}}, {}}, {
                    DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{{}, {}}, {{}, {}}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 700.}, {0., 6.71984654756468}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   BaselinePosition -> {1, 1}]}, 
                Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
              "SummaryPanel"], 
             ButtonBox[
              DynamicBox[
               ToBoxes[
                If[
                 
                 Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                  "Local"], 
                 Style[
                 "This object cannot be used as input.", "SummaryEmbed"], 
                 BoxForm`EmbedSummaryLabel[InterpolatingFunction, 1311792, 
                  Dynamic[Typeset`embedState$$], Automatic]], StandardForm]], 
              ButtonFunction :> 
              BoxForm`EmbedSummaryInterpretation[
               "Choose", InterpolatingFunction, 1311792, 
                10245296594295525147080587039808895622104977010787154418720, 
                EvaluationBox[], 
                Dynamic[Typeset`embedState$$], StandardForm, 
                ElisionsDump`embedSummaryBoxes], DefaultBaseStyle -> 
              "SummaryEmbedButton", ImageSize -> Inherited, 
              BaseStyle -> {"DialogStyle"}, Enabled -> Dynamic[
                
                And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
                 "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
              Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
            "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      BoxID -> 10245296594295525147080587039808895622104977010787154418720,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}, 3.835975830781477*^9, 3.840797425852606*^9, 
   3.840797466708212*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"ae59595f-9cb3-4770-a222-a3c79f760cec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "30"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829289919956046*^9, 3.829289920125574*^9}, {
   3.829292552469584*^9, 3.8292926098919*^9}, {3.829292706618535*^9, 
   3.82929275636156*^9}, 3.8292967690075207`*^9, {3.82929683538181*^9, 
   3.829296912209985*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"85fca892-a36d-4286-bff9-1bba7b96e5d6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8g==
          "]], 
         LineBox[CompressedData["
1:eJw9lGs01Hkch6exuVam01RqXHZMixindUlR/r+vLjPzn6vjlmrksqhlGUNF
LmGPlVNmoiFpp11RibGoTJtuY7c1aWNTuWQ2UcYlppgiJ8S2+2I/5zznefO8
/lAjRH5RRAKBwPvMvzZX97Tm3mQC4b9hkOTp93ZTBxOIx3at2NftBWwrWWrG
OBPy3bJT2na7wJeLOgzvmbKgMmA60V5KgQ9asszYjgX1RgkTxJk3qLUl0Ibv
w4KUQae2+uQfUXnNaYVMyIIlFRo/16u70ZGC7k09ySx4cWwVw23GCfketPjD
WsaCr7uXE5vNzJBd8G7fyFoWiAaarr4RT2JzW84+r3rAAv4b58ky6yHsqc3f
B8a1LAhe1XG4WNeHVRtYTrkTcOi0SpCZGPViWcPC7FQKDpROHz/7O31Y0MNz
S5s8cMgl1W4fWaXF6HUvShf74aDA+36tz9dhRJmNHScOh8Wjd5VlHh+wnsNh
VwvycKinPLjxKp+I6vecx7oqcPCU1c21CEkoF3v1J0WFw2ua9ctDa62R0Ja2
K1yDw+rkqLONp+nI1TBy4NIUDu6iKof2R1uQ8egFkY7EhpnGqLY7xzmor21w
1oXOhhvnX3UNlO9F16/Y5SUz2fBUHmRZtxCL8ov3k+9EsIEQXR2VK01HEUcu
lxGPskFhvi1NvF2CNoe8prNK2VDeJcbmyT+hZT6OjZIGNlwbi5pImK1Fg+ti
dz59xAatShRiOK5Ct41rHluMsaHVhBR+ObEdndLpQvYZcsCp8YPst8F+dKDd
ebSCyoGjPrGpEm89whriD7/eyoHntPABE/9FQD5TR9wQzIF3I0fDk16SYCxt
QnowiQONE9WJwxQb+D3UhXJTygG+untIudkRzmxPrFyo4gCNUaiZL3GDePtr
bjubOaCPxLVeP3vCDrNJ1fF+Dpi9L3Ixz/aGtePu3PbZz/3q9e3KOm/QPzn0
bOVqLoTmyk+mGm8GteoXqsKdC1wD56iMhw4grxmMAT8uMCOLvjEdMQJxqVVD
p4gL50rcqEMFtxAjN/BTjIQLfS7S9DpNDLJMkjAICi7g2nuTrpg70oc2nyxu
4QLa1hVITjdHau6nZ45DXPh4y7vGdvkUJvfcaNtkwIOtI1ndGSWDmNguLjaQ
ygOpRPQuevYFxlhxsWEU40HZsZRhr+nnmCWh91OmkAeFXV9R6Zf7Mb2OzFyZ
yoOsVPMnydlDmLqHW1BdwgP5Idx0ZJMek6tzepCSBwSPgOnc2TlMfO22becT
HvwVdGK62dMUMcomY2MmeHC3UnvFkLQGWUroyoWlfHAOymPW6B2Q/kjkfJET
H7ZmknvDij2ROlrOdMT5kEdxjXV+zEZy/44CVTQfhCEbdoVJhEgMSzQBOXzo
kp/Iib8djxjOO2ij5/kg5/SmiRVZyHJt+neZKj4QW4cTM+mnkN6wQUnu5YPJ
6QCDkv4KpH4/Nl81w4eIqTKP5feVSN5PYyELAUxcqg317b2PxG17Czs2CqA2
JfPl2zUaxLgp03zrLwDjZaTSc2E6ZFn5kLaQIIAxe8ePrvvnkV5mEFckFQA3
o8WBesIc1Flbrq+vEcCFZVkWtk3WII9LWrj7QACe7TkpDl84QeIeBStgWAAX
v0+zOlnoDhcq9C0Hib6w17482P++F1j9MLdujuT7/3/9A65gLWw=
          "]], 
         LineBox[CompressedData["
1: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
Nnxm8gRwFWMwdCJDEz3Y///H/wBRQECA
          "]], 
         LineBox[CompressedData["
1:eJw9lGlQU2cYhSHIok0pi16FgiMElLqAQA1R4H6vBFkGq2Ok4W5VMYBaEQto
tFq3gESUEYo1A4K1bEqhCJhytVMGRaAKytIAt5YEcYhRpEERISxWre2Pnpkz
z5yZ5/dx275XEs8zMzOLet9/mZ9tlxitJMDsv+AwfDUzOPY8AQb/sWzLxYHQ
mNnNjyklQGdsXxjevhLy4lx169UEEGVlgfElGHyFdlSG3CbARjZ90a2/D4U7
1x4S/U5An4vk5dZlCrRwYibS+xEBReJ1FotOi5GpM9TJ4wUBvFblCo5YgFSN
3nY9bwhIP/HmeJL337hQvcA6nU9Cp2uZqfPyM5wr5b31/5iEqh09sU+uPcLl
KuO4/hMS6rbSv+o4HY6d4v46JyKhLWtYtxkbwNmvbw2Kw0mgh+Vvso16XLq7
4s9Xn5MQdXD+mm2rRnAT811XSRwJAuuJep+GSVy14eidzakkRN9+ZbTWz0JC
2NlgoSDhrKF1XHfCEXG+kjp1Dgm1moNRbR8KkFwQ9JPsEgnIZcshdbA/wuYt
LnG8SkLhjgMpD4fEiLWyu9BUT4LEXisbnYxG0qnpnNR7JIRHJ+XJmQRkeqZX
CvpIcAt0n9huexCptO1Hu4dImGJTe+7ZnEbC9uv70yZJyPBK8B2JKERcQ1Gi
vxUFFUzKlbf3ryJ5zRmZfi4FidvuZk7fvYWw4v3UOQEFrx80D5wI1yD23NZN
Yj8KcufctES9eiQ9GRnxCiiQ/bZEWrdxApnk/qhkIwV3ufKVZfFWoNrpKty8
hQLlQCGVcQQDIWW9wmIPBR36VebmXR7ARb0UqA9T4CzqmxNk4QvyYK2z7DQF
I/aGz9Y9DgDMp8XeMZ+CmeQDN3XaIGAXVds0XaHAkvYB+btgkDrkv0thKcjQ
rY8YbBaBySLN5N5CgdWPnoW9HUtBNZE4oummwHE0JbCD44PwqfSxYpACbSwv
9UZhM+IegNbvJQW21qsLngSkIHnbUs3gOwrKC+zSHsasRlj93NZcWxrMrWzL
QrMcEFv19maIKw1OvErl2m8ncemlIXZsGQ1r7eeFRM1/iptyNFXFa2hwKUs/
eb1/AFcp6kslkTQM1S/fI+rQ4cJ9lwt4BA3x1bXnz8x/hHPxObnXEmiwqfjg
y32rDLg85lDm9v002PNNRzubX+BYZNxxh3Qaqn2Tp0dhBmfXbDhwO5cG7Rl9
wTKZNZIuFyWlFNGguJyek8/HkMnVPd69hoafi5Z27avxRKqP+Iym4b0/WOq8
YpYQCc1NEkU7DXeMLjMT/WGIGxuI9NPREFHeknPRk0Dyx60wOExD6BfhPjfu
70IYpw7InaYhrEHNZrcdRuydi94hNgzsopXd653PIukvSs8xjIGqXoM4jfkB
mSqSXYo9GRCMFyRHa2qRqpB2lHzKwP3xp4ZvEpuQ8Oy6OTwxA6e+T7Ac9ehF
3DEf82ubGOh6nRrU/+wJkic7TcVue7/DGuouZE0hTGbxwn4vA8+NrV49xbOB
jR4xNB5h4Jgi6Lk4yQmkYX/okrMYaMlX76y0WwKTAY3dbgUMjGTJqm1JP0jP
7Md6yxngV+XlLi8SgYN2mjzFMuC1uzE0ziYYAo2zZk82Mf//0z8ZICiT
          "]], 
         LineBox[CompressedData["
1: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
fwPzlSwh
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA9svIZd6aYkAAAAAAAAA+QOSCdIGH
oWJA6ZyP5bpcOkDhnVm4dqhiQAob3rIPYTBA3rg+72WvYkBvPk+oZwcYQNvT
IyZVtmJAsQ+1g+9c5D/Y7ghdRL1iQJ36Ic5cF5E/1QnukzPEYkD8m6KPEM9R
P9Ik08oiy2JAJrU0Z6zlJD/PP7gBEtJiQGZI1lyOlwU/zFqdOAHZYkBPN13h
rF/xPsl1gm/w32JAcC00UzLt4z7GkGem3+ZiQEvXjlwHW94+w6tM3c7tYkB2
LcHLnv/cPsDGMRS+9GJAocACJr6U4D694RZLrftiQIJC1hz72uU+uvz7gZwC
Y0As5SVzixrwPrcX4biLCWNA09AAzU7j+T60MsbvehBjQARyvV4YQgY/sU2r
JmoXY0DWQ+VFWicUP65okF1ZHmNAuk/OXCb7Ij+rg3WUSCVjQB2Ri0xYajI/
qJ5ayzcsY0An2X51OERCP6W5PwInM2NACU2NvqBqUj+i1CQ5FjpjQDSdu1ZQ
ymI/n+8JcAVBY0CGOSLTk1VzP5wK76b0R2NAPVjJij4DhD+ZJdTd405jQIVe
I0hwzJQ/lkC5FNNVY0Ci/ZA2w6ulP5NbnkvCXGNARrsqp0qctj+QdoOCsWNj
QGVl/kr2l8c/jZFouaBqY0AiSj8ySJTYP4qsTfCPcWNAjJeasnl76T+HxzIn
f3hjQKnZjmqdHvo/hOIXXm5/Y0AqZdSK0SEKQIH9/JRdhmNAGsqWYyf1GEB+
GOLLTI1jQBmsMyb2ByZAejPHAjyUY0BZUEas21gxQHdOrDkrm2NA/IltxUjW
N0DYdGGE96FjQExcP4i4kDxAiF2hqBCoY0AAAAAAAAA+QH/JJAI=
          "]], 
         LineBox[CompressedData["
1:eJw9lHs01Gkcxmew6ljlstRiiexEKCOpaP3er0ql3CNjQvJ7X2y169JkXToh
alnU1FoJZc4pZjPlkhGFiVK71ZpQOgy5NthyS6NkqbX7R885n/P8/znPeUxC
IryJEoPB8Fjgvy7q0RzWvUoD4/9QkN/4WI9fRoOIyw4XXXOAueEkHHCThrWX
eCPbDW0gaOmGMvN6Gsz3a2fEDOnDnfWvPyju0XBO0BFiEjSKjPcJtjU+oqHd
5t3PipcX0Ilk3zNZrTTUNjXpJD7koEGhmsy/g4Yt9EZ+lZ8l2ia98+2qXhqy
WQkjA1fUULGCFzElp6G02dXS4TsFtcjA4rZklIboNVFTXm/kVLhTr0rGWxpa
OutftZb1Uo/Csj38Zmng3jhnavy4m7I87ZJnysRw6OnrMXlEL5Up/vhyYhEG
jpVuSGvXIDUmq7SuW4oBcQP0npmNUu7M7+PTdDFU+og+feicpsrNjO77fINB
KAobcLVVQlruTzVMTDGUc1QmppQ0UTQvjTu2GsPtH2OqTx0wRM/yHItusTHE
lnTuefHMEtk1Tk2c3IhB6TV36yRzM8oZFjp4UxgEvb8UQ+ku9H5J4EkjZwyL
3QUrMqu4iLNeu+XVbgwbYq/e2/3pILrN/UO/2hvD6eD2JNu4BGSQfIyk+GMI
n706Q5ZnomNCm3KPYAwpO41mcloKUE/z0KxBGIaNy6KtnS5eR0iR7zzyAwb+
rA9r5qgECfS9+GIeBolo3sLQ6wliOql2JSVgOKexSCxb2odCwmpZbicwOBzf
M1oVMImasiIj9dIxNEm8eJ4RDGCJWbXyMxj8351vqF6sCadksi9u5GCov6Bf
YltiCCMMvufxixguVnkJZqxXg4uZc/6uKxhq4nwu+yjbQonbrHyZCMNW37+6
npvaw5e8MvZgBYYL5h1Dfzo7wuE8nFBWg0EUnyy+JncEaYPeg4Q7GFZuMito
e7UJrIelmjsfYMgJYR/In7MC/pLUfTrNGHLVlVkdoV/BlK19cd9TDEHxylKH
eBnawx2fvCbDsKP4Uc1zvzQkTrq8Oa4fQ8b+bg1RpBvSFXJOOY9gqKA9naSt
K1FM85JWrYkFf4deZrJPqqCOt3cNeqYX9jMXGCdRf0PZ68eGlsxhWMdU7evp
HaTyYE1FjDKB8r7B6KyDPdRc6MA/W9QIdDJeFBgquqnArPPbNbQItK+7kjge
2kdJKl3Pdi0noJyqUVm7V04Zy5jdQiMCFe659k3T41Qyo3oVj0VgrTY7ze6n
GWpg1eEosCKgqE1heJeooG1uJnXqtgT85oV+OcHaqOjIc9VOewKVbQpvC4YJ
Us3L8CoCAi63PIM469kovAEKonYQiFXr/yTLRejh0PSQozsBI7sdfvXeHujg
kxHjS74Ezn7EceZlwUi9pov7MYBAq84GnkwRha4LpNlBmEC0Z2fLw6MpyD29
USo5RGCMNbpCh/0bmogSL15xhID+k/G40pVCxOcKtyTGE9D4u1Dq4noL2WzN
O9abTCDVV9x+9/fHqM0y6yZKJ3Cf2a9bYNGDjugkTRbyCVSrOaqm+04inflo
C0YugcCv3f2tMBOq5AQHFxL49U2+hV6XFuyVci41FBNoG96X3m5oAu9v7u4w
LiXQVaLrEBm4BnILKe3kqgUf1fMFqRI7sE+zce2vI6BHlyWqZ2+GKjO95XX3
yOd/+xfqvkTO
          "]], 
         LineBox[CompressedData["
1:eJw9lHtUzGkcxifGZZVMhTpHlDEaXQyTJJd+73c0ilSsVSRUmt/7lpQklbG2
TSOZbLGbW0NHM3TBZsqOXIrUGF02xyoHIzW3bUlZOppsVm27f+xzznOePz7n
POf565m9Y/cGegyDwQga9b9ZfchNcFNNA+M/UXAg3L6uuIWGtJeLvJMEy8Fx
5aQhizYazqhDGGvd+VDr9mXRDi0Nhen5/AG+A2y3e59Qr6dhYKvHZYVSh0Y+
G0rZb2g4USF1iZh8BF0wPdUfek+DlUpw6/m1ACRobZxhHKTBMsa6cGWiIzKo
7oT6jdBA77e41eEwQmUVVeQrxmO4mhIktua8pThHipvGWmO4ybNOXTJbTz3Y
XTBWNA1D343ygOi+DgpvPuKrdsTA8pHO/qLspCYIxGkcDgbPGA8fap+RKnNN
qJS4YxBKzMyKb3qpNbZRb02eGCr880u/f2emeoY2zF21DINCq5/GZzNRrnFV
5CUBhsjW2CuvW2yRx68+Z8etwaBuKJS8iWSj1l/c2+j1GJ4rhaWMU54o8fys
yZpNGCoV6Ofp/n5oSrZNgEskBpu9zLLu8I1ImcjMzMYYUmPNwQfVNPp60+Dt
7gQMNBWWlH8wDfWjno/++0a5mB3plnkU/TTvFa/0Www1TVk10CpDXjaPYydI
MPCKKktPRVWgp3/Vy0kuhg+bU9p3nKtDqQZVx8MfMQzd1Rp0Lk+QfUvZ9HmF
GPKd5Qu9Gozo5nXZ+pxiDFXRc47fCxlA4efypK/LMDi1uJW+Sx0PQ5JM9Wol
hmox1ngXTQdZQspwWTWG7pi8KVfMHFgRRny+uoehxEP8qIbNh1fUluQ4DQaV
KCujb7wPfMcNvtrUioGvf3B6Zv8KcGJBt+tTDKIFefZn+32h7pOns7QDg9Zp
Z052sg9E6+du6TFisIpgKbfqXGFMs0NB4FsMfp3co4HJk0BRZfnocj+GPZWP
yo8P1iGhbHiC5RCGw2sveJWs3Y1+z/ogiLcgoHslcso8742yd5kOtEwkICkP
5XAtbRA39JnKnUWgamOy8cUSM9Xo2/xnrj2BeOvztvSqbirOpda1dxaBFZ7N
J5lbu6hJU5QxQS4E0mUMy2faDkrOrfHjzSewPack6hxHRy2FxjksLwIaQ2Lq
vU4T9Xhz+9j+ZQRkvOE19cveUbF7dMY2AYEAh/m6ob5BiiHtbVCtJhChuf7A
LoiJzsg/KU6vI8DXjiT4z7NFC+8wJfvDCFzQ1nNre5zRwzaWKGIbgWirWc79
sBBt73UU+ooI5MUvrbMyI2RmunKc4gmkJocdKxlch/JmLmZaJBO4/1K+pH5B
FHLxFpgM6aN7NZ8DudIkdDckWK3OIODGt9vbb5GJQkn4xZJsAnSYuOjS8ROo
N4OW5PxAQCStUi3ly5HkzB7RzgIC3XF999d1VSHHyoPCIBmB317ebZtxqgFd
bzrK4ckJTLtdOdU9pB0FGk4yWeUE2Irg0I+fTMgwVGz6cI2AqXFQr0gbQGK7
CnXbjdG+XTdS4o6NA1uP2xdVtQRe2G3Quj6eCpeFGslpNYEEH++M3GY2CLY9
Ee1vIcDZO7GrqYgHz/d1CiOeEPj7kudwwB+LISmvh+P7goA2vbhAH7UcYh2g
ur2L/P9X/wDnSipb
          "]], 
         LineBox[CompressedData["
1:eJw9VXk41XkfveKSoSG8umPsYxn7FiF+348ppGQpohu66PL7/ehmqcYySnKz
ZKlsV69tmuQ2pZG6JCLriyZLCSNkqZus75UyIV7v+8d7nuc857/zxznneY5a
wKlDzC0UCiV8k//Vgv6ZwcyxYKD8DxiUNGx5R3kfDBLb4v9QdrMBy8FvWyfm
gmGXwYApQ2EndP9bobRlKRiqzn99HmmsDkHi2uxbq8FA5wmUpAdW0bqaGTN5
Cw6Ou3sZfuHlKNca2ZPiOJjWiQ14qDGRweEDms7SONw0+Y4Rl2uGWkK8qIY7
cDgbKaI6yJdGPomB76SUcahX+iGiNmoZWyo41SrQwKHLMyTCqe89lsaLLX2p
hwNrpfq0PD6GaXQlsXmmOFDFMpLC+oexWn4WM88KB9qBxPsnO0axQxvF9tGA
w9Eh1/LvDSax6R13NY854mBnnSuRtDKNJRg/otq64ODzkRPnO7aEKTi1vFP2
xGGjYGF4hSmEKv17Wik+OHSwitm1vG+RU8xw6UQADtuaaUea3RXR2LUpdguB
w8QDq+6uDV0UdWeJeSsMhyeBdtpXT1gj6RaKQ/LPODTceK9XvW8/KhuW1CLP
4XBQTEdkJZmOsE80UWc2Dv77E/HqbSGof5sm3yANh8yoampZWyxiaZm0SWVt
5te+EP13WRoSRba3BPk4wNfe1LfcQlTk5XTpZQkOOhayWmpN95B5mGcQrwwH
oxKemexsA/oz2d8h7x4OxMu84/oZPejErye1onk4vJaobuOqjKO1mmjRY3U4
1LIMMxZyBCj7BZtv04yDjB0jLqdNCPRnrrYpd+KQtXJNXjZoOzQLF92i9G7m
0zDLc5FWBbri75cmBjb7FOyRzt6qB4s7q4JaRnEIpWizUuR3QqcUxcKaj8Px
p0+FULQ1/DrtRK2Yw6Hxi3+78rotRLVm9Wl+wuH2p0Py1EgbcCsZ+e2fazhU
f3RQtj1nBtqx2pHbRQh4bE9RdBRXgXXP8J+SJAjI0U0xChedR/3Gtdu/yhAw
ksvNtviQhcolqOMRCgQIxUT/o7jUDSXyXSqm1Ahoipzz3FOuhnwaOef9dAjQ
KbKTjG8SQmYFEy59xgQIpruGY83msG9+1lfeb0lAId3VVKhiHJtwPzvXgAiI
EVWiesiMYDX6T+vMHQkYdmcLBj1HsSti36TdcSGgu7VYeFhqEsMnDh9TO0IA
EUbxesudweBJoW6eLwHUhzauI/hnbAfn/RdJJgEfXvlpxDQIo/kIk46EUAIc
vHpdi1JlUNvBWM7fkZt+ft7xfFBHhT+2BrNiCbjSEfhYpcAUnRaW2vU2gQB+
YVdY69k9yHnUW5SeSsB0hA+bUueBfqi58ar7KgE7jb/jsBhBaCVr9qZ9PgHx
h1FWjl8UesGyOF1bQoANXe5swYNUdNspfo8Jl4BHF+jz4ccLUbxGp0zZHwSw
HjdW+ZtUIO8N2QnFagKMDVCi22gjMhryvX+tnoDkuN4tcZUvkSivLH5rGwH3
dP+skCh+h0YzBa7nnhMQp3i8ZyVqGVWRu1WW+jb9eYEoZHArpNuz54lhAnp0
Qg2Hv9DghGr3kzeTBBzsty6dndYCm1VauucMAUpDgj4LhinI9gf4PFskQPmA
ne+AhhVMV9zVs1shIBXTzbZLtIWmy59XqoRISJ09xfntlC3kB0GnvjgJLx64
coqsLSDMLjX/hjQJrnvP6DzI0oB9in04jUZC1tCjrYec1pHKspJlhgq5ua90
V71LXPS5N1hMRJuE2dXx9ElnP9R1935/tCEJHTK7mEn/0kWlSaulC+YknJDk
vwqLFUO/BNifYdqSoCm3bsSmCzAP28y9r/eScKFaS++yxySmT/tL1t2ZhN0c
njetfgQT/qg+2XaYBFXf2QDTmBFs6Hlopc0xEpjRtUf5z8axSm7VhcoAEtq5
BQfGxT9gKRcp7j+SJChVOnasdX/EGH77VYvCSZAdljtqpCWELK2yF2SjSSh9
reP6sFUKScmN1qfEk8AwSKi7tqyM+PPaGRtJJLxhzh9x8zJC9R3hvmcySVhx
tr+udRBQzs1a/ZlcEtTbr8Sed3ZHoeepa4wiEjyv9gVOFQWgvXTXZ/2lJHDm
jsbetj2NvjfPv+5cTsLNp2lv0rUuoUWpSaLpIQm8O4vS694c1Dmtb2VZR8I+
cxeLhFe/I9FeB8XLzSS4D3Hdlg2foJ+qGRsjnSQkX1Gyxmu60bnCmAnjFyQs
crzlREzGUc3F7NaLf5FAP8mylo1dREvEPW7/GAlFITUmi3HCYOzWfllnigRz
y2QNx0ZZCLWYYP2yQEIPiiioua4OXMU19+7PJKxOG24wLI3g7RZ5c/V1ErSl
mZ+m8ixA5YMR7Qw1BB6q3Y3o3WEDeZkpCmqSIf//v/8ADUkxAw==
          "]], 
         LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAxvwYAP8bbEAAAAAAAAA+QDb8IbEV
I2xAzqbbILnTOUBy4juUaCpsQME3giOy0S1ArshVd7sxbECq6puyRzcSQOqu
b1oOOWxARnLJ84Fh0T8mlYk9YUBsQEypBAejOHs/YXujILRHbEDE9i2b/8xA
P5xhvQMHT2xAoKpEEDOjFj/YR9fmWVZsQLE89tvv7fo+FC7xyaxdbEBEGhIb
xAHpPlAUC63/ZGxAHwmqfRyE4D6M+iSQUmxsQPW2acmQ0Nw+x+A+c6VzbEAm
W1ullkbfPgLHWFb4emxAEYaAVk8i5D4+rXI5S4JsQNAt9sUKmO0+epOMHJ6J
bECPUojEFhb4PrZ5pv/wkGxAzS908J8xBT/oj9mIxZdsQAN1onaQ8BI/GqYM
EpqebEA1veFBdpohP0y8P5tupWxAA8IB1CXbMD9/0nIkQ6xsQPljlCRXgUA/
suilrRezbEADI7iNX25QP+T+2DbsuWxAWhTcqLGOYD8WFQzAwMBsQK/IJ1St
1HA/SCs/SZXHbEDSGNVd9zaBP3pBctJpzmxAW3UE17eukT+tV6VbPtVsQMQg
8r2lNqI/4G3Y5BLcbED9HnVXSsqyPxKEC27n4mxANW7QPcZkwz9Emj73u+ls
QLr1Yobh/tM/drBxgJDwbEAC15Mr24rkP6jGpAll92xAJg8oxBbs9D/b3NeS
Of5sQHsUWgjZ6QRADvMKHA4FbUDVfw3E2yUUQEAJPqXiC21A4QKL1G8xIkBy
H3EutxJtQKDA6pplwS1ApDWkt4sZbUAPqNl/OW41QNZL10BgIG1AMc+v9KQD
O0Bs757NJydtQAAAAAAAAD5AHaEcCA==
          "]], 
         LineBox[CompressedData["
1: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
YkmmLLDp+e7477tWwH2hnU+zYP1/v/oHQExRcQ==
          "]], 
         LineBox[CompressedData["
1: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

          "]], 
         LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAk9eup2ZVc0AAAAAAAAA+QGSzC9Oe
WHNAi79jkwcZO0BmNuQ2DVxzQNhMaeH/uzFAaLm8mntfc0DeeYMEl34cQGo8
lf7pYnNAMKKGaSSc7z9rv21iWGZzQK7vRNi5XJw/bEJGxsZpc0CnwTOyBc5Z
P27FHio1bXNAYuJOteayKz9wSPeNo3BzQOrh1XgDlwo/csvP8RF0c0C7YmFH
aA/0PnROqFWAd3NA38P9eay85T510YC57npzQOduc0dQf98+dlRZHV1+c0A8
TlyGDs3cPnjXMYHLgXNA1oPiXl+z3z56WgrlOYVzQOXtaK3HNeQ+fN3iSKiI
c0A3fHYdTu/sPn5gu6wWjHNAVJ0oUGKu9j5/45MQhY9zQGwWHl9yFAM/gGZs
dPOSc0ANV7UTBfMQP4LpRNhhlnNAfE/TQXFlHz+EbB080JlzQINZCx3sAi4/
hu/1nz6dc0AMdAOxFGE9P4hyzgOtoHNAHfj8K2dFTT+J9aZnG6RzQBg4TcQ/
il0/qlkew9Onc0BcXyRlcvZvP8y9lR6Mq3NAMv/XQ/prgT/uIQ16RK9zQIb7
tBpzFpM/EIaE1fyyc0BUYZhXmPqkPzLq+zC1tnNAAPMGjEYYtz9TTnOMbbpz
QOeOEwAbbck/dLLq5yW+c0DZqcjFmO7bP5YWYkPewXNAj17VTr177j+4etme
lsVzQPEZd2qFXgBA2d5Q+k7Jc0DJX/IJA/oQQPpCyFUHzXNAXhz6Egt3IEAc
pz+xv9BzQOas+ZfPmixAPgu3DHjUc0AfuMe92Gw1QF9vLmgw2HNAy/PYxa5n
O0C+dHx4rdtzQAAAAAAAAD5A17cicQ==
          "]], 
         LineBox[CompressedData["
1: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
QDXNtMN3ifz/H/sP4WNnHw==
          "]], 
         LineBox[CompressedData["
1:eJw9lH001HkUxieiSBm0arUxo5chSs1UWPy+d1kprTJYUQoz46UiTZM7mrbE
hJKTQuSl1U5jtWyJsiVadnQoQ282qhlt0wtbyYqJSmWn/WPvOfc8fzz/PPc5
n3OZvISAKD0ajfadbj8rP7k6Sfs2EWj/DQU+a5UJVh8S4dmweP5PV9zAkuts
lzqeCIemO5ptMeDAs4BTj57rIQy9zq9asZcBF4JMC7mGCAvLXr0fbh8h0uDd
3DojhAz9DzQTejkJCOkzYk5FICtu5bUH8whzfaDiAB3hlmnW6uvGbDK4oVEy
aIGg9FX57bGnk8aNDpyQGQjRg/u2RI2NUIfDC142WiFocxZdFZf3URsj9eUs
awT97hBzW8EjypGfEJbNRAi+84b/a7eaGhOopo/ORQh5admxuvYh1Rbt07HJ
DmFTZswlteETqjD2fFqLA0KT9lNxRd4LKnaLDbXICSG+2VJSGa2lnOMOjRxj
I6RHFFXyH9CI4bbRsx+XIfgEiYImSKaSuwn8mChXBMnk3q1lA1ZELrxp0+GO
cM+ToaEJ7YlI5HZvKSC4j/TsVMldiGdi+ZESL919Nr3F1wJXErrYYtVEHwRr
wX1ha0gI+SspeUKcL8K8210WZ0piyY0NmdWz1+jyOiTvfl8qIQ3UscibXARR
RWS+YjSLVDJPmqV8j+DqdriIJSslRRMr/2CHIkRcTvedtraaHOyrFT4NQ2Bx
s7u5WgVJamti5kcgOLUrFHH1f5KYM8rbPgIEwf5w+vbcXhJ8pCvlXQxCXBwr
at2at8RbpFlSuRXhdOGwbHmKESwN7teEJSB00ma5HN/8Jdi6jh6dJkJwvsvx
3MBggdlXep5NiNBsrjw0P54NtHGTIaEEYfXFmd1KhisMaGbI5uxFKA5f4MD6
wQN6rtoG3E1BMJMOL16f4gHt5Qv1MtIQ1jW3N/rnLIf6TJcal4MIDfSIzqmp
86Ai3ov3IgtB5eMtD4cJUOi/xrzkCMJ+8fPLwq+ryAFOqMIvDyHpC0djtTeP
iC0FO8YLEJbcO+ErN3Ei0e+22VYXI9Q4O2qCVhqTIPWuO7xShNoIS05VyxDl
1bg/dfopBLvepcFaeEqxZdnslp91fkd3j8zjIcVIK3osrkCwudDKHGX1UKax
ZTn2ZxEWf7R3/22Bhvrke85TVa3r48zYfOmJPurVwvqhrFqEwobF9Sb+Q5Sa
3iKj6hDE3JyaPbbjlHL4VsBgA8Ja5SRjVqQJudyl0pM1Idxouz/H2WsW+aWu
tybwqo6/Kku/AjcHcrzkNc/gGoJR8rkbjz65kYzkD+YXlQgupgZMAd+PIG9S
c+xNhJNDv0c2+IeTKG9zkVWnjm9rOUei3k6C7GbPae9CYNRLc1tWpRLPKXad
ex4gPG7tLjswkEuWDLClTg8RLGxa9XqvlxHGbQ+ORoNQkm2NmgcXybQLK5/k
PENYPoZSC+s28jE/MPfb5wiT06ydr2eoSf+uTV4j/To+/wlVFL8ZIKqwzcPl
gwhhy/bFyzNo0EZ2ngrVImzOGpFuNDGDOtvkwClvEWh+O4hwJwNOG2TqXxnT
8WE695v0vY5Q8Hfe+W3jCF6F+mZzA5ZBurKUz9AXQ4F7/6KZfm5wqeNo4o+G
4v//1b/rGCQE
          "]], 
         LineBox[CompressedData["
1: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
wbla5Jhc4P//q/8Az2JYcg==
          "]], 
         LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAiOuSoYCreUAAAAAAAAA+QDLjwVD9
rnlAt/zruixzOkDuRGBVqLJ5QKu8twtutC9Aqqb+WVO2eUBIIylf7qkUQGYI
nV7+uXlAvLk4q+wx1z8iajtjqb15QLEUYiVZGIE/38vZZ1TBeUBOHCEg4pBD
P5wteGz/xHlAAQv7MjkaGT9YjxZxqsh5QLryLd22yfw+FPG0dVXMeUCn04ZW
Rv/pPtBSU3oA0HlAD5oe4BjP4D6MtPF+q9N5QI6lKFZD3Nw+SBaQg1bXeUC1
aTjmn/TePgR4LogB23lAiRa8DmrB4z7A2cyMrN55QOWdGoXE2+w+fDtrkVfi
eUBNU2poJ2P3PjidCZYC5nlApN6UGWKFBD/0/qearel5QIcIjvWKHxM/sWBG
n1jteUAHMWHa56QiP2ha8XbE8HlAX2EcmknqMT8gVJxOMPR5QMpu9TrNl0E/
2E1HJpz3eUCgKJf2JI9RP49H8v0H+3lAM5nBmBC8YT9GQZ3Vc/55QJQoBv4o
EHI//jpIrd8BekDHXbcuGYKCP7Y084RLBXpA5K46DMsKkz9tLp5ctwh6QNWL
9ETRpKM/JChJNCMMekAOoJCUW0u0P9wh9AuPD3pASRoCvgz5xD+UG5/j+hJ6
QD5n0d6ZpdU/SxVKu2YWekAHX7k72UDmPwIP9ZLSGXpA2OP0pPyo9j+6CKBq
Ph16QNh7MeWpmwZAcgJLQqogekDXBCXmaa0VQCn89RkWJHpAn2XyJvRmI0Dg
9aDxgSd6QL0DvJ0NUS9AmO9Lye0qekA2CTb65jM2QFDp9qBZLnpAiXZG2p+O
O0APoUwKlTF6QAAAAAAAAD5AC6EfRQ==
          "]], 
         LineBox[CompressedData["
1:eJw9lXs01Pkbx0fIJEwuW/xa1m00LrWLRtr4fp5GKi1yybVSKSE2P8Suz6d1
CyFr2bWaU01lauR+LUrSRQlrqVzyk/ulkTL9Npdxi539/fF7znnO89dznvd5
v1/nPDq+IS5+q2g0Wpik/5k53q/vyJhhoP2vKKjrtXcyZWOYmpU7yje0gsgu
8SaeJYa2mTwL/y5z2PKCv0K3wpAdRe9xb9eBsSaH12cQhqWnjh6VswvoSv1c
ySAHw1O9OJXGiiJ04MGNJPvdGA647slLVPZDCtWOPnftMLAWyxTaHpmj+rJ5
tr4DhpSsl0nvtJURLripmOGEQab+seB+i5gyu7l/bNEVQ+pLd+l5jXFqgrdQ
6++B4QeLzrSmhEEq56Igq90bg8U0NuD09VKemU7ByAfDczbfwPlKP7XuwqJN
4TEMXY2naqpFw1RjQu7GDX4YSs9VXfQNm6Biop2n4gMweJRkj7BdpimLH5ea
RUEYzgmUrku9oiFR6C2+dwgGI/uv6R+iFVFukAtuCMMQ/JVRXLzcRnTY77Oz
WSQGTqgoc4RniNSO5BlejcJgVtn4Wf2tJWrxdJWS/wlDTRRH8df8vSjBZbk7
IhaDrrdy/IlnnmiHfX7Z0DkM4zLRAqwTiD7ZHkh2OI/B5ItS+eriKFSAVo7c
S8UwozEWz/dJRb7bC7Yx0zHwjK3GeMaXkYa5GyMzE8PCv5sfZikWoRcmNOFS
FgapqKmsis+1KNmgsC6Ai0GkT2LFn/5EoO2e3XEZA0M2pTamrx+JNaROwzUM
lxaK15Re+YhKVItsi/gYfKYM9GwnV9BJRQ9N9VwM1s6B1Uw3BmjJrZo5l48h
7K1O4mkjTeikFbd8LJLkxzMSR0+wIG3B4+bBMgw745xslcbNYNf0qrPPKzGc
KI9hpqzfDkuTxa7m1Ri84mQ1im2soVLoaXytBoNWt/H99aPWcGpIWnptHQbh
AF8Q3mkJum9KeiIfY7gzL07r45lAT4dXxfBTDEPrxNoZ1SqQ2SqT6tgoyWen
bvZIz2sUkO/oJdOCQXBQzaugPxZBApdV04Yh56GF//fvOGjDkWFxSLuEp0l5
+Tp1dSTabvKc+RpDfIiCVFnlItWgFpn9pgeDp6rL2eNW7yjex4d+mf0Y+Gtu
h08nDVJnmtew9wxjqNzdoeDR1kvZC1xlPo9hCHQLHiwLGKD0Y3ntFe8wjDKo
tIBjo9Sit5AfMInha9amRlkbEfWKbRqm9ReGwkuybw0m5qiCdWRnxzSG66LO
SlXT1Sju/dN1qXMY9PZuXm6dV0OeDUqDaEnC03IpJ/mePvomx7N0ZgVD/8yy
yILFRnJn+dGF0gSsnFX/nNbajfrdPzgckyMQeOn5t5PnPVCVqYXmhrUErmZr
ymS6BaKfFWI/tCgRcND7wyIjjqATwqb78SoEdIXRux7T05HVE9ULlusJxDsd
Z9IjriNV3mFvkQaB5FuWzb+pVKCJH24Z3tQksLrpRUT1m3r0xOWvOS8dyX4/
Gcpt7kSXNu9oZDAJ7GtlX8UtQhRKT7z4jEXgl3IPsWXxPNo70nqSmEj0yRwx
/HZaHrTr1C1MvyFgX8y31W/6F4i5vrJCcwKk+/S1vK0saA0v6riyjcArN0Vt
RRVzyHWcveGyg4C+MovjWLgdfjKEcDoicDbV9Y2g2hoOyKRy6jgERrlhc9qb
rMFkoF35zG4CrgzvfIEfG6RrNIcM9xHotut0PbRWD3qy/MsGHAjcrbrtkn5m
HlWElMf87kwgZ1qj157cQCn7Fh2/cyMwbNSm13DIGx1l2mpJeRH4GNqg+mMa
C1nSfpmsOkSgkeM5tcZuNVr3prs2+CiBKKZmM73vv5Twjm6a7gnJfTXmy2y1
EaouI/hgtz8Bu+KIxUOCPio7qMooPYhAL7M+USe1j/p+N23BJoSAlDpthTsw
RO3S2dc0H0bAdOXLJ1zmO+rLpd+4pZESP4LKAmv6pqiprj5/P0zglnxgnaGB
FGou37RtYzSB9/efad7NZyB+Wujql3EEzI+GU78/0EJR/vc7kxIl+vXHY+8t
bEFOHFmBVQqBix0xu/avBcTS3H/mUxoBpe/GGQVTTmhFzLXJyyCwZzOsv2Dk
i7peDav4ZEn4KBKJ/pMXjkqKTYZVuQRiuCEDcUGJKCk5srzpMoGMgdlEk9CL
6PDxR7Ex1wi85ViFZdzLR1speSf2DQIQV2TcalOLFDQOfPU+l4Csspxw09o2
NDLFE10vILAx3bPDdGUQ1bQKH7iXSPQ9pLeejPiEfs03/VmhQsLP1tP0yDxp
CEwgh57ckfC/ITGgZr0aWIlfLlveI1DBaHXLsdMFpVOsnNJaiR+qyg0mjC0w
1BttY/CIwPmx5tc5hWy4vb9z7Er9P/lpjC5QO6AjQY2abSD//4d/Awr3SoI=

          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJw9VHs01HkcnbzayvSQhjHEqCihZBoj5vf9KAk56DWyvVZr2uym3ZoxKZpP
D2ujiCltHFZhd9qkEsZQbC+7qR1Gy5IIRw9h5mxMYzaP1u4fe8+555773/2c
87mXvfvrjUIjGo22fpL/akLQ9bmCYSnQ/gMFPHdGRJ5eCp748+sH2augzZ4W
Sv8gBSsjuULYuRzi5/T7Hx2XwhIz5oDxfSZYGzf7aGgIT2NFmmWVfUSpq1mx
wwRhoVbDLxZnka2v5UtUUxE2KVqYuGoLMbRmOvBnIDAH9ZJk08XkYn2CVclM
BJc17gf8TD8hvNvCmXYWCNnVSgv/miGq7VqYado8hBr92cTq7pdU/A/eY2PW
CAFnQvO4719Q1hkLhvfZIthesCJB7R2U8ji9v8Mewee2edp5dje1VTTSHbIA
4eaGh0rGny8pQ3RP6x0nhGkTp3IqnbTURcGTBlcXBAFpWNHZOkLxAivqct0Q
uo7MMsg9TUibd/4dcw+EPsE2xyS6BYlfmlKWyEE4z4TyEyoHwpuYU8DlIXix
nVpiZnoQgzon4y8fBDtjfhnnNz+iLFyAVwkCw+qGX1jvRhIvuRYbvQahbHR2
/a6IaMILWrl9/joE97CmWBc7CTGwaoPbghGWlbrJmCtOEaU2wFsWirA3qZT7
fVYOOXSv0TlkI4LR9Z8SZwWWEO75rQwzAULKyo6DBxfeJfo9PSZ3IxFcfa7s
e/eoiSi8vxw+vAMh1muZr/rbXiIxH+7xjEJINmgGzvHeE25XgloTjUBfLaVb
njEDfanJL/K9CC1TmTmjzxigSEoridqHIO1kH//DfxFIIhi5rG8QnGI2+c4S
egDXJT+1RYTw7HHjIm04D/RjzofPHkJYtbj61lUHPigab34RlIAQw0/P3q3m
g6TAW2CMCDk2fhOPS72AG3ffv+YEQuT0Vs9ilTPo1633PJSMcK/pdFpQjCko
bJrZHqkIlUcSMfhRBZFots8eSENo7y2uyo7cQ7h3X00UZSLotbq+wLMeRC/b
r9mZhdC4YUptrL85UQhHnltnIxyt3yyrSx6mJLxjj5/mIozXgeht7kuKO2Na
1ZlLCLt6jnSHfP6C0ndmygOKEMK1loZW205KcdPmAu3K5H8VbA5Mte2h4k4W
JlUXI7jlsdWp595QHIGrSHwDYUfD2lvcT4co3eKKKPcyhBBWyZbwnR+p8lF+
eJ9i0rfQB3rrzIm44VeqoBrhQcZg/4/NLMK5HOa2vRbh4qWHlZE0V6ITtbEY
9xGKrpmvDfroS8oDoqar6xBSaSrH/VdDiZjZb0ipR7A+GV6vjPuMcAYPvlmj
QqDmBx6TtR8gutrRlnE1whXRVzb+x0+S8sykh5XNCFF73jpr9mYRcTS97EAb
wpgZf+RBppxwvC5cXtqBYGkSF1E/WkV00+wzXnUhhEaJBisLfyflHXJpfi9C
vENSiTyhi4hvLI+NfIMgKkzOo1zfEc6Jqm1zBxBG4DSyhEag27w6WKVFeCfz
fp4+ZAHlzk943w1N9nVGuEzHdgTxh03OfvrJe+3es7DdHTiqjnmjfyNMcd2Z
45TCBV2+0KRifDJfaHaRJdsXXJoaI9Npx/7fp38A4iIo+w==
          "]], 
         LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAO2UdgswAgEAAAAAAAAA+QLqiu3CU
AoBASUgRRH4sOkAaDABocQSAQAFR7JjMcS5AenVEX04GgEAtIRZwQHkSQNre
iFYrCIBA6pQQ5BHA0D86SM1NCAqAQLH+Op45Dnk/mrERReULgEBV+PhEJpg+
P/oaVjzCDYBAC/kW/Q2uFD9ahJoznw+AQCCzPgh69Pg+ue3eKnwRgEBeguL7
9a3nPhajqYs5E4BARhZecIJQ4D50WHTs9hSAQMWy61ra0Nw+0g0/TbQWgEC2
CTO2/P/ePjDDCa5xGIBA2glPSA1+4z6OeNQOLxqAQMVFxm6Ntus+6y2fb+wb
gECQjAIUsa71PkjjadCpHYBAvMROSgFGAj+mmDQxZx+AQKajZcy3ThA/BE7/
kSQhgEBVtZQLkmceP2EDyvLhIoBAaJN1DalLLT++uJRTnySAQIv0mse17jw/
HG5ftFwmgEDcuAJjpBlNP3ojKhUaKIBAIevy9TWpXT/X2PR11ymAQHaz0eC2
hW4/NI6/1pQrgEA8uauZ+p5/P5JDijdSLYBAM0nAm5l0kD/w+FSYDy+AQDof
di3CLaE/Ta4f+cwwgEB02vN9CvexP6pj6lmKMoBAj6b68hrMwj8IGbW6RzSA
QEHByeX7pdM/Zs5/GwU2gEC3Kh+UlHbkP8SDSnzCN4BALUyAnCYf9T8iORXd
fzmAQGE1wX9sYAVAf+7fPT07gECyqy42Ks4UQNyjqp76PIBAq+fYC0jmIkA6
WXX/tz6AQLTt/yVb5y5AmA5AYHVAgEAJyivbahw2QPbDCsEyQoBAdQb/MyqR
O0Br1Zhl1UOAQAAAAAAAAD5AcR0Qbw==
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA2EuP1w9EgEAAAAAAAAA+QLEuoIKt
RYBA3uB6Ex35O0AO5GrjakeAQLdHtLccQDNAbJk1RChJgEBhM5dSSHkgQMpO
AKXlSoBAl2RuEudx9T8nBMsFo0yAQG1jb0biqKM/hLmVZmBOgEDjRtAb0ixf
P+JuYMcdUIBAgoxEn1PwLj9AJCso21GAQH5AKX/EPww/ntn1iJhTgED/Pj6V
UqX0PvyOwOlVVYBAc7bKznb25T5ZRItKE1eAQI8hFeSpjN8+tvlVq9BYgEC7
l4hWa83cPhSvIAyOWoBAK9w0Q6HP3z5yZOtsS1yAQIP6cyXTa+Q+0Bm2zQhe
gEDROx0oLYLtPi7PgC7GX4BA8X//42Zh9z6LhEuPg2GAQK06MKjM5QM/6DkW
8EBjgEDuDiv/2uMRP0bv4FD+ZIBAqy3CmbzFID+kpKuxu2aAQNUmt8+oOjA/
AVp2EnlogECzruaF8hNAP14PQXM2aoBA9jfDZ4A1UD+8xAvU82uAQNL6Aded
jGA/GnrWNLFtgEDUZo0YzgxxP3cvoZVub4BArIDvzaStgT/U5Gv2K3GAQDur
LwHgaJI/Mpo2V+lygEDljMW9tTmjP5BPAbimdIBAeXbGn9AbtD/tBMwYZHaA
QAJGfn0XCsU/SrqWeSF4gEBu8dZeBvzVP6hvYdreeYBA6l88Hf/f5j8GJSw7
nHuAQGc/DqOPj/c/ZNr2m1l9gEAOlV0/O70HQMKPwfwWf4BA/VywmKbpFkAf
RYxd1ICAQDjeg0/MhyRAVv1KA4mCgEBXj/t1bFYwQIy1Cak9hIBAGtjwGEfT
NkDDbchO8oWAQI6k/zSU9DtA1VaWSIKHgEAAAAAAAAA+QLrEKFo=
          "]], 
         LineBox[CompressedData["
1:eJw9lHs01HkYxoedxI6JUim5lFglEivFmN/3bVBZpUWJtlwT2nKtKKV3asVO
uUSI0pSR3CqxbevSWGwlk2tOJWLcW5sYUpMjdto/9j3nPe9/z3Pe53POs8In
2NlPnkaj7ZDt10vfsvLQk1gE2n9Dwbouu8yffkW4Ps4zSy1ggX8aHVTPI9Sc
kqubeG0G1xxrB/66gGBpQm4KjZdDm8KZ88cTEM7IpygJ7k0SRhWYrk1CYEcw
v88Nvkk4EbMvei8ifF5mZDW+15tEmghPpqcg0BUNSvMcTMndoZO621IRDkv1
9RUdVcggn1VHS0eYnVws/PPoR0rTberw/csIjbeqpM8dhygX1TK1g5kIR1Av
k2Mnpnh1EWXaVxG+tefr9rd0UtVo4fk8C6H8VOnBB2+6KOnGSXocH4El8E5d
Y9lHrZWUFljfQIibb5LvPzVM+eWH/SjJRpip5Gib13+grnqbfryZg/DWxqbJ
xFqOtC4du7InF2Hvrsjk0+x5RKn1ziaVPIQ6vXfyjPvLCPAOD9XmI4hLvcb1
2IbkGMcoPrIQwZVqdP/luCW5PTVsZnwbYX3CSKaJmT3pL8l/1XMH4bKOSmiQ
jTvR+DkgOq0Ywa/LdolraiBxWmmg51Ai0/d53LpR/QSJ6xh4OluKoL47y3br
Qx4RpuQE/3YfYWFxtYgffYVMOvguCnyAsFnC2KOzs4gY0XUrtMpk+kXpuvUW
D4lPpdirtRzhg2MYM0WrkWQc4SvEViKEPJT6Jkq7SLORRxFLiLDD1O4a+9Yo
URjQdB6rQtjZt+jR2qFZws7q+JRTjTB2Way8HVTgyK7MLPdaWZ5J7Qt9lbWg
gOluM+8Rwsn6ZGn4s1XQ80j975rHCOeVRv+JajWDJdEvEiLqEA7U9FtU0izB
0SLV3KgewcFDSH9qwYaY9y6vxSKEGLMdiX+MsKEydwGmNsh4V7hr8JQsYdyj
Rf+HJoTkxYF6DJYxrFZPEs00y/gKDZdcuaYGXk2OoaWtCAUxHvNWt7wm6bFM
9YA2hJI2NtffLY40kmeVmi8QBCs2BN+w2E7oUp5Py0uE9kBSH3dVl7CK7RXP
tSO4mSS2ZWylk7AAxTtWHQhzDtWGKfSMUXnLn7iMdiJ46hUtDK/oo7pfxXwW
dCEsrdrsxXDqohZftOW7iRGUbp8SOE13Utvsv7Fj9iK0vlR7HnJaTJ2Vqxmu
7kPI1voyAkkDVHkZJh0bQHAR86abgkapsVBisWYIISt0KCB1QkoZGM50dL9F
SMkX5pYbziEevZXcS8Oy/+SUpTmDC8ilzCgD+3cI85knmg7FryAiZ6uGLyOy
fBuOydFF60hyVF3Qy1EEheMHjNL8NxG3HFfVexKE3ujucxk+zkSnof8ebwJh
Wv76e4e7vmRwMsxl/ySC1PzVd82bj5IibblJ9ieEC0m2sX76sSR8S2Ka+mcE
hslo9T77DGIVorVRMiXzk2epzykpJLSMwvb6aQSdVU7Fkn1C8rjaMipnBoGj
4TF9RtBM4oefaEbTuMD3ll/ub9RLdqq5CnfLcyHlo2fI2aIJomHd72lK50JV
SzjHqpMOPfvD5BgKXMhWsRJNGS+CvHiaoH8uF4yVrfeJ3qyEoN8TbIVKXOAk
hGWLo9bB+m7NwXQGFyqIRE01cgNMzy2MDWVy4ZK79iDzljWw+ETRXIX7f7/9
C5ttSD4=
          "]], 
         LineBox[CompressedData["
1:eJxFlGlQE2YQhlGCoECcZhBj5EgGwiFUEZDD4/sWFA2aIucEQapQAlJAIRSq
TASXgsOpgkwUaYMVKUKtNlZGwAMqIiJIPUAiI0piERVSOaToGKFp/3Rn3tk/
O7vzzLu7vJh9weL5enp6Qp3+zYrnxX1BixH0/gsCBTs67tp+hnBXKepoc/CG
wJywpFkWwkr9viX59U5g/vMLU6UZQvXG3N+cUpgw+Cj1osIcwYRzduhRzG16
VjsXWMRGiGcX2vBfS+jX/COTsRwEgeOE2foKb+oSYFFOLBA2aopL7h1g0ZmM
+jVsK4SlrAGbWtEMuVHl1T9hjZB2pMnH6PlLknvn9v4uHkK3/MyVmxeek20T
oZwaG928LgE/+eFTwuK8uJrFR9hg0Ht9z9ohovRNjQq3R/hlCbtv5/FhUpU4
N7vaEaG+4WZUdMA4iSsvOW3shHCCrD4V5/qROF9f7jvsjGCVs7fmaqoRnRqu
e3FjJcLrmhpNK1lKm5leeSddEB4zOlLCmPb0kOdtO4krQtH7sQSNzJNu2R16
Z5s7QlecvKrpooAyC9QJfA8EQ874lSTfCNqrSDGe80RI8WWu7IEkempg9rzS
G2FY+aFipDqLRuuXBFxap+P7NHl80eVj1MF5+XjRBoSHvvj3pN8Z+ldoXamY
IoQKOEE8w8u04aCnG/VBeMDouFA+3U6lP7X3sjciZNpoxmsXKqnvHyEZk5sQ
htoZgm6nN3The9XS7s0Ib/OfTDEttfQ+N6WpRoAQvt+q2DXQFGT+sxHZW3V8
rtpdZo8sIEpSrA0XIqi35LsEnXME20qO3DVA13+nrajxiRu8aTtHTQIRtl7e
fNLYZy0oxjxUw0EI4ilnv8Q3G2D/kvaclhCEb96lG5Dm9UBIiG1FGIJSzrU+
tskdGPGqdokIwWNMKs5g8KDr6L544Q6EZ7k92f2JU7Ss8ZORXSTC6WlrlVVd
JQ1XFdXP7USQK6qvveSFUetFHOGTLxG2s8JTqR2fvnQ9p7m0GyHdovrqMk8G
PR/pcbQ4BsHi82nLgHtvSVruLZe4WATThMxnrXlq4vVBuY4bh1Ay+PT6Ifkg
0SZrNg/EI0QwLBIHowZJq3pecHkCQpnheNl2PxXJFZlHBSTqeIae8pLpCBF0
r9hjlIxQGBsiWyyeIKY+NO3mXgTZcLWw1E9LHjaEZElTEE4V9dgOHTSishV7
CjwkOj/dxP2nBeY0okpaPp6GcMGBfcLAhE+tzEqr6tMRvnDPTr6X6k7V+TX1
sd/qeGZ+FbEEm2jtp6YGqwO6+5Su6rHfF0qTJD2tykyEd+Jla4oexFKXEXVX
mRQhWORckBadTt9FzjwWZiFku3ue7TM7TBvvG6sXHEJAwyGe258yKvXjaloR
geXG/VHRWUuh2f195nc6XocFuzpbGiljlb/+mjyEV6/K2uJbOmlndRTz7WGE
mHWll2KuDdAjbMmyunzdfnVafk9+GKXBJYdtvypEWO7NIQbOWmo+v3KVZTFC
osKxsWKeCQxkXFzbX4KQwey6q8rhgHy0za/0qK5+UDjwO9ceYnYrA7eVIixq
Dh29Nb0a7PrGIg2OI3zM0Cft4V4w6j8vvqUcwb+Q6z81sh6a+ZW90bL//9U/
ozEjUA==
          "]], 
         LineBox[CompressedData["
1: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
+f+/+w+aVTjZ
          "]], 
         LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAtgQy0b2kgkAAAAAAAAA+QGhjBn+F
poJAyzoOGXrFOUCWS97KW6iCQNARYlbDki1AwzO2FjKqgkCZPXTNoMsRQPAb
jmIIrIJAk/8f3gBD0D8eBGau3q2CQInxhbXqk3k/S+w9+rSvgkDXtNXbCfg/
P3jUFUaLsYJAZWGK8PXCFT+mvO2RYbOCQEilNB01J/o+06TF3Te1gkAuDOS7
+4foPgCNnSkOt4JAoB7qUctb4D4udXV15LiCQA64/nOQzNw+W11Nwbq6gkDu
4UjfdIXfPohFJQ2RvIJAQbnHq5py5D62Lf1YZ76CQKAwNwqRQ+4+4xXVpD3A
gkDR/J91Q8n4Pg5KM1r0wYJAdHetKMEQBT84fpEPq8OCQD6mRUpF2xI/Y7Lv
xGHFgkAkc4/X048hP47mTXoYx4JAfnP5mr7aMD+5Gqwvz8iCQPQJUkQVi0A/
5E4K5YXKgkCF7QopH4NQPw+DaJo8zIJAvvTJ6sSuYD86t8ZP882CQNBOJ8bF
AHE/ZeskBarPgkCM9iP042+BP5Afg7pg0YJAFP2AuF71kT+7U+FvF9OCQMnn
/1cBjKI/5oc/Jc7UgkATvkHcQy+zPxG8ndqE1oJAyNXQ/jXawz888PuPO9iC
QEdSUT9ChdQ/ZyRaRfLZgkBR1r+JwyHlP5JYuPqo24JAyDDeC/yQ9T+9jBaw
X92CQNQfAlTLlQVA6MB0ZRbfgkAZwTjcHcsUQBP10hrN4IJArPHvqyC8IkA+
KTHQg+KCQCGd6yUVfy5AaV2PhTrkgkCNgupgW9E1QJSR7Trx5YJAvEqzAk5N
O0BdyF/WmOeCQAAAAAAAAD5ACB8v2Q==
          "]], 
         LineBox[CompressedData["
1:eJw9lHs01HkYxkdaRyrGnbVakUo7CTXGiN/3JTtuSTelYSxaVMSg1Ukb4/di
W20rlHLpPnFUtCqqo7ZVIUS1ObUyLs2W69AMOaMw7ez+se85z3n/fj7v8z6L
IxM2R81hMBgBav27xyw7g+sHaGD8NxQMf6y4FDZEg9xvVpKa4AbG9tohxiM0
WA4PhZK4NQCR0cwnMhqUlTuUD15bQ2zhowZ6jIau3Ny437NVpLDF+iBXTkO8
pC9rL6ua1KtEDnIFDU4xNat/uR9DZE6978omaMhrX7dHLmQTkxj3EsEkDcYq
l5ctFgbEo6Rko5GSho7wWHvJ5Skq7unHL1qnaOhhXo/qKxmkCjWD6zI+0VDX
ObiAX9lH1XNqhS4zNJwz5Tsk90soWazR0vezNOhIDd8u399DmZ5L6rr0mYZO
M1HTrw+llGfHs2OhGgjdXcmBX9sMU3u1V/EMNRHyGoZVggUfqFNuR6eb5yJM
Wf1tsuo4gzwUjvwm0kJoqSYdHXoLyZjYN5qjjXAioiCl7cKXxLyz3GJsHoL3
q2xpo4cd8Vqo9Vw8H+FIUO7mfXkuJMHj++yQhQgW5Rt8skN8SPEPD9Ya6CHM
q7oT4HkomDRUWCkeMxGqNc0T83t3EXl3Wlm6AYKY6x/MSzpALAy6Q5yNEEqX
2aXP2uUQHm+t/qgxQviu8MklqmKSmFrUeNEU4dxEXWvHwBVSWqU8yDdHOOD5
6HJg313SJA1y1LdA6J1Tv+F0TxsZN7nZ3/QVQnJk22HJnz3E0t+gNG0RQnlK
b6p36Xviky7cxLZCKEs/eltH+Zkk32jXki1GGNYQ25yN0YMzA6y7F2wQ5Dth
+pqHJTRbHEncYYtwc1NLYQjDDj4EDi1lLkNQsJbH2iud4OtMb0njcoTLlvbv
d9tywe/2pbxDKxC2ty4dW73eHfbJNL3XsBBUHqMT67rd4axV5MzwSgQtRWpJ
3HUX4DfkVjauQvCvKE5RbF0BRnvuhV1wRCg4tjlwlDkfnuqO6KWtRuAS92xd
13qSc8OsfgcboX+LwIgvjyffqimyOQjspsmqXDNnwphNttHnqvmwqBnjIiap
O3++Q+aqvm/4N5UJ1ZNUCu9p1mM3hJOLMzIfSd9RjiMzzmIKQcK+Jnpp2kvJ
clcMpoPan5f06vMBCVW+JrgoxFOdl7vr7+HxPiqyM8uP44Xgl5kSw4nqpyzT
bkwb8BCKONvny5cpqL+s31wd80a4xYlVuI7PUPlNumEtvgg/t0s8nXg6JCDO
Ta/MH0EzrVtH6WROtPX3/JERgHAlR1vGXWlHHtScTBQEIkT3nPHRHeWSQ/wG
a+4mhEpbV4fXvv7E5fP4C6MtCMwIKSlgCcjERass+VYEr50/mqgOJ5Aqnw3O
T7ap/bY+exvMyiC7Rw8OlAcj9In2a/z0JJ8sya84hXwEYRApbReLSa/zK9/v
QhEEp7K8tWtqSXHX3GnXMATtE9Eb2z49JkEip6sm4Qi3324b1IjrIkzbcMF4
BMKWpHl3pgZHSWvzUd32ner/mMgxf6fLgOz4uvsVUQiBpznHSiuYAIZDwqwY
BEfRnGYNByuYvmViHbEbwXDRzFwVmwW1oV4v3GIRBjMSas1d2CDUSMo026vO
a05nTYHnWqhpqHrzOh7/769/AI0BN48=
          "]], 
         LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAyMZC6RBvg0AAAAAAAAA+QOZKzebP
cINAI6sPF6qZO0Ch7/qXq3KDQO8928zQuTFAXJQoSYd0g0Ch11QDeJEZQBc5
VvpidoNA68YNhjag4j/S3YOrPniDQPai0wpp3Ig/jYKxXBp6g0ANq23csX5I
P0gn3w32e4NA6oVmKfG/HD8DzAy/0X2DQFBU477KE/8+vnA6cK1/g0DWaZIT
xP/qPnkVaCGJgYNAYDXi7ScM4T40upXSZIODQMF1WOri5dw+7l7Dg0CFg0Bj
2J4M4tfePqkD8TQch4NAIkBfJQKz4z5kqB7m94iDQIAhh+896ew+Hk1Ml9OK
g0CfsVrELJr3PtnxeUivjINAo5EMjurlBD+Ulqf5io6DQOitwMIrrBM/TzvV
qmaQg0AM+dw/D2MjPwrgAlxCkoNAySyWKyXDMz/FhDANHpSDQMSxkvWspUQ/
gClevvmVg0D0wbVrMPZVPzvOi2/Vl4NAIO8hRyenZz/2crkgsZmDQOvuVO+e
snk/sRfn0Yybg0B6n02oqhWMP2y8FINonYNAorrJoXXPnj8nYUI0RJ+DQGwc
mIv877A/4gVw5R+hg0B+eOsAsaLCP5yqnZb7ooNAckHfQgd71D9XT8tH16SD
QJ4jNaGjaOY/EEB/YpOmg0AmIJM+/wr3P8gwM31PqINADOlc9KQxB0CBIeeX
C6qDQOTmM/mbYxZAOhKbsserg0Bur2taMRkkQPICT82DrYNAh8e2ASYvMECr
8wLoP6+DQEjLceBpyTZAZOS2Avywg0BqauLoVf87QL+vXimRsoNAAAAAAAAA
PkAL9iN0
          "]], 
         LineBox[CompressedData["
1:eJw9lGs41HkUx6dixoqS+w41q9AkQi6L8v+dySU1bkmlK8mUKJPQI4lqThfW
Q7popHQlconCls3SRS5ZpNbaNIPMDJNLbeXSg9ppX+x5nvOcd+ec7/f5nGMU
zPfjTafRaL6K/F5vKPVtjB8VAO2/oOBD5KlVhuMCkF6xzWebLIO84OUhHV8E
IHnDmmVWag3b135IODchAEETTS4aNQCm681M3ykBnFm+2nvKYYi02QaUqX0T
QOHFw1TvJyFJNlFrqachHNewougqG4iLbo0cpyOs31y9f/ecRWSSHq3EUUK4
4qWtXhCnQsrGFrKmlBF8uJ+7u9o/Unv6Ox0fMBAev27jnu6UUCZ/p/nH/IAg
ne/URZeKKXGDC996JoJhqLZGm/gNlVE5ljSkhmC1Y6/BBcduyrug4Gb+LAQt
qzCflUwpxbgUWM3TQPDKrPIW1A1TNSlar400EezYUmp+yjgVe7jus0gL4YXA
pSZ8QomoRvL903UQLtQmX7peokmyQvTKXPUQlOgrPH18jYh5QLXWuL5iv5yu
Oe3Hrcjv3F1RBUyE02YNoV9ZQHzJ7JfbDBE0TAYL3Wi+5O3SX5dqzkPIjnJ7
aKMZRKJNA8/UshAmzj/QG/XYR5SZjI+xRgiVnI0OZRePkAz1O2vMFyDUe2Zu
q6KlE/a0DaVdxgitDnnaophrpPLzV42zpgjlHaoVd0ZKiWd/7j53NsKCKsfx
1EOPibjTu/XLIoR3o/pTvbSXhN8yalm0GMEDZbnbD/YS2pPstCALhLnZaqNP
n38iZyrc32tZIljH5WTIa2eA8e1h7zorBNifP5iopQXllzOK45Yq9Enj6eHe
RuCeTs1aYotQnFWmGZ1iDh0o29tjh5BcUJRm12QLYbGpf5z7GSGO1Zc8N8kJ
JsPtLTwcEVy5nuNeYmdIDRSnTDgp5m96pFxv4QystScGi5cjnGgtrlEPsYcS
9yWewRRCqutf6XZDprDCqb1ABxDuD8fXL5Ex4JVFwswGDsLKQGH8gMETstPI
NDzeBcFCxX/Edn8MGddubrR0U/DWsDIp8RcgSSoHzHrdEdDvqeikTJ8wJ+cm
Z3go/BAxprX++ZUqfF8rX7VawUvFLZ/x7YMU1bt31RQXwT9tuEg+1kO1tOvk
l3ghrC5c1injiaigxiqVEB8FLy0DCfXHRdTHKl6o3hqEDobr+sLoHgpL1esb
/RB+Ou8cIEroo3Rzyhcm+Cv6dUlUjx37h8oTbj1pvR7h7jUTPtN1knJMUe6T
bECg+yTvXuiuQhoTi9yFGxEcOGrhz0U6ZEvUulzuZoSsybcZ3AhjMrxzSvnb
FgVft3Krhq/YkCObcnh3tyFof5D7rqNciKa3Vy0vCCGvvft22KK15AZnxPjH
YARxpa4uy3MHsbW7jE07EEIjlAolGVHkGdtNkshT6AuQSBu+CUiA4ZCLzS6E
a0LhqH3iOSKfff6GLFTB74is0WN2Domb4TzjYhjCpWb2w9bb5URtTBLstQdB
X8xv6uU+I9nvUh7TIhBUTzGZIfJ2Yim2nV/GRzAdaJPmRPaRmhdvju6KRNjk
xi5fXDNG/GqxhxmluP+2rZFPUxkguW/OaY5GqHnLl/ZH6EJM4aurRw8gcDJN
f7s3sADoV+NpdrEIafeur1DttQThWeOg/oMI8Y+65xnsswezk03VWYcQHn1J
aa4oWQZ1ZIpucxj//3f/AmZzR4w=
          "]], 
         LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAA56k2InB9hEAAAAAAAAA+QE5uHH8C
f4RAauuSA9QOPEDfYcTetYCEQJPQDoXBrTNAAMY7Oo6ChEBeQZDQQwwgQCIq
s5VmhIRANvKV3lrp8D9EjirxPoaEQB7Lvyt5r5c/ZvKhTBeIhED6oe37ti5T
P4hWGajviYRAhRr/6sTcIz+pupADyIuEQOVHkKYlcAM/yh4IX6CNhEDqhWtl
yxjvPuyCf7p4j4RABJWnOaVT4j4O5/YVUZGEQI/QCfZmVd0+L0tucSmThECV
yfiAltndPlCv5cwBlYRA4I+hCPtS4j5yE10o2paEQLwJRZNQBuo+lHfUg7KY
hED5nfmUF630PrXbS9+KmoRAmDQRUBrmAT/WP8M6Y5yEQFECgcQ/iRA/+KM6
ljuehEAI9/YQpwogPxoIsvEToIRAhtOoqf8iMD87bClN7KGEQM+wVn2Vq0A/
XNCgqMSjhEBjhy8Hb45RP340GASdpYRAvuBhI/C+Yj+gmI9fdaeEQKNgz4qx
NXQ/wfwGu02phEDoSvywd+6FP+JgfhYmq4RA0xaAy1nnlz8ExfVx/qyEQORZ
CgtJH6o/JiltzdauhECjSvBXqpS8P0eN5CivsIRAiVS4O/1Bzz9o8VuEh7KE
QCf81/21CuE/ilXT31+0hEDKeqHeN27yP6y5Sjs4toRAslPKCSyNA0DNHcKW
ELiEQKuK+Lg26hNA7oE58ui5hEAZjWNkh9EiQBDmsE3Bu4RAgdJXBI2aL0Ay
Siipmb2EQAhlOTUe0zZAU66fBHK/hEBB4uHbFUQ8QBJby40hwYRAAAAAAAAA
PkBPUB4k
          "]], 
         LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAmpORQV3BhEAAAAAAAAA+QJZ2jrsi
w4RAwUl4AG4POkC42gUX+8SEQJSdLG1cVS5A2T59ctPGhEBTzAMCt6MSQPqi
9M2ryIRAOsqnZKXG0T8cB2wphMqEQCBRgVbsDHs/PmvjhFzMhEB6m2HexHRA
P1/PWuA0zoRA/RpVQdwPFj+AM9I7DdCEQHnILPBmR/o+opdJl+XRhEDfL+HA
+YnoPsT7wPK904RAzFfaC6pX4D7mXzhOltWEQNCt7hf1y9w+CMSvqW7XhEAn
Jpxc85ffPikoJwVH2YRADV2TozaQ5D5KjJ5gH9uEQK1dR07uje4+bPAVvPfc
hEBOHGvZYCH5Po5UjRfQ3oRAZEp7+71VBj+wuARzqOCEQN4C3qkvDBU/0hx8
zoDihEAP6Smx2bgkP/OA8ylZ5IRAiUe0yqkSNT8U5WqFMeaEQHqUzIQy8UU/
Nkni4AnohEBgDVEoqD1XP1itWTzi6YRA1/zyPyTqaD95EdGXuuuEQNkJwVwi
73o/mnVI85LthEDUIplxbUiNP7zZv05r74RAh6eN6vvznz/ePTeqQ/GEQCVt
ug5PeLE//6GuBRzzhEC1NT6EiB3DPyAGJmH09IRAvI0hTg/k1D9Cap28zPaE
QEBjpSWmuuY/YRqbgYX4hEAcCGcmtT33P4DKmEY++oRAeeVd8utDB0CgepYL
9/uEQKkj5zjMWBZAvyqU0K/9hEBjwagNM/wjQN7akZVo/4RA41agr2oQMED+
io9aIQGFQI+eIEG1oDZAHTuNH9oChUACGbUsc907QIIy9PlvBIVAAAAAAAAA
PkA0AiL8
          "]], 
         LineBox[CompressedData["
1:eJxFlHlQ03cQxcNRKqYkiKBi5JYiNxIOIeH3XaUY5ZSgoATCKWhEjoCUIkgh
LMohR+lg8ERRp0hVsHa0yiFoWwteoCVTisqoBEOhgkpKELRp/3Fndvbv9/bz
nkV8Gn+7Jo1GC1Lvf7ed2xPxgzYC7f+hQHDkQFOADkLo3NlH4S0cyA0oSdVe
gPCbnfJudK8r1L+TsNt1EV4tZea63TWDq82FM3voCJNNMxxB4FsiExS0O+kh
GAXm3kjTaCRKen7RKANh/eldnukQQ5a05fIa9BFOlTJnT1Q5E/eUnM+2GSB0
Zzr1u2rpkc0rsvsWGSJIRVXMgy7TVNadzLoeIwRng9shJjvlVG1ehkCyFGG5
qxPLXv6UuuSQZs41RrhmcmX6n54hqm8oZeTtcoRfIz1HB5KfUpMVonPnVyC8
V1qXZcmfU0yfHWlJpgjPTy/ZNhU3TjlNbHczM0eIWMYOaWMrqaBjCSqZBcJW
jb9si5s0SUpQXEe1FYKPyPiF6lt9UjEvlGy0RgguleY3dpiS5vNRGzRtEMZ1
pCvHUx1JT3Sk3vVVCL0x9+YPPuaSMb2t/Zl2CCWJlvUX+gKJbseWQw4OCCRy
f9rA59FkVWpY1Iij2m/6rt4rt3YTnmmoxXFnhD9sIvLf1+8jSfeC5eGrEVwb
R6PEh6tIyb7AZiZb7dcU0zFS2EDOOPmn33ZDqL1ZJcueayG3nvDcCz0QagpZ
hSGNXeRFpd+s1xoE3kRQTGtgP9Eivp2vvRAE1X56bePPiOUrKG7mIJjIpSMc
0Ruy9gS1MdEH4ZPgDdBXowWxIVyGCUHYr6houLxwMRR88Hr4OyDYWDEyhrdb
wPGLntLKdQj5/BlRykMHaI9xj+Z9gaBY57vzpLY7DDHZlrT1CI+HpJMFXd4w
1+kyepWHsNBNaSWZ9gFWutP3GRsRGjuvR/mOccHb3CHDLkDNT5nOkS/L3SHy
ga3H80AER+dtsqmxlfDV1zbvjgQjjGjs5N000AKpi/WNzZsQ2KzY2k1rr5Ir
w5aox1f/Z2LNfesnu8lAtbn/L2EI+kmVPw1repFpMGUWbEFQ5iywil1kSAyn
WI88I9S8JeoVGYXNUuyTxvWTWxE23Hh5aneZguKHLhU2RSKoBlsV65TDlFjD
yCo+CuHH6M78HNUQVdNq8HK5ECF+yG66m3pCtcTpn38Yg6DtKlM2Fj2jHixi
iCviENpMexVVLQrqVRfd0y9BzWt0cbeq+Q3FEOvOzScirJg6uuy6L420hL/T
GktCaBhs6fSsZhA+Z4I+sAMhpZYij8NNyVuzp4u7RQjCpMlKXYEzqdPuY11I
QeDMZxn6XQSyRtFtdTgVYaBYlnXbgk8G7162L0lX57OijVv6IYHkXTrLFosR
nsUnLy7gZROzQ1KOMAtBXrfHRTx/gHTvLfP1z0YYXG10ZrPNUZIYmxfgkYPQ
qlW0JeTORaLjlxpmmYvw8w5lrL2qi3xnGytg5KnzeJkbdyngEfFn8BNm89X6
39Bq8u7Lyfhr313yAoRsDe9QSaiKVMrcM/sLERb4T/35dwAdXNps9nZIEPo/
zXGxv8aC/gZjyTlEeJDKOUYJbSEL6eV1+xFsQ5I5HjNsWCKa/6aoVN1H3BPk
Q7k33GF6ByeXf+yvfwFyxhz3
          "]], 
         LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAA8BP633xsVkAAAAAAAAA+QKDoJhfQ
elZA9st7rCIXOkB4w3DmxYlWQApOXGacGC5AT566tbuYVkAzT9QXP+gRQCZ5
BIWxp1ZASIhPWvK4zj/+U05Up7ZWQBAbr2BxLXc/1S6YI53FVkBI4uM8nMg8
P6wJ4vKS1FZAK5JKK165Ez+E5CvCiONWQCTricZPHfg+W791kX7yVkCC/vjR
WivnPjKav2B0AVdAcrZSEHPH3z4KdQkwahBXQL6vSmcD0tw+4k9T/18fV0Bj
E4DZKUHgPrkqnc5VLldArPLf4Oq35T6QBeedSz1XQC8ylE/+h/A+aOAwbUFM
V0DZmomDic77Pj+7ejw3W1dAUhhDVHc5CT8WlsQLLWpXQKhBWX5IOBg/7nAO
2yJ5V0AqJ+y4MEIoP8VLWKoYiFdAY3r5t9cPOT+cJqJ5DpdXQEWTWk5Ye0o/
dAHsSASmV0C3IEm1oG9cP0vcNRj6tFdAAvyJQcDhbj8it3/n78NXQBdvNbUJ
5oA/+pHJtuXSV0BqYXm+8JaSP9FsE4bb4VdAtLvaCiOEpD+oR11V0fBXQAPN
8yMyrrY/gCKnJMf/V0Ao2cVNdxPJP1j98PO8DlhALqKplUSq2z8v2DrDsh1Y
QGuLM2I+Uu4/BrOEkqgsWEDcBLDSs1kAQN6NzmGeO1hAgoS9lK8FEUC1aBgx
lEpYQMsLaEncjiBAjENiAIpZWECnOn61M84sQGQerM9/aFhAAfXWmReQNUA7
+fWedXdYQMz2Rl6nhTtAORI1wGGFWEAAAAAAAAA+QLrXB0E=
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAB4BziUrEXEAAAAAAAAA+QCx+MuDu
0VxAHdP1e2N8OUC5z04jot9cQMoVoCGBZC5ARiFrZlXtXEDeJXUERhMVQNNy
h6kI+1xAA2o7Qx4t3z9gxKPsuwhdQM5ZsByKjIs/7RXAL28WXUAWN+OfboxP
P3pn3HIiJF1A381UXICKIz8Iufi11TFdQLcr1dDw4wQ/lQoV+Yg/XUBHL3CW
9ifxPiJcMTw8TV1AH4IvKCTi4z6wrU1/71pdQNpmjuwYY94+Pf9pwqJoXUAO
+usF3fjcPspQhgVWdl1AWmYsblh54D5XoqJICYRdQCu41GTniuU+5PO+i7yR
XUBX/8KvI3LvPnJF285vn11ANkXhE40D+T7/lvcRI61dQBAS+SoDRgU/jOgT
Vda6XUDLdylZ1wwTPxo6MJiJyF1AdtdPaqu+IT+ni0zbPNZdQMtiQ9SnBzE/
NN1oHvDjXUAFQvmPfLZAP8EuhWGj8V1AL40/qt+sUD9OgKGkVv9dQGzdTry8
12A/3NG95wkNXkB8R758yChxP2kj2iq9Gl5ASbhAKAGXgT/2dPZtcCheQHFc
nF+NG5I/hMYSsSM2XkAR9P4UKrGiPxEYL/TWQ15A89zZ0kVTsz+eaUs3ilFe
QP7fZNjn/MM/K7tnej1fXkD8XFpFZabUP7gMhL3wbF5ARBHr+O5A5T9GXqAA
pHpeQN50L+OGrfU/06+8Q1eIXkCTvWK5q64FQGAB2YYKll5Anrri1fneFEDu
UvXJvaNeQBhT3JfTySJAe6QRDXGxXkASbl5XP44uQAj2LVAkv15A0BKfpKLX
NUCVR0qT18xeQIiOO4PgUDtAc7wwqw7aXkAAAAAAAAA+QATiIjI=
          "]], 
         LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAsbzKBCcNa0AAAAAAAAA+QJa1Y94a
FGtAfLmsFryCOkDSm33BbRtrQJF23oRQ8S9ADoKXpMAia0DHLn2ahQsVQEpo
sYcTKmtAMzfGU1Jj2D+FTstqZjFrQJgUuUjO7IE/wDTlTbk4a0CFlMv4gkhE
P/wa/zAMQGtAHtzazO3NGT84ARkUX0drQH+NIcydXv0+dOcy97FOa0AlFgQ/
UFbqPrDNTNoEVmtA5jwGesbr4D7rs2a9V11rQGZqvdLe4tw+JpqAoKpka0BH
ouzmgNLePmKAmoP9a2tA4q+HrL2U4z6eZrRmUHNrQCE0LfLZfOw+2kzOSaN6
a0CtQb8BDQH3PhYz6Cz2gWtAt6U4HOkeBD9RGQIQSYlrQPzhRnt/shI/jP8b
85uQa0CZgORO7C4iP8jlNdbul2tAnIoGCyBKMj8EzE+5QZ9rQMZMGif420I/
QLJpnJSma0Ds2NxBDc1TP3yYg3/nrWtADs0bjTIOZT+4fp1iOrVrQJwVMOFP
l3Y/9GS3RY28a0A5GlAeQmOIPy9L0Sjgw2tA8pNI1+tumj9qMesLM8trQP7h
wjk2uKw/phcF74XSa0BULmr0NDy/P+L9HtLY2WtAPQ7p6Jj50D8e5Di1K+Fr
QINVo0WnY+I/WspSmH7oa0A9g9MXDL/zP5WwbHvR72tAL72wo3DGBEDQloZe
JPdrQK6Zj5Dh8xRADH2gQXf+a0ARG8x/SJEjQEhjuiTKBWxAvN4gBw05MECE
SdQHHQ1sQB1rgpcIKjdAwC/u6m8UbECVChJhM3A8QGBVqScqG2xAAAAAAAAA
PkAKqhEo
          "]], 
         LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAqaF9mlMnbUAAAAAAAAA+QDx4PVMJ
Lm1A/9DXADDBPEBujnDc3TRtQM43vAa/ODVAoKSjZbI7bUAVGkaR7HIkQNK6
1u6GQm1AkGXBr/54AkAE0Ql4W0ltQLT94Uqgsrc/N+c8ATBQbUC+MpCSfwlu
P2r9b4oEV21AwEec4xCCOT+cE6MT2V1tQHJTH8mYkxQ/zinWnK1kbUCLyQOJ
wvn6PgBACSaCa21AFoIphUEM6j4yVjyvVnJtQAaYLRs0K+E+ZGxvOCt5bUCq
nzn7fQ7dPpaCosH/f21ANL1lhHsF3j7JmNVK1IZtQJyvWwmrLeI+/K4I1KiN
bUC/9EdZ6fXoPi7FO119lG1A3OUNOu3p8j5g227mUZttQAKmC3Te9f4+kvGh
byaibUB59e10aeYKP8QH1fj6qG1AFGKQUJh4GD/2HQiCz69tQODikCvyDSc/
KDQ7C6S2bUAMAaWiP002P1tKbpR4vW1AO3bJ5+0ARj+OYKEdTcRtQJixt/Tw
BlY/wHbUpiHLbUCV62YFOElmP/KMBzD20W1A2z7gcA24dj8kozq5ythtQFf6
1zGZSIc/VrltQp/fbUADr6QyqPKXP4jPoMtz5m1AFuEULdWvqD+65dNUSO1t
QM1dn5Aderk/7fsG3hz0bUBsgkRrGkrKPyASOmfx+m1A4nSdDmcT2z9SKG3w
xQFuQOuomOAKves/hD6geZoIbkDKuABZTxP8P7ZU0wJvD25ALFuyDna1C0Do
agaMQxZuQE6YmxGeFBpAG4E5FRgdbkCvafFSdK8mQE6XbJ7sI25AYIfR9yKh
MUCArZ8nwSpuQMVyzGAE/zdAssPSsJUxbkBNaOENdqw8QJJM+PXBN25AAAAA
AAAAPkCS1CkF
          "]], 
         LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAJE97a4E4cUAAAAAAAAA+QGTuQxYI
PHFATJw5ICbtOkC40ycdxz9xQDVgQa6dYzBADLkLJIZDcUABsX91mmwVQGCe
7ypFR3FA5XUSbExS1z+0g9MxBEtxQJ3MNrkwDIA/CGm3OMNOcUA/XF3b5uVB
P1xOmz+CUnFA0kE+XVvcFj+xM39GQVZxQHW1j7p5gfo+BhljTQBacUApQcr9
zXPoPlr+RlS/XXFAdZRdxjRB4D6u4ypbfmFxQGcRveL3ytw+AskOYj1lcUAi
wCwGEejfPlau8mj8aHFAXPAp/mAJ5T6qk9Zvu2xxQOwxbLgAuO8+/ni6dnpw
cUA4RIwps376PlNenn05dHFAW0jKAc3rBz+oQ4KE+HdxQCcXJz/W5RY//Chm
i7d7cUBf1ubBSuQmP1AOSpJ2f3FAGe//c6agNz+k8y2ZNYNxQKyhtg2Y9Ug/
+NgRoPSGcUCUnpiPXc5aP0y+9aazinFAYUZqlF0gbT+go9mtco5xQJavgnwA
538/9Ii9tDGScUDOAP5Wm5CRP0huobvwlXFAxtdl8zBooz+cU4XCr5lxQNUU
ykAVe7U/8DhpyW6dcUCiOhDOKMjHP0UeTdAtoXFAPyn8FyNH2j+aAzHX7KRx
QDPD69c52+w/7ugU3quocUAC7UswmzT/P0LO+ORqrHFAUsRWvrdPEECWs9zr
KbBxQOVcHrX67h9A6pjA8uizcUCLcbpCSAQsQD5+pPmnt3FAmTo5aygtNUCS
Y4gAZ7txQAumpbnlRDtAWa/i2PC+cUAAAAAAAAA+QIToD7w=
          "]], 
         LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAm9pJutYjeUAAAAAAAAA+QP7C3aVF
J3lA8nvzOjB9O0C6JHyq8Cp5QDn0PO/DqzFAdoYar5sueUBqM8N5SuIZQDLo
uLNGMnlA1HoSwGwg5D/uSVe48TV5QMQtWeQT+4s/qqv1vJw5eUDu0Orz6VVL
P2cNlMFHPXlAfOMRr8OuHz8kbzLG8kB5QBPfuNZwzwA/4NDQyp1EeUARMYHN
fY7sPpwyb89ISHlAhysuOVOX4T5YlA3U80t5QAKHdii2Et0+FPar2J5PeUDt
42HlxEPePtBXSt1JU3lAxFxdDsTe4j6Muejh9FZ5QGtKQeHLEus+SBuH5p9a
eUCa79NPtqP1PgR9JetKXnlAUebbXtrJAj/A3sPv9WF5QDqh2HLIXhE/fEBi
9KBleUCSbA7Tp9UgPzmiAPlLaXlAis9Ji+PlMD/2A5/99mx5QHSkecOTZ0E/
smU9AqJweUDLZJaexENSP27H2wZNdHlAwQ21TIFsYz8qKXoL+Hd5QDPbWE3W
2XQ/5ooYEKN7eUBIqZfJw4aGP6LsthROf3lAb7ScW45wmD9eTlUZ+YJ5QNbb
SfRhlao/G7DzHaSGeUC5HyRK3fK8P9gRkiJPinlAxvxHerWCzz+UczAn+o15
QKEB+Ow2GeE/UNXOK6WReUAjHiUV5GfyPww3bTBQlXlA96GuyYxwA0DImAs1
+5h5QMm9TABzuhNAhPqpOaaceUA/ki7015kiQEBcSD5RoHlA0vKyaj49L0D9
veZC/KN5QInXC2ELnTZAuh+FR6eneUBRGo7UwRw8QA7IlMn+qnlAAAAAAAAA
PkA7KiJN
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA0wKHqkTHe0AAAAAAAAA+QFk1giqK
yntAN4GmRHVlPEAsqNjMAM57QCxRyAhfODRA/hovb3fRe0BcAnTnNkYiQNGN
hRHu1HtAJXJ+QJGw+z+kANyzZNh7QLlKR+DlhKw/dnMyVtvbe0AYfMNywFVk
P0nmiPhR33tAlWGjUPTWMj8cWd+ayOJ7QIGUHzdsTxA/7ss1PT/me0AFz+3D
lMv2PsE+jN+16XtAPvaO3HlW5z6UseKBLO17QEKI3GdHOeA+ZiQ5JKPwe0C+
ZL+my87cPjmXj8YZ9HtAKO4aKtES3z4MCuZokPd7QB9ER8v8jOM+3nw8Cwf7
e0AWhkQvHMbrPrHvkq19/ntA+SO55c+w9T6EYulP9AF8QL3yVQMHPAI/VtU/
8moFfEB2+7FFMzkQPylIlpThCHxAUh8f8kMmHj/8uuw2WAx8QOEs7NU08yw/
zi1D2c4PfEBEnVY4Jn08P6GgmXtFE3xA5SwDGr2MTD90E/AdvBZ8QN26dy9w
/lw/RoZGwDIafED3DdWQZbptPxn5nGKpHXxA7K6RwQ+wfj/sa/MEICF8QMoF
1suB048/vt5Jp5YkfEBAmFz42Y2gP5FRoEkNKHxAd0XErnBAsT9kxPbrgyt8
QAT3tbRS/cE/NjdNjvoufEC6uZ7fCL7SPwmqozBxMnxAxHfyHeZ14z/cHPrS
5zV8QDPvz3WjCfQ/ro9QdV45fEDZQmS1NEEEQIECpxfVPHxAdYO/R8G7E0BU
df25S0B8QIbQ8oSMASJAJuhTXMJDfEDzlT1g7bEtQPlaqv44R3xAHrMnY5t9
NUDMzQChr0p8QCwS5hTTHjtAGDKOhRJOfEAAAAAAAAA+QA6pJ2s=
          "]], 
         LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAA85gZL9RggkAAAAAAAAA+QN7U0YiM
YoJA5TaaBGhVO0AMvanUYmSCQFDVJlrAWzFAOaWBIDlmgkCPBLHEF+MYQGaN
WWwPaIJAhJ/5JOwk4j+TdTG45WmCQPajAi6QNok/wF0JBLxrgkAQpA8CgGFJ
P+5F4U+SbYJASrFL26kBHj8bLrmbaG+CQBrCSL1jLgA/SBaR5z5xgkAow487
zd7rPnb+aDMVc4JAoZIvJyZf4T6j5kB/63SCQAMoKmwEAN0+0M4Yy8F2gkCW
MBKBk3LePv228BaYeIJAaMdOjyEf4z4qn8hibnqCQFxheawqmus+WIegrkR8
gkBHhjxGKC32PoVvePoafoJAUJIkZN1WAz+yV1BG8X+CQMtK4kJG8hE/4D8o
kseBgkBu0FTT23IhPw0oAN6dg4JAaG2b0SKQMT86ENgpdIWCQO/DesbNIUI/
Z/ivdUqHgkBAP/RoVxFTP5Tgh8EgiYJAGopAd3VRZD/CyF8N94qCQHTG42w8
2XU/77A3Wc2MgkCCPFPfY6SHPxyZD6WjjoJA8Dys81CwmT9KgefweZCCQJTG
Y25X+6s/d2m/PFCSgkCVRZaXEIO+P6RRl4gmlIJAe44PTESg0D/ROW/U/JWC
QBnEcQt7D+I//iFHINOXgkBV/KL61nLzPywKH2ypmYJA4jWkBymGBEBZ8va3
f5uCQNO+t20XxBRAhtrOA1adgkBJw5JKtXQjQLTCpk8sn4JAiAiQvRwtMEDh
qn6bAqGCQLMjwZegJDdADpNW59iigkCoe45RSnA8QOpWvZuJpIJAAAAAAAAA
PkCYkxB4
          "]], 
         LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA5Fdfxdayg0AAAAAAAAA+QNTFHjh0
tINAryjJTT1nO0CNttJSMLaDQGUbyxTTKTJARqeGbey3g0BWFn5H4nQdQP6X
OoiouYNA9qP1aDyN8D+2iO6iZLuDQBwZoml4zJw/b3mivSC9g0BeYr9LKWVZ
PyhqVtjcvoNA8uXwiZjfKj/gWgrzmMCDQCWJ20eFsQk/mEu+DVXCg0AL5iqf
zXHzPlE8cigRxINAnV12dnE95T4KLSZDzcWDQKzeZBTWH98+wh3aXYnHg0Aq
0e1GRNbcPnoOjnhFyYNAitxng7IY4D4z/0GTAcuDQIcSeS3m0uQ+7O/1rb3M
g0CfjCx45D7uPqTgqch5zoNAbKkhiRYL+D5c0V3jNdCDQEhG62nnfwQ/FcIR
/vHRg0BFiIN6AnISP86yxRiu04NAjBDdj9NKIT+Go3kzatWDQMQldqO3uDA/
PpQtTibXg0ConIKQHIxAP/eE4Wji2INAFUgU+IeoUD+wdZWDntqDQKBt14j6
+mA/aGZJnlrcg0BUjZ6+aHZxPyBX/bgW3oNArBbHWz4Sgj/ZR7HT0t+DQGx0
w5sEyJI/kjhl7o7hg0Bj5H5px5KjP0opGQlL44NAhOMKmwputD8CGs0jB+WD
QNILupiKVMU/uwqBPsPmg0C2DWxRkD3WP3T7NFl/6INA44laTz4X5z8s7Ohz
O+qDQG1tfS7huvc/5Nycjvfrg0Cn5MZ+CtsHQJ3NUKmz7YNAMaFRHnj5FkBW
vgTEb++DQBVfkI/WiyRADq+43ivxg0DvAzt6m3UwQMafbPnn8oNAGy9D56IK
N0B/kCAUpPSDQITmsl1zKDxAedQ+/zX2g0AAAAAAAAA+QNupM9Y=
          "]], 
         LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAYyVHWXuLhUAAAAAAAAA+QFwz4aJa
jYVAosYV2lELPED+F9OqRo+FQEMNtFtsNjJAoPzEsjKRhUAxkiJJwsQZQELh
troek4VAP00QozzB4D/kxajCCpWFQInOUN4XHIQ/hqqayvaWhUDO6i2TlqpD
PyiPjNLimIVADBgFAbdwFz/Kc37azpqFQNZp3L6HQfo+bFhw4rqchUCI1mEE
ZPXnPg49YuqmnoVAfXMbupEC4D6wIVTykqCFQOnKtP/t0Nw+UwZG+n6ihUCt
Yrr8RVXgPvbqNwJrpIVAqlrvkKwe5j6YzykKV6aFQFiuzWY9KfE+OrQbEkOo
hUCdVg7A8oX9PtyYDRovqoVAKo2z1b1xCz9+ff8hG6yFQB/X2MI4Bxs/IGLx
KQeuhUDqnOYIa8YrP8JG4zHzr4VAyrqL9atvPT9kK9U537GFQNI0zhJ45U8/
BhDHQcuzhUCMYXtGVo1hP6j0uEm3tYVAMlFvI9yGcz9K2apRo7eFQOY1JuLi
4YU/7b2cWY+5hUDQxVvAXqOYP5CijmF7u4VAnKHsPrnRqz8yh4BpZ72FQKbv
NzORcr8/1GtycVO/hUD1X8p1E8PRP3ZQZHk/wYVA6PUcmVv84z8YNVaBK8OF
QHSDmzNKP/Y/uhlIiRfFhUBzfRZZ7yMIQFz+OZEDx4VAZrhVNorUGED+4iuZ
78iFQDtIm82aMCdAoMcdodvKhUCpJpj87sAyQEKsD6nHzIVAP/0oF6+fOUDk
kAGxs86FQBsuP4Gexj1Ah3XzuJ/QhUAjjsGjW+Q8QCpa5cCL0oVAj8VvCfI+
NEDMPtfId9SFQBRldaPvLiBAbiPJ0GPWhUDNgdewXkDuPxAIu9hP2IVAmjPl
TC39kT+y7KzgO9qFQNOVGlDK8Ew/VNGe6CfchUDyFolMYYceP/a1kPAT3oVA
mq8s98Iu/z6YmoL4/9+FQIsQoGgseuo+6/ZhuQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44204#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LrZKiVXSUDdkDyzKbII8k5PLm6ppSA1M25b6fBv4rOufCn1DQ/E27VX80QCa
g969uxtomB/0/l3r8X0wVjr7cb6JxK/XMUgk0QbyItmvXrTQsGryjMIzRRfw
cRZ85tVK8qc0S9Gl2wc0d8beVf5G4hXEF7WqhAljy2RvdP+g4Y7E5Uz69RuQ
9+0hNfkXqb/WVZa6ZxLAJ1v9vE0vqbcwH8kP82mgyXxpJzJAQ/Wd+SbLJ57C
2BFDs4Y/NGyQjPjD3pcPeYpvtUNGaWiVYH/xzblC8Jk5rLhrgoYr24TTRjaW
gGbDN9HZaRqG/9Wq1R8uhbHk07zP50k+3Zu9GRhUDrY6/oEvuOjI6Imotuiv
hMJ7RZ43l9DxyHxyb5JvHUiu5HL14qWjxE+u8KGxVgjyNTpuwUfHCwKB/oLr
+qCt/coxZQE6ih3GvfT6T6C7t2G/wHI6muNnjW1RsXAnZ41x9wo6Wlffix/W
soMZyWP6lYJ0JHA3o/yMGtiy72gkr6Zjv2zqz7c1q+HlULtS8Bo6Fh7Z+15/
9zQhdj/jmo4IHTdSb19aGTJE+Fj7DE6spWNa9w59xsYe4oMg7M8To6PT1w0v
zXS6CPWqZVleEnTMml9z8fydbiIioGWVmiQdJ0o2Uk6L9RMDW5MvDErRke5i
8mfDkb/E3l9uTRnr6biwNKCjvWaKSIvT3OYiS0eHGWflgNIlwGuxGLlJjo7R
i087WmIE4SRP3ejPjXTM8Zm1FlwnAaUFNw8nb6LjKNdDcUmxTSDtcTzPXoGO
um3zfLZLt0HQf0qikpvp2Jvey2ZtNYDPrWO+n7fQcZXlkHHwdlPQjCj7dFOZ
jt8vL93N/noUonZf3XloKx0jONH3ji86wcjUkbjVanScPGe3t4PuCfuzZKfr
1elYtq7dPi0yGB6d6re5up2O65ZnBRqxroDAuueFezTp+LllcUVI+k04844m
tVSLrKfCH1d9SIFXLLPgyp10LKHfSumty4CNOqLfaTpkfNEirXiJXFK0PwwM
9Mj8ug4PT/7Nh2/3HyXN6NNR5sVpbvP0QtC18V18QdBRcMR78tumEohbhSd8
kY6ng3h+NbeUwkTV8orthnT8oqLxYMqiHI4EfpQb2U3HXaPFY1JalZCjmsJ8
YkzH/871Xd94qwZWdbn/ct9Dx73Fs9u7M5rh3O0dRptN6TjSfGP38xu/oM6C
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
Nv0+h6qbUg==
          "]]}, Annotation[#, "Charting`Private`Tag$44204#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
IYNjZwpZY7I0XFe7a+nfT0ksPLtxq50CDZ0v8s3Ye4lggMPT4UIlGmaeMihY
LyWAZy8si1q3moYGfP2+Thd5Ueeih32gGg3tmlx5ejLn4Z/TF7lpTRq27+t+
cytjGj5dPlRzTpuGr0R8ON7Bk/Dc5d3tio00zH2ldvnX+jFwubpmj+5mGu7F
utQ9qUOww/Xe38f6NHQ/0l6yUrQPBN2nkxYMaPjmz38WT/S7ocXjovMlIxpO
pMdvEpTohChi3ZoaYxpmSz7/OVfXDmTyrvZtSMNjiZPpaZxm2Ed9ExS6n4ZK
reGvCUP1IE2XPcx/iIbXdcMOa/2ugu+M67yuZjSk3Z9xfyddCbVn/FJVLGj4
89OPm3vel0D+nscX6k7Q0EdkqzKHUgDxamHLvU7SuHVmzWhASTaE8McX65+i
oby88LuH69Lhbn8Gsceehm1DSf2mlBRgfCpSe3KehkapXxY7JeLBObGq4ZAT
DV+u/BK8MyQGbIJavWadafjs+07rlY8iwYT8Y0v8NRo+bI32l+a+L7fZjPyw
96BhY7VK8/riSFA3mn4gSebqYxbGIqfFwXJlvn1FNBrWtPk9oP/NAp4l8Qki
i4bLz2spm6ZVw+gPhQgNTxoeXFZQcfJ+L3wrU7ds8aKh3sXMj3MJvFj9ZhPf
ndtc/U7Hbhf5TxHz/AzTDO/SMOemZ9iGG5oY57bfccifhn3yDpvLxtTx+XEL
mdAgGrffemT81FgZfbeeKjn6iIYnA/cbSMfLI13eibT0lIb/xRbGPr8sg5dn
3dVTX9DQoTpf63OPBFp/ZTY6vqYh+5d51VdTYdxfeMtbLpKGT6VGVZ1yl6F+
RKB+RQwNdz4c9KkW5EHV2yHd9DhuPqpl1/hE50DKJfrh+iQafhzSP2K27g8s
mqXs+5JKw9b7qda7N4/Dr015E/4ZNDRLSaXFDA/DV+mKiD05XP8kLwUEJPVB
1WS95Vg+DX3/hpJWuHVDbusXvogiGnKuxhaIjn2Dtzl9aVZlXL6i2T1Clu3w
LHTcUeADDfe/FdjaVNwEd67Py2RVccftkyP14vVAcxQqdamjYcAjAUat7Ce4
ZCJDVmqiYdQ6SRJ1czlYa6toVLfSUE1cqdV7ezHsE9Nu+q+Dhp18jcm+c3mw
ZVT/5uZOGqrwr0g5WZwJqg27t/74QcOu3OK7a/zSQDLd9OfDXq6/Kmem9tgk
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
Ye/Ho20UYOHM0FTiL2d1DC2dSerax0KDqtmNDAVltH4f6XPkIAs/TP/RCRiW
R/Esi3PZh1nYEcG5qNMjg6UpswaaR1no7NqioL9BCllxURJBx1noofrMwz5D
BPWjjvX+s2LhHX+tnzoGAjj0ci7f2Za7//YUy2xPXgx/Gv2o6TQL38awGJbf
5sHuwXFXOMfCHWY9q3LrpkH63r/98RdYaJrjU/40ahI+3IpZpXCJhR/TPq86
uG0MrnuemPR2YeHwyq/8avlDsJ0x/2n0GgvNpO8mzkj0wSjxTcRpDxYOUPlU
grZ0Q8w1S1YFiYWqpq4XzvF3wtlLCyf0aSxMXG5krlDaDnIOsetfMVmYFr53
5rhbM1TbWfGK/sddPxuk1/y5Hm5ZLrZTb7Bw46Gu8gM1VbDryNuUHzdZWECL
3XT1dwVMmFj7Hr3DQi8Tj2O/h0sgDpYccvy4/PEfGS8xKgRHo7gdWgEsPHqT
59X5ihxYufWk1IMHXL100j6eNM+Aeh2e/vlHLFx1mF4ZGZYKvmvjC1yesfCr
/uLtQ8cTAVVtnjS/4OJlK6Y5hsbC9Eped3zNwmeu8jvGFKMhSTbBJCGChVPG
f5rWdEfAZQlbFcUYLl6HqydsHSJgtRDfn5tvWbjBfCPh1esoaOFJrP6dwELI
YA1dZyaA/5xt1JkUFm7/cleja3MOHJji41S+Y+F84sApgRvVMP8r0WprFgtL
jj4u6H/xE9712218nctC128LXsu8FuDqj2XLxApYGIB3ViZIyaH6l6QOWjEX
n2ZglEGROnY0n0rrLmOhfp42/VWcJj6o5fez+MDCnb0mHf4/16DLW4tT/NUs
tDe5vubvoCLirWfauXUs1Lw+Ovp+oxwqOHRPezSxsDHiy8vN57j3p5FOpVYb
C3MS/vI8fyCKFXK0J186WNgzMqHgFCSAL38XXnrQycLU/N1v/G/wIuWTiMGh
bi4/1dfPbrgyD0eirfgXell4fEoybZPUNGjeeNmUNsjCF/ravXuyJuDf6f4I
l18s/Hs+LfvmhVFoNNhCWj3Owpo1alI+sQMQJ83e2zzFwt0Gk/PMZT3gNVwm
7TfDwldrWOWX9nSBXYVkF8yzMOngGkX9cx2gF26X/GeJhUf+BNATL7eAECfC
M34ZG6MnPF/Gn2uATpuRoxeE2CgduPKFtn41ZG7ZrqIgxsagvSbvY7or4L74
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
n2njTwquNvqnppceB7lb3uncmaag1ubfxn/yEsFr0XrL3jlif7V9Zg+EskGr
sVdsaYHAq32/W9bZKpiNvcCV95eCJI5g9fD1PWCve/3GazYqcg52X9+9bQ6K
4ordH3JQkamyb5zdcB1KrWG7eI2LihJjemdi1DbgTW+j05Y8VPSrznikmbAR
u/v8bVR5qWjUf8/1loA86h1qtOBdTUXxQnMml4skRmWtO/CVn4o/uxbvXaoU
wUUpG4NKASq6s3ySlbmF0J4ZpRm7lopdJxQfr1/iw8KJPhW/dVTs+DRx4uQ6
bhSPTwnUFaHidnuHmBgrdvSy9RqfE6XiS9lHgs/8lqFNACxyxanIY/670tj1
D2hU8b26JknF2fD3LId9MxDi2yG4XYqKklXzbwfSfsGPbbFXx6WpuNf/yJro
1d/h0JdLLSmyVFytWnHF/9JXSIzU2uEsT8WEdSrTstGDwGW5ErZRkRgf3L2t
baYXznI2TA9uoKKLzG11bPoIZQUPrWM3UtF4nerl4fvtION2OvfkZipuuKFg
Ky/ZAjeVVMSktlKR9caf4n29AT52zXp/VKaiPrnZX7uqBrRC3nx4qEqsr1zL
cfZrBdzfH7DbahuRPxHbrPPupTA5fzRy7XYqhkVRvnTqFoDFK/mF9xpU/HJQ
ITvpdw6knv9uF7CTOM/ItQg9Uibwrs8rOqhFReeXj/6KXkoDpyaKNLc2FaXH
nDMUJZKgmmHqV7mbit4Hi3qPcifABl2xzxRdIt7I7yNjRL9F+dm/Z48+Fd2e
h5LvjcdBb3xqzKIBFd/dGbimuycJ9Oy8V14bUvFB6WfuNKlsiBTEM95IxXSd
mIbe/yphrmp1xc59VBzbd8T5itdHOHqjU3FyPzE/Zysaw5yCLPVn9JcHqCjv
VqxH116NgsMuX1wOUvHjTs27TnZy6Pp4l9FWEypet6/s1SHqX4Ml24uvplQ8
7r2F4TuliFu43nHHm1Ox8LPlV0kvaWQWhjudsaTiNxnhjlvnxHHI7cxb2SNU
jNRlaytwFEbcqLq15z8qVoV7auQZCmLMp9/+kdZU5KYEvNXv48XlkPJvx45R
8cz9vXn+HlxoZxRoKnKcijXawXKrWtgwf+FYWostFS86Mf/2vVgC0QyFNSH2
VHzlmxSYXTwHHo4/XM1OEvvNc41ty5qGlvX5jbwOVHx/5NQz2dKfoN5MVa89
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
Ny6FNwtAmJqC+P/fhUDdv2QnpuwFQMYSp7g=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44204#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
J80RxQbbe8e6o0FvwiX5WpYjVtU8fdDgEgE1t6s7ynMd0ebwXK9SYigY9vLz
Kxdy9GquuMLkXCA0X9DT8Cx2ROHe0508X33hYsPjqzNljjjnUXdKTNsHvpws
fX6xyhEb3FeXLLA9waJ0OetdjSNuVPFzObPdHYb3H+6X/+iIBgExG4Is3cE2
3VHMpcER1Q7Ftfkc94GpHQUHfjRz8JriW/fyVDhQo//cPtfuiCOqVcuDd9Lh
76Z9vjldHD2sFBOx666H+3604s09jtgcxkgRTv0OvCuzvj/66ogr4/5F78ng
5dy7M+uGv3HwTfxZwrVZHFcuaeidHnFE1aT73fL5oviCRiCkfXdE14YTehPf
BXHdZGqY1KQjlq7fqq9Wzfs/iqw7nur3i9sZGQ0SIpVSiYqUqHNaClFRssNX
acpK1t33tuyZJJvsTRQyMiIzZSSbSmQkW/0+vz/v63k+Z7zP+5z3eV4XI2zH
az2mPbHm4ppnpMtsKNu3+0/fH0807FzzPIptCRKNbspqLnhi2HP92Um9WdjV
kqSbuuyJ9at7AzbbTUOm1jc3ETYS6rqQLn5w+gUqFXKJ9zhJuDao/tQD+R9Q
eNimtYuHhM5Zb0K6a4fgSG7sX+AnoUDMP+2u3f1Qsbt/V4IgCU/wPHx94Uo3
nI6Xucy/hoSBOfL6L+3b4YOUBePuehIubsy7yjL/CBdCIjLbNpDQZu/LzQ/+
NcFnwS9f1CRJ6KG4l1xwtw5MH2zkjZIm4UyLV9+j9iro+3tZhWsLCa/V2uYu
C1SAzf1QyxtyJPxunu8h87EEfky0eTfKkzDxxMCWoYRCsLu+rkhZgYT7Vpi+
E1fyYLrvwnCYEgkj/7sicqczC+4b+6/5u5+E/5ya5g4OpsJyS+OR/1RJOKmk
9OWk5EugaQverFUj4ZMHQazdSnHAU6kTuucICfsqdv9LmI0CL/UnFYFInGvt
vVlUFQ4iebW/5k6QMH5tz5FdEaEQorBK0vw0CbcuOGop6geBRMKp0xXaJLxQ
5eBXUOsPkZuYTjv0CLyYvwwXv/vA1tCKKO8LJFy4NwR6v70gSYj9w9RFwn47
Z/qaMW9QeAjzhkYkDNviG1X8IBCy/5G2FZuSsHM03UD3ZzTx3io+L3uFhBuG
vF9rlxTAm8lFzwfWRLza1wsU0z8C3lBL/nmVhBJnkhI1Lk5BVf/9T+dvkLBO
f/mScQYPapsUsBfcJuFqyUfk4GvCOJEbJHfVnoRD7F8uxlgLYLCgg9Z6ZxJe
PXIy3deYBw/Z6t2pvE9Cv5xmT4oCB34t2x3g6EHC57Z92ya9VoAuwZcvSyHh
hzb3LkOuedjuPNLRTCdhIXu0YQTrN9Q3VC5THpCwJZ0y5VY8AfY7YjYrPSEh
75sjnN31P2A9jXyyx4eEhutUnnTODUFRl+l1nwASCq7nSFcU6AcLFTVvjRAS
Sm/jFpXJ/wIcvmJZP8NIaLTD91gI6zO8/Pb7Y3gECeNuKJKe6LXC2WMtc1rR
JKwc3rJ/paIBJsMzJBfiCH595kjU3VcLITME5i9JaPvQIvF5SiUc1rvx3+VU
gp9q8xNsi2+h56XmQ55MEn665DM28q8IGOzbUvNzSDh8UE50s1w+yJuyN9kU
kFA9LW+XoUo2fMjrmV73moQuUdKilVxp4CBULFZZQsLR9dxPRzsSQez6s8OO
5SSUyZz10k6PhdflLhayVYS/wFUVqSmRcEXyIr25loTlsvf5eU2fAde9fYmU
DwSfzW1LpvaFQFKjUJ1iMwml9DeeYGcLBF35sfGvH0loqpRrOn7WD6Zp79f4
tJMwKydtcN9/3hD6JfGAxhcS5rPXzycc9Qb1A0zjnz0kXH6e7idoFgB9vlak
8AEScshu6d/jEwWs70djtEaIeG+uD/sQXwC7jktVzf8gYXbbb12Nnk/Q+Hzh
+8txEt7QUT72eW4GnP58Xn15ioSqoQmOsmb8KH4uby/PHxKak++MHK8WwuKk
gIv58yTccrtheayED6047rraLBP8lJfXPDvLRcztsxHr2Mj4Wsq+q5OfHVPz
d5ZVcJIx5EKlanfeEpwXXjXksIqMTk6dVBvWLMxcH1olK0DGY4N71S7qTcOz
ivLdzUJkVMuT47CrGIejUlHnKGvJyHkkhufh3u8wcM/TSVGMjHWk3XdoyYPw
sMn46deNZCxt39/zabYXFHYefOO9iYxTRhIJBkud0EJf36suS0aDpVI5T+lP
4NI9xfFzGxk7HujGJO9qAQnVpu3h8sT3WvqLzO/18NYvTVtLgYxNO44fz8is
Bpsfj+3mlcj4ghZ0/5BDBfCesA18qUzGB3c8FvKXSyA94mSB4UEyVizGRipZ
F4L+rGwXtzoZbzVl3T/4KRdmz/1byTtKxv1bljM6tmbB8+RuWZvjZIy7MuFg
pZMCyPn61DpNMobdFRZwdk6AIbOnNyq0yNid1vKoxTcGHhc4+zjokvHkGpOm
if4IUBTRz958gYxmRXc2WP9+Cq03lD41XSSj1uHIJF/JYLhfuXqBbETgK/aI
q1ExAMTzZyd+mZJRoC4l48gNXyhM7BuxuEJGk2+RCUWS3mAUVve10ZqM38Ri
HRZo3jD/OK/t6DUin8dhF+/FB0CYR2R9xg0ynrbsiOn7EQmH7jyqkL5DxiuW
lY+01POgw8KxyNeejJEFpqkXKC3get4s668TGakFn96efDYB4sc1X9rdJ2P/
8PcRSgI3FirvjexxJ2MP8wCfiqUwGslJhOiRyThzNW5rH/tqnBfj8i6lkfG/
9Z8tEg6swjDeX3RFFhn53/VxtGzlxEOL7W6Rj8j4SGBOKcLnH3T8LLcX8iZj
Y9DvO3nsi+D6NdWW7EfGdRL7J8/e/QPiTSEWvwLJONBhKx2dMgWFZZRLFqEE
HokNhWtkxsEo58bZxmdE/Op8zg5s32E+zuDE0RdktHuucFG9dhDCQo4czogm
o+Ltf//Gdfvg0MMd+6TjySgoGLFVr68LOlzXyPu+JOP5zLw377Z/BtebS9J/
U8hIcpKXGTnWCuJmw6J2GWRk+/miO1q8EQp1m1b3ZJNx1S1JjduNtWAERZx6
+WR0vvFfyU3HdzC/N26xpJCox44Q//ddZRC2xWdqTzEZ971NMlSoewOH1t//
/uItUe8g468/fhRAB7dVr2AlGRnqnKvlRnLAdU77M6majONv95I27ssE8R8q
DePvycjtLV18rzIZCruk35k3kLEhXCJh4/kEMPrA+6ahmYw8LtsdLdJjYL5k
OvtIGxlXHlkN7nB6AWGZ3Unp7US/5Iy51+SEwaGY6qhNX8j4Pdt46PxYMHQE
ZoX69JBxflDgmsJiALgyw31W+slYaLFY0v7QD8RdmMw7w2QcNXhm0B7rDYW2
dh5fvxP+eUq8eqa9wMjYyFF3jIx5CncqBsb8YF77+I2SCTIOBSVlpcaHQZiG
guWe30Q/HrMT1CWlwSFFscsvZskoV9d7+jlbDXTIsOkJLpJxeIOj/8nNw+C6
ZvQkaYXIR99uLN2dDcU529TH2SjEHv/w/VY5ISycKdlvzkVBhk2TGC1YEI1G
Xu5sWEXBjucOn8nZvDjfHrD5iAAFv81tVv56hQvD3ntsSBeiYI/Ly59h9Wx4
6M1VoU1rKfh7t4xrduYSdKSd4/YRpaBQz+Ofr1pmwTVSbXlZnIIzR8d/lDRO
g7j/1t+3pSiolmZhFsY2AYU0wdFuGQpy3/756bzPDzBymus7u5WCpYM7xy4K
D8O8TX978XYK/udRUMgy7Ycww/pGhV0UPKvatzMnohsOncmvithDxM/VMccT
0g4dalHFq/dRsLLvrVHF3Y/guvtxrqcKkY9p9yVx7mY49HdNrOohCt7a/kj6
wdJ7mG8O959Up6DJyk67A2uroDBuKyUFKDi85dnpz2Ll4OqSdsfmBAXpEZpP
uIoIvmkdMJM+TcGTzId/X5EKYF6yVLtDm4JJHnbCvzAHCn9pqgXqUdA3M0fs
SGI63C9v2nFWn4J8GQltnFJJoBpsJMZjSEHTyT8tLQlxMHutn6vMmIJ9h9/e
LFsbDQVqN3+7mVNwfP8o+dv9cHBZ/btf2YqCzj77s05xhYJqr0fzuA0Fe7Wt
TWSeBsJsNtfbl9cpeIHfM+GZgD/x/vBJt7pNQSOXoSM/K73B5bJYhKQ9BaOt
y3JvzXuB6q6oJ5+cKGi2ILW+6Y4/zC7vcPO7T8Hc1x2FscvPoaApy1bLg4L/
bm0aFpPOBZdYNUNOCgWz2x239Gq1guq9ipMldAqGqtf/u71nGmZP6yjff0BB
z6AIZfsaXiyQaJPd94SCX5UtmwzXCaPLuJnITx8Kbo+wXPixix9Vy4b/xgcQ
/Dtxs+6/k9w4G2g3bhFCQZ3RmnN/gR0Lrs59EX9GxLe/U/DM4hK4HKLWtUZQ
MDJ1Zxxf1iyoCvAVeUdT8NfhnsWmq4T/rwEvNeMpuIrKu9vt8zgUZEmEsiVR
cCu7l+am/d/hHiOO+TqVgtW3dbb1Rg6CiqGCk3MmgZdkcsKB1l6Ykc+3Usyl
oKVYKl9fQyfkLR05/72A4Oudkwc+jrWBc2P10djXFCTlSf5anmsGlZhze8xK
KfgxeLvYbVY9zDh1SIpVUHDu373c4AvVkKdpxd9cRcH6/fwj5RsrwHnj6Pzj
9xScPbjhXYVZCaiMOX470UDBMuXKvtaWVzBTuvRppZnoJ8l4tosXcyEvgPnu
VRsFHZSlHxf+lwnONoK5Dh0UXFngWPJjJIPKwdCY3d0UHE2znfxVHQ8zfDL+
w70UzB+dzytfiIa87pfkqEEK1trEDZwbfg7OmXvvGH8j4ut5HMMr+xRU6EWm
635ScMC0IPiCfRDMXDyu3fCLghJHtgwKJvtD3o76Qw+nKXiqZtxc3MMHnBcN
dhybpeBeHwM79k9eoNLQLbq0QNjTtVYo8/aFmairXPkrFLRhbfnLsfYpmKjd
d3vFRsUoNoeHfHWp8Dr2jX0wBxVNjArkTnyuBYnVbNcduKhY7ttWGHLpB7jf
O3lFj4eKU8ytzg8luLCr55Hhbl4qWnbpJhuaC+PhMw26vPxUbNTW8bZNEMDw
7DWnhgWoWFxbfDSLxYOLEoYaFYJUNP1BVbY7xYEmzHDlKGEqnh23dfSMXYGi
8Z5dnmuomH88OVuEdx7E4pK91NZRcbeWkfDDit/gbOQ8Nrueih6ge9EEJqFV
EHTzxKjIcX9InrNwFPZW8mU4iFNxdtMF/l3zw+Dr2iakJEFF/Fvh7SAyAD/3
RN0dk6SiU+/7Uz15X+HM4I3m5E1U3LCgeWTjnQ5IDFPZZytDxYAt+raxom3A
pfcvYJssFdfbMzTfMZrBirNuun8LFSWlbdzfyddDaWGwQdQ2Kq4J/+emcaka
pOyu5JltpyKMr3/jYV4B7lt3iUrIU/Fz82go14FSaO+Yude+k4oOTFKVd0ch
qPi+/Ry8m4qPnrm1zdrnQeCJJwf191CRjcKZJPsxCybnL4YJK1ExsGtomPEq
FXQzZBY+7KVi9yPl5Y3diZDy36jxk/1UDFq8tnhiOBZ4N+a/Pq1CRW7eFkN3
kyi41kiR5Fal4sWjPD/W7g6Hdwxtz4qDVJxXUbhlxR8KW9REv1LUqOipQC3O
aAwEyq/eI0fUqbi8lfsmt7E/dMelRC5qUDHc/7/YR2d84LDxvX+vjlLx+I7t
7uP//z9SCC3vIRU/WDxZGtvuC7OV/OX7jxP52t9fcbocAhfdPslOnqDiMXUS
B/gnQrZiND39FBWrtXnn3huXg9DQzcGbp6m4VfNG3tYNfXD72YGT8lpUjNsr
uyVy3RLU6bElDGtTUa6gZjyEvBp3cNVzx50l7C38kRG5LITMopBrlnpUVC/1
fml2nw8H7CxrNp2n4r0cEZib50Lctlv+ywWCz4m7Sx4R8yqy88+jMAMqrrw5
mBxtvgzLvmU/Ll2iYidHj9cP/TkwPumlve4ywYc/t7YG7vkNBQuXUpuNqDh5
ZKil9PEErM/cvNrXhMD7ou3esF8/wNHm520dMyoOCdM+eOsPQ/PGggZeC6If
xgQqTz7qB8UmqmL1FSoyt2um/GrrBi+mjh/DiooyTzfFzue1w3c1sUn8j8Bb
VNnvCPkjaE70nf9rQ9RbhXet9qpmiI9PzX5zjYq83Xf2rzerA3YTl7Vu1wl8
49syfqdVgYXwMSfVm1Rc/fw/y20fy6H4nUDb71tU9NodmPnsQglIuH9Wyb5D
xWZhv0PpmwrhvlJMiN1dKlrQ6/+6t+dC29Ct2d0OVDyx+uaBPZeyYH+46uUf
jlRckvmnJPYjBfzPsRcmOlPRrdY01kw5Eca5PojbuFDx4GCU9XfTWNB+Heom
60rFYfsCd1PPSEi6a9XV40bFGGULgbNuz4BHTkE9woO4n/96aB05BGy6Zp8b
k6g44K8pqm4dCBV+5ctiFCo+9Sf/tuDzB5lT3uZtVCoW3u49++iHNxiuaHM+
plOxdHVRRWSXF3jn8yUfYVLxlNmJ0CudvlB5p1ZvmkVF5Q87DIw8QmFR7uFM
4kMqhgR2fdqJSbC351S46WMqbvu812IytAJsQ7lQxIuKfBu13x3t7INIvcrh
d95UPM1tq7CTuQRtPHQvN18qtk9uODfnuBoF3uI+RX8qXltrVc+6K4TH7//7
PBBARUVrgeWcdD50VSr1fBpExaLtHSNX1Lkx85vnlrMhRD3pL57dfciOI1Hq
tWxPqegqW/7g9OQySBkt3skPI+aP3HfxsYE5MBApWncznIqZ1a47z7/6DU9q
7xdJR1Bx1w/OHFHNSSinql75+IKK53Zflrn1dRTmD/3hehRF9OPNAzFJCiOg
OJWbohFDxYnLJ0y8dQfgarLj+alYKv4hXWuZV+2BCKt9swnxVLz+57Y8a7ID
WjdOPjdJpKLRpJpIb0gb8LVmHBNOouJV6uXD3SvNgE/ufKtMpqIZ/ZPsKsEP
4HJcwcc1lYoZTdxqT3fUQPri6P496VSsj49U2rqpEoZykjv6M6hoG+pLW/Z9
CxK3rpNDs6g4ul77qrHQa7iwdcc2nRzi/F/3GRdmPjz6Mvz+Xy4VhUOSE0Or
s6E0KP5uXj4Vs8+Uae37Lx3+6PwneuMVFVlmTYfNLySBAteWN5uKqCh90874
pXw8WBf3Wba+pmKfm4tqZ0U0PHOO4nlYTMUKwUhvdo4IaFawSFMvpWJi8qr0
10FPgWdYSn/yLRWPxjSGpYsEw5EXX+biywn+K8SUBhkGgPOl8BfGlVSUet4b
7p/oCymCxieEqgi922Cb+vKgN/RXbfhRUU3FS1OLN011vUGc/Nn3fi0VdX7M
7NESCQA91RAVhToiPll3y/0REcD6ZdDVV0/Ya5YsGPyaDcWJa6khDVT8VLqB
W22uAaYtWuS0mwj9FP3PsGXtT9i5wb/+bzPB31d7hB97cqJlk55DbisVE+5J
b/i4XhifPhTccL2Niq+GHduWSldjI3wolvpMxcVtW3F+dBVyzT+xbmmnoqgz
+WFDOSeqZ2nxPuik4gyXdszxc2zoeJ034/AXKm65fTi7emwRkjbXGEx0E/lT
2a78pzYLvR2shbgeKpasXV0tYjQNYgEno4z6CHup2xYunPkFZ7U4TwkOUJFf
O7eo8e93YLBXjJYPUtHnyw7HiJgheF1E9XcZpmKSYV+/26p+mHQA1d3fiPqs
LQvJluqGHbv+fun9TtQzZb7/sEo7WAwU04JHCT1y9GfbueMjBId77NAao+Ld
EZbylcgmqNc/3LAyTvBHUd/TdmMdBHrU2rVPULF3Q0W55f4qMIo3FMmeIvaH
6tkY84PlINMwlP3kN6EXp0vfHpx/AyN/HA1s/hD57Y++fKuoANKk2f8cmSPq
9bYqY4drDjid9gvdsEDsC76e7AX8GXDYftOhqUVCX14ZVIm7JAHbs9TOumUq
bmZ6Rbn9iYPqcjWP+L8Ev56oimw3igaf0RopMhsNj4lG8r75FQ4X1xmWXuag
Ie8bO/MB21CQ0Bi6so+Lhv1RJ46Yfw+EfhtHdgEeGk79mY1a1PKHJB+2uKFV
NBRP0XwpIeQDdgW+J0v5aKho+eSt1FcvONArNfJUgIbfrnFWWUb4wfKq1IcO
gjTU9fC6q6PxDCr2qu3UESbsVVdO9a3OgsfGNXXb1tAwx+Ggw42rDXCefun2
37U0DD7NOK3vMQ5iqYOCHetpyHbk94/qGW78+tEhM1uMhqlhaTj2nzDGL/87
7yVOwy3Nt0spcgJ4U8532kaChh1od4RtMw/u1ZMKPipFQ9Hiz/ZmC+w455Jy
QFyahvc/ubiv7FuB0qhD7VMyNNyufHz4Vf4cMGurXetlaZjhF0bWOPYbdKYu
SiRspeGk7JlVazQnYK3E4BuyHA353JJNC6/+gI7jDuZGO2io+lp2h0D0EETd
+vd3307C/0ri3NjbPrgW7BMtsJuGx9s4jrmqfAGFEsnjwwo0XKfuemtww2f4
PZw8WKpIQ4ez1I6DUy3wWugQK2wvDf2DXk082NYA1IPV2x330/CDqnQpT2oN
nLa8WKujQkOnqBcBPGqVIPR44IacKg1f92QN7Dn8Ftqy7QX+HaRh9z3y2H6L
Igjv+pvWoUbDLum2XuEXecT+56OXo07Dk6S1xWIVWSCvIDnpdYSGV9kybt46
lQq/LiYHXAUa/jro5qSjlgj5pIPKcIyGfQU704bkY8EzsapN/ASB3wPT43+a
X8DxJgOX6ZM0vCatba2fEgZ88/0bPmgS8Ry518SVEAzNm+2LEs4Q+eRrH6gL
DIBQrb8mFG0a1vn/mK3P9gVzR+9lo7M0rGCFpa9Ie8O25xKR+/Vo6JYbWMef
7Q2jlUmw+jxRn+c8/ZdeBkL2mGr/8AUaGrx/KfHJPRZcRavobw1o6BnTvOgc
XQxHjxpse3aJhktD5/XXMLuBy7a/yvEyDY1q+h2/nFmEer+7tmeNabhimfPq
S/dqDCxc4d1uSsO/J7YrFowKolG/V8o/MxomhPcelMzkRRl+ibOdFjT0fXss
ymUNF47sTxrPsaThKzGL6tKzbJhmqurnbU1DH/rYv2C3RXBivtt7zYaGI3ox
R6Wpf+DQQof65ms0vP2447hV3hQs3xnX7LKlYXKI/QNr+XEoG2DXD75BwzlN
Y2Ufju/AvCxmrneLho/mDkpbVw3CmQ+7rvPeIfh7o+Vs4+k+EDwGThV2NOwM
Ody+0tQFrfkGZE97Gg4eer9KZf1nCN11/bGqI8HX/zo0rBRbwSTKM3jSicA7
IyidPtUA0usDolLu0XCNXHS1S1ItDDxKSLG5T8ND5PiaO3rv4OVKUb60Gw31
UqasjheVwW3HxrIOd6Jf121c5eP9BvZ+G6gP9KTh5c+Ke0azC2DGdO7zWTJh
H+Ioxbk5UNgsMMBDJfhVeblesj0DPE9tHi+j0VB+VW5vlVMy4GuVeXcGDc/I
PmGT4U8ALiUtzgMsGja78wyQ7WPgfZy50MQDGtaOkvo8+F+Ar7jjxuRHNBT7
5qctYRIG+j4Ptv33hIaB9a73fWKDQYzjudImbyLfnuVy99IA6HLJPNzuQ/Bx
2qNTQNEPIn9Wngrwo6HWql7T1Y7eYG3ZcV4ngIbWF26nmK7zhu2fxky5g2jI
yloXp+PsDz+12G3fBhPxbtWT9Q8Oh6xSUUe3UBqO/lb8808+C5yVd5GUw4j6
N8nrqbDXw6Gko4/Gn9HQrFsq8Wffd1iWMgh6+ZyGy/JpDY+fcmBZgG2k1QuC
bz2VhSujxL7P45ksGUX008MU2ZHh1XjGwz/vUzQN0bTCSpadFwUn49/6xdIw
Yt/ApuO1nNhqU1SnFU/D8s4d53O02TC0s+ETZyINBTZk3ZpoWwQTvYG+kpc0
zMu/N3VafBakK2d/3k+mocyCmUnGvmkYOCgwty+V6Id+rsjS2XFITJPhGEuj
oZ80h6N72ne4KasimJhBw1jP03vPXRgCpdAz4pZZNAxzXfub500fzPCbb5XI
oaH6RLXxW58vUEhxUGzLJeLbto7pnPUZPGdYar75hH5McqfyZ7YC3gg/eeYV
oS/10U42VY3A1ZNxjqOIhqHajVzjhu+hVr/SpPg1DXdPNIit6XkH3jXtV12K
adgw09BPUyqHCxpj9ntLaZiezTt14FwxiGWzeY6+pSG9wvi7qP4r6JITfRhf
TkNtRbq588FciAzfGWhRSfTDQ6O7jzMzwVr46AvxKhp6nPE3PyOXAtuZ+kmt
1TRU+/3pic7zBBidv5brXUvDpJ8cTskjMZBxx6NUs47wl+U8afv+BTgN+L1n
+0BD1+szWgnTYXDocnzb6wYC/zKG3guJEFiuL+x1bqKhpIxdWL5EIJRhw6hi
Cw3LvkbFnc/xA2Z+/5/vrTR8zv203emVN3SEVy3XtNFwaMpfQY3NGxSoyZwv
P9NQ/47t3i2h/kC96sP/oIOG0X2715wsjYBP2g5rrnbR8PolI+H/+PJg195L
4ie7aZgVGna25u5HIIuqyWztoeEdv08t9dq/oXVRajtHHw2tynZZaIby4fY+
tj39/TQ05dG8kDUihO5VQ8plgzTkcqFf1u7kw8aU2sNRw0R/5KsWUJe4cIt/
2jHyNxpeKK1RbmJjR5d7/mfMf9AwbSGp3MqHeL+aOJ/T+Eng2+Dq7KVP8AuN
DCXHie/LrDY0iE6Do5yG+eIv4j6te88P3XGo4d9s0zlJQ6mn6ktfS76B1CTn
rcJpGvIwzUa2aQyC/advDk9nCL2W717s3tUL717Xu7rM0tB+g6fCBewE8ehM
yqV5GmZ+/PNA+14b3GYFPVBZJOZbX3zUwaBmKLt532fdMg29rMtpVV/qYP15
0+DpFWJ+mEpGLlVUwfUD8LzlH9GvJQPSIrHEe1Jia2wWOx2fq63j3xhcDCJs
q5L9OOn4rszYuGfnK7AZHs2046bj/mHzoaWaHCiqayzQXUVHm4zM3FS3DBDK
yilR4KPj1E/brYtlSWAdEvpOQICO2cevSfTLxUOBu3v96Go6Gk7FplnfiwZ+
S4vW90J0lDgTeFtA6DlYnDremSRCR2Vtzs0vnUMhZ9f2vodr6ciuNuSg8SMQ
eET4v11bT8cT85+5VU76g+mf8fFTYnQcWntTbDObD2R1tcxsE6fj00HusSsD
XsBVlr/EKUHHO1eXri//9QOjhGccg5J0fKx3I0HzeDikPSHxVWyi43r2PZue
m2YDm72VSIwMHSvSltgWbjTDxUunNlBl6ch5UmNlVdAkJB3eKX1lKx1R2dNT
PW0VrsgIyh2Vo+OX2sXLP9WFUZ97avemHXTUd/b+eNeDHxNH2/Yvy9NRJKOk
uIfOjYtNhWpfdtHx7PtL+8vs2FEvPwJfK9DxQSuP1lNYhthw6ulninQ0oPIJ
TQ7MwizFRs91Lx2HtQPT3z+ZBu2rZy5d3k/HVM/m964CvyBKW8FMVYWOiff/
1Tlc/g4zSiL/iarS8fTamKcBhYQeis7cmDlIx1sDSevcZnohYrHd/qMaHdM6
/JxeDnbCZO+b+znqdHQyf5QTudAGJ6uiyAFH6Ljz82q223+bISyFwbIHOgb6
8aW7Pq6HMT9b73PH6OhylF89+1w14D2dIMUTdPzeICLCt74Cgk2UwgVP0ZH7
zzfv7LMl8B3WxYxp0rE2wdP+3NtXoCE397L+DB1rMryKBzEXAvi/ZKRo01E0
/F6m6JFMKJ3OWaSepePeFV73nfeTYazrieZlPTrWrXU+K/MhHjZWWgfuOU/H
5s5e93X8MaCZeriHU5+Or3jr3jHXRoBz0NpdXQZ0vPBJecsDg6cQ4zF6L+sS
HWOP7m9Kjg2Cxv8qyh9cpqOYwqED6Z/9YVknXNDcmI5tJhd9Od/6wE4VR2Nl
U8Kfjaz+tW4vMJTSTuAzJ/g7dM/nVrsPMLm2TPVa0FFaQkfwzYUQYr9a0Ciw
JPjFaf9Prvol9LS1PPK2Js7X5gYpTFfC6pLkNmsbOj4TNZQTWRkEtQTaZrVr
hL+vmUWGfWx4zcf4tvB1Oh4+OsQbWyCEQff2FQ7foCMr99SW6Q+rscycj6v4
Fh1HD/5rr4tchb9O9Z8LvENHx3p/3t1qnCipWPT8+l2i3oPkPbRT/+CMWMC3
ow50fLLnz6cZuwVw+XtdWdSJjpRlL/qlzBmIG0HKT2c6Cjk3FSe2TkJzo3h9
uQsdaeNlyZvMf8JKwaRYmCvB54vrDu87NgK7omqt7dzpSG0Ifui2cQCMHkZn
nPSk44FEflaJ/Vdg3XVdlCDT0WvXf5FhU+2Qc/m85hSFjrwRTDUVt4/QB/KB
NTQ65plwKq5KbwJBebaeFww6Wl9VLjhd+R4Oi3TsdGbR8cPjLp6zM+/Adj7z
nvZDOt4+ds/NSKAcgvselm9+TMdTu9aEb3nzBipqrwjOPaHjsZ1xh7X9C2Ai
66BxgzcdE06mGrw0zwGpZ8IJcb505NKh7xoeTQdt2rdJN386/u6tjbS8mgT3
b7zVOB9Ixzkbp+ETE3EQf+Hpo+3BdJThbnm8Qrz3WtTuti2H0NHo1sO9pxfC
4a/s6c0fnxJ4zdqxXbgfCgr8MreTn9Hx/J+J98kLgWA8PfuK8pyOVhYq23xM
/OFBVyOn4QsCfz/peaXtPpBXkXhOIYqO7p1CR/U7vKA/hfycI4aOnVHL7IcP
+IFQkOG3jliiX06d47A7GQbqHorKmfF0lPrDwzT+lA7X/+OhsBLpqL7miC1X
RB2E6vTUmSbRUTxh1PRs4ChUKheI7U8h+nfpgeRudy6clPS15k0j8Dgb+97w
ijBKc13L6Emno96thF/eGQKoM3ZkMS+TjvwmLjWekTzo2iaq6ZVNzEuervkb
thyYWDweYJVLx8wnm9OFJ1fgY3zV14P5dEzxyHpxyHge2Hxe7BR6Rcfu7Pej
Dg2/QfHevXtDhXR8YaXpMiExCabmuuWvX9NxUnlUS2v/KDw6JScYUEzMG9sm
c3m9YSjYs2JkW0rHy+eeOLUY9MOg6Kf4I2XE95k3zh5R6gYhbWWTmXJCD6Ri
XOWOtsMhcoBwaiURH8NIdWTXR/gvZ+KdVRUde1prAlRfNIHviK67eA0deeRF
ra6trYMiiTSlplo6CovefONOrYIhPf5hVh0dfdJaP395Uw7CjOvhGh+I+b9x
yFn1WAkcflV97ncDHY9a6RTDlkK4+nMbd0oTHf+pn5nYMJoL/jKM15YtdFR4
VpWRbp8Fbwz67274SMyXiFXzuCsVRh6CXGMbHTlSrzM2uiXCmuIXXczPRH63
XaM2xcaCxuSSn3oHHcsDqprSOaPAdpvJqelOon9SR5kb5p5BoFHhYtIXOu57
VvVbZSIESrzFsq58JfQjQjT6zrtA+F7mfFWsl458AT3f7Y39Yd2fVomGPjp+
Nnd+MKnvA0d37mtmDBB6u2tHUPUnL7hh7sc6PERHu+6Lpw2++UBwwPjhqWE6
dmmbXnyYFgxvq3QmX34j8skuN1pmJ/a7heQEix/EfFNf2/BzqRREFXlNRX/S
cTf7hoA7y18Ara+JfBgj6j37sjSlZg5uhb6rov8i/G16drithx9D67Z4qE0S
+J5b12Q8JITlf6l7J6fo+Oe1OiftDD+O7e8dTvxNxy0fHwYEFXGjmO2R5+Z/
6Jh14qj+65/seOz58/Pr5wh7qx+6CfutwO2mBe76eYLP0xcvXbach1BOoze0
RTrOGxh9UZCYgfKDBfaHlol52hJzv53Q47Fb67dPrNBR3m73KfvLP2FDtOOX
hH903FZlMLfNewSOtzX7m7EzUOdJBnN12ADc4VXSXMfJwKODF/d3pPRAmIbP
0nsuBvYJjdJ0tDuh0v5nFpWHgdH1YzTZL23wK17r2kFeBt7kmDjGp9wCGztf
Sv7iY+BlXvWwwxYf4KQgT0u8AAOzIzZ+ULxaA3eP2TwwFWTgLqNpOlmnEsLv
VaivFWZgYlKo9aa2t1CVvHmqVoSBZ614C84eew2TX8mJlLUMnO1soLsm54Pk
2q+mqusZOFe9tm+2Lxs0NdXXjIsy8Apjv9+nh+ng4P6sOm4DA2vCXhSP3EiC
iIw5D5ONDNyR/vL2vkPxUDNwad8aSQZa1cp2f6iPhmmxvJEaKQaq81nIkfgj
YJPO2giyNAN3biv8/ibkKZyh2F84sJmB1IIMf4ZQMDjlNvKMyTJQaNtGxfX6
ARD5TaE4ditx/+qIhXmEL7yX9HIwlmMgV0spX+Q+b5g592O7yA4GTr3i5Thl
7A0yzNPd1fIMdJhJVhtWDQDtwoQA0i4Gqq0ax/cnXoDzGOdpFQUGWm/hmg8K
yYGozdbLo3sYyOESZxQa3AQmVX7p1UoM3NxRXlmcMwHrb5ZYxO5jYPBqzd29
CzzYJPRTmKzMwChBfSzUF8YnueLlxgcY6JVXvMe/hh9PGWk6HjjIwFtSCcPi
9dzItuK0dY0aUR8+g8U1Wez4JiambewwAzMNeZ008pbBRbOJVavBwNaLfw8o
as/Bvp/LqvFHGfjm9NV25vA0se/s+k5BBr7PiNiynPwLXqoYPTM9zsB80dti
+/u/g3UnS/vgSQYykinDxUpDsImcu7RWk4G6tdfdxyz7oGNLf9qv0wwMT795
gD24CwJrhCzqtBiYpcB7JMj/E+je1hBO1GGg7Oz9Xk1KC/CuuVlG02Ugnwjb
8oDNB6jIf+pgfo6B3Sqb1Nby1wDJpGqL2gWCvyypOfacCjj0b/rjegOCb2l9
V8Yvl8LvuM2syYvE/bMlin3RhZBxRk/1gyED981+e9LzNxdujHt8e2nEwMOp
joFyR7NgW2ByGMOEgUXF85W9N1KgV7Vd64oZAxWn3Mz0GQkQ/oVr6bAFA1mK
Uk7TgTFwibo/TcySgTIOJVSJ7ggQkbM0n7ZiYMpmtbx1w0+h/r2PUON/BF/i
Wbv5+YLhgd2bt8lXiXou5Zo5SgYArvthz7JloMbzgkfhQr6w9Epsi9UNBior
pFz9b9QLCsxOftS4xUD5ERN1pXs+YM/uyBS/w8CCtbnzhkHBsDsx6sCMHQOX
a/LVjZiJMKLdMNJkz8BfgfS5F18qIGZi8WmqIwNHnkoPSu8ZBLNgea2Hzgx8
JiB1K9yfDTeoGS5auzDwovvpiv/ShLD1KyP1qCsDXxikNZnWrEYferaZhDvR
X93Tr257rcIzO3oFZz0YuMVjaSFzEydyflj9toXEwDzVPqVR7n9Qan/YPp3C
QKOgy5wTuxfATfS67GMaA31e7dt64/YMqLwOabVhEOfJi5+3B07CL4tKAkyi
fuUhQt2Do5DMOaUi9ZCBkz/FdlxoGQabJOmRuUcMVFKTGXyd2w/SumeffnzC
wLXreX6+L+qGzim3M5neBP/a/fTj9dohOPTlwhNfBho0r3+n9KMVzql/Srnm
T/ivWDyzNasR+Ps4zI4HMnAsd2c9eaQWqph7BaWDGXi/bngzSeUdUHdalC6E
MNBSZGet/dUyUG/0uvvpKQM/mU8fP/HiNcw6Fm3OfsbA+rA7rT/C8yF7w7cW
7+cMPPNls2azVzbcLl7PuP6CgTy5PUm3WGmww+q4yskoBv57EUG5qPoSBrjt
h2ViGKj59bni3EQsRKS8CF2KZeAFiV6ZuFVRcPlc/en2eAam/Q5+WfnsGYgg
xTookYHlUTs/a4aHQO1eZdK5JAbmDFx5xOYeCDTZb08FUhh4TVxrtaqUPxxe
+zynJpXgj5qnxx52H5jmONfASCf8N/0xfUDsW6m/Ob5DJgOfh7V5jjf6gs1Q
AcdyFgPlpCzOP48MBalPNzcV5jDQvUhVgDGaBG1V0oec8xjIP1oTrJhcCT4F
rfp7Cxj4cFVfXdPRAdB8+eDO2CsGblhtJufyfgX+Pj38KKmIgQHR4xLT1oJY
8OhXrM0bAr8TDwva5gTxrltsyeYSBr5sEVsXKMSH8jcNO7pLGSie56O6K54L
+0z4f4eVMXAl3ypLYpkNw3RKBS9VEPNpX09M3vQSXNBwlF/zjvhd7HbuzN9Z
4N+z/URDFYPYD/+cyB6dhopNXeaPa4h8F2pnD22eAHchX9dT7wn7J8JOU57/
AOV/x4LY6xn45Dz3zyNrhmFs4k96yYf/68fte4KX+iG+L7nWrZGBcVwDhvXM
bjBrMR880MzA1GSRV/Yu7SBasebvVAsDvZ2nzz3V/QiNOVXiGR8ZeLqyu39z
ZRM8iHNTvvmJgaFyRyrfy9bB0eA9etvbGTgcMXZRkti/5pj91wc6iP4fPLHc
mFUOWfdCGJFdDPwm/yzaYFMJXL+mFWnSzUAPY51vcrOvYPPllUKxHgbGWNwM
bCvKhc7T2R9bexkYG3xOQx6yIPDQ1V++/YSeH/T4WVebAto7N/LpDBLzdeHW
gzVSicAh0bB11TADj3+ZWHTTiYU3/LSjlSMMJDdL1vZfjQTnJRVjyncG/jE0
8gm9+QwUxr47qY8yMH3jlsdC90JgqDvCd+4nA4dc6g4dNw+EFw3nk3PHGXhp
SDx23yp/MCzlend3gtArC2pH9ndvEMos7Nk9RehdemlwMfFerI66vfBtmuBX
k0TFvJgfUPw3r4+fIeJRv1qoqPAUDtHaFC1nCT2Oc+cTn0uGSYdHWlLzDHxt
UeDVUvgOkqw1bDoWCH04dbZpHAbBymCSHLzEwBM1qL1+1T+QOBn/7PwKA/tl
J6W1SwSxVcUob/U/Yh5mklnkWkF8Ire6qZaNicl1AcHzX3jxhFjZDyYHE+OO
h1wecOPCZR5nrmNcTOxarxpyvJMN8+Z2yKxwM9Ewtf2rSdES3P7+Ra1oFRMr
F08EizfNglyn38V7fExslPOc7qmchp73J+7uE2DiwzNFKkZ9vyD09dzj8dVM
Yv/iq5669gP0UlPjk4WYeL10JZ19ZAhWRVx5e1WEiYs9RS889vVDmfe6Ltm1
TDSd3J14UrsbXEk1M1/XMXFotUOotmY78DvcvRggysRjNbzQeugjPLfZkHdy
AxObA3fJritrAgWjt+vmxZmY+FbpzMKhOijVsXVKlWAieeOZX9eSquA8CH+0
kGLi498bg9wGy2Fg/6v9a6WZmJLb+yPUpwSct18JrJJhYqzXKy2Dm4XALbFq
2lWWiZ2KS4//KeRBqGDmBYWtTDzw65fhTHoWyLNfzu7dxsQfLjdmlJ+lwuuZ
vyJB25n4KmJ28n53Ipz9nmivKc9El7rQuK2LsdDzRa95YScTUxNrdQpeRMHd
plml9N1MtLQ592XIIxzYKiP9LPcwUUP+0decK6EQWKA5sU6JiZt/jv0IkA2C
bSm/9Gr2MtFhWf6+RJw/5L8IzXDfz8RLZ/J+bSzwAc2Ao0KKKkz8SKP6Fw57
QQdz5E7/AcLe+GOZYSUfuOnq2xB8kImrTXIf7JQOguVbqnvOqDHxq82ad/7c
seB7pcd76TATnStyyLrfC0HG4MFYhgYTa674ul1v/wRZmopnrY8y0Xq6YV2H
8G84fvhzqigykdFeqhAzvwrb9pAF3h9j4n+qTnaXTIXxmuz2W54nmMjTmdZ6
4ooAzq9vrFM6xcSgGcrHb9k8+JjXZdegJhOlKk/tu1TGgRLLm56EnmGi12Pd
rY8W/kLaRNUPLW0mFnIKcw4GL8DRwTtaKzpMbJgVmfPe/AeaPosmZ+kS+GxX
ppQ7ToFlXQmvzTkm/kvwtRppGYPpkqvXN1xg4r0rFb93NXwDZrZgbZ0+E3cE
nOrdnjQIYgn5O8gXmWguadc6rN4HSWHmD/cZMpGv690u1+YuUPPm/jZ0mYlF
PDmTSnKfoY6SrhlmzMS8Y74TItqtYOZ0KVHHlIlg4cdZfKARfl1b4f5nRuCl
kLT+4u9aoJokXM2xYOJWrSfL5OfvYK2ebtVVSybaWivcd+Auh7hjf7ZttGbi
KH3yJJtMMagceMH88B8TI+Uim6rVX0G1/KkhylWi33rzD95RzgUjqfETyrZM
fPHlnAuzLBN+CIfEjVwnziWaBGM0U8Cd8whn+E0mlp9Yo0uvToDVc0PWureZ
iMKL4b1isRA56l3BZkfwealOiaIQCUo9Klvy7jJRt0+HfUj/GZS1dNNsHZio
JlTBMeMUAvpVzH4JJyaqwt5g/puBMFSocKzRmYnDAo0nfST84V5aWzTNhYn9
XcYrYgI+wBPtyXbAlYkDgXkP/hLvzbCgbZbf3Zj4efnuAWFnX9j18MPb5x5M
zGjnuiedEQLF7s4y50hMvLXkk7c+PxH07KQoHBSivoNnNplzlEOv1buefCoT
R6yFdlSH9QBbtfphXzoTZ6IKg1ILlmDLrtyQa0wmejc7/d6oL4gnfXdNHX3A
xOxopu37AkG8Nh1zdsMjAu89N7s0PHnxkeHGpInHTDTgfTB0b5QTk1/7c9Z6
EXy4carKSIkN66R5r0T7MDFBlrQQqrsIY3TKa1c/Ju5ed+GF05U/IPRtVvRC
AMGH/LTd3eZToKRj57AziLCfobyDXW0MzmcOf2APYSJXv21q3q8RcFxnLt8V
ykQt2TulJ2MHIPh+GyMnjIliOjsMDp3pgfwvOr1Pwpn4+q3ani3PO+AzVB7+
L4KJbq1a2x3/foT5uMOh6pFM9D+2JCgJzSDBmzO1LpqJ1QdadU7Z1oH67Z26
YzEE/z1ISunOVWDWHJ30Lo6JNy6kKWXdLQeyijjXiwQm+qVwZ+VfLoboML8r
914ycVdwv+t+/ldQvszzRjeZieJPE/ZdLM6BAUuy2PZUJn7bOHLFjZQBXFV/
HP6mMfGUYtEdk89JsH3nnYbPGUy02HRTtvFUPJz2GZLPzCL8Ga0czwyPhutT
psyHOUzUzJWdKjR9Dk8ufey9kkfUv/Bz17u3oZBWpK1+qICJG3C9UeaeIGjY
VBEqUsjEtzySc39J/vCLpjb9vYjAIzXbi6LrAyIjWbrlb4j4ToxFCxF82q8t
n/yshOCHxJlhiU5fMMiI4nJ8S+Tvzz4VEPgUnNdusNQuZ6L7q2QPqcdpEOri
+2ZLJROn+B2frLr0Hgq7uDcsvSPmva5xoQjpB3QeJTl+rGbikb/Vq/Q4uXAx
dqYhtZaJJ7bPjBkaCaPUqts7mXVM5DC9lHShRgCP3hpkmn0g6nNlB+NLBg9e
aTLpU2lk4vzqY6VMew6kKreqCzYzUUYjaGp8bgVin2o9HW5hYvfSS54F43l4
t1Q2XfKR4Mu/Xbfuv/8NI1cO6YV+Ivgr8tdsft0k8L7LTLZrJ/ShWc10ePMo
7JTfwX26k7D3dGRITH0YtL0jLWW+MPFuSeuyHvbD7UnR4rluJt4x29DIxtcN
vhd9NjT3MPFRg47M25rPkFXI5ZTUx8TQsq9sGfRWaJXybKQOEHr9STl8vWgj
/Kb+3mk8xEQjnYm73Q61sH74JmvfCKGPD28UnP9aCapaA31834n+1+iOqd5W
BkbpxhoDP4h8dAcyVI6+Brc1LU9f/2TiZS0ur0+X8iH83pnfgePEfDpFu33R
JBuKO9/q3ZpgoqBgc3snpEHPkYMpJ6YIfOdzh1J4XsK/mAxuqd9M1Bezcyc1
x8Jmnu1WMzNMVLFe0bjQFwnHb74o/jDLRO3M6gVjxjOwknhOY80zscPKJtHc
LwSodWGaRxeZeH5sXqHZJRCi3UMF5pYIe5znIl9t8oe3u4KbM1eY2CaZ/ev+
Kh/o6QoIuf6PiXaHwkXE273g7xM/E1l2Fq6bPuFoFe8Lm9R9ZLo4WGjvn6Nx
bX8oaPx8MhTIxcLlC9FmDyZfgunzR8k6PCwciFSoiKBUgLvOAzsuXhZ6smNF
41wfPFtiKJfwsbBvxWPPzMQSFKbS5u8JsLD7pk/YdO5qbDellCgKEt9XfDNQ
1RXCWQES/ZsQC81XaVODXflQrNj9dLQIC3e1Rd/o5OLGA7ddVxuvZaE434q4
jj47XpRyaVmznoV31+opnvJaBucPTqF1oix83qUlGc2cgyBPB1PGBhZmcXNO
elj+hhyFu5s1NrLwz1MlL45fE9DSfXt4RoKF+Orgo2S9UZj0vpmSLsXCJ3uC
jd+lDYPwket3r0mzcEe5ydOcL/2gOH5VRWYzCy0lDxVb3PkKui/+W2iXJb4n
iX76erQDbutalfpvZaHFMjlsbuEjeK9YMLTkiPv048tP7jVDarrZGY4dLNT4
UXXstkw91JmbCL6RJ/CQ4w2WMa6GUUGjVqddLDzqZOt74GYF8JVeeqqgwMLT
uvXdscalIG9nYDa8h4U+2+xcAziL4LT0BdlIJRbGV2psn4zMg2uNeiOG+1gY
ek1yzwv2bHhAPpsqrMxCPslJf9G1aZCgqG1fq8LCMm5N6uS+l/Cu5/QBmioL
3Y9nCH1QiYMh31OLaodYaDe48UrLaBRwwom302osPOWrGH8uNRy2TCAzVZ2F
UhWt86VuoXAs6qiWzREWFswNc7UpBIHlOQ2hTcDCtBoJm4p4f6D8U/v4CVmo
Pebe6JLpA5GZB8N8j7NQxuvUAnnAC0quHDA/fZKFLpF3+I8a+EC3sPIWNk0W
7g3QmPJmEvvY273fCk+zcNxpeYfn71iQtFdMc9BioX64qz77xjdweLOCwy4d
Fi7E0DvSTTvApHmn6uBZFo6Q/vrWHfsDbtQdS8/1WBhw2cqHy48Pw/bKlV08
z8IPc55qEXLC+KpvC0tQn4VxdWV/vhbw42f/zdrVBizk51oKLl7Lg39QWphy
iYV/r0s/Ob2PA9dPSbYdvMzCoCCNXf2LK6Acs/HZpBELuVssDR7nzoP+hQ0W
ySYs9J686i9iMgOO7KJbrc1YqKuxvSru3SQEZK/9LmHBwsL7QUcYMT8hy0ok
/eMVFsqLHh+drhyB5jVCjt5WBH/urfr6qnwAJsoFDp76j4Uxy2KG1773gJAj
3/KKDQuvr3E12X6/E7IMlzhHr7GQ3UslPZLRBvrq4wKfrxN8tHvgFPKgGWZk
etdV3CTyfRZXBtF1EMrVIplxm4XOr4zPnXOqgkM/KraG27Gw2Gjd8f1nyqGr
IW/3A3sWHqBSJso634BnTqKyoyMLaY/1h5UcC0DmaZi6hTMLLyllli+L50CF
x5MT2i5E/qCs7qGSDjaWnjqqriyk9Ke5d4e9BJ5TdgZb3FnI1bSlUWBTHCTt
tDQV8iTyD79z+enGKNAW0v9vkcRC0un8zGLSMxibPnFrhMLCGbU/r09tCwHf
9gNOrTTCf3PKO4P2ANhbvMOjlEHwf0KiqGLUF1qjNzJSWCz87nleZmi7Nziz
BLxCH7IwqqO6b67UG8RurgTSH7OwS6TitsLWICjSmwi382KhoWuMz5UD8WCm
3B9r4sPC/gxQ8hQph78bPqZo+rGw5PNMjf+2AYhefpezP4CF+clHp266seHx
/oLX0kFEf3JzVbz8KIRDVUkV/CEs/Hh8288tDqvxQUp43WwoC6uOqLQy1q5C
eT/v1oEwgr/zx5Tjwjiwzonc1RhOzM/7miLBsytw28h+4HUEC/e1n92vtnUe
hI5YjyZGsvDihHBDucNvyJK9OB0YzUKjgfOH3hlMgAGP5iI5loVq14z6rmr8
gNnRgxy34lno+6v6hMbFIQhr2sl/OZHot4Kv7wws++BwnuTaE0ksnOoS32xh
3QXdYYISSilE/YIFVm089gnIpH+ykmksXGlXM1GVaYHN1lM7V2UQ52UCe7eG
1kOF5uC+35ks/KK/9aKZWjXY7P6k1pvNwokkZ+ncb+XAI1JzrD6XhbPyyfwv
uoohaaZQ61U+cf97Qs84vgLtzpQLca+I+dMe+eTU2xwYL4kw9isi5tUm1Tcv
IAP8Y32tPN6wsK10MvGnXRLsf0i9YVvCQhFXaY7PNXHQdsvRweAtC9e4/7AU
XB8NLudt3KCchT9TD9rZXwgH8QOGtN2VLNzdir3bakLg9cYzjzdUsfCgek3I
iQuBYPZXLYCzhoWrPOUMpwP94O/A7mcTtSx8xfPzU9Jdb4iu2RTzpY7QB7rI
V44z3nA8TTi55gMLjY2t8+beBcCQP3t2biMLwwQShz0xBh7e+10Y1cxCq4dP
qo203sAuk+Eyr1YWRkaOlPwvdACL/3KX3D/MPtfId9SFQE1z+s1pgvs/biPJ
0GPWhUC8SZnbaKUNQBAIu9hP2IVAurYYehZVDUCy7KzgO9qFQPbxtCPu5QdA
VNGe6CfchUBZB3q4PEQDQPa1kPAT3oVAL9nx3kUL/z+YmoL4/9+FQEalGsgm
Avk/WR1hUA==
          "]]}, Annotation[#, "Charting`Private`Tag$44204#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uRL4Vq1JeMJBx1c+3aGPwsvAom8o1X41HRNmuIxqRIsgr7ou5/waOuZKzqwO
1cgF3rSM99Lr6FiRRR3zvpcJ5sEhH9avp6N5osU+sfoUyHF3rxnaQMfQDPu9
A+lxwG1q0vSJl45PhKnx7ocjweT0qe/xfHQUjYyODbgfAhn7Jbu8+OmY6e4g
c5P0CLj4uAesBOm4cesaxw9s7mD0d2TktBAdO1dUJOZ+2EJaW+P0bhE6zteV
l+nsMgXOkux/HKJ05B8suSVtaQj6Mc/Zf22l4+fzX39+qTGDZG/SurLtdMyJ
79CIu+4KqxzM+CJ30NE+MopdbPNz0L1yWpi6k45t9v9Zy8ZXQLzyPrHru+jI
Gj4c4FEwBUs7ePac3ENH51DZHnPfTXhp9cSB7XvpOBh27YOpnCDGDrXILUrR
0fXIDSl7uU24UJ+r1L6fjk0dLQqXeTegdvZLzJemo5HSDTtyCRe+CaNqPJeh
4zqLsWTvO+w4Q7HQdpOlY73YhjB65xJoWp65clWOjpc7d3e3H5mDCE3pawry
RH372wmFL6Zg+hDfjc0KdDwo7GVXUEHsw83TN6cV6Vho1HOg6P1veLnwzaFZ
iY41bZDzta0XxjsL7mUcp2O3fH6uWV8XqFVEkANO0JFLtmw+yLQdQhMZLAeg
o1WHTcomma8w/MTa58J/dNwv+DhiZbYR0EXrqYwqHaMvur9P2FYLQYaHwnhO
E+eTSduyOegjDIJA5LA6HfkKz2e+ESoHlT2zcTVniPnszJve1lUEAdztKYma
dPyk/J+a2+9cKJrMWKCeo+NfId2sUwJZMNzmrX5Vm44KtyWkWUupsKXcPPCg
Dh2PLe3u6+6MB/Uk5Q6OS3Qkx/qdKrB6A85P+fe3XabjkEM7vmgNhcgHQy5p
V+iYeqpTc8TYF+pulJV6XqWjmxBlubiRDItaYTzGBnTcu91/oCrrDuyTdzI4
YkTHnVv8+HmPmIPeNs2YdcZ0lLmg4yv+3RCYnBITnSZ0FDFSCojRNiHuV/Mq
OaZ0HBfZJLM21B46Whof+pjTsXfN9r6e7Mew4X1Ci7kFHR9o6Ko7GGeBUgxN
XMmKjo851Uw/h/WAla+B3UYbOm7QTXvMm7AWn7oczu27SUfBbnG+l/cEscR4
HWfhLTq2ioZ08KXw4+jp7guBt+loya/JCP3Fi1tl8l7Y3KGj2qeJ0Ysy6/CM
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
moL4/9+FQLpSjRr4JARADV3xlQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$44204#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 700}, {0, 30}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.829289921132641*^9, {3.8292903411842422`*^9, 3.829290360290547*^9}, 
   3.829290429455887*^9, 3.829290930480978*^9, 3.8292909955963163`*^9, {
   3.829292515444108*^9, 3.829292590968732*^9}, 3.8292927569952106`*^9, 
   3.8292967329951143`*^9, {3.829296859229541*^9, 3.829296912873063*^9}, {
   3.829296943507155*^9, 3.829296984449172*^9}, {3.8292970804977818`*^9, 
   3.829297124721987*^9}, 3.8292972142875834`*^9, 3.829300599549494*^9, 
   3.829301322656502*^9, {3.8293050231135607`*^9, 3.8293051094144983`*^9}, 
   3.8293051728352833`*^9, 3.835975831506082*^9, 3.8407974261626673`*^9, 
   3.840797466885435*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"2bb79f2e-0a44-42aa-9b86-dddedabec4fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mutant dynamics", "Chapter",
 CellChangeTimes->{{3.825769412647562*^9, 
  3.825769415790656*^9}},ExpressionUUID->"ead7366e-8288-4106-8d8b-\
fd2d25b516f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dImudt", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Gamma]m", " ", "M", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Imu"}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], "Imu"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Imu", " ", "\[Beta]m", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], "Dm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fm", " ", "Dm"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "M"}], " ", "-", " ", 
    RowBox[{"\[Gamma]m", " ", "Is", " ", "M"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825769422230962*^9, 3.825769513129081*^9}, {
  3.8259967023096123`*^9, 3.825996725661252*^9}, {3.8280750461966667`*^9, 
  3.828075318382303*^9}, {3.828075366538121*^9, 3.828075370894615*^9}, {
  3.828077455144182*^9, 3.828077549802657*^9}, {3.828077642956213*^9, 
  3.828077656785994*^9}, {3.82807883696902*^9, 3.828078847089674*^9}, {
  3.829300664192379*^9, 3.829300667314118*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"6eb89505-af62-4961-937c-4349fe0b0afe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMdt", " ", ">", " ", "0"}]], "Input",
 CellChangeTimes->{{3.829382729934622*^9, 3.829382731811203*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"b0ca857d-2406-43cc-8c79-9696520b430c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dm", " ", "fm"}], "-", 
   RowBox[{"Is", " ", "M", " ", "\[Gamma]m"}], "-", 
   RowBox[{"M", " ", "\[Delta]"}]}], ">", "0"}]], "Output",
 CellChangeTimes->{3.8359758316469584`*^9, 3.840797426177223*^9, 
  3.840797466898836*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"0041b1bc-f4e2-4610-b367-daeb0b5f3bf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Am", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], "-", "\[Alpha]", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{"\[Gamma]m", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Mu]"}], " ", "-", "\[Sigma]"}], ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", " ", 
        RowBox[{"\[Gamma]m", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Am", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8257435795568037`*^9, 3.8257436761951513`*^9}, {
   3.825744610613678*^9, 3.825744828142145*^9}, {3.8257448965209913`*^9, 
   3.825744964502389*^9}, 3.825745458268424*^9, {3.825760704533595*^9, 
   3.825760713722117*^9}, {3.825760799326695*^9, 3.825760852375071*^9}, {
   3.8257609318701067`*^9, 3.825760938385151*^9}, {3.8257617813820257`*^9, 
   3.8257618216608*^9}, {3.82576216653201*^9, 3.825762169581469*^9}, {
   3.8257622093116913`*^9, 3.825762212307238*^9}, {3.825762256134933*^9, 
   3.825762257461063*^9}, {3.825762311866053*^9, 3.825762366665176*^9}, {
   3.825762434544545*^9, 3.825762434692444*^9}, {3.825762474404647*^9, 
   3.8257624764593573`*^9}, {3.825762511865068*^9, 3.825762512862294*^9}, 
   3.825762602499343*^9, {3.825762666210616*^9, 3.825762667526772*^9}, {
   3.825762784268333*^9, 3.8257627876555853`*^9}, {3.825766791382381*^9, 
   3.825766798048353*^9}, {3.825766874527048*^9, 3.825766943144342*^9}, {
   3.825769542966591*^9, 3.8257696576848173`*^9}, {3.825996732450741*^9, 
   3.8259967406355743`*^9}, {3.828077614245688*^9, 3.828077729570053*^9}, {
   3.828078863692099*^9, 3.82807886824053*^9}, {3.829300674601161*^9, 
   3.8293006780443077`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"f4cebc04-e340-4298-96e8-c328fb91eaee"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8257625244133263`*^9, 3.8257626031628027`*^9, {3.825762663236967*^9, 
   3.8257626678481894`*^9}, 3.82576278821276*^9, {3.825766920117701*^9, 
   3.8257669437672586`*^9}, {3.825769650199383*^9, 3.825769658247525*^9}, 
   3.825996746123179*^9, 3.826257447260975*^9, 3.8262720330749283`*^9, 
   3.828078537142867*^9, 3.828078870108499*^9, 3.8280862481620293`*^9, 
   3.829287666181946*^9, {3.829300657078759*^9, 3.8293006789810953`*^9}, 
   3.8359758316698112`*^9, 3.840797426180828*^9, 3.84079746690376*^9},
 CellLabel->
  "Out[168]//MatrixForm=",ExpressionUUID->"987ba603-c9e1-48be-a390-\
fbfe57b69ac1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Am", ".", 
    RowBox[{"{", 
     RowBox[{"Imu", ",", " ", "Dm", ",", " ", "M"}], "}"}]}], " ", "\[Equal]",
    " ", 
   RowBox[{"{", 
    RowBox[{"dImudt", ",", " ", "dDmdt", ",", " ", "dMdt"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.828078539110243*^9, 3.828078556158781*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"5c27a301-7908-4963-8f7e-c73d2fc6019f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.828078556573688*^9, 3.828078872948539*^9, 3.828086250032992*^9, 
   3.8292876692328997`*^9, {3.8293006703928328`*^9, 3.829300679956664*^9}, 
   3.835975831706794*^9, 3.840797426195459*^9, 3.8407974669142513`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"6505617f-172d-45a7-bd68-2456bb959cdc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FMat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825744967827158*^9, 3.825745034216174*^9}, {
   3.825745077306136*^9, 3.825745105387485*^9}, {3.825745311533243*^9, 
   3.825745313136395*^9}, {3.825745491797593*^9, 3.825745495316793*^9}, 
   3.825762315649857*^9, {3.825768772228602*^9, 3.825768772621294*^9}, {
   3.825768859187916*^9, 3.825768868594355*^9}, {3.825769669045599*^9, 
   3.825769695878559*^9}, {3.82807856836335*^9, 3.828078595692235*^9}, {
   3.82807887689528*^9, 3.828078879595543*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"e835df04-3c93-4bd7-a1fd-7abd64356d4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMat", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"-", " ", "Is"}], " ", "\[Gamma]m"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ds"}], " ", "\[Beta]m"}], ",", " ", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ",", " ", "0"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"Is", " ", "\[Gamma]m"}], " ", "+", " ", "\[Delta]"}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8257450396770067`*^9, 3.825745047939592*^9}, {
   3.825745192814064*^9, 3.825745268738194*^9}, {3.8257453016076803`*^9, 
   3.8257453341689463`*^9}, {3.825745399738305*^9, 3.8257455244249477`*^9}, {
   3.8257606895557623`*^9, 3.825760698517312*^9}, {3.825760957784419*^9, 
   3.8257609605297213`*^9}, {3.825761783062153*^9, 3.8257618011230907`*^9}, {
   3.825761831680503*^9, 3.825761834014905*^9}, {3.825762172493878*^9, 
   3.8257622005331697`*^9}, 3.825762259568303*^9, {3.8257623163642387`*^9, 
   3.825762317714275*^9}, {3.825762514366149*^9, 3.825762515153265*^9}, {
   3.825762828234889*^9, 3.8257628382899017`*^9}, {3.825766807917742*^9, 
   3.8257668109003277`*^9}, {3.825766880574019*^9, 3.825766909146077*^9}, {
   3.825766949336821*^9, 3.82576695489468*^9}, {3.825768766180334*^9, 
   3.825768767468474*^9}, {3.825768873108182*^9, 3.8257688760621853`*^9}, {
   3.825769703295082*^9, 3.825769748060072*^9}, {3.825996753654696*^9, 
   3.8259967613251343`*^9}, {3.828078893379274*^9, 3.828078936583844*^9}, {
   3.82930068396945*^9, 3.829300687252771*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"b472f2a9-38fc-4d0b-9694-fb108fa525d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FMat", " ", "-", " ", "VMat"}], " ", "\[Equal]", " ", "Am"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FMat", "-", "VMat"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.825745535204224*^9, 3.825745546960334*^9}, {
   3.825762797727285*^9, 3.825762802679283*^9}, 3.828078970880686*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"795b1e23-f110-433f-9cf9-8d9c6fba297d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9, 
  3.835975831814047*^9, 3.840797426203302*^9, 3.84079746693712*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"d0abc0ba-b8dd-44c4-b090-2ac0ff5b98d9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9, 
  3.835975831814047*^9, 3.840797426203302*^9, 3.840797466937841*^9},
 CellLabel->
  "Out[173]//MatrixForm=",ExpressionUUID->"8208e86d-211f-4266-b8cf-\
7de1e51cb195"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"FMat", ".", 
      RowBox[{"Inverse", "[", "VMat", "]"}]}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8257455598341827`*^9, 3.8257455911249437`*^9}, {
  3.8257461264116898`*^9, 3.8257461486249657`*^9}, {3.8257623186116734`*^9, 
  3.8257623378340073`*^9}, {3.82576697533962*^9, 3.825766979793467*^9}, {
  3.8259994422573833`*^9, 3.825999447886388*^9}, {3.828078981152101*^9, 
  3.828078988764003*^9}, {3.828079342319439*^9, 3.828079343394005*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"2f501709-b002-41bb-9989-8b1ba6a84626"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Ds", " ", "fm", " ", "Is", " ", "\[Beta]m", " ", "\[Gamma]m"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9, 
   3.8280862571632423`*^9, 3.8292876770018063`*^9, 3.82930069387365*^9, 
   3.83597583193721*^9, 3.840797426246188*^9, 3.8407974669487877`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"9bc094cf-5382-45e4-88db-6369d0ace38a"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"R0", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"fm", " "}], 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}]], 
   FractionBox[
    RowBox[{"Is", "  ", "\[Gamma]m"}], 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], " "}]}]], 
   FractionBox[
    RowBox[{"Ds", "  ", "\[Beta]m", " "}], 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}]]}]}]],
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 
   3.828079343884613*^9},ExpressionUUID->"41c2c713-f743-4caa-89c2-\
5340a003b69d"]], "Text",
 CellChangeTimes->{{3.828079371356689*^9, 3.828079398327075*^9}, {
  3.828081925654728*^9, 3.828081971958478*^9}, {3.828083563011613*^9, 
  3.82808357625698*^9}, {3.828086532935025*^9, 3.828086537733881*^9}, {
  3.829024901330192*^9, 3.829024903924568*^9}, {3.829300702528157*^9, 
  3.8293007106618147`*^9}},ExpressionUUID->"7bb01226-5372-4f4f-9a39-\
b27c75757ca2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Double infection", "Title",
 CellChangeTimes->{{3.82937964935014*^9, 
  3.8293796517908154`*^9}},ExpressionUUID->"b519b780-77d2-4c70-8c3d-\
811b91a8bcd9"],

Cell[CellGroupData[{

Cell["Resident and mutant dynamics", "Chapter",
 CellChangeTimes->{{3.829718117545349*^9, 3.82971812201271*^9}, {
  3.8324025000002613`*^9, 
  3.832402501708288*^9}},ExpressionUUID->"dd4b5a4b-eede-4a27-8273-\
45cb623f333e"],

Cell["\<\
Assumptions:
1. Fixed number of total intermediate hosts and definitive hosts
2. An infinite parasite pool such that reproduction of parasite does not \
affect the dynamics of the pool
3. We track the frequency dynamics of four compartments instead of density \
dynamics: Iw: intermediate host infected with a wild type, Iww: intermediate \
host infected with two wild types, Dw: definitive host infected with a wild \
type, Dww: definitive host infected with two wild type.
Is: frequency of susceptible intermediate host (1 - Iw - Iww)
Ds: frequency of susceptible definitive host (1 - Dw - Dww)
p: probability that two parasites make it into the intermediate host
q: probability that two parasites make it into the definitive host\
\>", "Text",
 CellChangeTimes->{{3.829641047411026*^9, 3.8296411399189243`*^9}, {
  3.829641170951269*^9, 3.829641194153261*^9}, {3.829641250799773*^9, 
  3.829641260684396*^9}, {3.829643725128002*^9, 3.8296437253295403`*^9}, {
  3.829645853609191*^9, 3.829646027793091*^9}, {3.829720274153536*^9, 
  3.829720298981111*^9}, {3.8297391038345222`*^9, 
  3.829739115221641*^9}},ExpressionUUID->"53d39168-2dfc-4d90-bfa8-\
ba3f534c761b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", "\[Eta]S", " ", "Is"}], " ", "-", 
     " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]w"}], ")"}], "Iw"}], " ", "-", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", "\[Beta]w", "]"}], " ", "Iw"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dIwwdt", " ", "=", "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "2"], " ", "\[Eta]C", " ", "Is"}], 
    "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]ww"}], ")"}], "Iww"}], " ", "-", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]ww", "]"}], " ", "Iww"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDwdt", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Ds"}], "-", 
    " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]w"}], ")"}], " ", "Dw"}], " ", 
    "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Lambda]S", " ", "+", " ", "\[Lambda]SM", " ", "+", " ", 
       "\[Lambda]mix"}], ")"}], "Dw"}]}]}], ";", 
  RowBox[{"dDwwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]C", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], " ", "Dw"}], 
    " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]ww"}], ")"}], "Dww"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.829641491952265*^9, 3.829641509213229*^9}, 
   3.829641554213709*^9, {3.82964158647001*^9, 3.829641605191667*^9}, {
   3.829642355338485*^9, 3.829642415871438*^9}, {3.829642450302302*^9, 
   3.829642493401485*^9}, {3.829643258902021*^9, 3.829643261991568*^9}, {
   3.829643559402507*^9, 3.829643563793765*^9}, {3.829643616676971*^9, 
   3.829643765211213*^9}, {3.8296438023552427`*^9, 3.829643878217937*^9}, {
   3.829643992030114*^9, 3.829644107115541*^9}, {3.829644140489849*^9, 
   3.829644141871138*^9}, 3.829644196667557*^9, {3.8296449315615797`*^9, 
   3.829645119436164*^9}, {3.8297182386833143`*^9, 3.829718252810196*^9}, {
   3.829718294255495*^9, 3.8297183114909697`*^9}, {3.832327703655903*^9, 
   3.832327835049532*^9}, 3.83232966660935*^9, {3.832330179509568*^9, 
   3.832330206040997*^9}, {3.8323302845736637`*^9, 3.832330296001422*^9}, {
   3.832330334676523*^9, 3.832330343084*^9}, {3.83233117760822*^9, 
   3.832331192067749*^9}, {3.832334218743729*^9, 3.832334226612721*^9}, {
   3.832336444885851*^9, 3.832336459337688*^9}, {3.832336576913377*^9, 
   3.83233661430239*^9}, {3.832401878840892*^9, 3.8324018879048862`*^9}, {
   3.832401945036797*^9, 3.8324019639282923`*^9}, {3.832402643978001*^9, 
   3.8324026457264147`*^9}, {3.835978265451477*^9, 3.835978275718116*^9}, {
   3.8360155968452253`*^9, 3.836015621664548*^9}, {3.836021478586493*^9, 
   3.836021482975801*^9}, {3.836021576246393*^9, 3.836021592756344*^9}, {
   3.836023372745654*^9, 3.836023374095212*^9}, 3.837151886318859*^9},
 CellLabel->
  "In[175]:=",ExpressionUUID->"1f08c411-ab54-4265-81be-9d55fb614f48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dImdt", " ", "=", "  ", 
   RowBox[{
    RowBox[{"m", " ", "\[Eta]S", " ", "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]m"}], ")"}], "Imut"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]m", "]"}], "Imut"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImwdt", " ", "=", 
   RowBox[{
    RowBox[{"2", "  ", "m", 
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "\[Eta]C", " ", "Is"}], "   ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mw"}], ")"}], " ", "Imw"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]mw", "]"}], " ", "Imw"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "2"], "\[Eta]C", " ", "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mm"}], ")"}], "Imm"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]mm", "]"}], "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Ds"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]m"}], ")"}], "Dm"}], "-", " ", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Lambda]SM", " ", "+", " ", "\[Lambda]S", " ", "+", " ", 
       "\[Lambda]mix"}], ")"}], "Dm"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]Cmix", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Dm"}], " ", 
    "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "\[Lambda]mix"}]}], ")"}], " ", "Dw"}], "-", 
    " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mw"}], ")"}], " ", "Dmw"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]CM", " ", "Ds"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "\[Lambda]mix"}]}], ")"}], " ", "Dm"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mm"}], ")"}], " ", "Dmm"}]}]}],
   ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.832327798889567*^9, 3.832327799876758*^9}, {
   3.8323278455180902`*^9, 3.8323279292160187`*^9}, {3.832328049077491*^9, 
   3.832328052551435*^9}, {3.832328246765815*^9, 3.832328255611532*^9}, 
   3.832328288510475*^9, {3.8323283572977343`*^9, 3.8323283899017763`*^9}, {
   3.832328461811987*^9, 3.8323285005038233`*^9}, {3.83232866076691*^9, 
   3.832328665160878*^9}, 3.8323287882895184`*^9, 3.8323294977108717`*^9, {
   3.832329566661824*^9, 3.832329574077695*^9}, {3.832336421167181*^9, 
   3.8323364264472857`*^9}, {3.8323364814136267`*^9, 
   3.8323365112100763`*^9}, {3.8323365495166187`*^9, 3.832336558955804*^9}, {
   3.832336633721697*^9, 3.8323366595415907`*^9}, {3.832336721994238*^9, 
   3.83233679049203*^9}, {3.8324020639753*^9, 3.8324021216434402`*^9}, {
   3.832402287965073*^9, 3.832402297116391*^9}, {3.83240264843528*^9, 
   3.832402655921612*^9}, {3.83597749015441*^9, 3.8359774925757313`*^9}, {
   3.835977538250963*^9, 3.835977540076664*^9}, 3.8359776883739777`*^9, 
   3.835977769806967*^9, {3.836018143694477*^9, 3.836018157552311*^9}, {
   3.836021541156321*^9, 3.836021541945766*^9}, {3.83602160312323*^9, 
   3.836021639808755*^9}, {3.837751018464518*^9, 3.837751019771912*^9}, {
   3.837762913144162*^9, 3.837762914180374*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"9ce41093-4225-461c-a9c9-73fb268ab8a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"b0", " ", "+", "x"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Eta]S", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "p"}], ")"}], "\[Gamma]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Eta]C", " ", "=", " ", 
  RowBox[{"p", " ", "\[Gamma]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]S", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]w", " ", "Iw"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]ww", " ", "Iww"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]C", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]ww", " ", "Iww"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]SM", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]m", " ", "Imut"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]mix", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw", " ", "Imw"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Cmix", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]mw", " ", "Imw"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]CM", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]mm", " ", "Imm"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8296460697045517`*^9, 3.829646095587291*^9}, {
   3.82964617685653*^9, 3.829646182989686*^9}, {3.832330227808227*^9, 
   3.832330237277548*^9}, {3.832330305132187*^9, 3.832330354823772*^9}, {
   3.8323342409867697`*^9, 3.832334248914604*^9}, {3.8323363163199797`*^9, 
   3.832336408052898*^9}, {3.8323364388843613`*^9, 3.8323364565865*^9}, {
   3.832336519340336*^9, 3.832336551109263*^9}, {3.8323365853019133`*^9, 
   3.832336606639152*^9}, {3.832336665193926*^9, 3.832336679262456*^9}, {
   3.832336762595909*^9, 3.83233677461066*^9}, {3.832402125171793*^9, 
   3.832402134479272*^9}, {3.8324090997398*^9, 3.8324091297840853`*^9}, {
   3.835977573206868*^9, 3.835977592581994*^9}, {3.836018128480612*^9, 
   3.836018134825436*^9}, {3.836021536692359*^9, 3.836021567148098*^9}, 
   3.837767133586357*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"e651ecba-13f1-457c-bfa5-053b1ab8407f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", "p"}], ")"}], " ", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.8360233790453367`*^9, 3.836973994127315*^9, 
  3.836988738479988*^9, 3.837151889509103*^9, 3.837230758914568*^9, 
  3.837505179981474*^9, 3.837748165814377*^9, 3.8377510380608664`*^9, 
  3.8377630374395323`*^9, 3.837767125607862*^9, 3.840774830642373*^9, 
  3.840777220398528*^9, 3.840797426263125*^9, 3.840797466969493*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"b3335d61-62a2-4861-aa3e-5bf2ff2ba3c6"],

Cell[BoxData[
 RowBox[{"p", " ", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.8360233790453367`*^9, 3.836973994127315*^9, 
  3.836988738479988*^9, 3.837151889509103*^9, 3.837230758914568*^9, 
  3.837505179981474*^9, 3.837748165814377*^9, 3.8377510380608664`*^9, 
  3.8377630374395323`*^9, 3.837767125607862*^9, 3.840774830642373*^9, 
  3.840777220398528*^9, 3.840797426263125*^9, 3.840797466970594*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"ed7f2cad-32a9-4c4f-a5c0-52d4d461b2a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysing the resident dynamics", "Chapter",
 CellChangeTimes->{{3.832408998193762*^9, 
  3.8324090038525467`*^9}},ExpressionUUID->"f0663439-c0ad-4d3d-84c1-\
740427d25584"],

Cell[CellGroupData[{

Cell["Equilibrium", "Subchapter",
 CellChangeTimes->{{3.8324090109240017`*^9, 
  3.832409012856284*^9}},ExpressionUUID->"6c5f7166-9488-407b-b8bf-\
9003eb388c52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condFixTotal", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", "Iw", " ", "-", " ", "Iww"}], ")"}]}], ",",
      " ", 
     RowBox[{"Ds", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", "Dw", " ", "-", " ", "Dww"}], ")"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.8377671447044992`*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"64f0069c-06b5-4381-838a-143372770f77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condResOnly", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"Imut", "\[Rule]", " ", "0"}], ",", "  ", 
     RowBox[{"Imm", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Imw", " ", "\[Rule]", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.83240906087984*^9, 3.832409093310376*^9}, {
   3.832409139816143*^9, 3.832409148041252*^9}, 3.832409195377907*^9},
 CellLabel->
  "In[194]:=",ExpressionUUID->"d334ba56-4687-4ea3-b753-e49b040a939c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solsres", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dIwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dIwwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwwdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
       "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829646038362496*^9, 3.829646066175127*^9}, {
   3.8296460989022427`*^9, 3.829646112952201*^9}, {3.829646148855029*^9, 
   3.8296461883334827`*^9}, 3.829716313710265*^9, {3.832328330244488*^9, 
   3.832328330565817*^9}, {3.83233021663793*^9, 3.8323302762277327`*^9}, {
   3.8323303616324463`*^9, 3.83233036187814*^9}, {3.832331073051442*^9, 
   3.832331100729104*^9}, {3.832336893940008*^9, 3.8323369106178503`*^9}, {
   3.8324091549457483`*^9, 3.832409172838251*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"80430831-3bd2-483a-81c4-b87d1ea8279d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iw", "/.", "solsres"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"b0", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Alpha]ww", " ", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "\[LessEqual]", " ", "p", "\[LessEqual]", "1"}], " ", "&&", 
     " ", 
     RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "\[LessEqual]", " ", "q", "\[LessEqual]", " ", "1"}]}], ",",
     " ", "Reals"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.832329792282908*^9, 3.832329813676409*^9}, {
  3.832331710196608*^9, 3.832332102515286*^9}, {3.832332399101774*^9, 
  3.832332415634095*^9}, {3.832332548745118*^9, 3.832332565698371*^9}, {
  3.832332597722006*^9, 3.832332677657757*^9}, {3.832332717430265*^9, 
  3.832332744784152*^9}, {3.8323327825722322`*^9, 3.832332786846245*^9}, {
  3.8323368406111507`*^9, 3.832336844067896*^9}, {3.8323369150160227`*^9, 
  3.832336924863265*^9}, {3.835932352081497*^9, 3.835932430174788*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"98ab2213-183f-426a-a183-5a05231f5c7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "\[LessEqual]", "q", "\[LessEqual]", "1"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "\[Equal]", "1"}], "&&", 
      RowBox[{
       RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
       "\[NotEqual]", "0"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
          RowBox[{"p", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
               "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}]}], ">", "0"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "p", "<", "1"}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.832329801624041*^9, 3.832329814153812*^9}, 
   3.832331260385582*^9, {3.832331858970853*^9, 3.8323321030478077`*^9}, {
   3.8323323996532927`*^9, 3.832332416170981*^9}, {3.832332635839349*^9, 
   3.8323326781673*^9}, {3.8323327217860117`*^9, 3.832332746293705*^9}, 
   3.832332787311101*^9, {3.8323368188765574`*^9, 3.832336844722437*^9}, {
   3.8323369175927057`*^9, 3.832336925372449*^9}, 3.832402602478231*^9, 
   3.8324027351929197`*^9, 3.832409203683844*^9, 3.833532092284329*^9, 
   3.833945661584284*^9, 3.834725848375527*^9, {3.83593235156971*^9, 
   3.8359323553015547`*^9}, {3.8359323864287987`*^9, 3.835932431353546*^9}, 
   3.835975837684362*^9, 3.8407748465859537`*^9, 3.8407772375134153`*^9, 
   3.840797438334074*^9, 3.84079747856417*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"7436caf0-a08b-448e-8bc5-244cd5dd949d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
     RowBox[{"p", " ", "\[Gamma]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "b0", " ", "d"}], "-", 
     SuperscriptBox["d", "2"], "-", 
     RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
     RowBox[{"d", " ", "\[Alpha]w"}], "-", 
     RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
     RowBox[{"d", " ", "\[Beta]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
     RowBox[{"b0", " ", "\[Gamma]"}], "-", 
     RowBox[{"d", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.832384244566329*^9, 3.8323842460177393`*^9}, {
  3.832400256734977*^9, 3.832400263613785*^9}, {3.832403165297183*^9, 
  3.832403175014187*^9}, {3.832404423541275*^9, 3.832404433322205*^9}, {
  3.8324054719814663`*^9, 3.8324054795864697`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"08ad92b2-4505-4fae-a223-355feea40529"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}]}], 
       "+", "\[Beta]ww"}], ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.832384246746402*^9, {3.832400258178032*^9, 3.832400264181429*^9}, {
   3.832403166411693*^9, 3.832403176619546*^9}, {3.832404424681678*^9, 
   3.8324044340683393`*^9}, {3.832405473149761*^9, 3.8324054766230707`*^9}, 
   3.83353209400599*^9, 3.8359758377848063`*^9, 3.84077484663319*^9, 
   3.840797438338429*^9, 3.8407974785712843`*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"b0aa94b1-6e92-4096-888d-856decd23de5"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     "\[Gamma]"}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     "\[Gamma]"}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", " ", "+", " ", "\[Gamma]"}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], " ", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", " ", 
    RowBox[{"\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
    RowBox[{"p", "  ", "\[Gamma]", " ", "\[Alpha]w"}], " ", "+", " ", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]}],
 CellChangeTimes->{
  3.832384246746402*^9, {3.832400258178032*^9, 
   3.832400264181429*^9}},ExpressionUUID->"79aa0bb1-9488-4bd1-888d-\
103420d934f9"]], "Text",
 CellChangeTimes->{
  3.832402777968194*^9, {3.832402849724245*^9, 3.832402925921858*^9}, {
   3.832402965446184*^9, 3.832402982853883*^9}, {3.832403123076495*^9, 
   3.832403138296722*^9}, {3.8324036819738283`*^9, 3.8324036848876877`*^9}, {
   3.832404296785638*^9, 3.832404302144247*^9}, {3.8324043491112757`*^9, 
   3.8324043638359957`*^9}, {3.832404403006349*^9, 3.832404417072011*^9}, {
   3.832404509888983*^9, 3.832404535960106*^9}, {3.832404575215783*^9, 
   3.832404590378949*^9}, {3.832404644463299*^9, 3.832404644832184*^9}, {
   3.832404910343381*^9, 3.832404959952423*^9}, {3.83240539864124*^9, 
   3.8324055023550177`*^9}, {3.834032228549748*^9, 
   3.8340322383756638`*^9}},ExpressionUUID->"3855d051-a6d0-4aaf-bd84-\
320ecca8232f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], " ", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
          ")"}]}], "+", " ", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
        RowBox[{"p", "  ", "\[Gamma]", " ", "\[Alpha]w"}], " ", "+", " ", 
        RowBox[{"\[Gamma]", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}]}], " ", ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
        RowBox[{"p", " ", "\[Gamma]"}]}], ")"}]}], ")"}]}], "\[Equal]", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
      RowBox[{"d", " ", "\[Beta]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.834032250800151*^9, 3.834032257803639*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"77abe6f7-a63b-40fa-9d91-107e278d443b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.835975837818644*^9, 3.840797438351272*^9, 
  3.840797478586429*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"3224dc73-71db-47b5-a758-5a9ce640cb88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iww", "/.", "solsres"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"0", "\[LessEqual]", " ", "p", " ", "\[LessEqual]", " ", "1"}], 
    " ", "&&", " ", 
    RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"b0", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}]}], " ", ",", " ", "\[Beta]ww", 
   ",", "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.832331493411772*^9, 3.832331498729002*^9}, {
  3.8323321366737747`*^9, 3.832332155318511*^9}, {3.8323322842917433`*^9, 
  3.8323323463466063`*^9}, {3.832332445225294*^9, 3.832332472309957*^9}, {
  3.832332801856941*^9, 3.832332806105134*^9}, {3.832405914694604*^9, 
  3.8324059246160107`*^9}, {3.8324059582502747`*^9, 3.83240596341096*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"3f673ed7-7515-4e58-b8df-f48c85c4fb0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "<", "p", "\[LessEqual]", "1"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]ww", ">", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
     "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
      
      RowBox[{"p", " ", "\[Gamma]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]w"}], "-", 
      RowBox[{"d", " ", "\[Beta]w"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.832331499242293*^9, {3.832332143970943*^9, 3.8323321558198013`*^9}, {
   3.832332290763845*^9, 3.832332346967086*^9}, {3.83233244998731*^9, 
   3.832332473043498*^9}, {3.832332799828554*^9, 3.832332807078762*^9}, 
   3.8323368227974443`*^9, 3.832336938081369*^9, 3.832403743901835*^9, 
   3.8324056558433847`*^9, {3.832405915453796*^9, 3.832405925499701*^9}, {
   3.8324059586865053`*^9, 3.832405963931058*^9}, 3.8324092118545837`*^9, 
   3.833945675946741*^9, 3.8359758378828993`*^9, 3.840797438370541*^9, 
   3.840797478601598*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"a7b74420-d4b0-4895-b0f1-c218731839b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{
    "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
     RowBox[{"p", " ", "\[Gamma]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "b0", " ", "d"}], "-", 
     SuperscriptBox["d", "2"], "-", 
     RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
     RowBox[{"d", " ", "\[Alpha]w"}], "-", 
     RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"b0", " ", "\[Beta]w"}], "-", 
     RowBox[{"d", " ", "\[Beta]w"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
     RowBox[{"b0", " ", "\[Gamma]"}], "-", 
     RowBox[{"d", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.832403751410838*^9, 3.832403758140729*^9}, {
  3.8324065158413057`*^9, 3.832406523370261*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"6288b50b-bb06-4613-9127-5e5759f92a4f"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}]}]}],
       ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{
   "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.8324037589534473`*^9, {3.8324065167317743`*^9, 3.832406524281479*^9}, 
   3.833945678805094*^9, 3.8359758381451*^9, 3.840797438442155*^9, 
   3.840797478620247*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"ead46fc6-4721-485a-a9ef-b605a890c5a1"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}]}]}],
       ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{
   "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
      "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", " ", "+", " ", 
       "\[Gamma]"}], ")"}]}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}], 
     "\[Gamma]", " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "+", "\[Beta]w"}], ")"}], "p", " ", "\[Gamma]"}], 
    "+", " ", 
    RowBox[{"\[Alpha]ww", " ", "\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", "p"}], " ", ")"}], " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]]}]}],
 CellChangeTimes->{
  3.8324037589534473`*^9},ExpressionUUID->"135c0118-cb73-42cf-a7ae-\
293cf6a80a80"]], "Text",
 CellChangeTimes->{{3.8324064660159187`*^9, 3.832406510503319*^9}, {
  3.834032316555629*^9, 
  3.834032395484638*^9}},ExpressionUUID->"ea88c27e-2ae8-4645-b683-\
d5fb4970a841"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dressols", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dDwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"dDwwdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
        "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Dw", ",", " ", "Dww"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.834033259978529*^9, 3.834033266070026*^9}, {
  3.834197370608328*^9, 3.834197420652351*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"9535a2a4-f912-42a9-b294-8267a1d57930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dw", "/.", "Dressols"}], ")"}], " ", ">", " ", "0"}], " ", "&&",
      " ", 
     RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iw", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iww", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "<", "q", "<", "1"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]w", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]ww", " ", ">", " ", "0"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.834197422357291*^9, 3.8341974968218*^9}, {
  3.8341975402603273`*^9, 3.8341975727831507`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"9b8fa279-6c2b-4f9c-a9e2-e7851a871141"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]ww", ">", "0"}], "&&", 
  RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
  RowBox[{"\[Mu]", ">", "0"}], "&&", 
  RowBox[{"0", "<", "q", "<", "1"}], "&&", 
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"Iw", ">", "0"}], "&&", 
  RowBox[{"Iww", ">", "0"}]}]], "Output",
 CellChangeTimes->{{3.834197431828412*^9, 3.834197497541408*^9}, {
   3.834197544411867*^9, 3.83419757387853*^9}, 3.835975839337397*^9, 
   3.840774853817919*^9, 3.840797438703041*^9, 3.8407974788813972`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"7921e77f-71c0-4b09-babd-39b321ef8369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dww", "/.", "Dressols"}], ")"}], " ", ">", " ", "0"}], " ", "&&",
      " ", 
     RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iw", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iww", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "<", "q", "<", "1"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]w", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]ww", " ", ">", " ", "0"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{3.8341976112853327`*^9},
 CellLabel->
  "In[205]:=",ExpressionUUID->"0c676acd-1c54-43c6-b695-f2985c193337"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]ww", ">", "0"}], "&&", 
  RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
  RowBox[{"\[Mu]", ">", "0"}], "&&", 
  RowBox[{"0", "<", "q", "<", "1"}], "&&", 
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"Iw", ">", "0"}], "&&", 
  RowBox[{"Iww", ">", "0"}]}]], "Output",
 CellChangeTimes->{3.8341976195412083`*^9, 3.835975846350829*^9, 
  3.840774856391499*^9, 3.840797440615237*^9, 3.840797480929514*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"715df149-c14e-4f81-a368-f13258ef7539"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibrium stability conditions", "Subchapter",
 CellChangeTimes->{{3.832409026226013*^9, 3.832409029072009*^9}, {
  3.833970359604176*^9, 
  3.8339703606216793`*^9}},ExpressionUUID->"20018efe-fe31-4da0-bd86-\
2336bee1e156"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JRes", " ", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt"}], 
        "}"}], "/.", "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], 
       "}"}], "}"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.832406548483384*^9, 3.832406640737584*^9}, {
  3.832406749043187*^9, 3.832406754445374*^9}, {3.832409033602165*^9, 
  3.83240905361662*^9}, {3.832409230277813*^9, 3.832409263733767*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"12b509ea-73b9-412d-b68a-61a7a05222f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]w", "-", "\[Beta]w", "-", 
      "\[Gamma]", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "p"}], " ", "\[Gamma]"}], ",", 
     RowBox[{
      RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]ww", "-", "\[Beta]ww", "-", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", "\[Beta]w"}], 
       ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"2", " ", "Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      "\[Mu]", "-", "\[Sigma]w"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dw", " ", "\[Beta]w"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dw", "+", "q", "-", 
        RowBox[{"2", " ", "Dw", " ", "q"}], "-", 
        RowBox[{"Dww", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}], ",", 
     RowBox[{
      RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iww"}], " ", "q", " ", "\[Beta]ww"}], "-", "\[Mu]", "-", 
      "\[Sigma]ww"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8324066039951487`*^9, 3.832406641179555*^9, {3.832409255946203*^9, 
   3.8324092642641287`*^9}, 3.833532124546104*^9, 3.833945699439839*^9, 
   3.834725862228409*^9, 3.8359748500561657`*^9, 3.835975846414312*^9, 
   3.840797440648541*^9, 3.840797480958148*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"2736d3e7-e1b1-4611-ac6b-b397c9b888ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JRes", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.832409268030389*^9, 3.832409273314041*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"f3062a05-5bd0-4bb7-b13c-7dfd5d835bb6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]w", "-", "\[Beta]w", "-", 
       "\[Gamma]", "+", 
       RowBox[{"p", " ", "\[Gamma]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", "p"}], " ", "\[Gamma]"}], 
      RowBox[{
       RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]ww", "-", "\[Beta]ww", 
       "-", 
       RowBox[{"p", " ", "\[Gamma]"}]}], "0", "0"},
     {
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", "\[Beta]w"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"2", " ", "Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
       "\[Mu]", "-", "\[Sigma]w"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
       RowBox[{"Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}]},
     {
      RowBox[{"Dw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dw", "+", "q", "-", 
         RowBox[{"2", " ", "Dw", " ", "q"}], "-", 
         RowBox[{"Dww", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"Iww", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iww"}], " ", "q", " ", "\[Beta]ww"}], "-", "\[Mu]", "-",
        "\[Sigma]ww"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.832409273649954*^9, 3.833532126747891*^9, 
  3.833945700442053*^9, 3.834725863604039*^9, 3.83597584644713*^9, 
  3.840797440655958*^9, 3.8407974809613934`*^9},
 CellLabel->
  "Out[207]//MatrixForm=",ExpressionUUID->"cbb96b60-c5dc-45d2-bcd5-\
2c8be91e139a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "JRes", "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8324094699133053`*^9, 3.83240948640094*^9}, {
   3.833532162948451*^9, 3.833532168514834*^9}, 3.833532811661775*^9, 
   3.835974854331708*^9},
 CellLabel->
  "In[208]:=",ExpressionUUID->"612a91ce-98e5-4f74-91bb-d4badbda8371"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], "2"], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "p"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], "2"], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "p"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", 
      SqrtBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["Iww", "2"], " ", 
         SuperscriptBox["q", "2"], " ", 
         SuperscriptBox["\[Beta]ww", "2"]}], "-", 
        RowBox[{"2", " ", "Iww", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
           "\[Sigma]ww"}], ")"}]}]}]], "-", "\[Sigma]ww"}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["Iww", "2"], " ", 
         SuperscriptBox["q", "2"], " ", 
         SuperscriptBox["\[Beta]ww", "2"]}], "-", 
        RowBox[{"2", " ", "Iww", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
           "\[Sigma]ww"}], ")"}]}]}]], "-", "\[Sigma]ww"}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.835974858345964*^9, 3.835975846838592*^9, 
  3.840797441650836*^9, 3.840797481956977*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"fcb73245-cec3-42c3-849b-206c03d51308"]
}, Open  ]],

Cell["Check with function Reduce", "Text",
 CellChangeTimes->{{3.833969204046648*^9, 
  3.833969208732028*^9}},ExpressionUUID->"7027cf17-8976-4a9c-86d8-\
565e68c0934a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigvals", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], "&&", " ", 
   RowBox[{"1", ">", "p", ">", "0"}], "&&", " ", 
   RowBox[{"d", " ", ">", " ", "0"}], "&&", 
   RowBox[{"\[Beta]w", ">", "0"}], "&&", 
   RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"b0", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Gamma]", " ", ">", "0"}]}], "]"}]], "Input",
 CellLabel->
  "In[209]:=",ExpressionUUID->"61480f75-38c5-4619-846f-5dff8615c97d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "<", "p", "<", "1"}]}]], "Output",
 CellChangeTimes->{3.8347258764307337`*^9, 3.8359758471453114`*^9, 
  3.840797441754018*^9, 3.8407974820624027`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"eb660401-491c-4b70-a161-499433768b86"]
}, Open  ]],

Cell["Check with some algebra", "Text",
 CellChangeTimes->{{3.833969214478662*^9, 3.833969226981674*^9}, {
  3.833969515833363*^9, 
  3.833969516974371*^9}},ExpressionUUID->"77d3767b-c38b-48e2-8d14-\
2ef478b91ee2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833966189902479*^9, 3.833966213518471*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"e32f4cfb-ab74-437e-9b85-50b9590626a2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "b0"}], "-", 
    RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
    "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.83396619469245*^9, 3.8339662140116253`*^9}, 
   3.8347258798149242`*^9, 3.835975847164527*^9, 3.840797441758494*^9, 
   3.840797482068966*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"fc19e2ad-9b2b-4d24-955f-d624e822578f"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "b0"}], "-", 
    RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
    "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", " ", "p"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"0", ":", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "+", 
      RowBox[{"2", "  ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}], " ", "=", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ",
         "+", " ", "\[Gamma]"}], ")"}], "2"]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "whole", " ", "expression", " ", 
  "become"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "b0"}], "-", 
       RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
       "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+"}], "|", 
      RowBox[{
      "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
       "+", " ", "\[Gamma]"}], "|"}], ")"}]}], " ", "<", " ", 
   RowBox[{"0", " ", "in", " ", "all", " ", "cases"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", " ", "p"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"1", ":", "\[IndentingNewLine]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], "2"], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "p"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], "2"], "-", 
     RowBox[{"2", "  ", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"]}], " ", "=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
      "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
       "-", " ", "\[Gamma]"}], ")"}], "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "whole", " ", "expression", " ", 
  "become"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+"}], "|", 
     RowBox[{
     "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
      "-", " ", "\[Gamma]"}], "|"}], ")"}]}], " ", "<", " ", 
  RowBox[{
  "0", " ", "in", " ", "all", " ", 
   "cases"}]}], \
"\[IndentingNewLine]"}],ExpressionUUID->"f951fd3e-c00a-4ecc-988e-\
32709e27a3f1"]], "Text",
 CellChangeTimes->{{3.8335326126892138`*^9, 3.83353265427325*^9}, {
  3.833532716465397*^9, 3.833532765581737*^9}, {3.833532823024332*^9, 
  3.833532848118684*^9}, {3.833533042039837*^9, 3.8335330626750727`*^9}, {
  3.83353797736475*^9, 3.833538083562282*^9}, {3.833538121642602*^9, 
  3.8335381947844152`*^9}},ExpressionUUID->"52261f5e-9f2a-45e1-9a24-\
46c8910ca68a"],

Cell["\<\
The eigenvalue cannot be imaginary because the part under the square root is \
always positive\
\>", "Text",
 CellChangeTimes->{{3.833969865822095*^9, 
  3.8339698913534937`*^9}},ExpressionUUID->"c8acdb41-5833-4735-adad-\
25ba4fa00165"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ",
         "+", " ", "\[Gamma]"}], ")"}], "2"], "-", 
     RowBox[{"4", " ", "p", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}]}], " ", "<", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"0", "<", "p", "<", "1"}], " ", "&&", " ", 
   RowBox[{"\[Gamma]", " ", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8335364587697363`*^9, 3.8335365372279997`*^9}, {
  3.833537765639224*^9, 3.833537768378428*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"05fbd30c-a5ef-429a-83d8-f0fa2d5e75cc"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8335364879019613`*^9, 3.833536537790173*^9}, 
   3.833537769160514*^9, 3.833945728210422*^9, 3.834725883914784*^9, 
   3.835975847206725*^9, 3.840797441771553*^9, 3.840797482081111*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"ba1296aa-4056-46f2-b232-dc10be56c8ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833966283976314*^9, 3.833966292871079*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"f4238276-0046-42d9-9d05-dc398a35df4a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
    RowBox[{"Iww", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["Iww", "2"], " ", 
       SuperscriptBox["q", "2"], " ", 
       SuperscriptBox["\[Beta]ww", "2"]}], "-", 
      RowBox[{"2", " ", "Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
         "\[Sigma]ww"}], ")"}]}]}]], "-", "\[Sigma]ww"}], ")"}]}]], "Output",
 CellChangeTimes->{3.833966293379434*^9, 3.835975847249249*^9, 
  3.8407974417750673`*^9, 3.840797482087451*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"f3440fde-1c19-42e8-959a-a353c3f9a7d2"]
}, Open  ]],

Cell["Check with function Reduce [Still there are some doubts]", "Text",
 CellChangeTimes->{{3.833969279799005*^9, 3.833969285564312*^9}, {
  3.8339693248995523`*^9, 
  3.833969330119479*^9}},ExpressionUUID->"36f2512f-7302-4f87-b271-\
602b8437d848"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigvals", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ">", "0"}], "&&", " ", 
   RowBox[{"1", ">", "q", ">", "0"}], "&&", " ", 
   RowBox[{"d", " ", ">", " ", "0"}], "&&", 
   RowBox[{"\[Beta]w", ">", "0"}], "&&", 
   RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Sigma]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"Iww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"Iw", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Mu]", " ", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8339693076916924`*^9, 3.8339693561382837`*^9}, {
  3.833969476649102*^9, 3.83396948093442*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"5961aad3-1ac0-4b88-863e-cbb76442b984"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8339693366783524`*^9, 3.8339693386682253`*^9}, {
   3.833969473173317*^9, 3.833969490979816*^9}, 3.834725898748369*^9, 
   3.835975855443585*^9, 3.840797444131489*^9, 3.8407974844751673`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"0f5e15cf-2ae7-4276-b283-07b7f9c485d5"]
}, Open  ]],

Cell["Check with some algebra", "Text",
 CellChangeTimes->{{3.833969499604073*^9, 3.833969506000525*^9}, 
   3.833970027179865*^9},ExpressionUUID->"25833fbc-c06f-438c-9ae6-\
a69ebad62540"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"If", " ", "q"}], " ", "=", " ", "0"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
         RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
         RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
             RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", 
             "-", "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
          RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
          RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
              RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", 
              "-", "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}], 
       "<", "0"}], "\[IndentingNewLine]", "iff", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
       ">", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-",
            "\[Sigma]ww"}], ")"}]}]]}], "\[IndentingNewLine]", "iff", 
      "\[IndentingNewLine]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
          RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
         ")"}], "2"], ">", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
          RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
          "\[Sigma]ww"}], ")"}]}]}], "\[IndentingNewLine]", "iff", 
      "\[IndentingNewLine]", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iw", "2"], " ", 
          SuperscriptBox["\[Beta]w", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "+", 
         RowBox[{"2", " ", "Iww", " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], ")"}], " ", ">", " ", 
    RowBox[{"0", "  ", "in", " ", "all", " ", "cases"}]}], 
   "\[IndentingNewLine]"}]],
  CellChangeTimes->{3.833966293379434*^9},ExpressionUUID->
  "feff4975-88b9-48c5-8ba7-b7858e3bcfe4"],
 "\n"
}], "Text",
 CellChangeTimes->{
  3.833966314883297*^9, {3.8339665060162973`*^9, 3.833966552018918*^9}, {
   3.833966624605592*^9, 3.833966728881033*^9}, {3.833968093317787*^9, 
   3.833968228724926*^9}, {3.8339682750960093`*^9, 3.8339683836144037`*^9}, {
   3.83396849075776*^9, 3.833968490759582*^9}, 3.833968524138281*^9, {
   3.833968825720284*^9, 3.83396892934764*^9}, {3.8339690407970133`*^9, 
   3.833969068942181*^9}, {3.833969530524148*^9, 
   3.8339695581955843`*^9}},ExpressionUUID->"a2d6abbc-ce26-488b-be48-\
1b41494cbee2"],

Cell["Using some functions to simplify some expression above", "Text",
 CellChangeTimes->{{3.8339695423865232`*^9, 
  3.833969554853491*^9}},ExpressionUUID->"3dce1f40-ca9a-494d-8323-\
3a9d18d6a3e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
       RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
      ")"}], "2"], "]"}], "-", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
       "\[Sigma]ww"}], ")"}]}], "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339689519651823`*^9, 3.833968975950758*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"808328ce-8947-4dd3-818b-1a698f14ccc8"],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Iw", "2"], " ", 
     SuperscriptBox["\[Beta]w", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["Iww", "2"], " ", 
     SuperscriptBox["\[Beta]ww", "2"]}], "+", 
    RowBox[{"2", " ", "Iww", " ", "\[Beta]ww", " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
    RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.833968954532154*^9, 3.833968976386876*^9}, 
   3.835975855576972*^9, 3.8407974441650887`*^9, 3.840797484509886*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"69540840-a043-4dc7-b140-b6e70ff01b0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["q", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "-", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], ")"}]}], 
   "/.", 
   RowBox[{"q", "\[Rule]", " ", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339663665753727`*^9, 3.833966377540638*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"2d47f0be-c101-45de-a58b-490edfdaa78f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
        "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8339663718115788`*^9, 3.833966378291596*^9}, 
   3.8359758558223057`*^9, 3.8407974442278852`*^9, 3.840797484574985*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"d290dedc-7d8c-4d1a-8ad8-bc2749f8cceb"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{
  RowBox[{"If", " ", "q"}], " ", "=", " ", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
          "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
          "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}], "<", " ", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{"iff", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
   RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
   RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], ">", 
  SqrtBox[
   RowBox[{
    RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
       "\[Sigma]ww"}], ")"}], 
     "2"]}]]}], "\[IndentingNewLine]", "iff", "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
     RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
    ")"}], "2"], ">", 
  RowBox[{
   RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
      "\[Sigma]ww"}], ")"}], 
    "2"]}]}], "\[IndentingNewLine]", "iff", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Iw", "2"], " ", 
      SuperscriptBox["\[Beta]w", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
       ")"}]}], "+", 
     RowBox[{"Iw", " ", "\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], ")"}]}],
   ">", 
  RowBox[{"0", " ", "True", " ", "in", " ", "all", " ", "cases"}]}]}],
 CellChangeTimes->{
  3.8339695869394197`*^9},ExpressionUUID->"1734e154-3fc6-4963-bda4-\
f96c76b4c0d6"]], "Text",
 CellChangeTimes->{{3.833969617026904*^9, 3.833969649231299*^9}, {
  3.833969681159239*^9, 3.833969764115258*^9}, {3.833969835298121*^9, 
  3.833969845934141*^9}},ExpressionUUID->"dee9ef27-089d-453d-b228-\
fcab802c8067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["q", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "-", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], ")"}]}], 
   "/.", 
   RowBox[{"q", "\[Rule]", " ", "1"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339695857799683`*^9, 3.83396958587049*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"1f44aac1-4624-4593-8be0-4178be7c912a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
         "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8339695869394197`*^9, 3.835975856358636*^9, 
  3.840797444381214*^9, 3.840797484731696*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"39669f5d-31c1-4920-944f-8a79f4fa22a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Expand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
       ")"}], "2"], "]"}], "-", 
    RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "-", 
    RowBox[{"Expand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
        "\[Sigma]ww"}], ")"}], "2"], "]"}]}], "//", "Simplify"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.83396977212418*^9, 3.8339698237603416`*^9}},
 CellLabel->
  "In[217]:=",ExpressionUUID->"0bb08a8a-a24d-400b-a439-67ed7f8957ea"],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Iw", "2"], " ", 
     SuperscriptBox["\[Beta]w", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
      ")"}]}], "+", 
    RowBox[{"Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.833969819404808*^9, 3.833969824235017*^9}, 
   3.835975856400323*^9, 3.8407974443947973`*^9, 3.84079748473844*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"5f3cc0a3-7313-4303-9054-5d1687108518"]
}, Open  ]],

Cell["\<\
Check if the part under the square root is negative (i.e. potential for \
imaginary eigenvalue)\
\>", "Text",
 CellChangeTimes->{{3.834031269836607*^9, 
  3.834031296415291*^9}},ExpressionUUID->"398c897b-c4ba-4827-b606-\
46ac6fac9cd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{
   "Import", "[", "\"\</Users/Linh-phuong/resstability.txt\>\"", "]"}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.834733235152009*^9, 3.834733245527947*^9}, {
  3.834733724490535*^9, 3.83473372995403*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"17149f96-c7d6-45be-82d0-234d7f8d8137"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File \\!\\(\\*RowBox[{\\\"\\\\\\\"/Users/Linh-phuong/resstability.txt\\\
\\\\\"\\\"}]\\) not found during \\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 
   218, 4, 30108220672733028614, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.840797444422299*^9, 3.8407974847499743`*^9},
 CellLabel->
  "During evaluation of \
In[218]:=",ExpressionUUID->"369693c3-f8bb-4cf2-930d-33c16b96885c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["Iww", "2"], " ", 
        SuperscriptBox["q", "2"], " ", 
        SuperscriptBox["\[Beta]ww", "2"]}], "-", 
       RowBox[{"2", " ", "Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
          "\[Sigma]ww"}], ")"}]}]}], ")"}], "/.", 
     RowBox[{"Iw", " ", "\[Rule]", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Iw", "/.", "solsres"}], "]"}]}]}], "/.", 
    RowBox[{"Iww", " ", "\[Rule]", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Iww", "/.", "solsres"}], "]"}]}]}], "//", 
   RowBox[{"FullSimplify", "\[IndentingNewLine]", 
    RowBox[{"AbsoluteTiming", "[", 
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"%", ">", "0"}], " ", "&&", 
        RowBox[{"1", ">", "p", ">", "0"}], " ", "&&", " ", 
        RowBox[{"1", ">", "q", ">", "0"}], "&&", " ", 
        RowBox[{"d", " ", ">", " ", "0"}], "&&", 
        RowBox[{"\[Beta]w", ">", "0"}], "&&", 
        RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
        RowBox[{"\[Sigma]w", " ", ">", " ", "0"}], "&&", " ", 
        RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
        RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}], "&&", " ", 
        RowBox[{"\[Alpha]w", " ", ">", "0"}], "&&", 
        RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
        RowBox[{"b0", " ", ">", " ", "0"}]}], "]"}], "//", "Simplify"}], 
     "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.833970721762128*^9, 3.833970731805526*^9}, {
   3.833971106696406*^9, 3.833971174391171*^9}, {3.8340313380806837`*^9, 
   3.8340313422681704`*^9}, {3.834038280562126*^9, 3.834038289270138*^9}, 
   3.834725933495658*^9},
 CellLabel->
  "In[219]:=",ExpressionUUID->"7a41d285-b48f-48dc-90b9-1697ff43e3a7"],

Cell[TextData[{
 "Summarise conditions for positive part under the square root\n\n",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"0", "<", "p", "\[LessEqual]", 
    FractionBox[
     RowBox[{"\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
         RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]]}], 
   " ", "&&", " ", 
   RowBox[{"0", "<", "\[Sigma]ww", "<", "X1"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"||", " ", 
    RowBox[{"\[Sigma]ww", " ", ">", " ", "X2"}]}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
         RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<", 
    "p", "<", "1"}], " ", "&&", 
   RowBox[{"0", "<", "q", "<", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
         "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
     RowBox[{"2", " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
      " ", "\[Beta]ww"}]]}], "&&", "&&", " ", 
   RowBox[{"0", "<", "\[Sigma]ww", "<", "X1"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"||", " ", 
    RowBox[{"\[Sigma]ww", " ", ">", " ", "X2"}]}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
          RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<",
      "p", "<", "1"}], " ", "&&", " ", 
    RowBox[{"q", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
          "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{"2", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
       " ", "\[Beta]ww"}]]}], " ", "&&", " ", 
    RowBox[{"\[Sigma]ww", "  ", "\[NotEqual]", " ", "X2"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
          RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<",
      "p", "<", "1"}], "  ", "&&", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
          "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{"2", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
       " ", "\[Beta]ww"}]], "<", "q", "<", "1"}]}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"X1", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
              "\[Beta]w"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w"}]}], 
               ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
              "\[Beta]w"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "q"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "p", " ", "q"}]}], ")"}], " ", 
                 "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                  "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
             "\[Gamma]"}]}], ")"}], "2"]}], ")"}]}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
            "\[Beta]w"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "p"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"3", " ", "q"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "p", " ", "q"}]}], ")"}], " ", 
               "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
         "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                 "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}], " ", "\[Sigma]w"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
             "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
              "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}]}]}], " "}], "\[IndentingNewLine]", 
  RowBox[{"X2", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
             "\[Beta]w"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w"}]}], 
              ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
             "\[Beta]w"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "q"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "p", " ", "q"}]}], ")"}], " ", 
                "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                 "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}], "2"]}], ")"}]}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
           "\[Beta]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"3", " ", "q"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "p", " ", "q"}]}], ")"}], " ", 
              "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
        "\[Gamma]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
               "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}], " ", "\[Sigma]w"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
            "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
             "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
        "\[Gamma]"}]}], ")"}]}]}]}]}],
  CellChangeTimes->{3.833971539427052*^9, 3.834031693802718*^9, 
   3.8340481427035522`*^9},ExpressionUUID->
  "2f830c65-dd08-46ed-a617-1579e97adc77"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.834057339166164*^9, 3.834057376653514*^9}, {
  3.834057466011156*^9, 3.834057510884099*^9}, {3.8340576910803022`*^9, 
  3.834057717555675*^9}, {3.834057762377296*^9, 3.834057763529285*^9}, {
  3.834057840570129*^9, 3.834057840570283*^9}, {3.834057913106043*^9, 
  3.8340579227592*^9}, {3.834057981272954*^9, 3.8340579812730017`*^9}, {
  3.8340580119540586`*^9, 3.8340580389648247`*^9}, {3.8340581150059233`*^9, 
  3.8340581457758217`*^9}, {3.834058254223524*^9, 3.8340582880668573`*^9}, {
  3.8340583597696657`*^9, 3.834058420369753*^9}, {3.834058499427589*^9, 
  3.8340584994276657`*^9}, {3.834058537583664*^9, 3.83405853846661*^9}, {
  3.834058571879586*^9, 3.834058579396235*^9}, {3.834725995263464*^9, 
  3.834726002290308*^9}, {3.834726045837044*^9, 3.8347260501152573`*^9}, {
  3.834726101304069*^9, 
  3.834726101304186*^9}},ExpressionUUID->"a9ce6c78-e849-4a06-9136-\
4d24a93f95c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.833970377721216*^9, 
  3.8339703820006933`*^9}},ExpressionUUID->"ed78ee75-ab0a-4768-a17a-\
89a2891a46a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resvar", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resvart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt"}], 
      "}"}], "/.", "condResOnly"}], "/.", "condFixTotal"}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"resvar", "\[Rule]", " ", "resvart"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ressys", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"resvart", ",", " ", "t"}], "]"}], "==", "%"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8339704321682653`*^9, 3.833970637742549*^9}, 
   3.834059883773746*^9},
 CellLabel->
  "In[220]:=",ExpressionUUID->"383bd514-b766-420d-a083-fc5e89db3575"],

Cell[CellGroupData[{

Cell["\<\
No differences in manipulation and virulence between single infection and \
double infections\
\>", "Subsection",
 CellChangeTimes->{{3.834727889033558*^9, 3.8347279294649687`*^9}, {
  3.83472855591362*^9, 
  3.8347285695109987`*^9}},ExpressionUUID->"088a31df-7878-4c57-aab9-\
f5851bf7d053"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833970384520238*^9, 3.8339704149917393`*^9}, {
   3.834031817767427*^9, 3.834031921447423*^9}, {3.834038259021524*^9, 
   3.834038270814554*^9}, {3.834059796111875*^9, 3.83405979671793*^9}, 
   3.834727646303278*^9, {3.834727702778359*^9, 3.834727703258182*^9}, {
   3.834727747552021*^9, 3.83472774787101*^9}, {3.834727783181448*^9, 
   3.834727784687739*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"56948034-b97d-412b-9090-9d659eb61d71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.834060016717185*^9, 3.8340600478291473`*^9}, {
  3.8340601320362864`*^9, 3.834060139066847*^9}, {3.834726346561721*^9, 
  3.834726346795102*^9}, {3.8347269325607967`*^9, 3.834726938844645*^9}, {
  3.83472700577332*^9, 3.8347270058997927`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"f1d32b5d-7710-4e0b-89b7-e4ee22bcc8c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco1"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8340598774292727`*^9, 3.834059897951157*^9}, {
  3.834059930429377*^9, 3.834059974471097*^9}, {3.8340600361804457`*^9, 
  3.834060037009159*^9}, {3.8340600896715937`*^9, 3.834060096262355*^9}, {
  3.8340601436784153`*^9, 3.834060147923568*^9}, {3.834726356990777*^9, 
  3.834726367389772*^9}, {3.834726889719125*^9, 3.834726889881207*^9}, {
  3.834727246565544*^9, 3.834727275298967*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"82c64a5d-6aa2-4ada-896e-d4ee93e1810e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
e3hZhTSaP6hHdeGMzNLGhjQ6WqVL9f8AaBl2Hg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$51784#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$51784#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Da2tlwbuEN5ZwhULO/5tbUmDt9mZecL/A8RzxPw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$51784#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ZXNTGnzH84wJ/w9h64Aa
          "]]}, 
        Annotation[#, "Charting`Private`Tag$51784#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.834726368065527*^9, 3.8347268904609327`*^9, {3.834726934098959*^9, 
   3.834726940427321*^9}, 3.8347270077647257`*^9, {3.8347272493114843`*^9, 
   3.834727261538377*^9}, 3.834727295872999*^9, 3.834727951917954*^9, 
   3.83472946132008*^9, 3.835975863190282*^9, 3.84077486386535*^9, 
   3.8407974444813213`*^9, 3.840797484812018*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"68562508-3af1-4291-95bc-b37ea6733d7b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Only similarity in virulence between single infection and double infections \
\>", "Subsection",
 CellChangeTimes->{{3.834728816087356*^9, 
  3.834728841884172*^9}},ExpressionUUID->"825f69f1-e7ba-48b7-a3cb-\
92d844778bd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.834728874590809*^9, 3.834728874836464*^9}, {
  3.834728983056847*^9, 3.8347289831921177`*^9}, {3.835975874053566*^9, 
  3.8359758752810497`*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"658ca121-f635-4747-814c-1bc0faff76e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"8066a61c-5c1f-4009-a6b2-0486e1e2c399"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco2"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.834729324315316*^9, 3.834729325055314*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"c8b10e51-f92d-4480-9019-b8e4929bf7ea"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
e5BekC3F/wMOrO5+
          "]]}, 
        Annotation[#, "Charting`Private`Tag$51902#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
15jh/wOKH0eS
          "]]}, Annotation[#, "Charting`Private`Tag$51902#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
92vi/wG9/xT3
          "]]}, Annotation[#, "Charting`Private`Tag$51902#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$51902#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.834729328085142*^9, 3.834729481904522*^9, {3.8359758642150373`*^9, 
   3.835975883665785*^9}, 3.840797444531068*^9, 3.8407974848606253`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"528e3df3-0211-4ce0-a9a0-e8ae672045a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "12"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "1.9"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.834733102981226*^9, {3.834733143030979*^9, 3.8347331451050253`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"34c88431-11d5-4911-9557-8244888e8db0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"pthreshold", "<", "p", "<", "1"}], "}"}], "/.", 
  "pareco3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", " ", "<", "qthreshold"}], "/.", 
  "pareco3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]ww", ">", "\[Sigma]wwthreshold2"}], "/.", 
  "pareco3"}]}], "Input",
 CellChangeTimes->{{3.834733120237764*^9, 3.834733178751751*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"ca427ac7-740f-46eb-afd5-29e917496276"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"pthreshold", "<", "0.15`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8347331284350967`*^9, 3.834733179119862*^9}, 
   3.835975864284182*^9, 3.8407748719608727`*^9, 3.840797444547021*^9, 
   3.840797484879122*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"e325c0f7-a497-4e9c-a66a-673b4312e504"],

Cell[BoxData[
 RowBox[{"0.12`", "<", "qthreshold"}]], "Output",
 CellChangeTimes->{{3.8347331284350967`*^9, 3.834733179119862*^9}, 
   3.835975864284182*^9, 3.8407748719608727`*^9, 3.840797444547021*^9, 
   3.8407974848799143`*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"9fee7677-7094-495a-af80-16f344c7bdae"],

Cell[BoxData[
 RowBox[{"1.9`", ">", "\[Sigma]wwthreshold2"}]], "Output",
 CellChangeTimes->{{3.8347331284350967`*^9, 3.834733179119862*^9}, 
   3.835975864284182*^9, 3.8407748719608727`*^9, 3.840797444547021*^9, 
   3.840797484880624*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"88066e31-898b-4428-a2eb-8c6f6e35e588"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.45"}], ",", " ", 
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.13"}], ",", " ", 
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco3"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8347337483729143`*^9, 3.834733777334539*^9}, {
  3.8347339464215317`*^9, 3.834733947659724*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"ebe11c4c-fbd9-41a3-a951-295b036d0d99"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
m/4/XUFslg==
          "]]}, Annotation[#, "Charting`Private`Tag$52020#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52020#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Fjdr/hkCTFQ+nVeYoke6S/ol67HFii6G2P+jR/aq6zdIYuf2DtfWMjOgqm3d
aUrYk5taDqWLMaAwRy3Yh22f9sHIyYQBMXAx7vHEVtE+fzbaggFRl/8b88Ze
qVIMarRiQNa92x/fxo4ce1mp44KfH3+WG4BdrxZ6UNyHAZVUewTEY+/Jcddv
fseAHoYM7avA5jaQd+HJZUAGvaKmtdjtrQN++woZUHhB5pEmbK8lq9L3lQzo
cM82zS7st3Bwf8gAAyJ0LZ9MYkt8k9EzEGJEceK6EUKzuJ81dKPP3oyo6txF
pRPYd34XxHv/x4hCprqu2GCz00Uz7PRjRCaRGjmnsGlKx4gP4YxoZ1K/xBns
Tffr9me8ZUQC8ob3rmMb7Co2fjHIiJp+8eVEYVcfjsuwHWVE6e2B3rHYR07f
pIpPM6Izh6nqL7GtwjXro+iZkKDArUcp2O5jWebhokyIg6Pl9yfsxy9fWvmZ
MqG7TJlbG7GFc//L33eMCZ04lnXtJ/bzWhsxZlsmRCmI+9yK/WpZpPu/s0yo
7m6SXM8s+X8u7NQ1PyZk+mb9u1HsdspdV/cCJhQ95POIeY6AzZecvMzkmVFc
jX6OCraSZteRWBVmpOT/lroVW53OcsvwNmbkS+d4SgNbJ1B/8JYuMwrUKF3Y
iX0yQdEs1YoZaYTdmdTBftI4uYXhETPao0nhNsOOjnSjGIUzo6iPGmIW2Am2
/YNPo5jRDWsVeUvsrJGmaKUkZqS4LlvDCruaKYdyrAiPL/WKOGAza9wayphi
Rrv2+ilcxOZcnCte+MeMdszZL13CphV5xOjRsaAfX/3LLmNLGNmbt3GyoABK
l6U3tpajXgnLZhZkve2I4X/Yl8IpsdaWLMhwfjXwIXb/zFMLSj4Las7SevUK
+8WerRc7SlgQQ8kOxSRsm6DqRxnlLMg46uubZOzWjcxlR5qxE0KS07DrjlzY
9XyKBSXd3nolC7sg01BCSZ4VpZtmXMvHvr48pLWqwopKNylWF2Dv1Pc9Vred
FSULPdtQiP2+OyfUU48VvXO2f1eMncIjw1xgy4pCZQPzvmM/PUs/bPyUFTGn
surVYZvlPGeRjGFFivryrvXk72feIT2VwIpG9HICG7AfPne3eprFihTcdpU3
Yd+paKvuqmJFhxqTZVqxPeSy33kwsaFVq/4LvdgGA643Qs+zobDTvnYT2Ptu
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
ax84I/lQjOt6ThPst+dZPt5+xYd4zGappJc8Qj5NZ/EhFp4sAdJPzr3Oa6/g
Q+2H8sRI97mr5Zs086GtCn+lSKu45xcQ/Xyo883QZtJlZxqK0pb5EMcHdWXS
9m6/iTBBfiTu/kZ9bX6X1e/Xt/Djfm+ruTb/aYEKhwP8iEHWEkhvcVaoNrTj
RyYoTpe0UKhbh8VTfvQgq8yA9Orn1BHbKn50ecrBhPTF+oPTjr/4UWFx4hHS
Q0N/Fl0ZBZBTD99R0jU0RYrnTgHU395hTbo8Z89Yr5sAUlfSOkX6q+3RBpMY
AeSn8M2JdCHr2Y8FtQLIprvPhXTeG58oRUZBRGnjOktaxPKH53UPQWQYcPIC
6Wv08iaVHYLIIPnVJdLF7qaGG/SFkFRrgSdpjnbvA+7vhdCIvOllk7V6b/z3
nrAwul42vOaBV5JhsdeFUdGJ8iukPztvMFT8LYzahC29SIfJrmPKMV+H7A3j
1hza88WRK28dEnBtWXNwpNN3O4n1KLp361XSnkK9Bh991yOfWZ81Hw+zruYc
Wo+UKDlrTj5D7/DDVASlfmhf8/zexH+xBSKolfJ3ze4C0ztUpUXR7bLJNfcN
6HgV3xdFdw5OrLmYN7fs+7QokhX8//MvtFVFquw2oA2cY2tOsjsiGPl9Aypf
ml9z+l1PXmclMcTKxO1NOvLsGWWNEDFEkxFf833zUwcZZ8TQlwz5NXdG+Hjr
2YkjPz61NWu0xyffrxJHFuc01txC2VZ0YJ0Eeieybc0RclHpVQcl0Cvf/49z
evK/DPSRQJ5Z6mu+VRgUcTBHAo1w/H988OyEGGVMAj1v3r5mIxHzxPKNkki0
S2vN3/c+pPtrIYn0T6I173H/foL3gSR6WaWzZo+v/IXuXySR/fO9a44Vtd9Y
OSOJGif01tw7dsc6SFYKyYrtX/PGktdPjE9IociHB9Z8fP69LTVICnF7G6w5
WKlYvr5ACgWPH1zzteC+5appKRT+wXDNTlNMdWXy0uhB+//tUL/oJWctjc4n
/d/2mZMSDx5JI2bT/zu4njOI+C6NlFn+74Kpzf9WV6URL9///T+tNrtR
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52020#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl13k4lU8bB3A7x76nEkLJEpFKKfdIEtFqK5LILqnoJ5RCkZ0kRZxjKbtI
OJKQsu+UrShrKNl33me85zr/fK5rrpl5ztzzvZ+z3eL6OSs6GuJDt/GleXnP
gknxaqBapi/L3efPqVDRKqZrJGYHc9eSnphEUGH9S4mPmNgd4FTfH/v5MRU4
I/LfsHZ4g99RQ54hLyq8LA0WZRR7DKdqTSxqXaggN3E1ZN0mFE6N2nb62FLh
O2fc2sq3CHh8MjhwmwkVHI+4XpsXfQ4iUsyvZY9Q4W1bX9KMRizYe0r3FslR
YclBt2fSJh5mz5bXmW+lwrH68B1z3xLA8atkrfhcIbQu20b+E02FIM4qrsqE
QrhdKbJnIicNDlx69NEwqBC2PGmr/aORAZnftTiMXAvBQgbRj9lkw+DRMGjU
LAS3DDbq1LdckNRNTgv/WQDM3b+k/ohSgaIYcaCPtQA6Sj+4jo9Q4Uf9K1OF
iXxIexX9aSynCJ6Q59Iut+bDqZunLo9qFIPOPtd3rjH5EEUqihq2+Qgp5TG5
YzL5wBtbRTf5rRzuJZc/WNJ+B5Sa+BtjotXQInkwoyD6LcxEv5PpDaqGmUd3
Lsd6voXjNrX9LYvV0NP6S++N+VsYp583KGqtgdCunp+20m9B5cipQ4/96sCR
HH1D4UMuNGWv0ElNNMJUfl3szb85wAskMw75JjhMY0b/uD0HVHdGHvK72gT0
s8Pv2opzIGQmddq9uQn2QZQYe1AOKIe3W1mkN0Or7UT1olwOeNXI6ShebgXS
jktHCtzeQEpOwc70p60gv63tmZDlG2iJPkq/o64VetwshDP13oCkjXGx0ME2
cJB48dhJ4g3U0PvK0/C1Q0mmqVJUQjYIHunmbfzyFTqLi66ddMyCrOzH3Y7y
XVDhNRSyRpzLKO9okM6VLhDxmgm+ujMDpG7rqO2K7IKRpyYCPKQMIB9mo/Qv
doE8ffg11cZ0iKgOsr74uRvST6fLfjZLh9v9oZNapt+h8YmEsXxAGuQe/5ew
I/Q7NEzEZBU6p8FE6hl9+vLvkGY+HXHfKA1snXkKSqR+QF7Bs4EvO9Lg4mqE
577pH6By/2ydyOdUiGer9eHR7IMd0ns++XGmgtoRD9P7Zn2g737NPmMhBXqc
ZPdN/NcHm5e1nJn6U0CoJXCoLq0Pxr9tSjIuTIHwaF1tf+6fsEvI0MXWKgV8
djRwrnf/BFEH1ZSGqtdgA83Px2/2Q1O6JkNGziugSZgr6g7sh/jhKyoTlFcQ
zSDcU5PUD7e1XzwzjngFVdXWIqlf++HgNz+X2FuvYJf+SoLVoQGYjHu98OPA
Kxixlcr4QTsI4RS3BYbKZLhfq1tfv2UQitrU/LypySAkf/Nv8d5BkJjaQ7c9
IxlOTBfvibEahMA6gcCP4cmQevfcO6PqQTg5dTLE3SwZ7CPuljSFDYFOianN
69UkoJtN6P2YOgRZnNVF3FNJ8MKoiia7fAj4W+TsooaSoEaYTyN4ZggW11Qb
ZxuTQPZ1SqW28TCI219MXE1MgvH3rU3loiNAUyGssHgmCZwGpfvzsn7DpTOp
UqvFidBn1slSVv0bpt8f+lL+NhHOd/jL1w/8hs7695spaYmgUjt8Z3DLKPi0
O/x4FZ0I9DnJ3IJ+o7B5u1pPo2siRHtuV/vv8hg8spXLsVBOBNa5Jksf9zGw
OM6SGiWXCHev338c+nQMTkW5RvVKJoKFRW/b69oxuCu2wyNbIBHkTrx06Dgw
DkoR7wPVFxKgjG/z84Pcf6Dd9dgR2rIEUA6uKtGU/QP7tr6kdSxKgFdMbgNn
j/+BNgbwG3mbAEGLXxXsPf+AJSOPiODrBDDsjfzyYuQPTM5Gv1ELSYDRNO6Z
5dK/kL7lulj85QRg3e4r1avyD6xCPHzvciRA1eFwhXua/6BKMfyWCCkBHhnH
Hdh27h9sNVB+UMOQAHRhhVomDv/ApC05SGOFAktr4zbfXv6DrPKqW/ljFBjr
MUhppJuElupL+/3rKJC2YPHGiWsSNvGXJjRUUcCW37mQQ3gSzsbffiLymQID
JwOqTu6bBPGczKSuDxToKSoZqbSZhMd6fYul2RSoi5aSLq2bhJFTPJZKTykQ
kKeseLlzEt557r7CFEGBE03qB9cGJ+F26iafXyEUqGA21T68TvhW+M9cfwoU
3w6zK1Scgs6potYcTwpk6i+mvomaAs97eWabrCkQwl0rQzGfhoeLhWyMahSg
Htj27pTTNNQ82xzmr0rsz+w6rHhMA/O2EA6+gxRQzeTTN3o2DeSciFeHlSkw
om16l6NhGrZpvd/XJ0MBDZ8/jXdUZ+DiXm+FC5sp4ERcaSntGVAyU83T2ESB
F83hA22GM2D4fnyTsgAF/onuX1S4OQPLEz4Hd/JQIK74nvhQygwsnS4SPUWi
wMIsl+s5wVl4eN8/Ln6JDBLbLNbXJWbhQm3B974FMpw6lvc4U3EW+NVT2KXm
yZAcYRzHojcL90uCaMunyXBOgVJZ4jMLsfSof88fMmTaKm2RnZyFH20st4f7
yNAR6pvUsTYLXl8k0m70koGh4Kv8I/Y5oDxXZKL5QYaLjB4aP6XmYK+NCEm6
mwwsCZ8cn5nNgcJelvW0djJYdOt/pK+bg6M3PCWsasnAGvPz2o3OOTjSdM9c
qYYMuRedhHuH5iDFxGaZrpoM9F1+d4po5+FTQp9k1hcyJHUU7b1xYB54a/x1
ZcvJMNQulvIjYR6MlG94UalkCHmaaaj7Zh5KtrzxKiwkw36DQ4xFH+ZBz4XL
sKiADH5t5y2edsxDdMdf6y/vyLCr9ZGwLucC/Kp10FzPIYN903gY9c4C2OyJ
9PqTRgbesDsg5bcA7n1XHAQJF51m+hsZuQC7f0UXqaeSga1R9KRz9gL0+Wnb
xr8mQ0b9OUapwQVwYl3Vvp1Ehr81hXcizyzC2TnezqA4MkQFaO6iM1sEo3oD
UudLMqjptHy97rAICeyRqlKEQ6vH9p58tAg8/FFh1TFk2FMl8pe2eBH+u11g
veM5GW589rW4LrUEobEd7PsiySAycJxpbu8SrKSH/E55QoZaOlKaJ1qCz55N
aiKEd6DgyccXloBz2PUYRwQZOoue3k8KXILOex8MV0LJoP7mVVznxBJcKRm3
3xpE7LfB9qj5yhL4qFQKJweSIeaPzNAQyzJIva5j30N4ViZ798z2ZQhPL4/R
DiBDanJBMaf+Muw10pAM9CcDT0xVl0bhMmQ5fDPUfEiGEmrAvZqKZRjuaA/9
6UsGhw5d8bPNy5BokdJxj/BngWY7s9FlSBdQDin2IcOdsM4FN+EVkDkuf+CY
Nxl+PhwVzLq/Ajqt2pLeXsT5JmUUKQevwEDMLV55wqqfnMzeP18Bfm614a57
ZHhKM51clbsC+kIuqgcIa3ssK/cPrICwS5zekicZcpzZzwtprwL7bTJPijsZ
6l7w3ck0XIVHHelWJoSHKrbEH726Ch52znFchLdslh5z9FqFhE1lee53yOBb
pulT9m4V7qZVKJm4kcGQ1+utvfga7P7mYq1xmwzOhx91riuswemDJuP0hAOs
g9cjj6yBWL294mdXMnwsijn50XgNHvWu/NUmvMuysJ8vdA3638ysmriQYent
JN+H5TU49Uu3inyTDPw/Fg6eI62DUP1pPUfC8iw05sOC67CzCN1UIWxpypnB
o7QOipU3I1tuEM/DIHvM2nYdUs8+YuQkHGdw1YWrfR3udAWxka+TodDL4UXS
r3X457azyIVwa+rN0oP/1qHCnv+vNmEGL8SUy0iDaFKF+madyKDSeupcjxgN
2rR36tN5whQPh9E9RjTocrT1sZ3XiPosJS34XaJBW8OSZxgIlzKkMPZa0iDP
9k6GAUcy9AUPiAU706Aqty6USFiEfMno92Ma1Jxgx7OT8IuK0xWUYhpEN/Tt
xGEHMsiQ/jYvlNMgpcXJQDHCVL2g3tPVNEjS/z8xRsIdX6uWVttpkL240KFG
ezII/lZXvDhBjPefEbAhHMGhHMcrTovMBY8lJNmRQfxcS7rdLloUNTUTHEw4
J8qZWipPiy7Hn/hwm3CTaGabkyotYvn4YECbMKfSTrZafVoU/FRNY9qWOD9D
ITcfP1okFbWWc5bwlpj8h13BtCjb7W+gGuHUXv0nipG0SOS9Xrws4Srb8Kxe
MrF+VNV1JsJMHqyDqkW06PSOt8klNmTwjl85OzNOi4YHZb6qED6zp/CG7DQt
CuO4pyNNWKTsVrjFIi3SsOsZ30y46NdoUxMjHbq5b4a6bE2GqR2dpzNF6FDh
NXG7MsIWGe/0rM/QoQ+f2Ar1Ce85cuPaS0M6pHem4ZsW4bV6ueA2UzoUM/1A
RJXwi4nEuqN2dEh0flZEnHCLUsRJUW865KOW2DtpReQB1Um74y0dUpLmWH9G
mFNHxo6riA59knG8GEy4p2vQ/3gpHbJg0v/qTdhtxbQqr44OZVy5Ku9E+A2c
1AofpENUdV7D44TFvkhp6myiRx035g+sXCXyxbD/6oNt9Ghr8sVb04SLh+N8
CyXo0Tqpt3qUsDFJsGLnHnr05N7kl07CYboMGvTa9Eg+o3K+kDBNax8qdqdH
Hw++nfAg7Pu7hOL+gB7xNooIuxAm0bykO+hPj2KalS0dCfPuvlDx7ik9ovop
oUuEd/g1a2W/IfbzfN9uRFhHtfxUwhA9sra8Es5KuOEsOdv8Dz36vkNYk4Hw
edt73KIz9GjLcg3nmiUZTJ8eaomhZUAntL79miTsNJFr8FSYAf2Sevqwi/CT
xERT/3MM6NxIgVs2YaGiBx+OX2BAZQ4H7NMIxzZdFmE0Z0B0uTHXkgm/Wt3a
9+AaA1q/5pYaQ7jQKNLSw58BqTtqTvoT7mF7aO9UwoAyRwUjrAmbi1vWyn1m
QNeMIwMtCA+qqMuN1TKgB+dbnpgR/mu1+semkwEdvl7eaEiYttT1xpUZBpSh
3zahRXini7WbvgwjYtbdmSpHePeh3vPxexiRR8F6ljRhZRpjhdH9jGiE3eDj
TsJHg7SHvDQY0fWb/WtihM2S5PTTTRlR0Wu1OQHCUW1TCnShjMjvWl46LeGX
LxzY9J4yIm+vZp11C6Jfmw8MPYthRNmHA6dWCOeOt7/cncKIWsjmJguEGxio
bBfKGBHHe5vQCcKM+7yGs6cZUbz6dsdewuzL8+VLi4xIj7HT/zth3jLnOE0a
JlRz7EVGN2ExPQuDbnYmZFX0k6WD8GErzU9MO5nQR8tXvM2ENWRL4s7KMaEd
To+sGgnrTO53j1ViQppv60vqCRvf3aWoBExoc/8h3xrCLk/Z4i8ZMyFj1Qij
CsIeJr7uKWZMSGA1rqucsPf2VYPpq0zI20rDsoxwWOZf9sc3mJCDzPmHJYQz
Pje75wUwoTu+IexUwgOzzwzZPjAhPas7QtmEE9T33vr+iVhvv8C3TMKXgxtC
s2uY0CUr45gMwl2SjNXnO5iQTm+bchrh5vM3VWOnmRBP27mUZMIh8RzGTktM
KOmDS3gSYd2xFBdEy4wKj93wSiRc5d2bOcDJjCxll+wohEtydMV2yzCjBwYn
77wk7Lk6fHh9DzPKltj/OJbwQW2fC80HmNGhnm8vYwjn9VEjXDWZ0fm4f23P
CadxSTGWmDOjZcuTblGEn12jHT31jBml9Wl6hxHWp8YybY9jRoedzrSF4vNh
VJGYTmJGHbvbpLFDYp1Mn+UyI+H2+R/BhH1ruxt665nRkTKf64GEj276byyn
jRlF9Mh2BxBet+Bl8e1mRtV6WdrY7ksn1Hf9ZkafP03JPybsLJ3/1pmBBWlF
PBXyIyzverbpKBsL4uB8//wR4bHS8XF+Xhb0X9PbbdjWxhI7qaIsiNlkavdD
wpf8wqJpVVlQdb+dkw/hLa2y71rVWZD55AQDdodIZXPyCRZ0KHXipTd+vvxV
Vh1DFhSkrfDtAa6fQfu7ETdY0OlUV6v7hI/flcg45saCBjW3c2MfFejpmrvH
gr46dBZ7ET6kqadiEkTMP3FMGFsmWWFa4jUL0hfsm7xLeOeRke1fM1nQvFpl
OrZ4O/mMfx4Lkt5lbYO9hZE3a7yMBXV8I/d7EmazmrF918OCjrMem/AgzLKa
8cymnwXFq1zIx2Z4avVl8ygLUjIQ9sJeqfgqcW+eBWmKRwhgL5iGntuzxoJs
Cw70uxOemdF68IuBhJgZbuRij0tSfxznJSGaYF8D7JHiGxyLQiS0nHlWGntA
X+ZwuigJFZ6OXrtDuMc35jnXbsI//svErhu4q9+hRUJv0qu2Yld57vcJOEVC
oefTltwIV/BP5Bw2IMZzNndhFx8z56JYkJCMf2scdmGPkNp5OxLil03wxs5z
aXZkdCahoLQYG+yMpKM1dndJyJZlVhk75fDywlZfEnKq1dqGndT2VqohgIQ0
ldOZsGMZdjxUiiahzNLHPf8Rjo79/nYgjoR6q+arsCOVo35FJZOQgZtpPnbw
VaLWc4n5gpUjsQNWPjplUon9zqf6Yj+KdHt5uZSE+uxFb2N7yynW8VSSUOqR
MFvsexW/lz7Vk1D3l3kTbHfTBOnbbSSkeunsGezbMxeNd3UTv4dRtCb2zSA+
v66fJPSSvUoV20my7l3QCAnJtnYrYdsX+w6oTZDQOm2jDLa1/hG+yVli/xOx
EtgW47PqiSskFDaNtmGb+WY5G9Czoi7L/E3YhnmiDVRuVqQ7SMeFfWogTFZE
hBVZyVwiYZ+g+9EkdIAV3Ze+y4R9VEz2Nt8ZVqQC1ezYkN1cFWbKiuaV+fmw
D6u5beW0Y0VHb53eiq1SL+IU6MqKON+b7sDeZ/q5lMWbFRW8PaqInZcoZK/l
z4oyNq0dwFYac+B7FMKKugsPA7a8O681fQwrmrl48DR2RpkV11EKKxpWmDLC
liVRC++/ZkU7RiWuYO+Kvsy29pYVReQPu2C/6s3NO1zEiqpjXbywd0gxmXmU
sqJL3M4B2OL5GW8W6lhRmlYKBVu4bdFgepAVGYS2t2G/2Kq3rjjOikbcQn5h
b7YkpzhPsRL/oCj/sAWnji//WWNFmZw1HLieuLkjySOb2FD18b6T2PS68mPf
tdlQwWB3G7b3kweRwmfY0MkLK0PYNN1tR0wM2VCSjt4i9oqdR1iHBRuinrot
gu/HnF/VvlYPNjTkEmuPPfrJ4n5VJhsSXZ1lxvdNNLzDPiSPDQlfjN6GrW92
ykD/PRv64aC1F7tk4aBMXxUbcjFQuIwdsZunbb6fDbVy7qdiqz77KCW1hR0V
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
B3sg5lM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52020#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 10}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.834733755987884*^9, 3.834733777753068*^9}, 
   3.834733948466907*^9, 3.835975864418281*^9, 3.840774875418232*^9, 
   3.8407974445958643`*^9, 3.840797484925104*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"8bdcaca6-4ca7-4f70-9d7a-07451d300c35"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"parecobeta", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.836010447841221*^9, 3.8360105079546957`*^9}, {
  3.836010859175226*^9, 3.836010859787203*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"3bf6092a-ff87-43d8-b255-9ce895d3aba6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "/.", "solsres"}], "/.", "parecobeta"}], ",", " ", 
     RowBox[{
      RowBox[{"Iww", "/.", "solsres"}], "/.", "parecobeta"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "/.", "solsres"}], "/.", "parecobeta"}], ",", " ", 
     RowBox[{
      RowBox[{"Dww", "/.", "solsres"}], "/.", "parecobeta"}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[Beta]ww", ",", " ", "0.1", ",", " ", "4"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "4"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(I\), \(w\)]\)\>\"", ",", " ", 
      "\"\<\!\(\*SubscriptBox[\(I\), \(ww\)]\)\>\"", ",", " ", 
      "\"\<\!\(\*SubscriptBox[\(D\), \(w\)]\)\>\"", ",", " ", 
      "\"\<\!\(\*SubscriptBox[\(D\), \(ww\)]\)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Manipulation in coinfection \!\(\*SubscriptBox[\(\[Beta]\), \(ww\)]\
\)\>\"", ",", " ", "\"\<Equilibrium (Population frequency)\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", " ", 
    RowBox[{"\"\<PopFreg_Resident.png\>\"", ",", "%", ",", " ", 
     RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.836010513797358*^9, 3.836010616536696*^9}, {
  3.836010649727359*^9, 3.836010657297193*^9}, {3.836010740443453*^9, 
  3.8360107915838213`*^9}, {3.840774888087489*^9, 3.840774976790169*^9}, {
  3.840775008157105*^9, 3.8407750381074867`*^9}, {3.840777051809554*^9, 
  3.840777063643162*^9}, {3.840777116468099*^9, 3.840777196272496*^9}, {
  3.840777254616909*^9, 3.840777271272126*^9}, {3.840777309159596*^9, 
  3.8407773157572002`*^9}, {3.840777348638479*^9, 3.840777354242938*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"06e5c5cf-5171-4e35-8b18-f78c55efe979"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVzns01GkcBvDBMJPwWktFJV02q4top9LN9z3O0FJN0qZtXdailHajQqhJ
rDKykbQnt3baakUTteSaxqxSyhYyKfG+jVwXm8sYjRj2t3885zmfc54/noX+
IR77tFks1nYm//dU1ZHBzIxy4GQ/qFdMt4EeSzt2qqcctBMr/rRiETDEF038
11bA6MIMkR/jebLCNTZNFWA8omemYLxBpjxRalAJw/pjuVSLwHFZOFceI4WC
ppyqFh0CkYrKC3pFf0GOB7/yCYfAsEKWBxmP4X5xXfLPiMD51kbRt9kN0LMq
MKdiAYFF43M0qtRXMPbj5x8cbAn0efXWSw6/hcLgkzfbNhIQ2Pyxuf3eOxj0
3aI2ciOQLm8tFrq/h0cTTfwnngReP/XKdJvohJZL9gLdQAJ32hcUXM/oAc7W
r5bHhhJ48tJo0aB+H3RKSmpLThBYGRUW8OnuAARp7t49lEDgpZqtq7YZBI1T
fpQylUDi84E+XDcELtrp+f1ZBNyjTCq65o6Az9YXEu8cAqWp28t1PJUgtj5k
WXOHQA2bL469NQrTz0aXicsJWCW2ZdeoVfBpXsqQqpqARfS5Z3F2H0HkFOIR
UEfgfo2SiuPU4HBJwNskJzApPLp4rXQccH+64cY2Ap0XbgtWmE6At08/X9xJ
wLxYlNobMAk3Nuh9kTFA4INzNNvyigbGkvzKGpQEgu2tfYuGpmBc+jXvwASB
6kejSsUsFparzJa7alOIGM/hby1k4Xbn5ojXXArC1hJR13da+Fl4eboMUZAf
awzcpGZ8+vgS3VkUTpW78h5e08Ytv5iXiedRqOekoZVuOrh6jjJkYBGFUIOe
uF3dOvidlXD/jS8pBErT/8lLYWMzm/6WfFsKuUt391au1MWpdt2Ry3gU0i6/
Hyms1cU7I6yWHlxPobH4+dCbUD0cvdd7icqRwvfnHp69b8jB8uFbv7P4FLDB
bOMXpRwcJx7L2e1K4Qg/3P6KJxdvEyZcshNQcD1zw3fHCBd31Ulimz0ohB2z
j7HPmoFT/FmC6j0UBmc/XdfgoI99f5KZOnpTeHBQ2vFbhz7W+rcqbNKPwupH
8VnuSTNx8UIHdcI+Ch/lu/ul1gbYPvtE6u2DFFBavK1PowHekSIWGh+mcJwj
nVEWYojH48LNTY5SOBtfO6TSN8IuS2ea9oVT6C2wqwsoMsLulk7+U1EUMlOu
b052Rzir5oeyUiGFPS5x7G27EDYJ6lhey9hU41c3wxPhmGOtV94wPh9sufeM
F8IdeauE44xPO2eEndyP8KuLh202nqIQNJEsCT6J8MuACAcpY15QtPmWXISV
PitWP4yhMDx/r4ItQbg7siusiXGBfN3N6nyE1zfMLelgbO2k4jkWMX9mavHY
pylYzA91XyNFuOhy0XxnxqymfQmL5QjL1D25jxk/SOQL2psR5nGSm5oZR+PF
ZuIWhPMk9ya7GSvzFdcs3iGcmRTvxoml0C3ykn7Wh/DfkTz5FsbXYcOZ+gGE
b3G7RvYw9hubs+38ILN/Pdv4AOO3Ac0tXBXCv+rpuogYX7Yovvr4I8KHGqp8
0xl/05gWFP8JYfVtTXguY2PRUVsnDcLcRmlSGePnjjtV09MIBx3RuVrL+D+5
p2aN
          "]]}, Annotation[#, "Charting`Private`Tag$52116#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVznk41HkAx3E3CT8rqWzu5NETsZSeNn2+20M1HVKupEOpPLlydMiKJVNU
5EhRjl36jZsxY0ZSg0KlVCMRXXIO2QzSiLDtH+/n9e/b4PCJ3UdlpKSkdvzs
f2drgkZupldh5HRYVYBiJRSkZKJmB6pg7vDuvL98JVRJssbhNXcRGJyY5ydb
iaW1nNWmr+6C9k2e8p3jY13t+J+VKvfAPh78LEDCx5naU0qtkQKM2nvPZw7w
Edp1L1GBWwe+87DL+CM+RrtqC5DeiEDh+tUtcXzEvxXG7sl4CbH/cnG8Ih+G
3xfPTCS9xjVJwrRuCg9DHqIXRQGdWDXWLrxszIODKW37qeIjTmmqG0ZyK5DW
+pZ3zrEb6Ss0GTt3VKD9icfNrdO9iNOvUf63m4uyT3qluekDWM4x4edEcPGo
Rc1wRHkIx0t7nFOXcWF29qTXFHsYX5C4J66Rg5ZJOflJ0xHQcy4h4iAO4pqH
h8hTMTTULZQ7DDhwPKtxt+/XMVis3ARJczkqk3ZUybqOY3DJNd7h6HI0yNll
RxV+hWa2+JKtVTn0495lNExOILTBT9pGxIZ22KWmaAsJ9siqBZy/zUZ1w/iH
7OhJZBkX2QbuZ+PHuWCjNYLvuG6sz7LWYaM3sdhhpeY0DDx1/VK5ZVjCi00S
ef3AVMYN4wCrMnyxD5PTzZxBsp5cdWhNKXwsTQ5wxbNgSk87R9iX4kH91/Eu
LSlyIPclc7KtBKe/s+y2caRIVLL5txz/Epx7y4/t2ytNdnapD6bPFqM1RHhk
/aQ0WVEodOhLL0ZEFcP6YY4Mqfas8m9aVYwXiimU2VZZIlO/lJncVIRAlYFo
p35ZMjuaUM4OKMIRQdpgwVU5wgh0Sy1XLUL+chfRPTN5sitfem0crxApN7rH
OI/liQGe6NsdKoSQ1yx+E6hApsrbG5cpFeLgpYcXqlUVySEOQ0+rsgBEZZH6
80pFYig+oeBzqABBdqcsM12VSIUoPMt7QQEYzNsHdo4pEb0r4c13HufjZIhl
pOWteSSnQOKadzYfI4ue2Lxcq0wGF+bWZVrm4/5xQU9WjzK5ZrNS91hfHn6r
j7nleHk+kfaLKD2YkQdJq8tngYkK0Snb0vzcPQ9USoz5fqEKaelcH263IA9n
FAXz7pxQJUr/qD7ra2HhQsxj8YSyGrHKdPthlMqCqNTiqRdXjWQY7O5Nc2Lh
5tVc2wRHitRw3HwfLmLBbVO03HYnilxdp7O4WosFzRnPp/NcKbI39vp7zkIW
4n103ZkeFHHKvM7JWcDCX/bpJ8OPUaSx1zfmPMWC93RCkU84RVQfHatnKLJg
7R22ZHM+RYa8szJF32iM6rh3yRVRJFxktbdngkZpq03egxKKKORSqz58pWGy
ccJ6A5ciGrhi0DpGQ1sn0HG1gCK7mb+b1n2hIfXq6EWjVoq8Hoqsze6ncT/O
zuFT289/Zu/crT4aYcRoYXYHRRwvurul9dIYL+nK0f5IkV0HvR2Sumn0x3oI
fhmiiNVwxb6YDzRysY75Ypgi5A/si3pPw/Pb4u3xIxT57FATEvGORqdXW4fS
BEXatqQMhXbSuKHN+7tRQhFJYhfjdAcNZ2GKd8wURSIZWnUhb2ioxwabb5yh
SL+BpWNQO43mDbsm5uYosrnJTBLQRuM/VtRWSw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52116#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV0Hs0lHkcBvDBDMOOXrU2UuzGidWWbUp3+f7q0IWKzbJlSjKsbbYLUckW
GaNcKuy0ZahsrO61uy5pzJiZ9/01lax1G1NRLpUIZ8fEZCTs2x/Pec7nv+c8
syP2b4kyZTAYm+h86gllrC5fIgVxU0NhQYcMzBmmKRM9UuhIiuBqu2RgjX6d
FrGkCga0+pU2r2UwS1W62L25CpKd1XJhrwxWqIZ+qeTIIbok9MAuvQwOqw6y
NckK8K/uaGGZySGhU55jXkaCTjim6J8jB32n6jpIHoD2/WjbYoEcTrc1pm+9
0ACOK9V7pCNycB61HzfktkB7gqRuS3w19PF662/uawW7WwbOWE81bHYvWdVV
3gEfXEps5GEKyNO0VRwLfAm+ZK238qECntTw8v3GXkNH0TcLSxcp4c+uL+8U
S3qgpf5ULDdPCQ+bpjjrrPrgrNBiWpReCfOPxPM//DUAA7U5cZSrCpqMTJbR
XQcvP4YEKANUkFE30IdqB8FwOfP23EMqCDwyrap75ju6zbHJJRVU5m6SmoUM
QU75A/dsUgVqpk9hyo1hYPGcrWPfqOCrjOcX1EYDMO3UkbaWJDgkZj4WLhiB
/mXngqd+TYJMPdReKDRCUuvuyaD1JHw8dsBliWIUhn/Of+IdRcLrnFub59mO
wfb2z6nQVBJmVKTn9vI/QnJfk7uykIT/fBOZThfHIXwv9zJISRBw3cLKBicg
VbrsWVczCdT94aHO6QzUEHIu62k/CYdGr/j4lzLQeh8P/wxTCo613U3vDjVB
VrhOstGBAk1cY6SX0QTt2JqmvfstBUnSDZ64yBTdi2hycFlLQb2FmJjvZ4Y0
JTVdkTwKYjg9wqA3ZkjmI7E6u4+CSEXe2+vZTOS+TuxcKaTgmmtwr3w+CyU4
NUb2naVAfP7lu9JHLMTOMrFffoWCxoq6wacx5sj0n5mp++5RsDMTn5BZW6Dx
nICfeh9RgDh2Nv9WWiB1DMPRq5WCWJ+D3IshbJT04qqn7i0FG9L+CAt4x0Zh
/s2ru40UxMdxk7kFlig/wunIdTYGnV3N0oZlVihVMDz9/XQM1bsVry69skJ+
JvFtLFcMC++LCgKzPkPGlhu5fE8MI5rgfoUbB1mqlvfvXY2BEIs8djRy0JyA
ODNuAIbDFgrLe/utUXD24+5SHoYTokeDBqspSHdr57yr0Rh67yyo5ZdNQbGO
oyV+8Rjys4tXnQkk0KrucreaZAw/rBUyNwYRSBTWrh2jbTseXmsZQiCi5+hx
j+MYTguctqXxCMShZmEx7eO+kvijPxIosZVhHpaCIXrszE3BUQLteuiSqhdi
8IxOnLHuGoEWsWx32Z7AoHfc1sm8SSBSUBC+lvYdzdKr1G0CAb88NIG22xqD
p3cZgapyLnk/p+3gGBO4WEEg/Z496uKTGBjNUSddNARiW5TWczPovzJ8Nndp
CfT3FVkCn3Yicvmi8BmBNjVFzvqN9tDtziKHDnqvryTISPtNOk8xtY9AAk1R
iiITQzGsSKsfIFCeDTmpox3+3n7jaR2BtuO0hNlZGFr52mdsA4EOTbBCRbTP
O1T8/mCEQF6AqQra3zeKo0UfCJQUPde1h7ZN+gGPNeMEmtziJbI/haHO+zvD
5CSBQl6MPt9A+39AoV5b
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52116#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVz3k41HkcB/BhBjMyftVT0bTsln2I3VE2pfvzXUnrSHKGknWs6KkQRpNz
GmeLYcqZc46fY7M9LHKNkQ7WCpkO7JNRUyTHRONIWPvH+3k/r+d5//Pe7n3F
wU+ZQCCcXMv/vdIaPJ2X2wC49FTO9sscUCUox62MNkCCixF1KIQDVJS50Xtf
I9w8YSDhMjjwjbh6r2F/I2jaqLgR4zhwUDx7vV6jGSx6G34e5HKAIQ4jS2JE
IO8xq/Bv4ECEtJmjWtMGYWb295RIGfBJKi6H3McgZY1ZHcjOgNShvqQzd3qh
WqfiFrc7E3Ysai8rMp7D8fLR5QEZF8Y9xnoqLw9ClGyODZO3wM5QcGTkr2FI
vMoYISpnQY5kqDbK/g3UsXaRHZay4GWnR571kgx2ePj27yTkwJ8j31bxckdh
zibI9fB8Djx5prljWn0cztZJmykvcoF+LdTny70JiFd1ZJS15sGzBZLKguE0
RIway3Iz8yG5e2IcdcmhgpWitOx+B+yvbWx8t20G3HS3OaTSC6A+42QD0WUW
dkvYT15/LIBHJIuiuIrPsCu5OKKtphC+S/73zqMFBYRPvQrsCC4CGjPlb9bu
eei0TPMb1CyGpkezr4tYCzCdb3rWIaAYvkaF6O0TLQLRe6+5ZVMxyDh/2P24
aQmsBkj3mRtKYGttUsaYz1fYUNY1leNTAlPHmSTdgmXYpPihT6OqBAJNDDxr
5CsgvjHMZH8tgQcPP89KtxBQ+M5BSuuxUghfFFrYVBPQwViJUJRYClFDdUnv
3JWQobt6ZUpPKUiu9vkeXlBCms2xhu3reRDdYGXaXqqMOGWmxbededCjxsXo
1kSEXh+SOmfzIEhjlOX4noisbGfiaf088BXlfChPJ6E94b+b/LKRD2X6zmPN
dBVkHRza+diGD9zsNzPVHSpo1Y8h/ofFh77abvmrIFXUeeyCLtbCh/Mp7QlN
VDW0+XQqadsMH5CG1vqn9WroQxJRcMhIAMEWYSYFLmS0skjp9T0nAKt4vuep
GTKao8izLqYJIPSqSYxJPgVF3vq8xeuBAKa1Os1696ujA0/zjds+CaAlQPS2
8K062l9bXjipJ4SfHrLz7W+uQ/v023TXOQlhXuL8UWSggWZW2v3lMULAuGzj
c30a6HvPRXp0lRAYaiLK/StUNMxLn1UaEEICu0OuUNdEniMPmf1KOIxV7e7y
qdFEAbg5n07HIS+ddyTNHkP55zv0O5xwcLVkkWwdMRQcYmvEcMZh07JXF8UF
QzZnFnT0XXBIDdR1i/fA0E7d3uc3XHGIPZ4bGvkbhpxUmhKPuuPgv5RWGRiJ
IWrhmbl753Ew9WduPVGGoSH3EGpKIA6fdNykpEoM7bcj08wu4lAlMcMf3MXQ
1gsULdmaDcwVpkdrMKT9q/ObI5dwoOkE2e8VYWg+3U4kv4IDod8vUU+CoZip
26mOYTi0JFvYjbzAUJbOy5LVNTOR3uaiAQyROXxhZTgOs3elpbThtf21iThi
BA7vkzxEG8YxdFkWEFPNxIEHB+N7JjAUXWep7XkdB685bdvUaQwJzMQllEgc
Bn1eDJAVa//DMxK8onDIptUWP57H0CXryZF10Tg49XH92V8w9PHLJL1+zeuT
QozNlzG0J/N2oHcMDt1HTytWVzHkRnufTY3F4T9bikrC
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52116#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Equilibrium (Population frequency)\"", TraditionalForm], 
        None}, {
        FormBox[
        "\"Manipulation in coinfection \\!\\(\\*SubscriptBox[\\(\[Beta]\\), \
\\(ww\\)]\\)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 4}, {0, 1}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(w\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(ww\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(w\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(ww\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836010564574959*^9, 3.836010590838833*^9}, 
   3.836010634625041*^9, 3.836010686532259*^9, {3.836010739459951*^9, 
   3.836010757459742*^9}, 3.83601080039069*^9, 3.836010866825646*^9, {
   3.8407748796486692`*^9, 3.840774910561145*^9}, 3.840774979468075*^9, 
   3.840775040127184*^9, {3.840777054334853*^9, 3.8407770655614157`*^9}, {
   3.840777167222178*^9, 3.8407772014403677`*^9}, {3.840777248219873*^9, 
   3.8407772679844837`*^9}, 3.840777317857369*^9, 3.840777350720859*^9, 
   3.840797446095065*^9, 3.840797486425529*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"8d97818b-610b-4c0c-9755-ca7cc0138026"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamics of both mutant and resident", "Chapter",
 CellChangeTimes->{{3.8359329256281443`*^9, 
  3.835932942947076*^9}},ExpressionUUID->"e6a00686-c60c-49d8-ada5-\
0d9897db254a"],

Cell[CellGroupData[{

Cell["Equilibrium and stability with simplification 1", "Section",
 CellChangeTimes->{{3.837748276760783*^9, 3.837748293951614*^9}, {
  3.837749144918141*^9, 
  3.837749145130768*^9}},ExpressionUUID->"aa4384b2-5b3e-48bd-9fdf-\
344f6dc98fc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simplifyCond", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]wm", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]m", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]mm", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]ww", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]wm", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]mm", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "\[Beta]"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "->", " ", "\[Beta]"}], ",", " ", 
     RowBox[{"\[Beta]mw", " ", "->", " ", "\[Beta]"}], ",", " ", 
     RowBox[{"\[Beta]mm", " ", "->", " ", "\[Beta]"}], ",", 
     RowBox[{"\[Beta]m", " ", "->", " ", "\[Beta]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.83715770219945*^9, 3.83715771739647*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"133c35f1-8f68-43f7-9de9-ffe934c06eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"posCondSimple", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]", " ", ">", " ", "0"}], " ", "&&", 
     RowBox[{"1", ">", " ", "m", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"1", ">", "p", ">", "0"}], " ", "&&", " ", 
     RowBox[{"b0", ">", "0"}], " ", "&&", " ", 
     RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", 
     RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"1", ">", "q", ">", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837157799825955*^9, 3.8371578350117607`*^9}, {
  3.837157871541103*^9, 3.837157897081986*^9}, {3.8371584518292017`*^9, 
  3.8371584973809547`*^9}, {3.8371609226989117`*^9, 3.837160923967864*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"96942fae-a4a0-4d16-b88d-0ff66e08636a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condFixTotalFull", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{
      "1", "-", "Iw", "-", "Iww", "-", "Imut", "-", "Imm", "-", "Imw"}]}], 
     ",", 
     RowBox[{"Ds", "\[Rule]", 
      RowBox[{
      "1", "-", "Dw", "-", "Dww", "-", "Dm", "-", "Dmm", "-", "Dmw"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8377606629406443`*^9, 3.837760705490981*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"9d6a527b-ad84-40d2-8d80-876562372c21"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"solgenSim", " ", "=", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dIwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"dIwwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"dDwdt", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"dDwwdt", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"dImdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"dImwdt", " ", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"dImmdt", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"dDmdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"dDmwdt", "\[Equal]", "0"}], ",", " ", 
          RowBox[{"dDmmdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
        "condFixTotalFull"}], "/.", "simplifyCond"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww", ",", " ", 
        "Imut", ",", " ", "Imw", ",", " ", "Imm", ",", " ", "Dm", ",", " ", 
        "Dmw", ",", " ", "Dmm"}], "}"}]}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.83593295523976*^9, 3.835933032574181*^9}, {
   3.835933091055862*^9, 3.835933098635519*^9}, {3.8359333531133738`*^9, 
   3.835933419551262*^9}, 3.835975795543391*^9, 3.836011387596251*^9, {
   3.83601142157415*^9, 3.836011421742716*^9}, {3.836988736330394*^9, 
   3.8369887548413887`*^9}, {3.836989292013311*^9, 3.836989297940296*^9}, {
   3.836989868035618*^9, 3.8369898875575657`*^9}, {3.8371518958641787`*^9, 
   3.837151906817089*^9}, {3.837153317005192*^9, 3.837153317807252*^9}, {
   3.837153351512772*^9, 3.837153366489431*^9}, {3.8371543888288383`*^9, 
   3.8371544437063*^9}, {3.837157713673081*^9, 3.837157725211254*^9}, {
   3.837760696771612*^9, 3.837760720535639*^9}, 3.8407974621431303`*^9},
 CellLabel->
  "In[247]:=",ExpressionUUID->"13aad284-f933-41d3-9383-67284d4c9fa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Useful Functions", "Section",
 CellChangeTimes->{{3.837768215771454*^9, 
  3.837768222456252*^9}},ExpressionUUID->"04dddd8b-fc73-4776-80d2-\
5bbff9b9f104"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"followSingleEqui", "[", 
    RowBox[{
    "system_", ",", " ", "commonpars_", ",", " ", "followpar_", ",", " ", 
     "variables_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sys", ",", " ", "cp", ",", " ", "fp", ",", " ", "v", ",", " ", "sv"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sys", " ", "=", " ", "system"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cp", " ", "=", " ", "commonpars"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp", " ", "=", " ", "followpar"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"v", " ", "=", " ", "variables"}], ";", "\[IndentingNewLine]", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"sys", "==", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Length", "[", "v", "]"}]}], "]"}]}], "]"}], "/.", 
            "condFixTotalFull"}], "/.", "\[Beta]relationship"}], "/.", "cp"}],
          "/.", "fp"}], ",", " ", "v"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FollowEqui", "[", 
   RowBox[{
   "system_", ",", " ", "commonpars_", ",", " ", "followrange_", ",", " ", 
    "variables_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sys", ",", " ", "cpar", ",", " ", "fr", ",", " ", "var", ",", " ", 
      "svar", ",", " ", "en"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sys", " ", "=", " ", "system"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cpar", " ", "=", " ", "commonpars"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fr", " ", "=", " ", "followrange"}], ";", "\[IndentingNewLine]", 
     RowBox[{"var", " ", "=", " ", "variables"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"followSingleEqui", "[", 
        RowBox[{"sys", ",", " ", "cpar", ",", " ", "x", ",", " ", "var"}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "fr"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->
  "In[248]:=",ExpressionUUID->"c94a51ae-561d-497f-baa4-24cd97eaf657"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical analysis without simplification", "Section",
 CellChangeTimes->{{3.8377482312539387`*^9, 3.837748235072781*^9}, {
  3.837748305942564*^9, 
  3.837748314443451*^9}},ExpressionUUID->"4473a29b-cce2-4b01-8da4-\
b4d75b755c57"],

Cell[CellGroupData[{

Cell["plot style function", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8377627426619263`*^9, 
  3.837762777187093*^9}},ExpressionUUID->"d1c9025f-63e2-4027-bfdc-\
e88c9e5979ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myplotstyle", "[", "variable_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "v", "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"v", "=", "variable"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"v", "==", "\"\<Iw\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", "\"\<Iww\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", "\"\<Imw\>\""}], ",", " ", "DotDashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Im\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Imm\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", " ", "==", " ", "\"\<Imw\>\""}], ",", " ", "DotDashed", 
       ",", " ", 
       RowBox[{"v", "==", "\"\<Dw\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", "\"\<Dww\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", " ", "\"\<Dm\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Dmm\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Dmw\>\""}], ",", " ", "DotDashed"}], "]"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.837762777187524*^9},
 CellLabel->
  "In[250]:=",ExpressionUUID->"3eaa7b03-cea9-4324-a414-6c26bcc40f92"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"namelegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Iw\>\"", ",", "\"\<Iww\>\"", ",", "\"\<Im\>\"", ",", "\"\<Imm\>\"", 
     ",", "\"\<Imw\>\"", ",", "\"\<Dw\>\"", ",", "\"\<Dww\>\"", ",", 
     "\"\<Dm\>\"", ",", "\"\<Dmm\>\"", ",", "\"\<Dmw\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837752656491519*^9, 3.837752664613141*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"1b5558e5-6674-46d6-9c85-0a1e4fb90b0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]relationship", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]ww", " ", "->", " ", 
      RowBox[{"k", " ", "\[Beta]w"}]}], ",", " ", 
     RowBox[{"\[Beta]mm", " ", "->", " ", 
      RowBox[{"k", " ", "\[Beta]m"}]}], ",", " ", 
     RowBox[{"\[Beta]mw", " ", "->", " ", 
      RowBox[{"h", 
       RowBox[{"(", 
        RowBox[{"\[Beta]m", " ", "+", " ", "\[Beta]w"}], ")"}]}]}]}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.837749035298297*^9, 3.8377491251930428`*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"7fb95c1b-b580-4711-be49-093e4c22cce7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"odes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIwdt", ",", " ", "dIwwdt", ",", " ", "dImdt", ",", " ", "dImmdt", ",", 
     " ", "dImwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt", ",", " ", "dDmdt", 
     ",", " ", "dDmmdt", ",", " ", "dDmwdt"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Iw", ",", " ", "Iww", ",", " ", "Imut", ",", " ", "Imm", ",", " ", "Imw",
      ",", " ", "Dw", ",", " ", "Dww", ",", " ", "Dm", ",", " ", "Dmm", ",", 
     " ", "Dmw"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Imut", "[", "t", "]"}], ",", " ", 
     RowBox[{"Imm", "[", "t", "]"}], ",", " ", 
     RowBox[{"Imw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dm", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dmm", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dmw", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"odes", "/.", "condFixTotalFull"}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"var", " ", "->", " ", "vart"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysfull", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"vart", ",", " ", "t"}], "]"}], " ", "==", " ", "%"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.837748345092833*^9, 3.8377485573774652`*^9}, 
   3.8377511042776947`*^9, {3.837761609423707*^9, 3.8377616101590853`*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"fdf5dc8a-9843-470c-9f5e-fd79ff3005a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "0.5"}], ",", 
     RowBox[{"k", "->", "1"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"m", "->", " ", "0.01"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8377489208416443`*^9, 3.837748998649227*^9}, {
   3.8377506588239613`*^9, 3.837750736865934*^9}, {3.8377510563697844`*^9, 
   3.837751061498374*^9}, {3.837752850744109*^9, 3.8377528509322023`*^9}, 
   3.837763768760955*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"01e2f6ca-5ef6-4da8-98ee-d3048f34991c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Imut", "[", "0", "]"}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Imm", "[", "0", "]"}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Imw", "[", "0", "]"}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}], ",", 
     RowBox[{
      RowBox[{"Dm", "[", "0", "]"}], "==", "0"}], ",", "  ", 
     RowBox[{
      RowBox[{"Dmm", "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"Dmw", "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sysfull", "/.", "\[Beta]relationship"}], ",", " ", "init"}],
         "}"}], "]"}], "/.", "par1"}], ",", "var", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "namelegend"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{"myplotstyle", ",", " ", "namelegend"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.837751220751849*^9, 3.8377512633903646`*^9}, {
   3.837751394093245*^9, 3.8377514430843353`*^9}, {3.8377515293313723`*^9, 
   3.837751529516987*^9}, {3.837751589165402*^9, 3.837751598533842*^9}, 
   3.8377526495023203`*^9, {3.837752765512733*^9, 3.837752782624146*^9}, {
   3.837752837132258*^9, 3.837752842484542*^9}, {3.83775289197228*^9, 
   3.8377529311990767`*^9}, {3.837759593537273*^9, 3.837759595594656*^9}, {
   3.837763263481583*^9, 3.837763264810131*^9}, {3.837763309765959*^9, 
   3.8377633292348337`*^9}, {3.837763769858272*^9, 3.837763777957706*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"62596385-484f-47ce-8470-c7b151d45439"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
zivwnqbTV/1/8fbcgA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
A0yrc5gXMypXXVTsPb24uOr/A3vrOr8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
M7+ysuH/A+zeLg4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
l1f9f5vtIvM=
          "]]}, Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
zP+zKr1JSWXNXxeVuC+urf31/wCzvATT
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
/4m5ub/+H6tIkYc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$52281#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 100}, {0, 0.5}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Iw\"", "\"Iww\"", "\"Im\"", "\"Imm\"", "\"Imw\"", "\"Dw\"", 
       "\"Dww\"", "\"Dm\"", "\"Dmm\"", "\"Dmw\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.837751603061467*^9, {3.837752777312943*^9, 3.8377527833148193`*^9}, {
   3.83775283771701*^9, 3.8377528522307167`*^9}, {3.83775289252642*^9, 
   3.837752931731682*^9}, 3.837759598081439*^9, 3.8377627883502502`*^9, {
   3.837763248854965*^9, 3.837763329881184*^9}, {3.837763771240244*^9, 
   3.837763778443287*^9}, 3.840797486560297*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"e16bfa70-56fb-4630-8b38-9b0f835c4725"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Following m values (frequency of mutant)", "Subsection",
 CellChangeTimes->{{3.837768847545569*^9, 
  3.8377688559535217`*^9}},ExpressionUUID->"96418386-dbe9-47df-8940-\
57e26d4edfe3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parm", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "0.5"}], ",", 
     RowBox[{"k", "->", "1"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8377636304046707`*^9, 3.8377636402400923`*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"2308094a-25b7-499c-8303-7e641cb80e00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorlist", " ", "=", " ", 
   RowBox[{"ColorData", "[", 
    RowBox[{"97", ",", " ", "\"\<ColorList\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.840785749469586*^9, 3.8407857648963614`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"072b0a4e-afde-48f4-96cd-b1c2ac2a367b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mRange", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", " ", "1", ",", " ", "0.001"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"m", "->", " ", "mRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equism", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "parm", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.837765397955678*^9, 3.837765416722497*^9}, {
  3.837766230660378*^9, 3.837766287071496*^9}, {3.837766548958805*^9, 
  3.837766565216857*^9}, {3.8377666187358227`*^9, 3.8377666412880363`*^9}, {
  3.837766673273511*^9, 3.837766677817938*^9}, {3.837766708933154*^9, 
  3.8377667634777*^9}, {3.837766798205943*^9, 3.837766846976729*^9}, {
  3.837766882569908*^9, 3.8377669143614798`*^9}, {3.8377671953542833`*^9, 
  3.837767250983678*^9}, {3.837767281989278*^9, 3.837767326902075*^9}, {
  3.837767445173098*^9, 3.837767462496298*^9}, {3.837768039408465*^9, 
  3.837768053528349*^9}, {3.837768101575293*^9, 3.837768102435726*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"af567a78-8a26-45f7-a35a-196430fbcd30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalI", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Iw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Iww", "/.", "equism"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imut", "/.", "equism"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Imm", "/.", "equism"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalD", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Dw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dww", "/.", "equism"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dmw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dm", "/.", "equism"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dmm", "/.", "equism"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypejul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Iw", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Iww", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantjul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Imut", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imm", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypead", " ", "=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dw", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dww", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantad", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dm", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmm", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "wtypejul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "wtypead"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "mutantjul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "mutantad"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p2", ",", "p4", ",", " ", 
   RowBox[{"Frame", "->", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frequency of introduced mutant\>\"", ",", " ", 
      "\"\<Parasite pool\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "->", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Wild type\>\"", ",", " ", "\"\<Mutant\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.837777686306567*^9, 3.837777723663927*^9}, {
  3.8377778339918413`*^9, 3.837777881058812*^9}, {3.840785708873802*^9, 
  3.840785710393447*^9}, {3.840785771284978*^9, 3.8407858108614388`*^9}, {
  3.8407858543391447`*^9, 3.8407858963738403`*^9}, {3.840785934347241*^9, 
  3.8407859383572702`*^9}, {3.840786001115786*^9, 3.840786117218821*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"a38faaab-1251-4be1-a50b-6c9c61661d4d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxV23c41f3/B3AtJdrr1tYQDaWlUp7dpT2lRbu0VSoNUggVpRIqSmmQEpmh
7L0dHBz77D3SuDX1PfTq+l0//3S5nD7n/XmP5+P5OS56e09s2N9ZQ0ND0kVD
o/3f///1AT9ftlSs2bseXueqTERfVfT9blT4NwqLW1T4fulIsr3vITBcrvaK
lv79uR1yyha99uWpcGFg5DKOoz0mX3fOsm/4+/rziJkcabmxSgUHib5xj9dO
2PIYO6aX/v3/LliMEHbvPBXmN6/zvnf8Mvi165skaX+v546aiLjNWYkqvFuh
03nS1Sv4dWTxygfRf69/DdbT7ZJOvlJhXlz+2dTHXphxN/L50md/3+8GPgSc
0hn6UIXEkR4yi8SbmBozrUXm9/f9byMme4dlsrcKD7NHR5065IO9BidmXL/y
dzx3sCKkzmerswr13zreEN72g0+MO/93fH44uTCgSGmnwrCpjeM0Xf1hMa7u
RcLhv+O9C//X67s671XB2sa0/YqIrbbnmG/7O/77GNsvDVobVQgM6PjCEdOw
UcWr/95PILqFvnT1XqJCbWmrJS/kAXb2X3Bgjdnf+3uIhpiGEm0TFXS7bu49
JSYIhRO7JOVP/Xu/j7D15iQDdwMVts7tuCDu7i0fZqb39/6DYRNk5/efrgqr
TTz/3S0IxqkQjzsR/f/OxxNgg/fgfdoqyC3ar/gEv2Rd9YZ0/Ts/T/Fg0pGY
gp9KXLcV/XjZ8hTJ80yLHL8oab6e4Xnsf0cnKpWYdHWw+haeYdaTYf4soZLm
7zlElwyXeTQrUfRkydtPv54jZU7w5WksJc1nCMwmaSyvYyhxVD1b/3QNxeGx
hfcuFyhpfkMRvtP5lGGmEj1rntkt6PkC5V5PWKXvlDTfL6CVG1N4KlaJV+23
2zcMxY9mrRj0WknzH4baAREb3z5XYmX75Qa/hL7fQ8WmICWtx0sw264O/Oyv
hLR9uoe/wuRnnwpu31TS+ryC50Kb3pOvKtE+e4wx4VijuYub46yk9QpHk+/h
pTvPK2G4/VbmF4PXuPZVy/SLnZLW7zUux+amex1WokB9taFTI1Abq88auVdJ
6xmBPVujXaOtlTjso3DCrEg8PaFMWWSppPWNRK3JAe+KVUqoB6e+5Tfg7Hzy
Ybe5ktb7DfQ6G4oV85XYqN486iWFe+QVe4dZSlr/KOzbbX63i5ESz9WzV/Ms
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
ZxxcLrZ9a6fZQPnNUZ+Xt+uVn+upr6nf71b0LltePeW52lWTjQJpeT31Nw78
d/jzDqfXU75zke92dLsksp76HBdjfxdbHA6qp7znIuLLmxzJ9Xrqd1x83tHz
3RHHesp/Lra1lU+TH6qnvsfFdtufk45vqScPuKjQdo74sKSe+h8Xy3uvSzg9
s5584GLwqT2rWtW96U8f5ELQKfzohX715AUX2Zajh2po1FM/5OJSfvxWD2Ud
+cGFxGuXoXZjHfVF9fhv9bvpU1SHjvg/q+6BPmnX/nlXR58HcRE+ZMew4LA6
el7kYqJt4zKDe3X0+RAXtk9m9I32qKPnRy7m3Npwdp59HX1exMXKislO2Xvr
6HmSiztFcWPXWdRR3+Ti6eMGdWutI4+4SJx1d9cBozrqn1ysNals/ajuyX98
4kK/j8dcF+066qNcpIgf6vf+XkteqXvTG+2Mh+Ja6qdcaPXO7Dm5ppb84iLg
WFS35Jxa6qtcjPmSG7s6rpY84yLj2pfBTU9rqb+qn2PyJxnb+dSSbzx86WfV
tYtLLfVZHuodbe/cPV5L3vEwoGpj48QdtdRveQgJ1xClraol/3jYvGhn9KZ5
tdR3eZjpv81MblBLHvLweIvwltuQWuq/POR9kr0Ypn5u+uMjD0JPq2txn1nU
h3m4oho2Yy2PRV7ywIgc9UpczqJ+zIOkm4XKLZ1FfvIwUfig6+g3LOrLPJz8
JJMlB7HIUx483Ca/sL7Bov7Mw79By+d8c2SRrzx8a5345P5hFvVpHtK+p/Dm
bGWRtzykv5d1qlvKon7Ng9PvoF8XZrHIXx6Gz0lljRzHor7NQ537LP/M/izy
mAeDaPnMg51Y1L95GDKzOEnnQw35zEPk1OTxsU011MfVr7d77mhdUkNeq5/7
jtq+65xcQ/2ch2T8EIa/qiG/edgUZ9J5c0AN9XUetpv06N3pWg05zodm0wad
iLM15Dkfd/f9arPaX0Oe85FsoBB131hDnvPRZUb3greLashzPrpOnvb8gHEN
ec5Hye7VF4aMriHP+RiRgfUFvWvIcz7YTYpxTr+qyXM+linm/pgqrybP+diZ
rlnFr6smz/kwKp4dF1hQTZ7zMWbc68D2z2X+eM7HccflXlovqslzPsxGKdwz
/avJc776ef7CDSf3avKcj3cvKp6anK4mz/kYNp9Z8GlPNXnOh6Hzri7R66vJ
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
eF30Dswhz6W4tG1U3TbHHPJcinnJt+OMrHPIcylcBxX00ZyXQ55L4XskWsnR
zSHPpdgzx3hj5rds8lyKb/ZGi1/UZpPnUsTd9E69nZRNnktx/6hxwaWAbPJc
ipuHfuw/6ZBNnktRtrXo3iGrbPr8VwpdD+c9NnOz6fc9UrS9+pxjo5tNnwdL
Yf6zW/7hb1n0+x8pFo/0PnK6Nos8l0LTcG+Ua1IWeS5Fbei2h34BWeS5FCd8
1xq/dsgiz6Ww2db7VL5VFnkuxdl62z2SuVnkuRR1u+Z17jM0izyX4s2zJVvm
fs8kz6VYxNi271BdJnkuxWmn5YYP32WS51IMeF0VzgzMJM+lMCsrUvS7kEme
yxCe0dJiuS2TPJfBpFDnfaBpJnkuQ+9A9irhsEzyXIY5q6e+mP0zgzyXgW2T
VHa9IYM8l6GasSBfkJxBnstQxnfwNQ/KIM9l4G03nBl2MYM8l0G8TTOi784M
8lwG1ZECjUtmGeS5DPfPG07/MDKDPJfBgVW/+ODvdPJchqBFfnN4zenkuXo8
FV0H2KSnk+cy2PRoqpIEp5PnMvzILnWzd00nz2UIWe0+quvedPJchnrzV+H3
F6WT5zJMj5NOnD42nTyXIayT8jGjSzp5LsNqcfxQcX4aea4e/74I2RyvNPJc
hqMuWom+q9LIcxnudO3t8VUnjTyX4fWpH1sOlqaS5zLc695nNvtWKnkug13S
5XH7LFLJc/X4ZnsbfOifSp7LECvYs+wqM4U8l2Epd9oVg7sp5LkMvdr0pZVb
UshzOcSpx8576qaQ53Jo7pw0e0V9MnkuR03uZYMBQcnkuRy6d303inYmk+dy
fP3HMS1ndDJ5LkfbqnXHI7nvyXM5RtUZHHjy/D15LkfRMN3Xjw68J8/l0Bo8
dUmowXvyXI5TDmdnJ0rfkedyrHjS6s58/Y48l+PRnYRZP46/I8/lOP0jYc1k
43fkuRxuxq3lBz8lkedyyI3t8iLik8hzObIeD53Rdi6JPJfDI0uqazUviTyX
o59XuUvqz0TyXD0/bsm2RmmJ5Lkcm/j+3DDXRPJcDnsXc9EU80TyXA6n0nDn
FM1E8lyOEn541JaCBPJcjq0Oes4/ryeQ53J4sQWq8LUJ5LkcYTpl3Q/0SyDP
5ejp/aZoIvMteS6Hvvfmhd/vviXP5ejGvHWEafWWPJfDImvsuqThb8lzOfw2
13wMa44nz+V4MsbW+tnTePJcgYiNwV5h++PJcwXuRhtdSzSIJ88VmOtfuqVS
FkeeK5DRMqPta2Qcea5A4do+Loan4shzBUrye3FtZsWR5wqc71trEP41ljxX
oOzwEKuf72PJcwXehx89t9U5ljxXYDzOXEtbFEueK+AwknHbWDOWPFeAxxzo
H1kQQ54rEH+RFTDbO4Y8V18/6/WzgvUx5LkCVexRCQcHxpDn6p8/TGb1ZUWT
5wrMXtOzV86DaPJcPR7mja3uu6LJcwXsnmanrR0bTZ4rMD3aaNk4URR53v53
UeafuoZHkefqn89yyv9wPIo8V2D55uVFoulR5LkCrBHTNJiKN+S5Aid1I6uV
Z96Q5wpYadePGd0WSZ4r4HXCRXHwSiR5rkABYzdye0eS5wqk5Jnomd6LIM8V
ePkt6UHuqAjyXIH0If4Jh8Jek+dKcBpPXNQzfk2eK/Ghn/TLh6Rw8lyJg5cf
GtYsCifPlRB309VjFr0iz5XQcJTyRRtfkedKrM30u9i/6SV5rkRSnt8ny4Mv
yXMlTp/bve71hzDyXAmDzAMBwxzDyHMlRj3oU/ekSxh5rsTR1ve68H5Bnisx
pSRn96fBL8hzJRL7uySkBoeS50q8TJmt/2RiKHmuhE2mUXxgXAh5rsSkAaG2
4WYh5LkSex5XbqzMf06eK8HbIDrT3/I5ea7ExkE9WYcan5HnSmwt2OFWffAZ
/b5Xic6rfzlv+/gU/A7PlfjH/mdVq9NT8lwJv36HvMO7PyXPlYiWL4k8e+cJ
ea6enxy/hVYjnpDnSszZuHq1ZVgwea7E0qU7am1mBJPn6uu57G0edvExea7E
ysRNRkG+j8hzJZ5YrHqz5lUQea7EfUv5ySkZD8lzFVZEVHrMZz0gz1UQzLz5
3VEVSJ6rkB0a2CzWDCTPVfB/ftj8ysgA8lyFtXE75ljOvk+eq+CBosJ1a++R
5yo43fna0+nAXfJchdP1I3qwLvmT5yrkGe4v33fPjzxXYfsx6ZlRUb7kuQpZ
Z9531S64Q56rX99Sc0Of60Oeq9/vuPGIUz9uk+cq9N4Snq0YeJs8V+GQaNa4
GTtukucqjK28aSC7fYM8V4F3ujK2S44Xea5CupsVz+nbNfJcBfvT1szNRlfJ
c/X1Dn965rPPgzxX4dfC8SemBLiR5yoIPZkbJpa5kucqLL1acPRaNxfyXAXH
nbsjbp13Is9VyNk4bXe58Dx5rsLqUIlB9aYz5LkK9UfmLXyUc5I8V2HX3Gkp
lra25LkK742cz39cu588V9//Lqb59APbyXMVQur0Xo3etxp//+7871+g/w/C
7d8r
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
pUPGfW+aUE75WoFeKU3m5XPLqU9VQL+Dsn0uM462vK3AsH2XVr5jxtHWryow
LkvTN8aunPK3Ao4ee7a9ci2nvlUBW6eBQ5/fKqc8rkCX92u2PXpaTv2rAp4v
FvR6EFtO+VyBplrjeYHZ5dTHKnBp7oKme5XllNcVyPuW/jlQUk79rAJ3ovnn
gr6VU35XoMPVupNPulRQX6tA+UBJdYhBBeV5BUadmvUyYnwF9bcK/JzQVRxv
XkH5zoFy7Y2raasqqM9xcMf6j1/hzgrKew72uF3rVH28gvodB9+HHqsRuVRQ
/nPwwbKqx2efCup7HOw99/NZx6cV5AEHbrn6dwbEVlD/42BxOCTG2RXkAwfv
p+fctKisoD7IQZyk9NZGSQV5wcFalrfiKHPfbf2QgyiXaXc9mPtu84MDz87q
uw8NONQXOWhoVimSxnPIEw5K3fZerzLnUH/koPM0x3OfV3HIl0qcNNv3pu8u
DvXJStTPX2E+w45D3lTioseuLptcOdQvK1GaXjTY8RaH/KlE1tzUU0FPOdQ3
KyHL39sjK5ZDHlXiXhpfLs/mUP+sBL+Tdcc+VRzyqRId9EfuMJdyqI9WYkjp
TO3B7xzyqhJsDuvdra6V1E8r0WhqkJ46qJL8qkSJ36yfqgmV1FcrcWXU5iND
5lWSZ5Xo9+xBl9VrKqm/VqHTgak1F3ZXkm9V2LV0Njeauc+2PluFLmkNHSTM
fbZ5V4WA0kXbBvtWUr+tQoHerZr1zyvJvyqseKRwuRpfSX2Xud7i0yszcyvJ
wyocWfPvnN/VldR/qxDyKHKFmbwSbV9PVqEy9rnTqZ+V1IerUHN/W36UXhV5
WYUdfz+aaIdUUT+ugtNQn/jJk6vIzyocLbFab4cq6stVGOeyu0P0uirytApD
53IKPu2tov5cjbcvyp+anaoiX6sxX+fcdWePKurTzONhao9M/yrytpo5z8u8
ujL31davqzF8dHhg6321BlY1jIpnxgUWVFHfrsaudN1KUW0VeVyNZerZv6ao
qqh/V6OxUT3a+U8V+cxcLwPrCnpUUx+vRuGeVecGDq8mr6vRZeLU54dMqqmf
V6PjdCbgF1aT38x4jNTSzhurqa9Xw2f/n+atB6vJcy46N27Qj/ivmjznYrdZ
lx7trlST51xYxZm133SvmjznIg2/JGGvqslzLlYctX3bPrmaPOfCyP6507aS
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
GWryXAX/y4OrjsxVk+fMvuofzO9mqSbPmX15LsYvbKWaPFfj6JcwzQorNXmu
RrHxT41sm5o8V2PrJF1/z31q8lyNPLfZvOE2avJcjXEDmsvenlCT52qIl6Tu
t3JUk+dqvG8QBSpc1eS5Grl9Ghxcr6jJczUue/X50M9HTZ6rMWjLhx6hd9Tk
uRomv8Ulsx+pyXM1Dh7cOakwRE2eq7H8ffbErZFq8lyNS4e9iiTxavKcuZ8O
Q7qeSlGT52ow3VX0J1tNnqux7c2uXZeL1eS5GtYHNQ49OWryXI2oo52NAurU
5LkadcaDzgwWqslz5rp2d/Y+UqjJc+Z6ju8lIz6qyXM1Zn0J0H32Q02eqzG8
+XfayHYa8lyNI4b+fZ500ZDnzLyvLf8ztJeGPFej849xbvcGashzZl4+dn3Q
d5iGPFfD0121+vpYDXnOzM8ey4AOkzXkOTMfkZccHE015LkGI9oby9RzNeS5
BrxdT97vsdSQ5xrUmB3yLl+pIc81eGynSVlopSHPNdi9JdotepuGPNegPnYs
13CfhjzX4FJsbrqXtYY81+Dq967mX+w15LkGDb7WS3ad1ZDnGqzV3S3IcdGQ
5xpcm3+gx8TLGvJcg0nPPhX43NCQ5xpUNF/u99lfQ55rMNrvgfrfIA15rkFt
34iNb55ryHMNSh+aLu8friHPNeiaG1N4MlZDnmvA9nrCLX2rIc81CNvlctI4
U0OeM/M2qvDOxQIN/X8vM28TdJbVsjQQtXquQeqsxxencjXkuQbSC8ZLPZs0
5LkGM58M9udKNOS5BsGxX4+O12jIc2Ze55gXOX3RkOcaBE2wiSn4rSHPNfit
7DhiYEctea4BNngP2K+nJc81OBnseTuij5Y812B/kL3fVwMtea5FwD72YIsR
WvJciy03Jhh5GGnJcy3yx3dIyp+iJc+1qI+pL9Ez05LnWuzqM+/Qagstea5F
x5CXbt6LteS5FsfNQ4cVr9KS51qM6Z2Grhu15LkW0VUOfMvtWvJcC//wdR1d
9mnJcy02jK59kWCtJc+1cJh/r0hjryXPmXE6DLAbfVZLnmuZPlB7a4uLljzX
Yp+R3fRrl7TkuRax2Tutkr215DlznZipH5R+WvJci4/3TuoPeqAlz7WYFhD5
fMkzLXmuxfZp9kknXmnJcy3+2CxacT9aS55rwY2I25SVqCXPtRDUrGuUp2nJ
cy0WIpjXI09Lnmux6RF2TivVkufMPEyMtNpYqSXPtTC65pLlUK8lz7UoKFsY
7ivUkudasF0vd49WaMlz5rF/g6T4g5Y8Z9bpTKWZ9LuWPH//v9//Bw5X4P0=

       "]]}}, {{}, {}}}},
  PlotLegends -> {"Wild type", "Mutant"},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{
    FormBox["\"Frequency of introduced mutant\"", TraditionalForm], 
    FormBox["\"Parasite pool\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.840786093231082*^9, 3.840786118352729*^9}, 
   3.840797493555005*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"c52b14a1-788f-4f26-8387-586b3baaff49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(I\), \(w\)]\)\>\"", "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(I\), \(m\)]\)\>\"", "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", "DotDashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(I\), \(mw\)]\)\>\"", "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(I\), \(mm\)]\)\>\"", "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", 
       RowBox[{"colorlist", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<\!\(\*SubscriptBox[\(I\), \(ww\)]\)\>\"", "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", "p5", ",", " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Frame", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frequency of free-living mutant (M)\>\"", ",", " ", 
      "\"\<Frequency of intermediate hosts\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<IHost_mutantAndResident.png\>\"", ",", " ", "%", ",", " ", 
     RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.837767328552496*^9, 3.8377673834761457`*^9}, {
  3.837767465606048*^9, 3.837767469239324*^9}, {3.837767553805643*^9, 
  3.8377675840069103`*^9}, {3.837767656317993*^9, 3.8377678216463213`*^9}, {
  3.837767864652279*^9, 3.8377680176078377`*^9}, {3.8377681071411943`*^9, 
  3.837768135545981*^9}, {3.8377690010696983`*^9, 3.8377690043659973`*^9}, {
  3.8377707900482903`*^9, 3.83777084253636*^9}, {3.840786266862597*^9, 
  3.8407864191854277`*^9}, {3.840786487521934*^9, 3.840786547034069*^9}, {
  3.840786592296467*^9, 3.840786598757868*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"46645459-d1d7-426d-ad37-412072312b08"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
ysDhuYsi6lfXQ7bHngxsVHkLlo5+ZWD+Vze/a/CvDpXLLwNjAkb6HHfr6FkG
+rdxuBrYddB6X++7mWh35Pf+Jwp09C0TtWWh6LBF7jATT1dlqE8odfQuE0WF
S1o1StfhY1mAmUgfX2vZX/E6+peJwLjbYY0idMjKlD+41H1s9ZP3dfQwE/t9
XBMa39Zh7VFvQc3C2g8PXDh5RUcfszBrRxdn43M6tJAFnYVRD7P7njquo5dZ
6D1nhWeH6JAkx6sstFB+oDr1q45+ZuHdwX4tm27TYZm3nKqy8Njv2yWn1+vo
aRYsrR6GNF2pQwPZINlI9ZarRTr6mo37VXqMbzZHhyhvOZiUjbMrVefOTNXR
22zsKVjtaDZBh/ly/MrGim//1+fsKB39zca02Pu7mg/RoVblhsOwbt8pzn6h
o8fZ6HnxcfMWn+sgy6VpDprVPb74XGcdfc7BO9t7Bbf4WAd5HTNy8MCtrXa+
hY5e58A0a924lg11qDye5SA+p+HZ83V09DsHdxFib1lDB7lcfg5O3pvc68Jr
LT1XYMdHTz3/0XK/K7D44MnsCw+09F2Bya/7NmtVpuX+V+DLFcaFFwu19F6B
DvkbA1uZtKwHCjQa17Sqj0pL/xV4KyZ8bOsMLeuDAmVdpp/2SdAyDyigP/+i
pHWklvVCgZg6Z3teCtQyHyhwc+uA7W3uaFk/FDhaYcm8dFXLvKDAth+2NGl7
Xst64rn/7BYLLp/QMj8oMH5QdEDbg1rWFwUG3P3h9eW9WuYJJdq3fD263XYt
640S9bzLb4OW+UIJTzgobrdKy/qjROmygu5XF2uZN5TIzvUeCLWsR0pEej7t
1Wla5g8lrkXFNWo/Ucv6pMQfn82dd220lnlEiQ3nqvm3H6plvVJiXu3Lr64N
0DKfKDFuy5BRHXppWb+U6Oeynrj+mZZ5RYm2M3dbO7TXsp4pUTurXbcbLbXM
L0o8GZC0+ZNGWtY3JWy356fd+EDLPKNCZnMvcFrWOxVC9l+be7OKlvlGBZ+X
w+91fKZh/VMxl2iYd1TwatnJoWE9VGHWmE+O3yrSMP+oMCoytbCTWQNZ7ltV
6NXZe+LSMA+p0OpszV8+zdSgsn2gwru1bqX4JmqYj1R4/Muo+p2jNKyfKuSX
O2bfDtIwL6mQMv2PO53valhPVQjK+PT57Wsa3qcKZ77IHP7ZBQ3rqxp7fZce
vfOXhnlKDWkfHNKw3qoxzXu53zTMV2oMezF2Y5cdGtZfNbynrbsbNcxbajQz
H6jXdbWG9ViNd0Z3nXXvJw3zlxoPw3N8u/6oYX1Ww9Rp5dN70zXMY2oknK7r
KQka1ms17r7nf9hvjIb5TI1Tm8bndRumYf1WY4fjYSf/gRrmNTWWTTuyvntv
Deu5GpPTeyT6d9Ewv6kxpL+6bo8OGtZ3z/9/6+eZAR9pmOc0aNK0/q0enr9W
1nsNqv0e6ElYGuY7Dbzdup41Naz/GugW/3PwflUN854Gscbjlp7P1fRAA9+R
vTsG/q1m/tPgWJhu7eflavrg+b0d18cHWtXMgxosONXog14WNb3QYGLN0OlB
GjXzoQYDN0650StLTT88v7fs6eOgJDXzogb/m3pqcO9oNT3R4FVqvwPBnudW
mR81KO1rMvW+p6YvWihvbOoQcl3NPKmFHAcvqumNp079FhEbclLNfKnFgafT
a/c9rKY/Wmxa9HJq6D4186YW8wxnr/XdqaZHnjo1YuCj0E1q5k8t+obmot/P
avqkRRtpIKiZR7Woc7KlsZ9n3VR65alrNWI+Dp+hZj7Vomj9rNX9v1fTLy1y
Sl9Hh49VM6967n/yxfe/GK6mZ1r4pHw5JWKQmvlVhz/6FF75oo+avumw4fqO
hxFd1cyzOsxr1GbQgE/U9E6H0Xvjf49spWa+1aHXv3P1A5qo6Z8OrRZ6A5Ga
eVeHmrIQ1fRQh8fDh0ZFefZZZf7VIS/YVnPQCxUq25M6ZLTfMyn6kYp52OPe
iY8vD3Kq6KUOZ6snu6NtKuZjHX5dt2AAclX00+N+SfV9MVoV87IOP0y6rkW2
ip7qMDz56zaxySrmZ09O6m1f/mWMir7q0VxesIp5Wo8a3njvqTOV3npy5Z60
7+JuqJivPbnrn8U+g31U9FeP5PnvVcSdUjFv6+GnvdX/qyMqeqzH2WHeJ6hi
/vbksqBy9Ve7VPRZjxUf72+V8IuKeVyPqcc7LxuyRkWv9Rj8TlZYwlIV87ke
n61dVn3ofBX91qNJce2JiTNVzOt6vPO9t2OnoucGuBK/cSZ+o6LnBhg+d/cd
9rWKnhsQ70nPSVDRcwNu1O+mGtZXRc8NOLZb0TK5m4qeG7D18colwzuq6LkB
P837MDS5tYqeGzBB4//2101V9NwADJ0wPqWeip4b8Eng3+e+fl9Fzw2o1+6o
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
5j+p9KgII2Xek8r8WYSPZL6TSp+K8LfMc1KZR4uQKvObVHpVhLMyr0llPi3C
SpnPpNKvIgyVeUwK82oRmsr8JYWeFcEl85YU5lcrYmS+kkLfrDgp85QU5lkr
lsn8JIXeWTFQ5iUpzLdWNJD5SAr9s6JU5iEpzLtWRMn8I4UeWnFU5h0pzL9W
zjdS6KOV84wU5mEr/ifzixR6aeW8IoX52IpwmU+k0E8rDsk8IoV52Yp5Mn9I
pqdW9JV5QzLzsxV15Lkm01cr5wnJzNNWBMn8IJneWrFP5gXJzNdWzJH5QDL9
taKnzAOSmbetqCH9/2R6bEW+9PuTmb+t7O8n02crdks/P5l53IoZ0r9PptdW
dJV+fTLzuZX9+WT6bYVF+vHJzOtW+Er/PZme27BT+u1J9NyGSdJfT6LnNnSW
fnoSPbehqvTPk+i5DRrplyfRcxv740n03IbN0g9Pouc2TJT+dxI9t7HfnUTP
bfhP+ttJ9NwGpfSzk+i5Ddelf51Ez23YJP3qJHpuw1jpTyfRcxv70Un03Mb+
cxI9t7HfnETPbewvJ9JzG9ZIPzmRntswRvrHifTchhbSL06k5zb8K/3hRHpu
Q5r0gxPpuY3930R6bmO/N5Ge2zBC+ruJ9NyGJtLPTaTnNvZvE+m5DUnSr02k
5zb2ZxPpuQ1LpR+bSM9t7L8m0vNiNJZ+ayI9L4ZT+quJ9LyY/dQEel7M/mkC
PS/GIumXJtDzYvSX/mgCPS9GPemHJtDzYvY/E+h5McKl35lAz4vZ30yg58WY
L/3MBHpezP5lAj0vRm3pVybQ82IUSH8ygZ4XI0T6kQn0vBj7pf+YQM+LMUf6
jQn0vBi9pb+YQM+LWQcT6Hkx+4fx9LwYQdIvjKfnxdgl/cF4el6MmdIPjKfn
xez/xdPzYvb74ul5MczS34un58Xs58XT82Lslv5dPD0vxgzp18XT82J0lf5c
PD0vRjXpx8XT8xLopP8WT89LcFv6bfH0vIT9tXh6XsJ+Wjw9L0FH6Z/F0/MS
vJR+WRw9L2F/LI6el+CK9MPi6HkJtsiBJo6ee64v/a44el6CNtLfiqPnJXgm
/aw4el6CLOlfxdFzz/WlXxXH82EJNkh/Ko79oBKMkX5UHD0vQWvpP8XR8xI8
kX5THD33XF/6S3H0vIT9pDh6XoJ10j+Ko+clGCX9ojh6XoKW0h+KpecleCT9
oFh6XoI06f/E0vMS9nti6XkJ+zux9LwEQ6WfE0vPS9BQ+jex9LwELunXxNLz
EiRIfyaWnpfihPRjYrmOS7FU+i+x9LyU/ZZYel6KBtJfiaXnpeynxNLzUsRK
/ySWnpfiqPRLYul5KRZIfySWnpdik/RDYuh5KdpI/yOGnpciQ/odMfS8FKul
vxFDz0vRQvoZMfS8FGnSv4ih56VYJv2KGHruuX/pT8TQ81IkST8ihp6XYrH0
H6LpeSmaSr8hmp6XIlr6C9H03PPz0k+Ipuel//+9tkrPSxEq/YJoel6KedIf
iKbnpXhf+gHR9LwUAXL+j6LnpZgl5/0oel6K6nK+j6LnpQiS83wUPS/FNDm/
R9HzUrwj5/Uoem6Hn5zPo+i5HZPlPB5Fz+2oJufvKHpux205b0fSczvP15H0
3M7ve0fSczuuyfk5kp7beV6OpOd2PJPzcSQ9t+OinIcj6bmd33+OpOd2VMh5
N5Kee35ezrcR9NzO82wEPbfjgZxfI+i5nefVCHpuxxA5n0bQczvPoxH03M7v
30bQczvPmxH03I4SOV+G03PPz8t5Mpye29FPzo/h9NyOMjkvhtNzOw7J+TCc
ntvRV86D4fTczvNfOD23Y6+c98LpuR2fyfkunJ7bYZTzXBg9t2OnnN/C6Lkd
n8p5LYyel0El57Mwel6GnXIeC6PnZWgv568weu75eTlvhdHzMn4/MIyel6Gt
nKdC6XkZcuT8FErPy7BBzkuh9LwMzeR8FErPy5Am56FQel7G77+F0vMyfp8t
lJ57fl7ON6H0vAzL5TwTSs/L0FDOLyH0vAxxcl4Joedl/H5XCD0v4/e1Quh5
Gb9/FULPyzBXzhsh9LwMH8j5IoSelyFYzhMh9LwMc+T8EEzPy1BTNnYwPS/j
94uC6XkZZsh5IJiel/H7P8H0vAx+kveD6XkZv58TTM/LUFXyfDA9L8Mtye/B
9NzBvB5Ezx34L9qbz4PouQNXJY8H0XMHJkj+DqLnDjyXvB1Ezx38fkgQPXfg
G8nTQfTcgX8lPwfRcwcuSl4OpOcOjJB8HEjPHXgoeTiQnjtwWvJvID13YKjk
3UB67kCF5NtA1lkHTkieDaTnDkDyayD7vw44JK8Gct7jwGHJp/fZD3Ywj97n
/MfB/HmfnjtwVPLmfXruwCDJl/fpuQM2yZP36bkDf0p+vE/PHegnefE+PXeg
SPJhAD13YJ/kwQB67kBPyX8B9NwBi+S9AHruYL4LoOcOdJE8F0DPy2GU/BZA
z8uxU/JaAD0vR2fJZwH0vBxayWP+9LwcGyV/+dPzcrSXvOVPz8uhlHzlT889
Py95yp+el6Ot5Cd/el7OeZw/PS9nPvKn5+XMQ370vJz5x4+el2Ol5B0/el6O
ppJv/Oh5OWIlz/jR83LmFz96Xo6Gklf86Hk5oiWf+NHzcs5r/Oi5534kf9yj
5+XYIHnjHj0vR4rki3v0vBwtJE/co+ee3y/54S49L2deuEvPy1Ff/sG79Lwc
8yUP3KXn5QgU/+/Q83LUFu/v0PNyzBTf79BzJ26K53fouRMvJnr9vkPPnfz3
uW7Tcyeuis+36bkTL8Xj2/TcibHi72167mQ/2ZeeO+EUX33puRMQT33puRN/
iZ++9NxJL2/Rcyf6iI+36LmT/dJb9NwJi/h3i5472c+8Rc+d2CW+3aTnThjF
s5v03ImO4tdNeu7ERvHqJj13IkN8ukHPnWgpHt2g5072327Qcye/D32DnjvR
WHy5Ts+dWCSeXKfnTkSKH9fpuRP1xIvr9NyJ2eLDNXruZL/oGj134n2p/9fo
uROTpd5fo+dO9meu0XMXXks9v0rPXeyfXKXnLlyRen2VnrtYn6/ScxdGSj2+
Qs9dOCn19wo9d7HeXqHnLgyU+nqFnrtwQurpZXrugl3q52V67kI/qZeX6bmL
9fEyPXchV+rhJXruQlepf5fouQvbpd5doucu6KW+XaLnLrSXenaJnruwXuqX
Dz13IUPqlQ89d/H7BT703MV5vw89dyFR6s9Feu5CI6k3F+m5Cwulvlyk5y5E
Sj25SM9daCH14wI99/x9qRcX6LkLs6Q+nKfnLrwn9eA8PXfhjuz/c/TchUmy
38/R8wru73P0vAKXZT+fpecVGCb79yw9r4Bd9usZel6BQ7I/z9DzCnST/Xia
nldAK/vvND2vwAbZb6foeQXayv46Rc8ruJ9O0vMKLJP9c5KeV+B92S9/0fMK
BMn++IueV2Cq7IcT9LwC/33pXf8n6HkFfGS9n6DnFfha1vdxel4Bl6zn4/S8
Asdk/R6j5xXoJ+v1GOe9FciT9XkUNvG8ArtlPR6l5xXoI+vvCD2vgEnW2xF6
XsH+xGF6XoH2sp4O0/MKpMv6OUTPK7Bc1sshel6BT2R9HKTnFVgl6+EAPa9A
lLz/P+m5GzXlPPYnPXdjgrzf/fTcjVPyPv+g526UyPv7nZ670V3e1z567sZm
eT+/0XM3EuR97KXnbtSV+vMrPXdjkjzvPfTcjUvyfHfTczcc8jx30XM3esnz
20nP3dgpz2sHPXcjQ57Pdnru5vcdttFzN0Ll82+h525MlM+7mZ67USyfbxM9
d2ObfJ4N9NyND+X+19FzN3zkftfQczf6yf2tpuduZMv9rKTnboTL719Gz92w
ye/7iZ6/uf4Ceu5GD7neXHru5vubSc/drOeT6LkbcfL3x9LzN79vID1/gDf/
Hvr/AdpxdTg=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxd23d00+XbBnBERBBQRJZsAUGGskSmXCCIICCylwzZQ5CN7C3jh+y9hILs
0ZbSvfdu9u5Ik7ZJmjQMUaa8yc3118vxHA9HTL/jee7P9dx3+GTmr6PnVK5U
qZLz7UqV/P/+/79eXn+oGjHzR4SP778p57+v8eb3MxAqvx+B55sWRq88Mh/v
Dghs1mjzeP73pYiU/z4V6+ve+c66biW6feVY0j9uJv/8b/zzc7HW2aZLtVsb
kD/st9zH/Rby/9/Cz1+MvoUj/zixZBtSOlc5MaZwKT9vB76Uz1uOyKE1K3fY
9TtO98ke/PmfK/n5u1FDPn81eoekr479cy9WDj76T9Xpv/Hn7UOZ/Lx1CG+2
s3xU+H58P+qnK0XNNvDnH+T1b8TZ5BaBy+cfQoufWo+PLNjM6zmMVLmeLTA/
kx+Ijd3+qfx93lZe31F0luvbhsad8ltX3XoM9p4m01d3t/N6j+OcXO8OTJ7d
x/+JGN0vNrjVgZ28/pN8Pr77OiW/kDgwYG/tX3fxfk7zfnbDmPvvGNtfZ9Bx
6O8zX/2wh/d3FgVyf3vxcZXx738efA7HfljY2/XF/3i/5zFM7ncfJvaSD8Rb
Y3+oo3//D97/BUTI/f+B4T32DJhRcgGLJ3V1JVXs5/O4iFbyPA7APcr/iRfx
S6caP0+cd5DPJ4DP5yD+90vZi+sPA9Cy66vsHyYc4vO6hA3yvA6hw676vlu4
BN2X3p7ffneYz+8y18thZF38NvTxq8vY1cN6uU+PI3yef8Epz/MIFvmeVsMq
VzCgt7p217ZH+Xyv8PkexXv6S0u/fu8qnvZN2fBZg2N83lf5vI/hhv92a1/D
XYQ5mr17nM//GmrK8z+O7/0fV/86Zn9zfWy9f4/zfVxHvLyPE3D5H3eTG2j6
7Zn4GmUn+H5uYJm8n5PwPz1Fy5vI+O6PjpX1J/m+bqKNvK9TaPfTgcQnn93C
nu83n3yaeorv7xaK5f2dRobv0xp1uo3+I5ZV8Yae5vu8jZPyPs9gwSHPBnS/
g8cjZy0tuXKG7/cOhsr7PQvfxflu+S6ujh5nMR8/y/d9Fy/G+N/3OYz1LR7f
K8XP474bovr9HN9/IPf7OVz2PT39pUDUlP/xPNdDIBbKejiPv19pfnO2CULa
5A4t4ub+yfURxPXxJwbJAghC1J33Uyd3uMD1EoSFsl4u4GhDuSE0DHz35bhL
F7h+gpEp6+cC3lxeMFYEVeo6qvFFrqdgtJD1dBHd5Nc95AY/mzf8yEWur3vY
JOvrIrbHZ/pW0D18FvLo3Hc1Arje7nG9BUDte/u+W8P2++Xqb7YHcP2FoIus
vwC0kg8MgTXUXr3fiwCuxxDslfV4CSvm+1/AffQLz0evFZe4Pu/DIevzEpKe
fOZ7w/dxKkK36svyS1yvoRgk6/UyPnpzgXgUmXez06zLXL+hXL+XIVeXHooR
0enW9ubLXM9h+FvW818IPue9mjosDFdjEhq0GfMX13cYfpT1/Rcqyw2H4VVs
5IhPsv7ieg/HDVnvVzD6zYLBlPh725sMvML1H47qsv6vIMB/u5pwhCTcimgQ
dYX7IYL74Qoe+T9uYgQ+SvrLW6fbVe6PCETJ/riKb/zL3xyBRcnnP33/5lXu
l0g0lP1yFYf9y3daJDJSTkyp3uoa908klsv+uQbrOv8LiUTLtIOHqpy5xv0U
BYXsp2voIgs8ClvS96S9rnOd+ysKn8v+uo6txwb6lkwUdBnbXj3fe537LRrb
Zb9dh7KlvGB0zlrvWzE3uP+iUSj77wY+8Vd/TzQOZK9c8HDdDe7HGPSW/ejb
5/7tsTQGzpzFf7of3eD+jMFR2Z83keB/u49jMChvrrZs4U3u11h4Zb/exIdv
NiTOK6bXsBXf5P6NZX2+BXl8z2Lxr3LigILJt7if43BT9vMtyOVtiMM49ag1
RtUt7u84VJJ6fhtvFI9HoOb7275/uN/jMUX2+21cSx3m29HxeF830JaXeJv7
P577/zZ+9O3GOtvjMV/f9+Os3ndYD+JRS37QHTz165McjwhD95GpwXdYH+Kx
ROrDHVxo5N8QCWhk+mJnQvu7rBcJyJB6cRdD5AUnYLW5bVR0wF3WjwQ0l/px
Fw+u+i8wAfOWHHw6pVYg60kCoqWeBOKk/+oyE1Dfu+/IpKGBrC8J9CgQ/X2L
a2jNRCT/uueLCTsDWW8S0VTqTSAcL/w3nIilD3ZmjE0IZP1JZP0JhH+1+JYM
WizbNnv0q0DWo0TWoyDI7SoSkfVw0+uRvYJYnxLRXOpTEOTj6iRh9fL1p0es
CmK9SoJK6lUQpByNSULbx2u6DwsKYv1Koo9BeBMfkqBYsVIxxBPEepaE9lLP
giHlQJ+EbX8vXTS4XTDrWxLrWzA2+7dzw2R8vmpx1UFzglnvkvG71LtgtJUN
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
DzaTnuejp5wfM+l5PuYt7ryoIiWTnufjoJwnM+l5PuJu3+npsWXS83yUyfky
k57n46OKjlXdb2XR83xAzptZ9Dwfi764qXY1z6Ln+ezfZtHzfCQuaXfR+XUW
Pc+HW86jWfQ8Hw3vXl3imJJFz/MxUM6nWfS8AEu9n/YtW5tFzwtwUs6rWfS8
AAmdLlcvPZFFzwtQIefXLHpegCZLW+rt97PoeQEGy3k2i54XYEXghcs2dRY9
L2A/OQtR4nkBUh40W178MIvn3QI8kfNuNj6Q516A5l3OwfpBNj0v4Dw0m54X
YNUyf0DIpucFOCfn4Wx6XoDsoFOmgmHZ9LwAz+R8nE3PC/HJowbX8hdk0/NC
jJTzcjY9L8SarsdXWXZl0/NCXJHzczY9L4Ried2B5r+y6Xkh/pPzdDY9L0Sb
e4drm5Ky6Xkh++HZ9LwQmx/7bzibnvs+X87b2fS8EJpuB27qX2fT80K8kvN3
Dj0vRKeVtdbqmubQ80JMkPN4Dj0vxNaQ/w3W9smh50U8n+dwvxfB5KvOmkk5
9L0I78h5PYf7vwiduu+2qtbk0Psi/CTn9xzWgyLsWFX1rvJYDv0vQqic53NY
H4pgvL9jg+JeDvNAEarK+T6H9aIIX/mPM8oc5oMiTJPzfg7rRxH2frW1Qa43
h3mhiOf/HNaTIhSvfm3PrpXL/FCE2tIPyGV9KUKPsI3BWR1ymSeKMEf6A7ms
N0XY/++LzZlDc5kvihAl/YJc1p8ilPZYNyJjXi7zRhHqsE/zph4Voc9vTxul
78xl/ijCAukn5LI+FeFw+GpH6qVc5pEiREp/IZf1qgjOp3/fT0nIZT4pQn3p
N+SyfhVhQK8V25MLc5lXijjvzmU9K8LJtQ99J+Bc5pciJEk/Io/1rQiuiF+b
JTbOY56x4mPpT+Sx3lkx6LmnPL5XHvONFUukX5HH+mfFmd6/RMRNyGPesSJd
+hd5rIdWPFrn+j12VR7zjxXNpJ+Rx/poxdCo+WNjjuQxD1k5T8ljvbTigj+e
BuUxH1mRI/2OPNZPK571meONzMtjXrKitfQ/8lhPrfhhgy06wpPH/GTFKumH
5LG+WjHGdxqxvKNgnrJyXqNgvbVi43/em+a6CuYrK45Kv0TB+mvFtWZ365hb
KZi3rIiV/omC9dgKXb8la01dFcxfVjikn6Jgfbai0vTPi4wDFMxjVtST/oqC
9dqKDpvdg40/KpjPrBgg/RYF67cV4/+8edswXcG8ZuX8SMF6bsWWuIV1DUsU
zG9WnJB+jIL1vRh3Ctut129UMM8Vsz+jYL0vhv61w6rbp2C+K2a/RsH6X4y3
W1wbojujYN4r5jxcQQ+K0an/vLvaGwrmv2IMkn6Ogj4UY9KMNvW1EQrmwWIs
k/6Ogl4UY+eWkg2adAXzYTHOSr9HQT+KEeznQ69gXixGhvR/FJDyv7oY+fGz
vleXKtgPKsZj6QcpeF4sRjVryyDVEwX7Q8VoKv0hBc+Pxej6VnEDVRUl+0XF
GCz9IiXPk8WY9snFTcqPlMybxVgu/SMlPSrG/yQXKpk/fdcv/SQlfSrGvZ+b
D1d0UTKP+q5f+ktKelWMwq0FwXn9lcynvuuXfpOSfhWjZsC5j/NGKplXi9l/
UtKzYnRP/GlL7jQl86sNI6QfpaRvNswsbuyLHErmWRtWSX9KSe9s2F/ZPCJn
g5L51oYA6Vcp6Z8NkS1Ph2T/T8m8a2P/SkkPbbB/M6lx9mkl86+N/SwlfbTh
g1kNt2VdVzIP29BK+ltKemlDr+16R2a4kvnYhh+l36WknzbMvXTct6KVzMs2
9r+U9NSGQ0njQjN0SuZnG65JP0xJX22IsdVtmlGiZJ62sT+mpLc2ON/WbE//
W8l8bcMr6Zcp6a8N9VofcaW9rWLetqGd9M9U9NiGrweNHpVWR8X8bWM/TUWf
bVg4+8Pw1E9UzOM2bJb+mope23B8h6JZamcV87kNN6XfpqLfNsRfPrAzBSrm
dRuM0n9T0XM73Mk/+P5R0XM73pZ+nIqe21G/pNaY5Kkqem5nf05Fz+0Y9E5O
RNIvKnpuxyTp16nouR1LP93XImm9ip7b2b9T0XM7Tn87bFfiXhU9t+OO9PNU
9NyO5DnvVSScUtFzO0zS31PRczse+svBNRU9t6Oa9PtU9NyOJn4OwlT03M7v
X6nouR2DU79rGZ+qoud2TJV+oIqe27GqtOqeOK2Knts5L1bRczvOVU31xtpV
9NyOe9IvVNFzOzLa7Bwf+1hFz+0olP6hip7b8c/gQTExldX03I7q8qLV9NyO
VnKgV9NzO76S/qKantsx3Pf0oluo6bmd/UY1PbdjzdWtD6M6qem5Hfuk/6im
5yW4kNZ/YlQ/NT0vQbj0I9X0vAS5Za9jI0eo6XkJ591qel6CF+/GfRr5k5qe
l6C29CvV9LwEbT7btC9ikZqel6CX9C/V9LwEPw75+nH4OjU9L8Ec6Weq6XkJ
1s9/OSl8j5qel+Cg9DfV9LwE1/yv96Sanpew36mm5yVQXlvXNuyqmp6X8PtL
anpegpfpvfaHhqrpeQk+lH6omp77rl8Clpqel6Cf9EfV9LwEo6uHT7mvUdPz
EvZL1fS8BJvarUkMsanpeQmOS/9UTc9LcGfoV76SoKbnJUiUfqqanpdAv+DJ
gXtvaeh5CdzSX9XQ8xK83hPyT3BtDT0vQX3pt2roeQk63FgxNbi5hp6X4hvp
v2roeSnGZ3ZNDvpCQ89L8av0YzX0vBQ7XQ/bB32toeelOCX9WQ09L0Xwe0GH
Aodr6HkpkqVfq6HnpbC0X/r07hQNPS/l9xM09LwUbw/rNP3uQg09L0Uj6edq
6HkpuvpOx3fWauh5Kb6V/q6Gnpdimr99u1vD86Hv+qXfq2E/yHf9N385cvuE
hp6Xsv+roeeluJfV4fmtKxp6Xoo06Qdr6HkprOWuGbfua+h5KfvDGnpeimo1
b6TdTNbQ81L2izX0vBTdOy7wncA19LyU36/Q0PNS/Dz8s2M3ijX0vBSrpJ+s
oeel2Cdua+h5Kb+PoaHnpQjdd2Xm9Upael6KbGmAael5Gey35mRc+0BLz8vw
XPrPWnpehpo5rTtfa6al52VoKf1oLT0vQ2+P7fjVz7X0vAw/SH9aS8/LMKvW
pVdX+mrpeRnWSb9aS8/LcODzmbOvDNPS8zJckf61lp6XIcL/7b3JWnpeBqX0
s7X0vAwli4u6/LVAS8/L2N/W0vMy1Nn/58nLv2npeRnaSb9bS899139n2utL
u7T0vAxjpf+tpedlmJfb1BcRtPS8DBulH66l52U4XGHJDvhLS8/L+H0VLT0v
Q9z7Z7sFhGjpeRnU0i/X0vMylH8x5fTFJC09L2P/XEvPy1B/ZKO3Lqq09LyM
/XQtPS9D/1+N8y5YtfS8DJOkv66l52VYeOBk7p8PtPTcga3Sb9fScwdO3J3Q
/c/XWnruwE3pv+vouQPJefXPnn9fR88dMEk/XkfPHXjg1VY+31RHzx2oIv15
HT13oGntYwvOddTRcwc6S79eR88dGOxL42f76Oi5A5Okf6+j5w6skMCmo+cO
bJd+vo6eO3BuqercmUk6eu5AsPT3dfTcgVR/O3a+jp47UCD9fh09d+BJ4I+L
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
5tPzB7gj8/N8/B+LYngu
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
7w4tvehPJFYPTZj7Dl6Q8BcJ576Vtp6Z6EWPIqHLSzH3XeYFW3gpE4UH7bpf
DNvjRZ+i8F/z9vd+U3vBNn37R8HvcWCjQ4Fe9CoKN6qmxcbFecE2PXZEoWW5
g0mlirzoVxS+80tqW7fsScjwi8KoF9cT6tc/Sc+i8E7n8Kx8p5NILHm95aNR
aXvbujlDT9K3aOx4Gn5DNfMkNtruMBpLHr7TDF93kt5F4860IK3W7SQcbAMw
GovP1lw1+9xJ+heN7V5lJz5/cBJPo21/8E23nfubp5ykh9EodvGuPttyEqvc
SwLqU/RfMcR4oJw3fXyKL1X21lA39EZD24B+iroTph307exNL5/CZ/CTyXuG
eeOxbXn1FId14WumzPSmn09haP2Xvu5abywqCadxT3G+/rZzDw9509OniLmJ
oDF+3qhpmyDPMP2za5OYIG/6+gzjTM5JXeK9ca8kHIx/hqs7X2buMnjT22dw
jir1e8h/3phjW349gyZQydXX9KG/z9B1bGbm+zY+qCQTDh09/du87utDj5/B
dWelqOQJPrANl3rP4dS4bJDfIh/6/ByHZx78Om2bD2yvY8pztHG8dLjscR96
/Rwt9TPXuF3ygSzPnuN46wuXK4T60O/n+Kf23q4LU31gu1z2c/he+lz9jtmH
nsegz4uyeFH2FOd7DIZknAqqVvcUfY/BreUx+xq2O8X5HwPX60cu1Oh/it7H
4KmPpdG/E04xHsRgReesvPsLT9H/GGxZOeP9ii2nGB9i8NJp7bQaR08xH4hB
7GuHOt7+pxgvYlC709/NqgWfYn4Qg9AGvTYtiT/F+BGDpCtn2twuPMV8IQYj
LX6tiz6dYjyJQb2F3r2+Ke/L/CEGD29crVy+ui/jSww8x7qWL93Al/lELPwG
d2tjcfBlvIlFntsF57hffZlfxGJKe6PRv5sv408syjZ/tWtNf1/mG7HIXhg6
vMdwX8ajWBRVnNHz9Xhf5h+x6PQ1fIzvdF/Gp1icH/TBvd98X+YjsRin+/dz
6gpfxivr308OPDh3oy/zk1gMajxsiH6nL+NXLPYHnW47zdWX+Uosyl+O7Bp1
3JfxLBYBb+8saqvxZf4Si2PuK6K2XvBlfIuF/453o57d8GU+E4c30QNLVwn2
ZbyLg/M/TqkDInyZ38ShxV9905bE+jL+xaGC2lzWNc2X+Y71573njj+t9WU8
jMPSX8/GXjb5Mv+Jw6tVAasuv/GFbbhvioO62r5+yldf5kNx2FembdeD36kg
2wdxODf42PhFVVXMj+LwXhvt3beuivEzDusTon/4vpmK+VIcOtU75vektYrx
NA4NbrSZt7GTivlTHHqe3ju6RU8V42s8DhmvzwkdoGI+FY/aO86oJgxXMd7G
I2blnHI541TMr+Jx906x+1QnFeNvPLLH9BkaM1fFfCseHftP/bnrEhXjcTyC
dw3ocGS1ivlXPDY0fTujcLOK8TkeS6ouv9tut4r5WDwOj73da4GrivE6Hvri
CP1JTxXzs3g4Z2iCQnxVjN/x6NpkyJ3ssyrma/Foc+d21osrKsbzeIw986rt
u9sq5m/xuGB8q3n1QMX4noBe2x7310aomM8loNQyp0pPYlSM9wl4c/3hF02K
ivldAn7601J7ZY6K8T8BLt0KJ3fTq5jvJaDmhnNhry0qepCA1Bpd/tK8UzH/
S0BiqQN1Bv+nog8JKN3/0tfccmrmgwmYk3b8h2WV1fQiAR/DRg58U1PN/DAB
oeVjTi9uqKYfCbClic3VzBcTULzv19w+bdX0JAHjn1YOOt5JzfwxAUWzbgcX
dlfTl0TcGdnW1LqfmvlkIm67zu87a4ia3iSiuMWKYFdHNfPLREysPmju9Qlq
+pMIy2jtb1FOauabiQjSD22XMkdNjxLxOH7DyLSFauafifhUY+3x2BVq+pSI
medQ6f46NfPRRJTyiDlzaouaXiUiOb7NQufdauaniciYN2pSv0Nq+pWIWmP6
Lil7VM18NRGbD3+6eOekmp4l4qeWLjXnaNTMX5Pwvurz09/6q+lbEko76p28
rqiZzyahly6qT4tbanqXhMtP1w7zu6dmfpuEsZVebaofqqZ/SWjj2zl9R6Sa
+W4SetgmjpoeJmFdeJ3K3ZPVzH+TYJwcqNuWqYZsTybhUP8WukdaNfPhJCze
MqXSO4OaXiZh449TpzZ5oWZ+nIQHn1sm936rpp9J6Nz93trRn9XMl5OQHd1g
4F9lNPTU+vcDBnWbVF7D/DkZsS+7j/+zsoa+JqPO9g9enX/UMJ9OhuuCrRWr
19PQ22T0Ppuo0jXWML9ORsPur2dccNDQ32R0apo+9J82Gubbydg49cCU+h00
9DgZH8wVjj3qomH+nYxziY4fnXpq6HMyDlSbufNFXw3z8WQo6l49Vv+hodfJ
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
+Y3kg3kYxvxHvMjDWuZHkh/mIZ35k/iRh8XMryRfzENn5l+28O+ch1+Yn8l+
UB6cmL/JejEPj5jfyf6Q9X6Y/8n6Mc+eH8p+UR4aM3+U9WQeRjC/lHwzD9eZ
f4pHeRjO/FTyzzx7/io+5aER81vJR63XY/4rXuUhkPmxTI88jGf+LH7lwYH5
teSreWjL/Fs8y8NM5ueSv2rt+bv4prXn95LPatGP+b94p8UArg8kv9ViM9cP
4p8WZq4vJN/VwpXrD/FQi7+5PpH8V4sFXL+Ij1pc4PpG8mEtGnH9I15qEcr1
keTHWvv6SfzU4jzXV5Iva6Hn+ks81cKJ6zPJn7WowPWb+KpFNtd3kk9r8Zrr
P/FWi85cH0p+bb1frh/FXy0mcn0p+bbWvv4Uj7UYwvWp5N/W58P1q/isRUWu
byUf19rXv+K11r4+lvxciwCun8VvLd5zfS35uharuf4Wz3X29bl4rsMPXL+L
59afc30vnuuwkut/8VyH19wfEM91OMP9A/FcZ99fEM91OMv9B/FcZ9+fEM91
9v0L8VyHztzfEM91aML9D/Fchx7cHxHPdfb9E/Fch7rcXxHPdYjh/ot4rsM9
7s+I5zr7/o14rsNv3N8Rz3UI5v6PeK7DBu4Piec6LOL+kXiugzv3l8RzHUzc
fxLPdVjD/SnxXIcu3L8Sz3X4mftb4rkOY7j/JZ7r7Ptj4rkO/bl/Jp7rUJb7
a+K5Dh+5/yae56M59+fE83y4cP9OPM9HDe7vief5SOP+n3iejzjuD4rn+SjN
/UPxPB+zuL8onufjA/cfxfN8hHJ/UjzPRzD3L8XzfJj/Z38zH2O5/yme58PA
/VHxPB+B3D8Vz/MRxP1V8TwfRu6/iuf59v1Z8dz6+7h/K57n4wH3d8XzfPv+
r3iej/fcHxbP8+37x+J5Pkpxf1k8z7fvP4vn1s/cnxbP81Gd+9fieT42cX9b
PM9HI+5/i+f5eMf9cfE8375/Lp7n2/fXxfMCXOb+u3heAEfuz4vnBWjF/Xvx
vABduL8vnhfY9//F8wIYeD4gnhfAlecH4nkBFvB8QTwvwHqeP4jnBfbzCfG8
AL/x/EI8L0AmzzfE8wLc4/mHeF6A5zwfkfVhAerw/ET2gwrs5yvieQF68PxF
PC+wn8+I5wXozPMb8bzAfr4jnhfYz3/E8wKc5fmQeF5gPz8SzwtwhudL4nkB
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
xd5fLp6/wP/1n/8/Rnf51Q==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxd23VUlGn7B/BdsHV1bV1dW1d01bWbrwrm2gmurt1d2AWigEVLS3eDXYiI
gUE3UgNDDIy+9lq/mYvvXz/Pe857OLozzzzPfV+f731dQ/fVO+av0/npp58q
dX/6Sfv////P16A3qbNWz8WI9U6LtoTv06/7eSX6yc8O+v8d23x7r91G/Nj9
d9yotYH8+50YLH9/Rf9wm/CpxYf2IrlFYa7B6zj++wP4KP/+sf7Byj6DG4Ue
gX64xQAr52T+9yf4fhn64wrnnL+03RRLihdm39uZx9c7hWx5vSL9m9Ob6fQ/
cxpuv1aZFB9T8PUt8EVev0J/TOxjk7uXrfBphO616Z4qvt85QN7vtf71LubV
865fQMqbMYtnNn/L97fGcHn/9/puCd0id2+0wcqmXv2VBz/xemyxSK7ni37e
Z3lDtK6I+ee97Xdenz2v7yd0GlTQq8FJB+gmjN5zK1QHddfryOuth6Vrx2pf
EY7v1WVX1jdA3fU74bNcfyO4OMsf3LP4Wn/z/iao+zwueCOfpxlyXnxcUOrn
iqNHV6RlvWqOus/nxs/3KzrWW9x8QLQ7VJuaBRx/0RJ1n9cDyfJ5W8NotLwg
FJPbjH1t1AZ1n98TQ+Xzt8XMkZYTV5Z5Imr+I787zduj7n54YZncjw5QzdO+
ohcmW/dWKtUdUXd/vPm8OuHsVuWXoDfe8Pg+8Mf2r51Rd7980FHuVxf0P9NO
8xF8UPbijYneb91Qd/98kS73rxuSvCZfffvNF0VXvXKeJHXn/fRDPbmfPbBF
c7c61PPHpJEBAR3sevL++sNd7m8vNMny2Tm+SQAazNUpbruzN+93AJzkfvdB
sPbj/hqIsT/HmN9f/QfvfyDvf1/M0L5cuyAkzbjh0GmLHp9HEO7L8+iHKu3t
7hyM1D/btuxl2Z/PJxhqeT5/Qnv3knuEoE9A4sfc2wP4vEJwTJ7XQOgtuxj/
vm8o/ssv79VN9y8+v1CMk+f3F55oXu23QWGwHuKgGzxkMJ9nGJ/nYGyyqTmC
4eFYtrC2fdNtQ/h8w/l8h0JzcZqPHIHFk/63yiB6KJ93BCrleQ/DQs3i0TxS
WHz1LJ6vM5zPP5LPfzh8NXcvyycSFab/OY5ePoLrIRKhsh5G4t239AOVfaJw
OOP7yY/xI7k+orBc1scoGMoCiML0d2He54aO5nqJgoGsl9Gw7yAfCDMLG37+
FD6G6ycay2X9jEXd5UXDxLGZ+bjh47ieouEq62kchsqfGDzveHvKksTxXF8x
aCfrSx9mcU81KygG2ze105++GlxvMSiX9TYBaZqnr7kncIk/P9zy1ASuv1hk
yvqbgJ7ygrFwulq23nj5RK7HWBTKepyIPRu1D+AKon9tPdRh7CSuzytoIOtz
Eh6876t5wldQmNzWZVxXA67XqzCQ9WqA1nUXiAEfa1znNDLk+r0KF1m/hpCr
e3wVZ81cR734YMj1fA0NZT1PRrS7OiDx72toYtJl5/WqyVzf13BJ1vcU6MgH
vgaPFyaTmiumcL1fxyhZ71Mxv27BYNF534iXJVO5/q/jvaz/afDWftz06+gS
HXDta/k07ocbSJX9MB3/076c0Q3UH39iqcPr6dwfNxAn+2MGJmmXf94NfB0w
0Mn5xwzul5t4Jvvlb9hql++/N9HKPGpn4zYzuX9ucv/MRPEh7QO5iSmTmigU
A2ZxP92CnuynWRgsC/wW7NeN+l//WbO5v27hhOyv2TjpYKBZMrfwtnas66td
c7jfbuOz7Le5SOkhDxgjd1jt+D5rLvffbYyX/TcX3bXVv+Y26rsU//ugbC73
4x1clP04D7u022PnHeTv9+mkf2Ie9+cd1Mj+nIf72qf79g7iGyX7bf99Pvfr
XRjLfp2PlnUbEtdmbvi28M587t+7SJX9uwBy+z7fRazBph5vVizgfr7H/bwA
cnlH7uFuTUYbg/oLub/voUL290LUKR6HjBlh6TPCFnK/x+GU7PdFCEz8W7Oj
4/BlqXpVI6NF3P9x3P+LMFezG1uZxUGvi9vtw/UXsx7EQSn1YDE+afVJiMM2
+xiF75XFrA9xCJP6sASev2k3xH1cvzM812zjEtaL+zgm9WIJpskDvo+mLj3c
O3QxYv24jxVSP4zwOkB7gfexXe/QgDWZRqwn9zFZ6okxnLRX9/Q+yraMO7vG
xpj15T4mSn0xxgTN4preLB6rV2262nHOUtabeEyTerMUFV+0HzgeNY1/jjBv
8Q/rTzwWSv35B9rVolkyOL1Od19A6j+sR/HYLfVoGeTjJsdj4N6djY47LWN9
ioe31KdlkJdr9QAFw6dtarZqOevVA6RLvVoOKUcLHsAx2OrSnD//Zf16gN+l
fv2LuvjwAEtTR9pN++9f1rMH2Cb1bAWkHGQ9wJiwOcs+Pl3B+vYAFVLfVuK4
djt3SMDF3zd9HjBnJetdAuvdSvwhGygBje6u6D/25krWvwTWv5V4KfEiAQ2v
NzX06bOK9TABrlIPV2G/djsUJOBs020G6+1XsT4moFjq4yp01S7nLg/hdN1M
75TuatbLh4iRerkaj7TLb+VD6N2b8+HrntWsnw/RROrnauzQPl6vh5jUNSUo
uWw16+lDKKWerkF72fAPUZTd0PCH0RrW10TmgTW4p728XoloqHqbYPF8Dett
IuvtWmxYr/2TiBgjhz+3Gaxl/U2Es9TftdCGJ02FRUkX1aHQm2tZjxNxTurx
Wmir44HKRLjqf4qYMnQd6/MjNJP6vA7/ygs+Qt61G0ljw9axXj9CU6nX69BA
CtQj+Fr99eJs3/Ws349Yv9dD+zTahD9C9dVl10b4rWc9fwQ/qefrIelO/Qh3
x+mfGddzA+v7Y+aZDfiu3W6DH6Nd54zx7t4bWO8fY6HU+w3w1y7n3Y/x38Lu
eUY9N7L+P8Ynqf8bMbvuA2OJsseKHX4b6cFjerARH7SP4/1jTEvLeVLUdxN9
eII08WETPLQfd+QT3OkwpVNY2CZ68QQNxYtNmCI38Akirm1YkD50M/14ggfi
x2bUCg9PMCxSf/fiW5vpiea/H6j1ZDMcteX9yxMM1UnaP9RwC315ikfiyxbo
ywN5inthzdZuebGF3jxFW/FmK8q15fXYU2RE6478bryV/jxlvt6KuvL3FJta
Rr6uLt9Kj57CUDzaBikvOkk486SlzbB92+hTEv4Qn7ZBtq9BEgbm9e2QXW87
vUqCrXi1HbI9zJOweMp780yH7fQrCWbi13bULb8kNGm6P3dQ3x30LAlvxLMd
yNA+3kbPMFEvvK3i1g769gwfxbedOCpX+Awn5j53Pdh3J717hlHi3U70lgX4
DD1Gd/EM37OT/j3jeWwnnj+TPzjz4kl7m3s76eEz6IqHO7HPTltQnyPq12Sd
7s120cfnuCA+7sLvsqCfw/3HX6v+Nd5FL5+jQLzchYdyvHqO2a6qIdMDdtHP
53gtfu7CNm05TX2O26U6B4rf76Knz/FAPN2NtrJBXuBj9p6//pi8m76+oK+7
cUdbDha/QO0hLPvNYTe9fYFo8XY31snx6wVCnqz7crNsN/19gTTxdw+a1W04
9H1Y/kvjkXvosea/F4/3QJbLby+xeVu8XT3LPfT5JRaJz3sgj2PZS+yM/3Qu
LG8PvX6JO+L1XtQdz15idILlZ91Be+n3S/q9F/JyhS/xYPe+nIZme+l5Mj3f
y/2ejA4vbv15I2svfU+m7/u4/5PRN3PZ2/YD9tH7ZHwW7/exHiTjm5XRgF5m
++h/MgbVnfdZH5LhqArPLcjZxzyQjP6SB0xYL5Lx+r8VXwwHmzAfJPO8YML6
kYyWV7dcNLY0YV5IxhbJCyasJ8l4/3uqY6cSE+aHZJ4397O+JMNpiF3Ls2P3
M0+kIFryxH7WmxTUfxf+I8BhP/NFCvPFftafFAxa3XvV7tf7mTdS8IvkjQOs
RynofPTD8Kq/DzB/pPB8e4D1KQUZhj2OtQg8wDySgv2SRw6wXqVgxo3A0SX1
DjKfpGCq5JODrF8pOJpruXH16oPMKynMKwdZz1JwPPBhE+u4g8wvKTCU/HKQ
9S0Fo3ou67al6yHmmVSskzxziPUuFTdmzAp6e+wQ800qpkq+OcT6l4pGXZ39
9AoPMe+kolbyzmHWw1Q09kTbXyYcZv5JZX/jMGS5H0tF5vMJn9y9DjMPpeKE
5KHDqGsfpGJloNvsfN0jzEepzEdHWD9TETVoQYfH648wL6VCT/LSEdbTVCSu
Wbto1dMjzE+p8JT8dIT1NQ2+hsn1AwceZZ5KQ77kqaOst2kwSHXUc7M7ynyl
+XvJV0dZf9Pg0ux63PjPR5m30nBJ8tYx1uM0JLwdmnRuxTHmrzS0l/x1jPVZ
8/5nmky3TDzGPJaG1ZLHjrFep2Hu47Fjhg48znyWht2Sz46zfqfh9pVHHlaO
x5nX0jBK8tpx1vM0VM0JN7n44zjzWxr7ISdY39OxLeljkeewE8xz6cxzJ1jv
0zHt4eS45E0nmO/S4Sr57gTrfzrM2040XnL5BPNeOhpL3jtBD9LR63ZlyLCM
E8x/6cx/J+hDOnrcwPWNTU8yD6ajkeTBk/RC8/rNDI69nXiS+TCd5+WT9COd
++gk82I6LCQvnqQn6dh0dd7IXyJPMj+mo0Ty40n6koHXzZb3c1OeZJ7MwCXJ
k6b0JgPZN9pmnexqynyZofFImy9N6U8Gut85PP7uElPmzQz0k7xpSo8y8Lzd
xeXzrE2ZPzPYrzOlTxnISZwzcuwTU+bRDBhIHjWlVxmY8vzO08M6ZsynGZp9
o82nZvQrA2375bRvPc6MeTUDJZJXzehZBqYWeHX52cSM+TWT/QEz+paJjPL2
hZMjzZhnM9FI8qwZvcvEiyljjYurzJhvM9Ff8u0p+peJnt+ank/rfYp5NxOx
kndP0cNM5Da2OtR51Snm30z2H06hrj2ZCfXWK91vu51iHs6EQvLwKXqZiT19
LphGZ59iPs7EBcnHp+hnJmaNaOP+o40583Im3CUvm9PTTJx2m7rLZ54583MW
87M5fc1CX+O+P9wvmDNPZyFH8rQ5vdX8/darU9RJ5szXWczX5vQ3C2cz3ky9
1Pg083YWvCVvn6bHWZjjkKvjOPU083cW8/dp+pwFk5Cd+6vNTzOPZ0Elefw0
vc7C9/axfpcSTjOfZzGfn6bfWVDm+p530T3DvJ6FO5LXz9DzbAx8N2nQu0ln
6Hk2Rkp+P0PPs1G45oKVr+kZep6N9pLnz9DzbFTrnbkcEn+Gnmcz35+h59lY
NmXA9sa6FvQ8G58l71vQ82zo3Tjx4Y6BBT3PxgfJ/xb0PBsrTE+OenLKgp5r
Xk/OAxb0PBtvvQYN659oQc+z0VXOBxb0PBvK9mcrSxta0vNsnhcs6XkOoLAz
ejvdkp7nIFnOD5b0PAefG8w4aXzOkp7n4LacJyzpeQ5anQhb0+6lJT3PQT05
X1jS8xxYz7n7Q6+VFetQDqLkvGFFz3OwY9+RRfaLrOh5Dvu7VvQ8ByFvlGsX
OVvR8xwMkfOIFT3PwcyEnwZuK7Ci5znQkfOJFT3PweyaxMi87mfpeQ5Gynnl
LD3PxZWtY2o815+l57l4KueXs/Q8F/sm/VN6O+QsPc9FgpxnztLzXHhs17Mb
9OYsPc9FJznfnKPnuej3xvfrpxHneN7JRZqcd87BWjzPReunz7t2PHqO559c
vJbzzzl6nosVn32+Xnxwjp7nYrOch87R81z8evwPu+VNztPzXEyX89F5ep6L
Dv8YlZ6cd56e5+G0nJfO0/M8WJwfUfPV6Tw9z+P56Tw9z8PSdvGRL4rO0/M8
/CXnqQv0PA827/8b8LHvBXqu+VnOVxfoeR769y9ea7LrAj3Pg5Gcty7Q8zz0
urZ30cybF+h5HucpF+h5Hg46X/lxQPciPc/jeewiPc/DsFSfNV9nXqTneew3
XqTneZi3CiczHS/S83xMkPPaRXqer6nfFkYNiy/S83z2J63peT6MJt7b+6it
NT3Ph6mc56zpeT72N2npMmKsNT3Px2g531nT83w8Oja6c8pKa3qez/OeNT3P
xzSPUV8cT1vT83zOj6zpeT6+bmw+0iLUmp7nw1LOg9b0PB9Fr26+9E21puf5
PB9a0/N8fPwx/qHqkzU9L0C0nBdt6HkBRj+71H5lVxt6XsD+qg09L0C4wePE
75Nt6HkBz5M29LwARutfpj7eakPPC1Ao50sbel6Av4aFjb1rZ0PPCzBTzps2
9LwAI8JW/Vx404aeF6BWzp829LwAu1JUPfuX2NDzAtyT86gNPS9AvudsH+/G
tvS8APflfGpLz19hb6czxycPtqXnr3hetaXnrzBxouP11sa29PwVlsr51Zae
v8K4Vkdm/3LSlp6/glrOs7b0/BW2XBg1cUiQLT1/hVg539rilnj+Ck+vJFmb
ptjyvPuK511btJAF/QrGFsPHf/9sS89fsf9sR89foV0Dkyl+Pezo+Sv0k/Ow
HT1/hfqDzofu/9uOnr9CjJyP7eh5IfR0D+/Yt9eOnhdii5yX7eh5IQ6b4qKH
ux09L+T52Y6eF+JbaG7Tt4l29LyQ52k7el6ICNOZZbtf29HzQlyX87U9PS+E
g65Dpy6/2dPzQoyV87Y9PS9EyKDY8HcG9vS8EGVy/ran54VQNwj2+LDNnp4X
IlHO4/b0vBCbLE2qezrZ0/Mins/tud+L8Ou1jg5H4u3pexHaynndnvu/CMqL
dq4/1djT+yKclvO7A+tBEWpaK75HtHeg/0XQk/O8A+tDEfobNL1nNcmBeaCI
/XwH1osi2P/eON96mwPzQRHP+w6sH0UY4lOwKN7JgXmhCH/VzfdZT4rwNc3i
z64JDswPRXCQfoAD60sRPkc0WRmgdmCeKEI/6Q84st5ornfkmtdLOzkyXxRB
Lf0CR9afIlhusi0YPdWReaMIKukfOLIeFaH9VKc/DPc4Mn9o7qf0ExxZn4qQ
83Lvi4OXHZlHirBV+guOrFdFSNLtm5qb5Mh8UoT/Sb/BkfWrCBUlUUM2fHJk
XilChPQfLrGeFQHbWr3u0vsS80sRnKUfcYn1rQhx3tOb6My/xDxTjCvSn7jE
elcME7MlJ389fon5phi60q+4xPpXjKUtxi2aEXqJeacYZtK/uMR6WIzdUz6a
R+RcYv4pRj/pZ1xifSzGzb6WrSc0dGIeKkZz6W84sV4WY9DVN9++DHNiPipm
v8OJ9bMYObV/TS5d7cS8VIx/pf/hxHpajJjUKZXvrZ2Yn4qRKv0QJ9bXYtxa
NbRq6D0n5qli7JP+iBPrbTE+uH6Y6l7jxHxVjEnSL3Fm/S3GqpPWOkM6OzNv
FWOm9E+cWY+L8b3lz7/9b4Yz81cxjks/xZn1uRhPZ027UHDQmXmsmP0VZ9br
YjwZtn7Fu0Bn5rNiHJV+izPrdzE+Ji49PyLbmXmtmPMjZ9bzYhjX69PBt6EL
81sxxkg/xoX1vQSVqkc/xo10YZ4r4bzJhfW+BCEnJhj+vMGF+a4Ed6Vf48L6
XwL3exfLXju6MO+VsH/jQg9KEBd0pbTpIxfmvxLoSD/HhT6UoAWi9ed/dGEe
LIFK+juu9KIEl46bf3jwhyvzYQmaSr/HlX6UYMaWQU1XGbkyL5bASPo/rpDy
b1KCwTqRR/QsXdkPKkGG9INceV4sgaFhw79/v+nK/lAJTkp/yJXnxxKcGzzc
ZFy1K/tFJVgj/SI3nidLUO/p6O+nO7sxb5awf+RGjzT375e2pV9nuTF/luC6
9JPc6FMJLL4m9vI47sY8WoK+0l9yo1clsHWc82BzlBvzaQmeS7/JjX6V4EVe
+N3VpW7MqyX8foEbPSvBhGeKdqfbujO/lsJH+lHu9K0UqRveJKVPdWeeLWV/
yp3elcI/PL1g9iF35ttSjJV+lTv90/y954WZ70LdmXdLkSn9K3d6WIqs8V07
PCx0Z/4thZf0s9zpYymGnD494X4rD+bhUva3POhlKZ4cTHhYMdmD+bgU96Xf
5UE/S3G6Q07A2IMezMulaCv9Lw96WooDqxPKb4R6MD9r3l/6YR70tRSXl5w2
XVPkwTxdilXSH/Ogt6V497HL4VFtLjNfl2KO9Msu099S7DO4kDxq2mXm7VJ+
X+MyPS7FgDHppmuPXGb+LsVN6addps+laJ//2uZW5GXm8VKMk/7aZXpdioF6
im/jyy4zn5eiUvptl+l3KW78uqT0fTNP5vVSfj/Ek54rYLL6D83/POm5gv04
T3quQFLjNdcUEz3puYL9OU96rsCtBk0CjizzpOcKzJB+nSc9V2CccefJ/fZ7
0nMF+3ee9FyBf352samx8aTnCpySfp4nPVegzQ/Tc4mhnvRcgYbS3/Ok5wqs
mZ81/MojT3quQG/p93nScwWmfHE8f6PEk54rkCX9P096rsCzz/ft0r550nMF
uks/0IueK1A4y2iabkcveq7gvNiLnitg+9E4ZNowL3qugKn0C73ouQL5HxJv
+8zxoucK9g+96LkCd/6+fKTNFi96rsB02bhe9FyBkR9KqlxOe9FzBaykv+hF
zzX//oNNw5HeXvRcgS3Sb/Si5wq8/Ts0teKOFz1XsP/oRc/LMObj4JmROV70
vAxvpR/pRc/L0OpTj73n33vR8zL2J73peRnMZx+fcaKlNz0vQ470K73peRls
/5vy0mKANz0v4/eJvOl5GUZ+PagTMN2bnpehm/Qzvel5GUwWdFDkrvOm52UY
KP1Nb3pehik/9djby9SbnpfhqfQ7vel5Ga7qXIo28/Cm52WoL/1Pb3pehttL
91/+dNObnpexH+pNz8uwrNGDMWZZ3vS8jP1Rb3peBsemh071fOdNz8swTfql
PvS8DGvWuh3J+dWHnpfx+1I+9LwMia369fQb4EPPNfdb+qk+9LwMj9r1PHB6
hg89L2N/1Yeel2HdzjOHj27woeea95d+qw89L4ND1yUDrE750PNyGEr/1Yee
l2NpL9vzoV4+9LwcOdKP9aHn5bh3bJSb4q4PPS9HfenP+tDzclwZOMN4SL4P
PS/Hc+nX+tDzcswY9ijB4bMPPS/n9xN86Xk59l2MeNW8vS89L0dv6ef60vNy
jJmgG+A+zJeea95P+ru+9LwcjlPif58035fnw3LkS7/Xl/2gclh5qyZ93eFL
z8vZ//Wl5+VovdC03bPzvvS8HG+lH+xLz8sx4h8zp6gQX3pejjLpD/vS83J8
uKZ+HPrEl56XY4f0i33peTlmbn4UcEfpS8/L+f0KX3quef3dTYYr6vvRc839
kn6yHz3X3P+X13d26+VHz8vhJv1lP3pejiLT1KW7J/nRc83nlX6zHz1XwuHs
krc5K/3ouZL9Zz96rkRF5dQxS4770XMl+kg/2o+eK/Hc3WdQlbsfPVeiSPrT
fvRciTkBm9Nsb/vRcyX6Sb/aj54rsaGBe+95eX70XMnv8/nRcyV+uzWmT+//
/Oi5EhbSz/an50qsfWiQ0byjPz1Xwkv62/70XInJva8PaT7Kn54rMVf63f70
XIm43Ev6PZf403Ml7KT/7U/PlUgtK/k0y8SfniuxV/rh/vRciaNTnFddcPCn
50p+X8Wfnivx4OvNA4pYf3quxDfpl/vTcyUuN5qmPzfdn54r4S/9c396rkSL
zROiU97603MlyqWfHkDPlejW3Td9Y+sAeq5EvPTXA+i55ucBe/zaDg2g5xUY
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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1:eJw12wdUVNcWBmCDxh4Tuz6NxpaIPXYs/CoWNPaKLfZeoqLYCyBiQ5pUAem9
Y+8FEaz0jjAwMJQZ0NhL9M1sfl1Z6623lMude8/Z33/2hi4r/5m9Rq9OnToV
devU0f3v9z+ZUyLSp0RcwJeQV6nTVs5E/ODeP17y/f7/l2PDCbOqbq4X8OnQ
xhs7HdfjprGt9Vmb73+/DQ937MppYHkB+1tFTlLs2wmLBvqKg3u+//s9eFk/
1OvdlgvYW/H7nw3DD6D59g/Nd6z6/vVHoJrQauRLkwsYVTjDxmWrBbZY/dd+
+/Tv1zuKwP4XIt8YXcC1yU31elsfg9v44R/3GXy//nGMjD/xsW7/CxhxIdHs
1vmTsIsMjrLt/v37nYZzXacOnf53AVc6WVXNunIG0+9PHx318/fvb4dbmoxW
Rj9egEf8b9E71tujwKKXb86nON6PA2IsppbueBmHvI/yDTFcM/JFs7I43t9Z
7Lj34XREXhw69C/oXt/cCYv1LF9NT4nj/Trja3huk9cJcVi0eqTuiphz71ue
24043r8rFoz7d4VRbBzc3eQPfukb61kTFMfP444DFrD18oxDzrP3c0oCzsF1
nPvQmY5x/Hwe2LzlnmO9E3FoX29+M+2X4qXelcDrh+L4eb3Qo+7+f3btjIOJ
gVwQLbY2qf5zYxw/vzdijTZ0fbUsDlOHnRi7vNQbPx492zRuXhyfhw8a9bcJ
3/1XHNSzdFf0we3xc/Qw9vvz8UWvB2U/NRoWh1ObVZ9DXvliYvSk5xl9vj8v
P7SrbzYxoGscelu30X4EP3gmbDfd3e778/NH6qsR86c2i8NjnwmXXv/nj+vW
KdXd6n1/ngFYcHzI6K8fY7FJ+7Ta1QtEwOu1Y/NqYvl8AxGetObztdJYNM7y
2za6cRCWNx64yTMvls87CIkXH9tZpMQiVPdxfwlG8eOBmzc+jOXzD8aFqev+
m3szFlN0l2sTgsHDN4wfFxfL9xGCTWeGjx0YEotK3ePuGIpZMzJedz8fy/cT
ipp9WPI/p1jonl5y1zAMb757X4tTsXxfYUCLA9N/Mo+F/hLbe297huPVwenZ
jXfH8v2FY/Hc6rZNtsQiSXu1//WPgKnT4p+arYrl+4zA2LHOV1oujMUGe80B
DInEnQVe7TvOiOX7jcTrbNMBf0yIhfbmtB85Cnnxbf4bPDKW7zsKZh2sD0/4
MxZztYtH+0pxPz/+sskfsXz/0bjTMDlg66+x8Nc+vSy/aOw8HzzZumUs10M0
8r2n+/k2isWb/9L3VPweg/dN78Xe+RbD9RGDeyV6exRvYzBeFkAM0KP563rq
GK6XGGxPUXfrXRyDs+3kA2F+uVPjudkxXD+xqN7QNOjwsxjU3l4sDObP/BgR
H8P1FIthESt+KLwWg0HyJw5VW8fcbhETw/UVhynn1AMnB8XA8s4j7QqKw9qB
a5dYeMZwvcVhwOCIkbccY5CmffvaZ4IQ77vJX07EcP1dQMFuvw6GR2LQTS54
AXeuzu5oYRbD9XgBC9c+T03cHAPT9boXcBHeB9ujxaoYrs+L8Pg2YMXfC2Nw
/21P7Ru+iBnq1gYRM2K4Xi8h2igx4euEGLSsvUEk/mjceM6oGK7fS7Ad6FQ3
dGAM5O4SL6Hxo6jYuvoxXM+XYfDEpe3yzjHQVYWEvy7jV4NpA2+3juH6vozY
X5L1ujSNgZ584Mv4NPu3E1Z6MVzvV/Dm2+gH6g/RmF27YODbVv/y/Jporv8r
qO+u+Pu+9j376j5u+hX8ar3uxsD8aO6Hq1C8uPbcPzUa/+ouZ3IVS3zyXNsn
RXN/XIXNs6S29rejMU63/POuYv1aq6lNLkVzv1zDf+ubDTseHg0H3fL9+xrG
Z67OaqBdZ7X75xpGRx7ve9ItGop9uhdyDeUv9xr8bBfN/XQdU72Gf3Y+Fo0/
ZYFfx9+X4nd0ORjN/XUdXQw6eUeaRsPcyUi7ZK7D/fcJloYbo7nfbiDxkEHH
lOXRSOkqLxgBYz9vXLsgmvvvBgz+OfnP12nR6KKr/pobONhApe82Ppr78SZ2
N27uPnRkNLbrtse2m+i2p+GdzD+juT9vwmLm03N7e0bjru7tvr4JB8dlfTt3
juZ+vYX5Y2/vfNg6Gs1rNySSF6q372gazf17C+/zy7r/Vjca8vg+3kKY09IO
Pq+juJ9vI2nicZMGiijI7R24jVlPp/1g+iyK+/s2jPQjWyuvR6FW8ztwWhSi
/S+K+/0OZq+AeaZzFIIT/tLu6DvYOnpb9oKjUdz/d/CyeuS5F9ujMFO7G1tY
3kHpLt+kjcuiWA/uoF+q36ovU6PwQadPvPbf1x2zwXFEFOvDHTRvsju3f88o
eP9PtyHuwlZlfDmldRTrxV3scbv4bU/dKBjLC76LxN9uxvV4Fcn6cReHDy5L
y3oRiZdBuhu8C/coj79tn0SyntzFr5d3zpt6LRKuurt7dBc/nVVdbhYcyfpy
F0smvrXKdIrEGO3imtz0Hpo+87ztZxnJenMPfXsrVpttj0T5Z90HvofQpbd3
TV8WyfpzD/Zrhv/be1okdKtFu2RQPG5qbrORkaxH92D39lPf9z0jIR83+R5i
D47XKNtEsj7dQ5+8nu2y60VCLtfiPlpoby753wjWq/tY2uZe9LOiCEg5mnMf
zd6YdUp9FsH6dR+9ghLe596IQG18uI+g/jGjKkIjWM/uw9lmqOaLawSkHGTd
R86d+Y3aWEewvt3H0aTm9oN3ReCwbju3i0dg0LqjJqsiWO/i0X6xSYn5rAj8
IRsoHl9KSiKiEcH6F4/x4xorlX0j8FziRTze7nps1aljBOthPJod/sNxaeMI
7NZth4J4nFraqanvh3DWx3isbR79sqosHJ11y7nTA8S6548ZmRHOevkAKz76
fbG9H46HuuW3/AG29a3fvTImnPXzAV4NrXt5snc4/tG9Xp8HeNj63MXIM+Gs
pw/Q7NHTzu0PhqOtbPgHuD7n3Nvjm8JZXxOQFlt32NeF4bitu73uCTBW1Vfu
MQ5nvU1A/1f+Xz4MDce6tbo/CdieXHDkUI9w1t8EtLaK2daoVTiaSe5KQM+f
f3viphfOepwAn636jv1fhUFXHfdUJGCv39MHjwrDWJ8f4mZE09WbnoXhb7ng
Q2ywKdvS/GYY6/VD7Bm3uORGWBjqS4F6iJonG+O3uIexfj/E0z6tm3c/EQbd
22gV+RA/rVyUVLg7jPX8IS5sHqHxXhsGSXc1DxE/9eKBdfPCWN8TMUzv8e5B
48PwVbfd/kxEU5v9L+oNCmO9T8Q8TUJ0XpcwBOqW845EvO8aUX35lzDW/0TU
69fP1e1bKKbXfmCYNpsScaQ6lB4kYmp8nX5bCkLxTvc63ibi2IzZ/1v2JJQ+
JGFQtOGO+ddD4aX7uMOSYFD2YMic0FB6kYTIV6rV89xCMVEeYBIOpvp/W3I8
lH4k4f7xLz9u3B2KauEhCcta1ew+sDaUniRh864D887OC4Wzrrx/TkJumL9X
zPhQ+vII0ZfXzUkfFApDeSGPoHF9YPqlayi9eQTrGbe+6bcIRZmuvB56BMe8
We+X/BBKfx7hx9FHFjm9DEFt+XuELNPJ+mmFIfToEdociVjV5nkIpLzoPcaF
FeGNlt0KoU+PcbHdxA4RESGQ7Wv0GN0D9rnW8QyhV4/xtv4U84WnQyDbw+ox
+hteyLi8P4R+PcazKVedOmwKQe3ye4y0PgvvHl0UQs8eY4zS0eT15BBk6F5v
wydotn3D4nUGIfTtCSak5SQV9QzBQbnDJyhuXOq3rF0IvXsCZdtTFSUNQtBD
FuATzP702H3L+2D69wTdYoMufykLxtMn8gfz0GmMfWYwPXyCap/+g3snBGOX
o66gPsW/OXmOjy4G08enMFF1XfZPQDB+lQX9FPqP6jm3dwqml9q/tzAfnnQ0
GA/kePUU7392m3hoZzD9fIp3O/66M3x1MLboymnqUywNcw34MCeYnj5Fr6tH
3t00CkZr2SDPsNCjbtzxQcH09Rneze2SZ9ItGDd15WD+M7wtztnar2UwvX2G
xRP7bm1UNxhr5Pj1DD0Od8ip+DeI/mqvZ+Mf9bw4CE1rNxyqtiW+upYaRI+f
oUzf+nzYvSDIcvnfc0y9UnTFJzaIPj9Hu44Zoz19gyCvY8lzTJy3up+XQxC9
fo6CVWdO+lsEofZ49hy5k+bMjt4RRL+fw+CHOKu7K4Mglyt8jq+2Ed2zZwfR
82T0fzNO+18Q93sy4vuaBrQeFETfk3F7lKH1qG5B3P/J6NLFP319yyB6n4zK
XH8b97pBrAfJaL5xTGzK60D6nwyfZ2bjmikDWR+Sca6hseHM9EDmgWR8bHsh
wCU+kPUiGXe+XNujvBDIfJCMmktLLg8NCGT9SMbhiW4rzjgFMi8kY2fYtt1V
VoGsJ8lILi3+MM0skPkhGU5va0ovrg1kfdFeP9fFsNuCQOaJFMx0ytVznhTI
epOC8T2uDGw2PJD5IgXnTw54dqpnIOtPClY9MMpo1j6QeSMFJzJeTXJpFMh6
lII210f83uNTAPNHCn4y67TtSmUA61MK1tf37DErL4B5JAX6my9NrHkcwHql
vZ+gjWkONwKYT1KQc/nq45ERAaxfKXju6de/0jOAeSUFvy/s+c3zTADrWQpU
FZNGLDgcwPySgkYz9RSttwWwvqXA/tSC1znLA5hnUmHtMWm736wA1rtUFFqk
LtoxLoD5JhUehh+iJg4KYP1Lxa3nV7b91j2AeScVxkNbeX5rFcB6mIrhOxoP
Uf4YwPyTClvLc8OfvfOHLPdDqZix8WHQTZU/81Aqtv5+xiI22x+17YNUfLhc
kxie5M98lIqiTup94df8WT9TYbDY0jUmzJ95KRWvN1/scsPDn/U0Fa3mWrR5
YuPP/JQKl18qzRSH/Flf03DSVz3uyz/+zFNpyGl0cl/HFf6st2lwmXjv13Gz
/Zmv0hBj4tRni5E/628aRo2pG+Q52J95Kw2d/2tik9bDn/U4Dbtso140a+vP
/JWGnu8152Y09Gd9ToPx4IfxTh/9mMfS8HTiyIWKSj/W6zRc6jdl4cB8P+az
NDRQv44//tSP9TsNdw4N91De8mNe095/WdvCCdF+rOdpWNLdwSbcx4/5LQ3j
hgUFtXP0Y31Ph33nBX1PHvVjnkvH+AKfTj+Y+bHep2PlNuv9B9f5Md+lQ5nd
YPw3Ez/W/3Q8adNtz7Epfsx76WjVK6dty1F+9CAdD1v06hbQ14/5Lx2K5Nbu
ozr70Qft9Vd7HMj5xY95MB0Tnt58tF/Pj15o76/JvqPd3vgyH2rvr3NKSHKp
L/1Ix9KG90dYZvkyL6YjO2HGsJFJvvQkHTcW7T7/4Zov82M66scbmF4P96Uv
Gbik5xJr6eXLPJmBR21sl86y86U3GTCu03Vndwtf5ssM9Lw9490XU1/6k4Fd
c9opc9f4Mm9moPPN/aNvLfClRxkY8mWvXtBkX+bPDET+0nKQ00hf+pQBp08T
nx/v68s8moHsq62zzDv70qsMHJt+eMqR5r7MpxlwvmKpf7SuL/3KQPMPXXfa
vPVhXs1ATdOlvTxUPvQsA4Pf/zk1OseH+TUTRZd8cpIe+9C3TLz8Kzy1/KYP
82wmNlyaNeynaB96lwnjd/YNhvn6MN9m4lSTLUZrz/rQv0wMf1dc6X7Mh3k3
E0ZS13zoYSZu/HX+QKtNPsy/mXC7VLp24VIf1LYnM5HzLuGG3wwf5uFMWDQ1
OvR6rA+9zITD+4VhxoN9mI8z0ehKk/F+v/vQz0woppkY123vw7ycie5XcWV9
Ex96momkj3cd0/7zZn7OQvbPhblGL73paxamfHa2uVrszTydhd9uVIQNzvCm
t1lYPjtryMWH3szXWWh0a1nvkde86W8WWn6zOJ0Q7s28nYVjrccuXHDemx5n
YdEP7vYae2/m7yy43rMZcuKoN33OwpiFHSf02u3NPK69nwcT7iRv8KbXWbha
v3HQgSXezOdZsPl1w8e+M7zpdxYeNVp1WTnWm3k9C1sfvy/yHuxNz7NhtvIP
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
Zst6X4yBMi+zZb4rRmOZj9my/hfDTOZhtsx7xZx/naEHxegk864zzH/FMJH5
1hn6UIw+Ms86wzxYDFuZX52hF8VwkHnVGebDYvSU+dQZ+lHMeZQN82Ixusn8
yQZS/s2KcUrmTTbsBxXjjMyXbHheLEZnmSfZsD+kfR4yP7Lh+VH7eWVeZMN+
UTE2ynzoNM+TxZwHnWbeLEaNzH9O06NiNJd5z2nmz2Iky3znNH0qRi+Z55xm
Hi1Ge5nfnKZXxfCWec0p5tNi3Jf5zCn6VYy9Mo85xbxajASZv5yiZ8WIk3nL
KebXEgyS+cop+laCmTJPOcU8W8L5yUl6V4IpMi85yXxbggEyHzlJ/0oQJvOQ
k8y7Jbgr84+T9LAEW2XecZL5twSRMt84SR9LcEbmGSeZh7XfX+YXJ+hlCVrK
vOIE83EJLst84gT9LMEHmUecYF4uwXOZP5ygpyUwlHnDCebnEhjJfOEEfS1B
mcwTTjBPl6CjzA+O09sSvJR5wXHm6xIskvnAcfpbgsUyDzjOvF2CL9L/P06P
S9jvP878XcL+/nH6XIIl0s8/zjxegrnSv7em1yWolH69NfN5CdpLf96afpeg
SPrx1szrJRgm/Xdreq5EP+m3W9NzJW5Kf92anitRJv10a3quRJD0z4/RcyU+
S7/8GD1Xokr648fouRK7pB9+jJ4r4SL972P0XIkZ0u8+Rs+V8JH+9jF6rsQp
6Wcfo+dKNJP+tRU9V7JfbUXPlciV/rQVPVeip/Sjrei5kv1nK3quxHHpN1vR
cyW8pL9sRc+VmCT9ZCt6rmT/+Cg9V2Kb9IuP0nMlSqU/fJSeK9kPPkrPlXCT
/u9Req5ElvR7j9JzJS5If/coPVeii/Rzj9JzJXpJ//YoPVciUfq1lvRcifrS
n7Wk50r2Yy3puZL9V0t6XooJ0m+1pOelUEh/1ZKel6KN9FMt6XkpCqV/aknP
SzFW+qWW9LwUY6Q/akHPS5Eh/VALel7K/qcFPS9FkvQ7Leh5KXpJf9OCnpey
n2lBz0sRI/1LC3peinTpV1rQ81L2Jy3oeSn7keb0vJT9R3N6XoqN0m80p+el
sJH+ojk9L4WxXMecnmuvL/1Dc3peCnPpF5rTc+3nk/6gOT3X3r/0A83pufZ5
SP/vCD3X/r30+47Q81I0lP7eEXpeCgvp5x2h56Vwk/7dEXpeiknSrztCz0vZ
nztCz0vZjztCz8uglP7bEXpeBrX02w7T8zIMlf7aYXpehovSTztMz8uwSfpn
h+l5GYylX3aYnpdhmfTHDtHzMgRKP+wQPS9De+l/HaLnZbgl/a5D9LwMrtLf
OkTPy+Ap/ayD9LwMmdK/OkjPyzBM+lUHeT4sY3/qIPtBZTgv/aiD9LwMAdJ/
OkDPy5Ak/aYD9LwMfaW/dICel+Gy9JMO0PMymEr/6AA9L8Ma6RcdoOdlsJb+
0H56rr1f6Qftp+dl7P/sp+dlaCz9nv30vAyvpL+zn56XoY70c/bR8zL2b/bR
8zL2a/bR8zIsl/7MPnquwjDpx+yj5ypA+i976bmK/Za99FzF/speeq7CPumn
7KXnKkyW/sleeq7CJOmX7KXnKuyU/sgeeq7CE+mH7KHnKvwt/Y899FyFDtLv
2EPPVfhJ+ht76LkKfaWfsZueq3BU+he76bkKdaRfsZueqxAt/Ynd9FwFD+lH
7KbnKoRL/2E3PVex32BGz1XYLP0FM3quQgvpJ5jRcxXKpH9gRs9VeC39AjN6
rkIv6Q+Y0XMVnKQfsIueqzBYzv+76LkKX+W8v4ueq/Bezve76LkKPeU8v4ue
q2Al5/dd9FyFtnJe30nPy5El5/Od9LwcCXIe30nPy1Eh5++d9LwcBnLe3knP
y3FNztc76Xk5TOU8bUrPyzFXzs+m9Lyc52VTel7On682pefl0JfzsCk9L0ea
nH9N6Xk5QuW8u4Oel/N8u4Oel0Mt59kd9Fz7/eX8uoOel+ONnFd30PNy3Jfz
6Q56Xo67ch7dTs/LoZHz53Z6Xo6/5Ly5nZ6XI0/Ol9vpeTm85Dy5nZ6X47Sc
H7fT83KtR7rz4nZ6Xo4f5Xy4jZ6Xw0rOg9voeTnPf9voeTl/nnMbPS/HMDnf
baPn5Tgo57lt9LwcH+T8to2elwNyXvuHnlfwfPYPPa9AQzmP/UPPK3BIzl9b
6XkF5sp5ays9r4CdnK+20vMK/rzfVnpewfPTFnpeAWs5L22h5xWYKOejLfS8
AuvkPLSZnlegUs4/m+l5BZ7KeWczPa9ACznfbKbnFbgh55lN9LwCSXJ+2UTP
KzBYziub6HkFvvXVnU820vMK9JDzyEZ6rr2enD820vMKRMl5YyM91379KN35
YgM9r+B5YgM9196vnB820HPt55XzwgZ6XsHzwXp6XoH5ch5YT88r8K/k//X0
vALvJe+vp+cVmCH5fh09r0BLyfPr6HkFhkp+X0fPK5nX19HzSv58y1p6XgmV
5PG19LwS9pK/19LzSnhI3l5LzyvRWPL1GnpeiXTJ02voeSXz8xp6Xglnyctr
6HklbCQfr6bnlSiUPLyanlfCQfLvanpeiQjJu6vpeSV/PmE1Pa9EPcmzq+h5
JcZKfl3F/m8lCiSvruK8pxJ5kk9XsR9ciVGSR1dy/lOJOpI/V9LzSvSRvLmS
nlfiouTLlfS8Eq6SJ1fS80ooJT+uoOeVOCN5cQU9r4SL5MMV9LwSDSQPrqDn
lZz/Lqfn2r+XvLecnlfCU/LdcnqufV6S55bT8yqoJL8tp+dVnIcuo+dV2Cb5
bBk9r8IqyWN/0/MqdJX89Tc9r4KL5K2/6XkVciRfLaXnVciXPLWUnlfBR/LT
Enpehd6Sl5bQ8yrslny0hJ5XwUry0GJ6XoVFkn8W0/MqqCXvLKbnVRgr+WYR
Pa/Caskzi+h5FYwkvyyk59rnIXllIT2vwnTJJwvpeRV2SB4xoedVnL+Y0PMq
NJS8YULPq3BE8sUCel6Fa5InFtDzKkRJflhAz6vwj+SF+fS8ClWSD+bT8yr0
lTwwn55XYZD4P4+eV+GTeD+PnlexPz+PnqtR+/tqc+m5GqXi91x6rsYd8Xou
PVdjvvg8h56r6fEceq7m7x/Noedqejubnmu/XnydTc/VuCeezqbnav7+yix6
rubvk8yi52r+fscseq5GPfFwJj1XY5T4N5Oeq+ndTHquxifxbSY9V9OzGfRc
DXPxazo9V+OMeDWdnqvRU3yaRs/VMBaPptFzNdTiz1R6rsbP4s1Ueq6mL3/R
czX0pN81hZ5rn5f4MYWeq1FX+lGT6bn268WHyfRcjd/EA2N6rsZ7qf/G9FyN
2VLvJ9FzNQZIfZ9EzzUIkHo+kZ5r2D+ZSM81aCj1egI917A+T6DnGpyWejye
nmvgLPV3PD3X4Hept+PpuQaGUl+N6LmGPy9lRM81+EHq5zh6rkGQ1Mtx9FyD
F1Ifx9JzDRykHo6l5xokS/0bQ881cJJ6N4aea1Ao9W0MPddgtdQz0HMNmkn9
MqTnGjyTejWanmtwTurTKHquwUapR6PouQaTpP6MpOcajJZ6M4KeazBC6osB
PddgrNQTA3quwQypH8PpuQZmUi+G0XMN/KQ+DKPnGuRJPRhKzzXoJft/CD3X
wEL2+xB6Xo0c2d+D6Xk1psp+HkTPq/FI9u8gel6NmbJfB9Lzaqhkf/5Jz6th
KfvxT3pejYGy/wbQ82qoZb8NoOfVWCv7qx89r0YL2U996Xk1MmT/9KHn1YiS
/dKbnlcjQvZHL3pejWuyH/TpeTXKZP33pOfV6CHr/Q96Xo1jsr5/p+fV+DxD
t5570PNqWMv67U7Pq9FX1ms3znur8e6+bn12hVI8r8YTWY9d6Hk18mT9/UbP
q6GR9fYbPa+GvqyvTvS8GhdlPXWk59VYKeunAz2vxnRZL+3peTW2yvpoR8+r
cV3WQ1t6Xo2R8v5b0/MavJL33Yqe1+CFvN+W9LwGr+V9NqfnNZgo7+8Xel6D
0/K+mtHzGnyR99OUntfgmbyPxvS8BvVNdc+/IT2vga887/r0vAYB8nzr0fMa
NJX9rkfPa1Akz68OPa/BAHleXw1rPa/Bcnk+nw1rPa/BenkeHwxrPa/h539r
WOt5DXLl8742rPW8BuPk8700rPW8Bu/k86gNaz2vgZ7cf7lhrec12vqju1+l
Ya3n3++vyLDW8xqskfvJM6z1vAbD5PtnGNZ6XoMx8v2SDWs9r8FXWZ+JhrWe
10Ah17tjWOt5DSbI1180rPW8BnXkfoINa2+vBoa1833DWs9rMKT2vG9Y6/lL
fP899P8DibCxkw==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.5}}, Frame -> {{True, False}, {True, False}},
      FrameLabel -> {
       FormBox["\"Frequency of free-living mutant (M)\"", TraditionalForm], 
       FormBox["\"Frequency of intermediate hosts\"", TraditionalForm]}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.45769230769230773`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(I\\), \\(w\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(I\\), \\(m\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(I\\), \\(mw\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(I\\), \\(mm\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(I\\), \\(ww\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.837767680816478*^9, 3.837767733667782*^9, 3.837767873717676*^9, {
   3.837767906817421*^9, 3.8377679323489428`*^9}, {3.8377679764205303`*^9, 
   3.8377680186194677`*^9}, 3.8377680605412197`*^9, {3.83776813095359*^9, 
   3.837768136707369*^9}, 3.837769005089463*^9, {3.837770815345251*^9, 
   3.8377708200755253`*^9}, 3.840786253568069*^9, 3.840786327459342*^9, 
   3.840786385556616*^9, 3.840786491859586*^9, 3.840786542422452*^9, 
   3.8407865958002033`*^9, 3.840797493708046*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"94f5b0c1-f36e-44e3-9181-55f9113ce672"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", "DotDashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", 
   " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.15"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Frame", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Frequency of free-living mutant (M)\>\"", ",", " ", 
      "\"\<Frequency of definitive hosts\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<DHost_mutantAndResident.png\>\"", ",", " ", "%", ",", " ", 
     RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.837768501505848*^9, 3.8377686056898823`*^9}, {
  3.837768982817734*^9, 3.8377689942818623`*^9}, {3.837769192342967*^9, 
  3.837769199788206*^9}, {3.837770832388818*^9, 3.837770877704344*^9}, {
  3.840786651839323*^9, 3.84078680862788*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"d00948ae-d2ea-4270-bf76-99db67bd8981"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.922526, 0.385626, 0.209179]], 
         LineBox[CompressedData["
1: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
HouoN/+bNd5XSc9jsfG/Wxt+c1PS81j87jfquP6mkp7Hwq56yNUNtkp6Xnq9
tTOVbS2U9DwWYUHJQXGnlfQ8Fmvbr0q+eFRJz2NR8VjJ21H7lPQ8FjdTd1X7
uk1Jz2PRd0i5Nqr1Snoei5BrZv1Xr1DS81is/lR7couFSnoeh99mXVkROVNJ
z+NwTdN6/5nJSnoeh7/reloOHaOk53F4vulvj/dDlfQ8Diufm+54D1DS8zh8
6zIieunfSnoehytmTwsbdVXS8zj0zJ5W4UVbJT2Pw7MRiY1PNFPS8zgsdVje
858/lfQ8Dl+/F/77qoaSnsfh0vwdC9x+V9LzOHQzfdu24IeCnschsOHJM/U+
Kuh5HBbuqOkQ/FJBz+PwMdxGfyhPQc/jYdGzZUifdAU9j0fHC26ZBfEKeh6P
hwU9vjhEKOh5PBaMNdSZ/UxBz+PxwXVop5qBCnoejwsVg4c8vKWg5/HotPS/
GXt1Cp534nH3Tty6nn4KmIvn8ZjTfOnRbDcFzz/xeL033/a6vYKex+Nc7Fa/
qVcU9DweHfp+CaxiqaDn8fC3OpZ4+4yCnsdj5qtqb7YfU9DzeJRMsv6j634F
PU+AmXezVmnbFfQ8AW2quvS9vEFBzxMQsKrbxIkrFfQ8ATMDtcsqLFLQ8wQU
tRmy1zhLQc8TcPLwI/NNUxT0PAHNkye5tR+roOcJ0P8TcythmIKeJ2DSlUWR
FgMV9DwBee9z8kf3VtDzBBydvvm3710V9DwBTVQfG2raKeh5AjS1jnRf21xB
z0uvt+GPUa0aKOh5AnKeWMyLrqmg5wk42KnJ1nOVFfQ8EY1POpoNL6eg54lY
HDRjyKtXfvQ8EZeOrly3IMOPniciePAu2+BIP3qeiI8fTwX2eeRHzxPRRWP7
2kHvR88TMX+TR8uaHn70PBEWXUwT9l71o+eJeJT1ZE/2WT96nog39gmuUw/4
0fNEdJhfGHF7ox89T8T0ht/KdV3sR88TcSq8RvfL//nR80SYzreYV2GEHz1P
RMmYHmab/udHzxPRsuJQbUJ7P3qehCl3pqSPbuhHz5NwfO+SWpoqfvQ8CcY+
Wwe1+uxLz5OQ/fLomnMFvvQ8Cc28rWw+JvrS8ySMXuX8YHmILz1PwuE22peh
d3zpeRL8kgKbD1b60vMkZNhGj/Nw9KXnSag7PWfXn9a+9DwJY2p9dD5ywpee
J2HvkyrhRTt96XkSPE40/jFntS89T0Lc0C5/PZrjS8+TUOvrwDl/j/el58kY
pB9/0m6QLz1Pxpat89VVu/vS82S4dduQurOlLz1PRlTugRoZtX3peTIqO18Y
OLm8Lz0vvd6im6v83/jQ82RsaKKw7pjlQ8+TYRd1955VtA/8xfNkhJuHFf8I
8uF5NxmVJqQ3XW/0QS1Z0MnoVfnNmFhPH3qejKX3K+wced2HnifjyoH6Torz
PvQ8GU/7tw9tdsiHnifj65s+38w2+9DzZHT3+7fLuyU+9DwFS9fOmrVkmg89
T4F1+9XHn4/0oecpeJK6Wzmgrw89T8HHa6eTXTr60PMUdJ51tVrdxj70PAVz
6nr1P1jVh56n4Oxz/xX5X7zpeQpumT2znFnkTc9T8HJE0p37yd70PAXtfhQV
dg/1pucpmG763vjaPW96noLTO2qNrqz2pucp0PdstX2bszc9T0FBQU+HlEve
9DwFTd2GhYw/5U3PU0udLJufe3O/p3Je7k3fU6GQ+bg3938qMmUe7k3vUzn/
9mY9SMUEmXd70/9U7Jb5tjfrQ+n1ZJ7tzTyQijSZX3uzXqSilsyrvZgPUjFc
5tNerB+pnEd7MS+kwk3mz16sJ6mcN3sxP6SiusyXvVhfUjFI5slezBOp2CDz
Yy/Wm1TOi72YL1IRIfNhL9afVFSRebAX80Yq+sj814v1KBXrZd7rxfyRissy
3/VifUrFM5nnejGPpOKHzG+9WK9S0V3mtV7MJ6lYKvNZT9av0uvJPNaTeSUV
j2X+6sl6loqPMm/1ZH5JRReZr3qyvqViscxTPZln0mAp81NP1rs03JV5qSfz
TRreynzUk/UvjfNQT+adNMyQ+acn62EaTsq805P5Jw23ZL7pyfqYhlcyz/Rk
HkpDU5lferJepmGqzCs9mY/ScFzmk56sn2lQyjzSk3kpDVkyf/RgPU1DI5k3
ejA/pWGCzBc9WF/TsE/miR7MU2lQyPzQg/U2DZkyL/RgvkpDA5kPerD+pmGM
zAM9mLdKryfzPw/W4zS4yLzPg/krDYky3/NgfU5DdZnneTCPpWGYzO88WK/T
sE3mdR7MZ2lwkPmcB+t3GiJlHufBvJaGyjJ/82A9T0N/mbe5M7+lYb3M19xZ
39NhJ/M0d+a5dITI/Myd9T4d5WRe5s58l46+Mh9zZ/1P5zzMnXkvnfMvd3qQ
jscy73Jn/kvHD5lvudOHdHSTeZY782A6Fsn8yp1epMNS5lXuzIfpnE+50490
vJF5lDvzYjrayvzJHVL+d6Zjjsyb3NkPSsdZmS+587yYznmSG/tD6ZwfufH8
mI52Mi9yY78onfMhN54n03FS5kFuzJvpCJD5jxs9SkeezHvcmD/T0ULmO270
KR0TZZ7jxjyajkMyv3GjV+mc17gxn6YjQ+YzbvQrHY1kHuPGvJqOcTJ/caNn
6Zy3uDG/ZsBN5itu9C0DqTJPcWOezUBtmZ+40bsMDJV5iSvzbQZ2yXzElf5l
wEXmIa7MuxmIl/mHKz3MQA2Zd7gy/2ZgkMw3XOljBjbJPMOVeTgDDjK/cKWX
GQiXeYUr83EGKst8wpV+ZqC/zCNcmZczsEbmD670NANXZd7gyvycgRcyX3Cl
rxn4fq5snuDKPJ3B+YErvc3AEpkXuDJfZ8BG5gMu9DcDgTIPcGHezsBH6f+7
0OMMdJd+vwvzdwYWSH/fhT5nsJ/vwjyegQfSv3eh1xl4Lf16F+bzDLSX/rwL
/c7AbOnHuzCvZ+CU9N9d6HkmDNJvd6HnmXgp/XUXep6JFtJPd6HnmfhP+ucu
9DwTx6Rf7kLPM6GT/rgLPc9EhvTDXeh5JppK/9uZnmey3+1MzzNxQPrbzvQ8
E0rpZzvT80ykS//amZ5nor70q53peSaGSX/amZ5nYq/0o53peSbcpf/sTM8z
2W92pueZqCn9ZWd6nolB0k92pueZ2Cb9Y2d6ngln6Rc70/NMxEl/2JmeZ6KK
9IOd6Xkm+kv/15meZ7Lf60TPM9nfdaLnmXgh/Vwnep6JCtK/daLnmegr/Von
ep7J/qwTPc/EZenHOtHzTDyV/qsTPc/CZ+m3OtHzLHST/qoTPc/CIumnOtHz
LJhL/9SJnmfhgfRLneh5Ft5If9SJnmehg/RDneh5FuZK/9OJnmfhnPQ7neh5
Fvylv+lEz7PwUvqZjvQ8C62kf+lIz7MwRfqVjvQ8C8ekP+lIz7NgkH6kIz3P
Yv/RkZ5noZn0Gx3peRYmSX/RkZ6XXk/6iY70PAsK6R860vMs5Ei/0JGeZ6G2
9Acd6XkWxkg/0JGeZ7H/50jPs+At/T5Hep6FROnvOdLzLNSRfp4jPc/CMOnf
OdDzLOySfp0DPc+Cm/TnHOh5FmKlH+dAz7NRVfpvDvQ8G4Ol3+ZAz7OxQfpr
DvQ8m/00B3qezf6ZAz3PRnnplznQ82z0k/6YAz3PxgrphznQ82xcl/6XAz3P
Roj0uxzoeTb7Ww70PBvdpZ/lQM+zsUT6Vw70PBvW0q9y4PkwG4+lP2XPflA2
Pkk/yp6eZ6Or9J/s6Xk25ku/yZ6eZ8Nc+kv29Dwbd6SfZE/Ps/FW+kf29Dyb
/SJ7ep6NWdIfsqfn2Tgt/SB7ep6N29L/safn2ez32NPzbLSU/o49Pc/GFOnn
2NPzbByR/o09Pc+GVvo19vQ8G7nSn7Gn5znsx9jT8xzYSP/lJj3PwSfpt9yk
5zlYJP2Vm/Q8B4HST7lJz3PQSfonN+l5Ds5Jv+QmPc9BkfRHbtLzHMyQfshN
ep4DvfQ/7Oh5DppKv8OOnudgv/Q37Oh5DtKln2FHz3PYv7Cj5znwlH6FHT3P
wR/Sn7Cj5znYKf0IO3qeg1DpP9jR8xwMlX7DDXqeAwfpL9yg5zmoLP2EG/Q8
B6ukf3CDnufgifQLbtDzHPSQ/sANep4DK+kH3KDnOXgl5/8b9DwH8+W8f4Oe
5+COnO+v0/Mcnuev0/McnJLz+3V6noNCOa9fp+e5mCzn8+v0PBd+ch6/Ts9z
0VjO39fpeS4OyXn7Oj3PRbqcr6/T81yMlPP0NXqeCw85P1+j57moJufla/Q8
F1vkfHyNnuciTM7D1+h5Lr//fI2e5/K8e42e5/J8e42e5/L7xlfpeS7Pr1fp
eS66yXn1Kj3P5fd7r9LzXLyT8+hVep6LmXL+vErPc2GU8+ZVep6LlnK+vErP
c3mevErPc5En58cr9DwXk+S8eIWe50Ij58Mr9DwXdeU8eIWe52KPnP+u0PNc
fp/zCj3PxSA5312h57k8z12h57k8v12h57lYLec1W3qeh6dyPrOl53noI+cx
W3qeB2s5f9nS8zx+n9CWnufx+4G29DwPD+U8ZUvP89BJzk+29DyP38ezped5
KJTz0WV6nodpch66TM/z+P23y/Q8D03lvHOZnufx+2mX6Xke0uQ8c5me52GU
nF8u0/M8eMl55TI9z0MtOZ9cpud52CrnERt6nsfvX9nQ8zz0k/OGDT3Pww05
X9jQ8zyUl/OEDT3Pw0o5P9jQ8zwEyXnBhp7nobucD2zoeR7M5TxwiZ7nMf9f
oud5mCd5/xI9z8MdyfeX6HkeWkmev0TP83BC8vslep6PQsnrl+h5PiZKPr9E
z/Ohljx+iZ7n8/sn1vQ8H/skb1vT83xkSL62puf5GCl52pqe58NT8rM1Pc/n
9zGs6Xk+Nks+tqbn+YiQPGxNz/PRT/KvNT3PxzXJu1b0PB/lJd9a0fN8LJM8
a0XP8xEo+dWK/d985lUrznvyOd+3Yj84H68kj1px/pOPOZI/reh5Pu5K3rSi
5/noKPnSkp7nw0zypCU9z0eB5EdLep6PKZIXLel5PufLlvQ8H40kD1rS89Ln
LfnPkp7nc55rSc/zMULynQU9z4eH5DkLel7A/GZBzwuwWfKaBT0vQKTkMwt6
XoD+kscs6HkBbCV/WdDzAnyXvGVBzwuwXPKVBT0vQLDkKXN6XoC/JD+Z0/MC
nJe8ZE7PC5iPzOl5AWZLHjKn5wW4JfnHnJ4XoLXkHXN6XoATkm/M6XkBsiXP
mNPzAlyR/HKRnhdgoeSVi/S8AB0ln1yk5wV4JXnkIj0vgFbyxwV6XoBjkjcu
0PMC5osL9LwAdSRPXKDnBYiR/HCBnhdwHnGenhcwH5yn5wXoJXngPD0vwDvx
/zw9L8B98f4cPS+Amfh+jp4XYox4fo6eF6Ku+H2OnhciVbw+R88L6fNZel6I
beLxWXpeiAHi71l6XojyJWXenqXnhQgUX8/Q80J6eoaeF2KO+HmGnhfSyzP0
vBCZ4uNpel4IrXh4mp6Xfh7x7zQ9L8QQ8e40PS/k/x9wmp4XIkI8M6Pnhbgm
fpnR80IsFK/M6HkhOohPZvS8EMXi0Sl6Xgh/8ecUPS9kP+0UPS/EWPHlFD0v
RA3x5BQ9L0Sk+HGSnheyH3WSnhdihfhwkp4Xsl90kp4X4pvU/xP0vJD1/gQ9
L8RJqe8n6HkRJks9P0HPi9BI6vdxel6EFKnXx+l5Eb9fd5yeF2GT1OPj9LyI
3z87Ts+L+H2wY/S8CEFSX4/R8yJYST09Rs+LWD+P0fMitJV6eZSeFyFX6uNR
el4EH6mHR+l5EXZJ/TtKz4swWOrdEXpehOpS347Q8yKESD07Qs+LYC316wg9
L8JiqVdH6HkROkt9OkzPizjvP0zPi2CQ+nOYnhfxPHWYnhfhotSXQ/S8CK2k
nhyi50VQSP04SM+LMEjqxUF6XoRgqQ8H6XkRlkg9OEDPi5j/D9DzIhyT/b6f
nhejpuzv/fS8GC6yn/fR82L8Lft3Hz0vxn3Zr3vpeTGmyv7cS8+LkSr7cQ89
L8ZG2X976Hkxvg4r22976HkxLGV/7abnxWgn+2k3PS+GUvbPLnpejMGyX3bR
82KEy/7YSc+LsUj2w056XowSWf876HkxDsl630HPi1Fb1vd2el4Me1nP2+l5
MXrJ+t1Oz0vvX9brNs57izFN1uc2ZIrnxUiT9biVnhfjiKy/rfS89HnLettC
z4vZn9hCz4vRQ9bTZnpejDuyfjbT89L/XtbLJnpejNuyPjbS82IkyXrYSM9L
n7e8/w30vAQt5H2vp+clGCrvdx09L8ECeZ9r6XkJDsn7W0PPS2Av72s1PS/B
XXk/q+h5CRLlfayk5yX4Ls9/BT0vQXN53svpeQkgz3c5PS/BPHmey+h5CQ7K
81tKz0vgIM9rCT0v/f3yfBbT8xL4y/NYSM9L8FnufwE9L/19cr/z6Hnp9eX+
5tDzEjyQ+5lFz0tQsU/Z559Bz0swWD7vdHpegqPy+abS8xLcl88zhZ6X4IP8
/on0/NfvG0vPf11/FD0vYV4bTs9L8Nv1sr8/mJ6X4Ks8zz70vATf5Prd6HkJ
Psmfm9Pzl/j1/6H/H0eNBp4=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxd22V0VdcWBWAKtDgUd3eH4jrR4u5atLi7E9wJgUCQQNzlugaCJRA07u43
ihQr0pcs5q+XPx0dpSfnnrP3+uZe69Jy2abpK8uWKVPGUq5MmdJ//v/PN8+3
4ZOWTcW/N08nu7Zvip//vgSf5d+74t+DawO2X16NL71z/g5I6sP/vpl/fgj2
1fEbk7Z3O/b+Us/7Sf8R/PO78VH+/GjssbTrWdFnP3auNrRSHhnH//8wrz8J
g1OmnL+28QiMq7pOmvT3VF7vGA7J9abDNK5q2c4nT6D/zR8VR1SZyeufwje5
/iwM1Dzdee/OGRhevX7cVzGHv+8cDsnvmwdDs+P50wwX0L+s4+HOsxbw91vz
/hfh1uMWiq2rL0HbZ+vgFv8u5v3YwCz3swQJX+QX4pam5f4zU5by/q5gt9zf
MjTuntTmNytbzJ1cOb58q+W836sYIve7AvNXDCq9Ihrkvut36J8VvH87fJL7
X4kb1+UHSVYJtl+C/+bnucHPswpxrz7NyHC9iVuNH7/fdn01P98t7JLPtwYN
y8+u3lVljzlan2lF69by895GP/m86zB3gFwQDabY+q8eup6f34GffwMm9js9
fEmWA2JyD1TL+H0jn4cj9PI8NqJgWukVHXHlyN/rFmVs4vNxgkmez2acXZ/z
1fOtEzpfcM/Mj9/M5+WMG/K8tqDzyXolH8EZFRNu1u74eAufnwv2yfPbiueO
o3Xvv7sgp731iL99t/J5umK+PM9tWFfytBqUd8Pz7ce2OF/dxufrhoHyfLej
cozz5iGV3eH1YLdD6qHtfN7ufN7b4VX6cX/3wLnqG143XbODz98D3+X578D4
0svV88TqBUt/zJ++k+/DE/HyPnYir/RxN/HCRI9ZXe0G7eL78YJW3s8ulD69
0FbeaPVh3MKoNrv5vrxxRd7XbnRcePHhhw4+qDpi6Nla1ffw/flgr7y/PQgp
uVqj7r4ouPCHacqnPXyfvpgv73Mv1lwq3I8+fniR0M5yLnUv368f+sj73YeS
myv5yP5w79C4wbOQfXzf/qgj73s/ZpYsnpJXivM7aoypoN7P96/AF3n/B+BS
8vRinBVY9rDczlG3DnA9KBAt6+Eg/vkeudvSTolxNT67WB0/yPWhhEHWx0GM
kgWgRJuFBRH3Nh7ielHCVtbLIVxpIB8IR2Zu/uVH58NcPyoEyvo5jJ+3p8L7
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
oP7nlIqeZ3IeraLnmdAO63ji1DUVPc9EY+k3quh5Jo4ebzCviZuKnmey/6ii
51mY+qxCF4VGRc+zYJB+pIqeZ6FFjU8/Rj5S0fMsHJP+pIqeZ6FoRnZYTJiK
nmdhlvQrVfQ8C3ftolzWparoeRZaSf9SRc+zcDbp8a7/ilT0PAtvpJ+poudZ
mN1KM/7ydxU9z2J/U03Ps9B+lXPT9lXV9DwLF6TfqabnWXjnbfPG1EhNz7P4
fUU1Pc/CwzdWjyZ3VNPzLHSQfqianmfhfJ8tV9P7qel5Fj5If1RNz7Mwb++S
NTv/VNPzLDyRfqmanmehU+CUwZVnqel5Fmykf6qm51n4Vg41bi9X0/MsLJN+
qpqeZyFobLf0nlvV9DwL3aW/qqbnWbh8vqk26LCanpdcT/qtanqehaXhVU/N
u6im59l4Kv1XNT3PRo/63+YX2qvpeTauSz9WTc+z8d+C/K5WPmp6no0V0p9V
0/NshDnEl6lrVtPzbPSWfq2anmfjZlZIhEeImp5no4z0b9X0PBurOxndBseq
6XnJ9aSfq6bn2ei/yWNPaLaanmfjjvR31fQ8G79prk1c8UHN82HJ9aTfq2Y/
KBvhn080/1xOQ8+z+f0HDT3PhuOQne/O1tLQ82xUkH6whp5nY9ORlUHNW2ro
eTaipT+soefZGPJkpp26u4aeZ8NF+sUaep6NylVHrRszVEPPs7FF+scaep6N
uKm9hiZM1NDzbAyVfrKGnpdcz7ZVzU0LNPQ8G9Wlv6yh59nYFl8zs+xaDT3P
RoL0mzX0PAejm/+iv7pbQ89z4C39Zw09z8HvK96c7nRSQ89zsEP60Rp6noMU
j5SF92w19DwHo6Q/raHnOfAtfNV9uouGnuegtvSrNfQ8B7v+uFc2W6Wh5zlI
l/61hp7nYMwu36g9DzT0PIf9bA09z0HdgFse1UI19DyH/W0NPc9BVplz+xyT
NfQ8BxOl362h5znwG71vcp9CDT3PQRPpf2voeQ4On1nbMuSrhp7nIFv64Vp6
noNJr+f9s7Cylp7nQCP9cS09z0GzOuOevGmgpec5OCr9ci09z0Hh3P43jrXX
0vMc9s+19DwHBvv2Gxr01dLzHPbTtfQ8B8fS6w3zGaWl5zkolv66lp7nYFb7
32oPm6Gl57kwS79dS89z0Xz9h6yIpVp6nsvvz2jpeS7eKDINqzZr6Xku5kk/
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
8TU3bgmg529K3CmdnwfgfyVUA1E=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
z/wnDksfVSnXsZk/LMPdNw6/2T5t0aOdP/OhOCxcfn9s927+kO2DOJx8o9/U
prc/86M4NPhzcGq1wf6Mn3G4vOxF74KR/syX4rBm5rZTdyb6M57GYcUyTTu1
nT/zpzj8cejs9UEL/Blf45Hxd8Upr5b7M5+Kx8xlOyvscfNnvI2HTcXJT3r6
+DO/ikfigxGBT9b7M/7GI/3QStdRW/2Zb8Wj8p8RC0KD/BmP47H44ZSFvQ77
M/+Kx6uKDdfsO+3P+ByPE8urBL255M98LB4b3naLGHLLn/E6HrsP/15lw0N/
5mfxiFvR0O5hpD/jdzwGzU68WxLjz3zN/PuVkd/XS/VnPDf/+6Mllzpr/Zm/
mb//w69D+hj9Gd8TcGJ1gq7fa3/mcwkorbprT89//BnvE+AQHmDXspya+V0C
qpw8/325qmrG/wSknbStm1JHzXwvAcmROyqeaKymBwmwqTWxyqJWauZ/CZi5
Zmizph3V9CEBWV8dB4d3VzMfTMDWs4/cFvdW04sErPAYd/vTIDXzwwR4Otao
FTBCTT8ScNnrq4vteDXzxQQ0uNS2wHOqmp4k4JSt98q82WrmjwlY5Fu5wpCF
avqSiMlNwoN3L1czn0zE8qSbc7Nc1PQmERdDMr5r5qVmfpmItjd7fRrvr6Y/
iXiQ9kDr/rua+WYitrTyTQncpqZHiVj/++rsk0Fq5p+JOFdv1/vzh9T0KRFf
7hc1P3NCzXw0ET5/uE/df05NrxLRxbfXIdVVNfPTRJTf0e7drNtq+pWImuGj
5nR9qGa+mogBzY8mvg5X07NEHAnqMvf8czXz1yR06Wl8PytBTd+SkFeaetgm
Xc18NgnRL7/M2K9V07skZMdOadOpQM38Ngmt32d9Ol+ipn9J2DrgoL7dOzXz
3SR0OrklO/CTmh4mobT7ZeP7chrmv+a/l1Gp4m9VNJDtySTYnt/e7WAtDfPh
JEw+NG5pVgMNvUzC88sDrzdsqmF+nAR3g33tIa019DMJYwfd9FrQQcN8OQmj
bw1+7/m9hp4mYd2UL/7rf9Qwf05GQj1T84C+GvqajLlvaj9dBw3z6WQ0er8o
YPFwDb1NxodvSyeNGKNhfp2MCg7nujedqKG/yRgcvb+ZfpqG+XYyzk671+TE
bA09Nv++Yv0OMxw0zL+TUTHhwLByjhr6nIzXYdNdDq/UMB9PRq20EZd7umro
dTJm1ln69Y6Hhvl5MmIc78/u46uh38lwyxsRfVajYb6ejGGq8qPrbdTQ8xQA
r1NWbdXQ8xQsblXf42Gghp6n4EFbxw6V92noeQqGjnplGPKnhp6n4O32czdc
j2voeQoS/t0XtC9YQ89TkBZwN+D6BQ09T0GDn+psCL2qoecpWGu7d0/UTQ09
T0Hlj5NuPflLQ89TEFrjF+PVRxp6noLrQx067wnX0PMUPD14Y51TtIaep6BW
40GZg2I09DwFfiEfx5dP1NDzFDRfY4i5k6qh56kwTqu8wDFLQ89TkWc3y7Z6
noaep6Kqf+7NY/kaep4Ku6iDXt2LNfQ8FSk/bhp35ZWGnqea4/DZHzq+09Dz
VMxe/bXtrn809DwVDoPXd3j3RUPPUxH0I/qPKa/Q81Rzvt11XlAlhZ6bv081
NjCpmkLPUzEg7XBy9doKPU9Fq2ntu/5cX6Hnqej1Nnv71EYKPU+F2/Vntsua
KvQ8Fdqg4k2uLRV6ngavA2jl0lah52kY+jgsbFEHhZ6noXd1v3Xjuyj0PA1T
3Jf/0rW7Qs/TcLzC5kb/9VToeRpaXsv8Ev6zQs/T8FhZ8FbTT+F6Jw37PZp9
+mmQgu0Wz9Owb2uVepm/KFz/pCEyvENfz+EKPU9Dq9ZeTtVGKfQ8DWcP/Xdz
+1iFnqdh9oBbtWtMUOh5GgZ/Ob7We7JCz9PwW87jUu00hZ6nY7O+gccAO4We
p+PvGvvrbJmj0PN0/D5t0u0Ye4Wep2PU44Eu1RYq9DwdfSbM7t93iULP0zHZ
5mKDOcsUep6OQ3E9v65ZqdDzdNSNKPygcVLoeTquZiaW2+Cq0PN0rP/mbVM/
d4Wep8PfefiIFZ4KPU/H6ZIo1XhvhZ6nw2arf3Q7P4Wep0Pz24r2f/sr9Dwd
PX/ctOOaotDzdNTqm15j2QaFnmfg2/nz9jbcpNDzDIw/902vG1sUep6B643K
5YzZptDzDAw71eJg0g6Fnmeg/PTVjtN2KfQ8A8ZOb4ZFByn0PAMVWp7t8dM+
hZ5nYMTPu7rtOqDQ8wzcWX2lf8EhhZ5nYEp0uZk9jij0PAOtR60PWH1MoecZ
aGTsH3rshELPM4Bz7epFn1LoeQa2bhviVBCs0PMM1AramfXvWYWeZ+D2/YZz
yl9Q6HkmtlZ9VvT1okLPMxHoHrLp1WWFnmci0jaub/JVhZ5n4rubrf+5el2h
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
Lp6XYhT7y8XzV/jf/vP/AdEZPhQ=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxd22VYlOnbBnBj19a1e9W1XRM7OXXt7hYDVDBASkBApDuGsBv9290YKwpK
CdLdXcPoYq6rvjMX56eXL3vsAczM8zz3ff3O+7rwD909y7Y1qFevXkXDevU0
//3/X/9dfp+4UHcJGo268ORo3krtuv/fjF/k//dq/2u386l5oAG2fu1a633c
nd83RnP5/kFtm/Y3ZhdYmyMz7WjXWx3P8uetsEl+/pL2vor+Wk2u2aIVrt7V
en6Lv2/P97uvPTlvsc9hI0f4rbHz/3HjCV/PGQXyei+0H89t0WCwmyvGdddb
vul6OF/fHQby+pHaE+9FWvx92hM6e158HV/whu/njY7yfvHaj3q4VC195Iu0
tsrfXSck8f0VaCLvn6J9IrzXLVMDfxw6neq9+3Y6P08AguTzZGlnfZU3RK3O
yajF6bn8fEG83gLtbsNz+jZyOIjqC70qO6UV8vMewmT5vMXa67ZO0rwi7o7b
ssr1aCk//xFskc9frn3sqHxh8RbFILO7lbyeY7yeau2MuM/Li/53HNf63NDL
7avi9Z3g/Xyn3eWXVa2G3jmJ7dBpUPzpPa/3FFLlemu110yQF8SWkHWNOrt9
4PWfQVO5/o/aC8Z5TNtccgavD7yd0nz6Z96Ps7wfX7Srl2pe8Sy8A55cevbn
v7w/wfCR+/NN22t32bfL74Px4H2P2cO1v/N+nYNS7tcP7cFuHdWXcA5n42xb
3NKuh7r7dx7Zcv/qI+bszAe138/jaHS/3wZ+qI+6+/k/fJT72QC71Her8y8X
ELfb8+qB5w1Rd38v8P7+gmZp54ynNLuIkfevFDw48yvq7vdF3u9GuKK53NaX
EHPO9Xbs4caou/+XYCj3vwnmaV6u42X4je/RLfx8U9Q9j8uYJ8+jGSo1t7v7
FSjMTHoci2iOuudzBavl+bSA5u7F976Kiyvsnyyu1wp1z+sqjsrz+g2DNvi9
/DjwGlob9dtnOqA16p7fNbST59caUepX6zr8OnKdDQqurW2Duud5HTvkebbB
Dn+lLcbcQKiRR8e0Q21R93xvIEWebzuoP5z6km/i8WD3zu9z26Hued/EBnne
7bFCvXjUjxSpT7aW/avVAXXP/xYay/PvgPPqu5d27ha+9ejp9MGvI+rWwy38
LeuhEz58T7aq6H8bc1c+rMr50gl16+M2jsn66IwZsgBu48LGoX883N0Fdevl
NlxkvXRFUGe5IAyY5NDHvqor6tbPHZyQ9dMNdR/vDsIq7/wzfm931K2nO7gj
6+l3jJKvu9hu+NK3oGkP1K2vu/gs66sHnEKj1SvoLiaF3fy873JP1K23uzgv
660XktRPX31P0MLiWcf6V3px/d1Djqy/P9BHXvAeWn9o0/mZ8x9cj/dwUtbj
HzAz0DyA+zi1PuXnu629uT7vo1bWZ2+EfRyofsL3ce9a47gT8/pwvT5AgqzX
PmhX9wGxquySY+iYvly/DzBe1m9fyKeLfACX5iG/b+jfj+v5IQbJeu6HOydV
F1/Pf4jZXcaf3tO9P9f3Q9yR9d0fDeSCH8Kjdf/G3zoN4Hp/hBey3gdgWd2C
wZb3jit/dB7I9f+I9XwggjWXm/wIYU8Wee7rOYj7IQSBsh8G4R/Ny60JwZM9
Hv/bPfhP7o8Q/CX740/8pVn+WSEY13LUxbTJg7lfHsNd9stgBGiW78bHmBM0
3+/x8iHcP4+xSvbPEBRYax7IY2T/kqTTwXgo99MTPJb9NAxassCf4NdNUW3L
/Ydxfz3BJdlfw+FwcLp6yTzBteBhN0aGDOd+e4qWst9GIKG3PGDU6tc/8q/p
CO6/p2gt+28E/tBUf+VTbKjt/aZTCy3ux2fIlP2oBRPN9jB+Bs9am9p3F7W4
P5+x3mrhhebp1j6DlUGLVq6zRnK//o3Hsl9Hok3dhoTWsuRuaWUjuX//Rrrs
31GQ2/f1b1y7ldS92GsU9/NzhMp+HgX5eLbP8dmpWZvrI0dzfz/HZtnfo1Gn
eCjqvbH6opU9mvs9FPGy38fg0uv56h0dilT3Hkmm7mO4/0Pxq+z/MVii3o1t
nUKx5/G3M3vGjWU9CMUPqQdj8UWjT3gowja31h1YMZb1IRThUh/G4UxXzYZ4
gXc2GzqePDmO9eIFFkq9GIc58oBfIKt5/rPYFeNZP14gUOrHeLy7qPmAL+DZ
+viax60msJ68wCWpJxNwRPPpol+gqadPqW7MBNYX9c9LfZmIqerFNbfFS8y0
eqgf4TmR9eYlRkq9mYjyb5oLfokZWZ2zyxZMYv15iYNSfyZBs1rUSwZd7t6e
Ht5mMuvRSzyRejQZcrnxL3H+p8OpDRmTWZ9e4qbUpymQl2sbhg+hHtW3zk1h
vQqDudQrbUg5Wh6Gnp8jh74w1mb9CsMnqV/aqIsP6v8/C12fqWA9C8MUqWeA
lIO0MKTlfwr3bDqV9S2Mnk7FAc127hyOFld3JA4xn8p6F45WUu+mYoBsoHCc
G26VMSR/KutfOHKl/k3DW4kX4bhs1DvTc+E01sNwNJN6OA2Wmu2QE44mBgbJ
s55OY30MR7DUx2noqVnOPV4hvtu8yM1D/mK9fIUTUi//QoRm+W1+hW8eEffT
T/7F+vkK76V+/oU9msd79hWc7uSfuNF6OuvpKzyQejodnWTDv4LZwYP7C52n
s76+RqTU1+l4rvl4fV8jfGTpavN/p7PevsYyqbczoL9d8/Ua+zwTB281mcH6
+5r1dwY04UldYeFzYt3X2xUzWI9fw1nq8UxoqqNVxWu02mEXqqM3k/U5AuOl
Ps/ERnnBCBSrpjjo585kvY6AttTrWWgkBSoCWlpHJ71dN4v1OwIPpH7PguZp
tL8RgZQhClVQ+izW8wj4Sj2fDUl3qgikFfY++Wj1bNb3SLyU+j4bPzTbTSsS
05YvnTExfTbrfSTr/Rxc0Cxn00h0tetW0mXdHNb/SObzOVhUd8FYqOdwYHXO
HHoQiQTxYC4+aR7Hx0hkNnBqV7tlLn2Igq/4MBenNJc7Lgr5G3qdrS6bSy+i
ECJezMMsuYFRGGGyduCMPfPoRxTmix/zUCM8ROEDhl3++nkePYnCGPFkPg5p
yvu3KHSKOtWnpeN8+hINP/FlPrTlgUTjaIurh+1aLqA30Zgu3ixAqaa82kXD
q9nyXxcdW0B/opmvF6Cu/EUj9uWh3TYDF9KjaKSIRwsh5aVBDKzHWMQ2erSQ
PsXQp0WQ7Ts9Br667we8m7OIXsXg00aNV4sg28MlBr/Ma2I7LmsR/YrBKfFr
MeqWXwzyqh5HZRstpmcxuC6eLUaK5vE2eYOm552bvKu/hL69wW/i2xLsl0/4
Bmtufr3Ua+ESevcGH8S7JegnC/AN8g9PnlXv6BL694b+LUHsG/mCn87CfN+S
JfTwDdaKh0uxN1BTUGNhUm+I5ZuRS+ljLFLEx6X4XRZ0LFzs05uF2C+ll7Fw
FC+X4pUcr2KRnLPs+Iq3S+lnLPTFz6Uw1JTTxFgs6Hx84Okey+hpLGzE02Xo
IBskDp+G375zxGgZfY1DiPi6DM805WBVHOL7Hpww7fkyehuH4eLtMmyT41cc
sj7Nenak9XL6G8fz4HK0qNtw6HXh9ZTTusvpcRxuisfLIcul61v4jGz/ZMX9
5fT5Le6Iz8shj2PDW4w+MXxMSJMV9Pot/hGvV6DuePYWvxZ1vvZmwwr6/Zb5
fAXk5fLeomXj+J5+t1fQ83j8jNF4voL7PR4zm6xU1Gu8kr7H0/eV3P/xuFR6
8XsvnZX0Ph7p4v1K1oN4/BUcqf/u7kr6H4/6ded91od4/DbpYZxR81XMA/Ew
kDywivUiHq1vm408obeK+UD9+z01+WAV64f69X/5EWD1dBXzQjxeS15YxXoS
j+DRq9417Lia+SEeYZIfVrO+xGPUX7bztI1XM08kQCl5YjXrTQI+DTE+OyBm
NfNFAs8jq1l/ElD+Qevj8/5rmDcSkCN5Yw3rUQLaHnsxs7HTGuaPBByR/LGG
9SkBRt17Bn7PW8M8ksA8spb1KgEfbOblBE9Zy3ySgNuST9ayfiXg3qPpfT8f
X8u8koCGklfWsp4l4FhiM4N//13L/JIAheSXdaxvCXgedfrStXXrmGcSoS15
Zh3rXSLanmpQ2vLJOuabRPSTfLOO9S8RPotH9erRfT3zTiIWSd5Zz3qYiDm5
Wqtz9q9n/knEIck/6yHL3S4Rf8774Tk/fz3zUCJaSh7agLr2QSJmBh55YjB9
A/NRIkIlH21g/UyEV0i9itEXNzAvJeKM5KUNrKeJqPdsbLtbzXWYnxIRIvlJ
h/U1CddOTpyYaazDPJWEL5KndFhvk+C3vsXGu6k6zFdJMJV8tZH1NwnBn67a
TZqykXkrCR0lb21kPU5CllGXE6bnNzJ/JTF/bWR9TsKS8BUP1rTYxDyWhF+D
NXlsE+u1+vN80olVmm9iPkvCRMlnm1i/kxDTaEyBVu4m5rUkJEpe28x6noSa
r9VWbftuZn5L4vl0M+t7MppsunBAb+1m5rlk5rnNrPfJuH/n9S8t/DYz3yXj
N8l3m1n/k9H048ImLV5tZt5LxiXJe5vpQTKU/SZ76n3bzPyXjAzJf1voQzJM
Z/p7th25hXkwGdckD26hF8lwW76waZcdW5gP1Z9P8uEW+pGMcUuMG1me2cK8
qP48khe30JNkOEz612FI+hbmx2Sclfy4hb6kQL9Dlc2E1rrMkylIljypS29S
UJDz14eTc3SZL1OYL3XpTwreBdWvWuugy7yZgv8kb+rSoxScmzhgs+FjXebP
FNRI/tSlTykoi7u7PL1Wl3k0Bc6SR/XoVQqil158dWyoHvNpCq5LPtWjXymY
Flb/wT19PebVFOyRvKpHz1KwpE9Y3/7BesyvqewP6NG3VHw0qWqjytZjnk3F
C8mzevQuFeNvWu//rfNW5ttUrJZ8u5X+paJ9lrG+2/KtzLupsJO8u5UepsLj
Y+zbVX5bmX9TmX+3oq49mQr/H/4P9sdsZR5OhULy8FZ6mYpJn552+6/xNubj
VLhJPt5GP1Nhk73oZ8KMbczLqczL2+hpKhbfnr3lp8M25uc0DJb8vI2+puGp
+cVpzs+3MU+nQSV5ehu9TcPr/kZnNn/fxnydxny9nf6mYXPE8f1Bk7Yzb6dh
mOTt7fQ4DadWjcjoab2d+TsNDyV/b6fPadiTPPhug5DtzONpSJI8vp1ep6Fw
qm/zKV+2M5+nMZ/r0+805B1fXRg3Tp95PQ1Zktf16Xk69pe4jXtkqU/P0/Fa
8rs+PU/H4997Nv/6UJ+ep2Oe5Hl9ep4O5xm/6/h/0afn6dgp+d6Anqejcq3j
UIcJBvQ8HT0k7xvQ83RU6SyyjbQ2oOfp7P8Y0PN0OC1xmKv/1ICep2OBnAcM
6Hk67mh1O6jzw4CepyNCzgc76Ln69+t333R16g56no4cOS/soOcZKH7udHGJ
0w56noEgOT/soOfq7+9eZrTw9Q56noEUOU/soOcZMGvifvds0530PAMP5Xyx
k55nIDigr+XChTvpeQbGyHljJz3PwK7mA0OW+O+k5xlYJOePnfQ8A3GmAfuu
puyk5xn4KOeRnfQ8Ay8j9R7pdN1FzzMwWc4nu+h5Bpa3PLFXf9Muep6B9nJe
2UXPM2E3ddLtyPO76HkmguT8soueZ2KG7rRdDpW76HkmDsl5Zjc9z4S/6Y1z
/iN20/NMzJPzzW56nglfE8d1Xy1287yTCVc57+yGQjzPRKdNz/wePdvN808m
1sv5Zzc9z8T4SZumv/3FkJ5n4o2chwzpeSYaNzLYO2WBIT3PRIacjwzpufr1
nqf1axhkSM+zYCfnJUN6noXZ+jdW9Mo2pOdZPD8Z0fMsvP5eVf9gXyN6ngVv
OU8Z0fMsfHRUDN1iaETPs/BVzldG9DwLtz8dT3N+YETPs/CrnLeM6HkWGq9t
pd6He+h5Fs7L+WsPPc/CP5fLLiTO3UPPs5At57E99DwLJhUD3vwXuIeeZ+GK
nM/20PMsBHZ6u8cudw89z0YLOa8Z0/Ns9D1WE3m1vTE9V39fzm/G9Dwb0T0H
dZkx0ZieZ0NHznPG9Dwbod0PD2yy2ZieZ+OTnO+M6Xk2firGf/7sYkzPs5Et
5z1jep4NT9uWLu2uGdPzbJ7/jOl5NrbmdUhcl2hMz7OhkPOgMT1X/37I0tzY
L8b0PJvnQxN6no0fzV5c3t3ThJ7n8LxoQs9z8CRJb/S4WSb0PAepcn40oec5
iG430W6ooQk9z4GbnCdN6HkOesVMd1scZELP1d+X86UJPc/Bi6/2i08+MaHn
OUiU86YJPc/B3dPvUzsWmdDzHM5XTOh5DmqeHvz9aTNTep6DOXIeNaXnObBe
atjHZ6QpPc/BPjmfmtLzXCzSsSr3WGdKz3PxQc6rpvQ8FzvzH+y+42hKz3Px
VM6vpvQ8F1mZA281umpKz3ORIOdZU3qeiyML4u64JpnS81yMlPOtKZ6I57k4
Meai+cj/THnezUW+nHfN8Jss6Fy8P3j3Y9N+ZvQ8l+dfM3qeCz/D2jEtF5nR
81x0kfOwGT3PhfXT7WMmW5rR81yej83oeR7uOrb8cOiMGT3Pg6+cl83oeR7G
h5aZ/B5tRs/z8EjOz2b0PA8t9n688bbWjJ7nQUvO0+b0PA+Dzo69ev13c3qe
h49yvjan53k4NOPq9oezzel5HurJeducnudh9qblBdUm5vQ8Dzpy/jan53lY
9H5Yt0UnzOl5HprIedycnufh2L9T2me9Nqfn+fgh53Nz7vd8jLWxfxP43py+
52O6nNf3cv/no6fZp+lW3ffS+3ye3/eyHuRjSeFpa/fZe+l/Pm7KeX4v60M+
EiJtjcNN9zIPqH9fzvd7WS/yEdzfp9+QU3uZD/J53t/L+pGPJ9/ijz6P2su8
kI+GdfN91pN89J4zJ9bu417mh3y0kX6ABetLPpKb1z7f8YcF80Q+DKU/YMF6
k4+kWQkm9gstmC/y0VL6BRasP/no8bWw8OU+C+aNfDSQ/oEF61E+bvce2E7r
ggXzRz77CRasT/k4FnamQUyiBfNIPl5Kf8GC9Sof0VkLbit+WjCf5OOU9Bss
Wb/Uz2PXkJ6OQyyZV/I5v7BkPVNfrykWnF5ryfySDy3pR1iyvqmf3zuX8eWu
lswzBaiS/oQl610BPEt+Fm24Z8l8U4CP0q+wZP0rwNhl1xd9L7Bk3ilg/8KS
9bAAI8b6WkX9ZsX8U4Bq6WdYsT4WwMo/eMuLKVbMQwXIlP6GFetlAZpvrWxa
ssuK+agA7aXfYcX6WQDV9W0mo49ZMS8V4KT0P6xYTwvQbU/7IzcjrZifCrBd
+iFWrK8FCLj4af+qz1bMUwVwl/7IPtbbAqxY3aLPoP77mK8KUCv9kn2sv+rX
s1vpNmDlPuatAlyR/sk+1uMCRHZPvLLUeR/zVwGuSz9lH+tzAYxGOvpcvLuP
eayA/ZV9rNcF0H++bfigon3MZwU4I/2Wfazf6vcLs1WktrVmXivg3zNYs54X
YAIibt38y5r5rQCh0o+xZn0vRKeRMxX3TK2Z5woxVfoz1qz3hZhy4tOwkmBr
5rtCtJF+jTXrfyHu7M/ynpZkzbxXyP6NNT0ohGVq7eWohjbMf4XwlX6ODX0o
hP0FuO4fbcM8WIi50t+xoReFyFT+/YfONhvmw0L2e2zoRyGcr5nYGhyyYV4s
xFHp/9hAyr9FISwKVx86HWHDflAhhkk/yIbnxULc9TPZ0+CrDftDhewP2fL8
WIgJ9/5u7P+nLftFhZgk/SJbnicL0XEJNs3fYMu8WYjH0j+ypUfqn9er3avl
a8v8WQhX6SfZ0qdCXFFmzp8eass8Woiz0l+ypVeF2Kb6mG//jy3zaSEaSL9p
P/0qVO+jGWMq++5nXi3Efek/7adnhYhY83rOgdX7mV+LcFf6UfvpWxG2hdp0
m+q5n3m2iPO+/fSuCDqnt14f8mw/820RfKRftZ/+FeHYR/sfM97tZ94tgpH0
r+zoYRF6hsW38uhjx/xbhNPSz7Kjj0V433hF7pdVdszDRWgr/S07elmE38Kb
GQZ52jEfFyFX+l129LMINp8/PF7/tx3zsvr1pP9lR0+LMDq4beSif+yYn4uw
WPphB+hrESaG6wUZ9j/APF2EnzKvPEBvi9R5sbzno3UHmK+L8FH6ZQfobxG0
jM7sHOZ3gHm7iH+vcYAeF6H9Jy/z+LADzN9FCJd+2gH6XITZH69MOfXlAPN4
Eftr9vS6CNX3fxTGdLRnPi9CifTb7Ol3Ed5ee+G6Ucueeb0IF6T/Zk/Pi7Fp
U49mjRfY0/NiNJR+nD09L4ZfbHvDV9vt6Xkxmkp/zp6eF8P48/mbRx3s6Xkx
Hku/zp6eF0OVHZfgdMKenhejufTv7Ol5MTraBSQ5PbSn58VoJP08e3pejPxM
1b2jifb0vBhXpL9nT8+LsbK2dO8rpT09L8Y76ffZ0/NiGEZYdmzc1IGeF/Pv
rxzoeTFGrA4+tLGvAz0vxh7pBzrQ82IcD97+KQYO9LwYF6U/6EDPi3H2cviY
xesd6HkxXKRf6EDPi7Fq99MV5RYO9Fx9/dI/dKDnxbhWuXD54QAHel6MMdJP
dKDnxbjVd5/WhhsO9LwYjaW/6EDPi7G8q7ZqbLQDPS+GnfQbHeh5MU7GnPAe
UOpAz4vZf3Sg5yXwGn+w6bAGjvS8BFulH+lIz0vQb8uA7fN6ONLzEsRKf9KR
npdAf+byYNuJjvS8hP1KR3pegrklnf8OX+VIz0twVPqXjvS8BAlTrUJ6mznS
8xL8I/1MR3pegvprTIIO+TnS8xJ8kf6mIz0vQcafvyzudc2RnpfgvPQ7Hel5
CVaHjKh4HulIz0ugkv6nIz0vgWXDz7p7SxzpeQlKpR/qSM9LgKarn05t4ETP
S+Ag/VEnel6Ca9FLPv7R04melyBG+qVO9LwEr2YXt+wy2Ymel+Cm9E+d6HkJ
nO3bNOq/1omel2Cq9FOd6HkJis3Tc+ZYONHzEv49gBM9L0F53wkHHQKd6HkJ
Fkm/1Ymel+CwYtSQ+FtO9LwUb6X/6kTPS1H9MCJ4dJwTPS/FZ+nHOtHzUlQe
+/jlRpUTPS9FmPRnneh5KRQTng1DU2d6XopJ0q91puelSArsMaOkvzM9L8VS
6d860/NS/H25y4SzM5zpeSk6SD/XmZ6XYpXNjZZmus70vBTW0t91pufq92+S
82KdvTPPh6Vwln6vM/tBpdi19H8r15xypuelmCj9X2d6Xop3KxtH7XrqTM9L
EST9YGd6XoqeHRt2P5jpTM9LESj9YWd6Xooa/yOLkr840/NSjJV+sQs9L8WO
qIjNgzq50PNSOEn/2IWel8L9qWJZ0BgXel4KM+knu9DzUszfVdunwwoXel7K
/rILPS/FwxRV8lVTF3peinnSb3ah52WI/eaybY2/Cz0vw1jpP7vQ8zLY59xP
6XrLhZ6X4aH0o13oeRlyrQ/0q41zoedlqJT+tAs9L0NhUuGKAqULPS9DuPSr
Xeh5GXzK8/RKWrjS8zJMk/61Kz0vQ/Yji2U/B7vS8zLoST/blZ6XIW3GxV7D
57vS8zIMlf62Kz0vg7G3SZz5Tld6Xobz0u92pedluO2Xsj7ew5WelyFE+t+u
9LwMpxclRU677ErPy9gPd6XnZRgStbNDVKQrPS9DqvTHXel5GQx+Hp+2vdyV
nqvvl/TLXel5GWa+376wSxM3el4GP+mfu9HzMjw/FTO+cIAbPVffT+mnu9Hz
MlQ0jm74YrYbPVd/X/rrbvS8DPeG6N64r+9Gz8thJ/12N3pejsEtg8aHurnR
83KES//djZ6XY/blTcH5F93oeTkeSj/ejZ6Xo2X9V1UdI93oeTnmSH/ejZ6X
w6x9eHu9cjd6Xg4X6de70fNyOBZt+P1VE3d6Xg496d+70/NyjDby+3XKIHd6
Xo5y6ee70/Ny+N1bHxs9152el6OT9Pfd6Xk5fB+8MDfa6U7Py1Eh/X53el6O
seYvvg3wcqfn5dhW9/f89Fx9v5TrdD9fdafn5XCXeYA7PS+HaW/fS9lv3Ol5
Of9eyJ2el6Npu/VxaUp3el6OezIvcKfn5Vjw/EVSeSsPel6O1zI/8KDn5Rgx
4OWj30Z40HP1/ZN5ggc9L8fTeRv2L1jqQc/LkSfzBQ96Xg7lIMUfp0096HkF
ymXe4EHPKxAervO/xkEe9LyCf+/tQc8rML3bqyau9z3oeQUKZB7hQc8rYDD0
9fyuaR70vALpMp/woOcV0Pq22Sj8iwc9r4C1zCs86XkFzjgfNHbu6knPKzi/
8KTnFXgSpbds3WRPel6BszLP8KTnFbCKjmk3a6MnPa/ABJlveNLzCmS7xt6b
be9JzyuwQ+YdnvS8AmU/DMZsCvak5xWYIfMPT3pegSMjTx30Dvek5xWIlnmI
Jz2vQNUfhilvSz3peQVqZT7iSc/V9/tNyoeBTb3oufp+y7zEi55XwG1Ueu3h
wV70vIJ/L+xFzyuQsNI8sfsiL3pegRUyT/Gi5xV4OuqK4qGxFz2vQFeZr3jR
80osi903zCDQi55X4oDMW7zoeSUO9S66OuyBFz2vhKfMX7zoeSXMR5U2aZ7h
Rc8rMVXmMV70vBJffzrO/P7Ni55X4pjMZ7zpeSX6u4ds+bWnNz2vxGGZ13jT
80p8ifHQ6fOXNz2vxAyZ33jT80pYxtSOX73Nm55XIkjmOd70XP16rp9rz7h7
0/NKOMl8x5v930rofA/yrXfNm/OeSnSXeY83+8GVeDP8TROLt96c/1Ty3y94
0/NKZP5+Urd+rTc9r8QkmQf50PNK+Ec0PhHc0YeeVyJO5kM+9LwSyiEt7q+d
6EPPK/HjV828yIeeq+/fwivX+2/0oeeVnB/50PNKnPuz0KWpow89r8QqmSf5
0PNKfHh5d0qDCz70vAo2Ml/yoedVUHbsmdI62oeeV2GezJt86HkVfPr3XTCm
xoeeVyFE5k++9LwK8e9fBu9p60vPq5Ag8yhfel6Fh1bf0p+P9aXnVfCX+ZQv
Pa/C4iexNf3W+9LzKs6rfOl5FZxDJhSfPeBLz6vwTeZXvvS8CuvMEDLqvC89
r8IFmWf50vMqFJfnGmZF+tLzKjSU+ZYvPa9Cm66dGxxV+tLzKtSXeZcfPa9C
TqOqvbvb+tHzKs6//Oh5FVbeXB21cpwfPVffT5mH+dHzKuxst/G/FRv86HkV
52N+9LwKw0b9aLXTwY+eV8FM5mV+9LwKh1uNr3/wgh89r8JNmZ/50fMqXPxf
86SUGD96XoUgmaf50fNq6H2xch7y3o+eV6OlzNcU9Lwa6xuGei5orqDn1egt
8zYFPa/GFoPWYS17KOh5NVrJ/E1Bz6sx4urQqowRCnpejTcyj1PQ82qkx3Rq
eHu6gp6r30/mcwp6Xo1l0XHNAlcp6Hk1nsu8TkHPq3HqwrIG9jsU9LwaX2R+
p6Dn6p/ffK7C0lZBz6tRz18zz1PQ82rc+RIaau2noOfVnO8p6Hk1rI2uurkH
K+h5Nbxk3qeg59Vo91JX++x9BT1X3z+Z/ynoeTUca0uLwyMV9Lwa22UeqKDn
1QhtMN6mNktBz6v596IKel6NFNXK+kNVCnqu/r7MCxX0vBohj6damjTwp+fV
WCPzQ396Xg0jvS/ZoR386Xk1fso80Z+eK/Ffhe3IboP86bkSxjJf9KfnSugt
irO0n+xPz5V4JvNGf3quhLei+tq7xf70XIl0mT/603Ml/G+lJezS86fnSkTI
PNKfnitheMOv9L2FPz1Xcj7pT8+V6OLZvsrR05+eK9FD5pX+9FyJY9O35/U4
5U/PlXCR+aU/PVeiOtM57NVtf3quxN8yz/Sn50q0WGJ82PKVPz1XIkHmm/70
XImG5wauH53hT8+VuCPzTn96rkR80vVW/1X703Mltsn805+eq6+v8OftuHoB
9FwJlcxDA+i5EgVxPWZeax9Az5X8e90Aeq5E/6PNIoMGBtBzJaxkXhpAz5WY
PC1sovvkAHquhKXMTwPouRL9IuacdF0SQM9rOE8NoOc1KPzzuMpvawA9r8E/
Ml8NoOc1sNr9WOu8VQA9r4GRzFsD6HkNsr0u6IV5B9DzGv57ugB6XoM2Hptc
lGcC6HkN57EB9LwGXbaWHOp9P4Ce1+CtzGcD6HkN/u0+/ohuVAA9r0GQzGsD
6HkNLt9d7XE9J4Ce13B+G0DPazBk4IydDf8JoOc1nOcG0PMaOFt/n7i1USA9
r0GOzHcD6XkNblxx+va2ayDnvTWokXlvIIrFc/X7P0q9Omt4ID2v4fw3kJ7X
wPr8p/mR0wPpeQ0CZR4cSM9r0MmoKGvFmkB6XoMeMh8OpOc1UHQ4ub56dyA9
r4GtzIsD6bn6fh7rE+PrEEjPa/jvnQLpuQpfvlv8OflQID1X4b7MkwPpuQpl
2of3fbgSSM9V8JD5ciA9V+GyjvOjh88D6bkKE2XeHEjPVcA67TKX5EB6ruL8
OZCeq3Bh9KtfN1UE0nMVmss8OpCeq1Ba3bn99B+B9FyFYTKfDqLnKrxznNB2
ZLsgeq7ivDqInquQ9Kl/vSEDg+i5Cu9lfh1Ez1XwnFOQM2JKED1XQSHz7CB6
rkJrK4OrU5cF0XMVGsh8O4ieq7Db5anBev0geq7CPJl3B9FzFY4Z53RwsA2i
5yroyvw7iJ6rcGJCzJ3b/kH0XIX5Mg8PoucqmOS7QHkhiJ6rOB8PoucqdNvW
8umop0H0XMV5eRA9V19PxJaBLglB9Pwd/71aEP4Pqe9WBA==
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.528488, 0.470624, 0.701351]], 
         LineBox[CompressedData["
1:eJw123VY1VkXBWBrbB1r7G4/u8a+S8UauxsDDFRAGpSQToFL2B2jY3frCAIC
IkhIdzfoIMY46nfvvkv/mccH5vKLc/a7zt7YS2f30q316tSpU1q/Th31f3/+
qffa6vPIjED8d+l9/AKdxVCGbx7oEvfz75tw7N8p7dJfBuJfu51PzQL00HFr
i6ejn/78uhGaNort4XsrENbtrs/O3WsG4xwXVF74+f1WWPB+WJeFxwOxp7T/
yMZXbXB0QtTtW34//397bHq0tmFHt0BMzl7kfcjQEceMMn9zsPn5ec6Ys3FZ
boVxIB7/0bzeYDdX6Lk81Vu3/efnu+OX/I5XX68PxMS7ERZ/n/JEayu9K1OX
/vx5++Ez48q2B7MD8bC7S/mShz5wm5ObOWLKz5+vxHunpq2vjQrE8dCeN030
/JD0sX+dIQN/Xo8/Bp35/cq1boFI/yI/EDWOE9qMavvz+gIx4vjwsY8aB6LL
8My+DR0OILeiYzut7wG83oNoYl57/U1NANZumaT+RPw5JuyXjaUBvP7DeDDY
veP7rAAcPSJ/gLWKYpe3AbyfoxgfVGzc7VUAUmM+Lcv/8xguaTs/fPA8gPd3
HD6j2j1Zfi8AnRqsbDn09gmUKg7t+XA5gPd7Eg8dW3w4eDoAqyfIB+LjN4v/
TT4YwPs/jSs3E7oWeAVg/jiPaZsKTyP1aJ8oH4cAPo8zsH26bexkywBULFF/
4hkofzuxrkI/gM/nLLpfeDnllE4AvPSLv156fxadDfPTl68O4PM6B6VBzdgW
CwMw2K296hbOwfr8x3kRWgF8fueR2qaym+uEAESdmXm/5tt5XHyYdGXW8AA+
zz/xz4E7tU36BWCX6ml1bHABVy87fX3T+efzvYDMj7OeHW4VgKbJ54ymNL0I
573fJm5p+PN5X8TxsRfNRv3nj8vq2231F4YMnLGz/j/+fP5/YejSt12Si/0x
V/1x7S/h4p1VHtcy/fk+LiFwfsxt1wR/lKkfd9fL+Nh1/GGdSH++n8uI7Xtg
wrTn/lA/vdjeV9B1S+HB3vf8+b6uIDNt4M2GV1TraL3vi9qBV9HSY6NL5Wl/
vr+reGjo0T75oD8iVZ/Wefg1ZHhd0A3Z78/3eQ1GOff1bzv6Y4dfpQ3GXoeF
/uOR5638+X6v48PwW7cPq9ap6uJUt3wDxf87Vu27xZ/v+wbma1uVeKz1x3LV
4lG9UgwMn3PCdbE/3/9NWOg1b+k6yx/nVU8v+dxNKKaFTHSf7M/1oPr6EoM+
3qP88eHbW6vS/rfQ70jTiMCB/lwftzC347GBp7r7Y4YsgFvIiek+82o7f66X
W6h8eqDb06b+COwoNwSzvB+3Yur4c/3cxhZo1yv46AfN5d1GbMK1lv9V+HE9
3caNU++T2uf7YbT8uYOG5wauG5Pqx/V1BzGZS48tf+MHp6BXqhV0By0XGx2y
DPPjeruD4C/2i0488UOC6u2rngmK05xDwm75cf3dhVuNdc27i37oIx94F0e0
tmV3P+nH9XgXPaO03BYF+sFUT/0C7qGDZ7tyR08/rs978LBPafrI3g8htQNV
b/ge9K/7Fr238ON6vY+XbSfaDTXwQ1vNBSLwZnLcLl0/rt/7SHXWy726xg9y
dRH3oVRWXH23yI/r+QH+TtAdM26WH26fqL74ct4DrF0YY2k/2Y/r+wFM6wyx
fD3KD/Xkhh/gW6nNqC6D/LjeH+J70+BL+j38sFSzYGCi+zkj6Dc/rv+HWFfT
+3WH5n44q77dtw/x4PFUS+N6ftwPj+D+aElW9Gcl/lF/3OpHSKheUXdotZL7
4xG8tRfk+BQqMV29/NMfIajeeOuadCX3y2Nsy/4tfm28Ev7q5bvhMRxqigpC
I5TcP4/RElfujHyuRO5e9Qt5jHYvdBRn7im5n57A06aFS9urSoyUBf4EloZX
3NzPKrm/niD90ORZdY4o4XBAS7VknuDO56Cgvb5K7ren+KEc/+mTixJxveUF
I2TTuVJLGyX331PUbq97+F8TJXqpq3/lU5y6sLSe/Q4l9+MzPOt6aGDjTUoY
q7eH0TMsfRXTNGClkvvzGdbe+PJXzwVKBKvfbs0zpEV1qH9LS8n9+jeiegzq
NGOiEq01GxKjrwwtTx2h5P79Gy0M++0xGaCEPL4vf0Nbr1VIi+5K7ufn6HO0
KuJKOyXk8myeQ7t+kOf8Zkru7+docd658bu6Smg0D8Lmz1bOQ977cr8HwafD
m912Wb746+U81Y4OwqU/myUkRvly/wfh8tlh10c98sVi1W5s4xSEQy3H1z1w
wZf1IAjmpQNe/xfgi89qfUKDMGr095Y7HXxZH4KQWP44MsPQF6c7qzdEMHa0
3fDf8vW+rBfBqLhUfCH+D1/MkRccjGU3VkWuGOfL+hGMs32u62b19cW7i+oL
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
xtg0v6mwp+cpiLsa7LphpD09T0HBlwqrNn3t6XkKSu59z4tqb0/PU/A252Oo
ZxN7ep6C2bWXp5z8vI+epyC04djckVn76HkKOn30MosN2UfPU/B7yI1Pey7t
o+cpGGB4eucw3330PAXvP2pHV5rto+cp8NUu6fFw7T56noIfZ6DjPXUfPU/B
xFDdQIP+++h5ChaFLr+/uvk+ep6KsWfbRCz8x46ep6JG+0TkohQ7ep6KPZ8+
PF73tx09T0W2YafjJuft6Hkqfg1tahDoaUfPU9H+U8TQYCM7eq76vEbLsz6v
tKPnqTj58YrdpCl29DwVvUNiW3r0saPnqTAweOGT28SOnqfiYK399xnvbOl5
KrzXNd9wJ8mWnqdizakt14Y8s6XnqagN8qi4ec6WnqdiW5B1l6metvQ8FVdO
TJyYZmRLz9MQtvrlnH2rbOl5Gi697z57uMKWnqep6tqMsWV9bel5Gho8+73t
zWa29DwNRtW1Ofb/2NDzNJz84XByfaoNPU/D1cq0eVpBNjzvpMH9UZ3SMRdt
oBTP0zBet8Z8pI8Nzz9peFZ2+5/x5jb0PA0dFmPjvPU29DwNWgGHn+hp2dDz
NIy7+3cjv//Z0PM0tL1zSyu0tQ09T8MtX+Pd9b5Y0/N0DJr73XNejjU9T4dZ
3qqDp8Kt6Xk6Dqy28/t+3Zqep8P1qrGN3kFrep6OP7JGrsq0tabn6cio/LuX
9lZrep6OmekdM4rnW9PzdNhfgKvtGGt6ng7fRaN7du9qTc/TYZRUcymyvjU9
T0e/SQ597Mv30vN0/GWbvn9awl56no4WJ+sVtXiyl56nQ3H847DCs3vpeTqm
Wj3YHu65l56no/Womcq7JnvpeQZCIk/9dXXtXnqegbEIv3lj+l56ngFX/yd/
PfvfXnqegYshNsqkNnvpeQZOxDfV+/ffPfQ8A7rPtw4flL+Hnmfgh4d3kU7U
HnqeAaNRjt4X7+yh5xm491Cr76dje+h5BsK7xl9e4ryHnmfg2oahvR7o76Hn
Gdhst8JtwIo99DwD76znZp6dsoeeZ2DVquZ9BvXfQ88z4N7q2OrHLffQ8wzs
v/jRduUnK3qeiR1dewR8y7ai55novLvd4RsRVvQ8E0dPJe3Xv2VFzzNRcm2r
8ZijVvQ8E+2PBs9s5GRFzzNRf0tZk8JdVvQ8E+nNcp5FL7ei55mw8Du7OXiK
FT3PROmHkbXP+1vR80wM/t3HKvJXK3qeiUUrHpRnfrak55kYu/Tawm+5lvQ8
E++HGJ0ZEGVJzzPhXPgjf/1dS3qeiXLr9e1PnLCk51no9c5lfImrJT3Pwsjp
NnMVRpb0PAttTDD/1BpLep6F4H1vpjTTsqTnWZi5a0gPxyGW9DwLp8esfFe/
vSU9z0Jk+vxbyh8W9Fz1902tdAaWWuCJeJ6FwyGn60XFW/C8mwU0+O5v9dQC
v8qCzsKd3gPbjrxgQc+z8G/3Hk4ffC3oeRZ6fsnLe7HHgp5nofUt01HHdS3o
eRbiZsUZ2y+woOdZ2PH46+nd4yzoeTYSm9U839HLgp5no+2kBzGGzSzoeTb6
z5kTbVdrTs+z8cvoC0+OZJvT82w8/hp75HmkOT3PhtbZiO3v7pjT82wc7+/d
b8hJc3qejVj37gkm7ub0PBvxETZGoSbm9Dwbl4sufuupbU7Ps7E879Re99nm
9DwbCU+2FP870pyeZ6OH6Uctq67m9DwbUxuvUNZpZE7PszHW2v51wHszep6D
b1Hq+bkZ93sODsu83Iy+56CRzMfNuP9zME/m4Wb0PgebZf5txnqQg4Uy7zaj
/zmoI/NtM9aHHByQebYZ80AOPsr82oz1IgcDZF5txnyQg+EynzZj/chBU5lH
mzIv5OC+zJ9NWU9yMFHmzabMDznwkvmyKetLDu7IPNmUeSIHV2V+bMp6k4O9
Mi82Zb7I4XzYlPUnB/4yDzZl3shBksx/TVmPclAj815T5o8cpMt815T1KQfH
ZJ5rwjySgxEyvzVhvVJ9vsxrTZhPchAt81kT1q8cZMk81oR5JQdPZf5qwnqW
AwOZt5owv+TgH5mvmrC+5WCxzFNNmGdyYS3zUxPWu1yYybzUhPkmF3/IfNSE
9S8XFTIPNWHeycVmmX8asx7mct5pzPyTi1iZbxqzPuYiROaZxsxDuXCQ+aUx
62Uuusm80pj5KBfuMp80Zv3MxQuZRxozL+UiSeaPxqynuXgs80Zj5qdczheN
WV9z8VXmicbMU7lYL/NDY9bbXHjLvNCI+SoXSpkPGrH+5mK7zAONmLdy0Vrm
f0asx7lwlXmfEfNXLjJkvmfE+pyL/2SeZ8Q8lsv5nRHrdS6ey7zOiPksF6tl
PmfE+p2LCJnHGTGv5aKZzN+MWM9z0VvmbUbMb7loLvM1I9b3PChlnrabeS4P
f8n8bDfrfR6MZV62m/kuDykyH9vN+p+HMpmH7Wbey8M5mX/tpgd5+LZaPe/a
zfyXhyYy3zKkD3m4LPMsQ+bBPPwn8ytDepGHWplXGTIf5nE+ZUg/8hAp8yhD
5sU83JD5kyGk/FvkYY7MmwzYD8qDjcyXDHhezMMGmScZsD+Ux/mRAc+Pefjx
i3peZMB+UR4SZD5kwPNkHudBBsybedCR+Y8+PcpDZ5n36DN/5nG+o0+fVPcj
8xx95tE8TJf5jT69ysNhmdfoM5+q/i7zGX36lYdpMo/ZxbyaB1+Zv+yiZ6r7
lXnLLubXfDSX+cou+paP5TJP2cU8m48JMj/ZRe/y8VjmJbuYb/PxWeYjO+lf
PkJlHrKTeTcfs2T+sZMe5sNA5h07mX/zMVzmGzvpYz4uyjxjJ/NwPp7J/GIn
vcyHucwrdjIf5yNV5hM76Gc+8mUesYN5OZ/zhx30NB95Mm/Ywfys+n6ZL+yg
r/mwk3nCDubpfITJ/GAHvc3HbZkX6DFf52OBzAf06G8+7GUeoMe8nY+t0v/X
o8f5qJZ+vx7zdz46SX9fjz7ns5+vxzyeDz3p3+vR63w4Sb9+O/N5PuZKf347
/c7HI+nHb2dez8cL6b9vp+cF2Cv99u30vABZ0l/fTs8LkCv99O30vADe0j/f
Ts8LkCH98m30vAAp0h/fRs8LoC/98G30vID97230vADHpd+9jZ4XYLj0t7fR
8wLskH72NnpegNnSv95GzwsQJv3qrfS8AKXSn95KzwtUdULdj95KzwswVPrP
W+l5ARZKv3krPS9AG+kvb6XnBTCTfvJWel7A/vFWel6AcdIv3krPC3BY+sNb
6HkBDko/eAs9V32/9H+30PMCuEi/dws9V70P6e9uoecFaC393C30vAArpH+7
hZ4XYJL0a7fQ8wKESH9Wl54X4Iv0Y3XpeQHipP+qS88LMU/6rbr0vJD9VV16
XgiF9FN16Xkhrkr/VJeeFyJc+qW69LwQNtIf1aXnhSiSfqgOPS9EtfQ/deh5
IfudOvS8EP9If1OHnheiRvqZOvS8EAHSv9Sh54XIkH6lDj0vRKT0J3XoeSF0
pB+pQ88LcVr6j5vpeSGcpN+4mZ4Xoqn0FzfT80JMlH7iZnpeiCbSP9xMzwvh
Lv3CzfS8ECelP7iZnhdit/QDN9PzQqRI/28zPS9EpfT7NtHzQlyU/t4mel7I
ft4mel6I5tK/20TPC/Fc+nWb6HkhWkp/bhM9L0Q96cdtoudFOCf9t030vAhl
0m/bRM+LEC/9tU30vAhB0k/bSM+LMEb6ZxvpeREqpF+2kZ4X4ZP0xzbS8yLM
lH7YRnpehA/S/9pAz4uQK/2uDfS8CK2lv7WBnhfhsPSzNtDzIuyU/tUGel4E
X+lXafN8WIQv0p/SZj+oCDekH6VNz4twR/pP2vS8CHWl36RNz4vwp/SX1tPz
IrhIP2k9PS/CC+kfrafnRZgt/aL19Fx1/dIfWk/PizBY+kHr6HkRDkn/Zx09
L8IM6feso+dFmCX9nXX0vAhK6eeso+dF7N+spedF+FX6NWvpeRGmSX9mLT0v
xlPpx6yl58XwkP7LWnpejJPSb1lDz4tR31PdX1lDz4txV/opa+h5MW5I/2QN
PS9GrfRL1tDzYrhJf2QNPS+GgfRDVtPzYhyW/sdqel6M1tLvWE3Pi5Ek/Y3V
9LwYldLPWE3PizFX+her6HkxaqRfsYqeF6NY+hOr6Hkxxkk/YhU9L8YT6T+s
oufFOC/9hlX0vBivpb+wkp4XQ0v6CSvpeTHq9FD3D1bS82I0l37BSnpezP7A
SnpejF+lH7CSnhejrpz/V9DzYsyQ8/4Kel6MGDnfr6Dnxbgm5/kV9LwYr+T8
voKeF/O8voKel+C7nM+X0/MSNJHz+HJ6XgIdOX8vp+claCjn7eX0vITn6+X0
vITn6eX0vASP5fy8jJ6XwFPOy8voeQluyvl4GT0vQWc5Dy+j5yVIlPPvMnpe
gmQ57y6j5yUYLefbpfS8BG/kPLuUnpfw/LqUnpfw94GX0vMSWMr5dCk9L+F5
dCk9L+Hv3y6h5yV4LefNJfS8BE5yvlxCz0t4nlxCz1XXK+fHJfS8BFZyXlxC
z0uwQc6HS+h5CXzlPLiYnpeglZz/FtPzEqTKeW8xPS/BOznfLabnJVgl57nF
9LwETeX8tpieq96fnNcW0/NSnJPz2SJ6XopsOY8touelOCLnr0X0vBS/yHlr
IT0vxVc5Xy2k56U8Ty2k56W4L+enhfS8lOelBfS8FDFyPlpAz0sRIeehBfS8
FCvl/DOfnpfCVs478+l5KWbI+WY+PS9FoJxn5tPzUjjL+WUePS9FazmvzKPn
pRgj55N59LwU5XIemUvPVZ8v54+59LwUg+S8MZeel+KmnC/m0vNSxMp54g96
XgoPOT/8Qc9LkSjnhT/oeSlC5XzwBz0vxTQ5D8yh56X8/Z859LwUbSTvz6Hn
pdgo+X4OPS/FdMnzs+l5Kf6W/D6bnpchQ/L6bHpeBmfJ57PpeRmiJY/Poudl
eCD5exY9L8MQyduz6HkZtCRfz6LnZczTM+l5GX9/YyY9L+PvY8yk52WwlXw8
k56XwVvy8Ax6Xsbff5hBz8tgJnl3Bj0vwyLJtzPoeRmeS57VoudlCJf8qsX+
bxkMJa9qcd5ThsuST7XYDy7DHsmjWpz/lDF/TqfnZfgieXM6PS/DScmX0+l5
GeIlT06n52U4I/lxGj0vQyvJi9PoeRlaSj6cRs/LcEny4DR6XoYsyX/T6Lnq
65L3ptJz1fOUfDeVnqv+LnluKj0vx3nJb1PpeTmSJK9Npefl0JJ8BnpejgZn
1XkM9LwcVZK/FPS8HB0lbynoeTlMJV8p6Hk5/pM8NYWel+OB5Kcp9LwcRyQv
Tabn5cxHk+l5OdpIHppMz1XfL/lnEj0vZ96ZRM/LMVzyzUR6Xo6Jkmcm0vNy
eEp+mUjPy9FQ8soEel7O+c4Eeq76fskjE+h5OQ5J/hhPz8uRIXljPD0vZ74Y
R8/L8UHyxDh6rro/yQ/j6Hk55xG/0/Ny1Jd88Ds9L8cuyQO/03PV18X/sfS8
HIni/Vh6Xo5Y8X0sPa/Av+L5GHpegfXi9xh6XoFa8XoMPa9gf3s0Pa/AbfF4
ND2vQLL4O5qeV2CkeDuKnlfw3+eMoucVMBNPR9HzCuwQP0fS8wq4ipcj6XkF
EsTHkfS8AhvFw5H0vALNxL8R9LwC/4h3I+h5BX4V30bQ8wrcEc+G0/MK/Cl+
DafnFfgsXg2j5xW4Kz4No+eq6xGPhtJz1fWIP0PoeQWmiTdD6HkF3MSXwfS8
AqPFk8H0vAIQP/5HzyvwVLz4Hz2vgLv4MIieVyBSPBhEzyuwU+r/QHpeAW2p
9wPpeQWeS30fQM8r4SX1fAA9r8Rdqd/96XklJkq97k/PKzFC6nM/el6JfVKP
+9HzSoyU+tuXnlfy98H60vNKREh97UPPK3FL6mkfel6Jd1I/e9PzShyUetmb
nlfiuNTHXvS8Eg2kHvai55VIkvrXi55X4hepdz3peSXrW096rrofqWc96Hkl
8qR+dafnldgm9ao7Pa/EdalP3eh5JZ5IPepKzyvhKvWnCz2v5HmqMz2vhLXU
l870vBIXpJ50oueV8Jb60ZGeV2KK1IsO9LwS16Q+dKDnlfgk88b29LwSX0ap
9/9v9LxStT7U+/03el6FlbK/29HzKu7ntvS8CnGyf9vS8yrclf3ahp5XYaPs
z9b0vAqvZT+2pudVqCv7rxU9r8J3A/V+a0XPq+An++tXel6Fq7KfWtLzKsyR
/dOcnldht+yXZvS8CiNkfzSl51WwlP3QhJ5XYZms/8b0vAo3Zb03oudVOCfr
uyE9r0IPWc+/0PMqDJL124CeVyFI1mt9znurkCfrsx4KxPMq+Mh6rEvPq1Ag
668uPa/CZVlvdeh5FWplfX1XaDyvQpisp28KjedVOCXr56tC43kV/GW9/KvQ
eF6F87I+Pis0nlchStbDJ4XG8yq0kPpfq9B4Xo1d8r4/aF5H02oUyPutUWg8
r4a+vM/3Co3n1egk7++dQuN5Ne7L+6pWaDxXfZ68nwqFxvNqLJX3UabQeF4N
E3n+JQqN59X4W553kULjeTWmy/MtUGg8r0atPM88hcbzauTJ88tVaDyvRqMN
6ueVpdB4Xo0z8nzSFRrPq3FSnkeKQuN5NRrL/ScqNJ6rPk/uN0Gh8bwa7eX+
YhUaz6thKvfzWqHxvBp75fojFBrPq6El1xuq0HhejRK5vmCFxvNqXJTreaLQ
eK66Xvn59xQaz6vRQX7eTYXG82pYyuf/pdB4Xo1M+bwzCo3n1Wgt//8BhcZz
1fvR/D6/QnN5P79urtB4Xo1mmvO+QuP5O/z8d+j/B69VWE8=
          
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.15}}, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {
       FormBox["\"Frequency of free-living mutant (M)\"", TraditionalForm], 
       FormBox["\"Frequency of definitive hosts\"", TraditionalForm]}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.1112170208529133}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.837768508243759*^9, 3.837768515519766*^9}, {
   3.837768560878128*^9, 3.8377686062617702`*^9}, 3.837768998689988*^9, {
   3.83777086238243*^9, 3.8377708760413427`*^9}, {3.8407866798914433`*^9, 
   3.8407866862660522`*^9}, 3.8407867292500677`*^9, 3.840786805617982*^9, 
   3.840797493859479*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"2fe5c6f5-b233-4613-a522-6e55305d3916"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"parm2", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "8"}], ",", 
     RowBox[{"k", "->", "1"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837774934647991*^9, 3.837774934911751*^9}, {
  3.837775315394993*^9, 3.837775316561699*^9}, {3.840798076978795*^9, 
  3.840798123654435*^9}},
 CellLabel->
  "In[411]:=",ExpressionUUID->"9835218f-95b9-4a1f-a7ea-0aad65d22e52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"m", "->", " ", "mRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equism2", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "parm2", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.837775329137692*^9, 3.837775332064028*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"75508f9d-df39-4c67-80f0-0b60f8437b01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"totalI", " ", "=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Iw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"2", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Iww", "/.", "equism2"}], "]"}]}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imut", "/.", "equism2"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"+", "2"}], 
        RowBox[{"Flatten", "[", 
         RowBox[{"Imm", "/.", "equism2"}], "]"}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalD", " ", "=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Dw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"2", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Dww", "/.", "equism2"}], "]"}]}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dm", "/.", "equism2"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"+", "2"}], 
        RowBox[{"Flatten", "[", 
         RowBox[{"Dmm", "/.", "equism2"}], "]"}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wtypejul", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Iw", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Iww", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Imw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalI"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mutantjul", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Imut", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Imm", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Imw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalI"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wtypead", " ", "=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Dw", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dww", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dmw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalD"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mutantad", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Dm", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dmm", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dmw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalD"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "wtypejul"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "wtypead"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "mutantjul"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Black"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p4", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "mutantad"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Gray"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p4"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8377754868900957`*^9, 3.837775518419504*^9}, {
   3.837775554173025*^9, 3.8377758084380207`*^9}, {3.837775841404512*^9, 
   3.837775868932027*^9}, {3.837775961149732*^9, 3.837776011985723*^9}, {
   3.837776077596027*^9, 3.837776284822157*^9}, {3.83777633860919*^9, 
   3.837776355248296*^9}, {3.837776429651905*^9, 3.837776460968836*^9}, {
   3.8377764920974092`*^9, 3.8377765676633177`*^9}, {3.837777421913932*^9, 
   3.837777423616329*^9}, {3.837777539422263*^9, 3.8377775531456013`*^9}, {
   3.837777805309475*^9, 3.8377778076202173`*^9}, 3.83777790225456*^9},
 CellLabel->
  "In[414]:=",ExpressionUUID->"df6c6df2-da37-49fc-91c8-08c8fe9b2752"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxV23dYjf//B3DZ0rQJCUW27MRThWyZ2SOjZK9PJMmIzCRJUWlqkPbee49T
pz3O7pzOOSXJSvxOeX3/+PWP61zVfe73ej6e9+miYXp++4m+ffr0EfXr06fn
3///9Rm/A9sZm02NYW87bcKJ+jZ6fQSOhaFKfeLa8MvGIvGKkzleLrl+otT5
f9+/gL/PbkcwL7XhxogQI7bVFcy/3vJY2fh/P38NIzmf79yc3YbrIq35gz9Y
Y+HVltnqQ//3+7ZgTDWY8lXYCr2mrU9dzt3BrOQrv7qyW+l693DokeKmxX6t
iF+v0Hfmg/vI7vIO877bSte3R7FZedYq01boRub+l+z5COWF+lNV9Fvp/Z6g
xOfFKZVJrYidaCfeFvsMfZLNF+j/ldL7P0fmbNNJ3o1SvM2cFHrJ3BH9l48s
1UmW0v28QICpIveLuxR1P3vfEIpHc3+xb0rp/l5irlFE3N+DUqjNbZg68LYz
nrhNy9i4Ukr3+wpbb5knZE2UYt/x5T1XRJHE0+jsXwnd/2ssl9QpGrAkcHPt
/cIg9tAowzQJjccN+nXdvIveEtQUf9/B9XsD0479awvvSmh8bxH7KfDO9hMS
jO2/W2l2uDt+XNJf3d9IQuP1wKiv2xazp0uwZ1nvBfEjua6/SF5C43+HRckh
B9SkYmxa8lD/CP8dDhaZiS1LxDQfXvi849zhP2FiSLb1XNELucJ2s5CXYpof
byR3N0c+sBTj8ZnmrsB2b9g5Dfn+cJ+Y5ssH/p2lTZErxJj5YJRsCD5YaWOp
MVhDTPPni+CjHefu9hejwGtNdEe3Lxpud97QErbQfPph6vrm358LWnBaNltj
+vvD+onQn/OphebXX7afiuZ2ObVAvsrnwgr59wi7OH6L7rUWmu/32DNbIc7z
QAuCeoarEoBzDrenz9RvofkPgCBVcVe9Zgs29FxuVCAal0q+h8u30HoEoqik
T0FImwgtPdM9Pgi7a5j2JRUiWp8gHFvtJhkRL0LP7JVODkZFmnq4jaeI1isY
xu3Vzgp2ImgfcEjvnP4By15W7Uy2ENH6fUBldv4HJ2MR8mRXGzf3I3aje/+T
xSJaz49gvNihETBehFOOUmssCoGy7YZEQV8RrW8IPqNTYiQSQnZzsiF/gndd
1+WCEiGt9yfMt3cddjFaiJ2yzSNbUqQPevNoqbuQ1j8UXcoHPTTuCeErm70q
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
Q543YuHh4hFR3jnkeSOESZ5pZU9zyPNG2B4KnPfnWg553og+5lXbdI/nkOeN
GMedMfL+1hzyvBEXXOMs2Lo55HkjlDo/GmzSyiHPG6HJWvs0WzUHCb2eN0LO
r0rXuDubnncbMbE4Z7lImA3l3g3diHcDnWwdK7LJ80Z8/pX7c11qNnneCKdl
iq+VP2ST541YOWL0Jr5LNnneiBG3wwbm380mzxth9Ds+Nul8NnnehE+nNHek
7s8mz5uQ960zu8womzxvQtPv1QO+LMgmz5twhbvi76RJ2eR5EyL6qvsfUsgm
z5tw8P4ycdCPLPK8CR+N21MG8LPI8ya4NiSOPF+WRZ43YbaWZqMgKYs8l72+
lyV/NiiLPG9CtfPGp3IuWeR5E75pWJr43s0iz5vQ2jV2/64LWeR5E7YKRz8a
cTCLPG/C2tsnK9nrs8hzFi6pKeokLc6i885CfdBUB/8pWeQ7C6oBVU3uKll0
/lmw6zw6yqc7k7xnYVyWimZ0SyblAQvMmwZ/KqsyyX8WIrxOvhyQlUn5wEJ1
RHeNfngm9QEWoie6pj32zKS8YOHhuLoV3CeZ1A9Y6HT6T3+dVSblBwvJw+am
xJtlUl9ggf2uOlB3VyblCQuPwky+5hhkUn9gwXqwl6PpvEzKFxaee8VdkZ+Y
SX2CBbyOfp4yNJPyhgUH5aTq2z8zqF+w8HNs31XbmjMof3p+Pz9uNjOD+gYL
e4xPLxudkUF5xEL8tXXhimEZ1D9Y0PjDHK3qmUH5xELKCpeDGk8zqI+w8Ob7
RMuVNzIor1i4tkR5j/mpDOonLGxeOfarh0kG5RcLzqe7V3LWZFBfkc231uNZ
OgszKM9YuJH3LvTZ5AzqLyy8tJ+Z8l0lg/KNBdGhaZvO/k2nPsPG1O8eG9uk
6ZR3bIx7FRx2sz6d+g0bBwZcvTSmIJ3yj42Qm/PvpMSlU99hg+WoybwUkE55
yEbCWN/DOi7p1H/Y+DFeadQfu3TKRzZOJzMkzCvp1Idkr6edr447lk55ycay
y+eKArenUz9iw8PtVKqffjrlJxvehwf5f5yXTn2JjXPLfl9KU0+nPGVj0yr5
8WyldOpPbOSOlXul8CeN8pWNbl4S01CaRn2KjVatmaX369Mob9mYEbPKilmQ
Rv2KDd0P/fLmJqRR/rKRvu5+mHNQGvUtNkYLm6cPckujPGbjkXjn1HsP06h/
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
eesleS7BoYNGL2LXvCTPJXCM1TpRN/QleS7BI+VqtQkMJ/Jcgqp3671uvnYi
zyWIOmfN+n3IiTyXQDzjXqabphN5LkXJ5AdLTSQvyHMpVGYmT9OJeEGeS8F7
fOXmTKsX5LkUxtJBmob6L8hzKdYaCodcH/yCPJdCI95ldFGJI3kuxUifoGVw
cSTPpSg6krO/5JAjeS7F4J3+p25qOZLnUpzMVd26vvU5eS67Ppv/XSf6OXku
Rfh9FWNdm+fkuRRm2x0ND699Tp5LMeDm9WQvpefkuRQPXlXt7RfiQJ5Lcfbb
0m/dKx3Icyk+HvOesaD0GXkuRX5pWon30Wfkuex6kWbJmzqekudScDj3S+bZ
PSXPpQg6u7B+y+in5LkU/W+8T/IPfEKeSyGZsmzzUr0n5LkUzK3Hj/creUye
S1H8PKt+kOlj8lwK7t9xz9d0PiLPpWgeu3pPov0j8lyKn2/0lc+Mf0SeS/Hw
yCKHnaEPyXMpXumZhl9d/ZA8l8K3fuaOkmp78rwVVt6jNh09a0+et8LmTo7l
zL725HkrfNn9wma7PCDPW7HschjDbNYD8rwVU0dXxtSk3SfPW/E9xmX5XZP7
5HkrbmvrLTsutSPPW7FukPYT67t25HkrTJ24yoVj7cjzVix1Vnm3PfQeed6K
qKVXxqgY3SPPW3FY2r6zf+Nd8rwV+WuezJ979S553gqtquOPnivcJc9bUTom
cfl03zvkeSsMVrdrfFt+hzxvRdfCO2N/ld8mz1uRvm7o3wVnbpPnstcw+uTT
/zZ53gqdCcqD1rvb0t97W5EwaB93ymJb8Ho9b0XiTisDc49b5HkrbsyoWt5R
akOet0J7xZmzwn425HkrLtiPemG05CZ53oo/Y1qPq5y2Js9l4yld42XgeYM8
b0WeVnDfxnIr8rwVlZ/5qzmDrchz2fxq/JiydeV18rwVas8mHJh65Rp53oac
yILAo0GW5HkbkmzC8gay/yPP2/BiYMy14WP+I8/bMOpg9+UHW6+S520I39J4
zfTBFfK8DTe1Jat9Uy6T5234eqfdedOPS+R5Gx7/+ay9f/4l8rwNyiM0U0os
LpLnbXhd+Xd4kO8F8rwNJpa7isuTzpPnbdiUpdA2YcE58rwNtrE7B+sEniHP
2zCNn/daedJp8rwNlpyr6tEup8jzNkTUFatpqpiT523YqRGjeODhSfK8DWMS
rK/u63eCPG/D0V/V5eo2x8hz2fcVPwcG/zxKnrdhhqPx9e6rR8hz2fxsEzzQ
Fhwkz9tQO+7KGA57H3nehuIt7MApTSbkeRu89F8ZSBt2kudtMP9ZIFrRuI08
b0No5Kit2qmbyfM2PA/cM4SdbUSetyF4WtBIr1J98lz2fpE81ZL4JeR5G/5z
yBbkRU7D//7f+f/+B/r/AfreZ9I=
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
i4e6SdvWb+bJcxaBK7vcH7mVJ89ZXE0oln1148lzzTkoLmxCrDtPnmt677Tp
V7128OS55hz2ZEyrWbt48pzFzxSDE2338OS55lyRFdHlw16ePGcRu8Pn5TkP
njxnUZdjtXH+AZ48Z5F58MgI3UM8ea451+4Rt8w6zJPnLHqNa197+ghPnrMI
DrxWa+3Fk+csjPsYt2nhzZPnmnP9Xoex8cd58lxzTvyesHv/SZ48ZzF6Taus
Mad48pzFHkniZLUvT56zsBl5PuXeGZ4815xDXdq6Lj/Hk+ea6/fO7Kd3nifP
Nefobdtqk/148lzzecqzgn0XePKcRfNL8cphl3jyXDPe/G3dyss8ec7C/0fS
gv+u8uQ5C89hyaFTAnjynEWHfWZDues8ec7iv4WRSTdv8uQ5h73B2QdsbvPk
OYc64QC7ujs8ea7pjZ8mzQkK5MlzTW5bvHSeH8ST55qe+XBAwPf7PHnOYUBg
x8+BD3jynMMKvd7uNo948pyDaGV2h9rHPHnOIXJHQva1EJ4815xL4o68nBLK
k+cc+o26HS9+xpPnml5p/pTzCePJcw7KjxOnm0Tw5LnmfrYWxWVF8uS5pufp
dVzt/pInzznwFh7G+tE8ea4519QFdA97xZPnHKrytEcviOHJcw5/RNN2sG94
8lzjZrK4/HQcT3/v1TzP1Z3bjeN5SJo857C03cFRyQk8ea45By061dMpiSfP
ORw3Nhr1PZknzzU9Mq98u38qT55revxAs+qh73jyXOPm7rgDie958pxDxOOf
05dl8OS5pleP2zuJy+TJcw5v9V6t8c7iyXNNz0ixju6ezZPnmnWw8enkkBye
PNe4cmtrrWUeT55r9pm/bml2Pk+e87Bu2aPGuZAnz3msna47qaaIJ895hBrv
jT5awpPnPOr7FKzXK+PJcx7a/Z7OuVXOk+cat156OQ+r/Oc5j0VaJSFRVf88
13zOE9Ph0wT/POcx6bO+6IPwn+eafRxSl7VE/M9zHr3MNnyqlvzznEe/04I5
G2X/PNfkuKmkjJf/81zznLNrg/Yq/3nOY7r36eAG1T/PNdc1Hi7wYv55zuOz
3pLFrbh/nmv2/fOTzU/z/zzXPE/7yer2Nf8817w/9bPu+dp/nmt+6pls0//y
z3PN579wauv/9Z/nmvHp1U6oX/fPc41zFk+/nv/+z3ONw4/jrHV//vNck/uX
Y4rP1P/zXLPPkvs+aPPrn+c8rl5cE3n89z/PP/3fz/8BCJUNkg==
       "]]}}, {{}, {}}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.837775869356822*^9, {3.837776005076311*^9, 3.837776012421256*^9}, 
   3.837776165794085*^9, {3.8377762309220133`*^9, 3.837776285857704*^9}, {
   3.837776342315796*^9, 3.837776356430626*^9}, {3.837776463359365*^9, 
   3.837776568093642*^9}, 3.837777424649634*^9, 3.837777502202667*^9, 
   3.837777554155157*^9, 3.8377778081833277`*^9, 3.8377779046343927`*^9, 
   3.840797500471313*^9, {3.840798084676292*^9, 3.840798132722608*^9}},
 CellLabel->
  "Out[424]=",ExpressionUUID->"e4907075-da41-4f01-bc09-eca265e1a41a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}],
      ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", "DotDashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", "p5", ",", " ", 
    
    RowBox[{"PlotRange", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", 
         RowBox[{"mRange", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"FrameLabel", "->", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Free-living mutant (M)\>\"", ",", " ", 
       "\"\<Frequency of intermediate hosts\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<Ihost_mutantAndResident2.png\>\"", ",", "%", ",", " ", 
     RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.83777536423276*^9, 3.83777537307477*^9}, {
  3.840798133807971*^9, 3.840798164066016*^9}, {3.840798276482026*^9, 
  3.8407982834268637`*^9}, {3.8407983307247677`*^9, 
  3.8407983619399157`*^9}},ExpressionUUID->"b3d11404-db2a-49f1-85e1-\
ac81182ee172"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798]], 
         LineBox[CompressedData["
1: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
Z2WR5wq4BM1/bB6VRZ4r0L/v+Ho7vyzyXAGH8g7JJ+9mkecKONYf6XDlTBZ5
rsDoa20y7u7PIs8VsN+36vODLVnkuQLu6VVeD5dnkecK6Ex1iPSYlUWeK7Ap
Yef862OyyHMFouUHprv1ySLPFXj5dOijfX8yyXMFGDPbOFqqM8lzBULOh7+c
J8kkzxXYEpO4fEheJnmugP6Z95ZfYjLJcwWO1k7KLQzIJM8VWHIh0tf3fiZ5
rsCA/4TSQ+czyXMFHlhPdp17KJM8V2BBlvHpX1szyfMa6Ad7CZNWZpLnNUgP
Zj5wmZNJntfgAP9AqOG4TPK8Bpvf/Bgp65tJntegT/cu9fd0Mslz7fvmI3Xn
12eQ5zVgTiy4UyrJIM9r8IrxyOZsXgZ5XgPrtC6XBsdmkOc1cOgU9v1dQAZ5
XoMfbbunm9zPIM9rkOz+Vlh0LoM8r8HBZF3jTQczyPMaPLNiqMXWGeS59vot
Nyu3rMggz2tgZLBoKndWBnleA/uwTokrx2SQ5zWoGDvjTkLvDPK8Bt1nmb4e
/zudPK/B2vqMNndU6eS59vezp774KEwnz7XjPet8Zk12Onleg6gw9tPAqHTy
vAYXgnt8+uGbTp7XYLDXvBur7qST5zXo+Iln/cg1nTyvAffuTjvpnnTyvAbh
b6xfDbNKJ89rMLl6oZ71knTyvAaq5TdzPAzTyfMamM/78CpzWDp5XgODq+bR
jV3TyXMlzu9M+DS0OY08V2L01jO7FlWlkedKHNrb+5cNO408V+KHrC79dEoa
ea7E6ks3I++FpJHnSlywt8v3e5pGnivRvr2mc9iVNPJcCSPjlweij6aR50os
WvupKdY2jTxX4pzQ+nm0eRp5rn0tMHMMm59Gnitx+s1ci5cT0shzJYb1emLl
0S+NPFdCf7T0lGubNPJciak2J6Nt61PJc+3n+0q6mkhSyXMlLg47fVIvN5U8
V6LnwYxvje9TyXMlDrtPuJfpl0qeK2EX1n+ex51U8lyJZz4/Gze7ppLnSizc
bvZh6J5U8lyJIosDniLLVPJcCb8FxSfum6SS50qELCizM52aSp4rMSG/07bP
Q1LJcyWWJUZZv+iUSp4r4eHqlXytJoU8135+tCszNy2FPFcioVaq+O2VQp4r
YfbgTptJx1LI81osKrUZYm6eQp7Xwuf18Gn241PI81o8cHtsdPRPMnlei66+
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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
eg3nvtHxmMgpmTdl7JHXlC9MfBg2IP2h1WtskmyuXaMyMVdaSVs69DXlTSZs
X3cL7Speo/1n3w1nInGjw5U5g95Q/mRiwxa9D+lL36Bvt0i2DLIC466cO/6G
8igTD1Ryu8Y9lLjdvyEzYWj02YAb9YbyKRM3Xt3relj3Bv2Xk2FBKoh5TWO4
M+UVC7PNBw6areKM/jg6xEKzjZPbT11nyi8WrCfztzQ8c8a/+sCCWOXb19xE
Z8ozFkRhRunMFmf0x0EFC3dH3nZmjHtL+cbCaI/bttkb3uJu33GeyobIjGVX
pf+W8o6NO5d9Y3od32JB/wFiw3q6We9k5lvKPzbsKu0Pbu1+i4L+esGGco5G
ifk0F8pDNo4UDTVPUHeBWd9xqGPjscv4rX9NXCgf2dBy4K3W9HDBzL7tLJ+F
B+JnR4J5LpSXWbAKjPUa/dUF3L7tp5sF+9secjfnuFJ+ZmHxp4BcsYYrrvQt
r1cWzmgvC79s6Up5moVRaQ7cL4GumNJ/4LOg9Et5um2ZK+UrB6oJ1wIVBroh
o294czm4dTTqOmepG+UtB/vGaFpf03GD3sW+FwemZdGFi2zdKH85MLyy8UJH
rBv6ypMkYZGjd3hzdJMb5TEH5hNO6tmMcUdfOpp3cDD1VVrVaVV3ymcuVHNq
Xbbpu+NU/wW5qL2sELbSyZ3ymotXf7/IKGa6Y2h/QHHxgcXKVxS7U35zwS/4
KFCe4YG+1ZgYzoXvQPGBnbs8KM+5aJKeK3/B1AP97U7MxcKjf3Y99fGgfM9G
jrKoIrnQA3/6jtuKbAiitHm9vz0o77MhDI2bs1rpHfz7tvN/2eAVmbRZa7+j
/M/GRZffEysevMP+fzeM+v28KJWYd+SB5PpDdme4N77Dl77l+JwN7eKv76Sl
PcmHHMy+OkU2S84THn23uyYHF+TVDj5S9iQvcrDskf/2/Xs8sb1/AnMQnPr0
+zRJ7/znRw42rVtk1GnuiZ5+HnJQ1JD8LuOlJ3mSA/5PS6e3/p543RfvP3Ng
vDl0v3maJ/nCQ2XeA75OqSfU+heEh/0LdozbJvIkb3g4tnGp7IqBXmjri9c7
PLToW/QoTPMif3iwNdJ7Om25F/7FHw/O19f0TtzhRR7xcHzKogWTTnmhP14G
5mLNEcuF0294kU+5qHQ2+TbnmRf6j+/WXJxK2OW80seLvMrF8/fqw7cne6H/
eDzIRU9PwN5TRV7kVy7+cqPO3Wr3wr/tlwuTX34a7n+9yLNcLDXnjmdP9kZZ
3/IO4yPS/liIeIk3+cbHkLGecrPUvXG7f4R8zJzRcOnICW/yjo/OwzqvXl7z
xrz+DcjHbcYxp/wn3uQfHyieaSbj7Y08fv8Lqwx61+gkeZOHfHwpnV4VWOiN
Gw59gZqHcfxanZ9Cb/IxD9NNrZgH/3pDrn9D56H64r6REZN9yMs82L57un7c
Uh9k9T9e5aHmxX1NU3Uf8jMPp8ff2d90wgfGfXFanIf7JmyVA5Lnhn+e5oGv
5ynNeeqDSf0HJB+ysiey4ONDvuYjctaWq+nJPkjriwOtfFy1dB++pdiHvM3H
Qq8ke16HDy70P37lw+aqYJT2AF/yNx+mquctOqf6YtS/A4fNmU+rrJf7ksf5
CFf2Xyq/0xf922V6ATauHHAz47Qv+VyAk7zO1AtmvuhfjhMFsLGM+jbupS95
XYDLa32XMv198e/xrAAap2R0TdN9ye8CiNL3vFhe7ov+yzUUoM3VM1nc7Uue
FyI/4ExbzBA/Ou+F0B/aKHNbzo98L0ThXuPNe1T86PwXIsJa55r8Pj/yvhBn
5H4HfTnvR3lQiOUj/NpKLP3I/0KY+Porxjv6UT5Irpd8xMw91I/6QCHOvxia
/5jtR3lRKDnXo5ffqvWjflCI4REMD5NPfpQfhdiRel3WeJQ/9YVCmElbBRjP
9ac8KUT5uHXbrm3wp/5QiGX8Lx9vH/anfCnEQK9xcc+N/KlPFKHFoP6pt40/
5U0RLC0SzVPd/KlfFCHP7qtlTaw/5U8RjnR8evuX7099owjnlo8oWtjqT3lU
hKm2r+Yc/e1P/aMICY9a7Z9MCqB8KkKB6plZrCUB1EeKcHq+bp7U9gDKqyIo
QM1166kA6idFCOo9+vSpaQDlVxEcFox4V/kigPpKERKVoysUAwIoz4pgJgpb
fS8jgPpLEVLtddLqKwIo34pwrH2a8ab3AdRnijFp9s4dAcMCKe+K8addfd+E
2YHUb4rx8tw1K5t1gZR/xShSWiH4cSCQ+k4xAg83XjM1CKQ8LMZXfcHqr/cC
qf8Uo9Dw7eLbroHo3+53ihFUqac1LDaQ+pDkZ5/IOGd+IP59fVAM93UVe5a2
BlI/KsYlK0zP+R1I+VmM6RX7FC71PUf3L28xFk7WuzBmWRDlaTEcX75vSdwR
RP2pGJvHanrr6wZRvpbgR7XIQ84iiPpUCdKiFWsrXgVR3pbgV+E1nTfBQdSv
ShDauVT+BCuI8rdE8rzCnje/Noj6Vgmcdrtd+/wpiPK4BB5nZg3njQ6m/lWC
CZOThT7zgymfS/DTpmTcfQRTHyvBoh0VD/S0gymvS6BvsnznAZNg6mclKHHc
fWzTk2DK7xLUpb9KVvYJpr5WAk+L/4yXpgZTnpdgFP/YtSVlwdTfSrBsfVze
ip5gyvdSrMn6eFtVOoT6XClqRFYPds8KobwvhUVwfuupdSHU70qx/9YeT/OD
IZT/pfDR0ot/YxhCfa8Uc2LsF6XahJAHpSh6oPaz1T2E+l8p3LbULp6UEEI+
lEKhti5jV2EI9cFSaLPj4u53hJAXpTjbVT6WNTCU+mEpBmfFFkjPCCU/SsFW
Y305oBJKfVFyPZ7pQ6/9oeRJKQqPbrP6ohdK/bEUZdperZrWoeRLGXrSByVG
uoRSnyyD96+mb5NiQ8mbMlgNiQmyygulflmGI/t7ct+3hZI/ZTDOG3nmolQY
9c0y8H/cN2iaFkYelWF/YUHHmVVh1D/L8CVHv1G4N4x8KsO0tmyNaxfDqI9K
Pt/PYN1gqzDyqgyqo3I8XN6GUT8tw2PP09arY8LIrzJcMgoWVPDDqK+WYdXv
eew7bWHkWRlSz2ksUJIKp/5aDrGy7+i6aeHkWzn8HnubO64Kpz5bjnF/sy8d
2BdO3pWjN/61YIJeOPXbcqQefdpSYxVO/pVDOGqBSZBLOPXdcsg+6nxsGRtO
Hpbj8i+t5Ufyw6n/luPRwp4Lq9rD8e/ryXIM27dy8ZSBEdSHy/Fyhb+N1IwI
8rIcs+bmXRWrRFA/LofKd8WPzRoR5Gc55o/aNqL+UgT15XIowj257n4EeVqO
jJ8pg5vdI6g/V6Bm5fzO7oQI8rUCU0+eNfpTFEF9ugKDbn19NrErgrytwOsn
8fOnDoqkfl2BAx5+FQvHRZK/FTBVH318g1wk9e0KqI2PDj+oGEkeV+B8hXa5
4ZpI6t8V2BDNKXq0LZJ8roBIiunlfyCS+ngFjPRG78g+FUleVyAh3ySzyzCS
+nkF6s7HTpxoEUl+V2CZu6ua2sNI6usV2Le8Z5OhQyR5XontM67NcPWMJM8r
keP7oSgvLJI8r4TioRVnB6VEkueVePHle55qdiR5XomhvhMmm5VFkueViIrf
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
7YutbhskU9+S/H+PRPsqi2TK4ya0Tnw/fd3jZOpfTbjVaD7dzTmZ8rkJ8/Yc
sh8YmEx9rEkyj3fvGyUkU143QXmAlLiKk0z9rAmpqaVlu8uTKb+b8Pnr37UZ
rcnU15qwvvr+tDWfkynPm5DXedY8enAK9bcmKI331FoxMYXyXQBZJ7W4mDkp
1OcE+C6/xWndqhTKewG4CeFfM7ekUL8T4FyObZ3GwRTKfwFS5Mt2NJ5Job4n
wNdm5zXXTVLIAwHc/KvCRlqnUP8TIOuIe4i/XQr5IMDOLZ0r1D1TqA8KIJTn
bhZGpJAXAlhKqdY+y0ihfijAolP7Bq4uSCE/BLg7fmicoD6F+qIAiVrGn+17
UtAf/6YCFPGfsrf/SaHvgwTIuWEw58/oVHpeFKA6XmZCklwqfT8kwGXtF45m
S1Lp+VEAj4fCwHUbU+n7IgHmFi088HdvKj1PCvBW6eSL7BOp1DcFCOt+ecbJ
KJU8EkCnhJ97wTKV+qcAH37NzF/3LJV8EsBU7HRpvFsq9VEBvBxV33WFpJJX
AmxWlb+am5JK/VSA1W/21IXlppJfAjCYRUKHmlTqqwKEr8uwuy1KJc8EsGhW
qDL4mUr9tRmvho/K1BmZRr4148yJJ3s1ZdOozzYj9GOYxU6lNPKuGQm7Hu3e
pppG/bZZ4tMCxtY9aeRfM2SXv6vZrpNGfbcZ1SlSHvsM08jDZhgOODVM+1Ya
9d9mzLPOkb34NI18bEa9glaVmWsa9eFmqK2esuV5SBp52YyO/2Yd9U9Jo37c
jDffHkxj5aaRn80w1jjxpLkmjfpyM0bpJwZLd6WRp83Id424texXGvXnZnwJ
Pfrn+Kh08rUZ7zmcVU9mpFOfbsbZOxPk0hank7fNsCw6nNK7IZ36dTNmLPQe
u3RfOvnbjD+HJsganUynvi25nh2jPsw4nTxuxsgHmTq9t9OpfzejbtNKhw0v
0snnZjhi0cPHHunUxyXzq8dUqQ5PJ6+bMX74JJ+lGenUz5uxo0mt4GFBOvnd
jNQpx1MEDenU15vRgnv6W96nk+ctGH6spMJPKoM8b4Fl/qURo8dnkOctyDE7
O8B8dgZ53oKvztVpbSsyyPMWBAvEm45tySDPW3DqP8bTgoMZ5HkLXhQbvNt1
LoM8b8HAn6Nvc69lkOctEGrmzNtlk0Get2BGQKpLvmMGed6C3WrD6o76ZZDn
LZiXxe9uicsgz1uQoq2Uf4OTQZ634IqN+t0RFRnkeQt0tmwc6CPMIM9bcP2n
sja+ZZDnLWhmLWBeGcwgz1ugOaWSwRzFIM9bcPZQWsikSQzyXHK9p5fuGcox
yPMW6I+4os6axyDPW5B1SPfzjKUM8rwFZQqF9uarGeR5C7YYHpAvV2OQ5y0Y
d8zMWWUHgzxvQYxm2YA3GgzyvAWbxH+O/zjKIM9bYDLC1ve0LoM8bwEvcnAD
R59BnrcgetHwkctNGOR5Cxw+L1rkasEgzyXznfdz3bB7DPK8FUZ+E9TMnjDI
81bMDRy6ut2eQZ634raqgYKOK4M8b8WNPyWDCn0Y5Hkr/HKqqreHMsjzVuhF
jA/MiGWQ563o/jneaH0agzxvxTkVkwUJWQzyvBU/ZTnVKvkM8rwVM4MDHsaX
M8jzVtydGKa0roFBnrdiEc+YlyZkkOetiLtufW7bewZ53oqD3+5+5X9jkOet
aL424NHRAUzyvBVKmz1kWoYzyfNWFH3qcflPhkmet8Lh1LNZg2SZ5HkrtB+P
9XWawyTPW7E1Zfx8xcVM8rwVrTcWBzCUmeR5K9RNvy84tpFJnrdiZJxMUK86
kzxvhdNFGSW7/UzyvBUTftqHLz3KJM9bESq/TLngNJM8b4VdknWqiT6TPG/F
rPfzdk42YZLnkvlTSKhItWCS561YJS40vHCPSZ63QnPp2CHjnjLJ8zZYfRnt
m+rAJM/bEO1yaZehG5M8b4N3cPpnWT8med6GEb1BQflhTPK8Dem3sy/cj2eS
521gv0pQXJ/BJM/bcCZm4vePXCZ53gYd39tFYYVM8rwNv8/ZxRpUMcnzNqgt
E3kvEjDJ8zbkWS127+xkkudt0Bzf6xPWyyTP22BQUZfw3y8med6GGulnVeuG
ZNLzoWT8k9yHDxqTSd8HtWFadOTO/MmZ5Hkb5uVdfOM6M5M8b8NSp9NfDBZm
kudt0DVTvbhhRSZ53oaMma7CseszyXPJeC1m3mrdkkmet6El7NLstD2Z5Hkb
xPNla14fziTP29D+rCzwv5OZ5Hkbirjrn2pezCTP27Dkb9e95VcyyfM2KLu8
sJMxzyTP29CGzNgvVpnkeRvWVSi+r32cSZ63Yf4jw61Z9pnkeRv48QsiIlwz
yXMhXEYPUnbzzSTPhTh3zav4SVgmeS7E43EBT2/FZ5LnQgzbn3j6ckYmeS5E
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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
lKc58BfUGmf941B/yoHjDTV1q/5cytdc+HzzWNxnOJf6VC7Mtvcv4E/kUt7m
4tp2o8qR/+NSv8qFmrHuLt4iLuVvLtzvbZ+rtIpLfSsXyvrnz1tu5VIe58JB
de+Y9/u41L9yMSo6cpyGOZfyORe/E5ZeOmbNpT6Wi9MXH82978ilvM5FSL94
VHpyqZ/lYpDx+EBVHpfyOxeftb1W69zgUl/LReLgsCUbHnApz3Px3nSB3b4o
LvW3XHitKv9pksClfM/DsojNMQfSudTn8rDbfP7LbQVcyvs8/G5b8XVxFZf6
XR7ORo4xHdXMpfzPQ3LSGaXPP7jU9/LQbXBD0avuPPIgDxV7tYodVXjU//Kg
O7yox/zhPPIhD6bc64a1E3jUB/NQUq7x1nMmj7zIg3/2712TFvCoH+bhaL/C
Xs9W8MgP5vdlW9MXb+RRX8zD3Ad97kXv4pEneVg5K5A33YRH/TEPV2eFsrgn
eORLPlZqpgq/nuVRn8xH+zbB3TVOPPImH1nPwl5yvHnUL/MhVg/+mMvjkT/5
OCTrW9HvBo/6Zj7SOJcaF9znkUf5eKjMaTZ6yqP+mQ/rYYVVNnE88ikfnLUV
Kc7veNRH86HcsFjkkc0jr/KR0GFn6FzCo36ajzFrtL5a1/HIr3yYb8+x2dvK
o76aj0mHlPLmdfDIs3y8PrF+YJ+efOqvBciZPX1ilgqffCvAQ82Zff2H8anP
FiDJoSBhxXg+eVeAQeMerWqaxqd+W4D4qPk8b10++VeATTe+ho5bxqe+W4BF
baZOD1bzycMCmLgpD5+xlU/9twBnSg5Y3NzLh/zxZAEOzK+3UT3Mpz7MvL/v
SN3TlnzysgCWPja3U87yqR8XIIx3MnHwZT75WYDG15e9dnnyqS8X4FvR+J/+
bD55WgDXgyl9467yqT8XguNeG1N5m0++FuK7rkz5Vzif+nQhwv/taOnznE/e
FmKJrpe56ms+9etC7E3rsFZO5ZO/hRh2cohKexaf+nYhrC+s0i4t5pPHhcj+
2V70vJpP/bsQy0P4Sh5NfPK5ECo17hEb2/jUx5n9vZ9TrPyXT14z7z/6n90L
JQH180KUGWz1OzBAQH4XYrKJ16BfwwTU1wvhP09FyWecgDwvwto5i0zUpwrI
8yJctzo9yW+2gDwvwq5olbX/LRSQ50VYcOZk+pEVAvKceT2i+X7COgF5XgTx
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
BTNvv2thtuV5XIVkNRW1CevF1L+q8F51YulqZluez1VwPTxD6yCzLe9jVRhz
0bLZgtmW53UVLJq0tMyZbXk/q4LKqes5u5hteX5X4b5kQONCZlve16rww+z5
MVVmW57nVZCOylqXxxyPvL9VoXIf39OP2ZbnezWe31k2fhGzLe9z1fgu/K9/
IXP+8ryvRl1b/zXmzLa831XjQ7Dwg5S5fvL8r0Z9cLbwALMt73vVCBkluf2W
uf5yD6qRZqjcrMFsy/tfNZzD9544ztwvuQ/VOBuqPDaUub/yPlgNpdoFfwqZ
+y/3ohpGIwb2+sWMD3k/rIbVyCfaA5htuR/V2Ju/xH4IM57kfbEaOtuzy1WY
8dYV/+eqYRrpt6edGZ/y50HVuDrNtzqXGb/y9WI1/irVn7/FjG/586FqLH8Q
OfjwEjGtH6uZvFSOGMrMB/nzomqcXPJzfQwzf+TryWrs2SYo3bpATH2zGtsu
fzlUzMw/uUfVmOs+PHc7Mz/l/bMaqguG/C+Bmb9yn6oxwPqLpYaOmPpoNV5p
RnufYua/3Ktq9Np8wvkJkw/y6VENg2/qW2qZ/JD7VQ2LaQ+b+k4XU19l9k/5
I/esGic+vHaazuSTvL/WQMjROa3J5Jfctxq4XPUdOYjJN3mfrYHS5DT7z+PE
5F0NvtqW+SWMFVO/rcHKorhNzkx+yv2rQbcg46h5TL7K+24NLIc+eP1pmJg8
rIGagGduNURM/bcGsbZ9QjvUxeRjDZ4pf3awGSimPlwDbohuebmKmLxkju/G
y7Ql/cTUj2swa73ZIm9lMflZg5Kvo6e+7yWmvlyDMzUxrN+MR3JPa3Dx0IRT
Gv9E1J9rsD10xqs5fxS+1qDH16fWCztE1KdrYGbJCdD+ofC2BvOXBamM+Cai
fl2Dnk6htV9aFf7WYOMq90FxjLfyvl2DC+ze7Av/z+MaNO5rN9JivJb3b+b6
+k8+kVKt8LkG03vsid1VIaI+XoN3znvXFZUovK7BzjSZyoYiEfXzGhxwLOn+
OE/hdw28dasm9soWUV+vAc/y9fH1HxWe12InTzfvSprC81okd+vY++CtwvNa
/Pmc+uNNosLzWsz1NbqTwfQjuee1yKg0PfSe6U9yz2uxsoY3MZrpV3LPa6F7
8mY9j+lfcs9rcXDpgnuHmX4m97yWeZ8eBycx/U3ueS26qT3ukxciIs9r4fa7
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
Uswmz6VY2bNfytk0NnkuxeuzEYY7XrLJcyl8h0d7jLvPJs8bYWLV/UChiE2e
N8Jd1TbDwZNNnjfC4lxrtoodmzxvxK+520y8zdnkeSNmZ9qcbdvFJs8bcT7l
f8obVrPJc+Z1wa6B/vPY5HkjNCJj3eMms8nzRpS7apsVD2aT543YfMr+blUP
NnneCLWko3oFX1jkeSMa3j6fGV3JIs8bofdE+4hrJos8Z47/bkDFsnjF95ka
EfKKI6wJZ5HnjTgo++J69hqLnv82okDrcPA3LxZ93sMczyJx9X47xfefGnG2
TN/gmRmLPv9phFbEwPgfO1jkeSPOLLi7VlOfRZ4zr+c/LIWO4vtSjWjLTLNe
PY5FnjdCvPFqz0WqLPK8EflX7QZq/wggzxux04Tb+iY7gDxvRN7+SNHshwHk
OfP7kX9+23oGkOeNUNHh9mMfDiDPGzFoByvKdXkAed6I/5b3kW0ZGUCeN8Hs
ZZ87X7/5k+dNKJ0hTrfM8CfPmxATGGMYH+pPnjfhU7j5jAZnf/K8CWt4vNUN
xv7keRPyNLT58fP9yfMmtIVq9Dmp5k+eN2HjGAPWV6ni+35N2N98QWPLGz/y
vAkzB/NuOwf6kedN+K16SM3vrB953oTs4pCdpzYrvh/YhP99nnhkipYfed6E
2/q8mVH/fMnzJpxZGn5jVJEved6EyVHDH+164kueN2Fh+8W1Fp6+5HkT/KMd
Dhoe8iXPmzBj8MMa9YW+5HkT4n1uv7030Jc8b8KgXk3fBzf4kOdNSI/tc3RX
vA953oSCrQ49T/N9yPMmdETEJO639CHPm3BQcyFror4Ped6ECXoHDsaN9CHP
m/CihjXuf5+9yfMmiBbPSrRN8SbPm3DjmddcdqDi+63M6z1/WLhYe5PnTXg6
/NW2DWu9yfNmKI0ZXSoZ602eN+OH9baOfd+8yPNmvIjkiENSvcjzZry+qfIw
KciLPG/GLN36Sc+tvcjzZhi4QHZpjRd53ozUXJ0/Y8Z4kefNOO+ZuYz12ZM8
b8b+SZNvFyV7kufNMFwxd8wPkSd53oz1gr8iiaUned6Mp9JzfZ/oeZLnzWgd
xNq/cYgned4M9+86bnENHuR5M246Lj/T85Xi+9nNOBTIGqDh70GeN2OEwZ8t
qiYe5Hkznh/ZPDlb14M8Z16XbHSw6K34PnczVj96blBQ5E6eNyPTS//M8DB3
8rwZ/ZeGtMx0dCfPm2Fq5Rw+bIs7ed4MYZxTYN54d/Kc+X3R4odmX93I82Y0
7DbI+PDGjTxvhufsGa29+W7keTM8Zp39N8TMjTxvhrr2TdmP+W7keTMm1E8J
D1d2I8+bEZR1Tmt+kSt53gzRvF9buKGu5HkLfCYMHpps50qet+CI6Riz1LWu
5HkLcl0s5gSPcCXPW2CSvtpig0Tx9wgt8J/b0ZEW7UKet0DlZHzuaA8X8rwF
SVkf6vR2uZDnLRhktn3cIk3F3y+0IK34wulebc7keQv2Oxx6eyvJmTxvweeF
49WGsJ3J8xacufZ++Z6DzuR5C24kWeidnuVMnrdgmkm3Xnt/XyHPWxD1wstu
aNoV8rwF9fwO3xDBFfK8BTYbl87ufeQKed6CEU/nb1usc4U8b0HYuJRyvf+c
yPMWDD+c8G5kuhN53gLDt99+JQudyPMWnOiuZb7yiBN5zhzvipG/2bOdyPMW
SOf22mDecZk8b8E3tUkPNrMvk+ctSM2r+Fw89TJ53sK45/CnT8Il8rwFi6Kn
PSjZdYk8b8G/2v6F21ocyXPmePvMP3TCxZE8b4H7yvCJU0c6kucyeK45/Nvj
0UXyXAaNvXrvvPUvkucy5C0deXh2kQN5LoPa3GdhdpYO5LkMKd/eOR7u5kCe
yzAo8HfUZ649eS5D6+P62eO17MlzGZJV1NO/vLxAnjP7q/566OjGC+S5DNLQ
tgz7cjvyXIbro09/0TljR57LoDMrLMS7ux15LkNdt+pkV8558lyG2Kql/xs/
6Tx5LkP9ovxY46fnyHMZlns/27hY/xx5LkOUSd7LFzlnyXMZXu/QqCw0OUue
y3C37cQ14Wdb8lyGHu/c37VfsqXPe2X4sXSq3k8VW9R2eS4D60FHpeiqDXnO
XM/lPLdiLRvyXIZN7U59Y55Zk+cy3L++cO3iFdbkuQz3YieNNfpoRZ7L0MK6
enjkXivyXAbfvnU/zteeIc9lGByzOPLs6TPkuQwed9yqJredJs9lOK09dXRg
n9PkeStyHlu82zrmFHneihup8wJXap8kz1vRoLp7i9UKS/K8FRXfzglKDU+Q
560oix2r5Xr4OHneCgvzyOfmNhbkeStGBNr/cnc+Rp634uK1q/eqWObkeSsa
Zwy1OX/djDxvxVaPdPW1YUfJ81a0rXVcuD36CHneign7Uq+Jkg6T563Iq536
efhHU/K8FYYLOqRZBSbkeSuiXlkte1NxiDxvRUfCtmVlmQfJ81bUqU5xuVO+
nzxvhV5Vr2flTfvI81aY7928wLN9L3neCv9+GrY3u+8hz5njLV6fPa3fLvK8
FXPyzaLGq+8gz5n3G/Ta3W2YIXnOXE/3fWG7R20lz1tRH/dXfdaijeR5KwJf
buznsngtec6c38HB/Z4sNCDPW3Hz+rySSF098rwViZuG+w/ZvZA8b8VcvJl5
XG82ed6KA0fKVqWuHk+ef4bi78//D774cf0=
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
eV6LQysFNcenGJLntVjTVITlJYbkeS3Ojmnar84yJM957/nkreMEjMjzWihW
TuvmX2hEntdizPj97hZbjMjzWux/wq8/Xs2IPK9Fq6lK5H09I/K8Fg8jFOZe
cDUiz2tRzh7kSMcbkee1qC7wWjg304g8r8Vrqdkps+qMyPNarH+akrbquxF5
Xou7et6SqtONyfNaGK/5uMB/jTF5XgeBXXY+zL3G5HkduHc5bsfOGZPndRDt
3SBcZ2VMntfh117njcahxuR5HfysZv1Y9sKYPK9D2r9Zp9glxuR5HTY0Z+rm
s43J8zqU5R2QypxgQp7XIWnmt2f5y0zI8zqopg18Z8OEPK9D7pHbY1ZompDn
dWhduarFxNyEPK/DAbGGwIZAE/K8DuVtY9acfGZCntfBIYp5h1tkQp7XIX9X
8/SwHhPyvB5PLsvoa0y4QZ7Xg+8YPsksv0Ge18N56Jj4il03yPN6iE0qD5Y4
fYM8r8eiT9NnKVreIM/rsVbp+mPb0BvkeT0KFZUvF6XcoOedeqhsmXNQquIG
fEc8r8d6WUmtR59v0PNPPaTW/7knJ2hKnvO+/xlXiiluSp7XY810E/77B0zJ
83r8Ocq3xO6yKXleD+7BCUEGTqbkeT2UTPkumcWbkucN4IpeigjKMiXPG6C7
PWX7pxZT8rwBJ27rHREZMiXPG2BYMINhNd+MPG/Alwkrv/XLmpHnDYi+tNHH
86QZed6ADRm5rzebm5HnDbCL1XX4HWxGnjfg4a1nPZUpZuR5A3RuSfzOqTQj
zxsgH2aUXvrNjDxvQG3Q/PVfhczJ8wZMGJejLS5tTp43QG7ftPNWR8zJ8wZk
egZIdBqYk+cNKK4eLNT2NSfPG/Gnv+/gUJI5ed6IG+GznzwpMSfPG7F084Ih
0z5z8rwR85Y8331iugV53ohUO3cH5XUW5HkjPp9SzzujbEGeN+Kpa6WIq74F
ed6IH1npVnk+FuR5I2TDP/5Z/NSCPG9Egv3LKL9SC/K8Ecc+HdMR/WJBnjfi
Q8KFqxkzbpLnjWha/DDORPomec67f5n+BQpqN8nzRji/nNu+zuQmed4IPV3G
gFTQTfK8CQpfl+kcSr1JnjdBuv7lNpuam+R5E56E3TQt6L9Jnjeh0E9h6VpR
S/K8CUHT/yo82GZJnjfhkJIdR07LkjxvQplxuijH2pI8b0JthHfdsxhL8rwJ
iiWc9b7vLcnzJkRP/rDKpcOSPG/CZDmB/ODxVuQ5771y3Ny3q6zI8yZ4zA1d
yqdoRZ434YBhC/uknhV53oQty0xvFfpYkefN+PhTs+VEshV53gzppJC5g5VW
5Hkz+qZKyqT/siLPm/G3WGyzj+gt8rwZ6174rbHecYs8b8ZDq1uznc/eIs+b
IcQe5L/ncIs8b8aYnBX9rXdvIWPE82ZcrftvaEPBLXrebUbbr7r5MdxbmD6y
oXmfH7ytuWKGNXnejJJ8x48fZKzJ82aIqjw+Y6luTZ4345Pbrg2HrKzJ82ac
srm2f1OMNXnejFX7Ne9tzbYmz1tQOWW3+nGmNXneglcCqhc8p9qQ5y3YaPWh
tGG9DXnegqXVpYnyx2zI8xasdk37lmNhQ563YNvil+nno23I8xYMys8WEPlg
Q5634HeqSG1Xtw153oK19x1jLo+3Jc9bMNlVNJ4pYkuet+ChwE8zU3Fb8rwF
fmk7l82QsyXPW/C6ZMX9lyq25HkLzCaVT9O7YEue8673wvjYWlNb8rwVus9k
HQddbem8t2LQVD26JsKWfG/FNkG+xLdPbOn8t8J61qU7L7JsyftWvHz3Ljy1
0pbyoBWT6/d5fuy2Jf9bkfpexprx25byoRX3jN+bTBa0oz7QClhLmuxcYkd5
0Yo5017YOsjYUT9oxYOOoOiKfXaUH60QvShcvl7DjvpCK744GS2KuG5HedKK
vNbv7kL2dtQfWrEgkSESEmRH+cIb3yPbolX37ahPtKL09LzHua/tKG9aMfRp
MMO41I76Be96cYZDEh12lD+t+CWVZ/7tlx31jVYkXFVZlzvFnvKoFe0NGmKJ
i+ypf/DG+2bH+eAN9pRPrTjefbDbb5899RHe+Krq0sM17CmvWqH9YHfzU317
6ie8+ZBsUa90sKf8akXlp8lrx4XaU19pxcTIpef3PLKnPGvFUg2nAe939tRf
WmGoH9DfXWlP+daKcuaTC4dZ9tRnGHC224b3f+0p7xhojo722SPkQP2GgTmq
OFku5kD5x4DgSeeY69scqO8wILKo+aqIigPlIQMP3iSnl1x0oP7DAP4aBgZa
OFA+MjD1uMfQJW8H6kMMlHzWH1SId6C8ZMDtnr+/zEsH6kcMnBx/5eO6IgfK
TwY2HboUtqXNgfoSA291x81U/uVAecoA39S3m4ynOlJ/4n2/m+CkO0scKV8Z
SP9h4N2xyZH6FAPuotqfpA45Ut4yoGaum+15zpH6FQOL9o+3/mHqSPnLgKRV
+qCupyP1LQaevJu893OsI+UxA9FWdhr2aY7UvxiwLb8rv7TIkfKZAcXYceNK
2xypjzEw02lNrEe/I+U1A/9q4hccE3SifsYAJ3mMjcRyJ8pv3nz0VuXPkHWi
vsaA1LIX/ONUnCjPGYh/KLV2/CUn6m8M1MV3qsyycqJ8bwOz54q+tL8T9bk2
OC477q2V6ER534a+FweSgzOdqN+1IfkTo6Wp0onyvw22pzLnbWA7Ud9rw6R5
djrBY5zJgzZkexeVThBxpv7Xhnf/9qu5rHUmH9oQYBf+U3ivM/XBNsz4qvP2
qYYzedGGxb8vJp8ycqZ+2IYPghsrhdycyY82hBq6ra677Ux9sQ1TpIXSHqc6
YyT+TdvQKWln51vkTL8HteGQkLuXXYczPS+2IUSzrcX2jzP9PtQGUY1dt7yF
XOj5sQ39kmd1Hqx2od+L2iCWN/CwcqcLPU/y7vdzgcI0dRfqm224v9MfR/Vd
yCPefKz5L+K+swv1T978fh1/elq0C/nUhrNpsl42KS7UR9uQpWcoyVfkQl61
wa/daI9Phwv10zZsejexUmLQhfxqQ7DTUHvtTFfqq2344bvEPEDclTzjrde8
XUGae1ypv7ZDcfvanTIaruRbO6S7M26JGrtSn23nndNM1ekeruRdOxwmCmYL
xbtSv23H1Y921cszXMm/diDiu/feClfqu+04y9j91YTtSh62Q6P84LjnAm7U
f9tR48kp/DfPjXxsh4vw5MMaMm7Uh9vBp+bi9fGQG3nZjociB33ltN2oH7fD
b4GsRs4tN/KzHbr8u75pBrtRX27HuSMHtfiT3MjTdvyy3hOdmutG/bkdc9jz
Mixa3cjXdhQzsl8qDrhRn26HcqRUpISQO3nbjve7TujMF3enft2O40yJVfPk
3cnfdowNfli/Ssud+nY7/HcVO+81dSeP26FX4Sdl6ONO/bsdCWI/Wh4mupPP
7SiYNBD8I8ud+ng7WIjRONzgTl6346Jdn3Tqd3fq5+34asVdIinoQX7z5q82
TvL5Sg/q6+3YLS2qsX+XB3negXNLziZxTnmQ5x28fu6wLsbEgzzvQM6/gNbz
3h7keQfMBe7kyiR6kOcdkMstYM1670Ged6C3aN6h8Y0e5HkH5oY9/Tbupwd5
3oF5D+I7hf/zJM870Gg/Y+WGNZ7keQfYd0XenJX3JM87YBBZ9yjqtCd53oHx
XNM/LHNP8rwD1WKznuwN8CTPeZ9vqs9/+tiTPO9A4YPPauJ5nuR5B/avtzuS
0uZJnncgeE567uG/nuR5BzJm5mb8muNFnnfgF6NB+qm0F3negZaDa6TNlbzI
8w5eH+7OVL7iRZ53gF/pQPMmBy/yvAM3X7oFSUZ7kecd6L/YztqQ7kWed2Di
+YDWA5Ve5HkHTpbWWuv3eZHnHfjU9j0/YbI3ed6Bwy1rclkrvMnzDkxY/M5S
bpc3ed6B5cKDnDhNb/K8A1N3rVo8x9ybPO/Axj2+ohEB3uR5J+RK7Bhrk7zJ
8060Jx+6WV7gTZ53Ylr17h6nLm/yvBPZ215uOsDvQ553AgIC2vMX+pDnnWi8
Ynnz31Yf8rwT23Mtrb4e8yHPO7E89KzBD0Mf8rwTITdcNSZ6+5DnnegVPbpH
/IEPed6JV9pikqdzfMjzTnQcv7gwts2HPO9Ewswb878P+ZDnnTjy7Wzww2m+
5HknDBdrrOmc50ued8K4qaVQbI0ved6J8sn3bA22+JLnvPdRV/e/V/AlzzvB
F8sQm3/MlzzvRIpMwULrC77keSfu+LRIMw19yfNOaP1r1j5l60ued6KK6fyq
0tuXPOfdf17whhNRvuR5J+plSioYD33J805MavgSZfLKlzzvxDaHrMDp+b7k
eSfkp/NnJNf4kuedCLI0n3m6y5c870RqS0/MjB++5HknKq4vvlQk4Eeed+Gg
OUPbT8iPPO/Cliu/4rSW+JHnXfieK7FYer0fed6FB3JKrYLwI8+70Oi3ouub
kh953oX+Ow4yDE0/8rwLVdabiqt1/chz3vftFEytvOlHnnfh6drG3no3P/K8
C7ZJRpasUD/yvAuFB+6c5kv0I8+7UHt3f8SiND/yvAux/tIy+3L8yPMuGA9u
lTCr8qPnwy4Y/NrknNThR78HdWFJBv/ez9/8yPMuCCSY6W4V8CfPuzBXxnDQ
XcifPO+C+czC3x1L/MnzLjT9d+nqPil/8rwLG5YuVEzmGT7qeRcktSvjVqj4
k+ddKF6kYxx7xp88531fVtbbFfr+5Dnv84xM92Rrf/K8C1m7FWr2efuT511I
L9+R2BnlT553QeW+J5/nY3/yvAsWk+e1y77xJ8957y+Vq34t9CfPu2BzKko1
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
IGHV
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.880722, 0.611041, 0.142051]], 
         LineBox[CompressedData["
1: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
9dNMacFme+pfbZCN6S5JyrWnfG7Drj0pzNOx9tTH2qDb/cZl0MOe8roN2+ev
GbAzt6d+1obvF8+1HVKzp/xuw+FQ96c/r9lTX2vDQamz6Ukn7CnP23CxIo9h
tN2e+lsbknllz19YZU/53o5dj66ECHHaU59rh6n4+jdco3aU9+048HKJ7n/N
dtTv2rHmgeV/n/PsKP/bsVil6dDHODvqe+1QVlU++dXLjjxoR16Y2/KplnbU
/9ph458Xv0LTjnxoR5Co7GqRm3bUB9sxPS7mioKkHXnRjntOO5Wcd9tRP2xH
baXkhYo1duRHO64ybixbPMeO+mI7wktrUuV/vMZ4/Gu2I3Lz6mOJna/p86B2
YHlA7OLS1/S82I635ypn6Ce/ps+H2hHNXHF6OPA1PT+2w+DwsNHd16/p86J2
cO5JCe/Te03Pk+0Q+/SjUOPea+qb7aj/tbSH88Jr8qgdP4/YsQeJvab+2Y6q
ZU0rpARek0/tOLjlkcjvxa+pj7bDyjpbIW7ya/KqHV9jr7hrDNtSP23HA83w
NjTYkl/t2Llg974FObbUV9vxQkA3ZJhhS561Qyr/x7YqT1vqrx2Ild1Zn2lh
S751gMmI8U3WtKU+24GQuaOv3t2yJe86MHuRUUD2KVvqtx3gq2Qy6/bZkn8d
cEgPvvR1nS313Q5cTjv3a/kCW/KwAwor1ask/tpQ/+2AuK1Tr2G/DfnYgS4x
qf0famyoD3eAP5W/eM4HG/KyAy7TYwNuRdtQP+4Ar7V51nt3G/KzA0mb9wuv
e2FDfbkDP7fcHHDQsCFPO/BZ+vXPObdsqD93IDlL8YbtKRvytQN7Nz5dtXK/
DfXpDqRYP9jPWG9D3rJe61YknlloQ/26Awa9Zz2+s9mQvx14a7mw4lzDK+rb
HWB07zqSF/eKPO5AmvM5B2nrV9S/O/CfSFzRgOIr8rkDm+4EjLoefEV9vAM9
lprzry5/RV534CavzuatX6ypn7Pe32yqxOISa/K7AyoLH6vPD7Gmvt6BoQVL
GKuMrMnzTjBzZWbgmjV53gk/FXtj1d3W5HknLuwT2pA435o874TpVZvfXANW
5HknNCat4XyebUWed8L9kvQFNh8r8rwT7GbWPXa6VuR5JxLeSebvu2hFnnfi
zPpJk75stSLPO3H+x3qnjJlW5HknPO/vs/VjviTPO9Gc+PabU/pL8rwTcwX5
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
          
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.5}}, Frame -> {{True, False}, {True, False}},
      FrameLabel -> {
       FormBox["\"Free-living mutant (M)\"", TraditionalForm], 
       FormBox["\"Frequency of intermediate hosts\"", TraditionalForm]}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.4576923076923076}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Imw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Imm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Iww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.837775353498094*^9, 3.8377753736731157`*^9}, 
   3.840797500612804*^9, {3.8407980869406157`*^9, 3.840798132869486*^9}, 
   3.840798164598523*^9, 3.840798287230689*^9, 3.840798357551461*^9},
 CellLabel->
  "Out[460]=",ExpressionUUID->"c398f6bd-82cc-4548-a320-f019811eb046"],

Cell[BoxData["\<\"Ihost_mutantAndResident2.png\"\>"], "Output",
 CellChangeTimes->{{3.837775353498094*^9, 3.8377753736731157`*^9}, 
   3.840797500612804*^9, {3.8407980869406157`*^9, 3.840798132869486*^9}, 
   3.840798164598523*^9, 3.840798287230689*^9, 3.84079835784293*^9},
 CellLabel->
  "Out[461]=",ExpressionUUID->"0491f7c0-07e1-4d55-8ff0-c3a7c2a65f74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", "DotDashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", 
   " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.4"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"Frame", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"True", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"FrameLabel", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Free-living mutant (M)\>\"", ",", " ", 
      "\"\<Frequency of definitive hosts\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<Dhost_mutantAndResident2.png\>\"", ",", "%", ",", " ", 
     RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.837775418452588*^9, 3.837775434679966*^9}, {
  3.8407981827010202`*^9, 3.840798234287361*^9}, {3.840798292100781*^9, 
  3.840798320447978*^9}, {3.840798365093541*^9, 
  3.840798372862866*^9}},ExpressionUUID->"b68ee149-6cf4-4380-8994-\
f8c8231b4d37"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.922526, 0.385626, 0.209179]], 
         LineBox[CompressedData["
1:eJw123VYk20bBnAxEVtRMDBQREz8bIxTRWyxu7BBMAElJCUU6e7uHDlKVEq6
u2HABmNgISqi38Dr5R8P37ln93PH+TufcbxLbj46dWf0qFGjusaMGjX8538/
x2+eGmRqpOJ3yOeyYzdPoOhZ6xjRh//9XQH2WoxmzVup+KV7P1XNThHivPeW
jRf+e/0xXJcKz5CVT4W2cOSBVi01tB0Muxsq+9+/10D4VVOrWdtSodm1fL1g
+Aukbg15o7v2v/frg2Uy4zJ3aSp2NB+3cHpoiB3574cuzv3vekZYfZ2pmjc1
FcmHJo9eZWqC4Kf9qTvG/nf9V9gxWbuW8TMFMnE5z9K8zCA18WDu8r4U+jxz
2IldMfdsT0HiQmPuyURLOFYkiIvWpdDnW+Oe9Xlzu+IUuGcuZjxVtIGq2c7c
6VkpNB5bmJbfq7VKTkH9z5EPRPPpytTpjBQanz2O5xup2gWkYP66xmXjDRzw
oFRtSMQthcbrCMdKv0ue1im4dHv78BUhumj6m+UmKTR+Z9wuZFoytFPg6jLy
g2k1znd2PPnvflwxelr0tLy7KagtGjjNCnCD1bw/5hev/Hd/7nDV1mnsPpmC
uWPPTV0T44G4N6sFdA/8d7+eWK8j+GPmzhRc2DZyQZy5PDU95H//3b83rght
v753RQqObnm9R6HDG8wDb4obxP6bDx8IhQ7O1JyVgp6Tw1f0gYLPKymRif/N
jy/2PF87i/knGW9U2IMhn31RKd9VfOFbMs2XH74si7/+uysZq0zn8G/BD4dL
LNJ9mpNp/vxhIfDox8HKZOT7yCV8HfLHQ9kzAl/ykmk+A1D7a2uj+/tkKPNn
S3RsIEbdEzU/lJBM8xsIMx/elB9hyRCq9nu8UygIzp6xN4N9kmm+gzCw+o7Z
JadkhA7f7vRgbP3+22iqRTLNfzA+6KqfyjRMxuHhy80JwR+J3C/aGsm0HiFQ
Wf7lzqaHyegenu4Fochy6A77dCuZ1icUQnfCMyMuJmN49krEwxCjsJ6hcjyZ
1isM76VVH66RS4bUFav0/hXhqLyg/LdPJpnWLxwqW2fdipNORi7/avPWRSBD
6LaL1vJkWs8IrGKf8927IBlKNrwX2BSJCR/adSbPTKb1jUTvvfGrayYkgz84
/i1HocA0LjxgKInWOwpfg9l/1b4m4Qx/8/CXFHLSzhL7u5Jo/Rk4cj1NbG5z
Evz5s1ftx8DhM6c4vIok2g8M3BI6apyZl4RvQxUaXcujEXfR75v7+yTaH9F4
PHB88/OEJOwb2QDR+Kp+6PDp8CTaL9Ho3mcqvd43CfaiIzcEpehRXdOdk2j/
xECgM1z1i0US/g0vBm3dhiWVL5NoP8Xgb4Dm32TNJGwY+YnFlHrTUb6Pkmh/
xSJxlX+52Z0kvHyfx99BsUgTydJQv5xE+y0Wfb9b+m6cTEI5f/X5c4JHIr1b
TxxIov0XB4ZB2+ndO5OwdOSCcfDaGLf7fxuSaD/GIWLCxb8SUklQVRxegHhM
ic62mr8oifZnPNyzvnyeOTsJGf0r+CscjzVJZRKTJyXRfk2AXtPlVRMEkjDr
3wBx/97L0WMHEmn/JuD37V1ho3mJGBldTgK0PxpIjGEl0n5mwufa3ifjahMR
49EXlH2ECbdaNcuJxYm0v5mQ/jhFZ1pWIkaP3DAT9Q4CO0VSEmm/J6LVbl/R
4uhEnPq3YaDUlye9OiiR9n8iXBNe3d7mkQjf4dutSERi9ROlg/z//u88JGHt
Ei1cfJ2IL8OXu5CErD0Oncp6iXQ+kuCak3BNXz0Re4e3f30STkuUBTkqJ9J5
4e/74LoPkTcSYTu8fa8lY6JhRnjO+UQ6P8kIytRTbD/GH6fW8IIkw/vm6H6B
fYl0nlJgv27XqSUyiVg/ssFTsLxFQn+vdCKdrxRsFwrXvbM8EQYOsvwtk4Kf
yzKOmS1IpPOWio5XV3mMmYkoFR9ZYIx//OBqrWAinb9UcPvbPcb8ZWLJcPrz
UlEtkhC5rp9J5/Et8uPKrK5ymXgyfDwev0WUxeo9Fq1MOp9vcVYuPj2tmokP
w6v79S38FK4Jfylk0nlNg8/+uZslM5mY8e9AwmN3teS1ZCad3zRs0nrd5chg
YmT6fqZBW2CJdmkgk87zOwh8tGyY4sHEyPBevMMYz4wpR+2YdL7fQWUHY6r5
ayb+af4ev2Tkmgv1mHTe3+PkbFW9Gc+YCM4+wj/R7zF35cq+cypMOv/vIZRy
aa3nTSZO8E/jzJfvMZ33bQf7ApPy4D0u5XDm/e84Ez+G9cl8jxdbl+foyjEp
H95DY7LHvsLtTHjPGz4QH9D0fYe12P+YlBcfwLXoD320gomDIwv8AfZHEuwz
FjIpPz7A2eLhsbmzmfgUNDzAD4h0mFL5eBKT8uQDLF4brsoTYMJ5eHR5H/D7
aeoJiR8JlC8fMGp36D7D3gTs5m+uQ5PT0ZAuM6G1PYHyJh3rY64476lPAGdw
+IbTMT/kz4BfaQLlTzpkJactF+Sfu+Hdwt8y4Fq/EH+YlkB5lI7F6zbxKuMS
MHK7JekIWydpgrAEyqd0HA7YzQv1ScDI5WZmINH0kbiocwLlVQbex/pImFom
YCSOTmfgEjfz+4BRAuUX//XKbIf72gn4Vx8yYPrXfnTzkwTKswz41y3YeVYx
ASNxUJ2BgLQjcoXXEijf+K9zps4/cJafM8PHWTQTD7VPp6UfSaC8y4SL3vh1
u/cmQHLkAGXCnSX84N3WBMq/TFRqK2vsXpeA4pF6kYnE0QMnMiQSKA8zUSjq
//3AggQ8Hz4OjZmo3nddqWhmAuVjJlhfhUPOTUzAouHtvDAL5zSj41v+xlNe
ZkF02hIrle/x+Di8/RSyYFd5fNOvnnjKzywUl0sFv2bF49Hw8vpkwWHAlT2v
Lp7yNAtPZlt9jSiJh8jIgc9COedz/t6P8ZSv2VgkHPW49m083g0Pb1k2chfH
tD6Ji6e8zcYtvc6Fk8Pice/u8E824k23rAj2iaf8zUathvWQnHM8hssTP2Gx
SbPBs8MynvI4G1mO4yebGsdjOB01urLRnf1z38oX8ZTPH5HV6X2o+Gk8ro1c
8CPmp3TOfaYUT3n9Eeqf4uMXKsRj/EhAfYTs/J8Lcs/FU35/RDfT9bj6sXgM
r4Zw5EfkrjQ+tnRfPOX5Ryi+951TLhOPkXbX9xHPIhpDjdbHU77ngDN1sdDW
FfH4M3zc1udgRvfpjbyF8ZT3OQhffUvKf3Y8Aoe389Mc/Azf0nVlcjzlfw4K
pVJURcbEQ/7fDcPvcHVO+c848iAHb73UOTaf4vB9eDn6c7DCV6/sJDuOfMhF
Q2yTyaymOHgO3+6WXOQtejGuuiKOvMjFl7l75N3z47B/ZAJz8fTdnBu30uPI
j1yEzuncuTopDr0jPORi8zTn9u9RceRJLuYbzj6bERgHx+F4H8xF7voDVjYe
ceRLHnbkzba7YR+HXSMLkofRrUoKG97EkTd5uNS/amC8YRw6h+NVNw+7H+87
36ARR/7k4Y2/m37sozj8i7889BXNVTW/G0ce5WHRnKC1967GYSReRuej2WxV
rOyZOPIpH0IrrEaJH4nDyPGVzUd6WdKc0XvjyKt8XL1k18/aGoeR42GcD1uN
MR4f18WRX/mwLP08OWJ5HP5tv3x8+SonZy8WR57l49cFtpyOcBwqh5dXsACm
t99OVZwUR74VYPOdKK8zo+OgMzLCAjy09/+x92cseVeAR3OM5m74FAuJkQ1Y
gOe/No6WYMeSfwX4KOMZI9oUi8KCkR+EpgaunFoZSx4WIPDEpvvjCmKhbjcc
qIV4GiP95E96LPlYiLmv9fAzKRZiIxu6EGPuCVb2M2LJy0LMyIte/y0oFlkj
j1eFCJl/8+w3z1jysxC5jL/47hCLB8NxWlaIeXmPP/80jyVPCzFk56b092Us
Zo8ckCKELL8bPF47lnwtwlaThIhpT2PxdjgOzhUh3vep5jylWPK2CMsu6E+S
VIjFnZHHryIwH2bd2nQ+lvwtwltXSUM5+VhM/nfgkPzC/O55uVjyuAhvfGqn
K++Ixch2mVcMFcNv+vr8HvrP52IMGaUnOK2MxchyXCnGk8EVMYwlseR1MYyX
TVHNF43Fv8ezYrivOvOTPS2W/C5G1QrWvvETYjFyueZiiCzxOrv8Twx5XgKx
8Q9WHeyPofNeAvuE9dnKPTHkewmk/pRK2LBi6PyXwNHhf4cT62LI+xKEiW/d
0FoaQ3lQAs2tH1sm5caQ/yU4cD7z1Nb3MZQPJUjsmfX6LjOG+kAJck+7vnSM
jKG8KMHviu17cwJiqB+U4HRgQ+agewzlRwkUuAqT1tvHUF8owaP48NmKb2Io
T0qgPsaf5W0YQ/2hBNvSV6rXa8ZQvvDfX7AsT+RJDPWJUmh3q7edVYyhvCnF
rHKBNIfrMdQvSvFuZfiV6nMxlD+l2GN0IW2efAz1jVJoKHS3XZeLoTwqhdVa
ubzAHTHUP0rx98hRtb4NMZRPpXAdy2rZtiqG+kgpGLY900zEYyivSjFl0VGB
irkx1E9Kh5/H4pbOiKH8KoWvrstKdcEY6iulcDp67GbO32jKs1Icncq6LDYQ
Tf2lFDMdd4qo9UZTvvHvLwD2BR3R1GfK8ICbX7a8MZryrgy7BbPKDCuiqd+U
IeP1FPuW/GjKvzIc45nO2Z0RTX2nDPe95lzySY6mPCxD16DbtbEx0dR/ytB9
7NdSJf5z28h21y3DQPGs0GLvaOpDZfgblvdpi3M0/n19UAajwVE/fKyiqR+V
wfKj87spptGUn2UoFFQ7oK0bTX2pDF5Balbd6tGUp2WQfPHC6fKDaOpPZTgi
/+B60e1oytdysCtXsPdeiaY+VQ5msvXapNPRlLfleGFvsmn9kWjqV+UQ4HIH
Q/dGU/6WY8NmX4PlMtHUt8qxssks2299NOVxObZsN80Tl4qm/lWO3w4aFn6L
oymfy/FEcve05aLR1Mf4r4u+Ox46LZryuhyaRlXy0hOiqZ+V45DavcmJfxiU
3+VQYZ16tec7g/paOQzeaqYX8BiU5+Voa0pNvsh/rv7X38rhJTz0mNPAoHyv
QMSC+R0aFQzqcxWoChiYM6mAQXlfgbrjquO9MhjU7yqgGvYwdmMKg/K/Aioy
eWIFMQzqexUIe3RX7k4ogzyowKGopStH+TKo/1XARL4t392FQT5U4K+d4crt
NgzqgxVwZLbL1b9ikBcV8GvjiOnoM6gfVqBj3aOYxRoM8qMCnmHnx2Q/YlBf
rEDwacPpD+4xyJMKPBUprp19nUH9sQKLa8Suvz/HIF8qYa4o760iz6A+WYnr
Frs95u1nkDeVmDlUfjZvJ4P6ZSUmKXBytTcxyJ9K+J64+nPtGgb1zUqsujyz
nbWMQR5VQvhP52vXBQzqn5VoDUnuPiXMIJ8qsf+DyvgpkxnURysh7dLQkDOG
QV5Vwu9zWf3kgSjqp5W4vaHj6ZvOKPKrEg7HI3WnVEVRX61EhWHPH9usKPKs
Ej97r36dHx9F/bUKua7vLwf7R5FvVTj1tGzLVvso6rNV4O4/aZr/Moq8q8LV
4l+HbqpGUb+tQn+Qud7vm1HkXxVcT2VKup6Kor5bha+br+/dvjeKPKyCse+8
4ub1UdR/q/AhJ7bQdEkU/n09WYVFGeydG2ZEUR+uwnkb1UVto6LIyyrsmCv8
1P5TJPXjKohLmmw63BJJflbh3QMTpTElkdSXq3DLpHTK+3eR5GkVpn9eKq4f
FUn9uRp6wjKBsl6R5Gs1TuwqcRGyiqQ+XY1Ffr6/K3Qjydtq+F57UOT7MJL6
dTWiVXumql2LJH/51yuof3tQPpL6djXMZAbqFu+KJI+rwXr2687vNZHUv6ux
VNznWr1YJPlcDavMwMy3UyKpj1fjWFG2k99QBHldDXmn1GpzXgT182qYXJc1
0myMIL+rMer4HA+lwgjq69UYVP+05OrbCPK8Bj8LzGeeiYggz2tQszHwobxH
BHnOf/3ZwKajFhHkeQ1Oym1XPKYTQZ7XwEhm9bhTDyLI8xp01BpNvnQ1gjyv
QYHVX507xyLI8xrcjD53UW1nBHleg9E6+zxN1kSQ5zWYNe/lUXexCPKc/3ku
Bbfip0SQ5zXI+VbHKh0KJ89r8GWaYsFnXjh5XoN25hqx2U3h5HkN5Pw6KrcX
hZPn/PE+PfT9Tlo4eV6L+qiZunaR4eR5LR4X/1LJ9Awnz2uhui4l/YdlOHle
iw2iU/Sk9cLJ81rMTw3xUX4UTp7X4u+WwytDr4eT57UQsgsS7TkeTp7XojZN
S2X97nDyvBZRTi8ktKTDyfNaKLXfkc1eHE6e1yLmXF/W7Bnh5HkthsxKwxUF
wsnzWuQKZg2kfQ4jz2thstcwULQtjDyvRYHDh0T1sjDynH9/R7avrUoPI8/r
YOIUNF4mNow8r4OzS9oeH78w8rwOgVe2Nk+yDyPP6yBTXdCkaRRGntfBlbth
N1ctjDyvQ9o9iTEKd8LI8zpojbsoWXM2jJ53+P/+vkn46f1hsB7xvA4dK+7Y
lm0Oo+efOsimhdeckQwjz+uQby+sVycSRp7XoXP0GeNbgmHkeR0OHBHn9v0I
Jc/rsN1jM0OvK5Q8r8ML4YMVM+tCyfN6PEiacj4kL5Q8r4eMwa6tsimh5Hk9
Co/ZPG8JCyXP6zHASxU2cA8lz+thKaYxTcIilDyvx3NjzXsFOqHkeT2SU54v
eP4wlDyvh52s1FqJ66HkeT2CLfa5Vx0PJc/r8W1A7+6b3aHkeT0GC23MZdeH
kuf1yD0oPfXvklDyvB7LrWZw384MJc/rYRbPFdcfE0qe10MuTS1e7lsIec5/
3eWm79SOEPK8ARESyl11lSHkeQNa1u4zC80OIc8bEP7Iz0iHGUKeNyDdelfN
6eAQ8rwBa6Xyjda4hJDnDVBK+/NayCyEPG/A3UxLdrdWCHnegBAPaY8i5RDy
vAFX3FxC46+EkOcNeDCkO837WAh53gDnLw75FrtCyPMG6DrbNemuCyHPG/B+
cPVB1cUh5HkDJoqKCCrPCCHPGyBVM37h3dEh5HkDJOZEv779NZg8b8Q1t7zD
d9uDyfNGGC8WvKFcGUyeN+LjsYUFqtnB5HkjWpI/vNFjBpPnjRDvC/SyDA4m
zxvhcMNwgo9LMHneiEmaghkJZsHkeSNWmvNKi7WDyfNGmLd2bOhRCSbPG5EV
FcCZdC2YPG+Eo1hr39rjweQ5fzx7jh46uzuYPG+E2lK3b7rrg8nzRggnG3wO
Ew8mzxvxgBeLhlnB5HkTMhw6mqaNCybPm/BdO69o//cg8rwJzy/OmWbADiLP
m/Co5oVXWk0Qed6EQrtovb+5QeR5ExREFKNkU4LI8yZUNZ9e+yY8iDxvwudL
K35XegQhZcTzJmiznUWXWQXR824TlCsvvFTXD8K0kQ3dhO4783fkPQkiz5ug
kW+3V/xWEHnehF4pdUedM0HkeRO8HJ9uaZALIs+bcEUUEru2BJHnTXAKsrju
tyKIPG+G8toZnZPmBZHnzYh69SLx+aQg8rwZ440Mqzp/B5LnzZjUUomLvYHk
eTO2yUt9K2oOJM+bseTpuq8HSgPJc/71W113ZKYHkufN4C1dWCIbF0ieNyMt
VjkiOyCQPG/GvqFNFUedAsnzZpy6vm5f1atA8rwZq1YJDd3UCiTPm+Hir/Hn
i3Igec4f3+g1B02uBpLnzbBVqa1dcDyQPG+B0Cjp2ITdgXTeWzA3v6389P8C
yfcWHCz22/5taSCd/xbMEpDodpodSN63YOJB0eZdEwIpD1qQp7tuXtePAPK/
BSKqC9wcuwMoH1og0Gl940BDAPWBFlS/2fVgsDCA8qIFxyZXv415F0D9oAVm
oyeffhAdQPnRgrVDlqtX+QVQX2iBoe6Mwz32AZQnLbjwe18YwySA+gP/ei11
xzU0AihfWpBlarRF9n4A9YkW8GS/3phxJYDypgVfLtYUtR0LoH7Bf310hw4T
AZQ/LRivkvfQan0A9Y0WmCZs87m/NIDyqAWdAyzhQ7MDqH+0oHGbVu7KCQGU
Ty1Q0YpIm/bTn/oIf/7C134b6PanvGqBTnykEqvBn/pJCzY+bVpYVuRP+dWC
2TEPZ2W+96e+0gLmtukHkmL8Kc9aoJSumhTt70/9pQXbfx26H+HoT/nGXz8j
2Yvhr/ypz7Ti3cB0k0gtf8q7VvxuvfkpVsWf+k0rfDK7nFKv+VP+tcJizrkX
OSf8qe+0IlP2gkf1Xn/Kw1Y4Rnj/6troT/2nFVahzXZ/l/tTPrbC2iRLUXSu
P/WhVrANR2tunORPedmK61X7M08P+VE/asXhiL2Hn/X5UX62wlYqUMi91Y/6
Uivyby4Zl1XuR3naCty9ve1zlh/1p1aM2bIoaHGiH+VrKyYXCcifDvWjPtUK
yXmpa167+1HetmLNqD9y6ZZ+1K9a0XXpueMffT/K31acHKxeuEvVj/pWK9SC
i5v07/hRHrfCf9HUquzzftS/WqEuLDt2+mE/yudWFEovVLqyw4/6WCu+Ch8f
G77Wj/K6FeHnjSv/LPajftaK7SaPG87M8qP8bsXLZe9FI8f5UV/jvz98qZnQ
D1/K81a8tT4sfb/bl/pbKwq2tAsVNvhSvrehcZT33A3FvtTn2mC+Z80V9w++
lPdtuLN/e5lgnC/1uzbwTmlqawT6Uv63IcnH8TzX2Zf6XhvUbu+9e+ONL3nQ
hl8Zq4LqdHyp/7XhfIvAvPOPfcmHNrBKVNOqbvpSH2yDvL+0/cWzvuRFG8IU
2K7NB3ypH7bhxZgDZYoyvuRHG8oM/mzrX+1LfbEN23JSS40W+WIk/p+14Vuy
tIvITF/6PqgN3ZsmWkeM9aXnxTYwJvfH7x/woe+H2vBeyE+I1eVDz49tuPT1
g4Vhgw99X8Qfj8EoSBT70PNkG6oVpyzM/+BDfbMNE844rVSL8yGP2qDcefT2
4iAf6p9tUExpyCt28SGf2qBzt/+qobkP9dE2PFOVE9uq50NeteHiXW3Bz098
qJ+2wSpFblHEbR/yqw1c9qkbKud9qK+2IfjCyaK1h33IszbYqPbd+bbDh/or
C/2O9ZJv1/mQbywUzM2c9Vrch/osC7FHzktdmO1D3rEwWl1WcaWgD/VbFqqq
Npf8/eVN/rEgGdasUMPzpr7LQvGynrlxLd7kIQuWj4QGbcu9qf+ysIbBGaOe
7U0+sqA9dtPGS0ne1IdZuPnS483ecG/ykoXPO0omrvXypn7MgrKMduQCW2/y
k4UTukc1pxp7U19m4enYL0pjNLzJUxZGpc/VH7zvTf2ZBZuAJynfr3qTryys
dgqa33/Cm/o0CwoaSt7fZb3JWxaOL7tzaHCzN/VrFqIfHZwzZqU3+ctC74oP
46eKeVPfZmGZqM68BdO9yWMWNvyVOrlmjDf1bxacNnDPvOzxIp9ZGLt9/tGY
Mi/q4ywEqMKUnehFXrNwWTp23FIvL+rnLIgllmbfNvYiv/n3t/97briyF/V1
Fg5PfDF18KQXed4OP4k0u+NbvcjzdojHilwMXehFnrfjThrr6qRxXuR5O9wP
6vg85XqS5+0oPYClLaWe5Hk7kgKN2k4nepLn7RCVC24q9PQkz9sRNDBWRN7Y
kzxvx85X/WYVyp7keTvY8RXbbpzyJM/bIbhpSPzbVk/yvB13o3LlLBZ5kuf8
92fa+6we70met+OZYNKmsh4P8rwdPuNtBHTLPcjzdszG87HSyR7kOf/6K7J3
crw9yPN2MNbUhAeaepDn7bgYM+Gk8kMP8rwdt6dGSW0+60Get8PaesXmCTs8
yPN2NOoUqTeJe5Dn7SieMchOmehBnvPfryto7vXJnTxvx+6eEzdeV7uT5+3I
0Fp7TzPNnTxvh9juQfdHAe7keTvOH5oxWsXcnTxvh5VrnsNDVXfyvB2ctQbn
n19yJ8/bkfzDcr/JHnfyvB0ercduuq1wJ887oJcnEpowzZ0870Dtm/1iNd/d
yPMOWPZvSPnb6Eaed0C6eNvLNVlu5HkHZtREq90IdyPPO7DjY7+lm50bed4B
5pHrpfVabuR5B5QnH9wuftONPO+ASvDEgoeH3MjzDrAThgw/SLuR5x04+lHn
+jxRN/K8A9dusBQ0/7qS5x04Oe6VSVOnK3negcJVWcWHilzJ8w6s3v9te0q8
K3negTNpD/P+5+FKnndAeMBCi2HkSp53YOBI2JGNKq7kOX9+ZizemXbalTzv
wG4HOXn57a7keQc6xdR128VdyfMO7OVOKNQXciXPO6C++fy2pV9cyPMODK1P
Tc+vdSHPO1A00VpR64MLed6BS6xVK9eFuJDnHUhu5IzvtnYhzzsQPmPxn1AN
F/K8A5k2K6c9VXAhz/nze//GNhx0Ic87MNZX7MVMaRfyvBOftyZWcUVcyPNO
hEmZHcz/60yed6JPsaeEwXYmzzsR1bHlkXuxM3neif2vs8Qtmc7keSfubunt
NvZyJs87ca9I6ONLU2fyvBOSkmoJpo+cyfNOrJ39MtHmvDN53oniu9YFPnAm
zzuxqePbZ6akM3neiWdnJq6omOZMnnfCTnX5w+8DTuR5Jz789s9Y2OJEz4ed
OBXQKHksx4m+D+pErpiUqwHDiTzvxJ8ZLXNTnZ3I805skLoc+FvfiTzvhPj4
r7tklZzI805MOjCKZXXSiTzvRLVxvU3bNifyvBOLLjQe3i7uRJ53Yvfxa1Nc
hZzI806o/kio+fPFkTzvBLcB4Ur1juR5J/INTprWZTiS551QUNyndDLckTzv
hOjUJyeL7B3J806496zDSR1H8rwTHZq16+vuOJLnnTi5InuFkrwjec7G+7vy
S/9sdiTP2XjtnbfYZZEjec5G0E67xTKCjuQ5G1W+o8RbPzmQ52xor1deZlnr
QJ6z0X5gleSedAfynI29e1ykfoU6kOdsvFOfsirJzoE8Z8NFpmWl7gsH8pwN
qTalFYfuOJDnbExMHb10nrwDec7GlNlj5n3e7ECes3F7S8bkokUO5Dkbcffd
fjEEHchzNqZ+Y7W5fLYnz9lYOac/81WdPXnOxskZkt46GfbkORtmS8tUNcLt
yXM2vF7JQ9PBnjxnQ0brm4C+rj15zgZn3YIU83v25Dkb25vF7nudsCfP2ShJ
OTk1cZs9ec7G44FpQVXi9uQ5G2PTGRsGJ9mT52yUHjKPlei3I8/ZuJbyS+Jc
kx15zkb4njNm5h/tyHM2No//3JzDsCPP2fgsLbV8kqsdec6GPufMldMv7chz
DqRPFRj4qNiR5xzMsWU79J+1I885GJ//x+k47MhzDmoW3jeNWmFHnnOwKdLg
1uyZduQ5B23OHqsMBm3Jcw4Sh2Y3f2m3Jc85iP21V+d+kS15zsGUiBfjOExb
8pyDA+vnP1f2sSXPOdju96z0m5ktec7BjoXsWUZqtuQ5B1PfZu6ce82WPOdg
gus9+bgDtuQ5B4uLJeXOrrclzzn4rn51ye95tuQ5B/1BCm3BY23Jcw6O6L42
vdxrQ55zIDpTerpwjQ15zsHFF+HaZR9syHMOllWdy3UMsyHPObDdavpDwcGG
POegI9VBcL2eDXnOgfWLuh/jlWzIcw5O2ETktJ2yIc85WD373vPMHTbkOQeu
4tfHhi+3Ic850KjgPXSZbkOe8+d/v3KC+S9r8pyDArt1dcbt1uQ5Bw21trVG
RdbkOQdpm3ixrxOtyfMuWGY5Ktr7WpPnXVgXzP7ub25NnndBf2jLtZRn1uR5
F3Z1NntUK1iT512QNtoS//OwNXnehY2/HP2WbLImz7sgq3JO8fgia/K8C2Z/
C0e/nGhNnnfhZ1xYuwbbijzvQuQhc5WBFCvyvAsq03rdDKytyPMuXL1s8ETk
jhV53gUP4+/cxG1W5HkXLnYNTbw71Yo874JAx4G8hSxL8rwLt+uMVrGYluR5
F7LX3lkda25Jnnfh02GXfMsbluR5Fx67lU54ttmSPO+Cg3Vas+IkS/K8C6Ge
00/da7Egz7swuFPj6pN4C/K8C6O5AaNMzSzI8y68Xn5YJvi6BXneBYb67ImV
Gy3I8y6I3ExUniJkQZ53YbIWS+Fkszl53gWrEwfY3nHm5Dl/fXTshwZfm5Pn
XQjz0Pa9ed2cPO/Cj1MRFRUbzcnzbmjuq7M9JWROnnfDYWFsfX3zG/K8G2Pt
OBGP49+Q593YfHGV4Iw3b8jzbvxds7orVeENed6NJRVux9U2vyHPuzFfeJXM
lslvyPNuaKSaBY1rMyPPu5Hlo+zYzDQjz7uR46k7LsvCjDzvhre92tf4W2bk
eTc87/+5FrPNjDzvRvHUwv3J08zI826kq9uEFHa8Js+7ke/627gn5TV53g0B
/Xd1c2xf0/e/3Xi59k3gUcXX9PueblxNmM6x2PWavg/uRvtaAc864df0+x/+
/CRM+fg/7ivyvBs3VNk3HD+8Is+7YWKLB+OcX5Hn3fh98CNb7+Er8rwbt8rX
lYyTe0Wed2Phs5USTvNfkefduK6j2LHhiyl5zp+vnW7TGnJMyfNuRM9U87Xy
MiXPu+F1w99d/pkped6NGU6Nv0WPmZLn3di1ovRD71JT8pwLjq10d/EvE/Kc
i6tXI9RSS03Icy4C5vy8HhdsQp5zYX0uK5SpZ0Kec9H9NuN09jkT8pwLpe8B
F1vWmJDnXNTHiKWMG2dCnnNxKarh2eYGY/Kci63R9m+exhqT51zImA4MJJkZ
k+dcuExkJk++aUyec7FpnnHZ/W3G5DkXdv6zdlVMNybPuRD2FP59kGNEnnPR
OU5mUu47I/Kci30dm+6fcTIiz7kwOp4swn1oRJ5zMfum5kyL/UbkORcp+yQu
yiw0Is+58JR63P2l/yV5zoX8sclZCYUvyXMuvn8PYxsHvCTPuXigIXBSQecl
ec4F1r77K3f2JXnORZWe05fNa16S5/z5bd6xYsO4l+Q5F/l5N7xkGg3Jcy4m
5SWeOxZvSJ7zx/vk21FlC0PynAvutY/69ncMyXMuBHa1f8rZaUie9+BI5pCb
4BxD8rwHZ2Kz9U/3GpDnPZCv+ewRkm1Anvdg0+T/fRHyMiDPe9C6QebF8+cG
5HkPlu5+K9N33IA870Humoern64wIM97UDJu1IlRAgbkeQ/uNkr4u9Tqk+c9
mFJlK7krRp8870GY2K8anpk+ed4D/96pzOBb+uR5D7qsjN4/3KFPnvdg8dmp
3zBbnzzvwdmd77y3NuiR5z1Qjz0fPMFSjzzvwViBY797oEee9+B/G8e7cj7r
kuc98FXv1v3lp0ue92Cl4I1g8XO65HkPdh0qnXVDUJc878GkaN+0+GQd8rwH
5mU7Ahc/0CHPezBweUKOzyId8rwHlnPuL9lW9oI857+fXRDVafSCPO9BTqHT
49AtL8jzHrzt/N8No25t8rwHVUrj9dQ8tMnzHqwI0/qodUKbPO9By7wfW5zG
aJPnPXCTYxfmJmiR5zy4VTBMZt7XIs95yLV4e/2JmBZ5zkPX6WfnOks0yXMe
+pfvU3xipEme8zC01Np25lZN8pwHQ+OMslyuBnnOg4nfgeVOXhrkOQ+FX43N
tE5rkOc88CZyfqtO0CDPebB2qtZ6mfKcPOfhpUqaQMij5+Q5D9+fjbdqX/qc
POfBPmPu4s01z8hzHqJ1bsZ4mD8jz3kw6DssO3/PM/KcBxHDnSWR/erkOQ/5
b/3PXQhVJ895kDzMLRe5rk6e8yDVqy3Hm6VOnvPw2PpDcE2OGnnOw6UtkoO1
OmrkOQ//mygq8/l/auQ5D3uP/r25kKNKnvMgce+g6g0PVfKch3ct1xSTT6mS
5zzoKERCSlCVPOfPZ6Tv94i3T8lzHuJig8wOqj4lz3n4oSn188eKp+Q5D1dX
2+Nd0xPynIeFImcuu9k/Ic978SOo8pDF4SfkeS/WPDQWdBj1hDzvRfK8EvuY
hMfkeS+e6Iv3dKg8Js97scG+a9K6pY/J8158rV3Gmh/7iDzvxapXwpvGLX5E
nvfCoPuF4DyLh+R5LwKGtl649OsBed4Lxphli7LvPSDPe2FuNPfC1UoV8rwX
M+T7hxbJqpDnvdBSs5s0NVqZPO+F/6kSbclFyuR5L3abvTqkYnGfPO/FprEu
jxoGlcjzXhR8auI8v69EnvdiWc4Wxq5aRfK8Fzhs8F76oCJ53gsjPRdheeY9
+n1vL6oTrwU5Lr+H9hHPeyFgHaUq5HiXPO9FF/u+Wsi4u+R5L8J6Hvmrqt8h
z3txRtjzj2LHbfK8F6ELK3Ven71Nnvcic3b/gsqsW+R5L9bJN1Ud2XyLPO/F
0ntPAnmBN8nzXvQdtjJJFrlJnvdi8bq5T2Ne3SDP+1Bp/+lW5U8F8rwPvIMD
55YqK5DnfSjMWWi+Nek6ed6HAy6bL+i7XyPP+9Bzd3DCQv2r5HkftNZtsJlx
+wp53gcfM/+uSwcvk+d9mBg2Z8Kv1ZfI8z4YXzvZ3DvjInneh7ipYorbBs6T
530w/bDXqbbhHHneh6q55jeL08+S531gns94Ny/kDHneB5GLsf4pVqfJ8z5s
cZWcEPPsFHneh0ObexqGrp4kz/uQwS6c7yV3gjzvw58ZG1VXXZYnz/twTWrn
hYxVR8nzPkQePVM2bugQec7//H6Rwi9FB8jzPgy2Sm4085Ejz/tgOEvia76a
LHnehwll0f3Mg3vI8z7knmfJu8vsIs/7INY7k7OgYxt53odvfrssP1tvIs/7
cPpQvOi8XevJ8z7cMrF+u7pWijzvQ/48p0cFW5eQ532Q+XKuR2LzDPL8E/77
/9D/D59c6EE=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
ecLBROtvdTL/SHi0352YgzWzj41JSo+kfOFAc/ikllvlkVih2lyGfTLwW843
NvgRSXmTgQJu9bmvw6Kg+Nk+4AxEzOs1/fncKMqfDOjPYl1nb41C+25RbRlc
75calmAeRXmUga7ex63mO0WhY7hZGeAO2NM1IDCK8ikDlmrDN3TPiELH5QZx
Me7e7N37KqIor7iIGj5d2+dHFDriaAcXNq7OwuJh0ZRfXLzbUrxITZVr/+oD
F8MGPbGZvCWa8owLg97LvReejkZHHBRycaVst+fS29GUb1y0PDW+Ps8/Grbt
x3lEJs4mSww00qIp7zLRAo0fv0qiMbXjAGWi0THLm/kaTfmXCc2jexa5DIrB
+456kYn6KdMka2fFUB5mIu92itFHwxj8r/04lGdicbyD8v7RGMrHTPgYf7w9
9kYMNNq38zgeTB9YzvDxjKG85GFi2dWqofExELRvv0M87Ft/PsQmN4bykwfJ
Dt6dEmUMzrUvry8POo2Vjtq9YilPeXh0WTvg9ORYDO848DzUF/dU+KyIpXzl
w/NMzS6RUSzS2m9vEh9/uo79VHs5lvKWD7liOOezSyyOH2t/8aFZPU/wJTyW
8pePFp3cnk2CWLSXJ1XCIuz+1ru51bGUx3zo6Kpvffs7Fu3peKWBD5OsPSY2
I95RPgsQ7e6WsGLuO5h0XFCAhHmjjn3d9I7yWoDH2UtOvDzxDmodASXAo2Fb
MpfYv6P8FsBuWrCNxOsd2ldjyBsBLkW7vdgc/47yXICBhac0eDnv0NHuWgWY
seRSP52Wd5TvQqxR63LGuUcc/rQftzlC9K4yRvn4OMp7IfI/vncavzQOQe3b
+YIQenL/rft2x1H+C3FNqeHhYBGHzf8GjIkJTmb+d+PIAyEOXZucGBsQh6/t
y/FFqHrf+V5JqXHkgwjT9vwaGFsUB+/24S4U4YBF/Bi/T3HkhQjmt0I4N/vE
Y03HBIogOqHefc+UePJDBL8zw5rGrYiHsoMHEawvqF8p2RdPnojgUDYqwsky
Hk/b4/2nCKuf3XCfcT+efBGjs4alLjcoHss7FkQM/TMTHTelx5M3Yhzuy3ss
KY5HfXu82ojxYZCT6bLP8eSPGNvHvPzi1ycB/+JPjBk75m/7NTmBPBKjyfzK
VUMkoCNeukigH/b4wl2Vg/98ksC/LGJF2vkEdBxffQkExt/l8rsJ5JUE84a6
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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1:eJxd22VYFGsfBnADC7u7FbEQAxXrRrEVuxXF4qCIAQoICkqDgnTn5ogNiKig
IiXdnbs0y4JiK+q7wH++vHw511xyZiee5/7dz8wy9dSlPWd7dOvWrbFnt24d
//3/n/b7n3I0Tu1Cc9Jf8akjc9C1rYURdTMmL927Ar/MzkdfddPBthWO0/u8
VKd/v4yg7Irh5eu3wnTE400ik6v4r6ze3El7F/2+MdTlTlpWM3txvVFhYd+H
N5AYOoan13iA/v9b6Le1+NM8xSNYVbnT0euiBQ7/uX5j6llN2p8V3FRb78/c
pYVXWwb0mGtrg2OXfqvnN5+k/dsh/8sJ9yC701gR8cHwTZADxuydyrWafpY+
7y42qm01torRRtQka8nuKCcEeEvGBx3Qoc93xpmDEzzzWs7BP37KU30dF5Tc
+9kyw0aXjscVW7QFSs4T9FD6s/MD0b3fds1RYRfp+NwRnXc39uj0yxi/oHxG
79se8FsxLU9VepmO1xMOSZbn+ZFXcOTMyo49YrRcjl2guT4dvzfuXlBePHOz
AXx9On9gqZegpzrkKp2PL/S1Xq0qLbyK4ozve6v5fthkt5InH3SNzs8fXwca
M0lnDTFW7sCg+WEBUP0TojFsnhGdbyAkai1eTZ+McEi1c4doDXK/s+uFMZ1/
MJiXmfPW37iO7cvs12rVBkPYo9w8Qc2ErkcIdse22+XJmaJ5d8ceQ+Avr7/9
ygdTuj4c+L6xyPC7cwN3LtT/vv+Jg2XWRsP37bhJ14uLLyl+k32HmGGu7SjZ
KXBxJ2b1d70cM7p+PIRtfhyY6WaO1JANkZ//8HDYforjiTm36Hry8XCVwrJA
h1vQlV2tMXICbEhyz+Q23aLrK4CpvO+hy1tvQ76Qe3m1vBC2a87m9Qy9Tddb
iISPChuO97NAaMfpDmEwv8fQR+Y6FnT9GYTzDwzSSbLA1o7djboPzvF5uqMV
LOl+3Ef/f0kJjlaWaOq43BNCMUWgNSVVbEn3JxQxb5RuZqpZoePqZU17gPt/
dCt8A63ofj3AMK29G+e3W2H2sXvvvyo+RPvsqS9sDlvT/XuIlzXDFgsjrZEs
29u4BY+govlftNNwG7qfj2DOOb5/9WUbnHOR3oDKY6yQW9EtPM2G7u9j/Bmy
6m2roi1kByc75SeocmfcP1vZ0v1+ghyveIs3VbbYJxs8sluKcccK7uxaZUf3
/ymKj80Mu+9lB57s6hVyn8Jk+6/vyW12NB6eos/woBPPNOzx5U+ecaPCM0jS
jktOMPY0Pp5hSrJ1QH4PB6zvHADPUGt70niYpgONl2fo/1LNbNQLB7iP6Twh
cFcYPBMNuUPjJwzbRm8dcfX8HXQdXhiyrEbfT4+7Q+MpDIFiJf2WCXexuPMn
HLuiaq4UXLtL4yscMyOcQq0z7sLyXYpsBIXD+r7lpHYFRxpv4fC4Nz5L1dwR
ubK7L7sm8DN/Erum0JHGXwSeh/t8lV/ghOmdO4zAGmuVi4E2TjQeI7BPt3L+
z3InGOh03IDnMP/5Zel4lXs0Pp9DqSLvjtzde4j7qii7w7JtUYXSc/E9Gq+R
UPqk6uI5wRnDuw4Qg5pNlkRucqbxG4kvdactXuo7o/PoPkTi+ieFG8EBzjSe
X2AL79s03Q/OCAtoFSZue4F7U3obj/3sTOP7BQYPtr/xYKILenSe8At4BYUv
nLrZhcZ7FFTsXnmb6LtgT9eAgatcbtgLfxca/1GYmb/odlGiCzgdp5sXBe6a
Ib3KP7rQfHiJWf04SBjniraO3R16CR/zyYtc1rvS/HiJtovvytVkObmuY/iX
voT1zBj1PC9Xmi+vcFh/x9ltsa5w7Ri+x1/BkPdIXdDkSvPnFeY4jKiqGe4G
kUnHDXmFy5djVvZZ7Ubz6TVGT6s+OFDbDQs7B/hr7K5/p/LdyY3m12u8t3It
iH/hhtse6rIh8xp9VrqvNKxyo/kWDWlCD+3+/dyRPa3zBiPx6PiDVgvdaf5F
I/Ph+CGiw+6Y2pH+0micF691nWrhTvMxBtaBaRUbQt1xpWN6XI6B9Nevbxo5
7jQ/YxBoN6BM9Zc7Yjvu7ucYTNi59l6/aR40X98gMbV4aMwWDwztmpBQ+TTq
7L4rHjR/38BRYYVDprcHOi/fzzco2GhtofTOg+bzW5wIXrHzSr0HOg/vxlt0
++L/yWuQJ83vt7C92nqeo+KJLsXfYUjitWjnY540399h1x+D+lOWnmASt8lm
9Dv0CVKSjgn1pPkv+/egpoywLE/sks3GYZbv8FNL6qj83ZPy4B0KI27MdZ3o
hR8d+sS/w8biCqZQ3Yvy4R00rx/p0/28F4LHdUyIWGg/XLp5kLMX5UUsFnx9
deHfcy9s7rzBsdBdu8Awr9SL8iMWkxpLzzp298ZHYccBxqLlUb/Vc2Z5U57E
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
EVbcdPP868D2LxHe6Vh/K7Jl81mEp27drwis2D4mQl1qVO//brN5LcKR5KNR
48zYfibCcCU/m1gTNr9FmGkzS/+oEdvXRDDY9My0wYDNcxFisxu4OpfZ/iaC
3UUzSekFNt/FqNk1be+6c2yfE8PFw6rU7yyb92JErdtv3XCS7XdifN60frfi
cTb/xVAy66529Ajb98RwE67ac/sA64EY1y/x7Xz3sP1PjI3nJdWCHawPYpwa
+eaMYCvbB8WYU5jW32cj64UYOX8Ti83Wsf1QDPX4o5kH17B+iDFv8wrp9BVs
XxQj1m3okmoVBp3xbyhGnrczz2MhQ8+DxAheqI2V8xlaL4rxesraXnmKDD0f
EmPo0KxvJ2YwtH4U461H7IjKyQw9LxJjyJz4E7vHM7SeFGP/QpuiyFFs3xSj
4dtz88HDWI/E+Peo+4GjA9n+KcbLK6OP+fZlfRKjbj3fNa0n20fFGD3s8K9P
f9n1pxiXH1S5yf8SUj8Vwz+l8cSor+x6VIzEIdNOjPwopL4qxo3ey1z7SNj1
qRie4wt+NtcKqb9WQ1n40DOhil2vVsOl/r9zLqVC6rPVGNXjuf6uAnb9Wg2F
nmvDe2QLqd9WY1xF1FwmlV3PVmOeXnKZWqKQ+m41tK5MTkp7x65vq2Hm+p9k
22sh9d9q/Di+Y+ub5+x6txq5227VTH8qpD5cDfeI+69uhLLr32psKDVM/8AT
Uj+uxroGt4l9g9j1cDXUmh4+WOEjpL5cjdkFesZabuz6uBrjbS2srjsKqT9X
Y+cbzyxrW3a9XI3f0w5oWt8WUp+uxr51F+Yam7Lr52oY3bNaeVy2Pu7q19XY
dXqr07JL7Hq6Go7tOjPkZOvrrr4t2za/8zfuFLu+rsbeb8cmGsnW5139uxrn
dtndnniAXW9XQ3wqau4L2fq+q49XY2GD14T1W9j1dzUUb2Xvi18npH5ejaon
g/OXrWLX49V4LWoPCFQRUl+Xnf9Z9ac/lNj1eQ2SLzoO2KgoJM9rsHiMdbjN
VHa9XoP2E3n8V+OE5HkN3GfPrBENZ9fvNdizeuql9gFC8rwGapv1N8n3Ztfz
NZhZFqvX/5+APK+B7qWX4n/fBeR5DQZo9hDWfxSQ5zWwr9nw+n2jgDyvQe7s
+VNcxALyvAYrVU4W7CkVkOc10PvsUNEnT0Ce12C3yl7Vp2kC8rwGvZ6eqt+W
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

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
J/mz0ih/W9E8Pp6toJRGfasVB5Y+W+q5L43yuBW2J65bTr6QRv1L/PnJs5pf
P0yjfG5FtZLmphkuadTHWmHjH+kYHJlGed2Ke1mSvG1FadTPWrFb/pdia2sa
5XcrJmzTMXz2M436WiuUzPKCN0xKpzwXn//EMeye5enU31oxYi5PFKaeTvne
BgufMR8N9dKpz7XhoMm2FjXjdMr7NkidVEmSs0+nftcGrc9FJj8C0in/2/Ax
8t3Mlsx06nttWNv30Ke8Np08aENC7yqpvL506n9tmJJ5SyNndAb50IYnh0dd
LlqQQX2wDfbWKaeqt2aQF23I/N/e1d2HMqgftkF7lzVb+mYG+dGG2pKVu1fb
ZFBfFJ9vmYy9nk8GBuPfuA3zr4h8HFMy6PugNnzxevW4gpNBz4ttuK5etnxy
TwZ9P9SGkZbr9kUOzaTnxzaYJcpeOjY+k74vEl9f/71zUrMy6XmyDYFHoJq8
NJP6pvjzbmj974ZSJnkkvr+KTi5L1TKpf7ZhzPCv4/j7M8mnNhxLOX4m8EQm
9dE2THWMeHXtUiZ51YbPa+pdlYwzqZ+24XxMoelQy0zyqw02b06v5dhnUl9t
w6ic19mBHpnkWRsqnHcutgjKpP7KhTT7koFefCb5xkWrH+/q1pxM6rNcnAkM
1pBnZJJ3XBxu8vkl1ZhJ/ZaLKfGp978IM8k/Lo5K8Yq5XzOp73IhLztGUDU0
izzkws5xLqtsfBb1Xy7CX457Vjgri3zkQteuSKpgWRb1YS4k7ynrFG3IIi+5
iPbTP1+hnkX9mItIhty22gNZ5CcXj+eebePpZ1Ff5iJowYrd369kkadcvKw8
azjmXhb1Zy603kicWWSVRb5yEbysb5La6yzq01zEF6+wOuOVRd5yUTX2Q6J1
WBb1ay5cfmgERyRnkb9c3O6XPVZfkEV9m4sozt986cos8pgLbWZ/79a2LOrf
XDBffGQb9maRz1yMGM+7FfE7i/o4F6NKSgu7R2WT11z8fONevWpaNvVzLgQh
uz2NFmST31wExpbLZihmU18Xf37yvN0yyCbP29GzSllBTzObPG+HR9f03Kij
2eR5OxauipCRvpBNnrfjf+7fhp83zCbP23Fva3d4nkU2ed6OQMvnI5baZ5Pn
7VBQLx7t4JFNnrdjenJA2s+gbPK8HaVPZ8+4lJBNnrejJHTZ/PrcbPK8Hc6u
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
Ig==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.528488, 0.470624, 0.701351]], 
         LineBox[CompressedData["
1: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
Yc2qNfNtDvpRvpZj533TskvKftSnyjHbKuFo9lY/yttyaGzAy0+r/KhflWO5
swVv6QI/yt9yHLjk/D+dqX7Ut8ohn/awPOqPL+VxOZaVqgWX9vhS/yrHt8Q7
C4VYvpTP5bjI+RFwuNSX+lg5uppDSm9m+VJel6Ox+d73nqe+1M/KYdMb+Ru3
fSm/y9HPi2BHX/ClvlaO0QHcu3x/X8rzctjJN6vvdfal/laOh+YvGxNO+VK+
VyBc4q2a4FFf6nMVuG67/p7jPl/K+wqMnq7DbWH4Ur+rQHyk40wtaV/K/wqo
WpQtyxf3pb5XgSvVD5fKCfmSBxWQb9kn+HqcL/W/CvAtv3G3f/MhHyrgI92d
/LbDh/pgBQQTLM2Va33Iiwp83ZAnXP7eh/rh4OvvG58df+1DflRg8+d+5W8P
fagvVsDhk35JaKwPeVKBiRdvqK1i+lB/rEDbwbF5+V4+5Eslyh0LtljY+VCf
rISZ0KZ4IVMf8qYSC4QDBN4e8qF+WYnTGGd5Zo8P+VMJrnh3qfh2H+qbldi4
1H1j7Rof8qgS290GLkaL+lD/rIT4tod/NGf4kE+VcNhWaDp3jA/10Upslr5c
0fTFm7yqRFP8od0Jbd7UTyvh3qOU7VztTX5Vgr/jrtK+Am/qq5VgRqWVL3vl
TZ5Voirnpfmoh97UX6vQ6MIXZF33Jt+q0Lo+IjM7wpv6bBWWMDieiV7e5F0V
PmUuOXDRzpv6bRWaUyM2+Jt6k39VSOef+s/1sDf13Sokje+TtN3rTR5WQd1B
X8VS1pv6bxWeBf3vrKWkN0Y+nqyC1/G+PFsxb+rDVZj0OVzCbZY3eVkFjJl5
N2CcN/XjKoxel8y4/M2L/KzC776Hnx9yvagvV6EocFfOuzov8rQKwiJPUlqK
vKg/VyMmdEPuuLde5Gs1tiaP/74q2Yv6dDWEF5uoaMZ7kbfVuLU7LNvjvBf1
62pk2aUbPPH3In+r8fat5DKusxf17WqcXCAquMTCizyuxg61vCUG+l7Uv6tx
5IeJQZy6F/lcjfjATQXcnV7Ux6vRpGKtv2GTF3ldjVg9LXGv/7yon1cj6Ok8
ocp5XuR3NeRFfm9cM9WL+no1rq7ZHOA/4Eme1yDYbMz0jj5P8rwG2sJX8/a2
eJLnNYg8KvP8SaUneV6D3Rvn14vme5LnNfhz2m5L+EtP8rwGbx57FY196Eme
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
vg57jFztjzBGPO/Dv/+H/n/P7Tgl
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.4}}, Frame -> {{True, False}, {True, False}},
      FrameLabel -> {
       FormBox["\"Free-living mutant (M)\"", TraditionalForm], 
       FormBox["\"Frequency of definitive hosts\"", TraditionalForm]}, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.11121702085291328`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.837775426835586*^9, 3.837775435061921*^9}, 
   3.8407975007727137`*^9, 3.8407982348317747`*^9, 3.840798320906885*^9, 
   3.840798370326756*^9},
 CellLabel->
  "Out[467]=",ExpressionUUID->"1b82a3f5-3b54-41d9-8aaf-905eade20675"],

Cell[BoxData["\<\"Dhost_mutantAndResident2.png\"\>"], "Output",
 CellChangeTimes->{{3.837775426835586*^9, 3.837775435061921*^9}, 
   3.8407975007727137`*^9, 3.8407982348317747`*^9, 3.840798320906885*^9, 
   3.840798370432177*^9},
 CellLabel->
  "Out[468]=",ExpressionUUID->"d8e25d36-e98c-41d7-b044-0c770ed1bc0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Following k values (manipulation effect in double infection)", \
"Subsection",
 CellChangeTimes->{{3.83776886488772*^9, 
  3.8377688921889553`*^9}},ExpressionUUID->"0cbea6df-5f62-411d-ba57-\
14d96fa5f8df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"park", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "0.5"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"m", "->", " ", "0.01"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837768711613483*^9, 3.837768726297327*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"709ec30d-9dbf-4b90-af89-5db234532189"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kRange", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.1", ",", " ", "4", ",", " ", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"k", "->", " ", "kRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equisk", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "park", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.837768772273513*^9, 3.837768792965199*^9}, {
  3.837772058182719*^9, 3.837772087895239*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"78911f5c-ff40-4523-b5da-516371c06132"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalI", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Iw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Iww", "/.", "equisk"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imut", "/.", "equisk"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Imm", "/.", "equisk"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalD", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Dw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dww", "/.", "equisk"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dmw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dm", "/.", "equisk"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dmm", "/.", "equisk"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypejul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Iw", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Iww", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantjul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Imut", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imm", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypead", " ", "=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dw", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dww", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantad", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dm", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmm", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "wtypejul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "wtypead"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "mutantjul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Black"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "mutantad"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Gray"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", " ", 
  RowBox[{"p2", ",", " ", "p4", ",", " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"kRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.837777975179834*^9, 3.83777812455326*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"f343a01c-4130-4195-8bdf-3a226c97a5a8"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
oXVFqtnfK+HRQm/c/7wUp4RHC2VMfF13RgmPFuo2XemZqoRHC62vYDIq4dFK
oesP+xYo4dFK88te+JQr4dFKPmXBHVqV8GilY9n2+TIVPFopcI9HTC8VPFrJ
9b6u30gVPN7RVuculyep4PGOmoeO6Rukgsc7utQwbdcSFTzeUeiNDbe/U8Hj
HfneeCiNUcHjHTloj488poJHG0UPveuboIJHG12YlDApUwWPNgosnzDshgoe
beSuu2z3SAWPNhrVx+NGhQoebeThenlrmwr3h4gPfr3FvYMa9YjYZ0v8xV5q
/F5E/GX8DK8RatzHIn7wz4HYT9XwEvGdc7+WzFTjfhPxjLiVA8LV8BOxa8rY
kEg17m8Rf13fc9MONTxFvLt+VMx+Ne5DEd/sfDL6jBq+Ihb9d21Ekhr9EbFX
1U0/jRreIv5kyN2Ot9TolxXn7TlpeqKGvxVf8568ulqN9wMrljuUiq00mAcr
7nrt910dNLhvrTg0ZW+TuwbzYcX3BxtDhmnwPmHFc3ss/3uCBvNixUmT91VM
0+B+tuJlg2e6z9Ngfqx4onsOrdLg/cOKS727zdikwTxZ8aqps2b8pIGHmJ9L
fuGjGniI2S6/ole8Bh5i/rNlZ/VVDeZNzP4bVyXpNfAQs6ZX1sI7GsyfmM/u
2W/zTAMPMef3Ex+p1mAexezZt6+bSAsPMSf/1ClWpsV8inlv/5La/2jhIeYB
p674DdLCQ8xP58bFfayFh5g3Hj1imqKFh4RPrXhSHaSFh4RnJWyXLtJiniW8
xTGua6QWHhIOse/TZZsWHhKua5hhs08LDwnHvh32/LgWHhIe4fiv/IIWHhJ2
qJqzJU0LDwk/9Mv11mvhIeGfYz4vvKWFh4SX1JdEFWnhIeEr8UmSCi08rNnx
gGFHsxYe1py7ZXSdvQ4e1hwt/nBOFx08rDnk4ObEPjp4WPOqbZveDNfBw5q5
xMt7gg4e1jxUcXDB5zp4WHNqwb0dc3TwsOYXxdaHF+vgYc3ZC4acitTBw5rl
Fxcf2aqDhzVrm1XRe3TwsGbn+bOWHNXBw4bd1YPHntPBw4ZDX4RbJevgYcN+
kXaZSh08bLj44eAVOTp42PAHO0qcCnTwED7fP+n3Eh08bLiu19yBNTp42LCm
25jz73TwsOHmKTUfOunhYcOFgUc3f6iHhw1v1k6420cPD2G/zbUew/XwsOU9
47PDx+nhYcuhF28dnqqHhy1/OrWnerYeHra8qFrxKEwPD1u+sFRTtUoPD1tu
9R/3Zr0eHrZ8wm1czU49PGw5YuytJ3F6eNjypDKZ4YQeHrbc9XPxb/F6eNjy
2kWZq1L08LDlX92mDVPp4WHLeWN0z6/r4WHH/ywZ8Wu+Hh5CHvmHzzM9POz4
tXTw9Qo9POx4/tR7wW/18LDjXDd5vo0BHnb8/e/3p3U0wMOOz+dPT/+PAR52
fPp0n+79DfCw41HapRHeBnjY8d2XAzInGOBhx4/Or2/1M8DDjm+tCfcJMsDD
nk+crA8LM8DDnk1r+YeVBnjYs+aDmcejDPCwZ+e9oy5sN8DDnn+63XxxjwEe
9nxGeeXcYQM87Hlvx8WHzhjgYc/REX02/22Ahz2LV779Um6Ahz2/jnozQGuA
hz0/rPaquWGAhz2f9Dh6+Z4BHvbcxXvO4mcGeDjwpnGRHSoM8HDgj8bVXWk0
wMOBQ7qV+0mM8HDg2rML7zkbcR87cP+DK+Z1NcLDgSNipQW9jfBw4JyewZ8P
McLDgSvlgSkfGeHhwBsVHTtPNMLDgXtGnVgRYISHAz/uIpIHG+HhwD5ZU1vC
jPBwZFq346OVRng48tth6cvXGeHhyAtuNO7faoSHIyd8OC05xggPR16hU2f/
aoSHI2d9G15w0ggPR96VOvbxeSM8HHl3W1DhFSM8HPlAmjIvwwgPR9YM/SFT
b4SHI+89k/DbTSM8HNlqvO/GAiM8HLmy85yAZ0Z4OLFkaI3rayM8nFi0oUd+
gxEeTlxwuzhWZIKHE790CGRHEzyc2OVOZGknEzyc+MG96T/2MMHDiRMvVrt7
meDhxKX/LL403AQPJ/4gPXX0WBM8nLhBVZ46yQQPJ84Z/cGQaSZ4OPHiYO8T
wSZ4SDnAf64kzAQPKRcN2he+3AQPKcdICtMjTfCQcrYpwGGzCR5Sjgp/OSPa
BA8p55zLittngoeU94bcNh02wUPKo0ePbDptgoeUZYXFHn+Z4CHl2U/rJiab
4CHlwNyVoZkmeEj5qGvgar0JHlIW9UxZn2uChzM/GH9kU74JHs7cOdP+uyIT
PJzZP0+2suy9hzPXnUn+sua9hzNvnSYa3/zew5mX3m/tbm2GhzPPm5xaLTXD
w5kXbBqmdjXDw5lLvloX09MMD2d+mhzr72WGhzO/m7LbergZHs58PntR2hgz
PGTs9WT4wk/N8JDxzd51dv5meMjYqVvan7PM8JDxZtoxLsQMDxl3tf46Z6EZ
HjL2M84KWmWGh4zfPViW/60ZHjLO3R0/a4sZHjJ2kXQ3RpvhIeO69XqffWZ4
yPgPu+Tjh8zwkPFs1cvmU2Z4yDj8/LdB583wcOHVKXPiL5nh4cJRt07VpZnh
4cKvHk8fqzLDw4VzEiM2mMzwcOFMa2lSnhkeLtz9eP/ie+89XLi3e67Lk/ce
Ltw0wnpU2XsPYb1ltwKr33u48IsAXtX03sOFTSFB31tlw8OFR9t1+8khGx4d
eEHq/tiOQv4fDeEp8A==
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.989537404892142},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8377781251080713`*^9, 3.840797503350975*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"01ed1ba6-3bc3-47d2-93d0-5f7275169897"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", " ", "DotDashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.006"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", "Dashed", "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Frequency of intermediate hosts\>\"", ",", " ", "\"\< \>\""}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k (Manipulation effect in double infection)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \!\(\*SubscriptBox[\
\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<Ihost_mutantAndResident_k.png\>\"", ",", "%", ",", " ", 
     RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.83776893725033*^9, 3.837768962611496*^9}, {
  3.83776900833016*^9, 3.837769035938229*^9}, {3.837769080783229*^9, 
  3.8377690818187733`*^9}, {3.837770887047475*^9, 3.837770934722591*^9}, {
  3.837770971218129*^9, 3.837771035822947*^9}, {3.837771132853368*^9, 
  3.837771140443961*^9}, {3.83777204981313*^9, 3.83777242981525*^9}, {
  3.837772496269198*^9, 3.8377726989757347`*^9}, {3.837772750673204*^9, 
  3.8377727996074133`*^9}, {3.8377741516412888`*^9, 3.8377742421657057`*^9}, {
  3.837774285622204*^9, 3.837774319699443*^9}, {3.840799028774767*^9, 
  3.8407990636994143`*^9}, {3.840799095437954*^9, 3.840799184956588*^9}, {
  3.840799501999016*^9, 
  3.8407995129217587`*^9}},ExpressionUUID->"579812bd-d514-4b12-b1b4-\
20d76e2a9d45"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
D3NcGWv/SZklIw9zbBpYb/bbOxl5mGOEe1ggL0VGHuaYujZIcjZRRh7m6LBw
pcIhTkYe5rjNrjI746GMPESY5P2i7rc7MvIQ4aLLGyZ1vCEjDxGKRj5IiL0s
Iw8RWu7vM+vXczLyEOH2JVvE4hMy8hBhc9aCgmeHZOQhwmnj9mjWh8jIQ4Q+
Y8+WDdgtIw8ROsXO7qndKiMPERbqNi68tFFGHiIssrn9aEGAjDxE+Kzrw+69
VsjIQ4Qrr0wNz13MPCzQN2dsl7vzmIcFfmkZe23LTOZhgXtPdfjJfRrzsMCh
LgdkVpOYhwXGZPjvKEbmYYHdJwbZJjszDwvMf3H49eVRzMMCDx9du2qHPfOw
wPQuZYKFg5iHBfoovkZgH+ZhgZdDBg0f2JN5WKBjVtg/HSyZhxg9ThQMaZIw
DzHKH1qfLDZjHmIsGWJaqDZiHmL8JDgwLLtJSh5i5JbsXpBeIyUPMQp9Pmx4
UyYlDzGGdfZfm1IkJQ8xHk7t7/U6T0oeYuxxu7bjW42UPMTYJ/9ddKZMSh5i
/Bp9ZLT8o5Q8xJgywf5EfoaUPMT4KDYiteqNlDwkqB/x+bMgSUoeEryR+uZJ
z6dS8pDg+d0BG0c9lpKHBIs8Exs8/5aShwSP9IifFRAlJQ8JTnw8f/vh61Ly
kKCp7OpvDy5LyUOCwv4nB386JyUPCc7uPfxe0wkpeUjw2Mgd1YOOSMlDgpdu
7TWas19KHhJ8eM3jw/69UvLogJohyiUJ26Xc/wF/qr/O
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.006}}, ImagePadding -> 40, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}]}}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.004516831331620262}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.004516831331620262, 0.004686038870263894}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          LineBox[CompressedData["
1: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
j63J5KGKeVqevoWy+P9fW7W5
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.5}}, ImagePadding -> 40, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Frequency of intermediate hosts\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox[
         "\"k (Manipulation effect in double infection)\"", TraditionalForm], 
         
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.44716630183038397`}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.44716630183038397`, 0.46391784815612613`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Iww\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.837772423470598*^9, 3.837772430329239*^9}, {
   3.837772485570197*^9, 3.837772573355785*^9}, {3.8377726080380096`*^9, 
   3.837772647173297*^9}, {3.837772677843814*^9, 3.837772699488367*^9}, {
   3.837772755086464*^9, 3.8377728002224007`*^9}, {3.837774226285475*^9, 
   3.837774259875527*^9}, {3.8377743141447287`*^9, 3.8377743203934383`*^9}, 
   3.837775167255265*^9, 3.840797503474572*^9, 3.8407990644191713`*^9, 
   3.8407990977671556`*^9, 3.840799128051072*^9, 3.8407991805884933`*^9, {
   3.8407995026865673`*^9, 3.840799509496747*^9}},
 CellLabel->
  "Out[572]=",ExpressionUUID->"0206e8a4-25e8-4ab9-8090-9166de756ec0"],

Cell[BoxData["\<\"Ihost_mutantAndResident_k.png\"\>"], "Output",
 CellChangeTimes->{{3.837772423470598*^9, 3.837772430329239*^9}, {
   3.837772485570197*^9, 3.837772573355785*^9}, {3.8377726080380096`*^9, 
   3.837772647173297*^9}, {3.837772677843814*^9, 3.837772699488367*^9}, {
   3.837772755086464*^9, 3.8377728002224007`*^9}, {3.837774226285475*^9, 
   3.837774259875527*^9}, {3.8377743141447287`*^9, 3.8377743203934383`*^9}, 
   3.837775167255265*^9, 3.840797503474572*^9, 3.8407990644191713`*^9, 
   3.8407990977671556`*^9, 3.840799128051072*^9, 3.8407991805884933`*^9, {
   3.8407995026865673`*^9, 3.840799509622484*^9}},
 CellLabel->
  "Out[573]=",ExpressionUUID->"e9df5a74-3569-4266-9fd9-01363be78088"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", " ", "DotDashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"colorlist", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", " ", "Dashed"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"colorlist", "[", 
       RowBox[{"[", "5", "]"}], "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.005"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", "Dashed", "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.2"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Frequency of definitive host\>\"", ",", " ", "\"\< \>\""}], 
         "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k (Manipulation effect in double infection)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \!\(\*SubscriptBox[\
\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<Dhost_mutantAndResident_k.png\>\"", ",", "%", ",", " ", 
   RowBox[{"ImageResolution", "->", " ", "100"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8377692110979967`*^9, 3.837769241442397*^9}, {
   3.8377710481290092`*^9, 3.837771107360968*^9}, {3.837771160323226*^9, 
   3.837771160617385*^9}, {3.837772826882622*^9, 3.837772886051868*^9}, 
   3.837775071569687*^9, {3.837775195102354*^9, 3.837775223725595*^9}, {
   3.840799189556755*^9, 3.8407992835215397`*^9}, {3.8407993257820053`*^9, 
   3.840799337329002*^9}, 
   3.8407994967467747`*^9},ExpressionUUID->"e923b654-c68e-4dd1-b80a-\
be53db7ca3df"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
LrAgD1XsZ58atMWCPNSwe1X7yaItDPwPU2jjvQ==
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
yOc=
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJw11ntcjPkXB/BppmaapqbNUmrdQ2SlFlstnnNWxLqszaXrYovEihRtJHfa
tlwKiyx2XZeVVnKpVPPMM2NRUiTpgpRIKd3v5ad+3/P9p1evep3nez7v83y/
z1CfgPm+YpFI9KuOSNTz83hsz0qGIZ7y5tOJ6dzoHw8ITaNSYZb36riP6elc
8qA9VS5J6VCdsvTkgox07ty6KQb5Z3nYNT4k72ReOvfeJenTf6ih02Ks94uS
dG7C+J6lgTlBb+f0e5/Obe4bP+NVqBb0zVvOTW1J5zRNoz494Q4Yth8NXiFW
cZ+Kfap4F8QOdRnbjVTc/J5yLvfAx6NfQkx/Fff//d0H3CCeEGup4kpDewpm
QIv7maVHbVRsvw9gfloG7HVUcYE921uXBdErppSETFOx/T+EDQsuzvGcp+JE
vSsHnpSfjx7vqWL95MBgRdotia+Km/mq5wGP4K6vd1ZGgIr19wgyNjQUR4Sq
uGihp4HHMD+Vr5uyR8X6zQW/9xKzygMqrred/FxI1S9323dcxfp/Am/3b1JZ
nVdxg3u2MygP2k5o3ZP/VXG95YQ88DK7ZTM1RcWt6F1PIfLhuDmClvLJh0nn
Om47Zqu4nmp94/PB7GpexMUCyusZJC73S1O+VnHNPeWansHkxJnL/WsovwLg
x4ki1K0q7v8FC2Hg8R3mv+rwLM9CkIuL7C9JeS68Z3t7iiCkZeLwuwqes+7N
txh+SE4sK/mM5x4+6FnFYDluzebmfjzXG9+657CvLahW9gXP9bbb9wWs3JU1
o98QnuvdXtILMOyzJXzQCJ7rLffjS+jO25Rgac0zjxIw6kjMGj6OZ/2UwKmk
z0uGTuCZTwls9t5UbeHIs/5KIHd9WrsxxzOvV3Dp4lVDHSee9fsKEiUDRtXM
4JnfK9hYyrvkz+FZ/6UQp/DYn+rCc73bOVAKk9KPlJ505bn/lysFd374gs1e
PNfLO74Mhq298HrhTzzXy7enDOLv3frD2pdn3mXQd3d1WOcqns3ja5humrc3
Yy3P/F/DoDuN2YfX81xWb36v4fz1zFleG3k2D+XQ1fhIZ9AWns1vOcyO3thW
vINn81EOB4+N/vpYOOX7BsZPnJk6L4pn8/IGYq7aRkuiKe83ELDH4WbiYZ7N
z1sw9I//6qdYyv8tBPsVyuWneDZPbyH8cRfEnyGPChD8FxTM+5s8KmCCn3Fh
9WXyqABx4FLniKvkUQFS7c/DBt8gj3fgYjc/6FoyebwDn7G230xN57ne+Kre
wb7i/lsfCjzX2+6USigYZDHV7S55VMKcE5MiizPJoxJ252z1XJJDHlWQbPry
ZvET8qgCvxsuZ90KyKMK7ry7Y5n9nDzew5yG4ZOdSsnjPcDg+bWJb8jjPfyd
az1taBV5VEPm8fBJUR/IoxpMbewL6xp4dn5Vg8kO/eGLWsmjBlwe8ANudJJH
Daw6NuSeiY6aedSAw73S0av11MzjA7w8mzpdLVczjw9gWbZ4cF+lmnl8gNRb
61KW9VEzj1ooyo+1uGqqZv3UwpiIjU5tFmrmUwsjL1xwgMFq1l8tdCYkde2w
VDOvWkh9NuWI2krN+q2F2i6VXvcYNfOrhbg7mnn2tmrWfx0MOXUvZM0ENfOs
g4n3Z+74y0HN8qgD6xXJATmT1cy3DipDI527UM3yqYMTXSPlVtPV7P2rgyfP
G1Pmfqfm+vU2WA/XjRYtDZyrZu9jPUyJOtsW46Lm/Hrzq4epq+z3/btIzc7b
eljzzGdghoeanef1MMB2/ZVXi9Xs/KqHyS1XsdlbzSl6820As+qlhbIVanY+
N0C9iWqL6c9qbnFv3g1w4V99m2Fr1ey8awA7n6Aa6yA1929v/g0washYwfYX
Nfesd54+/e7kGzc+VM3p9Ho0Qv/oqVfHbyWPRnCHihzbneTRCAP1gk3GhJNH
I/iaS4KHRZJHI/TFi92m+8mjEapyghP0D5JHI2xVbYxu+Z08muDxmeRTZbHk
0QRhaZNfPjhJHk2g1BMvSjxNHk3wfLSe5Oh58miCY6emvA+5RB5NkP7nqc9d
r5BHMwybZBZml0AezTDd7eAogxvk0Qy3U5q/KEkij2ZY8LmVR2IqeTRDcJdO
2S6ePJphqMIn1UVLHi3gkDmwYsA98mgB7xzZqvJM8mgBSVLNt5ezyaMF0O5k
8Npc8miBF5JC6bh88miBctOVre8LyaMVEkKkcy++II9WmP3TOpl3KXm0ghu3
2NrsDXm0ws7k7UkZ78ijFZQpkdc3V5NHK6wKsBpqXUcerbDV9aPoaSN5tMFY
vOW6rZU82iDCrXb4yE7yaIMRo2auzfhIHm0QeM59or9EYB5t8PeYpDCFTGAe
bZ/mqc35ooHAPNrBfWDckalKgXm0Q8VJr7WFJgLzaIcT3tE5Af0E5tEOc5yy
VWJzgXm0gyo+ljs0QGAe7XD4wpp5Q4cIzKMDWu7faYyzFJhHB2zyNLf72kpg
Hh1w+ttiaZq1wDw6IN1028ZvbQTm0QHLhgdEaOwE5tEBorWmjk4TBebRCYE3
ivbyDgL7fuiEgO3DwidNFphHJ+gPmm11HQTm0QmiuGtB1k4C8+gE0wGJP59y
FphHJ+x0PGvy2SyBeXTC5/FPV22bKzCPLgiQnQp+/4PAPLpgVqqzvdtCgXl0
wR92XySo3ATm0QXRKp/yEV7k0QUJN72f/raEPLrg43KP8Cpv8ugGtUVEyyxf
8uiGlHGjv7y4kjy6IVkWPFLiTx7dkGR2usIrgDy6Ia3y5YZrQeTRDctGemdJ
fyGPj/D6gEuj+yby+Ai/f1ZUdTGMPD5Cdsrwm83byOMj+D+cv2jqLvL4COFp
4ZlR4eTxEbS2Ly1yfxPY/SHCNYYbp/ffR/2I0GnDz3O9ogX2vogwOufBhBOH
BHYfi5B7fK2r8Ah5idA3ZOw/ZscFdr+J8Dfj2ZPnnyQ/Edqi2c3IvwR2f4uw
Vv8Pc/VZ8hTh/bvFK5suCOw+FOGhKSXnrf4h309/j7nw2O0K5SPC6W42dXuu
krcIqw6sl1xLpLx0UC8hQFF8k/x10P5vc4VuisC+D3Twv0JfXes0mgcdDB3v
3DaXF9h9q4N+A/6pCtDQfOige8TW5wf+E9j3hA66NV3JuXKf5kUHS9cNuXv/
gcDuZx3c9cdtoSyb5kcHm+N87nQ8Ftj3hw5eCWnOMXlK86SDxf6L3o4oIA8x
mv/lZeBQTB5itMksnTTzJXmI8aKLsMW1lOZNjNenZT/yKScPMd5cUey4poLm
T4x3bVJuBVeRhxgPP/h6blgNzaMYL40Z1Lm9jjzEOLHF8b9djTSfYvQ+6XJl
dwt5iFG0wDpxVzt5iLHM9NeC7V3kIcbvbowaFibSMA8JLs/M2h8s0TAPCf6T
8dXQNVINm2cJLuw0KfKRa5iHBDfttkx3NdQwDwme8B34YKaxhnlIsGBXotSx
j4Z5SHDMxaMBVv00zEOC/+3apN+3v4Z5SNA2UZrbbaFhHhKMUlfmvB2oYR4S
TB+TLckeomEeEoxZ5rXmuqWGeehiyeMJxsdGapiHLia/6K7cNFrDPHRxcaWn
2PNLDfPQxZWeFa4O4zTMQxc1R6dV9v1Kwzx0saiPIv3DBA3z0EV/57zce/Ya
5qGLMSnfjP3rGw3z0MU02aPM4Cka5qGLfMGYhO9Qwzx0cUN98YsvnDTMQxef
fbnB9f10DfPQxcZt28xvzyQPPYzSiRodMZs89LDvuyERC74nDz1cf/D+1wNd
yEMP321X2JcvIA89PO+9OvKyK3noYZrS/6t1HuShh9di9tuO/5E89NB75Pzw
xiXkoYfHpkyYeN2bPPTwzrarXNBy8tDDw9l4zsaPPPRQO2ex37tV5CHFDa5h
v53xJw8pWu3vY+gZQB5SbCk4WGscRB5SdPNb66DdQB5SFK70Lf8lhDykWLWu
ocUqlDykeFLzS1B+GHlIsUEud92zjTyk2NTR55zdTvKQ4tiLHYuLd5OHFJ8H
j9qz51fykOJmqy6LsZHkIcXFz4uG5O4lDxkmmo04FnKAPGQ4Ldl+p8VB8pDh
KXlgye3D5CHDoFtfXvc6Sh4yFBdpu9tiyUOGnq0x6iMnyEOGx3Squuz+JA8Z
uniMuJF5mjxkmPXkcMWyc+Qhw6HpUbHtF8hDhpefet4/cIk8ZDjIw2WTZRx5
6GN+R+o/N+LJQx/f1L9b4pxAHvq4on7Y0bxE8tDHnbYJC5fdJA99zPIrPvYh
iTz00a6gcnnobfLQxz7fD02RpJOHPv5loYmN4slDH88M7qPXR0Me+vjiwfdd
R+6Qhz4Kw5J2WdwjD33811UdeyKDPPTRw2kSDswiDzkOXHhk44ls8pDjlleK
aRaPyUOOBS9yzx55Qh5yPFs8PNYkX8PuYzk6G0wYEVVAHnKUOkz8TlJMHnJs
euYpDX1BHnI013u6+EMJecixJvTpD8vKyEOOT09HluSVk4cc/aIGK2dUkIcc
1U184c1K8jDABXNjZ4yoJg8D9I1/tOjgB/IwwK1vY6TddeRhgJdDRV4rG8nD
ALV/Tl34qJk8DLByeliDQxt5GOC6fjmOf3aQhwEmBC4dpdtNHgZ4N3QW7yfS
Mg8DnGF8VZwh1jIPAzR+eKXWWk/LPAyw1eynqEiZlnkYYLRJaW6FXMs8FFh5
bm7mdEMt81Cgw67bQaeVWuahQJ+RTpkdn2mZhwK7HrfnLfxcyzwUeDu25VBc
Py3zUOAYj7lSSX8t81Cgn0pp426hZR4K3D57rmHcAC3zUOCReeZnugdpmYcC
X9ftqJ03VMs8FKix+b31T0st81DgoMKlt2tGaJmHIZqernacPErLPAwxRPFd
cIS1lnkYoveWzWtzv9QyD0Osctg3cuA4LfMwxPCle0752mmZhyFGN6zKjxuv
ZR6GWF8Aj+snapmHIe4sMoi2d9AyD0O8fCHLZPM35GGIT3J+c0+bTB6GWJwP
vt0ceRjiCcsPDty35PFpf7IjT8KcyMMI3TR2jinTycMIDcPT/ZpnkIcR5q2x
97abRR5GODPyyMjVc8jDCA8+f5J09nvyMML2xZX9i34gDyOc0ZI1w2QBeRih
dG+ws/Mi8jDCoS15/ULdyMMIzYzKbsZ5kIcRup88YP3CizyM8O76rEDlEvJQ
osRz374pP5GHEk/3V21d7UMeSlRtdHE+tpw8lDhg+lflmhXkocS9s7//sWYl
eSgRlsTEma0mDyWaLXrzFNaQhxKLlPbFKwLIQ4lng/zT9gaShxIVgWs3J6wn
DyX66w03ywsmDyU62a+PaQkhDyUu/eLbqv6h5GGMxnmBIxzDyMMYtx2tQPet
5GGMry78yv2ynTyM8ZKH7eBDO8nDGJ+aa8rid5OHMcpWDN53P5w8jDH7seWA
sgjyMMaHiviYjkjyMMaGJ8dr+uwjD2M8rfhv/OgD5PHp+X8b+HAx5GGM4WlT
Q+cfIo/P0H3LjC2+v2u5/wHMPnqh
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.005}}, ImagePadding -> 50, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}]}}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.001056665212810604}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.001056665212810604, 0.0011377960614396769`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.922526, 0.385626, 0.209179]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.528488, 0.470624, 0.701351]], 
          LineBox[CompressedData["
1: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
kUWriDw0IDV0cEtkiclDA7i/ZqqThZg8NNB3RaPReWsxeWhAbnvt6DBnMXlo
oPpgYpZgopg8NDBsl3MRw1tMHh2waHxaSsDvYvLogLKRd/zSV4nJowMCf4gq
6b9ZTB4dMFkvHAJ3i8mjA3DSl4iLR8Xk0QGbgiZcrBWKyaMTRPuUD4afEtP7
QycMygvJ8k0Rk0cnHOzXmH0gTUwenTBz7uqs08/F5NEJUV87sx4UismjE4S5
7XlFlWLy6IR3HkeqqxrF5PEdAt8X9mnoFpPHd0h7Yzm3kSshj+8QmrX8TO1A
CXl8B8bzfNtSBwl5fIclgdKMF64S8vgOyVfuxVxFCXl0wU9TlxyPmyMhjy5I
9Nh2d/1SCXn0fD9v6MhJQRLy6ALr64vzDbZKyKMLAj3snjzdLyGPLoj12c2M
ipaQRzf8ovE75iGVkEc36OX+s7butIQ8uqFr+G6Z8JqEPLrh5Fv+6In3JeTR
Db8fq7LNeyEhj24Yt23Jng1FEjo/GHiW92jat0pdPwx0Omy4J6JRQs8LA9k3
G0ayuiV0HjPw3bQ/fPZypOTFwI0co47GAVI63xg48fJjh1X2UvJj4DTRsreZ
Y6V0fjNQ0hE5dKSHlDwZOLCE2XhoppTOQwbq/RC1vGiRlHwZ+HDh0wDH1VLK
h4Gh/XZyNwdLyZuBRx78uiQ5TEp5MTE68eG8msNS8mdiSuHFZpsEKb0fMHF5
mHD2XJWU5oGJDQeH+G2/IKXzlom/l+c5iv+R0nz01Nu26Pq1B1J6n2BioNVI
w6cvpTQvTNTEvrctfCul85mJAf9845R9ktL8MHHCsq7MD01Sev9g4ugFG5eX
dktpnph4bce/WfkcGXno4a5bgdZPBsjIQw+/9Sn2SRkmIw89HHiCFypwkdG8
6eH5eTV7/5okIw89bJH+vmeWt4zmTw8nP3cJHeojIw89XOr/btXnFTKaRz38
pSN1/pUNMvLQwykbrTw3b5fRfOoh6+wsD6cDMvLQQ2HRBc/iaBl56OHIZRFL
j0tk5KGHYWlWh12TZOTBQnh5/llesow8WHhdeMg59I6M5pmF5v4lV9iZMvJg
Yc2N5j8kOTLyYOGprZpR9iUy8mAh87bd6HPVMvJg4YY22coRrTLyYGHAF96z
RKacPFiof3vE5n6mcvJg4ZLMwwsP/iAnDxae+/RsZ80wOXmw0HK6xcc5LnLy
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
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.2}}, ImagePadding -> 50, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Frequency of definitive host\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox[
         "\"k (Manipulation effect in double infection)\"", TraditionalForm], 
         
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.0977769824261232}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.0977769824261232, 0.13020136889279563`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dww\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{
  3.837775171863537*^9, 3.837775224280155*^9, 3.840797503616467*^9, {
   3.840799235377877*^9, 3.840799250438508*^9}, 3.840799280715522*^9, {
   3.840799328010562*^9, 3.840799333382699*^9}},
 CellLabel->
  "Out[552]=",ExpressionUUID->"70b5e3c4-f147-4683-9d60-b7d03cd88023"],

Cell[BoxData["\<\"Dhost_mutantAndResident_k.png\"\>"], "Output",
 CellChangeTimes->{
  3.837775171863537*^9, 3.837775224280155*^9, 3.840797503616467*^9, {
   3.840799235377877*^9, 3.840799250438508*^9}, 3.840799280715522*^9, {
   3.840799328010562*^9, 3.840799333503934*^9}},
 CellLabel->
  "Out[553]=",ExpressionUUID->"04d336b8-06ea-49a7-8451-b6452909290d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"park2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "4.5"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"m", "->", " ", "0.01"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8377691335689573`*^9, 3.83776913672007*^9}, {
  3.837769403726194*^9, 3.837769404134521*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"5483aba7-7656-434e-9088-9ebfce5aff43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"k", "->", " ", "kRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equisk2", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "park2", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.8377691623037157`*^9, 3.837769165685417*^9}, {
   3.83776933132185*^9, 3.837769334500733*^9}, {3.837772960486788*^9, 
   3.8377729609347057`*^9}, 3.8377751558309803`*^9, 3.8377752442648497`*^9},
 CellLabel->
  "In[351]:=",ExpressionUUID->"17a45cae-5687-4f9a-aa52-c46f0a73fecb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}],
      ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", " ", "DotDashed"}], "}"}]}],
      ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Pink", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.006"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Equilibrium\>\"", ",", " ", "\"\< \>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k (Manipulation effect in double infection)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \
9\!\(\*SubscriptBox[\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837769272427176*^9, 3.8377692789146357`*^9}, {
   3.837771183208242*^9, 3.837771202023329*^9}, 3.837772955559022*^9, {
   3.837774010235056*^9, 3.8377741330817013`*^9}, {3.837774330306913*^9, 
   3.8377743527497663`*^9}, {3.8377752454668913`*^9, 3.837775247384226*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"80963a3e-6c04-418a-99f2-a4442af6495b"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJw11nk8lPsXB/AxhmHGDCEiW8lWWSskOqduaf8V3RaVW6PNVYpK3bYrLUqJ
W1q4bZRESkmbS4utxZZCZAspyb7v/B7Def6Z1+c18/rO95z3eZ7vM85lp+Nm
NovFOinBYg19/hsydMVD4KtNJ9WvicBoXWByu2EiDCr6Zb9kcrzWiVqH5y/h
+vPiKy7XRRDuYccruPUaku1rGqVuiKDO4TnziyTosbHLiGTy1ClDVwqcZrmY
LAoVwUHlmHkVB1LhaEe5Wj2TU9oNmX9Ig9+8ZgcEhImAWYxZ8S0Y5Qn8TW+K
wHFoOYd3sHPHe6UcJg/v7z1MiOzR87glgsoDQwumw/MWvRT5cNpvJhz+mF0b
w2TPoe15ZEFE6b7QJbdp/9mwJP1mRS2TWeIrB353zXngF0H15MDPqCN8gzsi
mF8x9AcfgR9h0Z5yh+r7CPlXNrlviBTBP8lDBXyC+PagPX2RVG8uuC+24wdH
iUBcTkEucN1KzKfcpfrz4OHiup9ZTNYe2o5WPmwyqjZzjRaBeLnkfLi+w57H
vieCLeLrM6S8Oep15R71pwAi1JV3T70vgqHVlGMK4FeQp2TWfepXIdjfGGWw
OUYEHUPLtRdCeMOfZX0x1L8v4H6w0ejCAxHMFC9YBD6nVHiTHlI/i2BOuKN3
EpN9h7Z3ohjO31U5vSpWBBPF/S2Bp2/yJtYzOTtz6CoBY68B0dFHIhC3z6MU
Tp3gmKnGiUBcrnIZ6GmsuhjNZPH2npdBVdzm8/BYBOLl1n2FH9o3DHIfk0c5
yJ/1XLHlCdVTDq+OLdTofkI+5eBSc+nQmadUXzl8kEjZq/mMvCqgy8OG/+AZ
1VsBdrauNvic/CqgIeMp5+Nzqr8S7tUFuoniRSDeTmAlvM1Zt72ZycPLVULE
KF+ez38iEPNO+Qas2N1zFRJEIOY78Q3s1M9q3kgg72/wSnd6kHEizWMVKCuU
RSQkkn8VTA+sWL3ghQiyxP2rgpJXkVGfX9A8fId9ZsEhG1/S/H4H/3Ilo6aX
NB/f4cMs79WHXlF/f4DldDtDmdc0Lz/AWOdhcNBr6vcPiE6bflcrieanGmbs
nOEclUT9rwatotGPpiTTPFXDQlujqBfJ5PETTs7Nnz0vhTx+grvOfu+cFPL4
Cc67d693SiWPn+AvGv+tIpU8aoDj/43nlkYeNeCnqFzQzGRx+2prIPqCwvz9
b0QgLtfuF4RZTPuD9ZY8fsGsgFK1k2/J4xc0Zmw6KHhHHrVwMkjvWNA78qiF
30YdMFd7Tx61cLUjwff6e/KoA9ODc47pppNHHYQ6bzeITCePOthZdWb35Azy
qIeSsp6tDzPIox6e3laQmppJz696MNWYsOhZJnk0wIuHZ2xsssijAYqdr+Um
ZpFHA1TcjVGBbPJohPf3lDlJ2eTRCKO4E67O/kAejeBUZ/Y15QN5NMEK7cCs
OTlUTxO4tZ7bmpZDPk1wcYn//bkfqb4m4N/OuZH2kbyaQIcTO3PuJ6q3CXJk
vE+nfiK/Jrjy/cyx33Kp/maY62I4MTmXPJthW0n435hH/WiGtfMdfF7mkW8z
PDc/bGGbT/1pBuPEfefj8+n+awbN8MAwy88iGC0usAWWgdKGuM90P7ZA9OFl
2aYFItgq7l8L5NdcqIsuoOdtCxRHGScYFNLzvAW+eG+1uVVIz68WeJQe4Kb1
RQR8cX9bIdq3cVHIF3o+t8LgkvwypSIROIv73QpXnM7oBhTR864V4nzWqcsU
i+CBuP+tsH1mUIoPkwvF89QKLpH7tXuZLCH2aION+51M9pSQRxu0yR1qqish
jzYY2DBxy+ZS8miDDSr3A0tLyaMNPDwXu68oI482SFqzbDCzjDzaIGA9y37O
V/Joh/WPbs1K+Eoe7XB7kk+LeTl5tIPFwq+rI8vJox1qpnC8tCrIox2sn06b
d6GCPNohzD7+g2wleXSASDJP6F1JHh1QHpfOaaskjw5weF8R6/qNPDrAfL2z
Suk38uiAjBk+Fg5V5NEBWTn/SKdVkUcnJM34cN76O3l0wmV774Lo7+TRCZau
3/K0fpBHJ/xItTtz7gd5MNkkp0eymjw64Zd+ie7eavLogrMlN6V/VpNHF1SZ
bL7l9JM8uqDj3sae9J/k0QXGl8r4tjXk0QWlRaML79WQRxe81ViwXvMXeXSB
94NnYWd/kUc3tAWH3uj/RR7d0HhutpN7LXl0g7t0SXZJLXl0w0yVaNbiOvLo
BoeL9Q3/1ZFHNyyVqwgxqiePHuh6niwRXE8ePXAu4IO+dAN59MBflnNk9zSQ
Rw9sUnCOqmggjx6QnrKSu7SRPHpg9fZtuomN5NELKrML+w2byKMXJrYUXLrY
RB69YLD7doNEM3n0Quieg1I7msmjF8LWXyj+0kwevTBm1UTPuS3k0QeW1vve
PGyh94c+aPj3cfHYVvLogwWfxsb6tpJHH2TWfbdvbiUP5vePF11b20YefXA0
9sTjtDby6AMp/Ux/03by6Aeu0ir9kHby6Id7ln/4sDvIox965NSub+sgj34w
yXl5KK+DPPrBer+vpl0nefSD7OuII7c7yWMAeBorIwRd5DEATqnpAV5d5DEA
jg9tbEq7yGMAMi8XR87pJo8B8GmtLIruJo8B8Ow/kaPYQx6DMCu2229/D3kM
wtHMXdzyHvIYBMMPegvse8ljEPJ77Zfe6yWPQTBYzVNX7COPQbC5fytqXx+d
Hyx8f9J+oKSP6mHhM2v9MbP76X5hoUO+V2dEP53HLLxm5XqVP0BeLHw1YMr1
GKDzjYWLAget8gbIj4UXlWRNrQfp/Gah8NDfdVcGyZOFZ73PeQwO0nnIwogr
uxNcWC4jvizkjV6Zlcbk4f6wMLXzzwhDCZcRbxYGqZbbn2HycL8kcKFCTUw9
k4f9JZBr/6RsKdtl5P1AAv2+7/kcy+TheZDA4KpVl5QkXUbOWwm0YgdoeTF5
eD4ksPuN/c7PTB5+n5DA5SdiT1lxXEbmRQKbnPrdgpk8fD5LYOckJ5VuJg/P
jwTOu9962knKZeT9QwJL1/S+i2fy8DxJ4NjD13PUpF1GPNg4aMC/uZ/Jwx5s
/HvGTrsvTB72YGPOxq6b1lyXkXlj4321vE+XmTzswcarN02zOpg8PH9sxFHW
51fIuIx4sPHcXPXxj5k8PI9stKhnH1aUdRnxYGPiMa1bHkwenk82/nIMuZAt
Sx5s7Nt1w2EyjzzYWJO+rsiPRx5sfKTQb1LNIw9J/Pd99NI5fPKQxN0LL9iG
MXl4niWx7FlFez+fPCTxlPSrg2vkyEMSj/SuzH4qRx6SuG5yXr2igDwkMWhw
Q9EOAXlIYtI9gwvpAvKQxDRbx7H6QvKQRLPTPA8fIXlIouusA+dLhOQhiT/K
049ayZMHB/3i9WadlycPDr5tiMuqkycPDtbuvW44T4E8OPj7WKFjmAJ5cDD5
r0kLexXIg4Neg1qjVowiDw4eb1W4EzOKPDio5G4kJ6NIHhz0Xf0PihTJg1lv
r/uc/xTJg4M7nH+qKimRBwen7DNM2KZEHhwskFxhkqpEHlIYPOaip4YyeUih
S6j8iT3K5CGFLWtrXTOVyUMKzSv/pzlhNHlIoX3ohpsHR5OHFDZ+se/6NJo8
pPB2lIH2RBXykMIqlpGqjwp5SOHKSI/yAhXykEJJnHDQRJU8mP3Bn9XHVclD
CsM6NukVq5KHNEb4204zH0Me0uglMVr15BjykEZHY6WMkjHkIY2TktY6WKiR
hzRm2SvdPalGHtKoPO6P/BI18pBGA/8Nuebq5CGN4ddmhvuqk4c0Vs7RmF+s
Th7SyF6k+cp0LHlI47Llm2WPjyUPaVxSrGpQOJY8pLHLZvWYyRrkwcWO8AWl
3hrkwcVMffm9uRrkwUVuVEalviZ5cHF7Y5juAU3y4KJ5yGPrLE3y4OLkcfrj
dbTIg4v1pWPKd2mRBxe12A92pWmRBxf/usorUtUmDy5qBy9RcdMmDy4mJoYY
JGqTBxfvxSgIhTrkIYNWjbnv1+uQhwxGlnDWxuqQhwxef5SaxB5HHjKof3rq
wPJx5CGDH528FG6PIw8ZVOy409U+jjxkcOao+qf248lDBj/N2Lzo8njykMFL
VWZPq8eThwxmrPbotNIlDxmcn/qb/Cld8mC+N8/oL9AlDxlsPK2fYjCBPGTR
L9hr/b4J5CGLd9iFn95MIA9Z/LrMXVNFjzxkceuv32Ezk4fPY1m0UomxfqxH
HrJo03tZVlKfPGTRP9T8kYM+ecjigfoQi1B98pDFtKjG0w365CGLmYcdEmwN
yEMWQ1tKU04bkIcsLtoVF15oQB48/DyvyVnfkDx4eOTGo8bdhuTBwzbfMWuS
DMmDh471cE1oRB48dL1lH7/WiDx4WLJ2YUykEXnw0Dba9VC7EXnwcJbMK93Z
E8mDh1UZbuEBE8mDh4fM/QaKJpIHD7tXWlkYTCIPHkrZnYfdk8iDh4K3T/Vf
TSIPPh5LSKrmTSYPPvakfDi6cjJ58HGpe39n2GTy4ONbg63z6ieTBx/HzzPy
tDYmDz7WsTd4HTMmDz5u32vwe7YxeTDfh14RqJmQBx/zNxeGbTQhDz6+8O9W
iDEhDz6GJamv7TIhDz6yL646MtuUPORw4GDGEX9T8pDDoznn1n02JQ85XPEx
TUnHjDzkcNnNoxF/mpGHHHot/qYcZ0Yecsh9yV7fZ0YecpiV3nt8rjl5yGH3
pBrfAHPykEO/I983FZiThxxaL+Fr61iQhxwm9O154mpBHnKY/NXWMNaCPOQQ
jQ/v67YgDwFuYS+7NWsKeQiwxOVDtN8U8hBgjvXocx+nkIcAx6+YsVxtKnkI
0Gvn2pYNU8lDgM76gTsip5KHAD0HG982TiUP5v+2Xh6wnEYeApz36Lri39PI
Q4AHx2pz0qaRhwCr0sxz+ZbkIcC+hEZvR0vyEKKgyZMXYkkeQjSz/bjrqyV5
CHGzi368nhV5CLFC7nTpNivyEGJVlnJ5rBV5CFFF5+vrTivyEKLPFokjdtbk
IcSIuiDNY9bkIcQXP2JC3lmThxATPN3aBNPJQ4jrg8qMl08nDyG62ejaB08n
DyFGzlxmVzqdPORRQ3RYabwNecgjZ3Hyuy025CGPCkGWztE25CGP6+Kacxpt
yEMenyjxJ0ydQR7yeJzz78q/ZpCHPApeP3FNnEEe8ujt5rWGZUse8shWbJo0
x5Y85LE2xrb0pC15yGOc7q4dGbbkIY9mdne+Cu3IQwEjHrWYOTL5/3Ff5d4=

           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
OYI8hqFrvSRjV3QE83/mAaYD
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.006}}, ImagePadding -> 40, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.0021458638477593207`}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.0021458638477593207`, 
        0.0022265057846964807`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, GridBoxSpacings -> {\
"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
5KGEtSozjaLSyEMZo5fVzBn/Xgz/B4Iw1fw=
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0.5]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.5}}, ImagePadding -> 40, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Equilibrium\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox[
         "\"k (Manipulation effect in double infection)\"", TraditionalForm], 
         
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
9\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.4484855441816518}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.4484855441816518, 0.46533970900156446`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{
  3.837769286469556*^9, 3.8377693477289248`*^9, 3.837769419440592*^9, {
   3.837771192554571*^9, 3.837771202776558*^9}, 3.8377729566023903`*^9, 
   3.8377729901584997`*^9, 3.837774012175729*^9, {3.837774103836274*^9, 
   3.837774133888603*^9}, {3.8377743595575457`*^9, 3.837774387211878*^9}, 
   3.837775248022045*^9, 3.840797506265386*^9},
 CellLabel->
  "Out[361]=",ExpressionUUID->"18333725-485a-4e3f-b6f6-8ccf02a30639"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Cyan", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", "DotDashed"}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Dashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Darker", "[", "Cyan", "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.005"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.2"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Equilibrium\>\"", ",", " ", "\"\< \>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<m (mutant fraction in environment)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \
9\!\(\*SubscriptBox[\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837774967345353*^9, 3.837774977664686*^9}, {
  3.8377750585448923`*^9, 3.837775063625909*^9}, {3.8377752369275618`*^9, 
  3.837775255374819*^9}},
 CellLabel->
  "In[362]:=",ExpressionUUID->"5ac39325-8f1c-4175-ae9a-d6c4956d4517"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJw11nk8lekXAPC74m5uiYr6oX1vaojKck4zhUZTMZq0jHaVVO57UWmjSZsK
LdNKY1QoFdpEqUhIWSIkCVlC9n2JH9c9zz/3cz6f93Puc873vM/zjlq/03YT
h8ViHWWzWP2/ly/1ryewUTdLa94wOUxa7RvfMvEpBLN36ZRpyeGJrne1TXQc
nLMNCTiuKYfrLmbC3OAXUHHM4sb0IXL4bhPd98RLGGNRYJQ9WA6GBv0rATzL
Ly/3GCSHvZp3LYs9XkFn+EbxKKkcElom9v1DIgw6k7EiWSKHvmR9GZPg8bPp
813EcrDtT2eTDKOjTqYPF8lhYH8pcGX6k96XAjmUePQnfAO26ZZ529Rov2+h
aue51UNV5SDr357LO7hp99r3JZ/2nwZL9bJct/PkwFKsDDh41ktdh0v1ZMCe
ac5rkthysCru/4NMOOXLdXJjUX2Z4JXsN2NsLwN+8f0FvIdx7sYPs34wynqz
wPR1W8ff3QwoysnNgn/tI1izuhhl/dkwnKefWt7BgF7/dnQ/wFHPipWX2hlQ
pIv/AN/aTkQuamPAUbFyIO6gPIPVyij7kwvv99VHP2xmoD+b5t1cCGic7byt
iVH2Kw92PHeuHtXIQGt/upY8eP76vPHHekbZv48wWRRm41/HgLkiYT6sjj46
97daRtnPfLity2ri1jBwpH973p+g9N+0vXHVDExW9LcArM4HfthTxUDa2/5V
AGt0RGyjSgYU7XP5DIFF13oaKxhQlKtZCEsqP6ZFlDOg2F50IbibTGR2ljGg
SLf6C+zy/f5teimj9CiCuw17DepKqJ4iyF6tZxtRzCh9iiBgkeYCpojqK4JI
q1PiWV8YpVcxNG2JCm3/TPUWg2ZWkPazAkbpVwxVM13WHPpE9ZfAkAmTPKzy
GVBsx7cECh6lb5V+ZGAgXQlMuOcwPTeXAQWvwVfQFaQkXcthQMHn/RX2WHTO
2vqBvL8CvMnZbZDNKOexFMynmfr1vCf/Unhxmr3vTSYD7xT9KwX74jaTCxk0
D2UwybAqfWM6o5zfMshtDzA2SKP5KIMFFlkM5x31txymDF/g9T6V5qUcBCfD
1ge/oX6Xw5gRUUPdUmh+KqAhUxRgmUz9rwBD7zUtOkk0TxXgy7PVq0skj2/A
sT6s8+oVeXwDwztnyy8lkMc3uMfX+dslnjy+wcIvd+osX5JHJcQElEzRf0Ee
lfDbdSvjjjgGFO2rrgTR3u2Ds54xoCjXrAo2NX56cucpeVSB9oKRM47HkkcV
5M1+IN8UQx7VcMFswuFfnpBHNWz3aV2rH00e1WAGQYLeR+TxHazdr+8vfEge
32H3lr1P4x6Qx3cI8bqWeO0+edRAwZ5jF72iyKMGTjqHG26MZJTnVw3k1h68
ZBlBHrUgGOf+eso98qiFthxW7KC75FELSX/7ubeGk0cdvHU9115wmzzqIDHd
A1/dIo86GBwa8Xt4GHnUwxXpf3rnQ6meeogdH/PwQAj51EP8lA3SrTepvnoI
Pa4y1e4GedXD1nKxCK9TvfVwcEbh7anB5FcPw8OLJTr/Uf0NENW7f4ZaEHk2
wETUHtJ2jfrRAMu6hz8sDyTfBlhqVaKVG0D9aQBh8kfD5Kv0/jXAgycbBsdc
YUBLUWAj3Oj9eiv8Mr2PjfBxUhzr30sMbFb0rxEmH1ymce4inbeN0MWXfDl2
gVGe542QeNLS8cA/dH41gmnU5hDX8wyIFP1tAmFNetC2c3Q+N4HN2RK7DWcZ
+EvR7yZoKGa/WHWGzrsmcOb6ldj5M3BP0f8m8B1aF7vYj4E8xTw1QZahl/VC
XwbYCo9m8Nsd6jf/NHk0wwdO0gk8RR7NMJ4Nc8xOkkcz1EQxV+b6kEczXN3x
KmL2CfJohvKb/+w2Pk4ezbCtzrrR6Bh5tMAOtuX/jI+SRwvYvahqNz5CHi3w
1uzy4Tne5NECw+Kin5scJo8WyI8NCzP/mzxaoLo6Y94vh8ijFTjzzhy18CKP
VphQZ+Nh7UkeraC701Xb5iB5tMIhL4eNyw+QRyvUznRb6bCfPFqh+uP/ujbt
I482iB0Tt2DHXvJoA23J0zm7PMijDbIr9+d47iGPNrBwdBrhs5s82uDW8W+q
/+wijzbYH73mSpA7ebTDxUfGH+64kUc7LAnLexDjSh7tsFn79pxkOXm0g2rL
sA05DHm0w1H/YzPKZOTRDlPuOAY1u5BHOyS7jHzIcyGPDlgn09ymtZM8OuBG
5JP48TvIowMcgnfFzt5OHh2QNjHGztqZPDqg53zNKYdt5NEBrZEHHBkn8uiE
1sf5n49sJY9O2G+/s+nKFvLoBI+YWzcjN5NHJ2jv62pNciSPTqi/n/G1cBN5
dMLzhkvOrRvJowssIMlPfSN5dMGoUSlLJmwgjy7wuzAoDNeTRxdI9KRXV64j
jy4QRhpNdFtLHl3g/6pjkd8a8uiG+MWpgnAH+n7ohqMJug7Jf5FHN1RqbVlY
tpo8uuFc9IhUzmry6AbbwLsl+qvIoxuc5v7jCyvJoxuqPa0yHVaQxw8YXGES
csCePH7AhQ0Vg64tJ48f0LojXvLiT/L4AWe5CwKKl5HHDxAHVsRxl5HHD1hh
NoYZb0cePdCzXvZo4R/k0QPjhizy2W5LHj3wNntavb8NefTAy0j/0kdLyaMH
Eo2aNhcsIY8eOCdP28NZQh690NB5TXvSYvLoBb+SUoulv5NHL8xI0GHvXkQe
veAd/dzyX2vy6AWtdbY6Kb+RRy+sKbTZ3biQ7g8W7s42WzdyIdXDwp+c/sm2
sKL3hYVfrAoyZZZ0H7PQ4KqffYAFebFQV2PWlpQFdL+x8Fa+Nat1Pvmx8FnI
cv0x8+n+ZmFX+Kekpb+SJwt9rq1qPfAL3YcszHu46vadeeTLwu0ha8sLkPrD
wuDwuptiJG8WOh44/d0UqF9sFPyZ8Gi7OfmzsfC7Jv+aGX0fsJG3T5ibYUrz
wEb9p1Omck3pvmWjRhmLZ2RC88HGi3c0HLbOpe+JvvzWVXMC5tC8sFEoG3wh
czbdz2ycY6PhpjKb5oeNzy/vyjIxpu8PNg7zeBspM6J5YuO9i1elobPIg4Ne
I12/FxqSBwfjQ75YDjUkDw562juPWmxA88bB+ckhu4/8TB4cvC/S//35TJo/
Ds6M2hDYPoM8OLg1ke388wyaRw5yU44/dP6JPDhoHuPjETKd5rPveenFmJJp
5MHBkMfgpjuNPDi4Tkfz1sqp5MFB9rAQ+wtTyIOLTjwfz+zJ5MHFKctsR2lM
pnnm4nG+/9ylk8iDixau+amnJ5IHF6e/j89+N4E8uLg2sdBOMoE8uNi7JcH6
9/HkwcW4RSpPTo0jDy7auZpdTRtLHlw0WN7bLB1LHlzkFJXE24whDy5OdD7I
PzeaPHjokur8NGcUefBwH/xaoT2KPHjouPeK91/65MFDDFa/EKRHHjyMsTYa
Ua5LHjz02xM+eIouefBQP0jk4fI/8uCh6s3aPx6NJA8eXsyvD+weQR483Nl7
Z+WvI8iDh/xf44+c0CEPHs6Z92b0e23y4OFbzobpOtrkwce27klh64eTBx8F
g5+duT2MPPj4xiemqnkoefDRcNzLCPOh5MHHD707S49pkQcf3UMdvbM0yYOP
V7QWnNXVJA8+Dgm5LXEaQh58PDTOpPmhBnnwsfzlOQuOBnnwcZzWSt6SweTB
xyi9adOuDiIPFSy1inhRKSUPFXzscCTOWEoeKjj3vO34I+rkoYKjj0S3ZUvI
QwUdZqz+eayEPFTwdFvxB7mYPFQwIri2OEFEHirou3bCn5oi8lBB52czf94k
JA8VXB9+3+2RgDxUcNqhP/TVBOShgp4tj2euVCMPFXykeywsXJU8VPGPXduO
9qqQhype+yhItVUhD1Uc7SlyvcknD1U04Wsf6uSRhyo+Xv+peTGPPFRxRUNX
ajCXPFRx45axqh0c8lBFy889NxZzyEMVOQmzQq+zyUMViyrlki4Weahiy4GN
H2xY5KGKoaL7vaG9MqWHGq5wE51k9cUDHmr4uVvbw75HpvRQw6nmPikRP2RK
DzUs/EnsIeiLBzzUMG70bz7ru2VKDzV0f9nYHdslU3qoYY/0QZpWXzzgoYaL
t5myXDplSg81bDw21/9Nh0zpoYYn3P/yGtcXD3io4aZLdhme7TKlhxqa3U3f
X9AmU3qo4bHkA8dn98UDHgJcZqvRdK5VpvQQ4C2RSUxDi0zpIcDfhLcKF/fF
Ax4CNHgyaG14s0x5Hwvwpzx9c2FfPOAhQM+9J3dvaZIpPQS4X6QiTWqUKT0E
OGQ+ssf3xQMeApQZ1i72bpApPQQYZJ7QVlovU3oIcMQwedf8vnjAQ4A7XkWu
uFFHHkJMCjTQUKkjDyEGLrkzdnMteQhxWWaWX3INeQjx1Y7Vf06uIQ8hVsR3
u578Th5CdIx2+l5bTR5CtDu++qlNNXkI8XbcsdIHVeQhRMGMmxuHV5GHEI24
zqb7KslDiLm3/bcVfSOPvuer0xrmfyMPIXamfUoLqyAPEZ6McuFIK8hDhN2m
Fiddy8lDhEfXaTnnl5GHCNXXXAjCMvIQ4aXn3lNDSslDhAb2l8XqpeQhQjsr
33luX8lDhBEduqkFJeQhwlQ9Xtj8EvIQoe/jjvzwYvIQoVA1dq1WMXmIUBrA
nXugiDzEmL7U17HiC3mI0XeeTvnSL+QhRrOctdExheQhxp+f6X0eW0geYnxe
PcTO9zN5iPFTQOfIzgLyEGPNMn/jTQXkIUajgvPBGZ/IQ4yx5q/Xmn4iDzHG
ZxTtCM0nDzFenHz9nWY+eYhx3KT0fV4fyUOM4TX6+2rzyEOCTp/tU1flkYcE
fwkyckrJJQ8J7hnnYW+cSx4SXHTp6/kbOeQhwTs7DEZr5pCHBGtXTP5x6AN5
SHC7zfHxjdnkIUHDU4MD12WThwTfHzm8ITOLPCRY3B7sPi+LPCT4qnBmbuR7
8pDgYtf6w6Pfk4c6+s367+DZTPJQx+2FgiReJnmoo4VT1Ur3DPJQx/dDVE2+
pZOHOt62G7N5ZTp5qKO4jPPlbRp59OWP3fofpJGHOiaJR0ZGvSMPddSwLhSO
f0ce6gjj3e5dekse6jjb50ag5C15qOObYMM8r1TyUEfLnIpVrW/IQ4q2iYcn
bXtDHlI8vCQTi1LIQ4qTfM8GLUshDylWfvS3Tk0mDymGvThjPi+ZPKTIkf7l
8TiJPKQ4LfVxz7Qk8pDi/VlOqddfk4cU1VJMika8Jg8pOs9pNj2bSB5S9HRd
VSxMJA8pjgia8+7QK/IYhBy95ayuBBn8H+JuFx4=
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
827SuBVq+D9pYugJ
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.005}}, ImagePadding -> 50, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}], 
         RGBColor[0, 0, 1]}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.004319316798615435}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.004319316798615435, 0.004660848845737673}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 1]], 
          LineBox[CompressedData["
1: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
/Xg18+DhnKR1cu5ENfPgYU15wZB+k9XMg4dVkyOfjpumZh48/P7+sCtzPNTM
g4c9mtT3g2armQcP61O130X5qJkHD28XxSp3zVczDz7qxjgfP7hIzTz4aHhM
k3MkQM08+Hhg8SvHU8vUzIOPmTiyKm2lmnnwMSYmujE9hDz42L9giU/aevLg
49Dle7knw8mDjyu4x0WHN5AHH7d9HReSEE0efNzdQzdwRwx5fKtfEjs5fCd5
8PFlYLB6aRx5GGHJvLGnZ+0jDyME612fnRLJwwhHZr8+3Oc38jBCjvbuDU4K
eRjhkImP3d6lkocRPngWMS7nBHkY4bmzzudOnCEPIwzfkLJ3YwZ5GGHFC9HH
2RfIwwirewvl/bPIwwh/280za7xKHkZoZRdamneTPIywsezmmEPZ5CHAx+lg
GqAgDwFOH7Jh7UANeQjwv8GKuVW55CHAwbPC713JJw8B3h/deD/sIXkI0H5n
mt8PT8hDgMFvHm+vfE4eAvyz8sm4jL/JQ4Db1zTt8X9NHgKcOiA53LyEPAQ4
pqGuKbeMPAR4tci3d+RH8hDik/fmb+3LyUOIH+cunlpQRR5CbE/Y6rWhljyE
6No3i2tbTx5C9MobHJDTRB5CvLdxyIqgNvIQYljQB2vDTvIQYkHLFPAy0DAP
IV4NyXhga6hhHkJs6hjsWMHTMA8hLnr+OexPIw3zEGJOljZhu1DDPIQY3Om/
x91YwzxE+LbMObCbWMM8RNjf9pB1kamGeYjwiMO268clGuYhQtvhhsMDzTXs
PhahzmjkvgEWGuYhwvbp5g8/WWqYhwgnjs+qPW+lYR4i9PxX3B7cS8M8RMjX
jq0ZaKNhHiLconW896G3hnmIsKNX574zthrmIcJ3S886L+6nYR7GGL3nuyc9
7TXMwxgbukf7PPtOwzyMcYjHxTt7B2iYhzH+itfsJg3UMA9jbHm+f13TIA3z
MMbNF50u/jFYwzyMcejEC0VLh2qYhzHqCt82WgwnD2OMj38mvDuCPIxRMynK
bKMjeRjj0780wkGjyMMY72RmNr8cTR7G6Blg93aXE3mYYKKjjdLRmTxM8Pq0
+EPF48jDBGUZC4LiXcjDBG1GRQ8fOYE8THDbtWLtP27kYYLzH625uQPIwwTP
SCwiHCaRhwlurFH88HgyeZjgjVyfyvAp5GGCKS8U56ymkYcJBnm+WyadTh4m
WDPrgp3fDPIQ4+TixtI2D/IQo0PD5bPHZpGHGO/svLnWZTZ5iFESVD7+1Rzy
EOOOVSNMo7zJQ4wxfkGfu/1EHmL83Lby/qW55CHGDG7Pm1Pnk4cYe/b3yixZ
QB5izBTXnNvgSx5iHLP24VVTP/IQY1J1zt10f/IQY/uEi+XjAsjDFH8X+tsU
LCEPU3xocNl3aSB5mOKDkqhM7TLyMMVPfnsEu5eThylauEk3Wq4kD1N0mfOm
JT2YPEzx/GpN4qjV5GGK60PHO2tCyMMU87ys6metJQ9TXCUeePfVOvIwxdqr
Yy8HhZKHKToG9MiqDiMPM9w7LTF3Qzh5mCFeXavVRZCHGT5rjHaJiyIPM5x4
YOdx8UbyMMPFrTOtf9tEHmY48MPJa1bR5GGGLUaTVx7dQh5m+MW1zdl2G3mY
Ydumg4NOxZCHGf78/I6T3S/kYYaCrQuDTu8gDzMc9aD7tX67yMMMF4y+0e/k
bvKQoIV365XeceQhwZVl55cdiScPCdbkR4+z3EseErSXjBx1cB95SDC6PN5L
dIA8JJh23TV5ZwJ5SPByrUDXmkgeEpw673xieBJ5SDBH9WJa+a/kIcEV46cN
WnKIPCS4lXPbsTCZPCS4ffu/Qe4p5NENXX4Ky5Ef1sD/AKbLeGk=
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1: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
S8FKPcFKJI8e+HjM8r7fjRLhfz3pO/M=
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.2}}, ImagePadding -> 50, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Equilibrium\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox["\"m (mutant fraction in environment)\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
9\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.0974578113559437}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.0974578113559437, 0.12963053651096762`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dww\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{
  3.837774980461409*^9, {3.837775059323785*^9, 3.837775064491191*^9}, {
   3.83777523828832*^9, 3.837775256871273*^9}, 3.8407975063980637`*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"310403bf-a4b8-4310-869c-13fc935629e2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1404, 842},
WindowMargins->{{Automatic, 13}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1ec55e3e-544e-4d33-b73d-cc0b18fbaff6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 262, 4, 146, "Title",ExpressionUUID->"ca6339fa-87b0-4c9a-bcc5-07c99afb164f"],
Cell[CellGroupData[{
Cell[867, 30, 178, 3, 144, "Chapter",ExpressionUUID->"00267e49-4f01-4b7a-b465-4503f9c63b4e"],
Cell[1048, 35, 4686, 99, 253, "Input",ExpressionUUID->"1f09bc19-4e76-4681-bb03-666be7d80279"],
Cell[5737, 136, 1600, 42, 103, "Input",ExpressionUUID->"08ab7a49-e39b-4abb-bfcf-3344bce114af"],
Cell[7340, 180, 1880, 48, 166, "Input",ExpressionUUID->"dc11f015-4138-463f-99bb-5a2bc8ef7948"],
Cell[9223, 230, 944, 25, 141, "Input",ExpressionUUID->"f9870ea7-3eb4-4c4c-ac44-51c0f88b4712"],
Cell[CellGroupData[{
Cell[10192, 259, 566, 15, 64, "Input",ExpressionUUID->"40f22f17-4072-4551-abee-6878ca5b08ba"],
Cell[10761, 276, 1034, 27, 70, "Output",ExpressionUUID->"cfea430e-f0b6-47c7-91b9-8170edf3f339"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11832, 308, 683, 17, 64, "Input",ExpressionUUID->"86b4a1c5-09fb-4f4a-9003-ad80da6b36c1"],
Cell[12518, 327, 1540, 42, 70, "Output",ExpressionUUID->"48d52ba5-8478-418d-a89c-23d6e62155bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14095, 374, 178, 3, 459, "Subchapter",ExpressionUUID->"619a35d5-cd93-4b58-9eeb-4918a7b1ffca"],
Cell[CellGroupData[{
Cell[14298, 381, 159, 3, 478, "Section",ExpressionUUID->"5bedc337-ccf0-4960-ad0a-246111f56bb3"],
Cell[14460, 386, 2209, 54, 474, "Input",ExpressionUUID->"cbbfe1f8-6815-48a6-845d-0f388dcb62f4"],
Cell[CellGroupData[{
Cell[16694, 444, 206, 4, 216, "Input",ExpressionUUID->"80fc8eae-fb1f-459a-8db6-454bb416cb27"],
Cell[16903, 450, 1784, 49, 70, "Output",ExpressionUUID->"29a6bd20-b41f-410e-8d1b-486cdf33bb86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18724, 504, 443, 13, 216, "Input",ExpressionUUID->"b6a2d9dd-aa58-44db-b753-617dc4e7e622"],
Cell[19170, 519, 397, 6, 70, "Output",ExpressionUUID->"433c8c9f-9f38-411a-98d6-e02238fe5887"]
}, Open  ]],
Cell[19582, 528, 464, 11, 216, "Input",ExpressionUUID->"30f2022b-44b1-4066-a4a4-8055819bb60c"],
Cell[CellGroupData[{
Cell[20071, 543, 603, 16, 216, "Input",ExpressionUUID->"542f9952-c7be-455e-b204-c922ed16a464"],
Cell[20677, 561, 643, 16, 70, "Output",ExpressionUUID->"2c545ebe-1637-40c4-8e78-8876f57d63da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21357, 582, 880, 22, 346, "Input",ExpressionUUID->"687b7706-89d0-43d3-836e-9f061d42007e"],
Cell[22240, 606, 3135, 85, 70, "Output",ExpressionUUID->"d4c0e6f5-07a3-456b-8b12-5d94aa9fc373"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25424, 697, 180, 3, 478, "Section",ExpressionUUID->"a9e5d69c-a01f-4843-a6de-0048bd5b8a5a"],
Cell[25607, 702, 2411, 63, 688, "Input",ExpressionUUID->"3b56881e-1eaa-44d9-aaa9-12fe23ff709c"],
Cell[CellGroupData[{
Cell[28043, 769, 448, 13, 216, "Input",ExpressionUUID->"72927999-1ef4-462c-9434-f839bbb3501a"],
Cell[28494, 784, 271, 5, 70, "Output",ExpressionUUID->"8f245896-7b36-4ddc-821a-fdb9b276f562"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28802, 794, 409, 9, 216, "Input",ExpressionUUID->"8adb9b6b-5caf-4cb9-ad8a-e00a59804d13"],
Cell[29214, 805, 6424, 174, 70, "Output",ExpressionUUID->"c8700008-0290-43e5-817b-7e00a0fb9068"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35675, 984, 1192, 32, 346, "Input",ExpressionUUID->"84934df3-cf32-4f91-9d81-68e378acf7de"],
Cell[36870, 1018, 1954, 53, 70, "Output",ExpressionUUID->"b102d632-44e6-4dd4-bc64-4bb372fe7c4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38861, 1076, 1107, 26, 346, "Input",ExpressionUUID->"cd261487-9253-4d90-83db-fca19426ca3d"],
Cell[39971, 1104, 3368, 89, 70, "Output",ExpressionUUID->"94749692-b9ca-4255-951d-6085d4a7d90c"]
}, Open  ]],
Cell[43354, 1196, 1000, 23, 346, "Input",ExpressionUUID->"63f7c73d-1637-4f69-a84a-4b1687dab978"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44403, 1225, 215, 4, 459, "Subchapter",ExpressionUUID->"05888b6a-d911-418e-82cf-b8497d51ae84"],
Cell[44621, 1231, 810, 18, 346, "Input",ExpressionUUID->"ca867795-a0ef-422d-9e37-44cd7e4ad312"],
Cell[45434, 1251, 2201, 36, 346, "Input",ExpressionUUID->"940291cb-860b-42f6-a8a6-939164131f81"],
Cell[CellGroupData[{
Cell[47660, 1291, 2015, 49, 600, "Input",ExpressionUUID->"80ddafbb-bc10-4885-a06a-70e23ecf87f2"],
Cell[49678, 1342, 530, 12, 70, "Message",ExpressionUUID->"984201c0-5cd5-404e-80b0-2caec3b99ba4"],
Cell[50211, 1356, 349520, 5975, 70, "Output",ExpressionUUID->"31ca71cf-b39b-4efa-aea8-99c11f1d9b09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399768, 7336, 849, 18, 346, "Input",ExpressionUUID->"e1a7834a-ccca-401b-92c9-a73370150f20"],
Cell[400620, 7356, 161752, 2766, 70, "Output",ExpressionUUID->"d01ec8ef-38f1-4120-b166-0c60e701c8bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562409, 10127, 2884, 66, 852, "Input",ExpressionUUID->"e977780a-4867-43ea-959b-1a9b2ab6363a"],
Cell[565296, 10195, 4315, 99, 70, "Output",ExpressionUUID->"70a1dbbf-5a4c-45b2-90e2-deb5c3abc4f9"],
Cell[569614, 10296, 81961, 1600, 70, "Output",ExpressionUUID->"ae59595f-9cb3-4770-a222-a3c79f760cec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651612, 11901, 997, 24, 346, "Input",ExpressionUUID->"85fca892-a36d-4286-bff9-1bba7b96e5d6"],
Cell[652612, 11927, 356146, 6018, 70, "Output",ExpressionUUID->"2bb79f2e-0a44-42aa-9b86-dddedabec4fb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008819, 17952, 160, 3, 144, "Chapter",ExpressionUUID->"ead7366e-8288-4106-8d8b-fd2d25b516f4"],
Cell[1008982, 17957, 1509, 37, 141, "Input",ExpressionUUID->"6eb89505-af62-4961-937c-4349fe0b0afe"],
Cell[CellGroupData[{
Cell[1010516, 17998, 211, 4, 64, "Input",ExpressionUUID->"b0ca857d-2406-43cc-8c79-9696520b430c"],
Cell[1010730, 18004, 357, 9, 70, "Output",ExpressionUUID->"0041b1bc-f4e2-4610-b367-daeb0b5f3bf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011124, 18018, 2212, 47, 103, "Input",ExpressionUUID->"f4cebc04-e340-4298-96e8-c328fb91eaee"],
Cell[1013339, 18067, 1597, 41, 70, "Output",ExpressionUUID->"987ba603-c9e1-48be-a390-fbfe57b69ac1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014973, 18113, 437, 12, 64, "Input",ExpressionUUID->"5c27a301-7908-4963-8f7e-c73d2fc6019f"],
Cell[1015413, 18127, 351, 6, 70, "Output",ExpressionUUID->"6505617f-172d-45a7-bd68-2456bb959cdc"]
}, Open  ]],
Cell[1015779, 18136, 928, 20, 64, "Input",ExpressionUUID->"e835df04-3c93-4bd7-a1fd-7abd64356d4e"],
Cell[1016710, 18158, 2018, 43, 64, "Input",ExpressionUUID->"b472f2a9-38fc-4d0b-9694-fb108fa525d0"],
Cell[CellGroupData[{
Cell[1018753, 18205, 457, 10, 103, "Input",ExpressionUUID->"795b1e23-f110-433f-9cf9-8d9c6fba297d"],
Cell[1019213, 18217, 522, 8, 70, "Output",ExpressionUUID->"d0abc0ba-b8dd-44c4-b090-2ac0ff5b98d9"],
Cell[1019738, 18227, 1475, 39, 70, "Output",ExpressionUUID->"8208e86d-211f-4266-b8cf-7de1e51cb195"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021250, 18271, 709, 14, 64, "Input",ExpressionUUID->"2f501709-b002-41bb-9989-8b1ba6a84626"],
Cell[1021962, 18287, 1020, 23, 70, "Output",ExpressionUUID->"9bc094cf-5382-45e4-88db-6369d0ace38a"]
}, Open  ]],
Cell[1022997, 18313, 1250, 29, 82, "Text",ExpressionUUID->"7bb01226-5372-4f4f-9a39-b27c75757ca2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1024296, 18348, 160, 3, 105, "Title",ExpressionUUID->"b519b780-77d2-4c70-8c3d-811b91a8bcd9"],
Cell[CellGroupData[{
Cell[1024481, 18355, 223, 4, 103, "Chapter",ExpressionUUID->"dd4b5a4b-eede-4a27-8273-45cb623f333e"],
Cell[1024707, 18361, 1176, 20, 364, "Text",ExpressionUUID->"53d39168-2dfc-4d90-bfa8-ba3f534c761b"],
Cell[1025886, 18383, 3431, 82, 140, "Input",ExpressionUUID->"1f08c411-ab54-4265-81be-9d55fb614f48"],
Cell[1029320, 18467, 4138, 108, 233, "Input",ExpressionUUID->"9ce41093-4225-461c-a9c9-73fb268ab8a1"],
Cell[CellGroupData[{
Cell[1033483, 18579, 2412, 58, 295, "Input",ExpressionUUID->"e651ecba-13f1-457c-bfa5-053b1ab8407f"],
Cell[1035898, 18639, 533, 10, 52, "Output",ExpressionUUID->"b3335d61-62a2-4861-aa3e-5bf2ff2ba3c6"],
Cell[1036434, 18651, 486, 8, 52, "Output",ExpressionUUID->"ed7f2cad-32a9-4c4f-a5c0-52d4d461b2a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1036969, 18665, 178, 3, 103, "Chapter",ExpressionUUID->"f0663439-c0ad-4d3d-84c1-740427d25584"],
Cell[CellGroupData[{
Cell[1037172, 18672, 161, 3, 97, "Subchapter",ExpressionUUID->"6c5f7166-9488-407b-b8bf-9003eb388c52"],
Cell[1037336, 18677, 542, 15, 46, "Input",ExpressionUUID->"64f0069c-06b5-4381-838a-143372770f77"],
Cell[1037881, 18694, 547, 12, 46, "Input",ExpressionUUID->"d334ba56-4687-4ea3-b753-e49b040a939c"],
Cell[1038431, 18708, 1202, 25, 78, "Input",ExpressionUUID->"80430831-3bd2-483a-81c4-b87d1ea8279d"],
Cell[CellGroupData[{
Cell[1039658, 18737, 1406, 26, 109, "Input",ExpressionUUID->"98ab2213-183f-426a-a183-5a05231f5c7e"],
Cell[1041067, 18765, 2422, 56, 70, "Output",ExpressionUUID->"7436caf0-a08b-448e-8bc5-244cd5dd949d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043526, 18826, 1479, 33, 144, "Input",ExpressionUUID->"08ad92b2-4505-4fae-a223-355feea40529"],
Cell[1045008, 18861, 1094, 26, 70, "Output",ExpressionUUID->"b0aa94b1-6e92-4096-888d-856decd23de5"]
}, Open  ]],
Cell[1046117, 18890, 3510, 90, 200, "Text",ExpressionUUID->"3855d051-a6d0-4aaf-bd84-320ecca8232f"],
Cell[CellGroupData[{
Cell[1049652, 18984, 2196, 54, 177, "Input",ExpressionUUID->"77abe6f7-a63b-40fa-9d91-107e278d443b"],
Cell[1051851, 19040, 203, 4, 70, "Output",ExpressionUUID->"3224dc73-71db-47b5-a758-5a9ce640cb88"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052091, 19049, 1158, 22, 109, "Input",ExpressionUUID->"3f673ed7-7515-4e58-b8df-f48c85c4fb0c"],
Cell[1053252, 19073, 2074, 47, 70, "Output",ExpressionUUID->"a7b74420-d4b0-4895-b0f1-c218731839b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1055363, 19125, 1297, 31, 144, "Input",ExpressionUUID->"6288b50b-bb06-4613-9127-5e5759f92a4f"],
Cell[1056663, 19158, 920, 25, 70, "Output",ExpressionUUID->"ead46fc6-4721-485a-a9ef-b605a890c5a1"]
}, Open  ]],
Cell[1057598, 19186, 2321, 67, 154, "Text",ExpressionUUID->"ea88c27e-2ae8-4645-b683-d5fb4970a841"],
Cell[1059922, 19255, 707, 19, 46, "Input",ExpressionUUID->"9535a2a4-f912-42a9-b294-8267a1d57930"],
Cell[CellGroupData[{
Cell[1060654, 19278, 982, 23, 78, "Input",ExpressionUUID->"9b8fa279-6c2b-4f9c-a9e2-e7851a871141"],
Cell[1061639, 19303, 642, 14, 70, "Output",ExpressionUUID->"7921e77f-71c0-4b09-babd-39b321ef8369"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062318, 19322, 910, 22, 78, "Input",ExpressionUUID->"0c676acd-1c54-43c6-b695-f2985c193337"],
Cell[1063231, 19346, 568, 13, 70, "Output",ExpressionUUID->"715df149-c14e-4f81-a368-f13258ef7539"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1063848, 19365, 231, 4, 97, "Subchapter",ExpressionUUID->"20018efe-fe31-4da0-bd86-2336bee1e156"],
Cell[CellGroupData[{
Cell[1064104, 19373, 778, 19, 46, "Input",ExpressionUUID->"12b509ea-73b9-412d-b68a-61a7a05222f6"],
Cell[1064885, 19394, 2681, 79, 70, "Output",ExpressionUUID->"2736d3e7-e1b1-4611-ac6b-b397c9b888ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067603, 19478, 211, 4, 46, "Input",ExpressionUUID->"f3062a05-5bd0-4bb7-b13c-7dfd5d835bb6"],
Cell[1067817, 19484, 2836, 84, 70, "Output",ExpressionUUID->"cbb96b60-c5dc-45d2-bcd5-2c8be91e139a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070690, 19573, 394, 9, 46, "Input",ExpressionUUID->"612a91ce-98e5-4f74-91bb-d4badbda8371"],
Cell[1071087, 19584, 4194, 119, 70, "Output",ExpressionUUID->"fcb73245-cec3-42c3-849b-206c03d51308"]
}, Open  ]],
Cell[1075296, 19706, 168, 3, 53, "Text",ExpressionUUID->"7027cf17-8976-4a9c-86d8-565e68c0934a"],
Cell[CellGroupData[{
Cell[1075489, 19713, 656, 15, 46, "Input",ExpressionUUID->"61480f75-38c5-4619-846f-5dff8615c97d"],
Cell[1076148, 19730, 551, 13, 70, "Output",ExpressionUUID->"eb660401-491c-4b70-a161-499433768b86"]
}, Open  ]],
Cell[1076714, 19746, 214, 4, 53, "Text",ExpressionUUID->"77d3767b-c38b-48e2-8d14-2ef478b91ee2"],
Cell[CellGroupData[{
Cell[1076953, 19754, 232, 5, 46, "Input",ExpressionUUID->"e32f4cfb-ab74-437e-9b85-50b9590626a2"],
Cell[1077188, 19761, 1075, 30, 70, "Output",ExpressionUUID->"fc19e2ad-9b2b-4d24-955f-d624e822578f"]
}, Open  ]],
Cell[1078278, 19794, 5199, 147, 585, "Text",ExpressionUUID->"52261f5e-9f2a-45e1-9a24-46c8910ca68a"],
Cell[1083480, 19943, 246, 6, 53, "Text",ExpressionUUID->"c8acdb41-5833-4735-adad-25ba4fa00165"],
Cell[CellGroupData[{
Cell[1083751, 19953, 1041, 24, 84, "Input",ExpressionUUID->"05fbd30c-a5ef-429a-83d8-f0fa2d5e75cc"],
Cell[1084795, 19979, 323, 5, 70, "Output",ExpressionUUID->"ba1296aa-4056-46f2-b232-dc10be56c8ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085155, 19989, 232, 5, 46, "Input",ExpressionUUID->"f4238276-0046-42d9-9d05-dc398a35df4a"],
Cell[1085390, 19996, 1265, 35, 70, "Output",ExpressionUUID->"f3440fde-1c19-42e8-959a-a353c3f9a7d2"]
}, Open  ]],
Cell[1086670, 20034, 249, 4, 53, "Text",ExpressionUUID->"36f2512f-7302-4f87-b271-602b8437d848"],
Cell[CellGroupData[{
Cell[1086944, 20042, 828, 18, 46, "Input",ExpressionUUID->"5961aad3-1ac0-4b88-863e-cbb76442b984"],
Cell[1087775, 20062, 329, 5, 70, "Output",ExpressionUUID->"0f5e15cf-2ae7-4276-b283-07b7f9c485d5"]
}, Open  ]],
Cell[1088119, 20070, 188, 3, 53, "Text",ExpressionUUID->"25833fbc-c06f-438c-9ae6-a69ebad62540"],
Cell[1088310, 20075, 4657, 115, 534, "Text",ExpressionUUID->"a2d6abbc-ce26-488b-be48-1b41494cbee2"],
Cell[1092970, 20192, 198, 3, 53, "Text",ExpressionUUID->"3dce1f40-ca9a-494d-8323-3a9d18d6a3e4"],
Cell[CellGroupData[{
Cell[1093193, 20199, 849, 22, 81, "Input",ExpressionUUID->"808328ce-8947-4dd3-818b-1a698f14ccc8"],
Cell[1094045, 20223, 975, 26, 70, "Output",ExpressionUUID->"69540840-a043-4dc7-b140-b6e70ff01b0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095057, 20254, 1437, 39, 171, "Input",ExpressionUUID->"2d47f0be-c101-45de-a58b-490edfdaa78f"],
Cell[1096497, 20295, 847, 21, 70, "Output",ExpressionUUID->"d290dedc-7d8c-4d1a-8ad8-bc2749f8cceb"]
}, Open  ]],
Cell[1097359, 20319, 3772, 107, 407, "Text",ExpressionUUID->"dee9ef27-089d-453d-b228-fcab802c8067"],
Cell[CellGroupData[{
Cell[1101156, 20430, 1436, 39, 171, "Input",ExpressionUUID->"1f44aac1-4624-4593-8be0-4178be7c912a"],
Cell[1102595, 20471, 830, 22, 70, "Output",ExpressionUUID->"39669f5d-31c1-4920-944f-8a79f4fa22a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103462, 20498, 886, 24, 81, "Input",ExpressionUUID->"0bb08a8a-a24d-400b-a439-67ed7f8957ea"],
Cell[1104351, 20524, 863, 25, 70, "Output",ExpressionUUID->"5f3cc0a3-7313-4303-9054-5d1687108518"]
}, Open  ]],
Cell[1105229, 20552, 245, 6, 53, "Text",ExpressionUUID->"398c897b-c4ba-4827-b606-46ac6fac9cd7"],
Cell[CellGroupData[{
Cell[1105499, 20562, 363, 9, 46, "Input",ExpressionUUID->"17149f96-c7d6-45be-82d0-234d7f8d8137"],
Cell[1105865, 20573, 464, 10, 70, "Message",ExpressionUUID->"369693c3-f8bb-4cf2-930d-33c16b96885c"]
}, Open  ]],
Cell[1106344, 20586, 2267, 54, 174, "Input",ExpressionUUID->"7a41d285-b48f-48dc-90b9-1697ff43e3a7"],
Cell[1108614, 20642, 16721, 460, 1076, "Text",ExpressionUUID->"a9ce6c78-e849-4a06-9136-4d24a93f95c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1125372, 21107, 168, 3, 71, "Subchapter",ExpressionUUID->"ed78ee75-ab0a-4768-a17a-89a2891a46a0"],
Cell[1125543, 21112, 1215, 36, 140, "Input",ExpressionUUID->"383bd514-b766-420d-a083-fc5e89db3575"],
Cell[CellGroupData[{
Cell[1126783, 21152, 301, 7, 81, "Subsection",ExpressionUUID->"088a31df-7878-4c57-aab9-f5851bf7d053"],
Cell[1127087, 21161, 1339, 25, 78, "Input",ExpressionUUID->"56948034-b97d-412b-9090-9d659eb61d71"],
Cell[1128429, 21188, 936, 24, 78, "Input",ExpressionUUID->"f1d32b5d-7710-4e0b-89b7-e4ee22bcc8c6"],
Cell[CellGroupData[{
Cell[1129390, 21216, 1581, 40, 109, "Input",ExpressionUUID->"82c64a5d-6aa2-4ada-896e-d4ee93e1810e"],
Cell[1130974, 21258, 60320, 1083, 70, "Output",ExpressionUUID->"68562508-3af1-4291-95bc-b37ea6733d7b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1191343, 22347, 232, 5, 81, "Subsection",ExpressionUUID->"825f69f1-e7ba-48b7-a3cb-92d844778bd8"],
Cell[1191578, 22354, 1123, 22, 78, "Input",ExpressionUUID->"658ca121-f635-4747-814c-1bc0faff76e3"],
Cell[1192704, 22378, 670, 20, 78, "Input",ExpressionUUID->"8066a61c-5c1f-4009-a6b2-0486e1e2c399"],
Cell[CellGroupData[{
Cell[1193399, 22402, 1236, 35, 109, "Input",ExpressionUUID->"c8b10e51-f92d-4480-9019-b8e4929bf7ea"],
Cell[1194638, 22439, 57362, 1034, 70, "Output",ExpressionUUID->"528e3df3-0211-4ce0-a9a0-e8ae672045a2"]
}, Open  ]],
Cell[1252015, 23476, 1046, 21, 78, "Input",ExpressionUUID->"34c88431-11d5-4911-9557-8244888e8db0"],
Cell[CellGroupData[{
Cell[1253086, 23501, 484, 13, 109, "Input",ExpressionUUID->"ca427ac7-740f-46eb-afd5-29e917496276"],
Cell[1253573, 23516, 335, 7, 70, "Output",ExpressionUUID->"e325c0f7-a497-4e9c-a66a-673b4312e504"],
Cell[1253911, 23525, 314, 6, 70, "Output",ExpressionUUID->"9fee7677-7094-495a-af80-16f344c7bdae"],
Cell[1254228, 23533, 321, 6, 70, "Output",ExpressionUUID->"88066e31-898b-4428-a2eb-8c6f6e35e588"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254586, 23544, 1865, 52, 171, "Input",ExpressionUUID->"ebe11c4c-fbd9-41a3-a951-295b036d0d99"],
Cell[1256454, 23598, 56647, 1022, 70, "Output",ExpressionUUID->"8bdcaca6-4ca7-4f70-9d7a-07451d300c35"]
}, Open  ]],
Cell[1313116, 24623, 1015, 20, 78, "Input",ExpressionUUID->"3bf6092a-ff87-43d8-b255-9ce895d3aba6"],
Cell[CellGroupData[{
Cell[1314156, 24647, 2385, 57, 171, "Input",ExpressionUUID->"06e5c5cf-5171-4e35-8b18-f78c55efe979"],
Cell[1316544, 24706, 27489, 545, 70, "Output",ExpressionUUID->"8d97818b-610b-4c0c-9755-ca7cc0138026"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1344106, 25259, 183, 3, 84, "Chapter",ExpressionUUID->"e6a00686-c60c-49d8-ada5-0d9897db254a"],
Cell[CellGroupData[{
Cell[1344314, 25266, 241, 4, 101, "Section",ExpressionUUID->"aa4384b2-5b3e-48bd-9fdf-344f6dc98fc0"],
Cell[1344558, 25272, 1194, 22, 78, "Input",ExpressionUUID->"133c35f1-8f68-43f7-9de9-ffe934c06eba"],
Cell[1345755, 25296, 1005, 19, 78, "Input",ExpressionUUID->"96942fae-a4a0-4d16-b88d-0ff66e08636a"],
Cell[1346763, 25317, 535, 15, 46, "Input",ExpressionUUID->"9d6a527b-ad84-40d2-8d80-876562372c21"],
Cell[1347301, 25334, 1986, 37, 202, "Input",ExpressionUUID->"13aad284-f933-41d3-9383-67284d4c9fa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349324, 25376, 161, 3, 101, "Section",ExpressionUUID->"04dddd8b-fc73-4776-80d2-5bbff9b9f104"],
Cell[1349488, 25381, 2442, 60, 512, "Input",ExpressionUUID->"c94a51ae-561d-497f-baa4-24cd97eaf657"]
}, Closed]],
Cell[CellGroupData[{
Cell[1351967, 25446, 237, 4, 78, "Section",ExpressionUUID->"4473a29b-cce2-4b01-8da4-b4d75b755c57"],
Cell[CellGroupData[{
Cell[1352229, 25454, 218, 4, 53, "Text",ExpressionUUID->"d1c9025f-63e2-4027-bfdc-e88c9e5979ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1352450, 25460, 1392, 26, 233, "Input",ExpressionUUID->"3eaa7b03-cea9-4324-a414-6c26bcc40f92",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[1353857, 25489, 480, 11, 38, "Input",ExpressionUUID->"1b5558e5-6674-46d6-9c85-0a1e4fb90b0e"],
Cell[1354340, 25502, 624, 16, 46, "Input",ExpressionUUID->"7fb95c1b-b580-4711-be49-093e4c22cce7"],
Cell[1354967, 25520, 1837, 47, 171, "Input",ExpressionUUID->"fdf5dc8a-9843-470c-9f5e-fd79ff3005a2"],
Cell[1356807, 25569, 1703, 31, 109, "Input",ExpressionUUID->"01e2f6ca-5ef6-4da8-98ee-d3048f34991c"],
Cell[CellGroupData[{
Cell[1358535, 25604, 2793, 71, 202, "Input",ExpressionUUID->"62596385-484f-47ce-8470-c7b151d45439"],
Cell[1361331, 25677, 89727, 1681, 380, "Output",ExpressionUUID->"e16bfa70-56fb-4630-8b38-9b0f835c4725"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1451095, 27363, 190, 3, 81, "Subsection",ExpressionUUID->"96418386-dbe9-47df-8940-57e26d4edfe3"],
Cell[1451288, 27368, 1480, 28, 109, "Input",ExpressionUUID->"2308094a-25b7-499c-8303-7e641cb80e00"],
Cell[1452771, 27398, 320, 7, 46, "Input",ExpressionUUID->"072b0a4e-afde-48f4-96cd-b1c2ac2a367b"],
Cell[1453094, 27407, 1203, 24, 109, "Input",ExpressionUUID->"af567a78-8a26-45f7-a35a-196430fbcd30"],
Cell[CellGroupData[{
Cell[1454322, 27435, 5807, 165, 481, "Input",ExpressionUUID->"a38faaab-1251-4be1-a50b-6c9c61661d4d"],
Cell[1460132, 27602, 31271, 534, 379, "Output",ExpressionUUID->"c52b14a1-788f-4f26-8387-586b3baaff49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1491440, 28141, 4931, 132, 481, "Input",ExpressionUUID->"46645459-d1d7-426d-ad37-412072312b08"],
Cell[1496374, 28275, 96556, 1726, 379, "Output",ExpressionUUID->"94f5b0c1-f36e-44e3-9181-55f9113ce672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1592967, 30006, 4408, 128, 450, "Input",ExpressionUUID->"d00948ae-d2ea-4270-bf76-99db67bd8981"],
Cell[1597378, 30136, 96888, 1732, 374, "Output",ExpressionUUID->"2fe5c6f5-b233-4613-a522-6e55305d3916"]
}, Open  ]],
Cell[1694281, 31871, 1568, 30, 109, "Input",ExpressionUUID->"9835218f-95b9-4a1f-a7ea-0aad65d22e52"],
Cell[1695852, 31903, 459, 11, 78, "Input",ExpressionUUID->"75508f9d-df39-4c67-80f0-0b60f8437b01"],
Cell[CellGroupData[{
Cell[1696336, 31918, 5544, 146, 450, "Input",ExpressionUUID->"df6c6df2-da37-49fc-91c8-08c8fe9b2752"],
Cell[1701883, 32066, 31471, 536, 366, "Output",ExpressionUUID->"e4907075-da41-4f01-bc09-eca265e1a41a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1733391, 32607, 4372, 127, 481, "Input",ExpressionUUID->"b3d11404-db2a-49f1-85e1-ac81182ee172"],
Cell[1737766, 32736, 107642, 1908, 379, "Output",ExpressionUUID->"c398f6bd-82cc-4548-a320-f019811eb046"],
Cell[1845411, 34646, 357, 5, 52, "Output",ExpressionUUID->"0491f7c0-07e1-4d55-8ff0-c3a7c2a65f74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1845805, 34656, 4322, 127, 450, "Input",ExpressionUUID->"b68ee149-6cf4-4380-8994-f8c8231b4d37"],
Cell[1850130, 34785, 107635, 1910, 379, "Output",ExpressionUUID->"1b82a3f5-3b54-41d9-8aaf-905eade20675"],
Cell[1957768, 36697, 312, 5, 52, "Output",ExpressionUUID->"d8e25d36-e98c-41d7-b044-0c770ed1bc0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1958129, 36708, 211, 4, 81, "Subsection",ExpressionUUID->"0cbea6df-5f62-411d-ba57-14d96fa5f8df"],
Cell[1958343, 36714, 1486, 27, 109, "Input",ExpressionUUID->"709ec30d-9dbf-4b90-af89-5db234532189"],
Cell[1959832, 36743, 670, 17, 109, "Input",ExpressionUUID->"78911f5c-ff40-4523-b5da-516371c06132"],
Cell[CellGroupData[{
Cell[1960527, 36764, 5014, 147, 419, "Input",ExpressionUUID->"f343a01c-4130-4195-8bdf-3a226c97a5a8"],
Cell[1965544, 36913, 12355, 222, 352, "Output",ExpressionUUID->"01ed1ba6-3bc3-47d2-93d0-5f7275169897"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1977936, 37140, 6566, 179, 636, "Input",ExpressionUUID->"579812bd-d514-4b12-b1b4-20d76e2a9d45"],
Cell[1984505, 37321, 63943, 1213, 408, "Output",ExpressionUUID->"0206e8a4-25e8-4ab9-8090-9166de756ec0"],
Cell[2048451, 38536, 711, 10, 52, "Output",ExpressionUUID->"e9df5a74-3569-4266-9fd9-01363be78088"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2049199, 38551, 6215, 172, 636, "Input",ExpressionUUID->"e923b654-c68e-4dd1-b80a-be53db7ca3df"],
Cell[2055417, 38725, 64170, 1220, 419, "Output",ExpressionUUID->"70b5e3c4-f147-4683-9d60-b7d03cd88023"],
Cell[2119590, 39947, 358, 6, 52, "Output",ExpressionUUID->"04d336b8-06ea-49a7-8451-b6452909290d"]
}, Open  ]],
Cell[2119963, 39956, 1537, 28, 109, "Input",ExpressionUUID->"5483aba7-7656-434e-9088-9ebfce5aff43"],
Cell[2121503, 39986, 610, 13, 78, "Input",ExpressionUUID->"17a45cae-5687-4f9a-aa52-c46f0a73fecb"],
Cell[CellGroupData[{
Cell[2122138, 40003, 5690, 158, 574, "Input",ExpressionUUID->"80963a3e-6c04-418a-99f2-a4442af6495b"],
Cell[2127831, 40163, 63246, 1213, 408, "Output",ExpressionUUID->"18333725-485a-4e3f-b6f6-8ccf02a30639"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2191114, 41381, 5641, 160, 574, "Input",ExpressionUUID->"5ac39325-8f1c-4175-ae9a-d6c4956d4517"],
Cell[2196758, 41543, 64058, 1236, 419, "Output",ExpressionUUID->"310403bf-a4b8-4310-869c-13fc935629e2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

