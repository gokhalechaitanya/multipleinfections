(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1937469,      37304]
NotebookOptionsPosition[   1914392,      36928]
NotebookOutlinePosition[   1914814,      36945]
CellTagsIndexPosition[   1914771,      36942]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Single infection with trophical transmission", "Title",
 CellChangeTimes->{{3.825668663761571*^9, 3.8256686880677233`*^9}, 
   3.826272929194303*^9, {3.827819505375657*^9, 
   3.827819511550613*^9}},ExpressionUUID->"ca6339fa-87b0-4c9a-bcc5-\
07c99afb164f"],

Cell[CellGroupData[{

Cell["Ecological dynamics of a resident", "Chapter",
 CellChangeTimes->{{3.825769393130102*^9, 
  3.825769403189344*^9}},ExpressionUUID->"00267e49-4f01-4b7a-b465-\
4503f9c63b4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIsdt", " ", "=", " ", 
    RowBox[{
     RowBox[{"R", "[", 
      RowBox[{"Iw", ",", " ", "Is"}], "]"}], "-", " ", 
     RowBox[{"d", " ", "Is"}], "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "Is"}], "  ", "-", " ", 
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "intermediate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Iw"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], 
      "Iw"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDsdt", " ", "=", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
     "  ", "-", " ", 
     RowBox[{"\[Mu]", " ", "Ds"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}]}]}], ";"}], 
  "  ", 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "definitive"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDwdt", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}], "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], " ", "Dw"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "definitive"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dWdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fw", " ", "Dw"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "W"}], " ", "-", " ", 
    RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.825656713077812*^9, 3.825656819315256*^9}, {
   3.8256675673352013`*^9, 3.825667571392377*^9}, {3.8256676047331753`*^9, 
   3.8256679949825287`*^9}, 3.825668657319312*^9, {3.825669024736739*^9, 
   3.825669107703614*^9}, {3.825669201205226*^9, 3.825669201481333*^9}, {
   3.825669256379244*^9, 3.82566950377395*^9}, {3.825669536259808*^9, 
   3.8256696344884987`*^9}, {3.8256696689148417`*^9, 3.825670143310657*^9}, {
   3.825670345459824*^9, 3.825670438958109*^9}, {3.825670488620307*^9, 
   3.825670543829121*^9}, {3.825670663648823*^9, 3.825670761696919*^9}, {
   3.825671013629569*^9, 3.825671139741517*^9}, {3.825742172557213*^9, 
   3.8257421729950933`*^9}, {3.825742207420051*^9, 3.8257422478914013`*^9}, {
   3.82574345173761*^9, 3.82574350922976*^9}, {3.825760175997797*^9, 
   3.82576018688303*^9}, {3.8257606621022377`*^9, 3.825760675998103*^9}, 
   3.8257607945724363`*^9, {3.825760904709169*^9, 3.82576091270079*^9}, {
   3.8257617801084433`*^9, 3.8257617912632027`*^9}, {3.8257621523527527`*^9, 
   3.825762165308137*^9}, {3.825762201784202*^9, 3.825762208487948*^9}, {
   3.825762251027261*^9, 3.825762354682111*^9}, 3.8257625163120213`*^9, {
   3.825762659025866*^9, 3.825762659901341*^9}, {3.825762902484415*^9, 
   3.825762910346539*^9}, {3.8257634961592484`*^9, 3.825763496692479*^9}, {
   3.825766757419752*^9, 3.825766767356141*^9}, {3.825766833920692*^9, 
   3.825766853096877*^9}, {3.825766897662359*^9, 3.8257668980739517`*^9}, {
   3.8257682274738283`*^9, 3.825768355004142*^9}, {3.825996664752124*^9, 
   3.825996692179337*^9}, {3.82626863451892*^9, 3.826268767236582*^9}, {
   3.8262689370700693`*^9, 3.826268937767343*^9}, {3.826268980930978*^9, 
   3.8262689879990473`*^9}, {3.82626904542638*^9, 3.826269047123454*^9}, {
   3.826271241094585*^9, 3.82627124404462*^9}, {3.827819518344512*^9, 
   3.827819536797364*^9}, {3.8278209102469873`*^9, 3.8278212216057177`*^9}, {
   3.827821911512141*^9, 3.827821969572859*^9}, {3.8278221978352613`*^9, 
   3.8278222272418337`*^9}, {3.827822510921095*^9, 3.827822511765992*^9}, {
   3.827823318435688*^9, 3.827823330286881*^9}, {3.827823839514995*^9, 
   3.8278238647577143`*^9}, {3.8280753879957237`*^9, 3.82807539054478*^9}, {
   3.82807610064509*^9, 3.828076102177025*^9}, {3.8280786078866158`*^9, 
   3.82807862016877*^9}, {3.829382110716173*^9, 3.829382222814026*^9}, {
   3.829382282426675*^9, 3.829382339462714*^9}, {3.82938254818421*^9, 
   3.829382549728499*^9}},ExpressionUUID->"1f09bc19-4e76-4681-bb03-\
666be7d80279"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827822459562306*^9, 3.827822484038743*^9}, {
   3.82930004587323*^9, 3.829300078603044*^9}, 
   3.829300337544739*^9},ExpressionUUID->"08ab7a49-e39b-4abb-bfcf-\
3344bce114af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"func1", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829288616107027*^9, 3.8292886259950533`*^9}, {
  3.829289279204534*^9, 3.829289283627792*^9}, {3.82928933576853*^9, 
  3.829289352141361*^9}, {3.8292897198397703`*^9, 3.8292897211117163`*^9}, {
  3.829300310231729*^9, 
  3.829300322388371*^9}},ExpressionUUID->"dc11f015-4138-463f-99bb-\
5a2bc8ef7948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw", ",", " ", "W"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIsdt", ",", " ", "dIwdt", ",", " ", "dDsdt", ",", " ", "dDwdt", ",", 
     " ", "dWdt"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8278235561211777`*^9, 3.8278235895996933`*^9}, {
  3.827823939807645*^9, 
  3.827823944103592*^9}},ExpressionUUID->"f9870ea7-3eb4-4c4c-ac44-\
51c0f88b4712"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func0"}], "/.", 
     RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.82782571391743*^9, {3.828076226269494*^9, 
   3.8280762269740458`*^9}},ExpressionUUID->"40f22f17-4072-4551-abee-\
6878ca5b08ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], "\[Rho]"]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.827825716047372*^9, 3.8280754028129396`*^9, 3.828076111650443*^9, 
   3.828076227621562*^9, 3.828076300563541*^9, 3.828078712930681*^9, 
   3.828086164640039*^9, 3.8292880769844103`*^9, {3.829300326235674*^9, 
   3.82930034116356*^9}, 
   3.8359758069190683`*^9},ExpressionUUID->"83f4f097-705c-4663-88d9-\
aae8129c9c35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0Func1", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func1"}], "/.", 
      RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}],
     "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.829289374739566*^9, 3.829289377514204*^9}, {
  3.829289628424356*^9, 3.829289632462536*^9}, {3.829290198591793*^9, 
  3.829290200130179*^9}},ExpressionUUID->"86b4a1c5-09fb-4f4a-9003-\
ad80da6b36c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"\[CapitalKappa]", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[CapitalKappa]"}], "r"]}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Mu]"}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", " ",
          "\[Rho]"}]}], 
       RowBox[{"c", " ", "\[CapitalKappa]", " ", 
        SuperscriptBox["\[Rho]", "2"]}]]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.829289379669998*^9, 3.829289633821643*^9, 3.829289727885021*^9, 
   3.829290200649737*^9, {3.8293003277196293`*^9, 3.829300342558381*^9}, 
   3.835975807334427*^9},ExpressionUUID->"0ac425fc-7b78-4255-912b-\
b28f95ec025b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability of the equilibrium", "Subchapter",
 CellChangeTimes->{{3.828075643251759*^9, 
  3.8280756472434187`*^9}},ExpressionUUID->"619a35d5-cd93-4b58-9eeb-\
4918a7b1ffca"],

Cell[CellGroupData[{

Cell["Linear functions", "Section",
 CellChangeTimes->{{3.82928999027208*^9, 
  3.82928999320476*^9}},ExpressionUUID->"5bedc337-ccf0-4960-ad0a-\
246111f56bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", "r", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", "  ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8280756685967827`*^9, 3.8280758314732227`*^9}, {
   3.8280758639554453`*^9, 3.828075892701819*^9}, {3.828075940412252*^9, 
   3.8280759898078003`*^9}, {3.828078724139042*^9, 3.828078752078988*^9}, 
   3.829290027566111*^9, {3.829300130500415*^9, 3.82930016017767*^9}, {
   3.8293002159920588`*^9, 
   3.82930022248534*^9}},ExpressionUUID->"cbbfe1f8-6815-48a6-845d-\
0f388dcb62f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.82807600588461*^9, 
  3.82807600787519*^9}},ExpressionUUID->"80fc8eae-fb1f-459a-8db6-\
454bb416cb27"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "+", "r", "-", 
       RowBox[{"W", " ", "\[Gamma]w"}], "-", 
       RowBox[{"\[CapitalPi]0", "[", 
        RowBox[{"Ds", ",", "Dw"}], "]"}]}], "r", "0", "0", "0"},
     {
      RowBox[{"W", " ", "\[Gamma]w"}], 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{"\[CapitalPi]1", "[", 
        RowBox[{"Ds", ",", "Dw", ",", "\[Beta]w"}], "]"}]}], "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", "\[Mu]", "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}], "0"},
     {"0", "0", 
      RowBox[{"Iw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "0", "0", "fw", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.828076008300259*^9, 3.8280761179662313`*^9, 
  3.828078755173183*^9, 3.829300226482354*^9, 3.829300351878982*^9, 
  3.835975807384198*^9},ExpressionUUID->"12392fe8-bc34-45a6-96c4-\
20bb1e4bbc56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", ".", "var"}], " ", "/.", "func0"}], ")"}], "\[Equal]", " ", 
   
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func0"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.828076010664349*^9, 3.828076033593799*^9}, {
  3.829300240583639*^9, 
  3.829300247307254*^9}},ExpressionUUID->"b6a2d9dd-aa58-44db-b753-\
617dc4e7e622"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.828076016562026*^9, 3.8280760341117353`*^9}, 
   3.828076120029529*^9, 3.828076306539208*^9, 3.828078757851067*^9, {
   3.8293002276825333`*^9, 3.829300247807722*^9}, 3.82930035279112*^9, 
   3.8359758074574738`*^9},ExpressionUUID->"b4e31d54-7356-4023-9278-\
441ce4418516"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aeigens", " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"A", "/.", "func0"}], "]"}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.828076310764051*^9, 3.828076351937457*^9}, {
   3.828078760409507*^9, 3.828078764213051*^9}, 3.829300257241005*^9, {
   3.829300738466364*^9, 
   3.829300765221094*^9}},ExpressionUUID->"30f2022b-44b1-4066-a4a4-\
8055819bb60c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076332256621*^9, 
  3.828076411850637*^9}},ExpressionUUID->"542f9952-c7be-455e-b204-\
c922ed16a464"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Delta]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "+", "r"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", 
   RowBox[{"-", "\[Mu]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828076339826378*^9, 3.828076412505925*^9}, 
   3.8280787697360687`*^9, 3.828086172676084*^9, 3.829288085095286*^9, 
   3.829300269150385*^9, 3.829300355076603*^9, 
   3.835975811722212*^9},ExpressionUUID->"0911685d-362f-4adb-945f-\
ffb733b91c71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"\[Mu]", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[Rho]", ">", "0"}], ",", " ", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"\[Beta]w", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076438838669*^9, 3.828076629434969*^9}, {
  3.828076660323764*^9, 3.828076692435136*^9}, {3.829300361942924*^9, 
  3.829300364001012*^9}},ExpressionUUID->"687b7706-89d0-43d3-836e-\
9f061d42007e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"r", " ", "\[Beta]w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
        RowBox[{"r", " ", "\[Beta]w"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], "]"}]}], 
     RowBox[{"2", " ", "\[Rho]"}]]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{"d", " ", "\[Beta]w"}], "-", 
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], "\[Rho]"], 
          RowBox[{
           RowBox[{"d", " ", "\[Beta]w"}], ">", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.828076443588296*^9, 3.828076448866023*^9}, {
   3.828076491595972*^9, 3.828076509364583*^9}, {3.8280765436147547`*^9, 
   3.828076629902029*^9}, 3.828076660810093*^9, 3.828076692932027*^9, 
   3.828078772766087*^9, 3.828086177404166*^9, 3.829288089287722*^9, 
   3.829300275948649*^9, {3.8293003581064453`*^9, 3.829300366801404*^9}, 
   3.835975813281784*^9},ExpressionUUID->"b23da401-6e10-4f3b-9745-\
183b993df058"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic growth intermediate hosts", "Section",
 CellChangeTimes->{{3.8292900059177437`*^9, 
  3.82929001400443*^9}},ExpressionUUID->"a9e5d69c-a01f-4843-a6de-\
0048bd5b8a5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], 
          ")"}]}], " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "-", "  ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", 
       RowBox[{"r", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}]}],
        ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.829290041468392*^9, 3.829290083293619*^9}, 
   3.8292901573628817`*^9, {3.829300399906165*^9, 3.829300442929491*^9}, {
   3.829300483360271*^9, 
   3.829300508729198*^9}},ExpressionUUID->"3b56881e-1eaa-44d9-aaa9-\
12fe23ff709c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AFunc1", "/.", "func1"}], ")"}], ".", "var"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func1"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.829290095052435*^9, 3.829290098954587*^9}, {
  3.829300515668148*^9, 
  3.829300521210037*^9}},ExpressionUUID->"72927999-1ef4-462c-9434-\
f839bbb3501a"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.829290099646719*^9, 3.829290159160308*^9, 
  3.829300521645545*^9, 
  3.835975813568886*^9},ExpressionUUID->"0114e6f1-077f-42d0-9e09-\
fc12c3bad42b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AeigensFunc1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"AFunc1", "/.", "func1"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8292901719851007`*^9, 3.8292901810399313`*^9}, {
   3.82929074163208*^9, 3.829290752355545*^9}, 
   3.8293005303519163`*^9},ExpressionUUID->"8adb9b6b-5caf-4cb9-ad8a-\
e00a59804d13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
         "\[Sigma]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
         "\[Sigma]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292907421726227`*^9, 3.829290763056777*^9}, 
   3.8292919693355*^9, 3.829300538962901*^9, 
   3.835975821247108*^9},ExpressionUUID->"921cd544-5494-4d30-8ed7-\
413e3e1fe94b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
         "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.829290252923359*^9, 3.829290287663924*^9}, {
  3.8292910415729322`*^9, 3.829291069670826*^9}, {3.829291112620542*^9, 
  3.829291130398438*^9}},ExpressionUUID->"84934df3-cf32-4f91-9d81-\
68e378acf7de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "r"}], ")"}], " ", "\[Gamma]w", " ", 
      "\[CapitalKappa]"}], "r"]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", "r", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "d", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "-", 
      RowBox[{"c", " ", "r", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
      RowBox[{"r", " ", "\[Sigma]"}], "+", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", 
           " ", "\[Rho]"}], "+", 
          RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
     RowBox[{"2", " ", "r"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "r", " ", "\[Mu]"}], "-", 
     RowBox[{"c", " ", "d", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
     RowBox[{"c", " ", "r", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "-", 
     RowBox[{"r", " ", "\[Sigma]"}], "+", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", 
          " ", "\[Rho]"}], "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
    RowBox[{"2", " ", "r"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.829290258431539*^9, 3.829290289447657*^9}, {
   3.829291042355114*^9, 3.8292910703968067`*^9}, {3.82929111571244*^9, 
   3.8292911317045403`*^9}, 
   3.835975823277211*^9},ExpressionUUID->"97d158e1-80e1-4f15-a3f3-\
e78b0fcadc0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", "  ", 
      RowBox[{"c", ">", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Mu]", "+", "\[Sigma]"}], ">", "0"}], ",", " ", 
      RowBox[{"p", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829291289871559*^9, 3.829291290239362*^9}, {
  3.8292916950073843`*^9, 3.829291720881555*^9}, {3.829291758744101*^9, 
  3.8292917610597973`*^9}, {3.829291796461124*^9, 
  3.829291823491487*^9}},ExpressionUUID->"cd261487-9253-4d90-83db-\
fca19426ca3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "c", " ", "\[CapitalKappa]", " ", 
      SuperscriptBox["\[Rho]", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "-", 
         RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], ")"}]}], "-", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "c"}], " ", "d", " ", "\[Beta]w", " ", 
          "\[CapitalKappa]"}], "+", 
         RowBox[{
         "c", " ", "\[Alpha]", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
         RowBox[{"\[Rho]", " ", 
          SqrtBox[
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"d", " ", "\[Beta]w"}], "-", 
                  RowBox[{"\[Alpha]", " ", "\[Rho]"}]}], ")"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]", "-", 
                  RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], 
                 ")"}]}]}], ")"}], "2"], 
            SuperscriptBox["\[Rho]", "4"]]]}]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "c", " ", "\[CapitalKappa]", " ", 
      SuperscriptBox["\[Rho]", "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", "-", 
         RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], ")"}]}], "+", 
      RowBox[{"\[Rho]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "d", " ", "\[Beta]w", " ", "\[CapitalKappa]"}], 
         "-", 
         RowBox[{
         "c", " ", "\[Alpha]", " ", "\[CapitalKappa]", " ", "\[Rho]"}], "+", 
         RowBox[{"\[Rho]", " ", 
          SqrtBox[
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"d", " ", "\[Beta]w"}], "-", 
                  RowBox[{"\[Alpha]", " ", "\[Rho]"}]}], ")"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Mu]", "-", 
                  RowBox[{"c", " ", "\[CapitalKappa]", " ", "\[Rho]"}]}], 
                 ")"}]}]}], ")"}], "2"], 
            SuperscriptBox["\[Rho]", "4"]]]}]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8292913245970497`*^9, 3.829291725907846*^9, 3.8292917660872*^9, {
   3.8292918006740217`*^9, 3.829291828360304*^9}, 
   3.8359758291214542`*^9},ExpressionUUID->"258b028c-add1-4912-aad5-\
5fb7e5af85a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeSystem", "[", 
    RowBox[{"var_", ",", " ", "vart_", ",", " ", "sys_"}], "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"syst", " ", "=", " ", 
      RowBox[{"sys", "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"var", "\[Rule]", " ", "vart"}], "]"}]}]}], ";", " ", 
     RowBox[{"sysfull", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"vart", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", 
        "syst"}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278227166917267`*^9, 3.827822753230462*^9}, {
   3.827822922653831*^9, 3.827822930881901*^9}, {3.827822982773337*^9, 
   3.827823037108107*^9}, 3.827823101237512*^9, 3.82782326171789*^9, 
   3.8278233565488863`*^9, {3.829292626735865*^9, 3.829292643598576*^9}, {
   3.829292689348095*^9, 
   3.8292926898161993`*^9}},ExpressionUUID->"63f7c73d-1637-4f69-a84a-\
4b1687dab978"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.827821229838979*^9, 3.827821235402285*^9}, {
  3.827822320596498*^9, 
  3.827822326849743*^9}},ExpressionUUID->"05888b6a-d911-418e-82cf-\
b8497d51ae84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysFunc0", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func0"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysFunc1", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func1"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827822569148403*^9, 3.827822704174527*^9}, {
   3.82782318211902*^9, 3.827823191092559*^9}, {3.827823394132936*^9, 
   3.827823503736817*^9}, {3.827823561478395*^9, 3.8278236008621883`*^9}, 
   3.827823822161427*^9, 3.8278239657774*^9, {3.829289669271122*^9, 
   3.829289678688631*^9}},ExpressionUUID->"ca867795-a0ef-422d-9e37-\
44cd7e4ad312"],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEco", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.9"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278223341819477`*^9, 3.827822444366211*^9}, {
   3.827822502232439*^9, 3.8278225649661427`*^9}, {3.827825386494244*^9, 
   3.827825410863459*^9}, {3.827825453929977*^9, 3.827825454403831*^9}, {
   3.827825522729954*^9, 3.827825550524976*^9}, 3.8278256021678753`*^9, {
   3.827825650036694*^9, 3.827825650806609*^9}, {3.8280740126142387`*^9, 
   3.828074014681838*^9}, {3.828074290887507*^9, 3.828074291596635*^9}, {
   3.82807437954491*^9, 3.828074379943386*^9}, {3.828074423685811*^9, 
   3.8280744257790956`*^9}, {3.8280744969747133`*^9, 3.828074497466743*^9}, {
   3.828074529108124*^9, 3.828074551945829*^9}, {3.828074599895774*^9, 
   3.828074621473525*^9}, {3.82807468419691*^9, 3.828074700019969*^9}, {
   3.8280747397753277`*^9, 3.8280747404372063`*^9}, {3.8280866177014112`*^9, 
   3.828086617870452*^9}, {3.8280867505244417`*^9, 3.828086751093014*^9}, {
   3.829288379414507*^9, 3.829288379901534*^9}, {3.829288433156987*^9, 
   3.829288433462543*^9}, 3.829288506903331*^9, {3.829289683788238*^9, 
   3.8292897118374643`*^9}, {3.829290329283586*^9, 3.829290329519761*^9}, 
   3.829290393474928*^9, 3.829290916726027*^9, {3.829290975953576*^9, 
   3.8292909848376493`*^9}, {3.829297048005028*^9, 3.8292970485160303`*^9}, {
   3.829300549003931*^9, 3.829300556258101*^9}, {3.8293012617683773`*^9, 
   3.829301262999346*^9}},ExpressionUUID->"940291cb-860b-42f6-a8a6-\
939164131f81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc0", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "30"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sys", "/.", "func0"}], "/.", "prEco"}], ")"}], " ", 
      "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func0", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc0", "/.", "prEco"}], ",", " ", "initFunc0"}], "]"}], 
    ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.827822957647459*^9, 3.827822969409224*^9}, {
   3.827823644111948*^9, 3.827823657623238*^9}, 3.827823709992982*^9, {
   3.827823999487968*^9, 3.827824025530137*^9}, {3.8278240605321407`*^9, 
   3.827824067947177*^9}, {3.828074564712682*^9, 3.8280745652597237`*^9}, {
   3.8280747017880707`*^9, 3.828074702577971*^9}, {3.828074773328237*^9, 
   3.828074774978272*^9}, {3.828074964773364*^9, 3.828074977832465*^9}, {
   3.828086197642436*^9, 3.8280862131636887`*^9}, {3.829289817759626*^9, 
   3.829289821771514*^9}, {3.8292924292035313`*^9, 3.829292435207684*^9}, {
   3.829296644229384*^9, 
   3.829296671808436*^9}},ExpressionUUID->"80ddafbb-bc10-4885-a06a-\
70e23ecf87f2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], ":", 
  " ", "\<\"At \[NoBreak]\\!\\(t\\)\[NoBreak] == \
\[NoBreak]\\!\\(55.156701613104595`\\)\[NoBreak], step size is effectively \
zero; singularity or stiff system suspected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", ButtonNote -> \
\\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.829301265150618*^9, 
  3.835975829548744*^9},ExpressionUUID->"af6d1824-37aa-4145-b3d5-\
b3183cb564ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAvJkvc2Ferz53qgsgV/8jQB/6FAHa
xew/PLVUkbX9JT+Zbgieovv9P5vSNEHQqCM/e3WrleBFBkCqLhKOTBhAP55M
6RpfaQ1Akky/nRT/Vz/lMQ024ZMSQIkpBMkcDmw/MOCZGu0wFkAHQ6//cl94
P4AuIGVrGxpAqF+7LRJ3gz9KyfFOofMdQGJR+hLiRI0/ZcNbutjEIEBdsKEj
ZRWVPydyOwCatiJAy4aTKrAqnz9EMhVkSIckQDmh2HA1aqY/npiUl9JOJkDw
cuzaCgCwP/rOEP4VPShAiLhumbaKtz+xFoeCRgoqQGoLJ9d84MA/ai76OTD+
K0AfSnjK2fDIP2DsEsH16C1Aw0BPVTVM0j+xuyVmqLIvQAEOR4zDKdo/gq0a
H4rRMEBMk19ugkfjP9iFH5o2uTFAmLDYRE6w6z8vxqKuP7QyQC3ePK9mfvQ/
pdn4qraqM0BTm2eN9x7+P8j1SzakkDRAEmEVhRqSBUDseR1b7ok1QGHTV2MW
2A9AvgbsDq9yNkAVV7mO1OcWQK5mjardVjdAQs0Uq9xbIECfLq3faE44QFAt
7xGNFShAyknPG+K2OEDABxlMotEsQNpPxvk=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAJeRG7PqyO0DABxlMotEsQAhYPhvY
CjxA8xDZy2Yxsz911CeJdwM9QHxqJ5EDhWI/j1kOho3rPUAylE1I4i9dP8ix
x2oRzz5AUZ4cXrK3Yj8Ccv/o8cU/QFozc2R3+Wo/dB0aeyRWQEDsiey/wERz
P+i1c07+0kBAkwS6E2xyfD+z0ktpk0dBQN4iGJsseYQ/DVkNeN+5QUBfBlkB
C0ONP2gTjtPZNUJAALAzWNuNlT8ZUo12j6lCQPXXhzmC8Z4/y8RLZvMmQ0Cz
+r8Bw+SmPwyh80kOokNALDjHtUDRsD+kARp15BREQMzmpEzWE7g/PJb/7GiR
REAB+PuJ7MPBPyuvY6yoBUVAc32WaROMyT+pMbFfn3dFQPYf4vf3PNI/KOi9
X0TzRUDvRgaCH9faP/0iSaekZkZAnO44oAA/4z/TkZM7s+NGQHTLq8rvcuw/
OGrHw3heR0BnlWUgZeD0P/TGeZP50EdAL60dMJ7b/T+wV+uvKE1IQG0zT8Dh
AQZAw2zbExPBSEAlHbr3SZ0PQNe1isSrPklAVIS827VnF0B6aCNp+7lJQO8F
PdxHNCFAdJ86VQYtSkAb4oOorqUoQFuRfsRQWUpAwAcZTKLRLECCo9W8
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 55.156701613104595`}, {0., 
                    14.409441354804471`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAvJkvc2Ferz53qgsgV/8jQB/6FAHa
xew/PLVUkbX9JT+Zbgieovv9P5vSNEHQqCM/e3WrleBFBkCqLhKOTBhAP55M
6RpfaQ1Akky/nRT/Vz/lMQ024ZMSQIkpBMkcDmw/MOCZGu0wFkAHQ6//cl94
P4AuIGVrGxpAqF+7LRJ3gz9KyfFOofMdQGJR+hLiRI0/ZcNbutjEIEBdsKEj
ZRWVPydyOwCatiJAy4aTKrAqnz9EMhVkSIckQDmh2HA1aqY/npiUl9JOJkDw
cuzaCgCwP/rOEP4VPShAiLhumbaKtz+xFoeCRgoqQGoLJ9d84MA/ai76OTD+
K0AfSnjK2fDIP2DsEsH16C1Aw0BPVTVM0j+xuyVmqLIvQAEOR4zDKdo/gq0a
H4rRMEBMk19ugkfjP9iFH5o2uTFAmLDYRE6w6z8vxqKuP7QyQC3ePK9mfvQ/
pdn4qraqM0BTm2eN9x7+P8j1SzakkDRAEmEVhRqSBUDseR1b7ok1QGHTV2MW
2A9AvgbsDq9yNkAVV7mO1OcWQK5mjardVjdAQs0Uq9xbIECfLq3faE44QFAt
7xGNFShAyknPG+K2OEDABxlMotEsQNpPxvk=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAJeRG7PqyO0DABxlMotEsQAhYPhvY
CjxA8xDZy2Yxsz911CeJdwM9QHxqJ5EDhWI/j1kOho3rPUAylE1I4i9dP8ix
x2oRzz5AUZ4cXrK3Yj8Ccv/o8cU/QFozc2R3+Wo/dB0aeyRWQEDsiey/wERz
P+i1c07+0kBAkwS6E2xyfD+z0ktpk0dBQN4iGJsseYQ/DVkNeN+5QUBfBlkB
C0ONP2gTjtPZNUJAALAzWNuNlT8ZUo12j6lCQPXXhzmC8Z4/y8RLZvMmQ0Cz
+r8Bw+SmPwyh80kOokNALDjHtUDRsD+kARp15BREQMzmpEzWE7g/PJb/7GiR
REAB+PuJ7MPBPyuvY6yoBUVAc32WaROMyT+pMbFfn3dFQPYf4vf3PNI/KOi9
X0TzRUDvRgaCH9faP/0iSaekZkZAnO44oAA/4z/TkZM7s+NGQHTLq8rvcuw/
OGrHw3heR0BnlWUgZeD0P/TGeZP50EdAL60dMJ7b/T+wV+uvKE1IQG0zT8Dh
AQZAw2zbExPBSEAlHbr3SZ0PQNe1isSrPklAVIS827VnF0B6aCNp+7lJQO8F
PdxHNCFAdJ86VQYtSkAb4oOorqUoQFuRfsRQWUpAwAcZTKLRLECCo9W8
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 55.156701613104595`}, {0., 
                    14.409441354804471`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAwb6xZWMmIkAyqZgs5cD/PidyOwCa
tiJARIuYIjlN9T5EMhVkSIckQJ8EWH7KdeA+npiUl9JOJkCucMRaNX3JPvrO
EP4VPShA7013uyr8sT6xFoeCRgoqQHEhBkAI/Jo+ai76OTD+K0Ac2gfYHI+C
PmDsEsH16C1AzloZDfLvaT6xuyVmqLIvQA2J3WaTblM+gq0aH4rRMEAwNXaO
vsU6PtiFH5o2uTFAXF326C/JIz4vxqKuP7QyQIRa4FR25go+pdn4qraqM0Al
sOIoXqjyPcj1SzakkDRAIvz2C05v3D3seR1b7ok1QKR5cVaYZls+vgbsDq9y
NkAfi8z6lfJFvq5mjardVjdAMqN25z0fBz6fLq3faE44QLqe/EKphkA+Pv/J
o2o1OUBSf0wu+GBCvt43ZQHJLzpApvbnZBMgAD6cQ9NGlSU7QFLMdqTkjOY9
CFg+G9gKPEAqXw9zz4WlPXXUJ4l3Az1AO0a0A9SJeD2PWQ6Gjes9QPZAUegp
FXM9yLHHahHPPkBxUDcLBkxsPQJy/+jxxT9AF3vix30WYD10HRp7JFZAQHjP
sYv1KFA96LVzTv7SQECKaNEHX3g7PbPSS2mTR0FA8N8RI7UmJz0NWQ1437lB
QC9uOqdPDhM9aBOO09k1QkCslhjuITH8PBlSjXaPqUJAiqHs09zR5TzLxEtm
8yZDQJvzUyfuus48DKHzSQ6iQ0BcXm9lj8i1PKQBGnXkFERAWkv+hwuLoDw8
lv/saJFEQE6UhpdM9IU8K69jrKgFRUB6OcSGBJdePKkxsV+fd0VAorrPpMT5
U7wo6L1fRPNFQBCniYsqFXe8/SJJp6RmRkC5NWWvDV+jPNORkzuz40ZArczV
N6u15Dw4asfDeF5HQOjwDoJ57g499MZ5k/nQR0B5qNMx0MNevbBX668oTUhA
KNCLClhIez3DbNsTE8FIQNbt8mQ00CE+17WKxKs+SUDgb6rYMDLjvXpoI2n7
uUlAwGtN8miFkL10nzpVBi1KQMk+fr2xBUU+bgoRjr+pSkCcVHvU6rJGPr/5
ZQ40HktAMKaN+XVKAb7CIG4ONB5LQDKpmCzlwP8+pSh2ug==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.0220148138867453`*^-8, 
                    0.000030282494469493697`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAwb6xZWMmIkAyqZgs5cD/PidyOwCa
tiJARIuYIjlN9T5EMhVkSIckQJ8EWH7KdeA+npiUl9JOJkCucMRaNX3JPvrO
EP4VPShA7013uyr8sT6xFoeCRgoqQHEhBkAI/Jo+ai76OTD+K0Ac2gfYHI+C
PmDsEsH16C1AzloZDfLvaT6xuyVmqLIvQA2J3WaTblM+gq0aH4rRMEAwNXaO
vsU6PtiFH5o2uTFAXF326C/JIz4vxqKuP7QyQIRa4FR25go+pdn4qraqM0Al
sOIoXqjyPcj1SzakkDRAIvz2C05v3D3seR1b7ok1QKR5cVaYZls+vgbsDq9y
NkAfi8z6lfJFvq5mjardVjdAMqN25z0fBz6fLq3faE44QLqe/EKphkA+Pv/J
o2o1OUBSf0wu+GBCvt43ZQHJLzpApvbnZBMgAD6cQ9NGlSU7QFLMdqTkjOY9
CFg+G9gKPEAqXw9zz4WlPXXUJ4l3Az1AO0a0A9SJeD2PWQ6Gjes9QPZAUegp
FXM9yLHHahHPPkBxUDcLBkxsPQJy/+jxxT9AF3vix30WYD10HRp7JFZAQHjP
sYv1KFA96LVzTv7SQECKaNEHX3g7PbPSS2mTR0FA8N8RI7UmJz0NWQ1437lB
QC9uOqdPDhM9aBOO09k1QkCslhjuITH8PBlSjXaPqUJAiqHs09zR5TzLxEtm
8yZDQJvzUyfuus48DKHzSQ6iQ0BcXm9lj8i1PKQBGnXkFERAWkv+hwuLoDw8
lv/saJFEQE6UhpdM9IU8K69jrKgFRUB6OcSGBJdePKkxsV+fd0VAorrPpMT5
U7wo6L1fRPNFQBCniYsqFXe8/SJJp6RmRkC5NWWvDV+jPNORkzuz40ZArczV
N6u15Dw4asfDeF5HQOjwDoJ57g499MZ5k/nQR0B5qNMx0MNevbBX668oTUhA
KNCLClhIez3DbNsTE8FIQNbt8mQ00CE+17WKxKs+SUDgb6rYMDLjvXpoI2n7
uUlAwGtN8miFkL10nzpVBi1KQMk+fr2xBUU+bgoRjr+pSkCcVHvU6rJGPr/5
ZQ40HktAMKaN+XVKAb7CIG4ONB5LQDKpmCzlwP8+pSh2ug==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.0220148138867453`*^-8, 
                    0.000030282494469493697`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA0P2c5fw4CkAitPk0mXhmP55M6Rpf
aQ1AjrOQIOclTj/lMQ024ZMSQHD0J1zCSiM/MOCZGu0wFkC8L0HSAA38PoAu
IGVrGxpAETwb8kPQ0T5KyfFOofMdQHR+TZAFoac+ZcNbutjEIEBxRkaepeSB
PidyOwCatiJANRYCq5r6Vz5EMhVkSIckQG8549rnijI+npiUl9JOJkAyblor
sqgOPvrOEP4VPShAiTjyY2EB5z2xFoeCRgoqQCWrTKqLRsQ9ai76OTD+K0By
ItXHtpSgPWDsEsH16C1ArJnlhlszfT2xuyVmqLIvQDDoCYngN149gq0aH4rR
MEDo9kyB1v09PdiFH5o2uTFAmSjx8LruIT0vxqKuP7QyQKr6d2v6CwY9pdn4
qraqM0BXvMy+V9vvPMj1SzakkDRAAXDBcq8p4DzseR1b7ok1QBpOJuGSltg8
vgbsDq9yNkBP0M2H9+7hPK5mjardVjdAfANdcvxX/zyfLq3faE44QDGal+oa
FkA9Pv/Jo2o1OUCeSPtEVDWoPd43ZQHJLzpAKDVGwgh0ZT6OfQVJ2mo6QCK0
+TSZeGY/l83FqA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAIthuir0wQEAitPk0mXhmP3QdGnsk
VkBAYmxAVLg3Uj/otXNO/tJAQC9rTz0s5yY/s9JLaZNHQUC2nnxLD0sAPw1Z
DXjfuUFAboRACj0B2D5oE47T2TVCQPLg8kZMx64+GVKNdo+pQkAs7SJd0XWG
PsvES2bzJkNApq+v22IrWz4MofNJDqJDQMaLvtmFWTA+pAEadeQUREDu4ktN
mqT1PTyW/+xokURA35vAkQrO7T0rr2OsqAVFQO4Kg1cuHg4+qTGxX593RUDp
SHJL+M0APijovV9E80VALpK5P0vn6D39IkmnpGZGQBfVLrgxk9s905GTO7Pj
RkBg20zsX++tPThqx8N4XkdA6l2Hpkt+sb30xnmT+dBHQMJ+B6s4Clo9sFfr
ryhNSEAO3xVGJ89rvcNs2xMTwUhAp1eU6m2KdL3XtYrEqz5JQKcFV+SrI3+9
emgjafu5SUBvQHdCr/CgvXSfOlUGLUpAQFcJ/++z4L1uChGOv6lKQKL1oZb0
mle+v/llDjQeS0A0ZEBa8kMOv+S6aQ40HktAfeGRPx73Wr9OxcIE
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.0016458316224810803`, 
                    0.0027430527041390077`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA0P2c5fw4CkAitPk0mXhmP55M6Rpf
aQ1AjrOQIOclTj/lMQ024ZMSQHD0J1zCSiM/MOCZGu0wFkC8L0HSAA38PoAu
IGVrGxpAETwb8kPQ0T5KyfFOofMdQHR+TZAFoac+ZcNbutjEIEBxRkaepeSB
PidyOwCatiJANRYCq5r6Vz5EMhVkSIckQG8549rnijI+npiUl9JOJkAyblor
sqgOPvrOEP4VPShAiTjyY2EB5z2xFoeCRgoqQCWrTKqLRsQ9ai76OTD+K0By
ItXHtpSgPWDsEsH16C1ArJnlhlszfT2xuyVmqLIvQDDoCYngN149gq0aH4rR
MEDo9kyB1v09PdiFH5o2uTFAmSjx8LruIT0vxqKuP7QyQKr6d2v6CwY9pdn4
qraqM0BXvMy+V9vvPMj1SzakkDRAAXDBcq8p4DzseR1b7ok1QBpOJuGSltg8
vgbsDq9yNkBP0M2H9+7hPK5mjardVjdAfANdcvxX/zyfLq3faE44QDGal+oa
FkA9Pv/Jo2o1OUCeSPtEVDWoPd43ZQHJLzpAKDVGwgh0ZT6OfQVJ2mo6QCK0
+TSZeGY/l83FqA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAIthuir0wQEAitPk0mXhmP3QdGnsk
VkBAYmxAVLg3Uj/otXNO/tJAQC9rTz0s5yY/s9JLaZNHQUC2nnxLD0sAPw1Z
DXjfuUFAboRACj0B2D5oE47T2TVCQPLg8kZMx64+GVKNdo+pQkAs7SJd0XWG
PsvES2bzJkNApq+v22IrWz4MofNJDqJDQMaLvtmFWTA+pAEadeQUREDu4ktN
mqT1PTyW/+xokURA35vAkQrO7T0rr2OsqAVFQO4Kg1cuHg4+qTGxX593RUDp
SHJL+M0APijovV9E80VALpK5P0vn6D39IkmnpGZGQBfVLrgxk9s905GTO7Pj
RkBg20zsX++tPThqx8N4XkdA6l2Hpkt+sb30xnmT+dBHQMJ+B6s4Clo9sFfr
ryhNSEAO3xVGJ89rvcNs2xMTwUhAp1eU6m2KdL3XtYrEqz5JQKcFV+SrI3+9
emgjafu5SUBvQHdCr/CgvXSfOlUGLUpAQFcJ/++z4L1uChGOv6lKQKL1oZb0
mle+v/llDjQeS0A0ZEBa8kMOv+S6aQ40HktAfeGRPx73Wr9OxcIE
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.0016458316224810803`, 
                    0.0027430527041390077`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAuPH+sr5KIkDu+ChtMzOJPidyOwCa
tiJA0H3FRfNidz5EMhVkSIckQOER/f4tx1A+npiUl9JOJkAVLz1WaT4pPvrO
EP4VPShAa4uP6s6EAD6xFoeCRgoqQKycatBrN9k9ai76OTD+K0BCYEt86vOw
PWDsEsH16C1A2zWNWcqYhj2xuyVmqLIvQIS4GaUYimA9gq0aH4rRMEDTT4ZM
QKM0PdiFH5o2uTFA1awC5N6pDD0vxqKuP7QyQJxyP6siduU8pdn4qraqM0BQ
sfhDPcq8PMj1SzakkDRAeN4r4LBElTzseR1b7ok1QPoUvqW2KWo8vgbsDq9y
NkAkXIN3l/9CPK5mjardVjdAwy+lpkbKGzyfLq3faE44QGyedem7nvE7Pv/J
o2o1OUAYIUwCVrHQO943ZQHJLzpAgFVUN4+pHTycQ9NGlSU7QErqJJsb9CI9
CFg+G9gKPEB244QqvaPtPXXUJ4l3Az1AZty61XW5xz2PWQ6Gjes9QIqvLD+8
MaI9yLHHahHPPkC3kLBRyVJ8PQJy/+jxxT9ADp8FdYLIUj10HRp7JFZAQKw9
SrTSqCs96LVzTv7SQEBpSdinHX0BPbPSS2mTR0FAklkVzhrg2DwNWQ1437lB
QNdXWyJoQbI8aBOO09k1QkAlOF0YgzuHPBlSjXaPqUJAEqwAiHrGYDzLxEtm
8yZDQEePWhal4DM8DKHzSQ6iQ0DDnzsPdwkHPKQBGnXkFERAStRL4Kf9wjs8
lv/saJFEQAyWT4o/uMo7K69jrKgFRUCg6Rgqb+XtO6kxsV+fd0VA5GBhOOtF
4jso6L1fRPNFQNzeaqBsy9M7/SJJp6RmRkC1m73DJgfQO9ORkzuz40ZA1hPV
vnjhwzs4asfDeF5HQJFP8DvfHLO79MZ5k/nQR0AjXEcxlVynu7BX668oTUhA
mypycEUbtDvDbNsTE8FIQPI85Q+hAqs717WKxKs+SUAV6vwzTMV8O3poI2n7
uUlAAPqF0Bzo7zp0nzpVBi1KQAaJWPkRjus7bgoRjr+pSkDIn7r/iD9hPL/5
ZQ40HktALtOj2TN2ND1HBWYONB5LQE1YZOlwPX6+Zlp0ow==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.126527940691285*^-7, 
                    1.8775465678191255`*^-7}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAuPH+sr5KIkDu+ChtMzOJPidyOwCa
tiJA0H3FRfNidz5EMhVkSIckQOER/f4tx1A+npiUl9JOJkAVLz1WaT4pPvrO
EP4VPShAa4uP6s6EAD6xFoeCRgoqQKycatBrN9k9ai76OTD+K0BCYEt86vOw
PWDsEsH16C1A2zWNWcqYhj2xuyVmqLIvQIS4GaUYimA9gq0aH4rRMEDTT4ZM
QKM0PdiFH5o2uTFA1awC5N6pDD0vxqKuP7QyQJxyP6siduU8pdn4qraqM0BQ
sfhDPcq8PMj1SzakkDRAeN4r4LBElTzseR1b7ok1QPoUvqW2KWo8vgbsDq9y
NkAkXIN3l/9CPK5mjardVjdAwy+lpkbKGzyfLq3faE44QGyedem7nvE7Pv/J
o2o1OUAYIUwCVrHQO943ZQHJLzpAgFVUN4+pHTycQ9NGlSU7QErqJJsb9CI9
CFg+G9gKPEB244QqvaPtPXXUJ4l3Az1AZty61XW5xz2PWQ6Gjes9QIqvLD+8
MaI9yLHHahHPPkC3kLBRyVJ8PQJy/+jxxT9ADp8FdYLIUj10HRp7JFZAQKw9
SrTSqCs96LVzTv7SQEBpSdinHX0BPbPSS2mTR0FAklkVzhrg2DwNWQ1437lB
QNdXWyJoQbI8aBOO09k1QkAlOF0YgzuHPBlSjXaPqUJAEqwAiHrGYDzLxEtm
8yZDQEePWhal4DM8DKHzSQ6iQ0DDnzsPdwkHPKQBGnXkFERAStRL4Kf9wjs8
lv/saJFEQAyWT4o/uMo7K69jrKgFRUCg6Rgqb+XtO6kxsV+fd0VA5GBhOOtF
4jso6L1fRPNFQNzeaqBsy9M7/SJJp6RmRkC1m73DJgfQO9ORkzuz40ZA1hPV
vnjhwzs4asfDeF5HQJFP8DvfHLO79MZ5k/nQR0AjXEcxlVynu7BX668oTUhA
mypycEUbtDvDbNsTE8FIQPI85Q+hAqs717WKxKs+SUAV6vwzTMV8O3poI2n7
uUlAAPqF0Bzo7zp0nzpVBi1KQAaJWPkRjus7bgoRjr+pSkDIn7r/iD9hPL/5
ZQ40HktALtOj2TN2ND1HBWYONB5LQE1YZOlwPX6+Zlp0ow==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.126527940691285*^-7, 
                    1.8775465678191255`*^-7}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAATont7nVIIkCcwBnxaXn1PidyOwCa
tiJARcLrreby4z5EMhVkSIckQObPXahXzrs+npiUl9JOJkD6of7nbD2TPvrO
EP4VPShActrpHYRIZT6xFoeCRgoqQMhhe5spiTo+ai76OTD+K0CbtdjtcCkK
PmDsEsH16C1AiLaXaxjW1T2xuyVmqLIvQCQMMwcgB5I9gq0aH4rRMEAsp2ZC
Vqh9vdiFH5o2uTFAvGlQ+i5tQb0vxqKuP7QyQM+1yhg2Olk9pdn4qraqM0BK
2o/IyOtAPcj1SzakkDRAUH41v/fag73seR1b7ok1QGGisUF+R1q+vgbsDq9y
NkAkL6qLKPpHPq5mjardVjdAFAy6W6YzH76fLq3faE44QLBOR0SLjT++Pv/J
o2o1OUC2tHsAb+5CPt43ZQHJLzpARKpkfv75+r2cQ9NGlSU7QL6KRxVbDre9
CFg+G9gKPEDvUOvvzN4HPnXUJ4l3Az1AHP3TJkjABj6PWQ6Gjes9QFGV/Kek
ie49yLHHahHPPkBEwcDfQL3QPQJy/+jxxT9ApjHD+tc0rT10HRp7JFZAQPA0
67otWoo96LVzTv7SQECgm5/YbOhjPbPSS2mTR0FAmqET8p8mQD0NWQ1437lB
QLQKPpQrKRo9aBOO09k1QkAnjFeClNnxPBlSjXaPqUJAUqsKG2JyyjzLxEtm
8yZDQKwNh1H0EZ88DKHzSQ6iQ0DzZO2PxGZwPKQBGnXkFERAoDz36qYlErw8
lv/saJFEQMlqC08B5E08K69jrKgFRUBBCKWJExFxPKkxsV+fd0VAzIxbOOuc
cjwo6L1fRPNFQFyBILBz9IE8/SJJp6RmRkCshC8MgcKpvNORkzuz40ZAC92w
190d6bw4asfDeF5HQIQfJ1groRG99MZ5k/nQR0D0cQcaIPJgPbBX668oTUhA
UMQrMqfrfL3DbNsTE8FIQF7J+r3VtSK+17WKxKs+SUCQiqou2aTiPXpoI2n7
uUlAgOYt78gymL10nzpVBi1KQDrmAU2GWUW+bgoRjr+pSkBcTHpv8e1Gvr/5
ZQ40HktA5otXNbRqBj5jboDHbx5LQCKEj5bmxOm+8F1/zA==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.000012287685153768562`, 
                    0.000020479462426726243`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAATont7nVIIkCcwBnxaXn1PidyOwCa
tiJARcLrreby4z5EMhVkSIckQObPXahXzrs+npiUl9JOJkD6of7nbD2TPvrO
EP4VPShActrpHYRIZT6xFoeCRgoqQMhhe5spiTo+ai76OTD+K0CbtdjtcCkK
PmDsEsH16C1AiLaXaxjW1T2xuyVmqLIvQCQMMwcgB5I9gq0aH4rRMEAsp2ZC
Vqh9vdiFH5o2uTFAvGlQ+i5tQb0vxqKuP7QyQM+1yhg2Olk9pdn4qraqM0BK
2o/IyOtAPcj1SzakkDRAUH41v/fag73seR1b7ok1QGGisUF+R1q+vgbsDq9y
NkAkL6qLKPpHPq5mjardVjdAFAy6W6YzH76fLq3faE44QLBOR0SLjT++Pv/J
o2o1OUC2tHsAb+5CPt43ZQHJLzpARKpkfv75+r2cQ9NGlSU7QL6KRxVbDre9
CFg+G9gKPEDvUOvvzN4HPnXUJ4l3Az1AHP3TJkjABj6PWQ6Gjes9QFGV/Kek
ie49yLHHahHPPkBEwcDfQL3QPQJy/+jxxT9ApjHD+tc0rT10HRp7JFZAQPA0
67otWoo96LVzTv7SQECgm5/YbOhjPbPSS2mTR0FAmqET8p8mQD0NWQ1437lB
QLQKPpQrKRo9aBOO09k1QkAnjFeClNnxPBlSjXaPqUJAUqsKG2JyyjzLxEtm
8yZDQKwNh1H0EZ88DKHzSQ6iQ0DzZO2PxGZwPKQBGnXkFERAoDz36qYlErw8
lv/saJFEQMlqC08B5E08K69jrKgFRUBBCKWJExFxPKkxsV+fd0VAzIxbOOuc
cjwo6L1fRPNFQFyBILBz9IE8/SJJp6RmRkCshC8MgcKpvNORkzuz40ZAC92w
190d6bw4asfDeF5HQIQfJ1groRG99MZ5k/nQR0D0cQcaIPJgPbBX668oTUhA
UMQrMqfrfL3DbNsTE8FIQF7J+r3VtSK+17WKxKs+SUCQiqou2aTiPXpoI2n7
uUlAgOYt78gymL10nzpVBi1KQDrmAU2GWUW+bgoRjr+pSkBcTHpv8e1Gvr/5
ZQ40HktA5otXNbRqBj5jboDHbx5LQCKEj5bmxOm+8F1/zA==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.000012287685153768562`, 
                    0.000020479462426726243`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.829292429894418*^9, 3.829292435995099*^9}, {
   3.829296646449772*^9, 3.8292966725444393`*^9}, 3.829297050384918*^9, {
   3.829300558433523*^9, 3.829300568780965*^9}, 3.829301265348404*^9, 
   3.835975829885915*^9},ExpressionUUID->"79fb4327-2541-4981-b921-\
e7c44fa2aacb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", " ", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8280748033473263`*^9, 3.828074834605345*^9}, {
  3.8280749526989317`*^9, 3.828074995235281*^9}, {3.82807615136594*^9, 
  3.828076155194503*^9}, {3.8280862187462473`*^9, 3.8280862195250797`*^9}, {
  3.829301277077961*^9, 
  3.829301292365621*^9}},ExpressionUUID->"e1a7834a-ccca-401b-92c9-\
a73370150f20"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
NR4fv9BL4v4HXujO0Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3c4lu8Xt7P3yt577/E+z3PM90VKVrL5WlkhIimSpMiKKEISGUkpZbxv
yKokpJItEUKyyfj5/fVc5zrn/ozznOu+ryPqedbam4KMjMyVmozs/1+xtL2H
BUItaGZXt2MdBSvgQ8vogvwKsXoknO4tKg4nJxXSZPyeYt8uxUl2pfLBAdXb
Y0yprzBlvh89Fd5sYH/3z0kavzdYVl4T/bHHNPCVO7XyoOgtZv9F2E25dg+j
8JBQ2r3ViW2c5PsZ/moVU6xsqNmK/oA1YeY8d/LmMYd1K/V130+YYpjkSCX+
B9ZauDoUVdGHVWk9+aib8x371oYKbBZ9xjQQtUVF6McW5m64ROR8wQZG9Dni
rr7HKFi+FKze+oaJP2Abzbn3FuPVEJkITfiOLVgoLDJdImJKpwNEl6OHscv3
zwtQJddhxpfrPINDR7E1zYi0trhn2OmH5CULvuOYrIPIu2PZlZi2V2mY5tMJ
7EZlvZcVfSnWumFxO7xiEtu5/SQ9ZfABZnnjb23tox8YS39LUIzRfWyQP2dg
pWgK8+TIe+SPz8X+q8atq+b/xDZO21Q2umZhS/CDKzRnGospbZ59ZJKBRX2+
rlWTOYMlnq5dSs++hVH6KJ76c+sXBh7pHBm3b2CpW/2RSjdmseErHzxETiRi
vMlRuUEJc5iuYfBwcuFV7KGgUH1V7DyWGMzBOOp9BVOqefv9d/RvzKW69kQf
ZyxWb3hmR+78Ara0PTrwbP0iZvyFmd8/dBG73eLd0n7yAvbJ94V+eeAS1hdT
M5nHHok57px2nvX9g3HX5a17S0VgYR2xpNuqy1gY2ar19uVz2Ou0/uPqT5ex
mCAV0d+sYdieg+R4v8JfzHbd9PpufwhmKBZ1NqziL4axO9J4XjyLJf1+f8Am
s4Kl8e0Gt2YHYR9fCKY/e7SCMf3pn/o3H4CxXw4ROSm+irlqfKd+HuaPOeDf
1iwXrWJYi67OiOQZrICV2yBdaA0TdWUYLtn3xaa++/Up569hI+eLP8hv+WAy
Dxs9Ph1dx+rNT00YMftgwYHMK8E561hzz5OLDog39kLTI56ZawO7Q2dcHBLv
hW3v17JXZ25g5GLrnDTD/2FoF81DS9ZNbEzr5Fq/8X9YQsZp9cVbm5jybtHX
EaIn9t6x6m0Kwxb2fVyzMNPYE2OROLBRuLGFZfVwoVnfPDDbxZM/P9BsY/ez
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
uzC/tsaAjb+LNhtXsNH/ATNO4FM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3k4Vl8XNc/zPJd5nmfee85+X0NIZU4UEkKU5BdJpqgUkiiRIUmopIiM
ZYhSSSpkJoWSWYbQ5/vrPPvZZ6+71jr73nO3pOcJO28aKioqXwYqqv+vUlc3
7+ZINKLNDvUORqpVvOvkfeZA31x8Wpw3ouP2PLYdVbmq4PsYr+zqEOpLnMb/
6Jqt2ZOrsFTh51dnhqew061ZWwbfF/jFRy/G63smcbdA8oN/ec3Y3umyuyXz
BKY5LKO2kdSGTzrv++g28B07L9toLx/9gBProp0P3fmGm3IX+8JKPmIv/az4
ktQx3NOCxFbyPuHi3QlhCldHMQ3nl5zFpB48kffw6J39w1hIZ+fIybiv+C7n
4ohlxiBWO3BMci68Hw+dvnvSc64fH7hLXTB9dBhHe38PqvzWi/W9CoN1H49g
pvfMpnznenDTn93XQ0pGcVOKYZSJUjfuFb35eSHvGzY5+kNRqu4TPlJKWta8
PY7VM6Ytf+R04RkY4z958zue4/0vovjaR0zro7p/NmkCCyzaNYTu+oCTV7tC
1RImsUpXRGJv7HssdCUsIzBuCoeBN6rreYvVypq//gr/hW/YKD888fo1rqb4
rSudnsbCObfT8g63YdMvHKL+J39jXv06cX7OVuyyfuDg5NFZvG+Bg293fjMO
bo1quK45h4fdDL8uxTfh51e79mo/nsMWbC+dnpxpxBSpsBPBJfPY29A8Okf0
Bb70q/0ft8ICTlU3KmU/UI/fV4inPLm3gEXuuaquPq7Fzruay+byFvH1ecP1
awXPcQ6XADlFYgnrlB8Ny8ZV+NtX34/qt5fwPQGOfX0zz/DxAI6F4zeXMbur
TdHR+HJcoXs4loP/Dy6x3GOe5/8Ur22V85Sm/sGHXx8r7nV/guOuHdD+nbSC
N+HNg+O/S3G7y8PmRNZVTJ87/cpP9RHmlPlnr5Kwiq2LzXMaLjzAmZUFIcfi
1rDNLM+b91FFeDhqhY6VZh1zKV2hmxC7j2UsrdJLotaxtlBRIH/HPfy4f/bZ
VPhfnEl+0KvnexcvFVDME1b/4sKihRi+ffnY6Hh6t8LpDey0kD7TZ3YHt1AZ
rxw9uYmjNRYvKr3IwSztSRcZZzexHcnV/hV1Nt53fUTwfsAW5gpivJ92KAv3
yV4w+HH0Hz7AwSCs6ZqBN2XihgXm/uFfUjee5A3ewFw85GZpEhU0PsdF/qHp
+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
mPylzBEM4cC9u/tjTyxgn5ZKV4+eN4TzSmlpw3xLmPEj1YVdlwwhSv4247Dt
EtaxM3uC7wqbj3p8MKh2CeunxHb0XDeEsASVAErAMjb//HbePS9DuLkBe2Mk
8guT0FWzro8zBHE/QnSRxSrGULo0xJ1sCK1/csQd2laxe1JhVnrphiAgXJns
YrCGjS6PXUSvDEHY7udutxN/saK8uPNvkCE45X6/xtrJgZvs5jqd1G8IJafS
feO0OfFAYZWO3iFD2PGVc8LCjxN/99fipOS4ISRMB9u2feDEd/UUm0bNGUJA
Q47xxDkufPapPfPROiNQGDpztiaQGw/haaHeljWCBB85HQGODXjlwl+scJ8R
LIwXOcaZbMAXBhUo8wpGwHqCGcy92ICfZQWQHNSMwKKV/9WUIS++/7bmictE
I+g9K31HL5sPrxtP1jayNYK3CedOaQcJ4us+3Ty476URGK3niLjoKIKbxxI8
t+caAbHvp6Nqmgj+2kagXuSNEUxIZr606RDBz67LtFwtNQL1xw9ylwmb8YIj
X0ObPxhBHLrIrBMRxa1TGNOek0YwrHto1u6TGG5dFmk2LsaE3fSXtufCJfBN
qZ6/v21hwiMjwm2VzxJ46QOr5D4JJhAH58pdhLfhwqdUplu2M8HXic+GFLEN
R3Mf/dAeJqzP3Ba2N04S37KX602EGhNKXO4ry1Vvx7FwJxGCGRNyfC+Xdb3Z
hW/PWIeUTjEBy2l0J3Tvwh3LnthJmzOBfEa3t4dDBt86ml/x7xwTCMd7yLih
DG6jNe9QfZkJETVpkde+y+A8o84fyC7sfZGX236qy+J6Wq5+JhFMqAxT9jT7
KYdHM7kPnohkwrbb//ldlt2LT16J7D4czYRuS4/6AuO9+JPwwkPiz5lwXht7
szl3Lz4wstjfmcKE1cTSdX3X9+H3wt20z+cz4b6n0oPqRXm8fOTWT9vPTFg6
MzbOd1QRH8u8NOLbwoR7a2fbpJwV8c32jPaENiYEmpqs3MtRxK/OyBS1fmHz
SYg06sop4VuWP7nqDjLhn2jBTJqEMu7IK7u4ZZ4Ja+INv2I2qOByCk3ztaLG
MDxjpecirYozv7/7NiBuDPwmQnynj6viXrnpLX+2GgMzatNdW2tVvOWwR8Gh
7cbA0j7SL/RSFffRlnNO2GMMtVE8Lz2OHca7DTx/uKobg3eShnn/JTU8zHHf
nOxpY4h+bFyb3noEp6Va1UmeMYZ4u0Wt57+O4BvaEuJFzhnD9BaVvHc7j+I+
R8Wo/yzZ+A5yM7euH8Wd/3KkdtsYwx/LOcr3DRr46ZBu0ye32POytKo+kia+
Kyu05G+UMch1yi7fHNHCe7uw0J8xxhDL+ryhRVgbjxXgtp6OZethFvy5qK2N
b77pIdydYAzfvtdN8ERq4zxHbK8WvTCGjfbSdjeIBHzyPUhdLzIGdy1crTFP
B3/Tv+Dd1WYMtk6b09XbAaewHsb+7jCG7CBhp75ZwHvjdxZKdRmDp4eYaQr/
cZz7LH3ifJ8xUG8de3IXjuNmbamm30aMQY166unDnOP4ImYsP7VkDMpOD2NX
Q/RwtYLc5lUJE8AcWVzFl/TxYv9re3adN4FztnZ/865Q8N4WY7kdF0wg1+xb
TlgABV8no7FX8pIJcBSkCT94QcEZiFte7IoJlNoJ72ocoeCDPxMUeB1M4Le7
VEmWLRUXtP2sOudlAi5lRFqqIw23oqofr4w3gUTP0/v+xDDwjUL/zl/sNYHq
6klb5yQm3hscZm361QQCLvg9TS9g4tkbpK+RBkxgVuOVz0gtEyetI7grDrP1
JZ4sfjrNxL0XPSJWpkzAWOqZUuoxY3yme6ku/I8JxEtdhpAuY7wxc+ZglaQp
/NhDjyvfbYqHH/+6bvcZUyhrU6V8HDqJH7mGMXTPmYJlZ5Zi0+pJvCeyIMbi
vCmI3M+XGBU/he8dD1SKuWQKQvGX9xhQTuHlYQfPCNqbgnduVhvH61P4eI9P
3pKHKXwgpU9x3z2Nwy3ZCx/jTaFYoDm4YP8ZfC7brtx1wBTGnt6jalRY4Okr
QgJVlmawLd0tJ0feClf3uuiYOGYGYtUfNigs2uAL/63prjmcBN+x7XiL/XWc
u7w47eTUSRAX4mN5SDvhC1xS0roupyD2wiE5owJXXF0lTnH3/CkQvtxk89fV
HU9bb/si8MZpiG/iaHv82Auf3fxVzevnaXh24ZxaXaUP/pjLyfyaizn0v1ct
KzPww/U5v2cnuJnD7LXUkFdn/PAVjqtrTbfNQeJZCjX1ih9+8e/FVDUvc+jL
PBccf9cPV/3FnF7zN4cfLZInPuX44R0zKj7h0eaQV5Phum2TPy7dPZdZ9M4c
nPw4Zp3a/fGWL9d/j5WZQ/LjKnnOb/54UOc4Q5JlDhXunjdiZvzxubaBH97V
5tAmOCbTvCEAr276rEX5aA7b7H/p3z8WgNvU5jV195pDic20ZXtyAC5Zo7h7
Y785RBvWNRfnBOBN1Vns/4s5fKpouJhQGoBrVCZvSx8xhxNXnTvvtAXg/GXh
lx1mzEFq/c0TjryBOOudYHHSnDlo2YgUeogH4i5vH/C2zJvD8Is/lODdgXhv
kU/OkWVz6J4pHHqrHYiHF67+s/tlDoWhwVOd1ECc+MbdJO6POagcLZJaPRWI
/85fTG9YMwfRIxpuctaB+Os8x+V//9h87Vt+mToF4v8D3GCEaQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mhlEEzWtyYaUhSQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
DWHP/GLx0vKgv2trTOCOJJsSomPx/wHHhHSJ
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8280748355955143`*^9, {3.828074954219873*^9, 3.828074996816227*^9}, 
   3.828075443221216*^9, {3.828076133782419*^9, 3.828076155756703*^9}, 
   3.8280788308028927`*^9, 3.828086220330195*^9, 3.829288386327449*^9, 
   3.829288440152604*^9, 3.829288512281698*^9, 3.829289825061927*^9, 
   3.8292903963679934`*^9, 3.829300571815585*^9, {3.829301267910563*^9, 
   3.829301293283963*^9}, 
   3.835975830394988*^9},ExpressionUUID->"4e5f543d-e149-4212-ae8d-\
2762adf1c045"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prEcoFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "5.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "9.9"}], ",", " ", 
     RowBox[{"\[CapitalKappa]", "\[Rule]", " ", "50"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "700"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc1", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "100"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sys", "/.", "func1"}], "/.", "prEcoFunc1"}], ")"}], " ", 
     "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc1", "/.", "prEcoFunc1"}], ",", " ", "initFunc1"}], 
     "]"}], ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.829289836115881*^9, 3.8292898786984653`*^9}, 
   3.829289928815617*^9, {3.829290349293017*^9, 3.829290355545183*^9}, {
   3.8292909878604403`*^9, 3.82929098902839*^9}, {3.829292492461904*^9, 
   3.829292530486247*^9}, 3.829296677600597*^9, {3.829296715496174*^9, 
   3.829296715850922*^9}, {3.829296890284697*^9, 3.829296890447839*^9}, {
   3.829296939284951*^9, 3.8292969884923773`*^9}, {3.829297074505315*^9, 
   3.829297118199197*^9}, {3.8292972096052923`*^9, 3.829297210519383*^9}, {
   3.829300591073004*^9, 3.829300594922571*^9}, 3.829301320155313*^9, {
   3.8293050158654213`*^9, 3.829305105294956*^9}, {3.829305168801544*^9, 
   3.8293051856636667`*^9}},ExpressionUUID->"e977780a-4867-43ea-959b-\
1a9b2ab6363a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.7999999999999308`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "39.57777777777771`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "4.397530864197524`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "37.77777777777756`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "38.37777777777746`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999997`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.04765209751811406`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.04765209751811402`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.0031268094962621624`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "3.7163123621590666`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "8.216312362159062`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.06293335645934015`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.8618001911150331`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "1.185620220654939`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "2.018541162669054`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "2.4814588373309334`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.439410804095012`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "1.8172997050669217`"}], ",", 
     RowBox[{"W", "\[Rule]", "1.2546840939284971`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "4.499999999998625`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "5.990000000000303`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.5999999999999882`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999999897`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.18206896551724078`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.18206896551724064`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.19999999999999904`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.8000000000000518`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "1.800000000000051`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.20000000000000567`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "27.334134835869165`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "22.83413483586653`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.011365120930360725`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.4325211729163726`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.03913907513158789`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}, 
   3.835975830781477*^9},ExpressionUUID->"c05704a6-9501-4d90-83a8-\
d83e4906147d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D52FbOx0t4jQDLSsNGN
0iZAIf3lAmAHZj9UFCLQRcg3QOGANnVrpxI/NstR0LKqQUAwR19KZ6VTPxvp
5NFBVEdAcm3dLBi1KUCsRjc2rXhNQDfh22NSHuY+1seShxSaUUDm6bGvb9u1
PyyMaaVAtVRABwzRGQm3GT/ufulP7MFXQETmc40DZ34/aGe3NCCaWkC3j0yA
Txc9QLjv5ErCr11A37m9eIayBz/gNrBNdkhgQIKOf0tOIe8/Go1CPMuxYUDS
qkBtSXhzPz+zhEPXOWNAL6mSn1JRYj9A1O1np6dkQNsrP/G/MTZALMUGpS40
ZkAM+g8aJSv5Pk5NdKh1uWdAuFTi2RDiC0BM0AjJgCRpQHA70lf+hBQ/NCNN
AkOuakC3pB426oOIP/hwuFjJHWxATHq2KsmsPUCnjtPHBqxtQM7vemt/KyA/
jEND/QMzb0AlZVSg71syQKf57KfiT3BAuMxVMn6M3z59OZDdnhVxQDyh/xim
wMQ/wfbGIT3OcUBEEYvYN7HcP6D/J0k7g3JAk1n98IXACj918OD8lEdzQJan
bMwbniVAt14tv9D+c0B8e6HjalTlPu+00Q1oxXRAYvejrRPsuD/CVqA/X4h1
QJJo1WOk+T4/A3YCgDg+dkBYMatmaLYwPzl9vExtA3dABJXKuZisO0DdAQoo
hLt3QEh8TLjFKOA+HNKB5vpveEDXTjMVlNeTP1GKUTHNM3lAiMKzrUgMwD/0
v7SKgep5QMnGfeNmKBY/jN1vcJGwekDYOPX1N1AzQJJ4vmSDaXtA3Bedb4PN
3D4zXzc81R58QLe6+n8roYM/yi0IoILjfEBhzTLyBBz3P895bBISm31A7+IW
zeGhED/JrSgR/WF+QMQf0uCM0jFAXi0P80clf0AZa9Z/AXjpPmEqieN0239A
KTVQzClUtj+shy2wflCAQBFWleLLbiU/3zjg9bOsgEDl5VsGhNBEP+APKC0Z
B4FA74I037mzHkDb2psqLGmBQH10kDG1ZuA+jWRZL7DEgUDqpDV0nA2iPzri
QvrhJ4JAd2pgoRrTUT+1hcG2Q4mCQLyVwfOVf2U/5+eJehbkgkDMVKWK40o1
QBM+fgSXRoNAFagTSRqq8z72UryViKKDQMTwPMLd7dA/1Fsm7ScGhECCJaGe
5YrxPoCKJTb3Z4RAn44OtxtVnD/jd26GN8OEQBlH2WbAszlAQFnjnCUmhUAg
W2/myS8lP1T5obqEgoVAB7iIzIzNEUAWlsf5/9+FQPncZeCTeuo+5qnH1A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 29.67494456248305}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D52FbOx0t4jQDLSsNGN
0iZAIf3lAmAHZj9UFCLQRcg3QOGANnVrpxI/NstR0LKqQUAwR19KZ6VTPxvp
5NFBVEdAcm3dLBi1KUCsRjc2rXhNQDfh22NSHuY+1seShxSaUUDm6bGvb9u1
PyyMaaVAtVRABwzRGQm3GT/ufulP7MFXQETmc40DZ34/aGe3NCCaWkC3j0yA
Txc9QLjv5ErCr11A37m9eIayBz/gNrBNdkhgQIKOf0tOIe8/Go1CPMuxYUDS
qkBtSXhzPz+zhEPXOWNAL6mSn1JRYj9A1O1np6dkQNsrP/G/MTZALMUGpS40
ZkAM+g8aJSv5Pk5NdKh1uWdAuFTi2RDiC0BM0AjJgCRpQHA70lf+hBQ/NCNN
AkOuakC3pB426oOIP/hwuFjJHWxATHq2KsmsPUCnjtPHBqxtQM7vemt/KyA/
jEND/QMzb0AlZVSg71syQKf57KfiT3BAuMxVMn6M3z59OZDdnhVxQDyh/xim
wMQ/wfbGIT3OcUBEEYvYN7HcP6D/J0k7g3JAk1n98IXACj918OD8lEdzQJan
bMwbniVAt14tv9D+c0B8e6HjalTlPu+00Q1oxXRAYvejrRPsuD/CVqA/X4h1
QJJo1WOk+T4/A3YCgDg+dkBYMatmaLYwPzl9vExtA3dABJXKuZisO0DdAQoo
hLt3QEh8TLjFKOA+HNKB5vpveEDXTjMVlNeTP1GKUTHNM3lAiMKzrUgMwD/0
v7SKgep5QMnGfeNmKBY/jN1vcJGwekDYOPX1N1AzQJJ4vmSDaXtA3Bedb4PN
3D4zXzc81R58QLe6+n8roYM/yi0IoILjfEBhzTLyBBz3P895bBISm31A7+IW
zeGhED/JrSgR/WF+QMQf0uCM0jFAXi0P80clf0AZa9Z/AXjpPmEqieN0239A
KTVQzClUtj+shy2wflCAQBFWleLLbiU/3zjg9bOsgEDl5VsGhNBEP+APKC0Z
B4FA74I037mzHkDb2psqLGmBQH10kDG1ZuA+jWRZL7DEgUDqpDV0nA2iPzri
QvrhJ4JAd2pgoRrTUT+1hcG2Q4mCQLyVwfOVf2U/5+eJehbkgkDMVKWK40o1
QBM+fgSXRoNAFagTSRqq8z72UryViKKDQMTwPMLd7dA/1Fsm7ScGhECCJaGe
5YrxPoCKJTb3Z4RAn44OtxtVnD/jd26GN8OEQBlH2WbAszlAQFnjnCUmhUAg
W2/myS8lP1T5obqEgoVAB7iIzIzNEUAWlsf5/9+FQPncZeCTeuo+5qnH1A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 29.67494456248305}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAiaSrglMxJUC9uIkhstTSPzLSsNGN
0iZA98sPOj9/cT9UFCLQRcg3QG6/BAa/MjQ/NstR0LKqQUCcznEnTQM2Pxvp
5NFBVEdAvD/0h2r8uz+sRjc2rXhNQEWDk92G/uY+1seShxSaUUBzooAlwYGA
PyyMaaVAtVRAUtXOBrUDND/ufulP7MFXQA0l7wzJN1U/aGe3NCCaWkCwy+5K
8uTAP7jv5ErCr11AfV0yDhXK/T7gNrBNdkhgQLzP/EoIuaU/Go1CPMuxYUAq
059s0tCRPz+zhEPXOWNAD2gQJVseQT9A1O1np6dkQKBDJ2nu2b4/LMUGpS40
ZkCMdprl7ibzPk5NdKh1uWdAVKa1shwWtD9M0AjJgCRpQL5t0VDcIC8/NCNN
AkOuakBg2nLHUG9eP/hwuFjJHWxABf5XSJaJxD+njtPHBqxtQGCyaxuA9w4/
jEND/QMzb0BRruDLxu69P6f57KfiT3BA9j1xQ1PX6z59OZDdnhVxQAdGTssB
U4o/HD4Dnk6IcUC9uIkhstTSP8SBu9A=
                    "]], 
                    
                    LineBox[{{289.05686369255994`, 0.2942319228667534}, {
                    296.20197406410625`, 0.00003098654437980626}, {
                    308.47387397639187`, 0.10697224556259254`}, {
                    319.9259635708108, 0.000020939397276880315`}, {
                    332.3379038039847, 0.008874390921754259}, {
                    344.5232540381659, 0.0016829882539722816`}, {
                    355.8887939544804, 0.00010146393684930514`}, {
                    368.21418450954985`, 0.12764170273437697`}, {
                    379.7197647467527, 9.672042907086951*^-6}, {
                    390.9987549849627, 0.0026695449231811646`}, {
                    403.2375958619278, 0.23304500556080812`}, {
                    414.6566264210262, 0.000044705638158881234`}, {
                    427.0355076188796, 0.1178377422614724}, {
                    438.5945784988663, 0.000010494044962666651`}, {
                    449.9270593798603, 0.001570841490374204}, {
                    454.9949321580758, 0.2942319228667534}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA3etc5ihPfUC9uIkhstTSP895bBIS
m31ANRoQlKUDAz/JrSgR/WF+QEslMiQgzL0/Xi0P80clf0BMpZWqvNToPmEq
ieN0239AWA60LlDEgD+shy2wflCAQKDG8DOfkkE/3zjg9bOsgEBMQRXAX20q
P+APKC0ZB4FALek/9IVzuT/b2psqLGmBQI9qvxo0VuQ+jWRZL7DEgUDgMrso
jCBxPzriQvrhJ4JAunPl3j99cD+1hcG2Q4mCQM0x1UAjU0M/5+eJehbkgkCT
4lPgxqK+PxM+fgSXRoNAK+diC6c/8D72UryViKKDQKGbBtOaoJI/1Fsm7ScG
hEBwf9DW2MgEP4CKJTb3Z4RAZggKK0KSbD/jd26GN8OEQGpXXSVdN8s/QFnj
nCUmhUBkb2QfG+wSP1T5obqEgoVA0VV7PjfctT8Wlsf5/9+FQPiy7oDINv0+
dH+d/Q==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    0.2942319228667534}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAiaSrglMxJUC9uIkhstTSPzLSsNGN
0iZA98sPOj9/cT9UFCLQRcg3QG6/BAa/MjQ/NstR0LKqQUCcznEnTQM2Pxvp
5NFBVEdAvD/0h2r8uz+sRjc2rXhNQEWDk92G/uY+1seShxSaUUBzooAlwYGA
PyyMaaVAtVRAUtXOBrUDND/ufulP7MFXQA0l7wzJN1U/aGe3NCCaWkCwy+5K
8uTAP7jv5ErCr11AfV0yDhXK/T7gNrBNdkhgQLzP/EoIuaU/Go1CPMuxYUAq
059s0tCRPz+zhEPXOWNAD2gQJVseQT9A1O1np6dkQKBDJ2nu2b4/LMUGpS40
ZkCMdprl7ibzPk5NdKh1uWdAVKa1shwWtD9M0AjJgCRpQL5t0VDcIC8/NCNN
AkOuakBg2nLHUG9eP/hwuFjJHWxABf5XSJaJxD+njtPHBqxtQGCyaxuA9w4/
jEND/QMzb0BRruDLxu69P6f57KfiT3BA9j1xQ1PX6z59OZDdnhVxQAdGTssB
U4o/HD4Dnk6IcUC9uIkhstTSP8SBu9A=
                    "]], 
                    
                    LineBox[{{289.05686369255994`, 0.2942319228667534}, {
                    296.20197406410625`, 0.00003098654437980626}, {
                    308.47387397639187`, 0.10697224556259254`}, {
                    319.9259635708108, 0.000020939397276880315`}, {
                    332.3379038039847, 0.008874390921754259}, {
                    344.5232540381659, 0.0016829882539722816`}, {
                    355.8887939544804, 0.00010146393684930514`}, {
                    368.21418450954985`, 0.12764170273437697`}, {
                    379.7197647467527, 9.672042907086951*^-6}, {
                    390.9987549849627, 0.0026695449231811646`}, {
                    403.2375958619278, 0.23304500556080812`}, {
                    414.6566264210262, 0.000044705638158881234`}, {
                    427.0355076188796, 0.1178377422614724}, {
                    438.5945784988663, 0.000010494044962666651`}, {
                    449.9270593798603, 0.001570841490374204}, {
                    454.9949321580758, 0.2942319228667534}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA3etc5ihPfUC9uIkhstTSP895bBIS
m31ANRoQlKUDAz/JrSgR/WF+QEslMiQgzL0/Xi0P80clf0BMpZWqvNToPmEq
ieN0239AWA60LlDEgD+shy2wflCAQKDG8DOfkkE/3zjg9bOsgEBMQRXAX20q
P+APKC0ZB4FALek/9IVzuT/b2psqLGmBQI9qvxo0VuQ+jWRZL7DEgUDgMrso
jCBxPzriQvrhJ4JAunPl3j99cD+1hcG2Q4mCQM0x1UAjU0M/5+eJehbkgkCT
4lPgxqK+PxM+fgSXRoNAK+diC6c/8D72UryViKKDQKGbBtOaoJI/1Fsm7ScG
hEBwf9DW2MgEP4CKJTb3Z4RAZggKK0KSbD/jd26GN8OEQGpXXSVdN8s/QFnj
nCUmhUBkb2QfG+wSP1T5obqEgoVA0VV7PjfctT8Wlsf5/9+FQPiy7oDINv0+
dH+d/Q==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    0.2942319228667534}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3PzLSsNGN
0iZAEebX2+jS0j9UFCLQRcg3QLb+pusfqwZANstR0LKqQUBhEPYAuwjKPxvp
5NFBVEdARiXB5FEtrT+sRjc2rXhNQC83YfqG1fE/1seShxSaUUDbDPXTL/ay
PyyMaaVAtVRAOfu2+5GDEEDufulP7MFXQJbP7ZnNFcI/aGe3NCCaWkBgpLuE
OlfiP7jv5ErCr11Anlcz1juS4z/gNrBNdkhgQGQsyCAKKaU/Go1CPMuxYUBQ
aH/SV/wXQD+zhEPXOWNAErFF6uX8yD9A1O1np6dkQEw+VlxLhcI/LMUGpS40
ZkASmXr+2o/oP05NdKh1uWdARCFUvClOoj9M0AjJgCRpQA22jdCTABBANCNN
AkOuakBcx3zegNa/P/hwuFjJHWxAJgYQHLR7AECnjtPHBqxtQJkclUHaadw/
jEND/QMzb0C/ImKfZ8y3P6f57KfiT3BArZkBvM3PAEB9OZDdnhVxQAlPn4Hw
E7A/wfbGIT3OcUCGKWwVXC4gQKD/J0k7g3JAHEiEc1TK4j918OD8lEdzQFiU
BOq/Wak/t14tv9D+c0CWonuk1TEEQO+00Q1oxXRA79v9Y5xUsj/CVqA/X4h1
QIfsgqSbyBNAA3YCgDg+dkAEl2QtlOjWPzl9vExtA3dAtO3ukhEU2D/dAQoo
hLt3QGom3uxcXPY/HNKB5vpveEDPDqGGDAO8P1GKUTHNM3lAgEcQ9E+JHUD0
v7SKgep5QDrJTdN57t8/jN1vcJGwekDHuc1PtE26P5J4vmSDaXtA1KsrR3tO
/D8zXzc81R58QEQpGHoK5MA/yi0IoILjfEAlXsn9LBciQM95bBISm31AarJs
lmJ+4T/JrSgR/WF+QN3zF7nrjLY/Xi0P80clf0ABci4S+IPwP2EqieN0239A
Kz4R+VTcsj+shy2wflCAQAtKowJtoBFA3zjg9bOsgECTMvON/qrRP+APKC0Z
B4FAl1qky7kGpT/b2psqLGmBQFuqJ3PfCPY/jWRZL7DEgUAJp8jOIum3Pzri
QvrhJ4JADrSGCQBeFUC1hcG2Q4mCQNwHoJXt7Mc/5+eJehbkgkAq9QEiHoTA
PxM+fgSXRoNA/2/UBVkZ6z/2UryViKKDQJSA3zDobqw/1Fsm7ScGhEDjEFm+
tNoHQICKJTb3Z4RA890JTdR9uT/jd26GN8OEQPQs5VAVQRJAQFnjnCUmhUB8
K8pP8THaP1T5obqEgoVADoj4fKWLoj8Wlsf5/9+FQBv+OoCy7AVAS0HKJg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 9.04526513178923}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3PzLSsNGN
0iZAEebX2+jS0j9UFCLQRcg3QLb+pusfqwZANstR0LKqQUBhEPYAuwjKPxvp
5NFBVEdARiXB5FEtrT+sRjc2rXhNQC83YfqG1fE/1seShxSaUUDbDPXTL/ay
PyyMaaVAtVRAOfu2+5GDEEDufulP7MFXQJbP7ZnNFcI/aGe3NCCaWkBgpLuE
OlfiP7jv5ErCr11Anlcz1juS4z/gNrBNdkhgQGQsyCAKKaU/Go1CPMuxYUBQ
aH/SV/wXQD+zhEPXOWNAErFF6uX8yD9A1O1np6dkQEw+VlxLhcI/LMUGpS40
ZkASmXr+2o/oP05NdKh1uWdARCFUvClOoj9M0AjJgCRpQA22jdCTABBANCNN
AkOuakBcx3zegNa/P/hwuFjJHWxAJgYQHLR7AECnjtPHBqxtQJkclUHaadw/
jEND/QMzb0C/ImKfZ8y3P6f57KfiT3BArZkBvM3PAEB9OZDdnhVxQAlPn4Hw
E7A/wfbGIT3OcUCGKWwVXC4gQKD/J0k7g3JAHEiEc1TK4j918OD8lEdzQFiU
BOq/Wak/t14tv9D+c0CWonuk1TEEQO+00Q1oxXRA79v9Y5xUsj/CVqA/X4h1
QIfsgqSbyBNAA3YCgDg+dkAEl2QtlOjWPzl9vExtA3dAtO3ukhEU2D/dAQoo
hLt3QGom3uxcXPY/HNKB5vpveEDPDqGGDAO8P1GKUTHNM3lAgEcQ9E+JHUD0
v7SKgep5QDrJTdN57t8/jN1vcJGwekDHuc1PtE26P5J4vmSDaXtA1KsrR3tO
/D8zXzc81R58QEQpGHoK5MA/yi0IoILjfEAlXsn9LBciQM95bBISm31AarJs
lmJ+4T/JrSgR/WF+QN3zF7nrjLY/Xi0P80clf0ABci4S+IPwP2EqieN0239A
Kz4R+VTcsj+shy2wflCAQAtKowJtoBFA3zjg9bOsgECTMvON/qrRP+APKC0Z
B4FAl1qky7kGpT/b2psqLGmBQFuqJ3PfCPY/jWRZL7DEgUAJp8jOIum3Pzri
QvrhJ4JADrSGCQBeFUC1hcG2Q4mCQNwHoJXt7Mc/5+eJehbkgkAq9QEiHoTA
PxM+fgSXRoNA/2/UBVkZ6z/2UryViKKDQJSA3zDobqw/1Fsm7ScGhEDjEFm+
tNoHQICKJTb3Z4RA890JTdR9uT/jd26GN8OEQPQs5VAVQRJAQFnjnCUmhUB8
K8pP8THaP1T5obqEgoVADoj4fKWLoj8Wlsf5/9+FQBv+OoCy7AVAS0HKJg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 9.04526513178923}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D69U5MJkTP7PzLSsNGN
0iZAcBFskWPu6z9UFCLQRcg3QKiz2J6mXgdANstR0LKqQUAODO5imErBPxvp
5NFBVEdA74aUWbvOiz+sRjc2rXhNQJM2YjyFWOQ/1seShxSaUUCjI+qtTLql
PyyMaaVAtVRA3jzwx1XVAkDufulP7MFXQBs4FuIMqLQ/aGe3NCCaWkCH1IDy
b7ybP7jv5ErCr11AmitblHVT1j/gNrBNdkhgQDCiSimCq5c/Go1CPMuxYUAB
+KAl+zILQD+zhEPXOWNAuXkWxH2FvD9A1O1np6dkQG2hvJvmOY4/LMUGpS40
ZkCXf/fhywTcP05NdKh1uWdAxRlO47XCkT9M0AjJgCRpQOIHgOorQAJANCNN
AkOuakD8txDsnjCyP/hwuFjJHWxAbzjuwmuAtD+njtPHBqxtQLBWSUMVNdA/
jEND/QMzb0ArAxq6hCuMP6f57KfiT3BALQxqkUYt8z99OZDdnhVxQB1FsIds
bKI/wfbGIT3OcUDEbOWgcwMPQKD/J0k7g3JA9Ofi2nBv1T918OD8lEdzQIue
z0oLs4w/t14tv9D+c0AHlSriDwn3P++00Q1oxXRAr6SqeHEApT/CVqA/X4h1
QEExzZemjAZAA3YCgDg+dkAFQ18TwyLKPzl9vExtA3dAKw8RGZiilT/dAQoo
hLt3QPWkmS+8gek/HNKB5vpveEBO+QoQQwOwP1GKUTHNM3lA/WkUC4FLD0D0
v7SKgep5QNUsOqy0NtI/jN1vcJGwekDmbw+EeXiMP5J4vmSDaXtAN7JKdv8k
8D8zXzc81R58QABcK//fS7M/yi0IoILjfEBGorb6TzEMQM95bBISm31A6lDD
YOD00z/JrSgR/WF+QNAdtX4IDIw/Xi0P80clf0Dr0jNz6dbiP2EqieN0239A
nneZ50+bpT+shy2wflCAQCZJ28CxGQRA3zjg9bOsgEBqlt9D2ijEP+APKC0Z
B4FAJ764ibJXjj/b2psqLGmBQIW3fi+RIuk/jWRZL7DEgUDw+BkWnlurPzri
QvrhJ4JATRSOb19VCEC1hcG2Q4mCQJcu0TxuT7s/5+eJehbkgkD24rPfHoKN
PxM+fgSXRoNA7JbOTJ/p3j/2UryViKKDQM1RtCwCRqA/1Fsm7ScGhEAT6K02
mzX7P4CKJTb3Z4RAP8515igorT/jd26GN8OEQEvVtFZJ68o/QFnjnCUmhUBG
293+fOLNP1T5obqEgoVAAf9WGOPfkD8Wlsf5/9+FQFo8fOI4Avk/jBPG6A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    3.9118672242741455`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D69U5MJkTP7PzLSsNGN
0iZAcBFskWPu6z9UFCLQRcg3QKiz2J6mXgdANstR0LKqQUAODO5imErBPxvp
5NFBVEdA74aUWbvOiz+sRjc2rXhNQJM2YjyFWOQ/1seShxSaUUCjI+qtTLql
PyyMaaVAtVRA3jzwx1XVAkDufulP7MFXQBs4FuIMqLQ/aGe3NCCaWkCH1IDy
b7ybP7jv5ErCr11AmitblHVT1j/gNrBNdkhgQDCiSimCq5c/Go1CPMuxYUAB
+KAl+zILQD+zhEPXOWNAuXkWxH2FvD9A1O1np6dkQG2hvJvmOY4/LMUGpS40
ZkCXf/fhywTcP05NdKh1uWdAxRlO47XCkT9M0AjJgCRpQOIHgOorQAJANCNN
AkOuakD8txDsnjCyP/hwuFjJHWxAbzjuwmuAtD+njtPHBqxtQLBWSUMVNdA/
jEND/QMzb0ArAxq6hCuMP6f57KfiT3BALQxqkUYt8z99OZDdnhVxQB1FsIds
bKI/wfbGIT3OcUDEbOWgcwMPQKD/J0k7g3JA9Ofi2nBv1T918OD8lEdzQIue
z0oLs4w/t14tv9D+c0AHlSriDwn3P++00Q1oxXRAr6SqeHEApT/CVqA/X4h1
QEExzZemjAZAA3YCgDg+dkAFQ18TwyLKPzl9vExtA3dAKw8RGZiilT/dAQoo
hLt3QPWkmS+8gek/HNKB5vpveEBO+QoQQwOwP1GKUTHNM3lA/WkUC4FLD0D0
v7SKgep5QNUsOqy0NtI/jN1vcJGwekDmbw+EeXiMP5J4vmSDaXtAN7JKdv8k
8D8zXzc81R58QABcK//fS7M/yi0IoILjfEBGorb6TzEMQM95bBISm31A6lDD
YOD00z/JrSgR/WF+QNAdtX4IDIw/Xi0P80clf0Dr0jNz6dbiP2EqieN0239A
nneZ50+bpT+shy2wflCAQCZJ28CxGQRA3zjg9bOsgEBqlt9D2ijEP+APKC0Z
B4FAJ764ibJXjj/b2psqLGmBQIW3fi+RIuk/jWRZL7DEgUDw+BkWnlurPzri
QvrhJ4JATRSOb19VCEC1hcG2Q4mCQJcu0TxuT7s/5+eJehbkgkD24rPfHoKN
PxM+fgSXRoNA7JbOTJ/p3j/2UryViKKDQM1RtCwCRqA/1Fsm7ScGhEAT6K02
mzX7P4CKJTb3Z4RAP8515igorT/jd26GN8OEQEvVtFZJ68o/QFnjnCUmhUBG
293+fOLNP1T5obqEgoVAAf9WGOPfkD8Wlsf5/9+FQFo8fOI4Avk/jBPG6A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    3.9118672242741455`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{
        RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAMP07EeXJUBzIV1No+EaQDLSsNGN
0iZAFb9R8iJ39j9UFCLQRcg3QN1OsIBBzRJANstR0LKqQUDGKw1eb9fLPxvp
5NFBVEdAEWA9z66WZD+sRjc2rXhNQJemc1u3Y/A/1seShxSaUUBpYdGZL9Sw
PyyMaaVAtVRAzlXeuMBGDkDufulP7MFXQCsxlKCGlMA/aGe3NCCaWkCt1Eoi
jKFiP7jv5ErCr11Al1G9MP374T/gNrBNdkhgQDaSVp//xJk/Go1CPMuxYUA8
pMrCa2kUQD+zhEPXOWNAh53KOS3zxj9A1O1np6dkQK+i0dnmplo/LMUGpS40
ZkDU7+7C/ZHmP05NdKh1uWdA/krbnzapgz9M0AjJgCRpQDvsozcgWw1ANCNN
AkOuakDpV536aSO9P/hwuFjJHWxAnFdjkQyeej+njtPHBqxtQOSqs8coHNo/
jEND/QMzb0DEzmPgkdRdP6f57KfiT3BAIt6s60fl/j99OZDdnhVxQNxoD0yp
las/wfbGIT3OcUDE3gzad3kKQKD/J0k7g3JAKth4X0xE4T918OD8lEdzQE9T
4wY56Gg/t14tv9D+c0BAwiPDPo4CQO+00Q1oxXRA05GZ/PItsD/CVqA/X4h1
QMXZIDg/8xFAA3YCgDg+dkBbDIyhBg3VPzl9vExtA3dAOT9HveOfXj/dAQoo
hLt3QHqiensGjPQ/HNKB5vpveEBwWhHd7Y+5P1GKUTHNM3lAX7OvsTc9EUD0
v7SKgep5QHj7W73CV90/jN1vcJGwekCxiCwITbhcP5J4vmSDaXtAWKgtQqkC
+j8zXzc81R58QIyPdLAH8r4/yi0IoILjfEC/1jpzM6gAQM95bBISm31AF491
N1MT4D/JrSgR/WF+QLwZZxqfjV4/Xi0P80clf0AF0x4+LFruP2EqieN0239A
TSf1EqS4sD+shy2wflCAQDrL4BeCIBBA3zjg9bOsgED0fyTz9zvQP+APKC0Z
B4FAAWaKj5facT/b2psqLGmBQC6qe9ZcP/Q/jWRZL7DEgUA84zTEUq21Pzri
QvrhJ4JASPEHUvwgE0C1hcG2Q4mCQJipBoug+MU/5+eJehbkgkDz8w4HQhdb
PxM+fgSXRoNAhZRw+Mbm6D/2UryViKKDQC5PWeMaUKc/1Fsm7ScGhEDI+p11
guoFQICKJTb3Z4RAyAHYAvEutz/jd26GN8OEQI51VwAKtJM/QFnjnCUmhUD3
vsOtVBLYP1T5obqEgoVAZVoncQkifz8Wlsf5/9+FQBNABa0GJQRA6EHFLg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 6.720349510964627}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAMP07EeXJUBzIV1No+EaQDLSsNGN
0iZAFb9R8iJ39j9UFCLQRcg3QN1OsIBBzRJANstR0LKqQUDGKw1eb9fLPxvp
5NFBVEdAEWA9z66WZD+sRjc2rXhNQJemc1u3Y/A/1seShxSaUUBpYdGZL9Sw
PyyMaaVAtVRAzlXeuMBGDkDufulP7MFXQCsxlKCGlMA/aGe3NCCaWkCt1Eoi
jKFiP7jv5ErCr11Al1G9MP374T/gNrBNdkhgQDaSVp//xJk/Go1CPMuxYUA8
pMrCa2kUQD+zhEPXOWNAh53KOS3zxj9A1O1np6dkQK+i0dnmplo/LMUGpS40
ZkDU7+7C/ZHmP05NdKh1uWdA/krbnzapgz9M0AjJgCRpQDvsozcgWw1ANCNN
AkOuakDpV536aSO9P/hwuFjJHWxAnFdjkQyeej+njtPHBqxtQOSqs8coHNo/
jEND/QMzb0DEzmPgkdRdP6f57KfiT3BAIt6s60fl/j99OZDdnhVxQNxoD0yp
las/wfbGIT3OcUDE3gzad3kKQKD/J0k7g3JAKth4X0xE4T918OD8lEdzQE9T
4wY56Gg/t14tv9D+c0BAwiPDPo4CQO+00Q1oxXRA05GZ/PItsD/CVqA/X4h1
QMXZIDg/8xFAA3YCgDg+dkBbDIyhBg3VPzl9vExtA3dAOT9HveOfXj/dAQoo
hLt3QHqiensGjPQ/HNKB5vpveEBwWhHd7Y+5P1GKUTHNM3lAX7OvsTc9EUD0
v7SKgep5QHj7W73CV90/jN1vcJGwekCxiCwITbhcP5J4vmSDaXtAWKgtQqkC
+j8zXzc81R58QIyPdLAH8r4/yi0IoILjfEC/1jpzM6gAQM95bBISm31AF491
N1MT4D/JrSgR/WF+QLwZZxqfjV4/Xi0P80clf0AF0x4+LFruP2EqieN0239A
TSf1EqS4sD+shy2wflCAQDrL4BeCIBBA3zjg9bOsgED0fyTz9zvQP+APKC0Z
B4FAAWaKj5facT/b2psqLGmBQC6qe9ZcP/Q/jWRZL7DEgUA84zTEUq21Pzri
QvrhJ4JASPEHUvwgE0C1hcG2Q4mCQJipBoug+MU/5+eJehbkgkDz8w4HQhdb
PxM+fgSXRoNAhZRw+Mbm6D/2UryViKKDQC5PWeMaUKc/1Fsm7ScGhEDI+p11
guoFQICKJTb3Z4RAyAHYAvEutz/jd26GN8OEQI51VwAKtJM/QFnjnCUmhUD3
vsOtVBLYP1T5obqEgoVAZVoncQkifz8Wlsf5/9+FQBNABa0GJQRA6EHFLg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 6.720349510964627}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}, 
   3.8359758311238317`*^9},ExpressionUUID->"667557eb-4114-4f38-8ce1-\
0703a1f87702"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "30"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829289919956046*^9, 3.829289920125574*^9}, {
   3.829292552469584*^9, 3.8292926098919*^9}, {3.829292706618535*^9, 
   3.82929275636156*^9}, 3.8292967690075207`*^9, {3.82929683538181*^9, 
   3.829296912209985*^9}},ExpressionUUID->"85fca892-a36d-4286-bff9-\
1bba7b96e5d6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1:eJw9lH8803kcx3dLlGV2PVS0GiImjjM/ivL9vP1qv77bGCXdun4XSmnphBGd
O25+XahVil16OOVHV+KBpfXLjdPlZ1F307qQlWL38KOMdt39ca/H4/l4/vf8
82W767BwL5FAIPA+8a/jR48YZTYxgfDfMAgcJAys7WWC4EOtPqPPFzCqW0zK
GBOS29p0pK3u4CvcNnXPlAXqin0b3+ZRwfuH7JMLHFjgnt+ksJ99ixh3Gsl8
fxb82tBXa5ZUjFynX50vFLHA8CJgq7I2Ejm5LnV8msCCoM24OknvjOz3BtXS
ClkwFLT6dt0iErK5IEZ7aliQZjKWd0w8ga3okbdfaWPByPaz4vnWw9gy046I
sUEWRK6YFuhGn2OL/edeehLYoGLERlqaqDHycee4JCobVj4N9nJvfo6ZXouc
VXqzQeGdGTW1dBAzHs7Mmi9kw9z9oJ/LckYx4sp6C24sGxhrA43zvaewubBB
+Y9ZbEh0qzf+PYeI3ksXf/GkjA327Hh1nYiCJu5CI1XJBl8vS6nrchoaf38o
eOczNlTLxfWJZ1zQqNvFrvJJNnw0sVto27Eejexr3zZK4QDz+KpinZSLXl78
oHV34cBOKcy4lX2FBnodv0lgcqDgA/jHGg6gZ6TNxOZdHAgghauC8yToSUBG
HjGVA9RTt/rdAnNRV+KN5axzHChOvGrXbFGCHv6iKc+9yYF3vzXOWetrUOsr
skdPBwfG5uHmindK9IDmp7R8w4GD9/CgVHEnUm46wP3amAsdj0ryzwxpUFPO
ub4yWy64VpRV7/XTofr7qt3aDVw46e5F/Uv4GdyYmRxz3cIF0jFxKf8FBard
7SXxR7lgxCs3raRaQ0WUcEFTHhecPPp8c9atgculaUWGK1z47uoL0YjMA+RP
amyCWz71bQfa6KU+cMFMXSXVcGGkJNvbON0PzgaRfDr1XAhVPqAprvlBYbJP
y5JlOIR9H1dZuGAdbHHYRq70xKF4+563inY6rOhKiwAhDv6XSBYFIyagSb4s
f3wYh4BmgtuiAgW67NCqjcnFYaLteknCHzEoqusNg1CJg0Eavv0S5olcJOaS
0604tCsfxhRJzNG4g0fLmmEc8LjDDlGfT2I3uzaT78zjQelIc+e4bAg7LkmK
2GTLg0KjUGaTfgDb4Fgif43x4G+2KCF6+k+M0H1Xe0LEAzI91DK0QoM9kAwx
liTxoNGbIyxOH8ayHBdKrsp4gOjti6bW6jC826UF1fFAv0N2QqafxSgpIeTH
3Txwnpl3qNXHFPU6xkfEjPMgtBPPWUyxQme7ZXKDGR8qDAasVEdHohSFtsiZ
D8bMA7Gep32QDf05Yw2bDw3Ok1U+XRw02E2UKPfxYVp7/tvduSJUkeLQEp7B
h9fnDeVHbh1CB+kc8uuf+FB1K9PsaGUa+rInNuKEkg9RKql1uksBmkg5JbdQ
86G6blW0TFOGGuh12iszfMiwWqqnqOqQpKefgSwFoItu2BCiViFInU3u9RLA
w/YLS8atniEjJ5uW6DABzLdaf610xyhq7QkkG+IE0H99I8dr/0eUk7o/oihP
ADSur6VdtjmEOGXLnaoEkK5JrbG7QwOL3hrt7TYBrLZTpDsZOUN/ajcj/JUA
BlQ1afmnPOGRhb45nhgC4vTojWEqXxi4O0mbpYT8/1//AFIlKCE=
        "]], 
       LineBox[CompressedData["
1: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
EcqDOZ2FDLadJywUtQiyo3n//8d/AGXxO64=
        "]], 
       LineBox[CompressedData["
1:eJw9lGs01Hkcxt02LEakSVptDbLuMrEj/H/f2Nw3GrT/W4UR1ZpkKqeUbV3O
VmNYl1obFeFskvs409mycukiQ8wgHRGLFWUkQtFm7b7Y55zPeV59npfP5vAY
7gEVJSUlvxX+bVfhMzL4HA5K/wWD42tqrcMu4cBY65WzZYsLiCtnl/YU4+Df
8Ymd3G4PM35sqb8Yh7Jtn9oYxUxwGBfkujet+HGqZTqDfSg2peYQR4bDjfby
ntPWSahq0wzHdgiHMUymphB6oOm6rRqmb3D47YjV0TTCELXl6y13/Y0DaeYq
MLH7iJUkvZ1L1ibgfmrodOyNCSzlgGySvYEAnSLbUY54CAvzrh4ZsSCg1XzO
3bC3H8OsMvuyOQTkOz5SBDAHMSNGrMzDiwDm8fJKn8kRbH46sGU2hIDog45c
NUcFJu+yv1cUQcAm4kJp/x8LWIVktSToGAEDRqmcumE1JLw8XaaatOK/9gpN
T1yDIs90FokzCCi4GXArT8cEeeyvyuXlE7AkfZBc6sZGm9wzMtdUEDCl+/5x
zrgH+mh69HxzHQE3F5N5QQvB6Jl64NljUgIeFuQyHehIVPvKLs6kj4AM44ui
zxknUUa7Lr9rnADdnnM24RpCFF31hpe8QEBnoWFIovcV5J3dQbJXkRCbTXiL
2iqQWVzl7hEDEsaU8fzfWxqQCvGzd7YJCZ1jqS0uXnL0wiUGeTiQYN6bdXau
ewTd2RjgNAsk5CuIjoiAOfSLsp1NUQAJB/kZvJADq0AwyjAN2kdCbgql7pbA
hF2PpoxU+SS4mgvqH3WYgmXpEz3xaRKqq3ZuXK+6FdTTKjR4QhKOammnbBn9
GkZj0pf1L5MQUmzAanvuCg3cI/NNN0iYkWOLCctucMVxl0IgIeFq3t3vdB9w
4KSh7SjrAQn+Ns/i/TosIXhJ57m8i4S1fqTxSK822L9QyJKGSciiIkVB1+4j
7cb2Foe3JGzg6rgoOAI0UVR+b3iZhNXZBqV9uDN6+FOaJItBwQc1r/omkT4q
PMQvdzemINCvq/5a5gL2g/+3xTNWFDgrR/jGr3uJkXY2eYXbKZDt5OveHhjE
nPR1srg+FLDEURyLJ/2Y/tzkeRWcgoETCztC1g1hU71tZ2siKXjKLXu83fEv
THqnLC78BAVjFntjAu6/wUquivj6KRSwo3z2nIFFLOXH6IimLAqGLqSV5Iar
o1CePyW4ToHidthWY20mcvW05rKqKJiyKVharjRDhhbaPvJ6CiRpX4wfV3VC
77QmUVI7BY1G3af8BzxR55TUyaF/Ze/F/m4LMxyVy27ZDL+iYB/46u5qO4SE
tammWR8oiPu1SpPVehpF5ny/wV2Dhq++6YhvXZ+O3OP99GeYNLS+m2hwowvQ
xr1WmoVmNLBzlBma8mq0iLSUuNtowDSpRPvoZvSU9Xpe2YOGXnFT5iXTHlTz
mVRRvZuG6JYo4zMTYyh9vHQ0LJSGm9V/SreJ3qPDUuFzvRgavry4QzOmUBM8
Kw7LGxNo0MiboCb464GV6fs4VkSDRJ4bHLXaHJaPWTZszqPB+a75kZe4A3Tz
3FR7SmjYx2s+pXWdA6VBgZ7nJTR0z0ufcDXcIDVx8MJ8M/3/P/0DoUMbAw==

        "]], 
       LineBox[CompressedData["
1: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
/wYmakOn
        "]], 
       LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAzqKfYN6aYkAAAAAAAAA+QKRpsnSH
oWJAtSeiEeFcOkD+xJKrdqhiQFrLwj9NYTBAVyBz4mWvYkAQD9yoGQgYQLB7
UxlVtmJALeGymlBe5D8K1zNQRL1iQJKjy91/GJE/ZDIUhzPEYkCdZqPR3s9R
P72N9L0iy2JAGjKp5lfmJD8W6dT0EdJiQMyL+xMAmAU/cES1KwHZYkBsogrh
D2DxPsmflWLw32JA93eowoPt4z4i+3WZ3+ZiQC69mEVMW94+fFZW0M7tYkAE
/Rs0uP/cPtWxNge+9GJATbq+9aCU4D4uDRc+rftiQB+eC7bV2uU+iGj3dJwC
Y0AzSR4rXhrwPuHD16uLCWNAApLpTAfj+T46H7jiehBjQMrdVyTYQQY/lHqY
GWoXY0Aba0nwGScUP+3VeFBZHmNAgWPp1dz6Ij9GMVmHSCVjQKcZzDLnaTI/
oIw5vjcsY0BaPrtWD0RCP/rnGfUmM2NAWQ8XcV9qUj9TQ/orFjpjQLzGtA0h
ymI/rJ7aYgVBY0AI4FnBXlVzPwb6upn0R2NAatNuUwIDhD9fVZvQ405jQCO2
lHIpzJQ/uLB7B9NVY0AhAs4VeKulPxIMXD7CXGNAeF1+S/2btj9rZzx1sWNj
QLBZdRurl8c/xMIcrKBqY0AkwgCg9pPYPx4e/eKPcWNAvelGzCN76T93ed0Z
f3hjQKANVpZJHvo/0NS9UG5/Y0DPMWRwgSEKQCownoddhmNAKk+xv+H0GECD
i36+TI1jQE2OnF7CByZA3OZe9TuUY0AmnXUNvVgxQDZCPywrm2NA8qmwrS3W
N0DewO9296FjQBqXXoKokDxASzDmmRCoY0AAAAAAAAA+QFNTHoI=
        "]], 
       LineBox[CompressedData["
1:eJw9lHk01Gscxsdwyi6UUVkaW5FuLsrW/N5v5LaRciqj0GTet1wlZKnIbhzU
ZG5dS0URIjGWkqKmLJGh7RQJGSrV1USLjEp13f64zzmf85zP3885D9M/2JPQ
aTSaxzT/dWZN5OCcC1yg/QoFv4k2qgoqudApiLQWlztC1wo5L58rXCjKDnWI
0v8dDjdUFyy6wQXzxlyi/XoemDj6S8ebp33stEnhDinqvKpl1yjmQoSF1Czq
1UkUbtecwH/IBdPmrBUxYjbSuxLW6d3DhforIf+ksBejFlsThpmEC+pxA/ax
xcpo76XHOz8OcyE+I/ZR6opxStuaVy6ScoHstTWP/DBM1Vctk6V/4oL1jCfG
skoJ5b/01Uqvr1w4N1D1VrWjn1IWZh01lsMQc/v89uZgCVVjufrJ2EwMvjNu
C9/2vaC2XZQxr6tj+LPPTLltoZSiW5TuTZ2DoSbBdFj29DNVVsqu26yHQSZp
1gUbOtq0UInONMZgVTtiOE6fhSaLr7m9M8cw5w66Z7BTH+WbBGZfs8JQxiIq
2Y8XozWF857z7DBc2MOKa5dzQu+ZHZaeFIYjpxTF+4TrUE5+9AEDVwzJi9da
9dZuQ2Bo2TSyHkNEXfQU42cgepPXr1rniaHgfslllUPRSKDH90ryxtDq+7oH
MY4i+9Oscx4cDOq5/IfBD3LR4NxR6fzdGFoefNmqkVeBUnPO2L0JwsAcmQxr
jxChpQyPxMvhGI41iXmvN95H3Zk/O+OjMbDYyfJN6oModnYVwz0Rg1wgx+WM
z3tkdoLjPzcNg8Favzv2wTS4p6lZMZyBYY+h6GuB4iyIFDTKqrMwvOpbdVyj
TB8MNPY7x+ZhONy/1luy1Bxa+Ub8dUUYxuSrLv4hbwP7VB890bmIQft7ukOH
sQPoHEkyelGNoY1zKqvJlQUiJdugyqsYLtWtaxAOs2BX6su66JsYCku7Tg6O
2IPazEz6mlYMHjybb41TlnCZ5+o++y4GkhD8l9JubfBRmMgefITBpavrZWtU
L1JIOv+8vBdDgtGOHhd2KiqX81pyaAhDqHZ1o2KoO9ocP/Og6xsM2TecTCce
GqGpH3VNmmMY8pyNTVx5CqgoJkBt4DOGKQioqlL9QK2f0mWXTWEIMVzukyt5
QX2Maj8XKU8gLZlRnRI4QJ36cuidszKBALZvt9p4P+V80MJeQ5OAs3eh5uiu
QWpkojexj0FANz24t2DrMHU84sjdEgMCUTVT3ZWfRynHcSfdcFMCYunOleYH
Jqnn+6X+YEmgdkflfqcyBZT2IbdC1YZAvXY7P4OjhaxC3Cd7HAg0rpIcMKQx
Uc/od+dimHan9GcnbK1QfJCQH7qagNRv2RL3HIQWSf16WBsItIV7DxJPD9TU
5qZ1ZgsBh2Obyr0qOcin0NHthw8Bea9bk+LxUDQRuyjFDxMIF9n63IxIQoJt
OrdEewj06H2LU7HKRBbLFb4ahBFI6fvUn29Uglo0P9rERRHgRz+V2LtdQ37v
JEGSBAL5OlW4orQDye7cLUFpBJjdwoPJFgNIUNQwdFZAYGyBTX3MlvfIIv7C
fFoOgZ/WMvMFWA5atmdv4ZwlwBYYRqv1aYKfHS/j1nkCSgGchg59JkxqhbUv
EBJwKR7S5fougeOjHPmEWgK9IXydWNEysBRvYA1dn96D/mye4t9OoOKSqHy9
mfz/b/8CeyA+7Q==
        "]], 
       LineBox[CompressedData["
1:eJw9lHs01HkYxmeEEK2QKLewUmpM0yip+X1fSllNm81kU23smN/3WyRdSBd7
QmFosdW4rNuW3URO0ZZyHDbFIuOSGXbRFGVMG5E0Lqmtnd0/9j3nPe/5nPeP
53n+eRYLI7bTWgwGg6/Zf2/UisGVlfU0MP4bCoLjlt28LKXBNc7U8JjnOpjZ
YzHMlNOwg9n8fIfLSpC4634u7KUhfkdFnynHAlhm6r0PntEQc9rrvby8HzW9
fpZt/5KG98sfcSRGSUgobZfFj9Ew0hjIZ5RvRh+KagwHpmgY3PjAWnTQCmXE
l27a8IkGZ6MxnTaLTxRr74+xP+ti0AGzUz0Ow1TT2qSqWXMxvFPVyQbtnlHC
+VHqkPkYTuZOGhqMKKgPY0JWvRUG54+cwKvlT6nMFr99jo4YSrucQy2jBih2
MVV41gUDc+/rgnD/V1TzmeUKJUfDh3se7hydpERBC829PTAo2MG/GNlro48e
en5XPDFce+LlUC01Qdnmk8k6X2BgpHSZ1gfZI874QB3th8Et5m5/VQYHtbR2
/P371xjsG5Z1qL03IFxyb41TEIYGo0YvWaAAMRKuH07EGOIj8nc51NMoJzi3
VBWu8X/nzBqX76LRqvXJg5uiNH9FpqItNhm1LIi2vRqDIadje3Z3Sy7Cb0WB
s89i2NzCDrIJvoEY7dsvknMY5s2SfbTLq0U516C18QKGXl7en9lOMsRNZM12
zsEwv1qsrXowgNq+tfIUX8YgXnW0MvzLCbSPZ3Dqr2IM/IdbpLnHdEHLcvq2
TzmGkGg6YSjfHPLUg6PFdzFIutdkRUw6wupHcmf9exgcLgw1ZNuvhEel94X7
GzDw6kr4bbruEJpUlvewFcMiC1/TuePrQTsk/4+lXRjMY6uDrozzoIA6Z5yi
0OiTpviaI+7gvvCE79AABuv4sDmq/qUgm8BnfYcxsFOyrFOOGsCBDsFv18Yx
lK/gOHq8q0W6172mDWYwtFVfTOjdGoEuidmcMCYBzwWL15YUrEYeIpsDUj0C
iYPpVo1z5qFOZFjkYkxAnjqWL3KfpA4umuk7t4DAyWKxXOqtovSmXli+siFw
3qnf3GdPH3VZ1uXPdyJQ451k2t6roCq5T1axVhA4PL06Pd2xn2rLVJoacwmI
fcu6Lz1VUsrp4bdvPAh8VT1Ap3qMUjO73srlngRa05am1Y5MUcY1M7cqfAjU
jdmO9mzRRktstSRZ2wgoM4fKdJ1NEBWnH3kigIDA/1Vx4pAdEgwYC3Z/o8lj
YjnaDGwU6m3B5YkIGE4JRxMmEIq7amtmG0bgpbvqscPUNpStv0TNOEKgzJSr
m+QajG6EsTqfHycQWSVgDicfQvWtbrfrTxOY9kmvusWMQ49deZKiRA27KEtD
fjiPxs9vjBSnEkiVXWdNsguRnnqLIFRCYLOJ9IJ+36/IJsCfy88lAN3zbsoy
6pBb5S4zViEBfm0Js39rJ+IvFKo/KyGwc4+dX9G0Eglj9ne+KSMg0urRCYie
QMefHrotv0Ng/8jFTuvvdSAdjksqagiEH7TwVbWbQVHh6cisegKzZ9IuBTTb
Q7V2kuCElAB35O6ZxAIWyHAad7dMo1e0yXXJCzd42ZRhxush4DKJepuD18Gx
+z9VdPaR//vqHwY/Kz8=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAMh6z7/4bbEAAAAAAAAA+QAtt3Z0V
I2xAhrtCJsfTOUBiT/KAaCpsQLe9lADc0S1AuTEHZLsxbEATUNjufTcSQBAU
HEcOOWxAgSd9sPhh0T9n9jAqYUBsQDaZjbMzOXs/vthFDbRHbED5LpFAQs1A
PxW7WvAGT2xAchQO22WjFj9snW/TWVZsQBK/Sfof7vo+w3+EtqxdbEChhQ+w
vgHpPhpimZn/ZGxAHBK0tSyE4D5xRK58UmxsQOi3mWGq0Nw+yCbDX6VzbEBI
/7L3T0bfPh8J2EL4emxA6A9EBEsi5D526+wlS4JsQKizYEk3mO0+zc0BCZ6J
bEDZO4UkQxb4PiSwFuzwkGxAM0xN/tQxBT/4GEV1xZdsQKXPRJSo8BI/y4Fz
/pmebED05O+vpZohP57qoYdupWxAwKb/lALbMD9yU9AQQ6xsQGwLFEF2gUA/
Rrz+mRezbED7SEkQRG5QPxklLSPsuWxAUhXJD9SOYD/sjVuswMBsQLPm2vfG
1HA/wPaJNZXHbEAs4QUYDDeBP5RfuL5pzmxAzEpQZcaukT9nyOZHPtVsQGEY
mwO0NqI/OjEV0RLcbEBqjZlxUcqyPw6aQ1rn4mxApEFDaM9kwz/iAnLju+ls
QLZVhErr/tM/tmugbJDwbEAWk8Dm5IrkP4rUzvVk92xAqofaaiPs9D9dPf1+
Of5sQFwCZKnk6QRAMKYrCA4FbUBWN4rW5SUUQAQPWpHiC21AioCConcxIkDY
d4gatxJtQHiOHZ1vwS1ArOC2o4sZbUAuM95SPm41QIBJ5SxgIG1AvUi+DqgD
O0CeHO+5JydtQAAAAAAAAD5AeLkZVQ==
        "]], 
       LineBox[CompressedData["
1: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
08N9Ba239kCyHyeNZsL9///qPzWCW9s=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAaJBynWZVc0AAAAAAAAA+QFw5zMWe
WHNABEXNgC0ZO0DcYqIpDVxzQF8OybZDvDFAW4x4jXtfc0Cnz5z+bH8cQNq1
TvHpYnNAW0MGSFee7z9a3yRVWGZzQGFAEs0CX5w/2gj7uMZpc0ACp01Jcc9Z
P1oy0Rw1bXNAScGUI/6zKz/aW6eAo3BzQKQbi6XUlwo/WoV95BF0c0Blvk5H
kA/0PtquU0iAd3NAXsquFdS85T5Z2Cms7npzQAF9qXg3f98+2AEAEF1+c0Cm
48WUwczcPlgr1nPLgXNA6XXxzAez3z7YVKzXOYVzQNZkLrHFNeQ+WH6CO6iI
c0Ce1GqFD+/sPtinWJ8WjHNAJKLDJR2u9j5X0S4DhY9zQM7sLWksFAM/1voE
Z/OSc0D276iXx/IQP1Yk28phlnNAqHy9ROxkHz/WTbEu0JlzQN5BHFqaAi4/
VneHkj6dc0DUy8r8mGA9P9agXfasoHNABrzRx+VETT9VyjNaG6RzQLxadZoH
il0/TqKotdOnc0CasIenzPVvP0Z6HRGMq3NALrkxC6drgT8/UpJsRK9zQMsk
0GAiFpM/OCoHyPyyc0BPaDVzOvqkPzECfCO1tnNAKy7vXd0Xtz8q2vB+bbpz
QKEvmSCnbMk/IrJl2iW+c0D312mMGe7bPxuK2jXewXNAd0v9dDR77j8UYk+R
lsVzQKX6+js+XgBADDrE7E7Jc0C4+r71vfkQQAUSOUgHzXNA+PyLYtB2IED+
6a2jv9BzQDyOQop/mixA98Ei/3fUc0BUlgKDsGw1QPCZl1ow2HNAND06qJNn
O0D/7JBwrdtzQAAAAAAAAD5Ao/cioA==
        "]], 
       LineBox[CompressedData["
1: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
CUPAx2vfHl8g//+P/QsFaG4r
        "]], 
       LineBox[CompressedData["
1:eJw9lFlQ02cUxSNoRlkEAReC1AAuLDZMg6zR/3cFbQQJGGgFrQgN0eIgUQpc
CtaUTXFJK4ZNEQ2CApUWQbAsBcsmIosLVNEIVBYFqU0xIAaaStM+9MzcuS/n
5c79nWMhOOS3T4tGo3lr5t99YK1p+JQqBmj/iYKBrfUhDHUM6BhGDt2r50Cd
cq1p0lwMyEfG7FsWOECOLO3hKy2EQV667LmYCXHesyf5dASX9hfU8L1pEjgT
6l6zCMF1Jny23KiIOBV2zTL1EZZdY/MhUEBM/J0rThgi1F9VlzzUZRPlXF74
hDHCuVAtoaetIXnwg87qwOUIO6Mscljqaap0V3TfLwwEufHy/PdFo5SEPpCx
7gMEnoVQ7SN8ToVXcHlnLBCKnfrGy3r7KK+Q8gXvViNsplFGETcHKGt9s1t7
rRFO8E14afRhil6bgq12CNkyOwPLjHFqZL+CxbLX+I9kP3baP0U1GQeOZrIR
GlPmhDNPaSSvoVH2tyPCt26008Fx+kQcYRe4zxWhduelWz1/MEgQI9OwayOC
6okog3fYhmy8875tAyDouKltOVdcCCM6LDHXAyHlbLdjod82omJ2u87nIsTf
Y7GmAgLJ4y6OMtwLwSantHfoQhj50GZLvrkPQonwspeZLJ6kpHj73ecjHFT/
dLJ1WkL6fvtEK/FThIBC3G1+WUYcOEE32LsQjr75qjnep5ycytonGNmDUDG4
cPf1ySYy9CbCKCsE4Ujvylc/1/5KXHnYxBUiRGi31ZdJX5K0YvGXM18gjJr1
y77jqciYdqplSTgC97S6UJSwCEjwme49hxAyhQ0bR8JMIas2O2lxFELVWfPx
nlXrQLE0j92ACLe/Z998cpANWyOLhyLjEZyZBrkSpivkdpZJrcQIY+9sP9P7
ehNMratxf5SIIH3ju1WcuAm2Jzcqjx9DqF65JLld6gT5A3fzXU4iJE2I+QbJ
a2DWtdtvXIKwWJWZwXOfB/xMuVZuGoKAoetlC9dJ8cTQDV4GQu85lSNzm4DQ
vH8XzGUjfP40evd2A3sSUDRpVH4BITGGW9LqqUNKtdRNAhnCs9cmrZF3lBR9
7/wokwLNvbT1bis2j1BBNXpWrYUIHkL3F283DVCVJkt7Yq8hHKs1VS607qf0
Dpsn25Qi3LdvrpbYDlKhHWscnpUjvFyW47vq4ihVu5Y1LLmp4efKqELuq6SM
kpzSqRqE1Q+CMg0s56gD/ZTHRB1CF9syvjJEjzS4cCcvN2j4n2l2FrmbkeUZ
vgX+LQhllS23a9zsiOjPAP8FbQgd2yU21HsOafUK0a7qQEimZ5VVCnjEvDCs
Iuw+wvHG8+c5O4JJ9LzIUEYPQvONGXf1s8Okc0+ccedjBNGPxbFczyRiVZ3Y
fFSO0PSk0oeuSCfxxqei7Ac0eZ1YMb7j7lXyUCS1GhxE2JAqq6LkVcS6PadH
+gKB0xZXHWzeThLWFCRveaX5R5c4Wyu1j/QmlDhMv9bkNf1iU8eUgrD6KoaL
JhA+5vmcd0mlwXHnuvRdUwgfyb/xe6u7BPqlLR66KgT/sSCaaTQTNig6J+v+
QsjyTBjUF6+H056PCkRzCONZ1utH+Y4wdKXfn6kdC76Lz1oqvDngXJ8XeYke
+39f/QPwlC/G
        "]], 
       LineBox[CompressedData["
1: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
UOr0V2RLBfl/P/4NXjc8jQ==
        "]], 
       LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAALXkTd7adeEAAAAAAAAA+QDq5SvBy
oXhAM1zvWPSeOEBIhv5qL6V4QDl7SaDTASpAV1Oy5euoeEAMklxC6wkKQGYg
ZmCorHhAB3HENoUwvz907RnbZLB4QNho5GYNaGw/g7rNVSG0eEARiQsWw5w0
P5KHgdDdt3hAHZemoTpsDz+gVDVLmrt4QJHgn4kE2PQ+ryHpxVa/eEDRlC+Q
QljlPr7unEATw3hAarqUhazD3j7Mu1C7z8Z4QBsFAOai/dw+24gENozKeEDH
4kU/zNbgPupVuLBIznhAXEgxcL0C5z74ImwrBdJ4QF9x29Q00PE+B/AfpsHV
eECyjs4Fnlf+Pha90yB+2XhAo8MrQ23HCz8kioebOt14QMhxRvKO2Ro/M1c7
FvfgeEAagdRgtAQrP0Ik75Cz5HhAUiMEbL3/Oz9Q8aILcOh4QLLUgbgApU0/
X75WhizseEAGvaQqGd9fP26LCgHp73hA1cpIKJ9QcT98WL57pfN4QDAecG6W
84I/iyVy9mH3eECoVfOq4teUP5ryJXEe+3hATukH4hP+pj+ov9nr2v54QBC/
fvmLZrk/t4yNZpcCeUBaBxTDlg7MP2xrKWtCBnlAMsSfHUR43j8iSsVv7Ql5
QMYCcO6PbfA/2ChhdJgNeUBaXoLICWsBQI4H/XhDEXlAT5rbhZzQEUBE5ph9
7hR5QGmScBXbBiFA+sQ0gpkYeUDHtNNwlistQLCj0IZEHHlA0dOFrl6cNUBm
gmyL7x95QEfx7F/1djtAjLs/A18jeUAAAAAAAAA+QJBLEoM=
        "]], 
       LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAkR5mlYCreUAAAAAAAAA+QBpwKz/9
rnlAbq8F7kxzOkDQTsdDqLJ5QOTEW1LStC9Ahi1jSFO2eUAEUePSeaoUQDwM
/0z+uXlAEf29P3Yz1z/y6ppRqb15QCJQQqJSGYE/p8k2VlTBeUCuI4ldopFD
P1yo0lr/xHlAgDbNltMaGT8Sh25fqsh5QK+ddbwtyvw+yGUKZFXMeUDF/0x9
Wf/pPn5EpmgA0HlAGS+4Hy7P4D40I0Jtq9N5QHUg98Jo3Nw+6gHecVbXeUBu
T9uwZPTePqDgeXYB23lA6UoSqJnB4z5WvxV7rN55QP/H4OLX2+w+DJ6xf1fi
eUBKPUuROWP3PsJ8TYQC5nlApx/+/GqFBD94W+mIrel5QPCqOdmaHxM/LTqF
jVjteUAghUuUxaQiPyLcLWXE8HlAutx2RyPqMT8WftY8MPR5QGjdS4gLmEE/
CiB/FJz3eUCmuK1iTo9RP/7BJ+wH+3lAbPBoYvC7YT/yY9DDc/55QL/H9DgO
EHI/5gV5m98BekBC6p6kBYKCP9qnIXNLBXpAagSEv7cKkz/OScpKtwh6QEcQ
PAy5pKM/wutyIiMMekCUZc5yP0u0P7aNG/qOD3pAsQzA3u34xD+qL8TR+hJ6
QOhLqWx9pdU/n9FsqWYWekBoDftvvUDmP5RzFYHSGXpAhGY8duGo9j+IFb5Y
Ph16QIzlpO2OmwZAfLdmMKogekAfPI/vUa0VQHBZDwgWJHpAlhwKouFmI0Bk
+7ffgSd6QH1dmSH2UC9AWJ1gt+0qekBgImaT2zM2QEw/CY9ZLnpATVeotpeO
O0BdCGj8lDF6QAAAAAAAAD5AH8kgkA==
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJw9lHs01HkYh+cMTTe0SXbkknsykqlcovl9XzuhUGmORjZsMjpj04V1Tea1
rSKUy46aFrHppLKxShc2EZbItEIXE1LuExJdZNPs7P6x7znvef97z/mc531e
oz0HecF0Go3moex/52ht2hz+lAho/xUF9y1eOed9EEFky6KKybOO0Fbd5KA+
IwJtRnNeWbcNdPHLVsfPiiBaLnEeqdWBwTGJ+RgNwXGgj+1WMUwmEhP0/VUR
ONkqmvlR2WRGV6glnYtwWctR64nTDqJ6fdtCzkKESQXXsIBhQTTc7elXNRB+
472pU2HMI8yXBp/0NBFKN/hyb1dNUsYxjIm0pQjykuupui/7KatF44OfmQjk
Dxsb/vseyu7i4+5QPQR/9eAIJ1kXBZyqjq7lCA99mXXfGfVS7h0XHniaIMRr
dbQ/f9xPee9Lq71jjmAUryh3MR+nAugRFVaWCO0h4onApx8p4dldv+euQjDV
8boYtFaVhNtwi9TYCGeGVOM56pokvtHy3JF1CHHntjTqSw0JTb0szc4BYXQ9
i96qziaJPPu4CScEK+FCOTY4k7mSqpArBGFaYFCX84pHUrq5OwVchLYFDtVd
fAFRN2l2NXBDWHVP1fmEXhTJEHrZPnNHOJQ89vdOdjJZUvLEJGsrwlhxWGOd
+BdyespP05OHoOFyQmzqdpXorO+jMfgIMZs2N0+Y1JBcUcibal+Ec3vuzhXc
f0SW17/pjvVHqN/Kt7Q91kfOz49qWRuIYGv2jeu4/Xtitu1z5ZgAwSbGsyc0
lQGXxEcvFwkRrt1Ml+3u1AaWbJ4kMBQhJ3Vl1rcbzaBkefpx3UMI/fdavm8Q
sIEdvDTy8Q8I6beu9pZ6OUD5lZyg9GhlHumDmDRDDthPGPE2xynznq7TPtLK
gUrbS6CCCA5nZIV21+yBE2e9uuoogq/pgbUXH66Amppy/ejjCAH6r47s2jcH
NjKc1NgpCFq8Bh3Llhuk0ePejPwkQoaf/fMdfnuJe6bbyIVMhMKpBWcaM9jk
4RPp04BshKRbi/gWrmpku553A/MsgjlK0mOTpqiOQFl5W65y36x3+Vd5/ZRP
0e7CtAKE7iWxulRQDyUbHcx0vYCgIrIKL9brpvzX7E+gXUJIThl2lui9pHqj
pw5UFit5dOwvsPx5iAqqivWPKEXILRMP3/WdpAbpNE/r6whMI2zb66+gQjYd
dxy+qfShv7d9ul6NjJ5UW3m+UnmPeEfjRrsuOdie9bXfXaUfTSKV7QoWmWTq
MLRrlXyjUl6v+7KBRAbkv/vrT4SNpYoVPpe3kulCs74TTUq+ER8zl0XuJnEj
xY+4UoTNI9VkoDOMfLFeUzPbikDb7yg8lvAT+THidsmtDiVPi+noZcJsolpJ
5YU9QzjKGgjuyigiSYr6VFYXwrt54ZlNMxVkgYvH4YEXCNGdqXfyzreQUymP
hPl9CNn0xPzwwy/I4lYfH98hBC9bDxMJ6y0RL+1xWfIaIcKHwTwooANzl2Cd
dByBG1NtLX+rCTkFcuOkSQS6rDYs1MgYDAYPLXb+gLBtDuUt7bSGX1kfFTOf
EObzmq3bku3ANCx+vHxW6RtTLO813ABDvbjlFC3h///0DwOfI1E=
        "]], 
       LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAHN4lfMwAgEAAAAAAAAA+QBX+xGWU
AoBAaaeCQOQsOkDWIAhdcQSAQGUvU3UIcy5AmENLVE4GgECmHnEk3XoSQFpm
jksrCIBAjBGGtH7D0D8bidFCCAqAQIoWN3c4Enk/3KsUOuULgEASy3c2kJs+
P57OVzHCDYBAn794xLivFD9g8Zoonw+AQGjE3Mjf9fg+IRTeH3wRgEBE+0Np
ya7nPoKYp4A5E4BAPHBevOJQ4D7iHHHh9hSAQF0m9RIQ0dw+Q6E6QrQWgEBw
e+i58P/ePqQlBKNxGIBAmX4TZ9B94z4Eqs0DLxqAQCKu8YIStus+ZS6XZOwb
gEBt39vmM671PsayYMWpHYBAUq1BE4lFAj8mNyomZx+AQAiBrfI2ThA/h7vz
hiQhgECwMEEi0GYeP+g/vefhIoBAmwizjHlKLT9IxIZInySAQNiWho6t7Tw/
qUhQqVwmgEChmBOabhhNPwrNGQoaKIBAgt56VmynXT9qUeNq1ymAQFJCPidI
hG4/y9Wsy5QrgEA6dSb+bp1/PyxadixSLYBA8+EFf8tzkD+M3j+NDy+AQMDq
Sc7lLKE/7WIJ7swwgEBgkuUaJ/axP07n0k6KMoBAS4QNOyzLwj+ua5yvRzSA
QCycJ/gApdM/D/BlEAU2gEDYSloDk3XkP3B0L3HCN4BA/kTFFiEe9T/Q+PjR
fzmAQDQugJ5tXwVAMX3CMj07gEBxTR7MRM0UQJIBjJP6PIBAeX6fCpTlIkDy
hVX0tz6AQDhIazl25i5AUwofVXVAgEDVdT65/Bs2QLSO6LUyQoBAMBzwzeCQ
O0BfiP1i1UOAQAAAAAAAAD5AWPQLPQ==
        "]], 
       LineBox[CompressedData["
1:eJxFkn0s1HEcx2+Hwsi4piJFzuZOD0K3PPT7fiiMQx7GuWM41G7Mc56Tj6eY
ckt/UJuWhzq1sWUzRqdZccQpT8UmJOciM3XOLnko9U/v7bXXv68/3laxKcHX
6DQazXafvz6lyhg2uoJA+zcKMmvzs1s9Efou2JkVbrnCR3PP6QRvBIcUY0sl
OAKn/pCzrQ/CwvhYZEOeJdQypx8u+SLEb/d6W2Rtkp/PGn41+iHQz9sk/G5t
IuFnEiNiAhDMB1JfRDtEk642J6lFIEKNzLjCVX2WmHH2js8EIahlE0qmhwHJ
6x4oeBCC0JsEbWKJmpqhqudCQxGO8u0rgzRLlNsbAWHwENY7ZQ55VfNUnTez
fjQcQTgwRk8b+UTtDq/RxAKEkKnyYNW7eSoqsFPIjdzvZ5nL4xIV1KtJfK0b
haDQ8Z+qLFqjTvJ9rWXRCJGCjorxGA2Fs4zSEiFC1Teq0WVJi3wWziogDqHD
v+SJ16IxcVdKPPfiEcKem+Sy+y1JY0Kq5OV1hC52z126iz2hrzsfzBUheJjy
xE8ZQOIytEScBAQJOiS1OgWSPo18cCMRIVbG4W7diSHMmzWstiSEnqI1rrVB
GimjxVQmpyBoO+rrb7YUEWUpa9UuDeGEZnTSTnSfeOltcFfSEfjVPgdUF5tI
c5W0RXIDYYe1YKFt3k50TW4bxmchDKVLddz0+omo5mqyVQ4CdXiEYbP9gbw1
O/Z+Lhch209+68i8krAffzlXl48wp71o0CzWkErrlnv8AgSej7tcID0Iq82Z
P0wLEb6megzNL5uC32kSPIkIeQpeuFM5E7BrR1NRjEA21eVGYfbQ7tX96FIp
wi7Nuuj7OAeWJ7Ivq8oQAnJ0ByPUrrDCNvQsLv//tz/hEx6y
        "]], 
       LineBox[CompressedData["
1:eJw9VHs81HkUlWWFMlTWI+02tFsNkV5DM/P73mQKu5nSJFNq0XMWtSiPrNxJ
RSpNCYUt2UmKNKlQK4+ylZGSQg0j79mst1Rkx87uH3s/n/s5/517PudzzqX7
7fXYoamhocFT779YSBQ+j2MRNP4bCjz6hhI2H0OoPphg23KNBUcjpUsMjyMk
2QlXxTUugnuT98grTiC0mzYJimxnQ1+SNUYkIKSbRezKvj1CLK3efWsrRtCT
ZhYlhFwmntKsqrbTCIYKstTiR18Sz9kelJKIUHMlsch+jT0pldFNfkhCUNaY
xo3xaOT9xrfFGikIB7pzKnJCP1DzOtP97pxDCL5+zdaPp6S8gzdN/ilVfZ+2
92kgt4UST5jkfZ2OcOmrSZaKF01UxYm69S9/RWCfvPreU9FMfTJLHI29iGDl
oaiWO7RTNlfWXmRfQmCp+H41o92U7xID7mAmAt+Zx71S+Z5KLq/qvixBKLZi
at9lTSIy92PiTVkI0nmbg0PYBkTVuGoZLRvBh3navPnWTLJIqNX08CqCbf0j
91EWg+z8UC4Kz0EIL57YdSbckaTFRM9dcF3tj3All2XvSmoMOdWteQhcZ/8j
Pk4ConVhLDhZilC+/gupyVkhcbAuMv0+H8Gx7nNtj/EBElC0v2TiFoKFsDps
4Pd4ksFdvP32HQS5x9MSEpVG6moHdIWFCMZDT84XeOQSPZ+8G7PuIgTpp64V
LL1PqF7/DbX3EDIDrJLNLJ6R4APzPx8tVvPvMk2e/LGZZOkoM1glCAJ2ZNTN
y/1EflayaqAUQTspIDSnc4LQLP16JOUI9XYrWUqKBs43vjkjeIgQOk3b3FF/
FoSzFUyDPxDqXF57ZlbNg9zKVMWDRwjjgeKnOrWLoMXTKybsCcKhh+xWbw1H
mNFhPN9GhuB7P8IudRkHXINePmupQrgxFJXxppcDB1XifUnVCGX55d6Weo6Q
f9zd3O05wuG7rV7Z7AXQZTqlTFWDMNT2hP44YzqYZ1XuuFWLQFeuy1U1yIn7
4lj93a8QOEa84aEtceRQmfNNi3oEu2P+Ac6sNaRgjebGFw0I0ea3ba9dsCR/
yUvHj7xBmMGStTq4aZHZu6MylzcivOT7O01pG6D4I8td+psQjgwwXp8rbqfi
Dn3q/a0ZQRgYr5xY10wV0woSvVrUeaOl9lSON1ED6SGOU9sQNpVGprGiW6g5
DPu35e0Ir8ctQizEnZRXYd/h0E4Eic2pCss9/dRJ51yGtRKh1mhSct/QJ+rB
C2HN2z8RhvmCBhOGNvmwdW7o2W6EU0ZLeZpd0wijp2Omaw/CG21Ds/ETdLI1
IrP8714EXRljBV+2kDzfYretoR+ByhJ2yXeuIOBUrHVzEKFLsnp/la8HkX7n
mhU/rO7bTnraubxthK5fv3r7CIIqKWy1irufnOn3e8f5qNZz1GBz8JxYovmq
P95kFEFcwm1wcTlPQop+sRkcU/ezqsJXIc0hHem6z2TjCE5kT/Z17xKyQZS8
V6JCiNFcTq/NrCGPdlgZHdQQwTY3cXi2dRthuknzN2qKwGhGnUVBzjDJtuXw
7bVEoNM6eFjYqAVm02Ujel+KICVG0sBcYAzxHz1TOnRE8MqcKrBTWMFYY7tD
ia4I9rXG86MjF4J/2c/yFH0R5FTy+grDmNAk+TsyaKoIBALDwMYsNmjfY/Yt
pon+/2//AKifWcs=
        "]], 
       LineBox[CompressedData["
1:eJxFlH881Hccx2+KVOTHyIVxN65DPdRhwvH9vDV3VMLdUhdlOofHjNg1/Vou
73StVdr8yOhaSzQ0hZOt5ceVSrdQHrZCWH4cKj3Kj8o8Evtu/+z9eLwf7//e
P16P5/vFliaLY/UYDEYwnf9WXVDdfZEJAuO/oKA+yUrjaIbwaWH0bk9nb3AV
F0fPmiM87FoUdfPnFfCjJ0+v0wKh+FhPjM2uJWBq01BUtRRhpchWLY1vIji3
XnCciVBdG3Z5bFROJgY7hmXWCD6rbm7tVXmTGK3sKGWL8Pq1ncTsK3PyZ/m4
M9MO4XavPb9WMkUFZCmax+0RrG8nlkQ/HqZqUhcnNbMRUpdxuDYVj6nlEflL
LjggxOg7fC1v76HyKE6lgoMQUAX71vj0UQsc1CIJF6FGtGDndPYQtXcBmeQ5
IyyzdFo7sXGMejranLt4BUL7SeGZ47y3VESbxHNoJUKydKChPcWQ3L0y1NHg
ioAtIJ30syL8Avm+/NUI5U+CxDHGXFKeNmctd0P4KD02bVHeGmIrPVG3wQPB
cMdEYOvlIJIpXBbF8UQQiEME8/0jyKzLT3Oza+h7bV3Ci0kiSTZxL+z0RuAW
d7N/OK8gfZOatWo+QlPRwmxR9XdE1BmsO+6H0EqYvzgLzpPGui5lLEHwVwqn
hQZXiHthHJf4IyS2rhgufXWbFCsntcyPEXou/MEoNewkFgnpCRMBdP8qnzvV
Ls+IMsTYqEWIcMuwT/DUZoa8cTt96UIQwvrdBlFmocYQZ8UNPbge4aqlmYlV
uy10vK0ekwQj2GUqmKoSZwjqg2y3EAQWd8tgeJc7/Har1d0oDMGhUKu+AT7g
UhbxYEiEkGMqzt70zA9UmSO7NZ8gTA/W9Suu+YKR/EtmQTitN9fkmbvAA9I2
v3dNvgWh7PC80nx9NrzwORkZvBXhjeXyIvPkSRJlb/OOE4mwcNzF4M5lFbk/
r/Ts3DaEKWkK645jOIEnHtAVhRCq3DPf34lDKltu9KujEYRJqtJ4r/mEXRWS
cUJKz/vV/NSqey+p7FPdjnEyhOX+LZbNygHqfPeLVaw4BIvayoaMs72Umq3H
fxSPsLmqyvfw9l6qMd5SmPsZQiZbx2AI+qn2S06ikM8RtKfz6u5RI9TAJH+b
YRLC6BflmSdl49SEd2h8405aX+N6r4KAGUovXSo/kELz5jRsoTtgSMybUtM8
5TSvsfb2msCl5EOjb46O7aJ5a9oc9vciDnETn8m5mIpwuE/9fDDFg6zNrzgr
24Ng2WpKuIEBRPxXY5ndPoSNWd/rppM2Eanjwyud+xH450Z4R9pkRJ7wVJN9
AEGnM3JLiE4lhypn7gYrEGR7a/RvvX+EZL0xeWiQjhB4v6SRNZhHzvk69F9H
+p/4+w1ytSWk8pDn8/0ZCAMHa1QFDVfJde26KQ8lAu/QbAqv4XfStmS73ssj
9H49/Wl2tY9I36YU47KjCJEeXtpXqlEydjqDGXMMQREpGapzmSGM/jyHD04g
GGiH38UwjMCUe9G1IxPBMdq8ohOtgZVU7531LUL6Db/HDBYXVle3BWzIQija
te5B+Gse0OCE6ucguGaNsOIkXhBGpiI0ubS/qDbWa0Z8IbE7p2JH3v9+9Q8C
Mxu5
        "]], 
       LineBox[CompressedData["
1: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
rKAkiUX+/+/+BtyJRPo=
        "]], 
       LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAi3ZXzr2kgkAAAAAAAAA+QPLeQHKF
poJAXFClVjXGOUAShRe+W6iCQFvtBOLrlC1AMivuCTKqgkAyqeMPZM4RQFLR
xFUIrIJAKcpCFsBI0D9yd5uh3q2CQLBofxDtmnk/kh1y7bSvgkB2S41cDP4/
P7LDSDmLsYJA8N4BKc3FFT/SaR+FYbOCQEkJ2CB2Kfo+8g/20De1gkAMUrH8
LInoPhK2zBwOt4JA4cM6hRBc4D4yXKNo5LiCQLuiQWJ1zNw+UgJ6tLq6gkA/
Dzz65YTfPnKoUACRvIJAJDIk8QJy5D6STidMZ76CQGAMEuZbQu4+s/T9lz3A
gkBR5DAgGcj4PnL8Wk30wYJALkzLT50PBT8yBLgCq8OCQNPceQgo2hI/8QsV
uGHFgkB2f0c32o4hP7ATcm0Yx4JAsS029e7ZMD9vG88iz8iCQPZ5L2sXikA/
LiMs2IXKgkCxu2Ee14FQP+0qiY08zIJAc8VMWKqtYD+sMuZC882CQJNqQFCc
/3A/azpD+KnPgkASJF6rtG6BPypCoK1g0YJAd0GOLyX0kT/qSf1iF9OCQPkQ
x2S7iqI/qVFaGM7UgkDtKryw7S2zP2hZt82E1oJAvzRT4tXYwz8oYRSDO9iC
QHX9JYvWg9Q/52hxOPLZgkBa6lIhUSDlP6Zwzu2o24JAMhuTuomP9T9leCuj
X92CQJ5KKcZmlAVAJICIWBbfgkDk/A4Q4MkUQOSH5Q3N4IJAuIs0hii7IkCj
j0LDg+KCQPwl8A3ZfS5AYpefeDrkgkD7f5c3wdA1QCKf/C3x5YJAMMtFUeNM
O0AWJUjZmOeCQAAAAAAAAD5A9Qwj4A==
        "]], 
       LineBox[CompressedData["
1:eJw9VHs01HkcHY+1aYoxHuu9kl1Gb3mN+H0/hqVoiqUa4xmjdGjY00uPxfw+
oVScHirKY+WxetlWO7XWaiUaotSmUxlSTUjNoNQKO9buH3vPueee+8c953M+
5547Lzb523hNBoPBn+G/mlcd7dk4QAPjP1BQell6Ouo1DYbhLl8rkz0hWmq4
xvgNDbwjZ6y+2eoM1g0pWu1vaSDrOtVVclvobe64TqtoUCdUzqk7oiZFHY5i
7ggNFeuZhhlOV0hEV/b8kVEapv0quqOaNxPLHsXjyvc0HDg+kX9puwvpVnjn
Rn6g4apuaKi2NZsUvi32MfqLhie3TYLGLo5TYWOT423jNITKt88fPztImU4J
LksmaOgqm+LJLvVRj7Wkce5TNDgLfduz+uXUKaah2fDfNBhoqAsqdvZS6w1T
7lZM02DrNbWu/+YLysSiAyM0EA4IubpatkNUl60j11ALIVacaRnAHKNOOGar
WrUReMqBAffjDBLipDiXoYMAsqqmlXpzCdvDO8xtFsL9gfrBZT+YkwfexXoq
XQRm/fkKTeCQo6smm8qZCF2P4mL25bmToGDB7vC5CCmUc1J02ErCCvtlMVsf
Qdypeh60V0DuxbAVMhaCZWRcW3VPAslNSC5IZyP0lPM3e6bsJvyU9jWuRgiM
1bkX7tvnkDmpHG2lMUJGn1bW4GQhaU/P+vXcFwhvLPLPHnx1gRzKfikWmiGU
GA8FDvfUk4A8sDOwQDi5tDSQI+8gs08VPbltiaC56RZf0NlLWosnctOsES52
5uTWFQyTA5UbfF1sEM73Pgo5ODZN/C9f/fRmHsKWmi8bVsfrg47UoKZsPkIr
3gj4g1hBy+9iUdhXCOGKDNG02gEym++YsewRyh/pbxJ/dALfDod7LQ4IZRZj
UR12XNDuytz/vSPCn1EPTw0GekGT/AXXeSHCXlqRntbjBbSCDA8tQmBlS7IS
a90hzSeptGUJArsoP3X/BkfYU3Y6uGwZwkN1jvSxCRN2ajRrpi1HSHy2dLrB
u5F8FzNaG+aC0Fz80y37CTFJumEV7+KGcETmPEdo5UoSrANMDLgz+ULetqNn
WET0/c7bbz0QamJolaT2AxUjL0uVeSKoK4aHp16+oiJW3OOUUzP/EC8ZyTN9
RgkKJ5+mw8x9V1r95QNyKvST/eFwHsJ1RammzYk+aq0g1MvNF0GhxRclivqp
gGsZKrYfwqeNi2az7UcpP5NLJSp/hEPJqXfokSmKt+NJUNsqBKFE+CDVdzah
Hn6mWRmIsCI3tlt/mRnxWO5UK+EjhCTdDClZwCGux6JEkWsRBm07i54NcYnT
aI4xNxjhxPOyY4v9A8mioGstRiEI7/gNvD5OJHGoeblrJBRBcLLuanxWMrHT
Y3Ha1yO837PdZ9BRQmy2ej6tEiDEB7N2KNuOEcv2hEMoRNj3W73E6Fw5MV2Q
7xkdgZBX0wi2tVJilNOo9IhCCDXvviIdlxHWa2WxScxMv3V9Tkq3dBPmSvOg
dxsRBkpid+ztVxKdKj+Nu3EIfZN2hwvmMkBTZ9vP1fEzPrHurPBHFqhFJXGZ
mxECKs39hhfbwETTHaONWxC0XfWe73deCB9tx5s9ExFm7X7tJnRzgXcSu12m
WxFk/dWxLN4KuLDnc8VTMf6/X/8AqOQzXA==
        "]], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAVCry1hBvg0AAAAAAAAA+QOk/fdnP
cINAVWAMb1aaO0DknqmKq3KDQEi9eTohuzFA4P3VO4d0g0AnyrqpbZUZQNxc
Au1idoNAVo5ddHin4j/Yuy6ePniDQBORHTaA5Yg/1BpbTxp6g0DWTaizvYRI
P9B5hwD2e4NAZtrcGPHEHD/M2LOx0X2DQAVpc81uF/8+xzfgYq1/g0BCxkh9
vgHrPsKWDBSJgYNADsHESboM4T6+9TjFZIODQJVCoMz45dw+ulRldkCFg0Du
FZmdq9fePrazkScch4NAHuSBnFOy4z6yEr7Y94iDQAPyjMnB5+w+rnHqidOK
g0BCY0OAp5j3PqrQFjuvjINAwZcbdFjkBD+lL0Psio6DQB7+MWOkqhM/oI5v
nWaQg0A1O6KxdGEjP5ztm05CkoNAJJ5G9pnBMz+YTMj/HZSDQCsHH7xDpEQ/
lKv0sPmVg0D5k+FrD/RVP5AKIWLVl4NAEfu04PikZz+MaU0TsZmDQIg7gDY5
sHk/iMh5xIybg0Cs5Q4uAROMP4MnpnVonYNAm5AJpIzMnj9+htImRJ+DQCPH
kupg7rA/euX+1x+hg0DhORlo7KDCP3ZEK4n7ooNARmkVsxh51D9yo1c616SD
QN0ZVIWKZuY/DWQKVZOmg0CkFX9y4gj3P6gkvW9PqINABRQ0pZsvB0BD5W+K
C6qDQNALN9PNYRZA3qUipcerg0Cqyb+JzhckQHlm1b+DrYNA5MMc0UouMEAU
J4jaP6+DQHSs+tudyDZAruc69fuwg0DZLUll1P47QOejdSaRsoNAAAAAAAAA
PkACVCLG
        "]], 
       LineBox[CompressedData["
1:eJw9lHs01HkYxmelHY5LRQgtuWTVus6UNsPv+04kuZyR3IsVTS5pscmScZ1X
K3IpKiWxhbPSxQjRljtJtCcrUqg5SCvlUrksw87uH/ue85z3PP98znPO855X
yy/UmStBo9GcxPp3a0QxXHizfKD9NxTENbxibZzngyjgZPjUZhaoJma4vVjg
A7OWtTarwhQq2ezwnEU+OORtiLBcVAeOxOc0JxEfZk2bh6etPpDxppIS2RU+
lKQH6vsu55JkvmdjOw1hybjDpkDenWyylh1ACYTo6Vj1dOUt5L5k/SxIIkQ2
FjAN46SIa2v4OtFqBJ8tiTJnX8xQU8m6BrV0hJ6ykQMhAyNUqk2fzQlphKr6
dlHz6BC1mZ56yFQGwej0wk+lQwNUwyML3gdZBNkm21usnW+oAymTF0rlEfSt
XTqPqo5Ss7bXBNy1CAxOg8x860fqrLRrp5YCQnlUhcTd1HnKoIM+NqiIcNDi
vs7KgiS5nH3b5qwSwq1m1lW7OwpE2tu1xFoFYZ2hjIocR4tE6S2tnt+A0Ctf
X9KNJuTt5DVumRqCpJebfY0GEJfava0+GxGqUwTGDiIOaU6a0lXQQKDiOzVp
63wJw+EitmoiXK5yLDq3J4wUKlEjUVoIQbTTBvaXEoj86xErAx2EZdBJslvJ
IrG/pV1/rYsQbK5z0yfiVzIRzliVrYfwEFcyNn0WEC9Wv5+NPkJI/suauegm
0i6Z0LSwBaGFzauzWOkmO57qad/6DiG9sFTp3s/DpORiV6KvIQJdW5St3vGJ
rD8UIVQ0FvOZfVxOyypI2qrOfmSC0J2rKLdGQRGmPzUWnmQgRPBCM3c7aoHv
w0Ca0TYEQ2FozXSqATw9tcZXuB3h23ZGeNiTbWDhVF2fswMhr89uR1qKOZSp
emva7kRw/r3+L7UhS1AbXhW/aI7gbXSn1sTIElJu3hi6bYHA6e07Zc41g9kT
+yg/CqExwKeldlIPuGQ+XwkQ1mjEFLe9p0OPVIGonY1wSPLoRLBuM9nVvdub
Z4VwuPiPUXb0CVKeN/HAeDdC61RXkWcmEE1u9sZhG4SbLflwfXwDyTAy512w
RRisq23b379MLc29ebXXTpzfw//MjP8EFdz4C0tkjzAp3xBUPy+k+lON8sod
EeL7qUCLI4OUrcvzv/05CGm57IT85EGq+huel8o+BGV2lZxHhJDSHdO+3+GM
oMlcf3d13BiVXf5YNc4FQeg6WFyZOE1JnAyLNnUTe/vhZ5m7lqgwK5X+EXeE
nOfKgjJrKTIkW/d9rieC9Q8OTyIGlIhj7+Fc+wMIL4fNymdDdMmDApn55YMI
N7qisi5fZZKtQRXuFT4IV4y1ayhLK5LL8LzH9UUonCnwitHfT+hLK8qqfgi6
Rz5eabPzJ5GtJZGd/ggaC8Ve6eePk5EMx954LsLdIsuewGU+cfb4vJ0ZgJCq
JJTuis0hjVp5598GIoSNvrPokSsmJu/ZXy4FIwjku4YcSqvI1cp3Lo4hCBLL
pgfd7NqIbFxmJe1HcV8M6knnWC+J2WO2vjIUwT0+QFIqbIyMrx08HhAuzjsn
yzlXN0c8XvL/VDsu7jNLX4ek06Ht+lbm0wjxPXx140v2MWXYfuzZucRIhDeb
FwV3xnWgyCxqZlsUwtwZh7ePhMagQNN0fheN8HXeacekUDNIeNwqyIsR86yq
A5zKWRD0gi3FjMX//90/KblE/Q==
        "]], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAPvMqD3B9hEAAAAAAAAA+QF5cE3EC
f4RAp1pV0k0PPEDMJbrQtYCEQEx9qHbErjNAd0YwLI6ChEDpZeWZ/A0gQCJn
podmhIRAmT27B9ft8D/NhxzjPoaEQPT8tgOrtpc/eKiSPheIhECyFKdFlTJT
PyPJCJrviYRAoUbjN5bfIz/O6X71x4uEQMO2j6n9cQM/eQr1UKCNhECaqSGo
vRrvPiQra6x4j4RAEYn76VVU4j7PS+EHUZGEQJLrgdnCVd0+emxXYymThEAh
WrF+bNndPiWNzb4BlYRADz4O24lS4j7QrUMa2paEQMtvHbqCBeo+e865dbKY
hEC09YAJQKz0PibvL9GKmoRAO9Mdj0TlAT/RD6YsY5yEQEQhfrhbiBA/fDAc
iDuehEDowP4zzAkgPydRkuMToIRAoMVil+8hMD/ScQg/7KGEQEpdIrRdqkA/
fZJ+msSjhECCNdEQQ41RPyiz9PWcpYRAYPXhTPK9Yj/T02pRdaeEQEowZMJ/
NHQ/fvTgrE2phEBO0fqdKO2FPykVVwgmq4RAQpqwMOPllz/UNc1j/qyEQFjV
J/6uHao/f1ZDv9auhEAhAuXG6ZK8Pyp3uRqvsIRACFQ7lBNAzz/Vly92h7KE
QAGL//asCeE/gLil0V+0hEAp13CbHW3yPyvZGy04toRAvLaCxQuMA0DW+ZGI
ELiEQCUnn1An6RNAghoI5Oi5hEBuJcAsq9AiQC07fj/Bu4RAF3eJkXKZL0DY
W/Samb2EQN25iw6a0jZAhHxq9nG/hEDqJprHxUM8QJSCj3whwYRAAAAAAAAA
PkACwhx8
        "]], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAACvfwOl3BhEAAAAAAAAA+QNq9Vq0i
w4RAZpQAIgwQOkCF3swI+8SEQDPJqXhAVy5AMP9CZNPGhEBOlj8iK6YSQNsf
ub+ryIRAm5z3PAXM0T+GQC8bhMqEQOAZ0epRE3s/MWGldlzMhEBSXNLRdHdA
P9yBG9I0zoRAHkV9+mgSFj+HopEtDdCEQBvVqUVSSfo+MsMHieXRhEDSrnRL
TovoPt3jfeS904RAdlCbuBVY4D6IBPQ/ltWEQG3Hr98KzNw+MyVqm27XhEAv
1KxcqZffPt5F4PZG2YRAnl0DJsSP5D6JZlZSH9uEQPUKTDAkje4+NIfMrffc
hEB4gNAmliD5Pt+nQgnQ3oRA+SzxJe9UBj+KyLhkqOCEQJENb5VUCxU/Neku
wIDihECbb/DK77ckP+AJpRtZ5IRAnjYK0dURNT+LKht3MeaEQEby3iBc8EU/
NkuR0gnohEDAqPBKqzxXP+FrBy7i6YRAoaYlcBzpaD+MjH2JuuuEQHhDhBH4
7Xo/N63z5JLthEAiDTy+KEeNP+LNaUBr74RAGCLKZZnynz+N7t+bQ/GEQACx
twqMd7E/OA9W9xvzhEB3BfIqsxzDP+MvzFL09IRAcPQZsybj1D+OUEKuzPaE
QC5W+1CrueY/2NI+c4X4hEDW+W/4ujz3PyJVOzg++oRA0C2CnftCB0Bs1zf9
9vuEQNheGAn4VxZAt1k0wq/9hED3MABmkPsjQALcMIdo/4RA+Jpt1AUQMEBM
Xi1MIQGFQA5s60xWoDZAluApEdoChUBG43quNN07QBJqc/RvBIVAAAAAAAAA
PkDzUx+J
        "]], 
       LineBox[CompressedData["
1:eJxFlH881Hccx2+iqLn8bkl3sd2VS1co5UffzzurTH5OpIz8itNyoY5sCR3v
oiwyk7mmdqvVdHGhlI3NRA2pLr+SSk6nQ60p5Efqu/2z9+Pxfrz/e7/fr9fj
/Xybh8X4RGgwGAwPOv+tx92KPivXRGD8FxTwnlpI3GYiLNPoFp+TO4JIwA7R
1EbojNl3drrJBmrUCzjVOgjPokd13G6zQTv6o4H4OQjVBS8XxHi9Jj4vjEr5
ugg+Mue1c7V+Iidj9UX9TIRyk/qKfeuDiWpY1/60HkJuu0SWnrucWMfPnt5q
gHAi39l7TFOXJI3NrNM3QrisPfkk0HqEavhqRkajMYLQOEt1aqeK0pt65542
D6HjycHWaNVjKiB5St9pPoK63qZ0srGbOsMYb39tipAZlVG5TfCYeiEekVw0
Q6iQXCwzUCmpNVrDIZEshC0h9bdcQ4co8eEXHPYiBKtMtWCh7SjVrDM40GGO
0BdX9s/EeQ1iktVfmvMxgv1e/l8BeXokhNkncuUgWHY66gmrWeRCTo+9xmKE
yaUC1u/CZWTU4OF01RIEXtezefkPnAh8d79uL4/eRxRjpnvHnRyZ155hZYXQ
KmLdyuIEkdbvFR5PlyG8bX2T51wnJCyz2wZFy2m/UtmVSQXJJKqoqWOLNULz
lf2J/QXZpGzRzZNzbRHslHz9Y0GnyZT0eujNlQgyv75G6aScbOTUcg/aIcTz
ForipLUk51z1oP0ahB0TwnPNbgrSZVklH7ZHGOxNb7s32Es4sivxFxwRfmus
3OO98xWJ5Zc77FiLwElFj6GcGVAlL31nRhDqC7u0nuoYgqat7HobIBBpX4RD
hDl4Xj6fecyZ7pevNM9VWEHB6rOeLusRenbVGNtqroLeaz8aMjYixAjH56+o
dQArp6LOqy4I+jbDs6JH1kJCTeEPca4I3wgjfI8MOMEfcCKM54awIruynJ+1
CmbXfbtY6U7rqenZFTz0CfhuyBmSeNJ6B5xTio1nwKkbWZd8vREWGUrmlrhc
JQOumQm6Pgg1K51Vl5RCsrIZHRs2IzgpZIXsmfYk2VPMSPFDSFIq0iwMjcjN
O8n1q/0RHMmw6xnfCcpg8/4jL7ci3C5d5216VE0Ftu3z+iUAQflBoWn2aA/1
s7/IKCwQQcssvVM+3k29vB9733Q7rb/qcbiQekQ5BAqL7gUjPOdK9ZLFvVT6
o53hWaEIfO0HiVy5mmoJiVyyIRzhdQ/bLuXCK2q+Muz52x0ID7dJGtZ/yiCj
odkj6kiEA7Ozw22zmaS159e3bVEIzAMjJbf8WKQs+JnWn1/S/Jx/YmkSsJzk
PDJilkTT/inEZyZLgOwOWmdSuBvh86paXYG5D3HvFrIOxSI0zZJym6bDCe+L
Qu6ePQgmp5qTZRsTiHZXA3+7iL63S1xe3lQGUW19ZbcpgZ4X9WGcH/ckud7B
JnaJCP3tpjFLm0qJdIu7i8XXCMct8koOvaklqW2JXswkmo/iTRWTm1rJdt+z
/hMHEPwe5BWUtaiI0727waoUmqdZvi0y73Fi6jMtUBxEWKWydjF2mwNv7vBi
a9IQIk+UMKOuLYB2L//EYqR5FmR6yoMsoaIlLTX/MMKVvyMvq8dsIddDniHO
RLhrY3XoxlEHKNaJcBcc/f9/vQfJeziW
        "]], 
       LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAc76J4nxsVkAAAAAAAAA+QIkawgfQ
elZAvE9f6VEXOkDItgHXxYlWQLRNgBAtGS5ACFNBpruYVkBptOEb+ugRQEjv
gHWxp1ZAyo44Tdq7zj+Hi8BEp7ZWQIy5xzIgL3c/xicAFJ3FVkBe58aVDso8
PwbEP+OS1FZAGCuyixC6Ez9FYH+yiONWQCZMolvLHfg+hPy+gX7yVkCAmANk
1ivnPsSY/lB0AVdA2CYRDZ3H3z4DNT4gahBXQHiTanH00dw+QtF9718fV0Ds
iES9GUHgPoJtvb5VLldA8ogPg7235T7BCf2NSz1XQBQqA7Xch/A+AKY8XUFM
V0B0ybX7Rc77PkBCfCw3W1dAk4AC0EQ5CT9/3rv7LGpXQJJKTmn8Nxg/vnr7
yiJ5V0AcRSTN4EEoP/4WO5oYiFdAh4LskuYPOT8+s3ppDpdXQHMUJfpMe0o/
fU+6OASmV0B9jZKolm9cP7zr+Qf6tFdAWNpWr0Xhbj/8hznX78NXQDJmBtnJ
5YA/PCR5puXSV0BgE0kQrJaSP3vAuHXb4VdAhK/8MM+DpD+6XPhE0fBXQDYc
FV7UrbY/+vg3FMf/V0Atx5bEEBPJPzqVd+O8DlhAnaD9gNip2z95Mbeysh1Y
QLP50ozJUe4/uM32gagsWECTUhW4dlkAQPhpNlGeO1hAOf0zuXMFEUA3BnYg
lEpYQCZ0Ak2pjiBAdqK174lZWEDIoJVI7s0sQLY+9b5/aFhAqPHD0/SPNUD1
2jSOdXdYQOqRNQ2QhTtAKUcqxGGFWEAAAAAAAAA+QEJuDaY=
        "]], 
       LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAC+cqj0rEXEAAAAAAAAA+QFQzdszu
0VxATAxoyZJ8OUAqI4kPot9cQPZU6X4IZS5A/xKcUlXtXEAg+1/5ABQVQNQC
r5UI+1xAKczsjKIv3z+q8sHYuwhdQAQzes6Wjos/gOLUG28WXUBCmfR9Fo5P
P1XS514iJF1A+nB9hT6LIz8qwvqh1TFdQHPxDVuB5AQ/ALIN5Yg/XUD+VQUh
WyjxPtahICg8TV1AlMl+HpLi4z6rkTNr71pdQIykQ+M6Y94+gIFGrqJoXUBP
d5jszPjcPlZxWfFVdl1AGnhRdDJ54D4sYWw0CYRdQFnBDdvAiuU+AVF/d7yR
XUD5oJVOwnHvPtZAkrpvn11AfUrTNi0D+T6sMKX9Iq1dQEyaAQK0RQU/gSC4
QNa6XUCT7l7xfQwTP1YQy4OJyF1AUk4KJE6+IT8sAN7GPNZdQCvc5nUwBzE/
AfDwCfDjXUDRDNtU9rVAP9bfA02j8V1AfgakKcOsUD+szxaQVv9dQIYnDo5i
12A/gb8p0wkNXkC6S7cOcChxP1avPBa9Gl5AFn0VraKWgT8sn09ZcCheQBXu
2bApG5I/AY9inCM2XkC3dTkdxbCiP9Z+dd/WQ15AYc9hDeFSsz+sbogiilFe
QKfOFCSA/MM/gl6bZT1fXkDRWdNa+KXUP1dOrqjwbF5AqnvpV39A5T8sPsHr
o3peQCKUYM8WrfU/Ai7ULleIXkDU2W3/P64FQNcd53EKll5AEXoTAZreFECs
Dfq0vaNeQOe1bOeIySJAgv0M+HCxXkBXU5Vc4I0uQFftHzskv15Aqb6SaHTX
NUAs3TJ+18xeQGPlRrHAUDtAIgXWuQ7aXkAAAAAAAAA+QNUvHJo=
        "]], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAV/Ci9iYNa0AAAAAAAAA+QHi22Msa
FGtAxQHvHMqCOkDPmO2ubRtrQIkzrr188S9AJnsCksAia0D3P+a2wgsVQH1d
F3UTKmtAE+1RZQBk2D/UPyxYZjFrQBqCjJ077YE/KyJBO7k4a0Ail6AM2EhE
P4IEVh4MQGtAMMXj8jjOGT/Z5moBX0drQHEKpx3XXv0+MMl/5LFOa0B1hsw3
aVbqPoerlMcEVmtAA1J9/s3r4D7ejamqV11rQL0Zto/f4tw+NXC+japka0D9
v9V9cNLePoxS03D9a2tASFiaVrKU4z7jNOhTUHNrQKLLk/XEfOw+Ohf9NqN6
a0CDvjAv+QD3PpH5ERr2gWtAy8zFFdgeBD/o2yb9SIlrQKnkxsBpshI/P747
4JuQa0AyNzhF2S4iP5agUMPul2tA9Pce2Q1KMj/tgmWmQZ9rQOZ58nXb20I/
RGV6iZSma0AnNDyo88xTP5tHj2znrWtAOTQeVRcOZT/yKaRPOrVrQDGrSjsy
l3Y/SQy5Mo28a0DNvwEeImOIP6DuzRXgw2tAoK5ndshumj/30OL4MstrQJcI
bmwPuKw/TrP324XSa0DY95SuCjy/P6WVDL/Y2WtAwppkKIL50D/8dyGiK+Fr
QHliWrKOY+I/U1o2hX7oa0BV4Dcg8r7zP6o8S2jR72tACQbfTlbGBEABH2BL
JPdrQHgU3gvJ8xRAWAF1Lnf+a0D9w0DlNJEjQK/jiRHKBWxASDLmsgA5MEAG
xp70HA1sQE9eyj39KTdAXaiz128UbEBpkyKlLHA8QJubwREqG2xAAAAAAAAA
PkADqxUX
        "]], 
       LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAARnYxhVMnbUAAAAAAAAA+QCYbQj8J
Lm1A/6cNGCrBPED6g3DI3TRtQBmsSViyODVAzuyeUbI7bUCKfi2403IkQKFV
zdqGQm1AIL5NKMh4AkB0vvtjW0ltQNVVqsYcsrc/SCcq7S9QbUAE7zNPBQlu
PxyQWHYEV21ACjKTlNKBOT/v+Ib/2F1tQLDI5bGAkxQ/wmG1iK1kbUB4n3eQ
q/n6PpbK4xGCa21AT5Ku0EUM6j5qMxKbVnJtQFIvuXcpK+E+PZxAJCt5bUB1
8nw8hw7dPhAFb63/f21A8eiE5Y4F3j7kbZ021IZtQMRMTty3LeI+uNbLv6iN
bUBACNMt6/XoPow/+kh9lG1A2TYky/jp8j5gqCjSUZttQGhJF5P49f4+MxFX
WyaibUCq+psXkuYKPwZ6heT6qG1AfsOi8aV4GD/a4rNtz69tQFXgC3oPDic/
rkvi9qO2bUCeQCNxC002P4K0EIB4vW1AqJwFoL0ARj9WHT8JTcRtQGfW13sc
B1Y/KYZtkiHLbUCgN/NbSElmP/zumxv20W1A2r3vtRS4dj/QV8qkythtQHer
ByySSIc/pMD4LZ/fbUAwdoqmofKXP3cpJ7dz5m1ArkFiUc2vqD9KklVASO1t
QBR7HwgQerk/HvuDyRz0bUDdu+6EDkrKP/JjslLx+m1AUcxAQ1oT2z/FzODb
xQFuQNgamm/+vOs/mDUPZZoIbkBcVPbaRBP8P2yePe5uD25AmfZkeWu1C0BA
B2x3QxZuQOrbRyCVFBpAE3CaABgdbkA6+fLPba8mQObYyInsI25ATOu2Mh+h
MUC6QfcSwSpuQOzdJzYB/zdAjqolnJUxbkBGm+OZdKw8QOQG+NrBN25AAAAA
AAAAPkC54SxG
        "]], 
       LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAnyRSX4E4cUAAAAAAAAA+QCqkdgoI
PHFAVTy3BCntOkDE+FcRxz9xQIawgvuiYzBAXk05GIZDcUDgc4nYp2wVQPih
Gh9FR3FAEU3wwGhS1z+S9vslBEtxQB9P87o+DIA/LEvdLMNOcUBsDrpB8uVB
P8afvjOCUnFATvfjTV7cFj9g9J86QVZxQAi6UwmIgfo++kiBQQBacUBA2IJn
nHPoPpSdYki/XXFAR6kl8TRB4D4u8kNPfmFxQDqf9AAVy9w+yUYlVj1lcUBG
D0cG2effPmSbBl38aHFAXQCKcFYJ5T7+7+dju2xxQNmRGVwJuO8+mETJanpw
cUDU6up1vH76PjKZqnE5dHFAuCPxNO/rBz/M7Yt4+HdxQO43fEzP5RY/ZkJt
f7d7cUCqCDF/7+MmPwCXToZ2f3FAHLcj652gNz+a6y+NNYNxQEYkznFt9Ug/
NEARlPSGcUCRditDQM5aP86U8pqzinFAipZaaDQgbT9o6dOhco5xQBD7/E67
5n8/Az61qDGScUBto2Bnc5CRP56Slq/wlXFAQK1IgQJooz8453e2r5lxQBDI
ie/herU/0jtZvW6dcUDHSOQE8cfHP2yQOsQtoXFAlcQQX+lG2j8G5RvL7KRx
QKr7HIj62uw/oDn90auocUB6uP1SWDT/PzqO3thqrHFAoEPq3JZPEEDV4r/f
KbBxQOr9xuXB7h9AcDeh5uizcUA5vRQCIQQsQAqMgu2nt3FAwvMViBQtNUCk
4GP0ZrtxQM58MHnYRDtAAWM4zvC+cUAAAAAAAAA+QFRxEzg=
        "]], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAAewVQptYjeUAAAAAAAAA+QNI/pJRF
J3lAkwcBISd9O0CIHkCZ8Cp5QMAj9Wu0qzFAPf3bnZsueUA0CgitGeIZQPLb
d6JGMnlA2GTOPwEg5D+ouhOn8TV5QJIxypR1+os/Xpmvq5w5eUCEOYEegFVL
PxR4S7BHPXlA4HnRyVeuHz/KVue08kB5QMGewzA4zwA/gDWDuZ1EeUBikoVZ
a47sPjYUH75ISHlAWROEzGOX4T7s8rrC80t5QCNUYeSqEt0+otFWx55PeUDs
iKxtlUPePliw8stJU3lAy4NLJMfe4j4Oj47Q9FZ5QEXYYgbIEus+w20q1Z9a
eUBP/XoYraP1PnhMxtlKXnlA+7iZ1szJAj8uK2Le9WF5QIn0unvJXhE/5An+
4qBleUCg85nVq9UgP5romedLaXlAjYukxKvlMD9QxzXs9mx5QNXYQEiFZ0E/
BqbR8KFweUBJniproUNSP7yEbfVMdHlAoybwoXBsYz9yYwn693d5QEXBS2Kt
2XQ/KEKl/qJ7eUCabwACloaGP94gQQNOf3lAqzwbvlNwmD+U/9wH+YJ5QF0r
yoodlao/St54DKSGeUBWZH97kPK8PwC9FBFPinlAqO9L0V6Czz+2m7AV+o15
QI1R1P8KGeE/bHpMGqWReUDP+SJitmfyPyFZ6B5QlXlAcn1jK15wA0DWN4Qj
+5h5QCcKEN5GuhNAjBYgKKaceUCb4BsutJkiQEL1uyxRoHlAokXlghA9L0D4
01cx/KN5QI0SOPj1nDZArrLzNaeneUByXi5stRw8QO5bUrP+qnlAAAAAAAAA
PkAEfhqD
        "]], 
       LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAA5R59k0THe0AAAAAAAAA+QIdIeheK
yntAYeE9G4NlPEAyXM65AM57QDNj0K9+ODRA3m8iXHfRe0BYVGmncEYiQIqD
dv7t1HtAWGDqpVyx+z81l8qgZNh7QHzyNj8ahqw/4KoeQ9vbe0CV240MWFZk
P4y+cuVR33tAhBtr2FvXMj840saHyOJ7QIRV2M6mTxA/4+UaKj/me0DNZuZG
wMv2Po75bsy16XtAliMFuZBW5z46DcNuLO17QK84ULtKOeA+5iAXEaPwe0DF
V4Qbys7cPpE0a7MZ9HtAQgu7yYgS3z48SL9VkPd7QOj0XyTPjOM+6FsT+Ab7
e0AT7/sY3MXrPpRvZ5p9/ntAQxGVd5Gw9T4/g7s89AF8QLqqss3TOwI/6pYP
32oFfEAuL1yeKjkQP5aqY4HhCHxAD9915SwmHj9CvrcjWAx8QHJBdSCM8iw/
7dELxs4PfEAOHKyWwXw8P5jlX2hFE3xAQmA0Ny+MTD9E+bMKvBZ8QG7w1dKU
/Vw/7wwIrTIafECGbq0AErptP5ogXE+pHXxAIM7zCLqvfj9GNLDxHyF8QAfC
2+co048/8UcElJYkfED605UFrY2gP5xbWDYNKHxAAZtgfENAsT9Ib6zYgyt8
QMQpmLMd/cE/84IAe/oufED7AAa00L3SP56WVB1xMnxAI9GdBax14z9Kqqi/
5zV8QKA//YlnCfQ/9b38YV45fEDgOjky+0AEQKDRUATVPHxAtOcZWI27E0BM
5aSmS0B8QC8kVThjASJA+Pj4SMJDfEAlaIDft7EtQKMMTes4R3xAIs9e4YB9
NUBOIKGNr0p8QA/xpo3AHjtAh/lbdxJOfEAAAAAAAAA+QLjuI48=
        "]], 
       LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAARSZxJNRggkAAAAAAAAA+QE7cOnyM
YoJA078YFwJWO0BughHIYmSCQAtuaSjdXDFAjijoEzlmgkDx80xuZ+YYQK/O
vl8PaIJAGDbkiPgq4j/QdJWr5WmCQCRlS2V3Pok/8Bps97trgkBVRlqM5WZJ
PxDBQkOSbYJA2us0/yAGHj8wZxmPaG+CQF1g/tUCMAA/UA3w2j5xgkAMVvb1
heDrPnCzxiYVc4JAkbMWdrJf4T6QWZ1y63SCQFdmyL4+AN0+sP9zvsF2gkA8
CxsiP3LePtClSgqYeIJAnYHZFKUe4z7wSyFWbnqCQIEH6rYnmes+EPL3oUR8
gkDj2UBLJyz2PjCYzu0afoJAun3DsdxVAz9QPqU58X+CQH0SRmtA8RE/cOR7
hceBgkC1TGjDzHEhP5CKUtGdg4JAs+bG8ACPMT+wMCkddIWCQHv4HgSaIEI/
0Nb/aEqHgkBowZJmDxBTP/B81rQgiYJABfcBMhRQZD8QI60A94qCQIpAzZq8
13U/MMmDTM2MgkApqyhkwaKHP1BvWpijjoJAYDlZcYiumT9wFTHkeZCCQGxx
pStl+as/kLsHMFCSgkD4Iaqw8IC+P7Fh3nsmlIJAHCiB5hyf0D/SB7XH/JWC
QKDHMWI7DuI/8q2LE9OXgkD/hfkyhXHzPxJUYl+pmYJA82DUvtGEBEAy+jir
f5uCQLl9dz/XwhRAUqAP91WdgkApcK/ptHMjQHJG5kIsn4JAmf9GBXssMECS
7LyOAqGCQOFB3OsLJDdAspKT2tiigkAJp6DA8m88QJdPWYSJpIJAAAAAAAAA
PkBIZxRc
        "]], 
       LineBox[CompressedData["
1:eJwBkQJu/SFib1JlAgAAACgAAAACAAAAVdZov9ayg0AAAAAAAAA+QORooCp0
tINAdPJEhwpoO0B+KVNFMLaDQDYDdItQKzJAGeoFYOy3g0Cne/hLrHkdQLSq
uHqouYNArrxvzriT8D9Pa2uVZLuDQKRa58DT2Zw/6isesCC9g0BvgnMNNG1Z
P4Xs0MrcvoNAx9g5N67lKj8grYPlmMCDQB/RwxmftQk/u202AFXCg0BRZE9F
znPzPlYu6RoRxINAckn1Q5M+5T7x7ps1zcWDQJOtxi7HIN8+jK9OUInHg0CZ
H1DpMtbcPidwAWtFyYNAlIi0mFwY4D7CMLSFAcuDQOfduysR0uQ+XfFmoL3M
g0BE4beLWT3uPvixGbt5zoNAZupetKUJ+D6TcszVNdCDQEsiwYF4fgQ/LjN/
8PHRg0AgLA/eo3ASP8nzMQuu04NAuxMtnYJJIT9ktOQlatWDQFyFua10tzA/
/3SXQCbXg0Db5bBQ5opAP5o1Slvi2INAblL8e/WmUD809vx1ntqDQNK9Mcd3
+WA/z7avkFrcg0AyqIcM2XRxP2p3YqsW3oNAu9CYY6AQgj8EOBXG0t+DQCzA
qLNYxpI/n/jH4I7hg0CPvK2NAZGjPzq5evtK44NAx+R8bDBstD/VeS0WB+WD
QMWWg/mVUsU/cDrgMMPmg0DiAdcqjDvWPwv7kkt/6INAh+0bvCsV5z+mu0Vm
O+qDQNXp3qbLuPc/QXz4gPfrg0BXGaomCdkHQNw8q5uz7YNAO5SG0bL3FkB3
/V22b++DQH2A5gR9iiRAEr4Q0Svxg0A1+wYsyHQwQK1+w+vn8oNAImosZOAJ
N0BIP3YGpPSDQEPnkLv5JzxA4UpW+jX2g0AAAAAAAAA+QC2hOp0=
        "]], 
       LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAANUIaQ3uLhUAAAAAAAAA+QE5LCZla
jYVAfuSDMIgLPEAsyjWhRo+FQH5oN+XhNjJACkliqTKRhUDuEVi5IMYZQOjH
jrEek4VAUzFH4nLD4D/GRru5CpWFQBX+YBtoHoQ/pMXnwfaWhUAG4xWjC6xD
P4JEFMrimIVAQwuGIdRxFz9gw0DSzpqFQHcjGGx8Qvo+PkJt2rqchUB7NOrK
0/XnPhzBmeKmnoVAqwp1Zu0C4D76P8bqkqCFQLfh+kQd0dw+2L7y8n6ihUA5
we6i/lTgPrY9H/tqpIVAZKIwz5Ie5j6UvEsDV6aFQBBuWdYpKfE+cjt4C0Oo
hUAphXIAwIX9PlC6pBMvqoVAf3eDUX5xCz8uOdEbG6yFQNYTQRT5Bhs/DLj9
IweuhUDsaMaaKcYrP+o2Kizzr4VAZgJ5NPJuPT/ItVY037GFQJocBS8a5E8/
pjSDPMuzhUAOobdM/oxhP4Szr0S3tYVAV0Ho7HeGcz9iMtxMo7eFQOeXMuB6
4YU/QLEIVY+5hUB0i8iP76KYPx4wNV17u4VAy/OXQjHRqz/8rmFlZ72FQChC
I2cDcr8/2i2ObVO/hUDHTjdHv8LRP7isunU/wYVA7H8HLwH84z+WK+d9K8OF
QA9O20HqPvY/dKoThhfFhUAS2Bk4jiMIQFIpQI4Dx4VABilNAzLUGEAwqGyW
78iFQJYG571YMCdADieZntvKhUBhNNXfycAyQOylxabHzIVAHA1HkpKfOUDK
JPKus86FQJLnV5SUxj1AqKMet5/QhUBrdVpfcOQ8QIYiS7+L0oVAVu1Osig/
NEBkoXfHd9SFQNEO8IRLLyBAQiCkz2PWhUCAriaNCULuPyCf0NdP2IVA9c3l
9zX+kT/+Hf3fO9qFQFP4dlDZ8Uw/3Jwp6CfchUDkYD1dFIgeP7obVvAT3oVA
nSZhvlov/z6YmoL4/9+FQIJSNxqfeuo+kqZR6g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
N4yQ83fS5LuCxiCx8ui02e9R0j/D3FmnEnsIy9EWq7Zx0p99rmuKZPYQcbff
2OVOMrBUMW7VTYMBYmxb9LkH0wz0Tz8R9ItvnNhbQb3kPUv6E+xvNdWYIwLO
nrliMU++T3ar3dNYWALNXPrX1X4z8BNvtrShuQBIx8gzRP6S/rRN4HtatTi4
6fAFTC4wsCyjnHjPloO81uHghn/kvOvWWOm1bDcs9667n7aEiV8GErPWLtsP
x0TSo/9bykR+qXDNpekmEJt296nbMiZaVTiuPVhlAz+PeL88wsvEwajB9jLl
C6A5fCJdiY+J4mLslmPl3sAJ0Mnl52fioZ28nCR3NjTKSRYOrWJirO7rPlgV
BpKlXBVVgkyUbAg8VVwXAy723bXPhcj4+JO878nPIWehvMlfmIlFka/9DfrT
gSfqebuTKBN7kmaepmzMATPN2z8MxJhIabxvHPUvD6I/uQ7IipPnfwqtMmHk
w6Cn2dhSCSZK+YxfFCIKYY/Q7tmuDUxcmNqwyaysCJjJaxeKNzGRfuYIy6qq
FOoM55c+kWLidWx40n/4A2wYaF9Jl2bilvCa5jrJb+DMyV9zegsT93XJaX4Q
GoRMmVhxQo6J8ysDjhF3aoCriCm1aSsTQWf7+Sn/ADhy6pz8321M/Gy21Pdy
uxlE/j6444sCE7MezV6MF5aHvgcKanlKZHy6Q7yzeQWoqgvoPFRmYuqz99wa
nBmC1ji2/5oKE4f+qCc/3jtE1F5uPGSlSt4vvKMro6+HEBfIMt2jxkSZZkF7
BVYP4fjygeXaPWT+0ztf+D/rJ9IPXj81rcHEtTTJAcXvo8Rij61jkxYTN8v+
eNwgPUsYMuFihg4T/a/Rq3bzLoFwKRnP0H1MrE7JjnCM5ofudzy+7sBEBudI
zPz+daBi3U8z3c9E3tcrLxvKyILfXNVNZT0S/5trVnwt3QWV95LuCBgwMdvA
ZUGkGGCt6n/3fh5g4rv3pQ4m0cbg8NEjquYQE20iSwt/9JyElEvH414aMjEs
pyhu1uc81AkrjtKNmWj/r+zqH66rMJq7RNvKhIkOnrXHbqYwQfB0K4d8WuCa
4kR9wiEElJelNiw1ZyJHTjTRZSgKTF5xNrUfY6JAmb1dJysR3I7aXkizYOLk
BcGSZ4/SIHhONeumFcmn79A989EsSHnEt+TUSSaGMwoWJjflQZ1ep/FuGya6
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
QDG+flwnpxQ/mJqC+P/fhUDJ7XBo2Db9Pk0dDZQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+1uuZHhwi3PDnOMslpxiv4KXskGTn1JaROYs0pnPjtK6lMPB1rWrO3pnMevz
4ztPeb9By42x3FbPs2hj+udzTPwERPJ0zCSEncUTg732HrlEeKGp8vjVlLNo
azVt8deTDRl8chxVqs/ideo9ne4Kfuw8EveW6edZdPjZzqDGL4DPvoQOjW2c
RWHB3zK37nCjidd1rmLmc8girSBZ6HMID3E5mD0QO4fCPMtbnMws2F+vF2Oq
cw79qr+oGgYxYPzlM50nXM4hraiMG58gNdocEqXfCj6HtyzfHY00IEeeWg7d
5oT9eK8+OmNLEhz1oAiPrziHf2fnr66J70EK69rnSz3n8PrO/Pho1yY4V42S
wPI5DIgkq650X4UTbu3AQKeG/Nkl65JNSzDDVOn/S0gNq3TKkuRez0LOx+zy
QjU1zKWLPW1ePAkZKz/UNu3UcM6tkbBWOQrJwpSdyv5q+E3IQIl/ZQgS7GVt
7r1Qw/QZu58xET8g7qXjTGOhGrL0NK+qsX+H523RN+i+qSHvRfWaI24dEE1e
Q2I0rYY6Kv6W1ZUt8Eh58VEsmToqMbxoa674AuE+R7iGj6qjjKf+18Mv6uB+
tk66gKI6nptRmW4TrYa7o7ek3E32D+Ars1qisgrw58ioyvdSRxDqaLnOWgK+
ej06axHqeG2L3SlYsxB8Qsn6FDLUcdP082oxIQ+uVEo63q1TR3d3Ikdfn0xw
X7Nb+jykjuQ6h4oF3qeCs2iUP/WWOsYXpmhZiCUDweETpT6rBr7Sr63skEsC
67jZZ8/FNbDuMt+AZGoymHVw8P7U0cCZ+kJO9dRMMKLUzOV10cCFi4dvXlQv
Bj24Ie8SrLHfDz8HHk9rAN0bKZ9zXmvgTgulUV7LIGjmduovl2lg81hY92PB
dTg7TjR0ulsDT7zrNOqNpcczXGLudxY1UMgyknezkAcVDKzXaw9qog5BMfu4
tCDKhv8XTHlME/lu3NOuMOZFyepyugsqmhiSK8kjMM+JpzZ+xz210kSBF3kW
ZmxsKHSK7fiPm5pYQK6YJCLPhAJO595zP9XEedW7xjmsdMgT7w2OeZpIbPb0
eP53Sjzcldic+VUTM7gPquncJUP2g22mi+OauF3H1Hh3jgiZVHbHpIm0MPGx
yj+KP9tA5yty1Y9LCwnPayZHGTbgYL75TpWsFmbqXwgPO7gC5JOhYQcMtPAd
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
bJ0bWu7hDsnQioNJ8xPt9Rs468lG6aCP0fA4cWeP70Y3lMtP5693j4ZNi2KD
Jlvd0OYN4Y5/RxyUmk38Et7hhtVt+7RFP2WATXzTTM1uNxwZWDNOZZXB9Fz2
wsM9bmge9vxK7MQXeHLyKY/hPjdccti3e+XDKdgWSxUS0OHgo3973LxRDCtm
rSSqwQ358YHk00sb8OKJ/XLeR91wheSfe5YDqjj7Un79MX03vDA6obajdT0G
/pnfuNLYDR9/e7nzaYscbjf+tv2dqRs+GF4KuS8ujVWRJZpep91wVKZ4bT6I
46XpyAOHLd1QWGrFO/ZpIZwzuH14hY0bRqgxBdee5sXgCHuDtxfc0OHMgSKB
Y1y4c/LoSXc7NxRcn28uODcPH45vtDx02Q2PeFg92Zf0Bxyf811YuOaGag0i
7L82k7D0+6dDoRNnn7c32rBoDJ7pfbjBJLihunaX2MjqQdAITXbbT3bDeM9O
o/NeP6Bu7BF9luaGkd4BAXVh3+HKEWePfJYbBozXSLBCv8KK/0y9qR5ueOjL
8frDRS0QNrLLV+uOG4qImftG1zbAHpQInvZ2w5NcHdy2WrVQHzwZlu3jhpU3
d8ivFqqCa0PNL4l+bhhn8do9rL0MeHRzE9UD3bAmHlKEfxfBi8CQ9PGnbvh2
cEtXDiUf9v2k5aWHuuHv9mOtOqLZ0HTwbLFLhBuu3Ln/8l7xdHDyP1Cx46Ub
9grQ/z33SwK+/rW1o7FumH/FJSiXGQdR+xcbUxLd8O63LulPv6LhgF9X241U
N+w6IMswvhENrb1vv2/NcMOYx3usjS7GAWHvy4HBbDd0umch8kE4A4Qee40l
5LvhfSFPPG3AmS+6HaavFLohST1qerqzFXS1js1vfOuGRs9otR7pE9D2cBN3
f7kb+qa1PQ95IoLELn7B2Co3bDkcUVTyUglFNIfEHGrccJbfaipBfCPG36+R
Ua53w+EV3rrC5kqInSmKPY1ueNDkrouD/hps3+2rGtXqhtlqx26suSGN5Hsu
arZf3TCk9bX36gfiKNZ+UmPdNzesCou9mlEthKdwzbvabk79Hbc6YlfFi4Hx
veaMPjeUqNhiGJjDhc0iqX2bBt2wwLPuyVTNAkiTKJSWETccqr90w/H6X7D8
qsvn9ZvjFy4VI0PBKfgPBP7bNeWG/pHPzQVmfkFbXOPmb3/c0LDtev+w2hDI
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
OermuBQVZS6ZU7b3rcKGVCFVa1kqflUTXLx7WxDTzpI738pT0XNcqdZIjBcf
83UFb15Hxc7m/CYPBy68ma1/4skGKqqbHpSXyF8Ao0uZvH9VqZj9N2UiKfcv
bBFdW3JxCxVttH/teBk0BXxv7lKr1KioIPW3mm/bOPRd+bVz5y4qDgiWhV7L
HIZyKeufTzWouM4v4pKO0ABElZZFLmpRUXhSZDpLoxfcndWsL++nIo/rsJWW
aBdckH8q/lGHimZqGqDc0AY61Uvv9yAVM+h13M3sFpAnX7sdfpSKpauPCzwa
boBZpab9K/U5/D25fsTsdy18/nhw8qYRFQfFbd5+Ea+GHVv1ohVNqThb/4Dn
fHE53L1rcvqTGRVJ/9T/pZBLoPO7BfftM1Q8bvE3M7f8NWgevJClcZaK2rX+
nZmbc8An5LJ933kq7jhJeWpHzoDeCWfJkEtUrI6YiFy5KgX2n6CW6ztS8UBT
rL5FWDz4J7oT/12lomWsT7RqcAwM8txXTrlJxaa2Zn0+znwJtk+azrtSMSDD
XuVvaQyEvPnPaxWJinePM+p6M5Ph1+oojVIqFclnnj9InMmHY26JvW5MKs5b
3PZcyKiD8LqMQBV3KibGvVql9bgfpjcXHGm9TcUk23AnyVQuNL5TNul9j4pz
HQM7t7DlMLrrQ/S+h1Rc6T5vtOyhinP7m04PP+bwJfNor8CEMpo9becO96fi
h5T2jjEdBUwc7806EUzF6D8xkyYpMrjCZMR++T8qXq+KeVJzRRKtEqYkM59T
seL7Md8t/aKYxr1Qbh9JxcejQqaKhgLId3ElSTqGiozWoUfP3vDghQIRlap4
Ko5l/Vb8y7cCc6RXN9OSqfj5fX6kvtAciBAU72xNoyJVy73Qa/MMONRu1OzI
pOIPnUzhm7sm4M2mnT8e51KxaEa3aXxkBCS9tIN0C6g4eS9rvCZtAK5/0z06
XkTFaz/2hB137oXSffpTL0upaNh9TNxm/BvIBp+MMa/g4F36dMXgdBu4/LYy
531PxSMeT37xlzdDldElnvxajn+9t7+dF2kAxfhr2dc+UfHFUKSjtHQNkLnc
HOSbqZg1cWn01a5KqDvPkKr7TMXIdcvpGdploPL69rtb7VQ04Puk1DxXCEwp
H9KuLioG8dgtBpTlQaNLoEpPD8evkvEHT/lkwZaasObAfiqu+Uz88dgyDTw3
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
4aNrsVv1Tooi2ZLORrFhodE15QeOw2uwqpFcsd2O4Pu+uQMz+/lQ5OiNoMnj
LHTYftdwIXE1Orb6H37lwELx6XvlWW2rMMHOT8zVkYVcHAaa2R7LMNnh0yHj
RPAndO6GucE8GDqej2w5xcKBzux1+2ZngNlz9nSwCwu/m5fl3rs4CfXOHhp7
T7PwfOjlwRCpUZDud/217MZCWeb6zjVHh2DO5d7siAeLeO8ry1UsfofPve+W
Wz1ZKHJwr7Di327IPPVjdZkXC12uWS+02bbB/R4xobRzLJS64MjHUdcMF07u
lnh2gYVxlldX7zCvB4vu8/I3fVgofHFrOsmjCjaceKbu68vCydT05i1J5cDT
Wanj5EfUo6H12Dz1PQwdn9lmfoWFJdRrOmO38uFDmwJsu8rC57E7Y8KfZ0OM
rcU+5esEngZ7foqkZQC19ephoQAWqmnuTmDXTwanY/F2CyQWLvn+1Qu8mwBG
LU2nhigsHBzPEu+/HAsy1v/ONNNYmNkoX6VyKAbmGzf4FDOIehJLDm3fGwdf
Dttdfc1iYZm96MDd3ymQXc+gPgpkEfPNZiBhbyGEHcq4Rb/NwoV7P7UuZTaD
T233/Qt3WHhu9qNh+OtxsDzI+9ThLpG/eVGxXRcvatdsfWl2j9DXIbaXfuyK
yHfA9ZV+KPH/oa7VgvJq+ONjyBv5Byw00X5U5+KmiJVm7/L5HrJwTVGZzr8t
0hhXMVw694jQg0JiihKIId1UrKbvCQt7Y7p321oKo3M5Ntc/Y+Fwi/Vf4b18
aLznfGdBBOGXoyF37TVXo1zp076ESBYafLv9bZp/FS5A5c+waCKfz9x8lVcW
ob14epocw8L0XUrliQpzkLtLYdErjoVX6uO7nJqnILzwIIddAgvnzmfK+OWO
ge/Oq/wmSSw8mG+1QUtpGKwK4kR1XxN+le/EXveyD3QMmmRlU1jYZCLuGcnZ
AwJ5yyrcaSxcb7gp5KhOO/zctkF7Jp3wz4ZdFo+vt0BVju2Wb29YuP1F4bqv
Lg2QsIVh9CmLhZpTqTcL91UDMyvd9G0OC33T8+89PvkBXPW7LWLfEvmHOVyO
9iwBfMNjcy+fhacOjO+6e6kA5PW2nrzxjoV2LQXLvnY5sJTm4n6miIXGJxRF
1U3eQOfGkPNH37NQfz74kLF0CuSlFFyGUmIeLO81EN6WCI+0hkla5Sw865LA
P9QRC36vRW9KVrDwJ+sJSB6NAWtNDOH4SODhayLoHBMLeknnHk1UsZD0mup9
ofQ1CK1/GtlVw8KRq0sREtXEezW+IuFjLQstTApMZa0aoEZ1Oi2rnoUv+gTG
e7hHIClW/m1UIwvdpXd7cHquxpvKB9/faWZhwPsLTsHJcuj20v+j/2cC35OR
plJKav8LYQCe/0BCIKTPY9aFQBxfOzobTiFAIJ/Q10/YhUBQJESdWioaQP4d
/d872oVA3qX4r6j6FEDcnCnoJ9yFQOCw7vzs5BBAuhtW8BPehUB5qvgYmTcL
QJiagvj/34VAffjUobXsBUCgOfmZ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
KYZ9JTZMP+0BgeSY+g==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Kl+96CLbAoPjL2yTJZnoRZY2jnBrgIt5p0qvSBP9ryh+5PpaA5/pE1tFZJi4
I/h4iUhlOajoRjFLZZlIOz/a9fT5Z4hbd6TfezNRf/B30697i0DgZ7+WghwT
Mzgkrna//gCkpKCXP7cyUUjYYz6xJxv+uKlwhMszUdhwx5eo5gww1Wi31tnB
xHyqgr7/yxSo4KSWLOxkYvBAZLWaUSIcqJPf8nY3Ey8mGj86Qo2DxKhamqUi
E4vaHRP3HY0EMSuPHtE9TDz+X4SB0+tAoO+SOlq+l4lLTkEPD4iTYHK6OM5H
hYmnroVRbX1dwDLfnk1pHxPt7q3h9M23hjo/Qcue/UyUnwueC3AwA03994UR
B5jIbDgaMnH4MiRLmMueVGfipdVpaES7BpJ9HJS/h4j992sfkLOkQkDKm65U
TSYmOW8xG559DrO3DI5YHyHqT+Ms7V9bDbYw/3QdMlFVu+fP7JUZaF7zbLni
KBM9uGWa+SqE8FjjcXNfLSZ6ftueuu6mGKY/+fNpz3EmTj9fZdXEL4KytuHS
fTpMlNtW02ksL4AhSod8I08yMfDkic4/k2twaa6789Rpgp+Pzo8jnnCiQ7G/
xvIZYv+T7PF7V6/C9kClJ+lnmajz2OY658YlOHmxZfHqOSaalJ6rqTkwB+83
+pqKGzBxc7RLTpXCNGwd2vKh6jzBl6vhGs6UcQhPr5QgXyT00lq3Xm7Hb2D3
cb2tbMjE6pE3/tKPB8BVS7y934jQo/yg4KZvPdDFV3Aw2oRYX/tP/6XXDzjb
ahN9xoyJTTkxNnOX2uDTM975lcsEnhLJyQsbmmHX9UyjzCtM9BbmEy6Prodo
FZMcW0smpg/tdvpsXw3cS//WS1gTfnhKyR2IKwPP0kTPmqtMLMwq7vVNKYH+
kLOtFFsmnhMw7vlZVQDnjWf2q15jov+DNGqeYR4Ub37ycNCeiT057BJcX7Jg
78jR/x45MLH0oJMN/Wc6xGb9unj2BhPtDTLVuibfAB/5fhabMxPDWNPf2ivi
4c4JNbEsFyZWerkKNG+Ihd9CP25ec2PiS935w11Z4WDcwWiSvEn0c41NTGnE
D8pe7lKt82DiVOZsR/t7b9jv1BBG82Qiu+BBbottjhCv5j21z/v//sp88aLD
EkTYZM//us1EswuyFWmhpkCtLM14coeJ6jsrgmPfXIHxsBvC50hMVGm+kKCA
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 700}, {0, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.829289921132641*^9, {3.8292903411842422`*^9, 3.829290360290547*^9}, 
   3.829290429455887*^9, 3.829290930480978*^9, 3.8292909955963163`*^9, {
   3.829292515444108*^9, 3.829292590968732*^9}, 3.8292927569952106`*^9, 
   3.8292967329951143`*^9, {3.829296859229541*^9, 3.829296912873063*^9}, {
   3.829296943507155*^9, 3.829296984449172*^9}, {3.8292970804977818`*^9, 
   3.829297124721987*^9}, 3.8292972142875834`*^9, 3.829300599549494*^9, 
   3.829301322656502*^9, {3.8293050231135607`*^9, 3.8293051094144983`*^9}, 
   3.8293051728352833`*^9, 
   3.835975831506082*^9},ExpressionUUID->"b52c6002-447e-4a5a-8d11-\
f380ba8d8424"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mutant dynamics", "Chapter",
 CellChangeTimes->{{3.825769412647562*^9, 
  3.825769415790656*^9}},ExpressionUUID->"ead7366e-8288-4106-8d8b-\
fd2d25b516f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dImudt", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Gamma]m", " ", "M", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Imu"}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], "Imu"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Imu", " ", "\[Beta]m", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], "Dm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fm", " ", "Dm"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "M"}], " ", "-", " ", 
    RowBox[{"\[Gamma]m", " ", "Is", " ", "M"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825769422230962*^9, 3.825769513129081*^9}, {
  3.8259967023096123`*^9, 3.825996725661252*^9}, {3.8280750461966667`*^9, 
  3.828075318382303*^9}, {3.828075366538121*^9, 3.828075370894615*^9}, {
  3.828077455144182*^9, 3.828077549802657*^9}, {3.828077642956213*^9, 
  3.828077656785994*^9}, {3.82807883696902*^9, 3.828078847089674*^9}, {
  3.829300664192379*^9, 
  3.829300667314118*^9}},ExpressionUUID->"6eb89505-af62-4961-937c-\
4349fe0b0afe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dMdt", " ", ">", " ", "0"}]], "Input",
 CellChangeTimes->{{3.829382729934622*^9, 
  3.829382731811203*^9}},ExpressionUUID->"b0ca857d-2406-43cc-8c79-\
9696520b430c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dm", " ", "fm"}], "-", 
   RowBox[{"Is", " ", "M", " ", "\[Gamma]m"}], "-", 
   RowBox[{"M", " ", "\[Delta]"}]}], ">", "0"}]], "Output",
 CellChangeTimes->{
  3.8359758316469584`*^9},ExpressionUUID->"5c70afdb-32a4-49a9-ba63-\
434b098d48ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Am", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], "-", "\[Alpha]", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{"\[Gamma]m", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Mu]"}], " ", "-", "\[Sigma]"}], ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", " ", 
        RowBox[{"\[Gamma]m", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Am", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8257435795568037`*^9, 3.8257436761951513`*^9}, {
   3.825744610613678*^9, 3.825744828142145*^9}, {3.8257448965209913`*^9, 
   3.825744964502389*^9}, 3.825745458268424*^9, {3.825760704533595*^9, 
   3.825760713722117*^9}, {3.825760799326695*^9, 3.825760852375071*^9}, {
   3.8257609318701067`*^9, 3.825760938385151*^9}, {3.8257617813820257`*^9, 
   3.8257618216608*^9}, {3.82576216653201*^9, 3.825762169581469*^9}, {
   3.8257622093116913`*^9, 3.825762212307238*^9}, {3.825762256134933*^9, 
   3.825762257461063*^9}, {3.825762311866053*^9, 3.825762366665176*^9}, {
   3.825762434544545*^9, 3.825762434692444*^9}, {3.825762474404647*^9, 
   3.8257624764593573`*^9}, {3.825762511865068*^9, 3.825762512862294*^9}, 
   3.825762602499343*^9, {3.825762666210616*^9, 3.825762667526772*^9}, {
   3.825762784268333*^9, 3.8257627876555853`*^9}, {3.825766791382381*^9, 
   3.825766798048353*^9}, {3.825766874527048*^9, 3.825766943144342*^9}, {
   3.825769542966591*^9, 3.8257696576848173`*^9}, {3.825996732450741*^9, 
   3.8259967406355743`*^9}, {3.828077614245688*^9, 3.828077729570053*^9}, {
   3.828078863692099*^9, 3.82807886824053*^9}, {3.829300674601161*^9, 
   3.8293006780443077`*^9}},ExpressionUUID->"f4cebc04-e340-4298-96e8-\
c328fb91eaee"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8257625244133263`*^9, 3.8257626031628027`*^9, {3.825762663236967*^9, 
   3.8257626678481894`*^9}, 3.82576278821276*^9, {3.825766920117701*^9, 
   3.8257669437672586`*^9}, {3.825769650199383*^9, 3.825769658247525*^9}, 
   3.825996746123179*^9, 3.826257447260975*^9, 3.8262720330749283`*^9, 
   3.828078537142867*^9, 3.828078870108499*^9, 3.8280862481620293`*^9, 
   3.829287666181946*^9, {3.829300657078759*^9, 3.8293006789810953`*^9}, 
   3.8359758316698112`*^9},ExpressionUUID->"6cbae5f3-dcef-447e-96c9-\
a1370b92d9a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Am", ".", 
    RowBox[{"{", 
     RowBox[{"Imu", ",", " ", "Dm", ",", " ", "M"}], "}"}]}], " ", "\[Equal]",
    " ", 
   RowBox[{"{", 
    RowBox[{"dImudt", ",", " ", "dDmdt", ",", " ", "dMdt"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.828078539110243*^9, 
  3.828078556158781*^9}},ExpressionUUID->"5c27a301-7908-4963-8f7e-\
c73d2fc6019f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.828078556573688*^9, 3.828078872948539*^9, 3.828086250032992*^9, 
   3.8292876692328997`*^9, {3.8293006703928328`*^9, 3.829300679956664*^9}, 
   3.835975831706794*^9},ExpressionUUID->"1dae35c4-2f48-4b13-af6a-\
4f829852e2a8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FMat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825744967827158*^9, 3.825745034216174*^9}, {
   3.825745077306136*^9, 3.825745105387485*^9}, {3.825745311533243*^9, 
   3.825745313136395*^9}, {3.825745491797593*^9, 3.825745495316793*^9}, 
   3.825762315649857*^9, {3.825768772228602*^9, 3.825768772621294*^9}, {
   3.825768859187916*^9, 3.825768868594355*^9}, {3.825769669045599*^9, 
   3.825769695878559*^9}, {3.82807856836335*^9, 3.828078595692235*^9}, {
   3.82807887689528*^9, 
   3.828078879595543*^9}},ExpressionUUID->"e835df04-3c93-4bd7-a1fd-\
7abd64356d4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMat", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"-", " ", "Is"}], " ", "\[Gamma]m"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ds"}], " ", "\[Beta]m"}], ",", " ", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ",", " ", "0"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"Is", " ", "\[Gamma]m"}], " ", "+", " ", "\[Delta]"}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8257450396770067`*^9, 3.825745047939592*^9}, {
   3.825745192814064*^9, 3.825745268738194*^9}, {3.8257453016076803`*^9, 
   3.8257453341689463`*^9}, {3.825745399738305*^9, 3.8257455244249477`*^9}, {
   3.8257606895557623`*^9, 3.825760698517312*^9}, {3.825760957784419*^9, 
   3.8257609605297213`*^9}, {3.825761783062153*^9, 3.8257618011230907`*^9}, {
   3.825761831680503*^9, 3.825761834014905*^9}, {3.825762172493878*^9, 
   3.8257622005331697`*^9}, 3.825762259568303*^9, {3.8257623163642387`*^9, 
   3.825762317714275*^9}, {3.825762514366149*^9, 3.825762515153265*^9}, {
   3.825762828234889*^9, 3.8257628382899017`*^9}, {3.825766807917742*^9, 
   3.8257668109003277`*^9}, {3.825766880574019*^9, 3.825766909146077*^9}, {
   3.825766949336821*^9, 3.82576695489468*^9}, {3.825768766180334*^9, 
   3.825768767468474*^9}, {3.825768873108182*^9, 3.8257688760621853`*^9}, {
   3.825769703295082*^9, 3.825769748060072*^9}, {3.825996753654696*^9, 
   3.8259967613251343`*^9}, {3.828078893379274*^9, 3.828078936583844*^9}, {
   3.82930068396945*^9, 
   3.829300687252771*^9}},ExpressionUUID->"b472f2a9-38fc-4d0b-9694-\
fb108fa525d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FMat", " ", "-", " ", "VMat"}], " ", "\[Equal]", " ", "Am"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FMat", "-", "VMat"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.825745535204224*^9, 3.825745546960334*^9}, {
   3.825762797727285*^9, 3.825762802679283*^9}, 
   3.828078970880686*^9},ExpressionUUID->"795b1e23-f110-433f-9cf9-\
8d9c6fba297d"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9, 
  3.835975831814047*^9},ExpressionUUID->"863b26b8-4d6f-49a2-abfa-\
164a6cf109f7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9, 
  3.8359758318252*^9},ExpressionUUID->"758c1c18-99d7-478e-b93b-8deb6decc6b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"FMat", ".", 
      RowBox[{"Inverse", "[", "VMat", "]"}]}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8257455598341827`*^9, 3.8257455911249437`*^9}, {
  3.8257461264116898`*^9, 3.8257461486249657`*^9}, {3.8257623186116734`*^9, 
  3.8257623378340073`*^9}, {3.82576697533962*^9, 3.825766979793467*^9}, {
  3.8259994422573833`*^9, 3.825999447886388*^9}, {3.828078981152101*^9, 
  3.828078988764003*^9}, {3.828079342319439*^9, 
  3.828079343394005*^9}},ExpressionUUID->"2f501709-b002-41bb-9989-\
8b1ba6a84626"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Ds", " ", "fm", " ", "Is", " ", "\[Beta]m", " ", "\[Gamma]m"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9, 
   3.8280862571632423`*^9, 3.8292876770018063`*^9, 3.82930069387365*^9, 
   3.83597583193721*^9},ExpressionUUID->"f9e97cd8-9a6a-4b77-afee-\
685594cb00e9"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"R0", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"fm", " "}], 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}]], 
   FractionBox[
    RowBox[{"Is", "  ", "\[Gamma]m"}], 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], " "}]}]], 
   FractionBox[
    RowBox[{"Ds", "  ", "\[Beta]m", " "}], 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}]]}]}]],
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 
   3.828079343884613*^9},ExpressionUUID->"41c2c713-f743-4caa-89c2-\
5340a003b69d"]], "Text",
 CellChangeTimes->{{3.828079371356689*^9, 3.828079398327075*^9}, {
  3.828081925654728*^9, 3.828081971958478*^9}, {3.828083563011613*^9, 
  3.82808357625698*^9}, {3.828086532935025*^9, 3.828086537733881*^9}, {
  3.829024901330192*^9, 3.829024903924568*^9}, {3.829300702528157*^9, 
  3.8293007106618147`*^9}},ExpressionUUID->"7bb01226-5372-4f4f-9a39-\
b27c75757ca2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Double infection", "Title",
 CellChangeTimes->{{3.82937964935014*^9, 
  3.8293796517908154`*^9}},ExpressionUUID->"b519b780-77d2-4c70-8c3d-\
811b91a8bcd9"],

Cell[CellGroupData[{

Cell["Resident and mutant dynamics", "Chapter",
 CellChangeTimes->{{3.829718117545349*^9, 3.82971812201271*^9}, {
  3.8324025000002613`*^9, 
  3.832402501708288*^9}},ExpressionUUID->"dd4b5a4b-eede-4a27-8273-\
45cb623f333e"],

Cell["\<\
Assumptions:
1. Fixed number of total intermediate hosts and definitive hosts
2. An infinite parasite pool such that reproduction of parasite does not \
affect the dynamics of the pool
3. We track the frequency dynamics of four compartments instead of density \
dynamics: Iw: intermediate host infected with a wild type, Iww: intermediate \
host infected with two wild types, Dw: definitive host infected with a wild \
type, Dww: definitive host infected with two wild type.
Is: frequency of susceptible intermediate host (1 - Iw - Iww)
Ds: frequency of susceptible definitive host (1 - Dw - Dww)
p: probability that two parasites make it into the intermediate host
q: probability that two parasites make it into the definitive host\
\>", "Text",
 CellChangeTimes->{{3.829641047411026*^9, 3.8296411399189243`*^9}, {
  3.829641170951269*^9, 3.829641194153261*^9}, {3.829641250799773*^9, 
  3.829641260684396*^9}, {3.829643725128002*^9, 3.8296437253295403`*^9}, {
  3.829645853609191*^9, 3.829646027793091*^9}, {3.829720274153536*^9, 
  3.829720298981111*^9}, {3.8297391038345222`*^9, 
  3.829739115221641*^9}},ExpressionUUID->"53d39168-2dfc-4d90-bfa8-\
ba3f534c761b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", "\[Eta]S", " ", "Is"}], " ", "-", 
     " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]w"}], ")"}], "Iw"}], " ", "-", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", "\[Beta]w", "]"}], " ", "Iw"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dIwwdt", " ", "=", "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "2"], " ", "\[Eta]C", " ", "Is"}], 
    "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]ww"}], ")"}], "Iww"}], " ", "-", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]ww", "]"}], " ", "Iww"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDwdt", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Ds"}], "-", 
    " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]w"}], ")"}], " ", "Dw"}], " ", 
    "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Lambda]S", " ", "+", " ", "\[Lambda]SM", " ", "+", " ", 
       "\[Lambda]mix"}], ")"}], "Dw"}]}]}], ";", 
  RowBox[{"dDwwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]C", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], " ", "Dw"}], 
    " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]ww"}], ")"}], "Dww"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.829641491952265*^9, 3.829641509213229*^9}, 
   3.829641554213709*^9, {3.82964158647001*^9, 3.829641605191667*^9}, {
   3.829642355338485*^9, 3.829642415871438*^9}, {3.829642450302302*^9, 
   3.829642493401485*^9}, {3.829643258902021*^9, 3.829643261991568*^9}, {
   3.829643559402507*^9, 3.829643563793765*^9}, {3.829643616676971*^9, 
   3.829643765211213*^9}, {3.8296438023552427`*^9, 3.829643878217937*^9}, {
   3.829643992030114*^9, 3.829644107115541*^9}, {3.829644140489849*^9, 
   3.829644141871138*^9}, 3.829644196667557*^9, {3.8296449315615797`*^9, 
   3.829645119436164*^9}, {3.8297182386833143`*^9, 3.829718252810196*^9}, {
   3.829718294255495*^9, 3.8297183114909697`*^9}, {3.832327703655903*^9, 
   3.832327835049532*^9}, 3.83232966660935*^9, {3.832330179509568*^9, 
   3.832330206040997*^9}, {3.8323302845736637`*^9, 3.832330296001422*^9}, {
   3.832330334676523*^9, 3.832330343084*^9}, {3.83233117760822*^9, 
   3.832331192067749*^9}, {3.832334218743729*^9, 3.832334226612721*^9}, {
   3.832336444885851*^9, 3.832336459337688*^9}, {3.832336576913377*^9, 
   3.83233661430239*^9}, {3.832401878840892*^9, 3.8324018879048862`*^9}, {
   3.832401945036797*^9, 3.8324019639282923`*^9}, {3.832402643978001*^9, 
   3.8324026457264147`*^9}, {3.835978265451477*^9, 3.835978275718116*^9}, {
   3.8360155968452253`*^9, 3.836015621664548*^9}, {3.836021478586493*^9, 
   3.836021482975801*^9}, {3.836021576246393*^9, 3.836021592756344*^9}, {
   3.836023372745654*^9, 3.836023374095212*^9}, 3.837151886318859*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"1f08c411-ab54-4265-81be-9d55fb614f48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dImdt", " ", "=", "  ", 
   RowBox[{
    RowBox[{"m", " ", "\[Eta]S", " ", "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]m"}], ")"}], "Imut"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]m", "]"}], "Imut"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImwdt", " ", "=", 
   RowBox[{
    RowBox[{"2", "  ", "m", 
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "\[Eta]C", " ", "Is"}], "   ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mw"}], ")"}], " ", "Imw"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]mw", "]"}], " ", "Imw"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["m", "2"], "\[Eta]C", " ", "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mm"}], ")"}], "Imm"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]mm", "]"}], "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Ds"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]m"}], ")"}], "Dm"}], "-", " ", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Lambda]SM", " ", "+", " ", "\[Lambda]S", " ", "+", " ", 
       "\[Lambda]mix"}], ")"}], "Dm"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]Cmix", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Dm"}], " ", 
    "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "\[Lambda]mix"}]}], ")"}], " ", "Dw"}], "-", 
    " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mw"}], ")"}], " ", "Dmw"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]CM", " ", "Ds"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "\[Lambda]mix"}]}], ")"}], " ", "Dm"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mm"}], ")"}], " ", "Dmm"}]}]}],
   ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.832327798889567*^9, 3.832327799876758*^9}, {
   3.8323278455180902`*^9, 3.8323279292160187`*^9}, {3.832328049077491*^9, 
   3.832328052551435*^9}, {3.832328246765815*^9, 3.832328255611532*^9}, 
   3.832328288510475*^9, {3.8323283572977343`*^9, 3.8323283899017763`*^9}, {
   3.832328461811987*^9, 3.8323285005038233`*^9}, {3.83232866076691*^9, 
   3.832328665160878*^9}, 3.8323287882895184`*^9, 3.8323294977108717`*^9, {
   3.832329566661824*^9, 3.832329574077695*^9}, {3.832336421167181*^9, 
   3.8323364264472857`*^9}, {3.8323364814136267`*^9, 
   3.8323365112100763`*^9}, {3.8323365495166187`*^9, 3.832336558955804*^9}, {
   3.832336633721697*^9, 3.8323366595415907`*^9}, {3.832336721994238*^9, 
   3.83233679049203*^9}, {3.8324020639753*^9, 3.8324021216434402`*^9}, {
   3.832402287965073*^9, 3.832402297116391*^9}, {3.83240264843528*^9, 
   3.832402655921612*^9}, {3.83597749015441*^9, 3.8359774925757313`*^9}, {
   3.835977538250963*^9, 3.835977540076664*^9}, 3.8359776883739777`*^9, 
   3.835977769806967*^9, {3.836018143694477*^9, 3.836018157552311*^9}, {
   3.836021541156321*^9, 3.836021541945766*^9}, {3.83602160312323*^9, 
   3.836021639808755*^9}, {3.837751018464518*^9, 3.837751019771912*^9}, {
   3.837762913144162*^9, 3.837762914180374*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"9ce41093-4225-461c-a9c9-73fb268ab8a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"b0", " ", "+", "x"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Eta]S", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "p"}], ")"}], "\[Gamma]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Eta]C", " ", "=", " ", 
  RowBox[{"p", " ", "\[Gamma]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]S", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]w", " ", "Iw"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]ww", " ", "Iww"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]C", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]ww", " ", "Iww"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]SM", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]m", " ", "Imut"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]mix", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "q"}], ")"}], " ", "\[Beta]mw", " ", "Imw"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]Cmix", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]mw", " ", "Imw"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]CM", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]mm", " ", "Imm"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8296460697045517`*^9, 3.829646095587291*^9}, {
   3.82964617685653*^9, 3.829646182989686*^9}, {3.832330227808227*^9, 
   3.832330237277548*^9}, {3.832330305132187*^9, 3.832330354823772*^9}, {
   3.8323342409867697`*^9, 3.832334248914604*^9}, {3.8323363163199797`*^9, 
   3.832336408052898*^9}, {3.8323364388843613`*^9, 3.8323364565865*^9}, {
   3.832336519340336*^9, 3.832336551109263*^9}, {3.8323365853019133`*^9, 
   3.832336606639152*^9}, {3.832336665193926*^9, 3.832336679262456*^9}, {
   3.832336762595909*^9, 3.83233677461066*^9}, {3.832402125171793*^9, 
   3.832402134479272*^9}, {3.8324090997398*^9, 3.8324091297840853`*^9}, {
   3.835977573206868*^9, 3.835977592581994*^9}, {3.836018128480612*^9, 
   3.836018134825436*^9}, {3.836021536692359*^9, 3.836021567148098*^9}, 
   3.837767133586357*^9},ExpressionUUID->"e651ecba-13f1-457c-bfa5-\
053b1ab8407f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "-", "p"}], ")"}], " ", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.8360233790453367`*^9, 3.836973994127315*^9, 
  3.836988738479988*^9, 3.837151889509103*^9, 3.837230758914568*^9, 
  3.837505179981474*^9, 3.837748165814377*^9, 3.8377510380608664`*^9, 
  3.8377630374395323`*^9, 3.837767125607862*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"aa9bd2a1-5a6e-420b-88f1-adc824bd2628"],

Cell[BoxData[
 RowBox[{"p", " ", "\[Gamma]"}]], "Output",
 CellChangeTimes->{3.8360233790453367`*^9, 3.836973994127315*^9, 
  3.836988738479988*^9, 3.837151889509103*^9, 3.837230758914568*^9, 
  3.837505179981474*^9, 3.837748165814377*^9, 3.8377510380608664`*^9, 
  3.8377630374395323`*^9, 3.837767125609488*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"2ea5fe7c-6149-4cd5-aab6-a0ef22628528"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysing the resident dynamics", "Chapter",
 CellChangeTimes->{{3.832408998193762*^9, 
  3.8324090038525467`*^9}},ExpressionUUID->"f0663439-c0ad-4d3d-84c1-\
740427d25584"],

Cell[CellGroupData[{

Cell["Equilibrium", "Subchapter",
 CellChangeTimes->{{3.8324090109240017`*^9, 
  3.832409012856284*^9}},ExpressionUUID->"6c5f7166-9488-407b-b8bf-\
9003eb388c52"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condFixTotal", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", "Iw", " ", "-", " ", "Iww"}], ")"}]}], ",",
      " ", 
     RowBox[{"Ds", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", "Dw", " ", "-", " ", "Dww"}], ")"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.8377671447044992`*^9},ExpressionUUID->"64f0069c-06b5-4381-838a-\
143372770f77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condResOnly", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"Imut", "\[Rule]", " ", "0"}], ",", "  ", 
     RowBox[{"Imm", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Imw", " ", "\[Rule]", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.83240906087984*^9, 3.832409093310376*^9}, {
   3.832409139816143*^9, 3.832409148041252*^9}, 
   3.832409195377907*^9},ExpressionUUID->"d334ba56-4687-4ea3-b753-\
e49b040a939c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solsres", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dIwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dIwwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwwdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
       "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829646038362496*^9, 3.829646066175127*^9}, {
   3.8296460989022427`*^9, 3.829646112952201*^9}, {3.829646148855029*^9, 
   3.8296461883334827`*^9}, 3.829716313710265*^9, {3.832328330244488*^9, 
   3.832328330565817*^9}, {3.83233021663793*^9, 3.8323302762277327`*^9}, {
   3.8323303616324463`*^9, 3.83233036187814*^9}, {3.832331073051442*^9, 
   3.832331100729104*^9}, {3.832336893940008*^9, 3.8323369106178503`*^9}, {
   3.8324091549457483`*^9, 
   3.832409172838251*^9}},ExpressionUUID->"80430831-3bd2-483a-81c4-\
b87d1ea8279d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iw", "/.", "solsres"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"%", "\[GreaterEqual]", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"b0", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Alpha]ww", " ", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "\[LessEqual]", " ", "p", "\[LessEqual]", "1"}], " ", "&&", 
     " ", 
     RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "\[LessEqual]", " ", "q", "\[LessEqual]", " ", "1"}]}], ",",
     " ", "Reals"}], "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.832329792282908*^9, 3.832329813676409*^9}, {
  3.832331710196608*^9, 3.832332102515286*^9}, {3.832332399101774*^9, 
  3.832332415634095*^9}, {3.832332548745118*^9, 3.832332565698371*^9}, {
  3.832332597722006*^9, 3.832332677657757*^9}, {3.832332717430265*^9, 
  3.832332744784152*^9}, {3.8323327825722322`*^9, 3.832332786846245*^9}, {
  3.8323368406111507`*^9, 3.832336844067896*^9}, {3.8323369150160227`*^9, 
  3.832336924863265*^9}, {3.835932352081497*^9, 
  3.835932430174788*^9}},ExpressionUUID->"98ab2213-183f-426a-a183-\
5a05231f5c7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "\[LessEqual]", "q", "\[LessEqual]", "1"}], "&&", 
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"p", "\[Equal]", "1"}], "&&", 
      RowBox[{
       RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
       "\[NotEqual]", "0"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
          RowBox[{"p", " ", "\[Gamma]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
               "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}]}], ">", "0"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "p", "<", "1"}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.832329801624041*^9, 3.832329814153812*^9}, 
   3.832331260385582*^9, {3.832331858970853*^9, 3.8323321030478077`*^9}, {
   3.8323323996532927`*^9, 3.832332416170981*^9}, {3.832332635839349*^9, 
   3.8323326781673*^9}, {3.8323327217860117`*^9, 3.832332746293705*^9}, 
   3.832332787311101*^9, {3.8323368188765574`*^9, 3.832336844722437*^9}, {
   3.8323369175927057`*^9, 3.832336925372449*^9}, 3.832402602478231*^9, 
   3.8324027351929197`*^9, 3.832409203683844*^9, 3.833532092284329*^9, 
   3.833945661584284*^9, 3.834725848375527*^9, {3.83593235156971*^9, 
   3.8359323553015547`*^9}, {3.8359323864287987`*^9, 3.835932431353546*^9}, 
   3.835975837684362*^9},ExpressionUUID->"0e12ea0f-dca2-4d48-bc4d-\
3e1d01001d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
     RowBox[{"p", " ", "\[Gamma]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "b0", " ", "d"}], "-", 
     SuperscriptBox["d", "2"], "-", 
     RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
     RowBox[{"d", " ", "\[Alpha]w"}], "-", 
     RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
     RowBox[{"d", " ", "\[Beta]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
     RowBox[{"b0", " ", "\[Gamma]"}], "-", 
     RowBox[{"d", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.832384244566329*^9, 3.8323842460177393`*^9}, {
  3.832400256734977*^9, 3.832400263613785*^9}, {3.832403165297183*^9, 
  3.832403175014187*^9}, {3.832404423541275*^9, 3.832404433322205*^9}, {
  3.8324054719814663`*^9, 
  3.8324054795864697`*^9}},ExpressionUUID->"08ad92b2-4505-4fae-a223-\
355feea40529"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], 
           ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", "\[Gamma]"}]}], ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.832384246746402*^9, {3.832400258178032*^9, 3.832400264181429*^9}, {
   3.832403166411693*^9, 3.832403176619546*^9}, {3.832404424681678*^9, 
   3.8324044340683393`*^9}, {3.832405473149761*^9, 3.8324054766230707`*^9}, 
   3.83353209400599*^9, 
   3.8359758377848063`*^9},ExpressionUUID->"e66b58f5-d827-464a-8595-\
d48d1ca2f03b"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     "\[Gamma]"}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     "\[Gamma]"}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", " ", "+", " ", "\[Gamma]"}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], " ", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", " ", 
    RowBox[{"\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
    RowBox[{"p", "  ", "\[Gamma]", " ", "\[Alpha]w"}], " ", "+", " ", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]}],
 CellChangeTimes->{
  3.832384246746402*^9, {3.832400258178032*^9, 
   3.832400264181429*^9}},ExpressionUUID->"79aa0bb1-9488-4bd1-888d-\
103420d934f9"]], "Text",
 CellChangeTimes->{
  3.832402777968194*^9, {3.832402849724245*^9, 3.832402925921858*^9}, {
   3.832402965446184*^9, 3.832402982853883*^9}, {3.832403123076495*^9, 
   3.832403138296722*^9}, {3.8324036819738283`*^9, 3.8324036848876877`*^9}, {
   3.832404296785638*^9, 3.832404302144247*^9}, {3.8324043491112757`*^9, 
   3.8324043638359957`*^9}, {3.832404403006349*^9, 3.832404417072011*^9}, {
   3.832404509888983*^9, 3.832404535960106*^9}, {3.832404575215783*^9, 
   3.832404590378949*^9}, {3.832404644463299*^9, 3.832404644832184*^9}, {
   3.832404910343381*^9, 3.832404959952423*^9}, {3.83240539864124*^9, 
   3.8324055023550177`*^9}, {3.834032228549748*^9, 
   3.8340322383756638`*^9}},ExpressionUUID->"3855d051-a6d0-4aaf-bd84-\
320ecca8232f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], " ", ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
          ")"}]}], "+", " ", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
        RowBox[{"p", "  ", "\[Gamma]", " ", "\[Alpha]w"}], " ", "+", " ", 
        RowBox[{"\[Gamma]", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "p"}], ")"}]}]}], " ", ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
        RowBox[{"p", " ", "\[Gamma]"}]}], ")"}]}], ")"}]}], "\[Equal]", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
      RowBox[{"d", " ", "\[Beta]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.834032250800151*^9, 
  3.834032257803639*^9}},ExpressionUUID->"77abe6f7-a63b-40fa-9d91-\
107e278d443b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.835975837818644*^9},ExpressionUUID->"08a86504-0abb-4a2b-bd7c-\
d3867c31e34f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iww", "/.", "solsres"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"0", "\[LessEqual]", " ", "p", " ", "\[LessEqual]", " ", "1"}], 
    " ", "&&", " ", 
    RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"b0", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}]}], " ", ",", " ", "\[Beta]ww", 
   ",", "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.832331493411772*^9, 3.832331498729002*^9}, {
  3.8323321366737747`*^9, 3.832332155318511*^9}, {3.8323322842917433`*^9, 
  3.8323323463466063`*^9}, {3.832332445225294*^9, 3.832332472309957*^9}, {
  3.832332801856941*^9, 3.832332806105134*^9}, {3.832405914694604*^9, 
  3.8324059246160107`*^9}, {3.8324059582502747`*^9, 
  3.83240596341096*^9}},ExpressionUUID->"3f673ed7-7515-4e58-b8df-\
f48c85c4fb0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "<", "p", "\[LessEqual]", "1"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]ww", ">", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]w"}], "-", 
      RowBox[{"d", " ", "\[Beta]w"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
     "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
      
      RowBox[{"p", " ", "\[Gamma]"}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.832331499242293*^9, {3.832332143970943*^9, 3.8323321558198013`*^9}, {
   3.832332290763845*^9, 3.832332346967086*^9}, {3.83233244998731*^9, 
   3.832332473043498*^9}, {3.832332799828554*^9, 3.832332807078762*^9}, 
   3.8323368227974443`*^9, 3.832336938081369*^9, 3.832403743901835*^9, 
   3.8324056558433847`*^9, {3.832405915453796*^9, 3.832405925499701*^9}, {
   3.8324059586865053`*^9, 3.832405963931058*^9}, 3.8324092118545837`*^9, 
   3.833945675946741*^9, 
   3.8359758378828993`*^9},ExpressionUUID->"f4d2a5ad-cf87-4935-9021-\
7b142f114997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{
    "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
     RowBox[{"p", " ", "\[Gamma]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "b0", " ", "d"}], "-", 
     SuperscriptBox["d", "2"], "-", 
     RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
     RowBox[{"d", " ", "\[Alpha]w"}], "-", 
     RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"b0", " ", "\[Beta]w"}], "-", 
     RowBox[{"d", " ", "\[Beta]w"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
     RowBox[{"b0", " ", "\[Gamma]"}], "-", 
     RowBox[{"d", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.832403751410838*^9, 3.832403758140729*^9}, {
  3.8324065158413057`*^9, 
  3.832406523370261*^9}},ExpressionUUID->"6288b50b-bb06-4613-9127-\
5e5759f92a4f"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}]}]}],
       ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{
   "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.8324037589534473`*^9, {3.8324065167317743`*^9, 3.832406524281479*^9}, 
   3.833945678805094*^9, 
   3.8359758381451*^9},ExpressionUUID->"455e4356-0b0d-4808-968a-bc3e0a8cbca9"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}]}]}],
       ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{
   "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
      "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", " ", "+", " ", 
       "\[Gamma]"}], ")"}]}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}], 
     "\[Gamma]", " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "+", "\[Beta]w"}], ")"}], "p", " ", "\[Gamma]"}], 
    "+", " ", 
    RowBox[{"\[Alpha]ww", " ", "\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", "p"}], " ", ")"}], " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]]}]}],
 CellChangeTimes->{
  3.8324037589534473`*^9},ExpressionUUID->"135c0118-cb73-42cf-a7ae-\
293cf6a80a80"]], "Text",
 CellChangeTimes->{{3.8324064660159187`*^9, 3.832406510503319*^9}, {
  3.834032316555629*^9, 
  3.834032395484638*^9}},ExpressionUUID->"ea88c27e-2ae8-4645-b683-\
d5fb4970a841"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dressols", " ", "=", " ", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dDwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
          RowBox[{"dDwwdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
        "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Dw", ",", " ", "Dww"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.834033259978529*^9, 3.834033266070026*^9}, {
  3.834197370608328*^9, 
  3.834197420652351*^9}},ExpressionUUID->"9535a2a4-f912-42a9-b294-\
8267a1d57930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dw", "/.", "Dressols"}], ")"}], " ", ">", " ", "0"}], " ", "&&",
      " ", 
     RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iw", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iww", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "<", "q", "<", "1"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]w", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]ww", " ", ">", " ", "0"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.834197422357291*^9, 3.8341974968218*^9}, {
  3.8341975402603273`*^9, 
  3.8341975727831507`*^9}},ExpressionUUID->"9b8fa279-6c2b-4f9c-a9e2-\
e7851a871141"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]ww", ">", "0"}], "&&", 
  RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
  RowBox[{"\[Mu]", ">", "0"}], "&&", 
  RowBox[{"0", "<", "q", "<", "1"}], "&&", 
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"Iw", ">", "0"}], "&&", 
  RowBox[{"Iww", ">", "0"}]}]], "Output",
 CellChangeTimes->{{3.834197431828412*^9, 3.834197497541408*^9}, {
   3.834197544411867*^9, 3.83419757387853*^9}, 
   3.835975839337397*^9},ExpressionUUID->"da1784ce-4b0d-4f48-aaa9-\
9a7e41ed134a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dww", "/.", "Dressols"}], ")"}], " ", ">", " ", "0"}], " ", "&&",
      " ", 
     RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iw", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"Iww", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"0", "<", "q", "<", "1"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]w", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]ww", " ", ">", " ", "0"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{
  3.8341976112853327`*^9},ExpressionUUID->"0c676acd-1c54-43c6-b695-\
f2985c193337"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]ww", ">", "0"}], "&&", 
  RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
  RowBox[{"\[Mu]", ">", "0"}], "&&", 
  RowBox[{"0", "<", "q", "<", "1"}], "&&", 
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"Iw", ">", "0"}], "&&", 
  RowBox[{"Iww", ">", "0"}]}]], "Output",
 CellChangeTimes->{3.8341976195412083`*^9, 
  3.835975846350829*^9},ExpressionUUID->"55a2ac7f-a402-4e0e-a4ed-\
89c0e4f674c2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium stability conditions", "Subchapter",
 CellChangeTimes->{{3.832409026226013*^9, 3.832409029072009*^9}, {
  3.833970359604176*^9, 
  3.8339703606216793`*^9}},ExpressionUUID->"20018efe-fe31-4da0-bd86-\
2336bee1e156"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JRes", " ", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt"}], 
        "}"}], "/.", "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], 
       "}"}], "}"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.832406548483384*^9, 3.832406640737584*^9}, {
  3.832406749043187*^9, 3.832406754445374*^9}, {3.832409033602165*^9, 
  3.83240905361662*^9}, {3.832409230277813*^9, 
  3.832409263733767*^9}},ExpressionUUID->"12b509ea-73b9-412d-b68a-\
61a7a05222f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]w", "-", "\[Beta]w", "-", 
      "\[Gamma]", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "p"}], " ", "\[Gamma]"}], ",", 
     RowBox[{
      RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]ww", "-", "\[Beta]ww", "-", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}]}], " ", "\[Beta]w"}], 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"2", " ", "Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      "\[Mu]", "-", "\[Sigma]w"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dw", " ", "\[Beta]w"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dw", "+", "q", "-", 
        RowBox[{"2", " ", "Dw", " ", "q"}], "-", 
        RowBox[{"Dww", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}], ",", 
     RowBox[{
      RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iww"}], " ", "q", " ", "\[Beta]ww"}], "-", "\[Mu]", "-", 
      "\[Sigma]ww"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8324066039951487`*^9, 3.832406641179555*^9, {3.832409255946203*^9, 
   3.8324092642641287`*^9}, 3.833532124546104*^9, 3.833945699439839*^9, 
   3.834725862228409*^9, 3.8359748500561657`*^9, 
   3.835975846414312*^9},ExpressionUUID->"40097ce6-0b1c-4022-b9e0-\
4ca783e1b122"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JRes", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.832409268030389*^9, 
  3.832409273314041*^9}},ExpressionUUID->"f3062a05-5bd0-4bb7-b13c-\
7dfd5d835bb6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]w", "-", "\[Beta]w", "-", 
       "\[Gamma]", "+", 
       RowBox[{"p", " ", "\[Gamma]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", "p"}], " ", "\[Gamma]"}], 
      RowBox[{
       RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]ww", "-", "\[Beta]ww", 
       "-", 
       RowBox[{"p", " ", "\[Gamma]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}]}], " ", "\[Beta]w"}], 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"2", " ", "Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
       "\[Mu]", "-", "\[Sigma]w"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
       RowBox[{"Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}]},
     {
      RowBox[{"Dw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dw", "+", "q", "-", 
         RowBox[{"2", " ", "Dw", " ", "q"}], "-", 
         RowBox[{"Dww", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"Iww", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iww"}], " ", "q", " ", "\[Beta]ww"}], "-", "\[Mu]", "-",
        "\[Sigma]ww"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.832409273649954*^9, 3.833532126747891*^9, 
  3.833945700442053*^9, 3.834725863604039*^9, 
  3.83597584644713*^9},ExpressionUUID->"21b6c94c-cdfb-4454-87d1-c3f5cf120d1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", "JRes", "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8324094699133053`*^9, 3.83240948640094*^9}, {
   3.833532162948451*^9, 3.833532168514834*^9}, 3.833532811661775*^9, 
   3.835974854331708*^9},ExpressionUUID->"612a91ce-98e5-4f74-91bb-\
d4badbda8371"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], "2"], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "p"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], "2"], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "p"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
          "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}],
           ")"}], " ", "\[Gamma]"}], "+", 
        SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["q", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "-", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], ")"}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["q", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "-", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.835974858345964*^9, 
  3.835975846838592*^9},ExpressionUUID->"239a8954-6ca3-4f6d-a552-\
255bd38c43cd"]
}, Open  ]],

Cell["Check with function Reduce", "Text",
 CellChangeTimes->{{3.833969204046648*^9, 
  3.833969208732028*^9}},ExpressionUUID->"7027cf17-8976-4a9c-86d8-\
565e68c0934a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigvals", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], "&&", " ", 
   RowBox[{"1", ">", "p", ">", "0"}], "&&", " ", 
   RowBox[{"d", " ", ">", " ", "0"}], "&&", 
   RowBox[{"\[Beta]w", ">", "0"}], "&&", 
   RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"b0", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Gamma]", " ", ">", "0"}]}], "]"}]], "Input",ExpressionUUID->\
"61480f75-38c5-4619-846f-5dff8615c97d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "<", "p", "<", "1"}]}]], "Output",
 CellChangeTimes->{3.8347258764307337`*^9, 
  3.8359758471453114`*^9},ExpressionUUID->"f15b3288-6d81-45d6-b240-\
f57b8ccb4196"]
}, Open  ]],

Cell["Check with some algebra", "Text",
 CellChangeTimes->{{3.833969214478662*^9, 3.833969226981674*^9}, {
  3.833969515833363*^9, 
  3.833969516974371*^9}},ExpressionUUID->"77d3767b-c38b-48e2-8d14-\
2ef478b91ee2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833966189902479*^9, 
  3.833966213518471*^9}},ExpressionUUID->"e32f4cfb-ab74-437e-9b85-\
50b9590626a2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "b0"}], "-", 
    RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
    "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.83396619469245*^9, 3.8339662140116253`*^9}, 
   3.8347258798149242`*^9, 
   3.835975847164527*^9},ExpressionUUID->"cb746711-d3b7-4050-be6d-\
65166a61234e"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "b0"}], "-", 
    RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
    "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", " ", "p"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"0", ":", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "+", 
      RowBox[{"2", "  ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}], " ", "=", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ",
         "+", " ", "\[Gamma]"}], ")"}], "2"]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "whole", " ", "expression", " ", 
  "become"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "b0"}], "-", 
       RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
       "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+"}], "|", 
      RowBox[{
      "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
       "+", " ", "\[Gamma]"}], "|"}], ")"}]}], " ", "<", " ", 
   RowBox[{"0", " ", "in", " ", "all", " ", "cases"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", " ", "p"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"1", ":", "\[IndentingNewLine]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], "2"], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "p"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], "2"], "-", 
     RowBox[{"2", "  ", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"]}], " ", "=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
      "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
       "-", " ", "\[Gamma]"}], ")"}], "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "whole", " ", "expression", " ", 
  "become"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+"}], "|", 
     RowBox[{
     "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
      "-", " ", "\[Gamma]"}], "|"}], ")"}]}], " ", "<", " ", 
  RowBox[{
  "0", " ", "in", " ", "all", " ", 
   "cases"}]}], \
"\[IndentingNewLine]"}],ExpressionUUID->"f951fd3e-c00a-4ecc-988e-\
32709e27a3f1"]], "Text",
 CellChangeTimes->{{3.8335326126892138`*^9, 3.83353265427325*^9}, {
  3.833532716465397*^9, 3.833532765581737*^9}, {3.833532823024332*^9, 
  3.833532848118684*^9}, {3.833533042039837*^9, 3.8335330626750727`*^9}, {
  3.83353797736475*^9, 3.833538083562282*^9}, {3.833538121642602*^9, 
  3.8335381947844152`*^9}},ExpressionUUID->"52261f5e-9f2a-45e1-9a24-\
46c8910ca68a"],

Cell["\<\
The eigenvalue cannot be imaginary because the part under the square root is \
always positive\
\>", "Text",
 CellChangeTimes->{{3.833969865822095*^9, 
  3.8339698913534937`*^9}},ExpressionUUID->"c8acdb41-5833-4735-adad-\
25ba4fa00165"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ",
         "+", " ", "\[Gamma]"}], ")"}], "2"], "-", 
     RowBox[{"4", " ", "p", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}]}], " ", "<", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"0", "<", "p", "<", "1"}], " ", "&&", " ", 
   RowBox[{"\[Gamma]", " ", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8335364587697363`*^9, 3.8335365372279997`*^9}, {
  3.833537765639224*^9, 
  3.833537768378428*^9}},ExpressionUUID->"05fbd30c-a5ef-429a-83d8-\
f0fa2d5e75cc"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8335364879019613`*^9, 3.833536537790173*^9}, 
   3.833537769160514*^9, 3.833945728210422*^9, 3.834725883914784*^9, 
   3.835975847206725*^9},ExpressionUUID->"4b3d357e-78c5-4dca-9b8b-\
c5c12ac0465f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833966283976314*^9, 
  3.833966292871079*^9}},ExpressionUUID->"f4238276-0046-42d9-9d05-\
dc398a35df4a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
    RowBox[{"Iww", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["Iww", "2"], " ", 
        SuperscriptBox["q", "2"], " ", 
        SuperscriptBox["\[Beta]ww", "2"]}], "-", 
       RowBox[{"2", " ", "Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
          "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.833966293379434*^9, 
  3.835975847249249*^9},ExpressionUUID->"2c7df819-1454-433d-84bd-\
8bbcaf3aa4cd"]
}, Open  ]],

Cell["Check with function Reduce [Still there are some doubts]", "Text",
 CellChangeTimes->{{3.833969279799005*^9, 3.833969285564312*^9}, {
  3.8339693248995523`*^9, 
  3.833969330119479*^9}},ExpressionUUID->"36f2512f-7302-4f87-b271-\
602b8437d848"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigvals", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ">", "0"}], "&&", " ", 
   RowBox[{"1", ">", "q", ">", "0"}], "&&", " ", 
   RowBox[{"d", " ", ">", " ", "0"}], "&&", 
   RowBox[{"\[Beta]w", ">", "0"}], "&&", 
   RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Sigma]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"Iww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"Iw", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Mu]", " ", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8339693076916924`*^9, 3.8339693561382837`*^9}, {
  3.833969476649102*^9, 
  3.83396948093442*^9}},ExpressionUUID->"5961aad3-1ac0-4b88-863e-\
cbb76442b984"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8339693366783524`*^9, 3.8339693386682253`*^9}, {
   3.833969473173317*^9, 3.833969490979816*^9}, 3.834725898748369*^9, 
   3.835975855443585*^9},ExpressionUUID->"6950f403-3aed-417d-97c2-\
78b1dbe22310"]
}, Open  ]],

Cell["Check with some algebra", "Text",
 CellChangeTimes->{{3.833969499604073*^9, 3.833969506000525*^9}, 
   3.833970027179865*^9},ExpressionUUID->"25833fbc-c06f-438c-9ae6-\
a69ebad62540"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"If", " ", "q"}], " ", "=", " ", "0"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
         RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
         RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
             RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", 
             "-", "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
          RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
          RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
              RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", 
              "-", "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}], 
       "<", "0"}], "\[IndentingNewLine]", "iff", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
       ">", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-",
            "\[Sigma]ww"}], ")"}]}]]}], "\[IndentingNewLine]", "iff", 
      "\[IndentingNewLine]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
          RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
         ")"}], "2"], ">", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
          RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
          "\[Sigma]ww"}], ")"}]}]}], "\[IndentingNewLine]", "iff", 
      "\[IndentingNewLine]", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iw", "2"], " ", 
          SuperscriptBox["\[Beta]w", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "+", 
         RowBox[{"2", " ", "Iww", " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], ")"}], " ", ">", " ", 
    RowBox[{"0", "  ", "in", " ", "all", " ", "cases"}]}], 
   "\[IndentingNewLine]"}]],
  CellChangeTimes->{3.833966293379434*^9},ExpressionUUID->
  "feff4975-88b9-48c5-8ba7-b7858e3bcfe4"],
 "\n"
}], "Text",
 CellChangeTimes->{
  3.833966314883297*^9, {3.8339665060162973`*^9, 3.833966552018918*^9}, {
   3.833966624605592*^9, 3.833966728881033*^9}, {3.833968093317787*^9, 
   3.833968228724926*^9}, {3.8339682750960093`*^9, 3.8339683836144037`*^9}, {
   3.83396849075776*^9, 3.833968490759582*^9}, 3.833968524138281*^9, {
   3.833968825720284*^9, 3.83396892934764*^9}, {3.8339690407970133`*^9, 
   3.833969068942181*^9}, {3.833969530524148*^9, 
   3.8339695581955843`*^9}},ExpressionUUID->"a2d6abbc-ce26-488b-be48-\
1b41494cbee2"],

Cell["Using some functions to simplify some expression above", "Text",
 CellChangeTimes->{{3.8339695423865232`*^9, 
  3.833969554853491*^9}},ExpressionUUID->"3dce1f40-ca9a-494d-8323-\
3a9d18d6a3e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
       RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
      ")"}], "2"], "]"}], "-", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
       "\[Sigma]ww"}], ")"}]}], "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339689519651823`*^9, 
  3.833968975950758*^9}},ExpressionUUID->"808328ce-8947-4dd3-818b-\
1a698f14ccc8"],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Iw", "2"], " ", 
     SuperscriptBox["\[Beta]w", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["Iww", "2"], " ", 
     SuperscriptBox["\[Beta]ww", "2"]}], "+", 
    RowBox[{"2", " ", "Iww", " ", "\[Beta]ww", " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
    RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.833968954532154*^9, 3.833968976386876*^9}, 
   3.835975855576972*^9},ExpressionUUID->"3265799a-731d-48e6-a92e-\
c0158f7268c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["q", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "-", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], ")"}]}], 
   "/.", 
   RowBox[{"q", "\[Rule]", " ", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339663665753727`*^9, 
  3.833966377540638*^9}},ExpressionUUID->"2d47f0be-c101-45de-a58b-\
490edfdaa78f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
        "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8339663718115788`*^9, 3.833966378291596*^9}, 
   3.8359758558223057`*^9},ExpressionUUID->"e9c206af-f5fe-42a7-97a3-\
d1093c3923db"]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{
  RowBox[{"If", " ", "q"}], " ", "=", " ", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
          "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
          "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}], "<", " ", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{"iff", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
   RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
   RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], ">", 
  SqrtBox[
   RowBox[{
    RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
       "\[Sigma]ww"}], ")"}], 
     "2"]}]]}], "\[IndentingNewLine]", "iff", "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
     RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
    ")"}], "2"], ">", 
  RowBox[{
   RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
      "\[Sigma]ww"}], ")"}], 
    "2"]}]}], "\[IndentingNewLine]", "iff", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Iw", "2"], " ", 
      SuperscriptBox["\[Beta]w", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
       ")"}]}], "+", 
     RowBox[{"Iw", " ", "\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], ")"}]}],
   ">", 
  RowBox[{"0", " ", "True", " ", "in", " ", "all", " ", "cases"}]}]}],
 CellChangeTimes->{
  3.8339695869394197`*^9},ExpressionUUID->"1734e154-3fc6-4963-bda4-\
f96c76b4c0d6"]], "Text",
 CellChangeTimes->{{3.833969617026904*^9, 3.833969649231299*^9}, {
  3.833969681159239*^9, 3.833969764115258*^9}, {3.833969835298121*^9, 
  3.833969845934141*^9}},ExpressionUUID->"dee9ef27-089d-453d-b228-\
fcab802c8067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["q", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "-", 
         RowBox[{"2", " ", "Iww", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}], "-", "\[Sigma]ww"}], ")"}]}], 
   "/.", 
   RowBox[{"q", "\[Rule]", " ", "1"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339695857799683`*^9, 
  3.83396958587049*^9}},ExpressionUUID->"1f44aac1-4624-4593-8be0-\
4178be7c912a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
         "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8339695869394197`*^9, 
  3.835975856358636*^9},ExpressionUUID->"a5964df8-8350-4de2-bbe5-\
b60eca920e75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Expand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
       ")"}], "2"], "]"}], "-", 
    RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "-", 
    RowBox[{"Expand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
        "\[Sigma]ww"}], ")"}], "2"], "]"}]}], "//", "Simplify"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.83396977212418*^9, 
  3.8339698237603416`*^9}},ExpressionUUID->"0bb08a8a-a24d-400b-a439-\
67ed7f8957ea"],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Iw", "2"], " ", 
     SuperscriptBox["\[Beta]w", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
      ")"}]}], "+", 
    RowBox[{"Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.833969819404808*^9, 3.833969824235017*^9}, 
   3.835975856400323*^9},ExpressionUUID->"3c94266d-9213-4186-bd8e-\
d733dffe0907"]
}, Open  ]],

Cell["\<\
Check if the part under the square root is negative (i.e. potential for \
imaginary eigenvalue)\
\>", "Text",
 CellChangeTimes->{{3.834031269836607*^9, 
  3.834031296415291*^9}},ExpressionUUID->"398c897b-c4ba-4827-b606-\
46ac6fac9cd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{
   "Import", "[", "\"\</Users/Linh-phuong/resstability.txt\>\"", "]"}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.834733235152009*^9, 3.834733245527947*^9}, {
  3.834733724490535*^9, 
  3.83473372995403*^9}},ExpressionUUID->"17149f96-c7d6-45be-82d0-\
234d7f8d8137"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["Iww", "2"], " ", 
        SuperscriptBox["q", "2"], " ", 
        SuperscriptBox["\[Beta]ww", "2"]}], "-", 
       RowBox[{"2", " ", "Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
          "\[Sigma]ww"}], ")"}]}]}], ")"}], "/.", 
     RowBox[{"Iw", " ", "\[Rule]", " ", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"Iw", "/.", "solsres"}], "]"}]}]}], "/.", 
    RowBox[{"Iww", " ", "\[Rule]", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Iww", "/.", "solsres"}], "]"}]}]}], "//", 
   RowBox[{"FullSimplify", "\[IndentingNewLine]", 
    RowBox[{"AbsoluteTiming", "[", 
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"%", ">", "0"}], " ", "&&", 
        RowBox[{"1", ">", "p", ">", "0"}], " ", "&&", " ", 
        RowBox[{"1", ">", "q", ">", "0"}], "&&", " ", 
        RowBox[{"d", " ", ">", " ", "0"}], "&&", 
        RowBox[{"\[Beta]w", ">", "0"}], "&&", 
        RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
        RowBox[{"\[Sigma]w", " ", ">", " ", "0"}], "&&", " ", 
        RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
        RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}], "&&", " ", 
        RowBox[{"\[Alpha]w", " ", ">", "0"}], "&&", 
        RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
        RowBox[{"b0", " ", ">", " ", "0"}]}], "]"}], "//", "Simplify"}], 
     "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.833970721762128*^9, 3.833970731805526*^9}, {
   3.833971106696406*^9, 3.833971174391171*^9}, {3.8340313380806837`*^9, 
   3.8340313422681704`*^9}, {3.834038280562126*^9, 3.834038289270138*^9}, 
   3.834725933495658*^9},ExpressionUUID->"7a41d285-b48f-48dc-90b9-\
1697ff43e3a7"],

Cell[TextData[{
 "Summarise conditions for positive part under the square root\n\n",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"0", "<", "p", "\[LessEqual]", 
    FractionBox[
     RowBox[{"\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
         RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]]}], 
   " ", "&&", " ", 
   RowBox[{"0", "<", "\[Sigma]ww", "<", "X1"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"||", " ", 
    RowBox[{"\[Sigma]ww", " ", ">", " ", "X2"}]}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
         RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<", 
    "p", "<", "1"}], " ", "&&", 
   RowBox[{"0", "<", "q", "<", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
         "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
     RowBox[{"2", " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
      " ", "\[Beta]ww"}]]}], "&&", "&&", " ", 
   RowBox[{"0", "<", "\[Sigma]ww", "<", "X1"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"||", " ", 
    RowBox[{"\[Sigma]ww", " ", ">", " ", "X2"}]}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
          RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<",
      "p", "<", "1"}], " ", "&&", " ", 
    RowBox[{"q", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
          "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{"2", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
       " ", "\[Beta]ww"}]]}], " ", "&&", " ", 
    RowBox[{"\[Sigma]ww", "  ", "\[NotEqual]", " ", "X2"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
          RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<",
      "p", "<", "1"}], "  ", "&&", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
          "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{"2", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
       " ", "\[Beta]ww"}]], "<", "q", "<", "1"}]}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"X1", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
              "\[Beta]w"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w"}]}], 
               ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
              "\[Beta]w"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "q"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "p", " ", "q"}]}], ")"}], " ", 
                 "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                  "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
             "\[Gamma]"}]}], ")"}], "2"]}], ")"}]}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
            "\[Beta]w"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "p"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"3", " ", "q"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "p", " ", "q"}]}], ")"}], " ", 
               "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
         "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                 "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}], " ", "\[Sigma]w"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
             "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
              "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}]}]}], " "}], "\[IndentingNewLine]", 
  RowBox[{"X2", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
             "\[Beta]w"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w"}]}], 
              ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
             "\[Beta]w"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "q"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "p", " ", "q"}]}], ")"}], " ", 
                "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                 "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}], "2"]}], ")"}]}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
           "\[Beta]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"3", " ", "q"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "p", " ", "q"}]}], ")"}], " ", 
              "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
        "\[Gamma]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
               "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}], " ", "\[Sigma]w"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
            "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
             "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
        "\[Gamma]"}]}], ")"}]}]}]}]}],
  CellChangeTimes->{3.833971539427052*^9, 3.834031693802718*^9, 
   3.8340481427035522`*^9},ExpressionUUID->
  "2f830c65-dd08-46ed-a617-1579e97adc77"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.834057339166164*^9, 3.834057376653514*^9}, {
  3.834057466011156*^9, 3.834057510884099*^9}, {3.8340576910803022`*^9, 
  3.834057717555675*^9}, {3.834057762377296*^9, 3.834057763529285*^9}, {
  3.834057840570129*^9, 3.834057840570283*^9}, {3.834057913106043*^9, 
  3.8340579227592*^9}, {3.834057981272954*^9, 3.8340579812730017`*^9}, {
  3.8340580119540586`*^9, 3.8340580389648247`*^9}, {3.8340581150059233`*^9, 
  3.8340581457758217`*^9}, {3.834058254223524*^9, 3.8340582880668573`*^9}, {
  3.8340583597696657`*^9, 3.834058420369753*^9}, {3.834058499427589*^9, 
  3.8340584994276657`*^9}, {3.834058537583664*^9, 3.83405853846661*^9}, {
  3.834058571879586*^9, 3.834058579396235*^9}, {3.834725995263464*^9, 
  3.834726002290308*^9}, {3.834726045837044*^9, 3.8347260501152573`*^9}, {
  3.834726101304069*^9, 
  3.834726101304186*^9}},ExpressionUUID->"a9ce6c78-e849-4a06-9136-\
4d24a93f95c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.833970377721216*^9, 
  3.8339703820006933`*^9}},ExpressionUUID->"ed78ee75-ab0a-4768-a17a-\
89a2891a46a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resvar", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resvart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt"}], 
      "}"}], "/.", "condResOnly"}], "/.", "condFixTotal"}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"resvar", "\[Rule]", " ", "resvart"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ressys", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"resvart", ",", " ", "t"}], "]"}], "==", "%"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8339704321682653`*^9, 3.833970637742549*^9}, 
   3.834059883773746*^9},ExpressionUUID->"383bd514-b766-420d-a083-\
fc5e89db3575"],

Cell[CellGroupData[{

Cell["\<\
No differences in manipulation and virulence between single infection and \
double infections\
\>", "Subsection",
 CellChangeTimes->{{3.834727889033558*^9, 3.8347279294649687`*^9}, {
  3.83472855591362*^9, 
  3.8347285695109987`*^9}},ExpressionUUID->"088a31df-7878-4c57-aab9-\
f5851bf7d053"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833970384520238*^9, 3.8339704149917393`*^9}, {
   3.834031817767427*^9, 3.834031921447423*^9}, {3.834038259021524*^9, 
   3.834038270814554*^9}, {3.834059796111875*^9, 3.83405979671793*^9}, 
   3.834727646303278*^9, {3.834727702778359*^9, 3.834727703258182*^9}, {
   3.834727747552021*^9, 3.83472774787101*^9}, {3.834727783181448*^9, 
   3.834727784687739*^9}},ExpressionUUID->"56948034-b97d-412b-9090-\
9d659eb61d71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.834060016717185*^9, 3.8340600478291473`*^9}, {
  3.8340601320362864`*^9, 3.834060139066847*^9}, {3.834726346561721*^9, 
  3.834726346795102*^9}, {3.8347269325607967`*^9, 3.834726938844645*^9}, {
  3.83472700577332*^9, 
  3.8347270058997927`*^9}},ExpressionUUID->"f1d32b5d-7710-4e0b-89b7-\
e4ee22bcc8c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco1"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8340598774292727`*^9, 3.834059897951157*^9}, {
  3.834059930429377*^9, 3.834059974471097*^9}, {3.8340600361804457`*^9, 
  3.834060037009159*^9}, {3.8340600896715937`*^9, 3.834060096262355*^9}, {
  3.8340601436784153`*^9, 3.834060147923568*^9}, {3.834726356990777*^9, 
  3.834726367389772*^9}, {3.834726889719125*^9, 3.834726889881207*^9}, {
  3.834727246565544*^9, 
  3.834727275298967*^9}},ExpressionUUID->"82c64a5d-6aa2-4ada-896e-\
d4ee93e1810e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
I2s+SyA+LSOaK2akl9bXJZBTrSHN/wOzXXGK
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7srpzYtra3JI0Pf//h9uLh3l
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
JQM6Z43mCP8PP3e6tA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.834726368065527*^9, 3.8347268904609327`*^9, {3.834726934098959*^9, 
   3.834726940427321*^9}, 3.8347270077647257`*^9, {3.8347272493114843`*^9, 
   3.834727261538377*^9}, 3.834727295872999*^9, 3.834727951917954*^9, 
   3.83472946132008*^9, 
   3.835975863190282*^9},ExpressionUUID->"0882c5be-f6a9-4a16-93dc-\
5e7ea57c674e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Only similarity in virulence between single infection and double infections \
\>", "Subsection",
 CellChangeTimes->{{3.834728816087356*^9, 
  3.834728841884172*^9}},ExpressionUUID->"825f69f1-e7ba-48b7-a3cb-\
92d844778bd8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.834728874590809*^9, 3.834728874836464*^9}, {
  3.834728983056847*^9, 3.8347289831921177`*^9}, {3.835975874053566*^9, 
  3.8359758752810497`*^9}},ExpressionUUID->"658ca121-f635-4747-814c-\
1bc0faff76e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], 
    "}"}]}], ";"}]}], "Input",ExpressionUUID->"8066a61c-5c1f-4009-a6b2-\
0486e1e2c399"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco2"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.834729324315316*^9, 
  3.834729325055314*^9}},ExpressionUUID->"c8b10e51-f92d-4480-9019-\
b8e4929bf7ea"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Byfa6UQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+fSWxfV1efS7z4rh/wHNFzvN
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
xfj5JQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd1nc8Vf8bAHB7j2tzrWsmRIQQfZ4GGgjRlOzsEaEvychelVniXiukUkZo
SFKkiAYpIWVkhAghfp/z++u+3q/nnOc+n+dzPs85Mo6+Vi4MdHR0s/R0dMRv
Xrgji4Zz0s6vKlqO1641oPwTU/pHKe5oz+6K52vJDajPLPEshXIeFeW0OKZE
NKBgk+M8zJQERPJO1VFza0DGLWC7JH0NuYaKtujqNaA7UVrRs9Ll6PvF0B3r
Q/Xom8Nd4WnpBnT9ZErqpZ31KNTS035S+hUKLx30WGOvQ+x/c195qX1G2Tla
AX5HapB/88XkqbPfUfSO9oGZ3vtomS/jzpek7+i6zJuAzM77KNyhrLO9+DtS
dzV2Ry/uo2S6blJ5z3d0KSDxOq3qPirbKZvpov8DvQ7NE72Wch8NPWzJG6Af
QYZVx3d57L2PLKrZK7sujyID/arC5tp7SK04vbvm7k90yMxDXcKyEgnmbF1q
evUT8T/ZslKCKtFqUodEx4+faPperJWhWiVqC2B1GyFPoGaBuKYMzkrkuCd0
XShuAkXaSciMvbyLMocdVYJPTyI4f8hTEu6iNYpmjB5pGml9tvo+ZHAHjZi7
SQzqziK9kOGjdacrkOBLL/lwo1n0R2lAId+qAu029FeVtJpFZ1pHb102qkA0
lf8MTnrOopvO6u05KhXIli3ZtjdvFh3cw/9La/kWeves8sZbhjm0q36L3LX0
W6hRa0mi6c0c4lqNuDXzrhxNV6zKn+6bQ70G8tf3tpYjCTm6Lesjc+jHkfWS
4kfl6Dwfu6HBxhwycTJZiykuR1q/yKfqNX6jEvNv9B1B5ehW6c68e1m/UbHa
HaUzkuUomxwrWWA/j96mkPNoZ8vQ4vfOUnOfeeSSu3zB70wZsr4jorkWOo+O
a2tGmNqWIX4oNz6aPY+0n8i9VDIuQ8kub3y5O+fR8x9zLv7kMhRxj7/5/I4F
NFZ10nHHi1LkZkx1tRL+g8jKDQGBcqXoJe/47IbcH6TO9Ce6TqwUKfRtDb2j
8Qf5CnBcZyaVomHP5jQ2sz+oKDukunntJrK9MlLfGP0H99c572nPTWTRr8Kp
MvcHRRydtXycfBPpna2vZHyziN6s3j8USXcTdW3ssPPvW0R3Jq/X6i+XINeU
p1yDo4vIyBsK/82UoKtlL90f0i8h9vSVKepgCZoY+CDnv30JyVanHrd5WoJu
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
340NOVBv6NlE+H+GkXiI
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.834729328085142*^9, 3.834729481904522*^9, {3.8359758642150373`*^9, 
   3.835975883665785*^9}},ExpressionUUID->"6af0644a-7ad5-40de-93fd-\
9123b670ac8e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "12"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "1.9"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.834733102981226*^9, {3.834733143030979*^9, 
   3.8347331451050253`*^9}},ExpressionUUID->"34c88431-11d5-4911-9557-\
8244888e8db0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{"pthreshold", "<", "p", "<", "1"}], "}"}], "/.", 
  "pareco3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q", " ", "<", "qthreshold"}], "/.", 
  "pareco3"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]ww", ">", "\[Sigma]wwthreshold2"}], "/.", 
  "pareco3"}]}], "Input",
 CellChangeTimes->{{3.834733120237764*^9, 
  3.834733178751751*^9}},ExpressionUUID->"ca427ac7-740f-46eb-afd5-\
29e917496276"],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{{3.8347331284350967`*^9, 3.834733179119862*^9}, 
   3.835975864284182*^9},ExpressionUUID->"82fd2859-0012-4c8b-8c5c-\
4fd0b9708470"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8347331284350967`*^9, 3.834733179119862*^9}, 
   3.835975864293375*^9},ExpressionUUID->"8c65dae5-e4c2-4f49-af57-\
829454c0844e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8347331284350967`*^9, 3.834733179119862*^9}, 
   3.835975864300157*^9},ExpressionUUID->"fe109421-ade1-47fb-8641-\
bc857c70495d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.45"}], ",", " ", 
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.13"}], ",", " ", 
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"{", 
       RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco3"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8347337483729143`*^9, 3.834733777334539*^9}, {
  3.8347339464215317`*^9, 
  3.834733947659724*^9}},ExpressionUUID->"ebe11c4c-fbd9-41a3-a951-\
295b036d0d99"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
q6ti2McN/w+cRF47
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
xw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/9//H+JU1XQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 10}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.834733755987884*^9, 3.834733777753068*^9}, 
   3.834733948466907*^9, 
   3.835975864418281*^9},ExpressionUUID->"9d0b966d-d948-4c18-9b67-\
f05d689dd92b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"parecobeta", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.836010447841221*^9, 3.8360105079546957`*^9}, {
  3.836010859175226*^9, 
  3.836010859787203*^9}},ExpressionUUID->"3bf6092a-ff87-43d8-b255-\
9ce895d3aba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "/.", "solsres"}], "/.", "parecobeta"}], ",", " ", 
     RowBox[{
      RowBox[{"Iww", "/.", "solsres"}], "/.", "parecobeta"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "/.", "solsres"}], "/.", "parecobeta"}], ",", " ", 
     RowBox[{
      RowBox[{"Dww", "/.", "solsres"}], "/.", "parecobeta"}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"\[Beta]ww", ",", " ", "0.1", ",", " ", "4"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "4"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836010513797358*^9, 3.836010616536696*^9}, {
  3.836010649727359*^9, 3.836010657297193*^9}, {3.836010740443453*^9, 
  3.8360107915838213`*^9}},ExpressionUUID->"06e5c5cf-5171-4e35-8b18-\
f78c55efe979"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV0Hs01GkcBvAZhkF4RbUJtQqhTByyonzfw3QxHZlUdCONpdKu6KSLCGNR
W82m2t2hNG1aaVFKGoadSopqKy3rduZ9I6PLrHLJhEbsb/94znM+fz3nPPai
PaExeiwWK5jJ/z1xJ7E/P68auOf/fN41qYKpoX+lT7yphlURihtfswg4qJ0s
Rd4KkDyWHo1iHGSk8nJpVkB6oOH0LsZnhSuS5aa1cPfacDFlE3DtnmXQkqYE
NOfynQ59AgvYopOGFfdAMOpf28AlED53SiHkPQQbv3uSTEQglzZnbDzfBBdD
Q4oUcwicOF05pM39B0pvaN/78AhczXOvK4nvhIabYVdUfgRYT4ULu2+9hFWV
1qPmAgL7PcUlqcJXUJUl4zeEETj2C08i0KnBNOJTsMG3BNwK518szHsDfPaQ
a0YCAdvoOMt+Ew3weQmNtw8TcK6eXPu5vA/Uwpjy3TkE0uro4IhLP1CHiEMf
cwnc8s3qwk8G4NPLwLJ/zxHw3lZ/rddmCGzm7y/ZWkQgMsK5TD/sI0jOoNkP
rjN/FC0+nfHHMAw//tlVVk3gDP+d5MGoFrYZuw1o6wh8U3uvRuw+ApwTJqHR
TwhojgQ+l4lHoWTZG8+lLQQCbDSW3soxyN6wyMxPRaBYz3fZwmk6aD6Rxpep
CbT5u6e9jR6HO3FSh7w+AiXrVw/aFXyB49xBedNHApJKJKgYmAD/H9s8d+oI
TDmY8q5rBgu7ri10DdKjUAH1S1bfZOFfw0X724wo9JRGpfZuZuMVAXzpXUSh
NxttWjrKxlxftoPBDArxhlbO9y/p4VifS3KZLYWt5e/03AT6eG9r8p6+uRTs
Gv5OWvdaH5t/xYm97EwhJtNCdfUnDi6ISOwo41FIK43qrHUzwN71uw+6elGY
mMxU32w0wNLU3x13LaHAGdN1tycY4oLOrnlafwokMvtAjRkXVxks+o3Fp7As
Lob1TM7FvODkog1BFBJehdkXhBnhax0mZ93XUOBm2awJGTLCRr28jNZQCo5P
veI9zhnjGsgMrgunMEMc5dTkY4I/2wVO899KQaLqenGhxwS/PxiwbzyKQtx2
r2PC41Nw7lnFSE4MBet1+e3K+ab4GWviVOkuCiGa9TYRL0xx/Xv7VIt4Chs/
2H+S7zHDnT0jMy33UnhgW6fSmpjjW6dOWmmSKFQP3L4dXWGOT+fXb584RCHd
Q+ksESJsvUktl6dSqEwd6F+9DuFG3Y4FjYw1j+bKjcMQnmYsKmhnvEGUszxr
C8LTsSJljLHrGaEoJRbhBke2i98RCs3Dr87FpSCcQ2f6KBk7VXHRymKEy7Z/
8LifRmELx7eVU4Kw1d6r+5oZnxJ+V1BXhrBY2V3Zw1j3tmmBfwXC+j2PPTnp
FJqs81ctViKsW5plt5xx8uGF4nktCB9xflT8kPH1hsig7laErzglNrcyVlvl
Wsg6EI5X5I2/ZhxSqr0w6yXC4we+F3AzKDgQZc1UDbNv69iykvEml0Hx8z6E
66VtQ+GMJUnzBCf7EfZYb2qxk/Go2dF2Iy3C5lu+LD/K2G2zQvZwBOE1FopI
KWNRUV/sD58R1rSNJRUzlg7N5gV8Qbj8de3xKsZP/ddqJycR3pGof7GR8X8R
U1Op
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVyn0003scwPGNMc3DTyndkrpqeSiKQjc3Pt8jbjdOWalJhVpHnataVLpu
5WlSObLb0tNE7uX+ZjPTbGwWR5ke5EayEs4oD/OwlCXzmLndP97n9c/bgXFq
d7QRgUDY8b3/NTyKG8nhKmDk3HkFkyyH+btfphgGFJAs6kw7aSIHap/jAob3
Q+C6ZxedMJbDdjO1p4vqIWD9d6aPz8ngJu2X83KLatDQE18yJ2SwpnupyZvk
GlhhlGiePiCDtURGlqm0Fjh7F9O/PpdB2ErzQuA+g6sEjldLhgw4XarUfbnN
IDZv0mWRZXDtRsWonvMWql4nflueXQECrrtSyOwA+3FTVebqCiA00ly7y99D
ljZpVbK0HM5tZAkTaT1w/L4iKGRHOWTcXscOmumDK+oci089UnArdPqrkDsA
5A2elQVJUlh2JGbBCEULC6eXhN2iSsFZMbdrWjwMLut1+zOeSSBZ2fVlwmUE
iAXt8bo4CZT7pH9A/+rg9rjKot1BAt5RT0o1dqNQH0Dxn2gsg8gIZ5Ex/Ssk
NZ2pZLDK4CbP60Zq8Rj0N3/M8t1YBtkBQ+ynk3oILE0hbRoUw6bq2iqW+wS4
LN0Ul/aPGLRJW1/lsyaBFjqEYiPE4G+nXeBdMwWzUbECT3sx8I18fF0XzoAP
v+f0LekDeOfnnjx45BvsmL3gytz4AIR7gr/Y583CbxpjZcKjUmBXYEFSnQFO
Dy06mBRYCuYJF4c+2BKQocAoa7JVBFJ4sjlYQkD+/vGzBSdF0FtyKFGzn4gK
p47ruIYS0FzGwrdMElHvPD+6hlsCTFMb57oCIyQXecc3rC+Bg+IhI7cgY1Rq
4F+70SAE++ct8aH9xshc4qQQM4UQnWatFvxJQsqwb7lllkJILjnUUe1mgogC
MWRUFINhLq1PUm+CpqxSnQMOFwNpaqa7LdYU/fDpThPVrBg6Iy//XmVJRvn1
1k62cgH4xkQTmuRkZBPnaxVzWACxPXSHPLoZYqeF8I7ZCICcbrczZNQMFUeF
vq2s58PqRk+mx715iINaIov+4IMt65Bj808UVJ2Q8iLPgw9s9YfX93spSDVg
7nhUUwQxhz0zaJnmaKw0ShaVWwRLQnPaapwskKF1zdum8CII0e6xi3htgVKj
V1wKsCmCfZ8dxuWnLNETkk6laeHB02VKtZ5iheqObSZRb/FAoZPJjkitUGbj
huG7oTxI8ahxZtMwlDTkfaZuMQ8qEnUjwaEYovysXlFlywPti5XyeXQMcfZ5
aSSLeLCXcSUw/QCGhpfrFQU2PFiTTWNcPIqhOuugzDSMB6qxnnsxFzHkER3Y
sJ3MA8dKMraNj6Efw1h/D47jcIDk00oSYuh65GRErx6H67QTeUoRhprx8g1d
YzjMDDav9ZNi6PGJUeqbURyal+T86lWDoSs7qa61n3E4f8GVteoNhuyIp5T5
/Tg8eB65vbsVQ4XJ5cRcDQ59Nhzr/HYMsWMo4Xf7cAgp0d9f+h5DVx07Qjg9
OFA7a6rmazHk+VgYcakLh3CXL6xXwxh66rg4IrUTB3b8qqCsEQyJghPOJqlx
mLS82mam//6nW31M6MDBbf/D/GcTGJLotwSda8eBwRs+emkaQ8Hq0NozbTjc
HV2+zn8WQ2cHQ2hx73Bo9Nuln5vD0LYGtwlmKw7/AdFPUVQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV03s4VHkYB/BxH7eOW55QSjINIXKrFu+v2q1QmdBsUdLM0q40XZVtFaZU
ukyFtpFFu3osYRUxTTPNzDmnoraWEknEiDC1jVGTkY09/fE+3+fzfL//vi6c
XVGJ+jQabS11X3NSvkd9uUAMeU9bSgp7JGAd9ShzclAMbF2Cb7tSAvP6GTac
wNuQ+/D9N1b9Egijd/m7t96GGgu5lD8kgXzWykMiCylA9rq92zQS8FA6Gj3L
kEH2tcY2IwMpLNDjnDWuw6HM6pHsrZsUvp9rXgoF96GwqehlQLIULrxqzdr4
WwsUXrRKEY9J4Uxu/aj2Qhssri58FLX/DlQU+BCVvE4Y+iQynxi8A7THLE/l
zR640eKOSeNlcMCPX3mY1QduG2aFyBtlkPOrtyB8oh+yDNb41PrJwat0/pXS
gkGIT+Hv8hXKYSY32UZtpoLZJS+wRI0cmOKp9Z+vv4MG6Y97CYYCMohXmjF3
NfDuzFknj1TAzaXZvejvEfD8vKrK44ACArfe/WvAaRQOdItwvWIFxG9hVhuw
P4BfEI95DldAfllAbta1j8BNUpjveaOAvG+HBfd0Wpg+Hsu1M8UhSIpL+D5j
MGe7W4w1EwfVkRXNJXwdcMpHv0SvxmG5k8omUDYOMXTn9tBEHMr1l4Z42k1A
uzBXEXsUh+ehPhlD3P/A5uRaprwEh8qYCM2soi8Qi5eXgBgHQT0WXjcyCe0m
1c+VrTiYp6UP99rTkEkY/VTHWxzq4O6SiFoa6gkvDsvRJ+B1VcLhgVg9dMUx
WLjGkYCB49imYJ0esk0dfdawkACesS2T/EMfZWaGOriuJGDz9WF9r3ADJJwR
0PtDHAGzGp+mRr8xQEEbDU3zeQQkHrXqqjhniDSLJueI+ARkVCV0Sr2MUI5T
MFeVT8Dk1NH+2iYjtLkxxX5JGQGG4xPKjt3GyCf9RBbvFgHd8ccPSixNkLBN
kjTUREBIciLtH5EJmn1kp1NwJwG7+9guRWw6YjVN91MPE2CS7bQucpSOgjyX
owEdAW6P/Xm+haZIvENwsIJOgj0/gdGy2Ay5/p44/ZM9CYKu3ifFr83Qsktv
XhgxSEje5p/DOm2OYl46n+f6k+AQfblDNt8CLfSuGd65jIRIVYzTlicWyI+t
0vONJGHje5dPol2WyNF1RX9tHAn3ZhJdWrNpKODpC48/t5MgHmlo4NZNQx/0
U6+G7ych01fGFLAwlHtwEeNBBgn1h0fUEdEYWjCP0zZBWfVgrsiUjaFrr4wz
vDNJ2MA58V12HIbyHOrwPMoeeSxOehKGbiprDOOzSGj92FeYnI6hvn8N+Bo+
CYxbJtiqcgzpdmxIsDtOQpzh0nbDSgxt6+zbupLyeVZKEVGNoZ869WLTKE8M
tSwIrcOQpa0upItyi8Pl1QEyDE1qu++WniDh0C+efNdnGIrYGt3sm0NCTWN8
mLKd2n/gpHEp99tesKJeB+23tpl5kXJklbbYsQdD2sSoaB3led0yibWK6iv2
ZclOkbDJXcNvfoehn5svTakpC1Jdw8+qMfQwmZPmcpoEneXJDroWQx773m86
Rtkr9nbJ/TEMVQlvEPWUOWXvko59xhD3qjNjkLJw1Nl7+RcM2e0NPDbjDAmP
Q9drp6YwxO4e7wqj/D9gKkvg
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVx30003scwPHNJsz089CpUPdEpXmYo5N068bne+tKcbuWh5FKTA83Fekc
dIQxUbpZm7ky0jD2U0Oy2BVNJEqJIreEkJIlTzVPK7vuH+/zPi8LVrjXUS0C
gbB3sf+/UBcxni2sBrzfM8sijAdGXs8SFoar4ZLZBoO3Z3mwbsjKmOV0D9jt
azoF0TzYo9vjaN1xDyqCZv1JiTzIYOyKkVNrIZiS92u3gAc2A2banWwFbGWT
bx2v5oEtkZW2RFYPzATlbSKZD36W+mIQNoFl2Zo9W6/xgd/Xkeh/vR3OMU0F
gtZ0uJJeOaXivwK9uWL1myEB3BQ6NEjDusFXasqBLxlAaGXYDdx9B66V870k
rUyI2sSRxjEG4XM9jeylzoTUTHuuu3oIkskdz2mELKCLN+SJhcPgtinYa/tM
FqwKCTUepyhhpOuIXK9LCLRqzb758lE433kiorguG9gNfZMz1uPQRx/uFabn
wN1tyf3o6QSUlozOfw+4Dk6HG8s+mE9BeZmVRxo9FwIP0UpJzK8QnOb6oO9z
LmRINqcn3voGD+yWR9TLboDgtxHuo1kVVKVSQh5HiGBLbX0Nx2EGEqtSg7uX
5oEyfmebiDMLlpnG/l4n8mCHudLYSTEHVNWc866aPCjW2uZst0wNBtrlshij
fPjXxYH9KeQ7vBw8rMwKyQepj8fk6twf0Hi25Bm1LB+4lZi7bGIBnnj8HnXh
ez7on4sd6V9OQJbaTtp1OwtABo1bPSoIiGRiUaC4WADvS4LiPgQQUVeFm+Ry
WwF8SMH2b58lotOGd9Y9NBRD2BIT2sMCLeSw0j/nb18xHCwf0aK7k5DjU++3
vtfEsLr5ZaT3RxIinSUkmnWI4WiSYc/Nq2R0Us2z221cCOySoO5aujbqf3Wm
scmjEBY0SUMVj7WRYcapmmecQiDPqQden1mCpv9kmmL3C6E3MCW6xkAHRWdF
asymCsE59CjhuVwHhdl8FP1iUwRnBpkWuUxd9FQ13HLkUBHoJJv/4Tmli1jk
Fv5JbhGsb3UM25ijh5pbWoyCGopgOSfIqv1nCrIlhVvXTxYBt6f/xY33FCSl
xwi/rJVAaLBjKuMvfeRy+qqpvo8ETL2zXys2UJFGzGNNsCXgqfQxP/SCilbc
aqTFl0nAf8xiWh5ugD5TA8aIbyTwaFVDj4qyFL2t40Z2EHGonqiqCpEtRfVu
VBGdjkPCRgWNy8DQHZN0i8c+OFTGTYx7eGNIHGW7PtoXB+UTS7keE0N1xaMr
rZg4+LIuuiYfwNBN9Vh7kh8ONgIGK/YYhoht9kkuATh0fBvMCY3F0JrUyKny
wzhY/aODuRVjyKmij3I5FIcD5G1dZCmGjsemrthyEgce41RuQymG/E6Ilg0t
Wv2p3dZFhqHdP5b1O5/God00e/dmBYZgc3DtRDgOMeftOGs7MXTp694r3pE4
3G4O3DPQhaGx++I8zaKHTPiGojcYmm5OLpJG4eBZorph9g5D/FfTCaRzOKzr
VdQYKTGUdrApviIGh/3Wk5y2UQyFl8hXBJ7HgRu51j1tHEO1uGu+XiwOswaX
XuuqMCRtg5SgOBzoAfdETTMYmjQuH9CPx4ElGT12YR5Do/aP6PJFZ039ZL/j
B4Yo9omhLDYOrS77VBoNhvabfbxmkIDDf+ccQ/I=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
   
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.836010564574959*^9, 3.836010590838833*^9}, 
   3.836010634625041*^9, 3.836010686532259*^9, {3.836010739459951*^9, 
   3.836010757459742*^9}, 3.83601080039069*^9, 
   3.836010866825646*^9},ExpressionUUID->"77874be6-9f6e-45c9-8682-\
6cc6bee26226"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dynamics of both mutant and resident", "Chapter",
 CellChangeTimes->{{3.8359329256281443`*^9, 
  3.835932942947076*^9}},ExpressionUUID->"e6a00686-c60c-49d8-ada5-\
0d9897db254a"],

Cell[CellGroupData[{

Cell["Equilibrium and stability with simplification 1", "Section",
 CellChangeTimes->{{3.837748276760783*^9, 3.837748293951614*^9}, {
  3.837749144918141*^9, 
  3.837749145130768*^9}},ExpressionUUID->"aa4384b2-5b3e-48bd-9fdf-\
344f6dc98fc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simplifyCond", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]ww", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]wm", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]m", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Alpha]mm", "\[Rule]", " ", "\[Alpha]"}], ",", " ", 
     RowBox[{"\[Sigma]w", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]ww", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]wm", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Sigma]mm", "\[Rule]", " ", "\[Sigma]"}], ",", " ", 
     RowBox[{"\[Beta]ww", "->", " ", "\[Beta]"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "->", " ", "\[Beta]"}], ",", " ", 
     RowBox[{"\[Beta]mw", " ", "->", " ", "\[Beta]"}], ",", " ", 
     RowBox[{"\[Beta]mm", " ", "->", " ", "\[Beta]"}], ",", 
     RowBox[{"\[Beta]m", " ", "->", " ", "\[Beta]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.83715770219945*^9, 3.83715771739647*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"133c35f1-8f68-43f7-9de9-ffe934c06eba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"posCondSimple", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Beta]", " ", ">", " ", "0"}], " ", "&&", 
     RowBox[{"1", ">", " ", "m", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"1", ">", "p", ">", "0"}], " ", "&&", " ", 
     RowBox[{"b0", ">", "0"}], " ", "&&", " ", 
     RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", 
     RowBox[{"\[Mu]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"1", ">", "q", ">", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837157799825955*^9, 3.8371578350117607`*^9}, {
  3.837157871541103*^9, 3.837157897081986*^9}, {3.8371584518292017`*^9, 
  3.8371584973809547`*^9}, {3.8371609226989117`*^9, 3.837160923967864*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"96942fae-a4a0-4d16-b88d-0ff66e08636a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"condFixTotalFull", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{
      "1", "-", "Iw", "-", "Iww", "-", "Imut", "-", "Imm", "-", "Imw"}]}], 
     ",", 
     RowBox[{"Ds", "\[Rule]", 
      RowBox[{
      "1", "-", "Dw", "-", "Dww", "-", "Dm", "-", "Dmm", "-", "Dmw"}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8377606629406443`*^9, 3.837760705490981*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"9d6a527b-ad84-40d2-8d80-876562372c21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solgenSim", " ", "=", 
  RowBox[{"AbsoluteTiming", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dIwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dIwwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwdt", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"dDwwdt", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"dImdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dImwdt", " ", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"dImmdt", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"dDmdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDmwdt", "\[Equal]", "0"}], ",", " ", 
         RowBox[{"dDmmdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
       "condFixTotalFull"}], "/.", "simplifyCond"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww", ",", " ", 
       "Imut", ",", " ", "Imw", ",", " ", "Imm", ",", " ", "Dm", ",", " ", 
       "Dmw", ",", " ", "Dmm"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.83593295523976*^9, 3.835933032574181*^9}, {
   3.835933091055862*^9, 3.835933098635519*^9}, {3.8359333531133738`*^9, 
   3.835933419551262*^9}, 3.835975795543391*^9, 3.836011387596251*^9, {
   3.83601142157415*^9, 3.836011421742716*^9}, {3.836988736330394*^9, 
   3.8369887548413887`*^9}, {3.836989292013311*^9, 3.836989297940296*^9}, {
   3.836989868035618*^9, 3.8369898875575657`*^9}, {3.8371518958641787`*^9, 
   3.837151906817089*^9}, {3.837153317005192*^9, 3.837153317807252*^9}, {
   3.837153351512772*^9, 3.837153366489431*^9}, {3.8371543888288383`*^9, 
   3.8371544437063*^9}, {3.837157713673081*^9, 3.837157725211254*^9}, {
   3.837760696771612*^9, 3.837760720535639*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"13aad284-f933-41d3-9383-67284d4c9fa4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.837762707821694*^9, 3.837763241660158*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"3a195aa1-f546-4aaf-be12-da3c25c0c63c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Useful Functions", "Section",
 CellChangeTimes->{{3.837768215771454*^9, 
  3.837768222456252*^9}},ExpressionUUID->"04dddd8b-fc73-4776-80d2-\
5bbff9b9f104"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"followSingleEqui", "[", 
    RowBox[{
    "system_", ",", " ", "commonpars_", ",", " ", "followpar_", ",", " ", 
     "variables_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sys", ",", " ", "cp", ",", " ", "fp", ",", " ", "v", ",", " ", "sv"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sys", " ", "=", " ", "system"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cp", " ", "=", " ", "commonpars"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fp", " ", "=", " ", "followpar"}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"v", " ", "=", " ", "variables"}], ";", "\[IndentingNewLine]", 
      RowBox[{"NSolve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Thread", "[", 
             RowBox[{"sys", "==", " ", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", " ", 
                RowBox[{"Length", "[", "v", "]"}]}], "]"}]}], "]"}], "/.", 
            "condFixTotalFull"}], "/.", "\[Beta]relationship"}], "/.", "cp"}],
          "/.", "fp"}], ",", " ", "v"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FollowEqui", "[", 
   RowBox[{
   "system_", ",", " ", "commonpars_", ",", " ", "followrange_", ",", " ", 
    "variables_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sys", ",", " ", "cpar", ",", " ", "fr", ",", " ", "var", ",", " ", 
      "svar", ",", " ", "en"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sys", " ", "=", " ", "system"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cpar", " ", "=", " ", "commonpars"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fr", " ", "=", " ", "followrange"}], ";", "\[IndentingNewLine]", 
     RowBox[{"var", " ", "=", " ", "variables"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"followSingleEqui", "[", 
        RowBox[{"sys", ",", " ", "cpar", ",", " ", "x", ",", " ", "var"}], 
        "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "fr"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->
  "In[131]:=",ExpressionUUID->"c94a51ae-561d-497f-baa4-24cd97eaf657"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical analysis without simplification", "Section",
 CellChangeTimes->{{3.8377482312539387`*^9, 3.837748235072781*^9}, {
  3.837748305942564*^9, 
  3.837748314443451*^9}},ExpressionUUID->"4473a29b-cce2-4b01-8da4-\
b4d75b755c57"],

Cell[CellGroupData[{

Cell["plot style function", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8377627426619263`*^9, 
  3.837762777187093*^9}},ExpressionUUID->"d1c9025f-63e2-4027-bfdc-\
e88c9e5979ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myplotstyle", "[", "variable_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "v", "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"v", "=", "variable"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"v", "==", "\"\<Iw\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", "\"\<Iww\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", "\"\<Imw\>\""}], ",", " ", "DotDashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Im\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Imm\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", " ", "==", " ", "\"\<Imw\>\""}], ",", " ", "DotDashed", 
       ",", " ", 
       RowBox[{"v", "==", "\"\<Dw\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", "\"\<Dww\>\""}], ",", " ", "Thick", ",", " ", 
       RowBox[{"v", "==", " ", "\"\<Dm\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Dmm\>\""}], ",", " ", "Dashed", ",", " ", 
       RowBox[{"v", "==", "\"\<Dmw\>\""}], ",", " ", "DotDashed"}], "]"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.837762777187524*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"3eaa7b03-cea9-4324-a414-6c26bcc40f92"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"namelegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Iw\>\"", ",", "\"\<Iww\>\"", ",", "\"\<Im\>\"", ",", "\"\<Imm\>\"", 
     ",", "\"\<Imw\>\"", ",", "\"\<Dw\>\"", ",", "\"\<Dww\>\"", ",", 
     "\"\<Dm\>\"", ",", "\"\<Dmm\>\"", ",", "\"\<Dmw\>\""}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837752656491519*^9, 3.837752664613141*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1b5558e5-6674-46d6-9c85-0a1e4fb90b0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]relationship", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]ww", " ", "->", " ", 
      RowBox[{"k", " ", "\[Beta]w"}]}], ",", " ", 
     RowBox[{"\[Beta]mm", " ", "->", " ", 
      RowBox[{"k", " ", "\[Beta]m"}]}], ",", " ", 
     RowBox[{"\[Beta]mw", " ", "->", " ", 
      RowBox[{"h", 
       RowBox[{"(", 
        RowBox[{"\[Beta]m", " ", "+", " ", "\[Beta]w"}], ")"}]}]}]}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.837749035298297*^9, 3.8377491251930428`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"7fb95c1b-b580-4711-be49-093e4c22cce7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"odes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIwdt", ",", " ", "dIwwdt", ",", " ", "dImdt", ",", " ", "dImmdt", ",", 
     " ", "dImwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt", ",", " ", "dDmdt", 
     ",", " ", "dDmmdt", ",", " ", "dDmwdt"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Iw", ",", " ", "Iww", ",", " ", "Imut", ",", " ", "Imm", ",", " ", "Imw",
      ",", " ", "Dw", ",", " ", "Dww", ",", " ", "Dm", ",", " ", "Dmm", ",", 
     " ", "Dmw"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Imut", "[", "t", "]"}], ",", " ", 
     RowBox[{"Imm", "[", "t", "]"}], ",", " ", 
     RowBox[{"Imw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dm", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dmm", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dmw", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"odes", "/.", "condFixTotalFull"}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"var", " ", "->", " ", "vart"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysfull", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"vart", ",", " ", "t"}], "]"}], " ", "==", " ", "%"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.837748345092833*^9, 3.8377485573774652`*^9}, 
   3.8377511042776947`*^9, {3.837761609423707*^9, 3.8377616101590853`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"fdf5dc8a-9843-470c-9f5e-fd79ff3005a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"par1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "0.5"}], ",", 
     RowBox[{"k", "->", "1"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"m", "->", " ", "0.01"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8377489208416443`*^9, 3.837748998649227*^9}, {
   3.8377506588239613`*^9, 3.837750736865934*^9}, {3.8377510563697844`*^9, 
   3.837751061498374*^9}, {3.837752850744109*^9, 3.8377528509322023`*^9}, 
   3.837763768760955*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"01e2f6ca-5ef6-4da8-98ee-d3048f34991c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "0.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Imut", "[", "0", "]"}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Imm", "[", "0", "]"}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Imw", "[", "0", "]"}], "==", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "0.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "0.1"}], ",", 
     RowBox[{
      RowBox[{"Dm", "[", "0", "]"}], "==", "0"}], ",", "  ", 
     RowBox[{
      RowBox[{"Dmm", "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{"Dmw", "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sysfull", "/.", "\[Beta]relationship"}], ",", " ", "init"}],
         "}"}], "]"}], "/.", "par1"}], ",", "var", ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "%"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "namelegend"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{"myplotstyle", ",", " ", "namelegend"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.837751220751849*^9, 3.8377512633903646`*^9}, {
   3.837751394093245*^9, 3.8377514430843353`*^9}, {3.8377515293313723`*^9, 
   3.837751529516987*^9}, {3.837751589165402*^9, 3.837751598533842*^9}, 
   3.8377526495023203`*^9, {3.837752765512733*^9, 3.837752782624146*^9}, {
   3.837752837132258*^9, 3.837752842484542*^9}, {3.83775289197228*^9, 
   3.8377529311990767`*^9}, {3.837759593537273*^9, 3.837759595594656*^9}, {
   3.837763263481583*^9, 3.837763264810131*^9}, {3.837763309765959*^9, 
   3.8377633292348337`*^9}, {3.837763769858272*^9, 3.837763777957706*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"62596385-484f-47ce-8470-c7b151d45439"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
zivwnqbTV/1/8fbcgA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
A0yrc5gXMypXXVTsPb24uOr/A3vrOr8=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxF0Hk01fkbB/BrvXaypUayVQgh6x15nimkTRI1REnF7SL3fkOISBKTbDVU
JE225GfpplCKFqHFZJTKNCJbqexLsvy+N/dcfzznc17nWc7nvNU8/R0P8FMo
lDqyOK964vTVTJUaK0rhjQ6TvT5Wt0W0l/rRL4MUbPQS+c8WaoKLsrXoxbA0
nKW3pNcJzpp2ukkm3IbRcK1TafVuUGvA8ham34dPR4gkv+K9EKYwWz6b9RCS
mrKEaMR+SE2xsZo68wTYbw8m/vHYC4ql4x9OhD6FCZveRmoVHerim+xGvRsh
OK4uKY3OgIFoiZ7ggpeQtDL88ZJXPhD+sFh7POsfoAzUGStJ+oEY/3bfwLRX
EN7V7K+06BCk4ljR8JkWWGzjcF+N4g8aERcGWdFvIQYteiae+ENJlaXxQGgr
UD/00kpoTLCcags6xHoPGXbFQ5oxTKinnaj44t0Gw2beoTNPmHDdUu6YSfEH
SL+bH5bOx4LB1v2XAwraQXvXRUV1YxaYH71Vzc7pgO7eRf1xHiw4tlikYyjr
I8juHwvJPsWCRxUuAkYZnVAqd+yMRgELxFyua7LSuuBKVOyDzDoWOExM2ZSk
dMMbDeY/aR9ZkJZm791/pgecrxzXO/aDBf+ZZsXqx/WClpTIh1IZAjRfD17z
i/4EcQcXDZ3UIIARuO5pYcRnwHvxYWuNCSiR//NLX2gfvF2qYbl8HQFj7G7J
lUFfQCg/qM/bgYA1281XMVhfoaKU6mXmRkD0UJzDNd9vYFchmnfPi4CG5FZW
r3c/CDptTlNnEhB7PrX+rOEA0C48zz8RTIAuHVxXFw/AXb7OyzMRBDSa9X5u
0h2EmufNZYUxBBDU5KNEwSA83U3fkR1PgEKLhYSs1hDUvkllfE8moDy3I6M0
Zwj0RNnHq1IJ2BV0Wm+bxjDU90RZUdIJmLExvjeQNQzvxHNSGjMJuKLw3j5J
ZQQOsyNemf1FgHXXybZVGSPQ2tAuYJ1DQO9NfWbjolGQgT2T03kEnI5uofin
jQKj/JHfoQIC9J0ik6UUxmBwdq/OpUICmjS01YtSxkB92l4vuYiAwOGXN7bI
jINfvlCOQwkBSg9D1309Mw71r5iq7aUE3EnRaI4XnwApVfe09WwCdns+268b
NwEYYUXE3iSAzyhw9Knwd9hL0y/IKyMgm08lxif6O4hKmD/Ov0XA+pe1iuL8
k+C3ZXww4TYBn7P88woiJkG/1ZXPvZyABKaS+cbpSXhc1x6mUEGAIdbUfQr9
AUMj8XmVpJulGS5xEz8gM+fiKftKAoLbZD9rBU2B/nOXb02kfym+E1o3PAXN
QTYhG+4QcO/YfnE6axpEjQYvsUnvtZfMoPZPw9Op+FzZuwQIqtzSzfOdgZzm
8mpv0nlfd1fZfp6BQcbaITbpjVVU+27vWYgkxjUnSBvOeo4qDszCxy1v5GhV
BMSr7nmhYUnBmryJ5ADSkTUS6paRFPwW/oCVTzrAszLQ6REFje8mhr8mTReg
1/uK8OHbZVudZ0m7ZSssObmZD72OKCdo3CPAweYh81ISH+bcMbi5jrR1N/NR
WTMfOjZ/NPUgbX5KRemFEj8umF53PIS0rtYzn243fpRn240kklatD7k/k8WP
5aFi76+SlmOskFvYxY9Du6ZiykgLi7/yWqUtgK5BvsaPSU9ej6pc7yeA8b6O
v/xD+ttmAymPUgFsialltpHu+Pp+b/CoAFZe1PD8TPp1wumyJAtBjHrlozBC
umGVhei1cEG0WnW4ZIr0vb+73WpqBNFdItJZ8D4BN1jnSt4KCeHjkLAl4qRz
ZdcKDm0QQq8WFbUFpC+y+3eKJQjhWaPyYEXSCU6Xrqs3CWGaU4fpL6SPj26c
pSkK44qJdT5LSQekTjhudxVG84iCZRqk6Wa5uT6ZwtiUcjBgOWm3N9snT3QI
I6Ux3VObtEMIn33GcioGb8YfK0lbLy6+cpNBRac6yQ36pM3vuI0+K6KiXKmJ
kwFpXTexDV1DVDynY6tpRFp1+nbGtKkIZlp0Va8mLZ95YEDhqAiKL9xnYEJa
BOSs9e+LoGJgV5Ap6am26jRbAVGsLTp73ox0f+Shvt3rRfH8ooQL5qQ71JTh
yGlRvOGhF25B+vWD+pTERlEk2Py2NNIN+45058mJIWtrwRjH9wSX0ap3imF6
y8mUXzl55jSdeZMuhiOV8cqWnDxtI9sH2sQwZkd0GscXe/RMRDXFsXhbotAa
Tp6xrbFqdHHsCV5A5zhKO+5fi0JxXFEQWs1xUIOpgeOAODLsJqStSDN8Ok8w
jCXw44aqHRy7S6S0RAVLoKLMs3McO/wPVqbflcAfCwMbOLa2/3qMTZHEDzk6
3zk277/Y9NRaErUy+tSAk2eS3fLOWEmsZhbacKxqOBYy9UwSJx0uH+BYvunq
c/kFUigUMRLFscjhbWp6zlJIG1mcyfGU3GyAzQUpDJgKvMXxwM3COvf3UljS
KvSM405nV+UgNWkUD+r/j+M3Y1RmwgFpLGc49XP8NK3sYe41acwODZnm+K1v
bFmfkgxKb1NUQNLPJU1FBd1lMCi3ewXHOt++jxW6yOLusuV7OY59UdXpvEMe
d6n4+nDcVXS8acZREbP+OnqI47WJNtV5W5XwpfwhFsfC48rfBE2U8YDlEMHx
gVWTkoaSqtin1flz3qWweFZDRx3ba/0ZHG/RPjCouF4T5T2bf/YpEazVA7Ac
N9m9/+kbzeGB9eZamDTd89NBw9tle3bpYKrwnH+V1SkWjNBF9sycowW1Rlec
10c5+zl7/0i5lPO7AZoOd/90n0cVXWe7If7175z9a3tWF28xwhfc/h+uwsum
fY2xMnJuf0ymxiaNYYIVz+e878lRL0O6KfZI9v50infDrhceZsgymnMNddE2
HxdztDCZc0j8s8M63haotHrOhgsiUz8F0FCMO18p0qL1JIyGwlyvpejfyY6m
IR/XTv2tbXvO0XDScM5Bz820X7Np+IXru3H9dx4M0fAd13b8e9rTmb9iM9ce
w2t07X0tUZ9770rmY+XxM1ZINZ6z4O5LB19cABTj/pedQGttckR8zbVnupRQ
5Q7Ed1zL5nfoX3FFbOOaWfNHlL8nYi/XuiPvtCUIxHGus12OBtskI8qazvmc
5l2F8kZEQ64DKtc4XNr8G+pxfb8hZyhu11rU5Prgeouqg7+vw2VcZ+Qblvkw
rFGX6+ThquPMIza8e90FgUF0whaNuH5km3I+Kmo9z3xb33UkRtrxTPntFl9W
yAaeYxeOb2k6tZFnpuu+B+MnNvHcftx4P/y5mWf5sxfexV3ZwnOujE7Ik3R7
nmuIpTYrrm/lOVM1S3mNkwPPVWGTFPrf81bbRJ3S2LmN55uN2qffNs87vnbG
QNXdkeezhz8xPP6dd5iCirS6y3aer2kLNQR8mLfwCN+imt1OPOcZlB7L7Jm3
tmeB/bSfM8+tGypuOPfNu+lqqB4c3sHzBHubpfrQvGfLibKYQzt53mRgaxM2
Ou8n7qsO+hz+nWca1aGkrGLeRSXM8dnZef8fFny9bA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
M7+ysuH/A+zeLg4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
l1f9f5vtIvM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
zP+zKr1JSWXNXxeVuC+urf31/wCzvATT
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
/4m5ub/+H6tIkYc=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$327208#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 100}, {0, 0.5}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Iw\"", "\"Iww\"", "\"Im\"", "\"Imm\"", "\"Imw\"", "\"Dw\"", 
       "\"Dww\"", "\"Dm\"", "\"Dmm\"", "\"Dmw\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.837751603061467*^9, {3.837752777312943*^9, 3.8377527833148193`*^9}, {
   3.83775283771701*^9, 3.8377528522307167`*^9}, {3.83775289252642*^9, 
   3.837752931731682*^9}, 3.837759598081439*^9, 3.8377627883502502`*^9, {
   3.837763248854965*^9, 3.837763329881184*^9}, {3.837763771240244*^9, 
   3.837763778443287*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"be5c055b-c9aa-46fe-b695-43109d5f4ad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Following m values (frequency of mutant)", "Subsection",
 CellChangeTimes->{{3.837768847545569*^9, 
  3.8377688559535217`*^9}},ExpressionUUID->"96418386-dbe9-47df-8940-\
57e26d4edfe3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parm", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "0.5"}], ",", 
     RowBox[{"k", "->", "1"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8377636304046707`*^9, 3.8377636402400923`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"2308094a-25b7-499c-8303-7e641cb80e00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mRange", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", " ", "1", ",", " ", "0.001"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"m", "->", " ", "mRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equism", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "parm", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.837765397955678*^9, 3.837765416722497*^9}, {
  3.837766230660378*^9, 3.837766287071496*^9}, {3.837766548958805*^9, 
  3.837766565216857*^9}, {3.8377666187358227`*^9, 3.8377666412880363`*^9}, {
  3.837766673273511*^9, 3.837766677817938*^9}, {3.837766708933154*^9, 
  3.8377667634777*^9}, {3.837766798205943*^9, 3.837766846976729*^9}, {
  3.837766882569908*^9, 3.8377669143614798`*^9}, {3.8377671953542833`*^9, 
  3.837767250983678*^9}, {3.837767281989278*^9, 3.837767326902075*^9}, {
  3.837767445173098*^9, 3.837767462496298*^9}, {3.837768039408465*^9, 
  3.837768053528349*^9}, {3.837768101575293*^9, 
  3.837768102435726*^9}},ExpressionUUID->"af567a78-8a26-45f7-a35a-\
196430fbcd30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalI", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Iw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Iww", "/.", "equism"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imut", "/.", "equism"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Imm", "/.", "equism"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalD", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Dw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dww", "/.", "equism"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dmw", "/.", "equism"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dm", "/.", "equism"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dmm", "/.", "equism"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypejul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Iw", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Iww", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantjul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Imut", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imm", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypead", " ", "=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dw", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dww", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantad", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dm", "/.", "equism"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmm", "/.", "equism"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equism"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "wtypejul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "wtypead"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "mutantjul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Black"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", "mutantad"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Gray"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p2", ",", " ", "p4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837777686306567*^9, 3.837777723663927*^9}, {
  3.8377778339918413`*^9, 3.837777881058812*^9}},
 CellLabel->
  "In[1398]:=",ExpressionUUID->"a38faaab-1251-4be1-a50b-6c9c61661d4d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxF23c8lf0fBnAtJdrr0dakobRUytVT2js9Fe2iIUWqp0hRqCiV0FZSpIzM
UPbeDg4ODs7eI+2lfoc+z+t3/vHycrrPfX/H9b7umwz2OWyy7aylpSXpoqXV
/vXni9aqtfs2wOd0jan4qxp/vt+DqsAmUWmrGt/P26We9D8EhvvlXrGy/37u
iPyKxZH+fDXODoxeznU5iclX3XJOsv97/xnETYm23FyjhrN0gkmPSFdsfYyd
M8r/+/fusEAop3eBGgta1vveOXYRgvoNzdIMNVw7jueJuqiELTnJarxZqdd5
8uVLaLNbsupB7H/HvwLrGY4px1+qMT+h8N/0xz4wuR39bNlTNVw6Pu8a3t9z
0hv6UI3kkV7yjcnXMS1ueqs84L/Pv4m43J2Wqb5qPMwdHeN0yA/7DB1mXr30
3/ncwrLQBr9tbmqwv3V8IHxPDnYYd+a/6w2A06J7JSpHNYZNaxqnfSEQm8Y1
PE86rMbbjvO9jcDIDV3d9qlhbWPWfkTE157kWmz/7/zvYny/DOhsVuP+vY4X
7M3CR5Wu+e967qNb2IsLvkvVaCj/YskPfYDd/RceWGv+33g+BDuOXaZrqoZ+
1y29p8YFoXhSl5TCaWqkdFzvI1hfn2zoaajGtnkdB8TtfZXDzA3+u/5g2AQ5
BnzWV2ONqfffe4TBcAr1uhXV/7/xeAJs8h28X1cNxcb2EXyCn/KuBkO6/jc+
IXg42S6u6KcK1+zFP160hiB1vlmJyycVGjvG6ymexX8+MkmlwuTLg+vLvzzF
7CfDAlkiFY3fM4jPGy33alGh5MnS1x/aniFtbvDF6SwVjWcoFk3WWtHAUOGI
ZrT+6hqGI2OL71wsUtH4hiFil5uTUbYKPeueOi7s+RyVPk9Y5W9UNN7PoZMf
V+wUr8LL9svtG47SR7NXDopU0fiHo35A1ObXz1RY1X64wS8wIeCh8p8gFc3H
CzB/XR74MVAFWftwD3+JqU8/FN28rqL5eYmri2x6T7msgo9m9BhjIrBeezcv
z02F+o75igDb//CyXWdUMNpxI/uTYSSufNUx++SoovmLhEd8fqbPYRWKNEcb
Oi0K9fETWCP3qWg+o7B7W+yFWGsVDvspXTE7GsEOqrTFliqa32jUmx7wrVqt
gubkNJf8CtxdT97tsVDRfL+CQWcjiXKBCps1i0czpfCMvnTSebaK5j8Gtnss
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
Gb8a8shzGdoahQ9y3uSR5zI8tPM553s/jzyX4dz2UQ3bXfLIcxnMUm8mGFvn
kecyeAwq6qM9P488l8HfLlbF1c8jz2XYN9dkc/a3XPJchm8njZc8r88lz2VI
uO6bfjMllzyX4e4Rk6Lz93LJcxluHvphe9w5lzyXoXxbyZ1DVrnkuQx/ebnt
tZmXS7/vkeHXy495Nvq59DxYBouf3QoPf8uh3//IsGSkr92J+hx6PixDZ6N9
MRdScshzGRrCtj8MuJdDnsvg4L/OJNI5hzyXwXZ7b6dCqxzyXIZ/G+33Sufl
kOeaf797fuc+Q3PIcxlePV26dd73bPJchsWM7fsPNWST5zKccF1h9PBNNnku
w6DImgjm/WzyXAbzihJlv7PZ5LkckVmtrZbbs8lzOeYU6729b5ZNnsvR+z5n
tWhYNnkux9w1057P+ZlFnsvBsUmpuMrOIs/lqGUsLBSmZpHncjAEzv4WQVnk
uRz8HUazws9lkedySLZrR/XdlUWey6GyK9I6b55Fnstx94zRjHcjs8hzOZxZ
jUsO/s4kz+V4uDhgLr8lkzyXg1vVdYBNZiZ5LodNj+YaaXAmeS7Hz9xyj5MX
MslzOZ6u8RzVdV8meS5Ho8XLiLuLM8lzOWYmyCbNGJtJnssR3kn1mNElkzyX
Y40kcaikMIM8l0O9P0o+1yeDPJfjiLtOsv/qDPJcjltde3t91csgz+WIdvqx
9WB5Onkux53ufeZwbqST53I4pVwct39jOnkuR9McX8N3/dPJcznihXuXX2am
kedyLONNv2R4O408l6PXrwmy6q1p5LkCkvSjZ7z108hzBXrsmjxnZWMqea5A
Xf5FwwFBqeS5Avq3/TeLd6WS5wp8/8slI290KnmuQNvq9ceieW/JcwUMGgwP
PHn2ljxXoHiYfuSjA2/JcwV6Dp62NMzwLXmugJPzv3OSZW/IcwWWP/niyYx8
Q54r8OhW0uwfx96Q5wqc+pG0dorJG/JcAQ+TL5UHP6SQ5wooTBwLohJTyHMF
ch8PnfnrdAp5roBXjkzfan4Kea5AH59K9/SfyeS5Znw8Uu2NM5LJcwW2CgJ5
4ReSyXMFTrpbiKdaJJPnCriWR7ilaSeT5wqUCyJithYlkecKbHM2cPt5NYk8
V+AKR6iOWJdEnisQrlfR/UC/JPJcMz6+r0omMV+T5wpM8N2y6Pvt1+S5At2Z
N+yYVq/JcwU25oxdnzL8NXmugP+WuvfhLYnkuQJPxthbPw1JJM+ViNoc7BNu
m0ieK3En1vhKsmEiea7E3MDyrdXyBPJciazWmb++RieQ50oUrevjbuSUQJ4r
UV7Yi2czO4E8V+JM33rDiK/x5LkSFYeHWP18G0+eK5EaceT0Nrd48lyJ8Th1
JWNxPHmuhPNIxk0T7XjyXAkec2BgdFEcea5E4jnWvTm+ceS55vg5kU+LNsSR
50rUcEYlHRwYR55rfv4wldWXFUueKzFnbc9eeQ9iyXMl3jKvbfPcHUueK3E8
JDdj3dhY8lyJGbHGy8eJY8jz9v8XZfGha0QMea7EzNmuhe+OxZDnSizfsqJE
PCOGPFeiYcR0LabyFXmuOb5+dK3q1CvyXAkr3cYxo39Fk+dK+Di4Kw9eiibP
lShh7EF+72jyXIm0AlMDsztR5LkSz7+lPMgfFUWeK5E+JDDpUHgkea4Cv8nh
nIFJJHmu0vQt2ad3KRHkuQoHLz40qlscQZ6rIOmmb8AseUmeq6DlIhOIN78k
z1VYlx1wrn/zC/JchZSCgA+WB1+Q5yqcOL1nfeS7cPJcBcPsA/eGuYST5yqM
eNCn4UmXcPJcBbsvb/Xh+5w8V8G4LG/Ph8HPyXMVkvu7J6UHh5HnKrxImzPh
yaQw8lwFm2zjxPsJoeS5CpMHhNlHmIeS5yrsfVy9ubrwGXmuGY9N4lP9LZ+R
5ypsGtSTdajpKXmuwrainR61B5+S5yp0XtPmtv19CP19hwp/nfxZ88U1hH7/
q4Jnv0O+Ed1DyHMVYhVLo/+99YQ814xPXsAiqxFPyHMV5m5es8YyPJg8V2Hp
sp31NjODyXMVAtz3tQw795g8V2Fl8j/GQf6PyHMVnmxc/WrtyyDyXIW7lorj
U7MekudqrIyq9lrAekCeqyGcdf27i/o+ea5Gftj9Fon2ffJcjcBnhy0ujbxH
nquxJmHnXMs5d8lzNbxQUrx+3R3yXA3XW197uh64TZ6rcaJxRA/W+UDyXI0C
I9vK/XcCyHM1dhyVnRoV40+eq5Fz6m1X3aJb5LnmfFrrrk3g+ZHnalw6ZjLC
6cdN8lyNPlsjcpUDb5LnatiJZ4+bufM6ea7G2OrrhvKb18hzNfgnquO75PmQ
52pkeljxXb9dIc/VcDphzdxifJk8V+PQ4Q9P/fZ7kedqtC0a7zD1ngd5robI
m7lpUsUF8lyNZZeLjlzp5k6eq+Gya0/UjTOu5Lnm+jdP31MpOkOea8YzTGpY
+88p8lwNtt38RY/yjpPnauycNz3N0t6ePFcj1djtzPt1tuS55vp3My1mHNhB
nqsR2mDwcvT+NeT5O/qqpfU/H+3dGg==
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw92ndcjf3/B/CsSNnrm5FN2SEhvNzJ3rL3Hhll3ZQoKhQRDUQIJVK0VLT3
7pw61anTOHsPxG3zuzq9H7/+OY9yus71Wa/n65wM3e24Zl9bAwMDeTsDg5bH
Xy8+VizfvQrP64a+HLJnGVq/34lOOzh2k/dvxY8LDimn/A/i3QS3s59W7KN/
d8K6GZNS7Y8cwbne0QsFLqfAc5g592HucXr+WcwJV5hXrzsNZ8Uoy06vXJGx
dtJOtvQs/b47XLbvjLp51hWzmlb63jl2CXOuFB6+2sEdrvrreULgzVkzpvwi
3i02aTv2ymX8nDvScfw9D7r+VWw/1Pz01h4vzIwv+DftkQ8OntzMWT/hClz0
r3cduR6bRK7fryLJzEu1OukGGk5WxrXL9aHX98PwyhvmKr/reJAz5M2Jg7ew
S2Y1Ysq2G3Q/t2G0ITJH09sP9d/1LwiPY5aDTvz0o/EGIO1jzfVRwlsYMLFh
hOHFQGSdft/euPA23uvvNwibjipPD37jj817bVquiByLfew9dwLo/u/iKG9Q
J+6FQATf03/B9fa3zq77g2g8wbiA4qKVK+6gruyrvSjsPhbFb5tuP+0uzecD
+Dw7ZHfZ7B5M26/vOj42BGnhwU1yw2Ak68f7ENypN3646IKxcYb+grCLqvSa
xb1P43+MYHv18fGZD7DM2vufnRLm+9VLXy9/GULzEYp5SesmhPg/hHp1ywyG
4rr77qYB5x/R/DyB7YJttXunPMb1I7KfLz4+weS1y5bZRzwGTz9fT5GUGzB3
06BQjL3St7bs61O8UM+P/vd2KM3fM9zocdA3suMTFIfOf9v8+xnMTv2q+ur6
hOYzDEbLfrtt+fQEh5nZ+l/7cOwq3OZRfeApzW841vXpzD3Y8BSda546ze78
HJo1stM97Z/RfD+Hw6PKtZUFz/CyZbjdI2DVK/xI5Jwwmv8InM6akBAcH4Yl
LZfr+wKxqdNGhY4Jp/V4gaye7olpj8OhbJnugS+B0tydzX2f0/q8hNPX96Zg
XseHmT3WsEgMv9+tLrRdBGr16xUJ86z99wa4RMBi682sL+avcOnMzpWvPkTQ
+r1CXn5As/2BFyhkrtZ/YhQ2ZQWc79n4gtYzCoYuSrFs7UscuqVxhVU0PnUw
HcopfknrG41Dlx5Y1NhGgrk5Zsivoeuh/PIhOZLW+zWUDY7nh1q+wlpm8zBL
ivx+gYkHI17R+r9B7Pfk+3mDo/CMmb2ap2/wPt96qM2dKNoPb1DD2om8rtH4
/JtzVjEqBncc3TUHLkfT/ojBHmPesCF/omF3rWUDxOCMaXS19vRr2i8xaBo0
yYCjeY2A/+kHhAXrFxXLJr+h/ROLGVauBR+OvYFYf3uxGHfFrrl95BvoL/cx
FlNiJiwcIXuDKfqvOJx4kpO+YngM7a845HCub/TcEQOPjCJmB8XBennnLrn3
Y2i/xaH4QQq3OzcGlczqM3OCBv7gxAO9Y2n/xaMi+9XTwlWxGK6/YDxSznPv
TfONpf0YjyZO78DowlicPNiyAAm4YMbyszSMo/2ZgJE4fTXdNg7ZX8yZFU5A
SuThMxvd4mi/vgX7UL9Nv97HoVfrDcKle6155Lc42r9vwSroItxrFQ/93RW8
RcmKbu4WJ+JpPycy+TLlz7foeMSG6J7nLU2EXWDZhkpVPO3vRATFTLiaZJ6A
tvoBJ+LV2sc+EfsSaL8nIXTYkc1PnyRgTWsAImB9zaeIpgTa/0lYmT18ZfLA
t3jSMlxOEjpwbjpwNr2l85CM8b7r5/4IeotPLZfbmAxj39fFYzhv6XwkI8qk
vOP+Homwbdn+vGRc50t0kSsS6by8w0bnoW6/riXidsv23f4ObHHkmw2FiXR+
3uFsWaRbqmEShC4tC/IOru52svF2SfDWn6f32CQOFEZcTIKlfoO/x0ePlCMT
0pPofL1HDx+2e9qvJFwMnMdsmfdwz1aabpqZTOctBbmP+k/5cyYZ7GH6BYbc
0ik/KiGZzl8KfCy/sg80J2NoS/prUnDsZ+LycZbv6DymIvx2otXPY+9wvOV4
OKViWehXT86rd3Q+U3Hc+d9pScp3yGxZ3eZUGPWdOD/c/D2d1zSUDjB99XA/
c5+tBxJmdeb7Q5+9p/Obhl9LVx6LFr6Hfvq+p+HH/1zSc4ek0HlOx6Ag/7Wy
7SnQ355rOqrzLpn3Ckmh850Oo+1jpy3mpcBA/5UBXdrRs96mqXTeM2DyZ5Sy
ckMqIvKWMic6AwuFky6bB6XS+c9AkmTXwiucVKxiTmNPjww0TvM1/9AzjfIg
A4eTL43YszoN31r0ycnArY7dpvFvplE+ZCDuxM8NB8rS8Lh/y4HIRGD7rl7f
TNIpLzJxyN0oyX9pOhYJWhY4E5o9UarpPumUH5lYJk/oLy9Ix4fnLTeYiYg2
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
P6u6HFeS50rcnDSePdhZSZ4rYex8+82ki0ryXInz346dnOutJM+VaOdtaLry
lpI8V2LzvpDHW+8pyXMlhlicNToUqiTPlfjE4q059UJJnisR+q6L64UYJXmu
xJYwe88ryUryXAlFTLPDzUwlec7M2+6pE4MKleS5EvYPtrLus5XkuRL9w+KW
P65VkudKNI68GP5UoCTPlSiy6FIXplCS50okmz2WhX9U0t97lPin6lJZ+Hcl
fR6sxAf3P75hbVT09x8lnJK2jnxqpKLPh5VIOy3zf9RDRZ4rsaSvghtsqiLP
lRi+5VVzwFAVea6ExSFXka+FijxXYmjhs+delirynJnvg8fhOkNFnivR+86E
l8f/UZHnSnw0tpDtW6wiz5WQ8KO+bFytIs+V+BXQuWrJJhV5roSlia+nzS4V
ea5C4E2PdmMPqchzFU6UzlptelxFnqtwvrbjUUNnFXmuwqdxU9d/cleR5yoU
hPcwabiqIs9VKLr2wTfPT0Weq1B2eSgv+q6KPFchP+LLp8DHKvJcBcNDaZxz
ESryXAW7sFK3nW9U5LkKdaGnm+clqchzZtxGRhNHZajIcxU26OosOxaoyHMV
FhfP+SktV5HnKsjOX/XJrVGR5ypkrTBpetKkIs9VqFabfbsgU5HnKhQe61O1
Saciz1X4vGb+6SlfVeS5CkFu7bnGf1XkuQr/2b74JTRUk+cqeNj7CJO6qslz
FZrL/1z17asmz1U4iu26nWZq8lyFl7cM+kwZpSbPVegyeM73dhPU5LkKFRGO
9yut1OS5CqM3aX+EzlaT5yosye7Vz3G+mjxn9oFohm7mcjV5rsLcIe8vdVin
Js/VGLHoE6tsq5o8V8M2YGZt0F41ea7GyOe64G1H1OS5GrN8j/YZfkpNnqsh
TOm+SHZOTZ4zz+s7bfJLDzV5rkaqeGbl4Wtq8lyNy/WuY8b5q8lzNZggt1YF
q8lzNSomWX6PeKImz9WoNt7luO+lmjxnxt1l8b0hsWryXA1/g8X/1iWryXM1
WKaZHfwz1eS5GlnfeyxcUqgmz9XMvnsww4CtJs/VuPk8qz6eqybPmfstk0w8
yFeT52pccjw4ub9cTZ6r8e+8KFGRTk2eq/HJsd88l69q8lyNiZc7rzL/qybP
1TjgoTSqMtSQ52pwWAOc3LtqyHM1tPPaXRrTV0Oeq+FgZojKQRryXI3tXX3C
XUZqyHM1tk34kjhkvIY8Z9a9Q/SJ3Kka8lyNwCsDqg/O0pDnaozrEybobKch
z5l9eS42IHKphjzX4PCXSO0Sew15rkGZxQ+tfLOGPNdg43jDQK/dGvJcg/yL
M/hDHDTkuQaj+v4pf3dcQ55rIF2QtsfeWUOea/ChQRysdNeQ58zv92w45X5V
Q55rcNWn58fefhryXIP+Gz92jbijIc81sPwlKZ3xSEOea7Bn37bxReEa8lyD
xR9yxm2K1pDnGlw+4FMsTdCQ5xpI2g00OpmqIc81YLqr+HeOhjxnxvd2+/Yr
JRryXAOHfdpT3Tga8lyDmMMdzYN4GvJcA55F/zMDRBrynLmu451dj5Qa8lyD
Lc4fpEM/achzDay+BBk+/a4hz5l98OdX+rA2WvJcg4NmgT1DO2nJc2beV1b8
HtRdS55r0PH76Iv3+mnJcw2+fDJ60GuwljzXwMtDvfz6KC15zszPTrugdhO0
5LkGHtGXTzlbaclzLYa3tZBrZmnJcy0E20M/7LTTkuda1Frv961YqiXPtXjs
qE21tdeS51rs2BhzMWazljzXoj5uFNdst5Y81+JyXF6GzyEtea6F9zcjmy9O
WvJciwb/Qwu2n9WS51osN9whzHXTkufM8+fu7TruipY812Li0+ZCvxta8lyL
yj9Xen8O1JLnWowIeKBZF6Ilz7Xg9Ypa+/aZljzXouyh1eI+r7TkuRad8mKL
TsRpyXMt2D6h3LJ3WvJcixfb3U5YZGnJc2behhfduVSoJc+ZeRtrsKiOpaX/
36FF2vTHlyZxtfT3Xy1kFywWejVpyXMtpoUOCORKteS5FmFx/x0eo9WS58y8
zrQpdvmiJc+1CB7rEFv4S0uea/FL1X5ov/Y68pyZ1zW+ffcY68hzLU6Eed2O
6qkjz7XYE+IU8J+pjjzXIWg3e8CcoTryXIeNN8aae5rryHMdisa0Sy6YqCPP
daiPrS81ttaR5zps6Tl7//I5OvJch/bhLy76zteR5zocs4kYXLJMR57rMLJH
OozW6shzHWKqTwnstujIcx0CX61q77ZbR57rsGZE3fPEQzryXIfjc+8Va510
5LkOvqf6Oo44qyPPdVgcVndro5uOPNdhr7njlGuXdeS5DnE52+xTfHXkOXOd
2EkfVQE68lyHT/dOmPR/oCPPmceg6GcLnurIc2a8k52Sj7/Ukec6/HaYt+R+
jI4814EbFb8+O0lHnusgrF3VqEjXkec62CKM3zVfR57rsOkRtk0u05HnzDyP
i7ZfW6Ujz3UYe80t+1S9jjzXIb/c9pW/SEee61DhfqVLjFJHnjPfBzZISz7q
yHNmnc5UWcu+6cjzD///+H8ha+Em
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.9991336908822046}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.837777853128851*^9, 3.8377778817696342`*^9}},
 CellLabel->
  "Out[1408]=",ExpressionUUID->"5c1757ef-e455-4491-b2d4-316969cf36ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", " ", "DotDashed"}], "}"}]}],
      ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Pink", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", "p5", ",", " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.837767328552496*^9, 3.8377673834761457`*^9}, {
  3.837767465606048*^9, 3.837767469239324*^9}, {3.837767553805643*^9, 
  3.8377675840069103`*^9}, {3.837767656317993*^9, 3.8377678216463213`*^9}, {
  3.837767864652279*^9, 3.8377680176078377`*^9}, {3.8377681071411943`*^9, 
  3.837768135545981*^9}, {3.8377690010696983`*^9, 3.8377690043659973`*^9}, {
  3.8377707900482903`*^9, 
  3.83777084253636*^9}},ExpressionUUID->"46645459-d1d7-426d-ad37-\
412072312b08"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJw92wd4VNXWBmBABVFA5NKbCAiCSJUq8IkUqSKgdKRIlY506UUEkQ7SIXQI
JQnpvfcyvafOJJlMZjIgiFT5Z1Y+fp77XB+v8eTMOXuv99trzf14zvLx86pV
qVLF/laVKt6/vrz5UDVmznc4OaT82feDc1H597OwI/CPYdovc/F8y8+Rq48u
xJK2nY7+8MWbf74CE49l5ms75eLX+ne/Kdy4GoPeXtpp4idvfn49Oq+uvUHX
Ihcbytp1e/f2JjS03Uma2PDNv78NVb7/tp6+Ti7654/9869lO1CeUPHjpBq5
2CTX2wVdj4O++tcWhI+oVe2zPb8h6nKXp5OeWnj933Hzf4ohhgcW9AtMXRt9
YR+O7FxxeHKZBRvl9+3Hxkd18wyFFoS23F0+LvQAFv7k33GKycLffwjj1OPW
GVUWnE1s5bdq4WEMGPx3wpQMC+/nCNrfP1LXlGCB5Zn8QnzYpseMqZEWft5j
eH5EfdMUaEGzLrltq28/jrJqq59MvWNBhNzvCShW1R9svmrB1Llfeq+IsKLA
g9POv7n/k7g0/geL+YQFp0/JHxyI/+fT6QfffJ7TWNf9xBrLHgtM2f9OsF49
g7mXesVP32bh8zyLsd6nt96CJm9PrPN5wDn027Fu2oyVFoTJ5z2P9n83upG7
yILJfeWCqDMn9PGMOW8+/0X8o5w8KG+qBaN77x00q/giCgY9+/PHCW+ehw8y
/U+Z8kZZ4BznfYI+CPq4X/uZQ948n0u4fNj0S35/C/YvKX1x8+El7Kv6a+zM
nhaY5XldxuqVzWoXfG7BZ3saGrP/vYzZhRFTZrV78/yuYOS46dcKWlqQ4TM0
+NGrK+gV9/LvWY3ePM+r+KjbORR+YMFiz9Nq/PY1vOczYP/sd98832t44n29
VSx4T395xYD3riNv25ZP5jwz83lfR8qDlquKHppxy/tx695A4KyY6DkOM5//
DZxVzHzfWmTGSO/lGt7E3q+qTP7JbOb7uImVfhevWNVmOLyPu/ktTG016OFP
mWa+n1sYdqhwgC3RjH2ep6do7YvuVXbsmxtlhlHely+arWittwWZ0WH6Qc+b
vY23CuLbzLtr5vu7jYqxP60ovmZGmudqTbvcgTHmrah5F8x8n3eQ0OVKzZK/
zFh02LUJPe/i7oUhE+cfMvP93sXJD4ovlfxuhufmPB/5HnZt3e2ev93M930P
S92f9C/dYMb3nsXjeaWYODP59wWrzHz/fvg6Z7629Gczrnienv6yHzqhRuuF
P5m5HvzQ4N71ZfZpZjx+pVlf1s4fVT4aHrHwezPXhz/KD9hrlI02Y8gf3gXg
D91/v3+/aKiZ68UfMcs6+JQNMONYY/lA8M1Lcy3qZeb6CcCRb3/u5+hshk1u
LwBbo9/b83N7M+RyDwOwqLOv2vGRGT3kz318f35Uq8WNzVxf94E6ziXldc3Y
GZvuWUH38emW/WGLa5q53u6jXkWn6s6qZqg9b9/zTPDfjKzxS56buP4CYc9a
esH5twlt5IKBUA3wXtDE9RiI6Dt3+7isJvyy0PsCgnClxdjdSy0mrs8gHP7T
rXRpTEjwbtv4IGx8dbDlsiwT12sw5i7turgiyYT/Vd4gvstVhCyLNnH9BqPv
mJVvu4NNkLtLDUbbqA/HLb9n4noOQT3PpnZfN8H738mjQvDk7HjH8osmru8Q
WGs96vXgpAnV5AOHIGfTUU8FNHG9hyLM2UPxYK8J4ysLIHyma5qv3GHi+g/F
H5mrFz3caMIl78fVhGJN/wbBK38xcT+E4cfbQdX+XmzC397LTQ7D6OYTx66a
a+L+CEPP/U/O/D3dhK+9y98cho9fnrCv+sHE/RKOmkt693w0xoQj3uX7Yzj+
Meu3/zLMxP0TjoJR67MfDTShaKP3hYQjLaJxs9W9Tdgr+ykC9z8LW/C4iwnd
ZIFH4OyZKYGrPzVxf0Vg7/vPq/zTyoTtxwd7lkwEVv96esyaJibut0jMKO93
+p8PTVC2lheMkdPMJWveM3H/RaJ7xq89nlQz4WNv9XdFovmXzbetfWHkfozC
O76RmU8eGbHSuz1WROFB0xlN1jmN3J9RMO17Ne9fmxFx3rf7KArJz88FrMs1
cr9Gw+/nga//1RrxYeWGxElPNV2fbeT+jcaukVtPPk02Qh7fs2isCP+oeH2M
kfs5BlM7xnZ7FmKE3N6mGAw5PWvLBj8j93cMur5XNePZDSOqyJ9YNN7o02ij
j5H7PRbVHIPmPj9lxI3kUZ4dHYvyKUV+G48Yuf9joU/b8er5PiO+8+zGejtj
Ed23zchfdxpZD2Jx+2bCiRe/GvHUq09iLI43mWv9dbWR9SEWm/e+3fXlEiMu
NvVuiDgsenZl06Z5RtaLOPywaGjayxlGDC/0vuA4wFjcYPNEI+tHHDqO+G3O
q2+NeHDde4NxaBDW7t7mb4ysJ3Go2iHlxSsYcdJ7d+lxsJ9cMHxLHyPrSxzU
7757/L+uRnzlWVwjasUjcv2Nwi0djKw38bhuH9759cdG2F94P3A8jkwu27i1
qZH1Jx6bUvemvK5nxCFxNx4L+nSsv+19IyrLZTzG3UifVeVtI+TjKuLRt/Hi
O9teGlif4tH+d+8CNEAuVy8BdZ/6DtvuMrBeJeDZgtFHq5YYIOVoQgJsemf+
9jwD61cCMr/5s1M1vQGV8SEB4SGfb9iRY2A9S4BP++ykaqkGSDnQJ+CAvCYD
61sC1tX4YOZbYQZs9W7nxomYs+6e705/A+tdIkaXjn361i0D2ssGSkTvSQ+G
7LpkYP1LxMcphw6/fcaAHIkXiajVu1verqMG1sNEPLmm7PjOfgPWebdDbiIK
G65at3uXgfUxEem/1Ut8Z7MBH3mXc8skBD0JqPvbGgPrZRLOzZ8wo/oyA1K8
y29WEvbqHt38bb6B9TMJK4cde1J9pgHLva/XJwmzgr8YvGeSgfU0CcPbaQ/W
+M6ARrLhk9DTG4eGG1hfk9GiesMO7w4yIMZ7e22TUWNt8Jrf+xpYb5PxoHhi
/LvdDVgw3/snGZYf/q2zt6OB9TcZSUl/TavZxoA6UmeT4d+zz429zQysx8k4
c9XwuGZ9A7zVcX1ZMvY02DBoXy0D63MKluxucuC9dwz4UQJqCqb9E+YpCXrW
6xQMnTe1/ftP9KguBSoFXbXPf/mjQs/6nYJmQ8/Evl+qh/dt1L+bgreCvqy9
P1/Pep4CZ1vLlFoGPSTduVNgOLbp2n6FnvU9FfFvt3hUK02P/7zbrVsq7qyO
wp9xetb7VJywzdhfO1yPa97lvCoVW7//z/BngJ71PxWLE89/UsdXj28rPzAm
fYFVBy7r6UEqcCU/us5ZPZ54X8c/qejk2R0Hj+npQxrq72o1+YM/9Tjv/bi9
0/DiUeyVg7v19CINjp9mP/xgix7D5AGmQaWuOvDQWj39SEP04Ev76i7Xo0J4
SMON+1/rDy3Q05M0HGljbfPhLD1OeMv7izRs9vI2WU9f0jH/La+YegyUF5KO
735JrHlkhJ7epGOgde7Eel/rUeItr1vS0WbCO5eP9NPTn3TUTrjqrtdDz32V
jhfdh/U/+pkeUq4K01HqSVf/a6uHlJdqGVDW26M92lxPnzIQsaN96/oN9JDt
OzgDV/5OWXastp5eZeDwnIUR9avrIdtjdwY2qLwFS0e/MjDv65vfN/hXh8rl
l4HRASN8jrt19CwD/Vo7XA3sOmi9r/fdTLQ9sq/fiQIdfctEbVkoOmyWO8zE
05UZ6hNKHb3LRFHh4laN0nX4RBZgJtLH1Vr6V7yO/mUiMO52WKMIHbIy5Q8u
dRtT/eR9HT3MxH4f1/jGt3VYc9RbULOw5sMDF05e0dHHLMzc3tnZ+JwOLWRB
Z2Hkw+w+p47r6GUWes1e7tkhOiTJ8SoLLZQfqE79pqOfWXh3kF/Lplt1WOot
p6osPPb7bvHpdTp6mgVLq4chTVfo0EA2SDZSveVqoY6+ZuN+le7jms3WIcpb
DiZm4+wK1bkzU3T0Nhu7C1Y5mo3XYZ4cv7Kx/Lv/9T47Ukd/szE19v7O5oN1
qFW54TC06/eKs1/q6HE2elx83LzFFzrIcmmag2Z1jy8610lHn3PwzraewS0+
0UFex/QcPHBrq51voaPXOTDNXDu2ZUMdKo9nOYjPaXj2fB0d/c7BXYTYW9bQ
QS6Xn4OT9yb1vPBaS88V2P7RU89/tNzvCiw6eDL7wgMtfVdg0us+zVqVabn/
FfhquXHBxUItvVegff6GwFYmLeuBAo3GNq3qo9LSfwXeigkf83GGlvVBgbLO
0077JGiZBxTQn39R8nGklvVCgZg6Z3tcCtQyHyhwc0v/ba3vaFk/FDhaYcm8
dFXLvKDA1h83N2lzXst64rn/7BbzL5/QMj8oMG5gdECbg1rWFwX63/3x9eU9
WuYJJdq1fD2q7TYt640S9bzLb72W+UIJTzgobrtSy/qjROnSgm5XF2mZN5TI
zvUeCLWsR0pEej7t1ala5g8lrkXFNWo3Qcv6pMQfn8+Ze22UlnlEifXnqvm3
G6JlvVJibu3Lr6711zKfKDF28+CR7XtqWb+U6Ouynrj+uZZ5RYk2M3ZZ27fT
sp4pUTurbdcbLbXML0o86Z+06dNGWtY3JWy356Xd+EDLPKNCZnMvcFrWOxVC
9l+bc7OKlvlGBZ+Xw+51eKZh/VMxl2iYd1TwatnRoWE9VGHm6E+P3yrSMP+o
MDIytbCjWcP6qEL3Tt4TlwaynA+q0OpszV8/y9Sgsn2gwru1bqX4JmqYj1R4
/OvI+p2iNKiMjyrklztm3Q7SMC+pkDLtjzud7mpYT1UIyvjs+e1rGt6nCme+
zBz2+QUN66sae3yXHL3zl4Z5Sg1pHxzSsN6qMdV7ud81zFdqDH0xZkPn7RrW
XzW8p627GzTMW2o0Mx+o12WVhvVYjXdGdZl572cN85caD8NzfLv8pGF9VsPU
ccXTe9M0zGNqJJyu6ykJGtZrNe6+53/Yb7SG+UyNUxvH5XUdqmH9VmO742FH
/wEa5jU1lk49sq5bLw3ruRqT0rsn+nfWML+pMbifum739hrWd8//fuuXGQEf
aZjnNGjStP6t7p6/VtZ7DartC/QkLA3znQbebl2PmhrWfw10i/45eL+qhnlP
g1jjcUuP52p6oIHviF4dAv9WM/9pcCxMt+aLcjV98PzeDuviA61q5kEN5p9q
9EFPi5peaDChZui0II2a+VCDARsm3+iZpaYfnt9b9vRxUJKaeVGD/005NahX
tJqeaPAqte+BYM9zq8yPGpT2MZl63VPTFy2UNza2D7muZp7UQo6DF9X0xlOn
fo+IDTmpZr7U4sDTabX7HFbTHy02Lnw5JXSvmnlTi7mGs9f67FDTI0+dGj7g
UehGNfOnFn1Cc9H3FzV90qK1NBDUzKNa1DnZ0tjXs24qvfLUtRoxn4RPVzOf
alG0buaqfj+o6ZcWOaWvo8PHqJlXPfc/6eL7Xw5T0zMtfFK+mhwxUM38qsMf
vQuvfNlbTd90WH99+8OILmrmWR3mNmo9sP+nanqnw6g98fsiW6mZb3Xo+e8c
ff8mavqnQ6sF3kCkZt7VoaYsRDU91OHxsCFRUZ59Vpl/dcgPttUc+EKFyvak
Dhntdk+MfqRiHva4d+KTywOdKvZPdThbPdkdbVMxH+vw29r5/ZGrop8e90uq
743RqpiXdfhx4nUtslX0VIdhyd+0jk1WMT97clIv+7KvYlT0VY/m8oJVzNN6
1PDGe0+dqfTWkyt3p30fd0PFfO3JXf8s8hnko6K/eiTPe68i7pSKeVsPP+2t
fl8fUdFjPc4O9T5BFfO3J5cFlau/3qmiz3os/2R/q4RfVczjekw53mnp4NUq
eq3HoHeywhKWqJjP9fh8zdLqQ+ap6LceTYprT0icoWJe1+OdH7wdOxU9N8CV
+K0z8VsVPTfA8IW7z9BvVPTcgHhPek6Cip4bcKN+V9XQPip6bsCxXYqWyV1V
9NyALY9XLB7WQUXPDfh57oehyR+r6LkB4zX+b3/TVEXPDcCQ8eNS6qnouQGf
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
yvNkEc7LPCiV/aMirJH5TyrPl0UYIfOeVObPInwk851U+lSEv2Wek8o8WoRU
md+k0qsinJV5TSrzaRFWyHwmlX4VYYjMY1KYV4vQVOYvKfSsCC6Zt6Qwv1oR
I/OVFPpmxUmZp6Qwz1qxVOYnKfTOigEyL0lhvrWigcxHUuifFaUyD0lh3rUi
SuYfKfTQiqMy70hh/rVyvpFCH62cZ6QwD1vxP5lfpNBLK+cVKczHVoTLfCKF
flpxSOYRKczLVsyV+UMyPbWij8wbkpmfragjzzWZvlo5T0hmnrYiSOYHyfTW
ir0yL0hmvrZitswHkumvFT1kHpDMvG1FDen/J9NjK/Kl35/M/G1lfz+ZPlux
S/r5yczjVkyX/n0yvbaii/Trk5nPrezPJ9NvKyzSj09mXrfCV/rvyfTchh3S
b0+i5zZMlP56Ej23oZP005PouQ1VpX+eRM9t0Ei/PIme29gfT6LnNmySfngS
PbdhgvS/k+i5jf3uJHpuw3/S306i5zYopZ+dRM9tuC796yR6bsNG6Vcn0XMb
xkh/Oome29iPTqLnNvafk+i5jf3mJHpuY385kZ7bsFr6yYn03IbR0j9OpOc2
tJB+cSI9t+Ff6Q8n0nMb0qQfnEjPbez/JtJzG/u9ifTchuHS302k5zY0kX5u
Ij23sX+bSM9tSJJ+bSI9t7E/m0jPbVgi/dhEem5j/zWRnhejsfRbE+l5MZzS
X02k58XspybQ82L2TxPoeTEWSr80gZ4Xo5/0RxPoeTHqST80gZ4Xs/+ZQM+L
ES79zgR6Xsz+ZgI9L8Y86Wcm0PNi9i8T6Hkxaku/MoGeF6NA+pMJ9LwYIdKP
TKDnxdgv/ccEel6M2dJvTKDnxegl/cUEel7MOphAz4uRJ/3DeHpejCDpF8bT
82LslP5gPD0vxgzpB8bT82L2/+LpeTH7ffH0vBhm6e/F0/Ni9vPi6Xkxdkn/
Lp6eF2O69Ovi6Xkxukh/Lp6eF6Oa9OPi6XkJdNJ/i6fnJbgt/bZ4el7C/lo8
PS9hPy2enpegg/TP4ul5CV5KvyyOnpewPxZHz0twRfphcfS8BJvlQBNHzz3X
l35XHD0vQWvpb8XR8xI8k35WHD0vQZb0r+Louef60q+Ko+clWC/9qTj2g0ow
WvpRcTwvlqCN9J/i6HkJnki/KY6ee64v/aU4el7CflIcPS/BWukfxdHzEoyU
flEcPS9BS+kPxdLzEjySflAsPS9BmvR/Yul5Cfs9sfS8hP2dWHpegiHSz4ml
5yVoKP2bWHpeApf0a2LpeQkSpD8TS89LcUL6MbFcx6VYIv2XWHpeyn5LLD0v
RQPpr8TS81L2U2LpeSlipX8SS89LcVT6JbH0vBTzpT8SS89LsVH6ITH0vBSt
pf8RQ89LkSH9jhh6XopV0t+IoeelaCH9jBh6Xoo06V/E0PNSLJV+RQw999y/
9Cdi6HkpkqQfEUPPS7FI+g/R9LwUTaXfEE3PSxEt/YVoeu75eeknRNPz0v//
Xlul56UIlX5BND0vxVzpD0TT81K8L/2AaHpeigA5/0fR81LMlPN+FD0vRXU5
30fR81IEyXk+ip6XYqqc36PoeSnekfN6FD23w0/O51H03I5Jch6Poud2VJPz
dxQ9t+O2nLcj6bmd5+tIem7n970j6bkd1+T8HEnP7TwvR9JzO57J+TiSnttx
Uc7DkfTczu8/R9JzOyrkvBtJzz0/L+fbCHpu53k2gp7b8UDOrxH03M7zagQ9
t2OwnE8j6Lmd59EIem7n928j6Lmd580Iem5HiZwvw+m55+flPBlOz+38/mo4
PbejTM6L4fTcjkNyPgyn53b0kfNgOD238/wXTs/t2CPnvXB6bsfncr4Lp+d2
GOU8F0bP7dgh57cwem7HZ3JeC6PnZVDJ+SyMnpdhh5zHwuh5GdrJ+SuMnnt+
Xs5bYfS8jN8PDKPnZWgj56lQel6GHDk/hdLzMqyX81IoPS9DMzkfhdLzMqTJ
eSiUnpfx+2+h9LyM32cLpeeen5fzTSg9L8MyOc+E0vMyNJTzSwg9L0OcnFdC
6HkZv98VQs/L+H2tEHpexu9fhdDzMsyR80YIPS/DB3K+CKHnZQiW80QIPS/D
bDk/BNPzMtSUjR1Mz8v4/aJgel6G6XIeCKbnZfz+TzA9L4Of5P1gel7G7+cE
0/MyVJU8H0zPy3BL8nswPXcwrwfRcwf+i/bm8yB67sBVyeNB9NyB8ZK/g+i5
A88lbwfRcwe/HxJEzx34VvJ0ED134F/Jz0H03IGLkpcD6bkDwyUfB9JzBx5K
Hg6k5w6clvwbSM8dGCJ5N5CeO1Ah+TaQddaBE5JnA+m5A5D8GkjPHXBIXg3k
vMeBw5JP77Mf7GAevc/5j4P58z77ww7mzfv03IGBki/v03MHbJIn79NzB/6U
/HifnjvQV/LifXruQJHkwwB67sBeyYMB9NyBHpL/Aui5AxbJewH03MF8F0DP
HegseS6AnpfDKPktgJ6XY4fktQB6Xo5Oks8C6Hk5tJLH/Ol5OTZI/vKn5+Vo
J3nLn56XQyn5yp+ee35e8pQ/PS9nfvKn5+Wcx/nT83LmI396Xs485EfPy5l/
/Oh5OVZI3vGj5+VoKvnGj56XI1byjB89L2d+8aPn5WgoecWPnpcjWvKJHz0v
57zGj5577kfyxz16Xo71kjfu0fNypEi+uEfPy9FC8sQ9eu75/ZIf7tLzcuaF
u/S8HPXlX7xLz8sxT/LAXXpejkDx/w49L0dt8f4OPS/HDPH9Dj134qZ4foee
O/FigtfvO/Tcyf8/12167sRV8fk2PXfipXh8m547MUb8vU3Pnewn+9JzJ5zi
qy89dwLiqS89d+Iv8dOXnjvp5S167kRv8fEWPXeyX3qLnjthEf9u0XMn+5m3
6LkTO8W3m/TcCaN4dpOeO9FB/LpJz53YIF7dpOdOZIhPN+i5Ey3Foxv03Mn+
2w167kSyeHODnjvRWHy5Ts+dWCieXKfnTkSKH9fpuRP1xIvr9NyJWeLDNXru
ZL/oGj134n2p/9fouROTpN5fo+dO9meu0XMXXks9v0rPXeyfXKXnLlyRen2V
nrtYn6/ScxdGSD2+Qs9dOCn19wo9d7HeXqHnLgyQ+nqFnrtwQurpZXrugl3q
52V67kJfqZeX6bmL9fEyPXchV+rhJXruQhepf5fouQvbpN5doucu6KW+XaLn
LrSTenaJnruwTuqXDz13IUPqlQ89d/H7BT703MV5vw89dyFR6s9Feu5CI6k3
F+m5Cwukvlyk5y5ESj25SM9daCH14wI99/xzqRcX6LkLM6U+nKfnLrwn9eA8
PXfhjuz/c/TchYmy38/R8wru73P0vAKXZT+fpecVGCr79yw9r4Bd9usZel6B
Q7I/z9DzCnSV/XianldAK/vvND2vwHrZb6foeQXayP46Rc8ruJ9O0vMKLJX9
c5KeV+B92S9/0fMKBMn++IueV2CK7IcT9LwC/33lXf8n6HkFfGS9n6DnFfhG
1vdxel4Bl6zn4/S8Asdk/R6j5xXoK+v1GD2vQJ6sz6P8fkcFdsl6PMr5bwXa
y/o7Qs8rYJL1doSeV7A/cZieV6CdrKfD9LwC6bJ+DtHzCiyT9XKInlfgU1kf
B+l5BVbKejhAzysQJe//T3ruRk05j/1Jz90YL+93Pz1345S8zz/ouRsl8v72
0XM3usn72kvP3dgk7+d3eu5GgryPPfTcjbpSf36j525MlOe9m567cUme7y56
7oZDnudOeu5GT3l+O+i5GzvkeW2n525kyPPZRs/d/L7DVnruRqh8/s303I0J
8nk30XM3iuXzbaTnbmyVz7Oenrvxodz/Wnruho/c72p67kZfub9V9NyNbLmf
FfTcjXD5/UvpuRs2+X0/0/M3159Pz93oLtebQ8/dfH8z6Lmb9XwiPXcjTv75
GHr+5vcNoOcP+NcqVf4PEQJwiQ==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt2wWUlOUXBnBERBBQREpaQJBQShp5QBBBQKRLQjqkS7ol/kh3SUnH7rJs
d/dO98bszO7OzM7sEKKk/GcuD8dzPBxx9pvve9/7e957Pz6bsWTU7IoVKlRw
vFuhgv/fr248Ug2f8RPCxvXblP3fN3j7++kIkd8Px4tNC6JWHpmH9/sHNGmw
eRz/+1JEyH+fgvW1735vXbcSXbo5FveLncE//xv//BysdbbqVOX2BuQN/S3n
Sd8F/P+38PMXoU/BiD9OLN6G5I6VTowuWIoN8nk78LV83nJEDKlesd2u33G6
d9agL/9cyc/fjWry+avRKzhtdcyfe7Fy0NF/Kk/7Devk5+2DU37eOoQ12Vk2
Mmw/fhj589XCJhv48w/y+jfibFKzgOXzDqHZzy3HReRv5vUcRopczxZYnssP
xKYu/1T8IXcrv+9RdJTr24aGHfJaVt56DPYeJlO3e9sRKdd7HGflendg0qze
/k/EqL4xQS0O7OT1n+T98X2vU/ILCQMu7a25ZBe/z2l+n90w5fw72vbXGbQZ
8vuM1z/u4f08i3z5fnvxaaVxH34ZdA7HflzQy/XV/xAu3/c8hsj33YcJPeUD
8c6YH2vpP/yD3/8CwuX7/4Fh3ff0n158AYsmdnYllu/n/biIFnI/DsA90n8H
L+LXDtV+mTD3IO/PJd6fg9j3a+nLG48uoUXn11k/jj8Es9yvy9gg9+sQ2u2q
a8z59zJ0X3t7fPf9Yd6/K1wvh5F58buQJ6+vYFd365Xe3Y/wfv4Fp9zPI1jo
u1v1K11F/17qmp1bH+X9vYpTcn+P4gP95aXffHANz/okb/ii3jHe72u838dw
0/91a17HPYQ6mrx/nPf/OqrL/T+OH/wfV/cGZn17Y0ydf4/zedxAnDyPE3D5
b3ejm2j83Zm4aqUn+HxuYpk8n5PY67t7iua3kPv9H+0r6k/CKM/rFlrJ8zqF
Nj8fSHj6xW3s+WHzyWcpp/j8bqNInt9ppPs+rUGHO+g3fFklb8hpPs87OCnP
8wzmH/JsQNe7eDJi5tLiq2f4fO9iqDzfs/BdnO8r38O1UWMt5uNn+bzv4eVo
//M+hzG+xeN7pPhl7PeDVb+f4/MP4H4/hyu+u6e/HIDq8j+e53oIwAJZD+fx
92vNb85WgUid1K5Z7Jw/uT4CuT7+xMD/+RdAICLvfpgyqd0FrpdALJD1cgFH
68sXQv2A91+NvXyB6ycIGbJ+LsAulxeElYEVOo9seBHycY+C0EzW00V0kV/3
kRP0fO6wIxe5vu5zP17E9rgM3wq6jy+CH5/7vtolrrf7XG+XoPY9fd9Xw/YH
Zepvt1/i+gtGJ1l/vnUrHxgMa4i9at+Xl7geg7FX1uNlrJjnfwAP0DcsDz1X
XOb6fACHrM/LSHz6he8JP8CpcN2qr8suc72GYKCs1yv45O0F4nFE7q0OM69w
/YbgnKzfK5CrSwvB8Kg0a1vzFa7nUPwt6/kvBJ3zXksZGopr0fH1Wo3+i+s7
FD/J+v4LFeULh+J1TMTwzzL/4noPw01Z71cx6m0BxOS4+9sbDbjK9R+GqrL+
r+KS/+tqwhAcfzu8XuRV7odw7oereOz/uAnh+CTxL2+tLte4P8IRKfvjGr71
L39zOBYmnf/8w1vXuF8iUF/2yzUc9i/fqRFITz4xuWqL69w/EVgu++c6itb5
H0gE2qQePFTpzHXskf0UCYXsp+voJAs8ElvS9qS+qXWD+ysSX8r+uoGtxwb4
lkwkdOnbXr/Ye4P7LQrbZb/dgLK5PGB0zFzvWzE3uf+iUCD77yY+81d/TxQO
ZK2c/2jdTe7HaPSS/ejb5/7tsTQazuxFf7of3+T+jMZR2Z+3EO9/uk+iMTB3
jrZ0wS3u1xh4Zb/ewsdvNyTOK6ZVsxXd4v6NwY+yf29Dbt/zGPyrnNA/f9Jt
7udY3JL9fBtyeRtiMVY9co1RdZv7OxYVpJ7fQQX5FYcAzQ93fP9wv8dhsuz3
O7ieMtS3o+PwoW6ALTfhDvd/HPf/Hfzk2421tsdhnr7Pp5m97rIexKGG/KC7
eObXJykO4YauI1KC7rI+xGGx1Ie7uNDAvyHi0cD01c74tvdYL+KRLvXiHgZb
/Q84HqvNrSOjLt1j/YhHU6kf9/Dwmv8C4zF38cFnk2sEsJ7EI0rqSQBO+q8u
Ix51vfuOTBwSwPoST48C0M+3uIZUT0DSkj1fjd8ZwHqTgMZSbwLgeOn/wglY
+nBn+pj4ANafBNafABxMkA2MJsu2zRr1OgBvy2UCVkg9CoR8XUUCMh9tejOi
ZyDrUwKaSn0KhHxcrUSsXr7+9PBVgaxXiVBJvQqElKPRiWj9ZE3XoYGBrF+J
9DEQb+NDIhQrVioGewJZzxLRVupZEKQc6BOx7e+lCwe1CWJ9S2R9C8Jm/3au
n4QvVy2qPHB2EOtdEn6XeheE1rKBkmB4Ov9i/4tBrH9JzFdByJV4kYQ9q+f0
QV4Q62ES8qUeBmGNfzvkJaHrvzN8K+Q+62MS9kt9vI+m/uXcJBm2NdOW9xp7
n/UyGX2kXt5Hqn/5TU/GId/T7XHoPutnMn2/jyX+x3sxGf3WTrjeNfs+62ky
Tko9vY96suGT4Xk+ZkCXqsGsrynoJ/U1GLH+y2uZgpPrRuZ3/C6Y9TYFXqm3
wZg7x/8rBYNeDl/71dZg1t8UnJH6Gwx/ePJVWDxa/0Pt9tHBrMcp+EHqcTD8
1fE3Zwouvhp0r83zYNbnVLyS+vwAUyWgpmLYxgE/tO76gPU6FZelXj9AZSlQ
vj//GsUtlz1g/U5lPnkA/9OofTcVNzf12dL8zgPW81RUiPXX8weQdOdNxeg3
PRo2cz5gfU/DHanvIfjPv906paHilq4hjT8PYb1PwySp9yG46l/Oy9Mgy/mX
ENb/NObPEPz49gtj+tav3PXPhdCDNESIByH4x/84nqbhA7mwEPqQjpniQwjO
+79u93REb2vdvHadUHqRjpriRSgGyQ1Mx5x3W0Z/PDKUfqQzX4WiXHhIR50d
zSZ85HPtrSfpmC+ehOK4v7y/TEdCpcZPqqeH0pcMNBRfQtFXHkgGlu38dP8H
74XRmwykiTdhKPGX100ZaF65bpsq/cPoTwbzdRj2S/nLQObvtZLe2xgGKVfW
DDQRj8Ig5aViJla//9G0d8PD6FMmlOJTGGT7DshEi93VXlR4GkavMrFGvAqH
bI+dmVBVqXLsv47h9CsTrcWvcLxdfpnYuqdSx1e/htOzTOjFs3Bo/Y+3Shba
ffBO5vPr4fQtCzvFt3BslCvMgmHv69n/2sPpXRa9i8DnsgCzsM9/ec0i6F8W
CsW/CGRnyS/02PfPmcc/R9DDLOwVDyOw6oi/oGbDVv1Jt4cnI+hjNnqKjxFo
LAs6G4f/8Co9mgh6mY0S8TICyXK8yka/D92/ltWMpJ/ZOC5+RmKRv5yqsvFw
v+N957BIeppNTyNRRzZIDk59VHypZHckfc2BR3yNRLS/HIzLwZCD1m/sSZH0
NgdnxdtIzJbjVw4e18w3WCtE0d8c5ucoVH+74XDlkGlFQZ8oepyDZ+JxFGS5
NMjFcJ+2eb9F0edcXBKfoyCP4+dcvDmsvmEKjqLXuRgjXkfh7fEsFzc+UQw0
PIyi37nM59GQjyvIxcSjWQXa9tH0XIE74nk097sCleukr1PPi6bvCkwR36O5
/xUIOpZcR3klmt4r6H0064ECk+omBOQURtN/Be6L/9GsD74/fyJmaFajGOYB
BWZKHohhvVAgol5kSfqEGOYDBT5hrnlbPxRYeDJ0a+rRGOYFBaIlL8SwnihQ
79PgRsmKGOYHBfNDDOuLAsmnAkITqscyTyhRV/JELOuNEksa3BkVNziW+UKJ
FMkXsaw/SjQ6c8MTvSOWeUOJdZI3YlmPlMhseHV3ZFws84eS55dY1iffnz97
qUX4q1jmESXmSR6JY71S4vD+EdMmN4pjPlEiTvJJHOuXEq6c7PaTesUxryiZ
V+JYz5TAR8NeTJgQx/yixCLJL3Gsb0qcHJGROn51HPOMCgmSZ+JY71TwHBh8
bNzROOYbFepJvolj/VNhgCJlxtigOOYdFZZL3oljPVThTM3vOo5RxDH/qJAm
+SeO9VGFJz8lvh5VHgdZzgdUaCR5KA5v2wcqDD7UP3Nk9XjmIxXzUTzexkcV
LihjT/7UNp55SYUMyUvxrKcqPP2475wRg+OZn1RoLvkpnvVVjaGjorr8OCee
eUqNtZKn4llv1bh8uNc7w3fEM1+pkSv5Kp71V42XqrCcoZfimbfU+FzyVjzr
sRojP+l+9oe4eOYvNTZK/opnfVbj6ugH84fkxzOPqaGRPBbPeq3Gf0e6dB/8
Kp75TM3zZgLrtxpjNYGVvm+QwLymxhbJawms52rcqd1R9V2PBOY3NfSS3xJY
3zV4b+zdPweOS2Ce0zDPJbDeazD+WPtFA1YmMN9peJ5NYP3XIEB7s9e3hxOY
9zQwS95LoAcaVPLz58u1b/Ofhv2rBPqgwdRx17TISWAe1GC35MEEeqFB8PHP
L/d1JzAfapgPE+iHBtXkiycyL2rQXfJiIj3RYHq95n37fJHI/KjBH5IfE+mL
FuHjL1TrPSiReVKLYsmTifRGixonmxh7zkpkvtQyXybSHy1mGc5e7bEtkXlT
i6OSNxPpkRZR9Ruu7H4hkflTi1LJn4n0SYvaE0/17xaTyDyqZR5NpFda/Hqq
3kddLYnMp1ock3yaSL+0iDMes3R5kci8qoVL8moSPdOiQYPaNzv7cvrb/Kpj
fyCJvumwaNLhNZ26JTHP6phnk+idDomn/Rs4iflWx35CEv3ToaF5f60Oy5OY
d3X4XvJuEj3UYUXDGoVfHkxi/tUx/ybhbXtSh7TJ/7vT/m4S87AOf0seTmL/
VIemZ6uub5eVxHyswzDJx0n0U4c1ll2D27qSmJd1uCB5OYme6pDdyB/Akpmf
9Xgq+TmZvurRcsoOW+tWyczTeoyUPJ1Mb/VYe65iYKuByczXelySfJ1Mf/XI
yduy6fMZyczberyUvJ1Mj/Vo3eTN0JZbkpm/9Rgt+TuZPuuxYerGT1ucT2Ye
1+OG5PFkeq2H4fzLks+ikpnP9ago+TyZfuvRvmBtcDNTMvO6nnk9mZ4bsK3p
s61NnyXTcwPuSn5PoecGWKatHtGkbgo9N+B9yfMp9NyAThf+btT46xR6bsA0
yfcp9NyAXYXLXQ1HpdBzA4Il76fQcwPymj0KbbA0hZ4bUEXyfwo9N6DLL0t8
CTqFnhvwi5wHUui5AXsuekbVv51Czw0IkfNBCj03wGZd2KxeRgo9N6Ca3KgU
em5Ej+YuTx1HCj03Yq6cH1LouRGHZ8yLrF05lZ4bESrniVR6boTNl/4+aZlK
z434WM4XqfTciJ62WeNqfZtKz32fL+eNVHru+/wWthYfT0+l50YkyvkjlZ4b
UTbzl0cfbUql50bUk/NIKj03ov+VgpgPz6bScyMWyfkklZ4bccI+ZV+NiFR6
7vt8Oa+k0nMTvC0tE6sbUum5CU3k/JJKz00YNHtS62r/pNJzE36V80waPTfh
5F+Gv6vWTqPnJmTI+SaNnpvwsHhcQpXOafTcBNlu/dPY3zBhcCvtgfd/SuP5
x8TzTxr7ryZcmDN6SuXFafTc9/lyHkqj5yb8c1XZ9r19afTchGZyPkqj5yaM
KB3x7N2bafTcjHVyXkqj52Zcbp2TXDEtjZ6b2S9Po+dmPPVp/k5JGj03o7mc
p9LouRmjr2dMr1ApnZ6bsUHOV+n03IxrjsFfvfksnZ6bed5Kp+dmVGiT6isJ
6fTczHlKOj03Y/z879JfTUmn52ZslvNYOj034/aNxOMv16fTczO0cj5Lp+dm
vOvqP+uF71z71nMLvpLzWjo9t2B827hOz0PT6bmF57d0em5BwIK+b/7VptNz
Cyxynkun5xZUuRWV9c+TdHpuQSc532XQcwumlPU6/fTjDHpugdy+Zhn03ILg
duFz/+6QQc8tsMr5L4OeW1D11+5dnwzPoOcW9JLzYAY9t2D67QcVHy/MoOcW
/CHnwwx6bkGku4vi4Z4Mep7H82IGPc9DTbmxGfQ8Dz3k/JhBz/Mwd1HHheXJ
GfQ8DwflPJlBz/MQe+duD48tg57noVTOlxn0PA+flLev7H4nk57nAXLezKTn
eVj41S21q2kmPc9j/zaTnuchYXGbi85vMul5HtxyHs2k53mof+/aYsfkTHqe
hwFyPs2k5/lY6v28T+naTHqej5NyXs2k5/mI73ClasmJTHqej3I5v2bS83w0
Wtpcb3+QSc/zMUjOs5n0PB8rAi5csakz6Xk++8mZ9DwfyQ+bLC96lMnzbj6e
ynk3Cx/Jfc9H007nYP0oi+fffAyT828WPc/HqmX+gJBFz/NxTs7DWfQ8H1mB
p0z5Q7PoeT6ey/k4i54X4LPH9a7nzc+i5wUYIeflLHpegDWdj6+y7Mqi5wW4
KufnLHpeAMXy2gPMf2XR8wL8J+fpLHpegFb3D9c0JWbR8wL2w7PoeQE2P/F/
4Sx67vt8OW9n0fMCaLocuKV/k0XPC/Bazt/Z9LwAHVbWWKtrnE3PCzBezuPZ
9LwAW4P/N0jbO5ueF/J8ns39XgiTrzprJmbT90K8J+f1bO7/QnToutuqWpNN
7wvxs5zfs1kPCrFjVeV7ymPZ9L8QIXKez2Z9KITxwY4NivvZzAOFqCzn+2zW
i0J08x9nlNnMB4WYKuf9bNaPQuzttrVejjebeaGQ5/9s1pNCFK1+Y8+qkcP8
UIia0g/IYX0pRPfQjUGZ7XKYJwoxW/oDOaw3hdj/78vNGUNymC8KESn9ghzW
n0KUdF83PH1uDvNGIWqxT/O2HhWi92/PGqTtzGH+KMR86SfksD4V4nDYakfK
5RzmkUJESH8hh/WqEM5nfz9Ijs9hPilEXek35LB+FaJ/zxXbkwpymFcKOe/O
YT0rxMm1j3wn4Bzml0IkSj8il/WtEK7wJU0SGuYyz1jxqfQnclnvrBj4wlMW
1zOX+caKxdKvyGX9s+JMr1/DY8fnMu9YkSb9i1zWQyser3P9HrMql/nHiibS
z8hlfbRiSOS8MdFHcpmHrJyn5LJeWnHBH08Dc5mPrMiWfkcu66cVz3vP9kbk
5jIvWdFS+h+5rKdW/LjBFhXuyWV+smKV9ENyWV+tGO07jVjeUzBPWTmvUbDe
WrHxP+8tc20F85UVR6VfomD9teJ6k3u1zC0UzFtWxEj/RMF6bIWu7+K1ps4K
5i8rHNJPUbA+W1Fh2peFxv4K5jEr6kh/RcF6bUW7ze5Bxp8UzGdW9Jd+i4L1
24pxf966Y5imYF6zcn6kYD23YkvsgtqGxQrmNytOSD9GwfpehLsFbdbrNyqY
54rYn1Gw3hdB/8Zh1e1TMN8VsV+jYP0vwrvNrg/WnVEw7xVxHq6gB0Xo0G/u
Pe1NBfNfEQZKP0dBH4owcXqrutpwBfNgEZZJf0dBL4qwc0vxBk2agvmwCGel
36OgH0UI8vOhVzAvFiFd+j8KelIES9zMH9QlCkh531TEfpCC798UoYq1eaDq
qYL9oSI0lv6QgufHInR+p6ieqpKS/aIiDJJ+kZLnySJM/eziJuUnSvaPirBc
+kdKni+L8D/JhUrmT9/1Sz9JSZ+KcP+XpsMUnZTMo77rl/6Skl4VoWBrflBu
PyXzqe/6pd+kpF9FqH7p3Ke5I5TMq0XsPynpWRG6Jvy8JWeqkvnVhuHSj1LS
NxtmFDX0RQ4l86wNq6Q/paR3NuyvaB6evUHJfGvDJelXKemfDRHNTwdn/U/J
vGtj/0pJD22wfzuxYdZpJfOvjf0sJX204aOZ9bdl3lAyD9vQQvpbSnppQ8/t
ekdGmJL52IafpN+lpJ82zLl83LeilczLNva/lPTUhkOJY0PSdUrmZxuuSz9M
SV9tiLbVbpxerGSetrE/pqS3Njjf1WxP+1vJfG3Da+mXKemvDXVaHnGlvqti
3rahjfTPVPTYhm8GjhqZWkvF/G1jP01Fn21YMOvjsJTPVMzjNmyW/pqKXttw
fIeiSUpHFfO5Dbek36ai3zbEXTmwMxkq5nUbjNJ/U9FzO9xJP/r+UdFzO96V
fpyKnttRt7jG6KQpKnpuZ39ORc/tGPhednjiryp6bsdE6dep6LkdSz/f1yxx
vYqe29m/U9FzO05/N3RXwl4VPbfjrvTzVPTcjqTZH5THn1LRcztM0t9T0XM7
HvnLwXUVPbejivT7VPTcjkZ+DkJV9NzO969U9NyOQSnfN49LUdFzO6ZIP1BF
z+1YVVJ5T6xWRc/tnBer6Lkd5yqneGPsKnpux33pF6rouR3prXaOi3mioud2
FEj/UEXP7fhn0MDo6Ipqem5HVXnQanpuRws50KvpuR3dpL+opud2DPPdvahm
anpuZ79RTc/tWHNt66PIDmp6bsc+6T+q6XkxLqT2mxDZV03PixEm/Ug1PS9G
TumbmIjhanpezHm3mp4X4+X7sZ9H/Kym58WoKf1KNT0vRqsvNu0LX6im58Xo
Kf1LNT0vxk+Dv3kStk5Nz4sxW/qZanpejPXzXk0M26Om58U4KP1NNT0vxnX/
4z2ppufF7Heq6XkxlNfXtQ69pqbnxXx/SU3Pi/Eqref+kBA1PS/Gx9IPVdNz
3/VLwFLT82L0lf6omp4XY1TVsMkPNGp6Xsx+qZqeF2NTmzUJwTY1PS/Gcemf
qul5Me4O6eYrCWp6XowE6aeq6Xkx9POfHrj/joaeF8Mt/VUNPS/Gmz3B/wTV
1NDzYtSVfquGnhej3c0VU4Kaauh5Cb6V/quGnpdgXEbnpMCvNPS8BEukH6uh
5yXY6XrUNvAbDT0vwSnpz2roeQmCPgg8FDBMQ89LkCT9Wg09L4Gl7dJn9yZr
6HkJ30/Q0PMSvDu0w7R7CzT0vAQNpJ+roecl6Ow7Hd9dq6HnJfhO+rsael6C
qf727W4NPfddv/R7NewH+a7/1q9H7pzQ8LxYwvdTNfS8BPcz2724fVVDz0uQ
Kv1gDT0vgbXMNf32Aw09L2F/WEPPS1Cl+s3UW0kael7CfrGGnpega/v5vhO4
hp6X8P0KDT0vwS/Dvjh2s0hDz0uwSvrJGnpewvdMNfS8hO9jaOh5CUL2XZ1x
o4KWnpcgSxpgWnpeCvvt2enXP9LS81K8kP6zlp6Xonp2y47Xm2jpeSmaSz9a
S89L0ctjO37tSy09L8WP0p/W0vNSzKxx+fXVPlp6Xop10q/W0vNSHPhyxqyr
Q7X0vBRXpX+tpeelCPe/vTdJS89LoZR+tpael6J4UWGnv+Zr6Xkp+9tael6K
Wvv/PHnlNy09L0Ub6Xdr6bnv+u9OfXN5l5ael2KM9L+19LwUc3Ma+yKClp6X
YqP0w7X0vBSHyy1Zl/7S0vNSvq+ipeeliP3wbJdLwVp6Xgq19Mu19LwUZV9N
Pn0xUUvPS9k/19LzUtQd0eCdiyotPS9lP11Lz0vRb4lx7gWrlp6XYqL017X0
vBQLDpzM+fOhlp47sFX67Vp67sCJe+O7/vlGS88duCX9dx09dyApt+7Z8x/q
6LkDJunH6+i5Aw+92ornG+vouQOVpD+vo+cONK55bP659jp67kBH6dfr6LkD
g3xp/GxvHT13YKL073X03IEVEth09NyB7dLP19FzB84tVZ07M1FHzx0Ikv6+
jp47kOJvx87T0XMH8qXfr6PnDjwN+Gnh6TU6eu7g+586eu5AE+VHqlO/6+i5
A91lHqCj5w4MeZTT49QxHT138H0hHT13YNXH/gWoo+cO7JZ5gY6eO3Cx0/DK
J+/r6LkDD2R+oKPnDuSMrL7oRIKOnjtQIvMEHT134N9lmerjSh09d6AG505v
PXeg5eG9vY4X6ui5E91l3qCj504MDxpy8ZhXR8+dmC3zBx09d+I3aRjr6LkT
B2QeoafnTlx+nLr4aA09PXciXOYTenruRG6tXdojjfT03IlSmVfo6bkTrzoP
6nOknZ6eO1FL5hd6eu7EF6Pfu3y4l56eO9Fb5hl6eu7EqBVJVQ8P0dNzJ+bL
fENPz53YeGT70kMT9PTciWMy79DTcydu3v9Wf3Cunp47ESPzDz09d0Knfqfv
wdV6eu6EW+YhenruxJsn/gStp+dOvq+lp+dOfFl7S7UDR/X03AnIvERPz50Y
9zWW77+sp+dOvt+lp+dObB3zn+GPID09d+K4zFP09NyJOyuj8Ue8np47kSTz
FT09d8FwdMPVfQo9PXfhocxb9PTchfce9K6xr0BPz11oIPMXPT13oaP2xYr/
levpuQvfyTxGT89dmPQ03LT3tZ6eu7BU5jMGeu7Crjpr+++tbqDnLpyReY2B
nrsQ1LXH9T0NDfTcxfehDfTchbyx/364p62BnrvwROY5BnruQpXVIat29zTQ
cxeaynzHQM9d+NrfXh1s4LzHhSEy7zGwH+zCtJCvB+wab+D8x3f9Mv8xsD/s
wl7dkxu/zzHQcxfOyjzIQM9dCPGlq99XGei5i/MhAz13oaDu8jU7dxjouYvz
IgM9d6F69075O44Y6LkLzWV+ZKDnLvQc/3DgjksGeu7CMJknGei5CzPW3Lu1
PdBAz8uwRuZLBnpexvf4DPS8DJdk3mSg52UIC/1y7bZcAz0v4/vlBnpeBrve
XbA130DPy/BC5lEGel6GGs9uDdrqMdDzMnwuAxYDPS9Dn/oL72x5ZaDnZfhJ
5lVGel6GuT3a+naIkZ6XYaPMr4z0vAwHJzjXbW5gpOdluCLzLCM9L0PMb9et
m9oY6XkZ1DLfMtLzMjhPzh28qYeRnpfhvy/88y4jPS9D7fBW9zZ+b6TnZWgr
8y8jPS8DjMV1No4z0vMyjJV5mJGel2He8ysbNsw20vMybJH5mJGel+HIp7Ns
61ca6XkZ52VGel6GuJ4tfli/3UjPy/h+o5Gel8E9sShg3WEjPS9DRZmnGem5
Gw3WXay37qKRnrvRQeZrRnruxrenp29aG2Ck525MkHmbkZ67sTSiafFvsUZ6
7ub8zUjP3Thp8v+NKiM9dyNQ5nFGeu5G8otzQWvyjPTcDZPM54z03I2HDaZ8
usZtpOduvC/zOiM9911/70ZbVr800nM3Osv8zkTP3Rg82Vyy6gMTPXfjZ5nn
mei5G8v87aZPTfTcjV0y3zPRczd84SB45Rcmeu7mvM9Ez91Ij/QfCE303M2/
P2ai5248M+u3rhhkouduVJN5oImeu9Hs1XHH8rEmeu5Gd5kPmui5G8MbjRux
fJaJnrsxU+aFJnruxpo+dUKWrTDRczffLzXRczcu/axptGybiZ67ESbzRBM9
9yBrgx84Ez33wCrzRRM99+D12VGuJRdM9NyDj2Whmui5By18Wi65Z6LnHvSW
+aOJnnswIk8RujjGRM89mC3zSBM992Dt6wNNFmeb6LmH80kTPffgWuMROxdZ
TPTcgyiZV5rouQfqb/wDSRM993B+aaLnHryZkj3q1xcmeu5BLZlnmum5B238
7YOqZnru4fu0ZnruwajzQ5strG+m5x7Ml3mnmZ57sDnmg10LWpvpuYd/X9BM
zz24mZ/umd/NTM89nIea6bkHmv92j5n/nZmee1Au81EzPfegYtPBkfPGmOm5
h/NSMz33oB3ebz5vppmeezg/NdNzD8ZNS9k9d7mZnpdjscxTzfS8HFs37/TO
2Wqm5+U4IfNVMz0vh79bN+egmZ6XI0nmrWZ6Xg5T7LvRs/800/NyPJL5q5me
l+O9woQWs++a6Xk5Gsg81kzPy9Gxwra9s6LN9Lwc38t81kzPyzG1Wf9HM7PM
9Lwcy2Rea6bn5djVr8KEmWYzPS/HOZnfmul5OYKnx8bMcJnpeTnSZJ5rpufl
yPcfB5+b6Xk5/pb5roWel6PqxW/2/VLFQs/L0UTmvRa+31GOrvGvHk+vZ+H8
t5zzXws9L8cv1siJ01tZ6Hk5Vss82ELPy7H7nfVx07pa6Hk5Lst82ELPyxH6
Wa/W0wZa6Hk5MmRebKHn5bD1f/7H1NEWel7O96st9NyLGjPC/p4yw0LPvWgh
82QLPfei17Y1k6css9BzL4bJfNlCz72Yfalbws9bLPTci3Uyb7bQcy/2y320
0HMvrsj82ULPvYgoCj4w+byFnns5j7bQcy9cFVf+M+mOhZ578Urm0xZ67sXH
LbpMmRRloedetJF5tYWee4EBjxMnZlrouRejZX5toedezJ8Z2HaiyULPvdgo
82wLPffiqD/eOy303ItrMt+20HMvYi93eDb+mYWee6GWebeFnvuuP7F86vj3
8+i5F29k/p1Hz72oZ7+TPK5uHj33op3Mw/PouRcDKy1qP+7zPHru5Xw8j557
sbhl+yNjv86j517Oy/PouRcnBpY9HzMgj54/xF2Zn+fh/587eFY=
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
+BeLimpTOZdUH+Y7lp/3Xzj5nNaH8TAWK3+9EHPN6MP8JxZv1/qvvfbeh/Ex
FueqOw9SvvnAOpyPxsK5bIeeR35QQbYPYnFx+MnJy6qpmB/F4qM2ymtgfRUk
fYzF5vioH//XQsV8KRZdG5z0fd5OxXgai0a32y/a2lXF/CkWfc8dHN+6r4rx
NQ5HC28tCB2iYj4Vh7p7zqumjFYx3sYhes2C8tmTVMyv4vDgfrHbTAcV428c
siYMGBm9UMV8Kw5dBs/8uecKFeNxHIL2Del8fL2K+VcctjT/MKdgu4rxOQ4r
qjk+6LhfxXwsDscm3uu3xEXFeB0HfXG4/oyHivlZHNalawJDfFSM33Ho2WzE
/awLKuZrcWh//17m6+sqxvM4TDz/tkPJPRXztzhcLvygeRusYnyPR79dTwdr
w1XM5+Jht8qh8vNoFeN9PN7fevxVk6xifhePn/4w112TrWL8j4dTr4LpvfQq
5nvxqL3lYtg7s4oexCOlZo8/NSUq5n/xSLA7XG/4fyr6EI8yg69+yymvZj4Y
jwWpp35cVUVNL+LxOWzs0Pe11cwP4xFaIfrc8sZq+hEPa5rYUs18MR7Fzr/m
DOigpifxmPyiSuCprmrmj/EomncvqKC3mr4k4P7YDsZ2g9TMJxNwz2XxwHkj
1PQmAcWtVwe52KuZXyZgao1hC29NUdOfBJjHa7tHOqiZbyYgUD+yY/ICNT1K
wNO4LWNTl6qZfybg35obT8WsVtOnBMy9iMqPNqmZjybAzj36/NkdanqVgKS4
9kvX7VczP01A+qJx0wYdVdOvBNSZMHBFuRNq5qsJ2H7s3yv3z6jpWQJ+auNU
e4FGzfw1ER+rvTr3vZ+aviWijL3ewfO6mvlsIvrpIge0vqumd4m49mLjKN+H
aua3iZhY+e22hqFq+peI9j7d0vZEqJnvJqKPdeKo6WEiNj2rV6V3kpr5byKK
pgfodmWoIduTiTg6uLXuiVbNfDgRy3fMqFxiUHP/NBFba82c2ey1mvlxIoK/
tEnq/0FNPxPRrffDjeO/qJkvJyIrqtHQP8tq6Knl7/sP6zWtgob5cxJi3vSe
/EcVDX1NQr3dnzy71dIwn06Cy5KdlWo00NDbJPS/kKDSNdUwv05C497v5lxu
paG/SejaPG3k3+01zLeTsHXm4RkNO2vocRI+mSqefNJDw/w7CRcT7D879NXQ
5yQcrj537+uBGubjSVDU/fqs/11Dr5Pwfr+23rs/NMzPk+AYOqHp/PEa+p2E
1pOOjImYomG+noTqfdx8W83U0PNktFk31/Kfhp4nY3X5L9EP/tLQ82S8L5ql
+bBUQ8+TcaP1Ee/Wjhp6ngyPO3ufjFqvoefJCPAcUXXhFg09T0bFxMTda3do
6Hkyji3o+NOmvRp6nozhI+0LVztr6HkyeuzumzrXRUPPkzGp5ru3w45r6Hky
rpas7tbstIaeJ6NX5yBvk7eGnifDHBTf+aZGQ8+Tka3xL158QUPPk/FDhkNs
vSsaep6CGUvish7c0NDzFBSMqVFn4h0NPU+B376Ga3MCNPQ8BV61zV/mBWno
eQqefjx0JS1EQ89T0Ljz+73DwzX0PAVXHrU54BeloecpWKlq6V8mRkPPUzAr
peiHMQkaep6Cwwu37j6aoqHnKTAOT/k5LENDz1Pg5PRfyZscDT1Pwe8/vjbV
yNfQ8xT0M/tV+blQQ89TsLh1pyndTBp6noIXN7eHd3uroeepmO1+am67Dxp6
noq2kVtb1f6soeepaDmlQ/X3XzX0PBWTep5rFVFGoeepuL9cP9f9e4Wep2Ls
5/fhEyoq9DwVDdNeTKnwo0LPU9Go+sqqN6sp3N9Ihf2ZdLN9LYXrn1Tc2VLz
k66uwv3XVEy4Wav98oYKPU9Fs37Ze4xNFHqeihaN11Wc3UKh56mYNj7xdngr
hZ6n4lG6nXPrnxV6nobZge/3b+yg0PM0dHrjf+3xrwo9T0PXzf3/+9ZFoedp
WDH92PrOPRR6nobUI9frTeul0PM0bK53KndtX4Wep8G+ZFTCPij0PA1T2z9/
fWSQQs/T4OFfrbvzUIWep+E7txbqLcMVep5mmVfffps3SqHnaXAae+5D/zEK
PU/D4V/qZFYdp9DzNDyfPc6UMEGh52noa5jcxnWyQs/ToA1rfWDgNIWep+PR
p+CaBX8q9DwdL3e0erbDQaHn6agya6Km+hyFnqfDyXX0hRPzFHqejo71qydW
W6jQ83RU/ODdwWmRQs/T0bhtySXdYoWep2POtfoT+y9T6Hk60pzLtzq8QqHn
6dj18GGTmFUKPU/H30MwsNIahZ6nY2Mz50M91yn0PB2h41R2MzYo9DwdA5J3
eK3ZpNDzdLy+1WHezi0KPU9HnE41bs82hZ5nwLg4Z9FWJ4WeZ6D7sKILi3cq
9DwD/uuCqo/erdDzDCz8MlPTcq9CzzMwOils5pt9Cj3PwKIfPg+4dUCh5xm4
e6jkj8XOCj23XP+voB11Div0PAPmE+Oy7h5R6HkGEhpeXTDGRaHnGXjzPr5W
qqtCzzMwpFWYcbqbQs8zEHFxR3G0u0LPM7B71w91+55Q6HkGVt2c8veZkwo9
z8ThHo66Nx4KPc9ETtUp+/ueVuh5Jpb3Lz9pi6dCzzPR9sn2kTfOKPQ8E/U8
QxaleSn0PBO9n8dc++yt0PNMuP7h17Sqj0LPM9Go1eh79VQKPc9E6viAjXXV
Cte7mYhKeDPvfxoFVa0DOhNvr7xb94/ls6x/MzE2LehmrKLQ80xkzJxc1/ec
Qs8zcbb7XWW5r0LPM+EyN3d6h/MKPc9EgC6pV5bls3iehUaBJwfuu6DQ8yz4
6Zs7tryo0PMsrFi8LvKO5bN4noUlA4+P7u+n0PMsHFu27WOA5bN4noV/TJ2j
OlxS6HkW9j69Fu5m+SyeZ8H+TUmx2fJZPM/CaMdKfQdeVuh5FjYOL7i5z/JZ
PM9C+uoj40Msn8XzLDj+81+DfyyfxfMs9IvoU7nBFYWeZ6H3+4Gtu1s+i+eW
+19b4++hls/ieTYSR16JH3nl/8/3bDjy5+J7Nvrw38v8zwZ4ffE+G+v5+yUe
ZCOL9yf+Z2Mz71/iQzb+4PeTfCAbo/n9JV5kYz+fj+QH2XjP5yfxIxtufL6S
L2RjIZ+/xJNsLOP7kfwhG5f5/iS+ZKMe36/kE9l4wPcv8cZyfY4PyS+y4cnx
I/EnG+kcX5JvWO6f40/iUbZtfEr+kW0bvxKfspHG8S35SDaacPxLvLL8fs4P
yU8sz5/zR+JXNupwfkm+km2bfxLPsrGU81Pyl2zb/JX4lg0Xzm/JZ3KwlPNf
4l0OdjE+SH6Tg2jGD4l/ORjK+CL5Tg7eMf5IPMyxxSfJf3JQxPgl8TEH3Rjf
JB/KscU/iZc5WMD4KPlRDkb+n/iZg0WMr5Iv5djir8RTy/UZnyV/yoGB8Vvi
q+X7ML5LPpUDM+O/xNsc9KMPkl/l2PyQ+JuDzfRF8i3L/dIficc52EmfJP/K
QTL9kvicg/n0TfKxHDSkfxKvc1CJPkp+lmPzU+K35fr0VfK1HFSmvxLPcxBF
nyV/y8ED+i3xPRe59F3yuVz0o/8S73MRwfxA8rtcODN/kPifi+3MLyTfy4Uf
8w/xIBdlmZ9I/pcLd+Yv4kMupjC/kXwwF6OY/4gXudjI/Ejyw1ykMX8SP3Kx
nPmV5Iu56Mb8SzzJteVn1vC+LRcOzN+k/iYXT5jfyf6Q5X6Y/8n6MdeWH8p+
US6aMn+U9WQuxjC/lP2jXNxi/inry1yMZn4q+WeuLX8Vn3LRhPmt5KOW6zH/
Fa9yEcD8WKZHLiYzfxa/ctGK+bXkq7nowPxbPMvFXObnkr9qbfm7+Ka15feS
z2oxiPm/eKfFEK4PJL/VYjvXD+KfFiauLyTf1cKF6w/xUIu/uD6R/FeLJVy/
iI9aXOb6RvJhLZpw/SNeahHK9ZHkx1rb+kn81OIS11eSL2uh5/pLPNXCgesz
yZ+1qMj1m/iqRRbXd5JPa/GO6z/xVotuXB9Kfm25X64fxV8tpnJ9Kfm21rb+
FI+1GMH1qeTflufD9av4rEUlrm8lH9fa1r/itda2Ppb8XAt/rp/Fby0+cn0t
+boW67n+Fs91tvW5eK7Dj1y/i+eWn3N9L57rsIbrf/Fch3fcHxDPdTjP/QPx
XGfbXxDPdbjA/QfxXGfbnxDPdbb9C/Fch27c3xDPdWjG/Q/xXIc+3B8Rz3W2
/RPxXIf63F8Rz3WI5v6LeK7DQ+7PiOc62/6NeK5Dd+7viOc6BHH/RzzXYQv3
h8RzHZZx/0g818GN+0viuQ5G7j+J5zps4P6UeK5DD+5fiec6/Mz9LfFchwnc
/xLPdbb9MfFch8HcPxPPdSjH/TXxXIfP3H8Tz/PQkvtz4nkenLh/J57noSb3
98TzPKRy/088z0Ms9wfF8zyU4f6heJ6HedxfFM/z8In7j+J5HkK5Pyme5yGI
+5fieR5M/2d/Mw8Tuf8pnufBwP1R8TwPAdw/Fc/zEMj9VfE8D4XcfxXP82z7
s+K55fdx/1Y8z0Mw93fF8zzb/q94noeP3B8Wz/Ns+8fieR7suL8snufZ9p/F
c8tn7k+L53mowf1r8TwP27i/LZ7noQn3v8XzPJRwf1w8z7Ptn4vnebb9dfE8
H9e4/y6e58Oe+/PieT7acv9ePM9HD+7vi+f5tv1/8TwfBp4PiOf5cOH5gXie
jyU8XxDP87GZ5w/ieb7tfEI8z0d3nl+I5/nI4PmGeJ6Phzz/EM/z8YrnI+J5
Purx/ET2g/Jt5yuyXsxHL56/iOf5tvMZ8Twf3Xh+I57n2853xPN82/mPeJ6P
CzwfEs/zbedH4nk+zvN8STzPxxueP4nn+VjO8ynxPB8/8fxKPM9HJZ5vief5
aMXzL/E8H448HxPPLffH8zPxvADXeL4mnhfgOM/fxPMC3Of5nHheYDu/E88L
bOd74nmB7fxPPC9AN54PiucFmMDzQ/G8ABd5viieF6ALzx/F8wKYeD4pnhcg
jeeX4nkBvuf5pnhegGk8/xTPC5DH81HxvADneH4qnhfgNM9XxfMCBPH8VTwv
sJ3PiueW++f5rXhegCSe74rnBQjh+a94XoCaPB8Wzwts58fieQHe8XxZPC/A
dp4/i+cFWMXzafG8AM94fi1ftwDOPN8Wzwts59/iueV98HxcPNdjEM/PxXM9
PHm+Lp7rsYjn7+K5Hsd4Pi+e69GW5/fiuR6/8HxfPNfjBM//xXM9ZrA+QDzX
w431A+K5Ht1YXyCe69GL9QfiuR7erE8Qz/XYwvoF8VyPW6xvEM/1GMP6B/Fc
DwfWR4jnelv9hHiux3nWV4jnehSy/kI819vqM8RzPdSs3xDP9WjA+g7xXI9P
rP8Qz/Xoy/oQ8VyPN6wfEc/1qMD6EvFcj4OsPxHPLe+D9SniuR4BrF8Rz/VY
yvoW8VyPvax/Ec/1+JH1MeK5AZ9ZPyOeGzCS9TXiuQEVWH8jnhvQlvU54rnB
Vr8jnhtwifU94rnBVv8jnhsQxPog8dyAXNYPiecGrGF9kXhuwErWH4nnBrxk
fZJ4bsBx1i+J5waEsr5JPDdgIuufxHODrT5KPDcgkPVT4rkB+1hfJZ4b8Jj1
V+K55XqszxLPDZjG+i3x3IAI1neJ5wZ4sP5LPDcgnvVh4rkBG1k/Jp4bbPVl
4rkBH1h/Jp4bEMn6NPHcgCqsXxPPDbb6NvHcgGDWv4nnhejD+jjxvBC1WT8n
nhdiBuvrxPNCVGH9nXheiOaszxPPC6Fi/Z54Xog9rO8TzwvxivV/4rnl56wP
FM8L4cP6QfG8ED+xvlA8L0RV1h+K54WYy/pE8bwQDVi/KJ4XAqxvFM8LEcL6
R/G8EHdYHynnPZbrs35S9oML8YL1lXL+U2irv5T94ULsY32meF6IXazfFM8L
bfWd4nkhfFn/KZ4XIp71oeJ5IRaxflQ8L8Q81peK54V4zvpTGc6FtvpU8bwQ
kaxfFc8LsZD1reJ5Ef5m/at4XoQ41seK50VQWD8rnhchm/W14nkRtrL+Vjwv
stXniudF+Mj6XfHccn3W94rnRajG+l/xvAj+rA8Wz4sQxvph8bwIfVhfLJ4X
oQHrj8XzIsxhfbJ4brk+65fF8yK0YH2zeF4EH9Y/i+dF2MX6aPG8CDGsnxbP
i7Cb9dXieZGt/lo8L0Jz1meL50X4gfXb4nkR/mR9t3hehFqs/xbPi9CT9eHi
eREesX5cPC/CNdaXi+dFqMD6c/G8CE9Zny6eF8HI+nXx3IhNrG8Xz41wZP27
eG5ENOvjxXOjrX5ePDfa6uvFc6Ot/l48N2I86/PFcyNus35fPDfCifX94rnR
Vv8vnhthz/4A8dyIsewfEM+NCGB/gXhuxAH2H4jnRlt/gnhutPUviOdGLGN/
g3huxF32P4jnRlt/hHhuRC77J8RzI35lf4V4bsQ49l+I50Zbf4Z4bsQ79m+I
50ZsZX+HeG5EPPs/xHMj/mV/iHhuxAf2j4jnRjxif4l4brT1n4jnlufJ/hTx
3GjrXxHPi2Fif4t4Xoyn7H8Rz4vhwP4Y8bwYMeyfEc+LUYv9NeJ5MZqx/0Y8
L0ZZ9ueI58W2/h3xvBi/sr9HPC/GBvb/iOfFcGd/kHhejG3sHxLPi9GD/UXi
eTGesP9IPC9GPfYniefFGMj+JfG8GD3Z3ySeF+NbuvQ/iefFcGF/lHhejA/s
nxLPi9GO/VXiueUz+6/E82KUYX+WeF4MNfu3xPNi/Mj+LvG8GKPZ/yWeF+NP
9oeJ58Xox/4x8bwYBvaXiefFWMD+M/G8GDfYnyaemxDJ/jXx3AR/9reJ5yas
Yv+beG7Ce/bHiecmjGb/nHhusvXXiecmLGb/nXhuQkf254nnJoSwf088N6Et
+/vEcxOms/9PPDdhBvsDxXMT/mT/oHhuggf7C8VzE9az/1A8t9w/+xPFcxNq
sn9RPDfhJfsbxXMTWrL/UTw3oQH7I8VzE26wf1LqO0zQsr9Szn9NuMn+S/Hc
hB7szxTPTRjC/k3x3ISP7O8Uz00YxP5P8dzyfNgfKp6bcIv9o+K5CRnsLxXP
TfBh/6l4bkbZzdKfKp6b8R37V8VzM86xv1U8N6OA/a/iuRmP2R8rnptt/bPi
uRnT2V8rnpvRnP234rkZr9ifK56bEcD+XfHcjFz294rnZgxl/694boae/cHi
uRlP2T8snpuRyf5i8dyM39h/LJ6bEcn+ZPHcjLPsXxbPzbjM/mbx3Awz+5/F
czO+sD9aPDfjAPunxXMz9rC/Wjy3PG/2X4vnZnxjf7Z4bkYc+7fFczN82d8t
npuxjP3f4rkZo9gfLrdnhor94+K52dZfLp6/5v/t7P4fAJn47w==
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt2wVUlekWBmAHbB0dW0fHdkZ01LGbVwVz7ARHx+4u7AJRwKCRlu4GuxAR
A0W6kTpwiANHrz3WPWxe113rLpbOif//vv28394/vdbuWrhBq0GDBhXaDRrU
/f/XwDepc9bOx6iNjku2hR3Qrf95NQbIz/a6/53Yeme/7Wb82Pt37Jj1Afz7
3Rgqf39V92j7sOnFR/YjuXVhrt7rWP77Q/go//6J7uHK34c2DTkG3TCzQRZO
yfzvT/H9MnQnFM67eHmnMZYVL86+vztP95i83hnkyOsV6d6a2VJr4LmzcP2l
yqj4hIKvb4Yv8voVuuNinhjdu2KBT6O0r8/0UOkekfe7AMj7vda90d20esGN
S0h5M27p7FZv+f5WGCnv/17XNb5nxN7N1ljdwnOg8vAnfh4bLJHP80U3/7O8
IbpWRP/z3uY7v68dsuXzNUDXIQV9G5+2h3b82H23Q7RwWz6vA9zk8zbE8vXj
614RDu/VZVc3Nkb953fEZ/n8TeHsJH9w3+xro60Hm6P++zjjjXyflshN+rio
1NcFJ46vSst61Qr119OV3+8XdGm4tNWgKDeotrT0P5nUBjfl+7ojWb5vOxiM
lReEYmr78a8N2qP++3tguHz/Dpg92nzy6jIPRC587Hu3VSfUXw9PrJDr0Rmq
BXVX0BNTrfopleouqL8+XrxfXXFhu/JL4Bsv+H0f/GPn127Ik+vljS5yvbpj
4LmOOUkfvVGW9MZI59eeqL9+PkiX69cTiZ5Tr7395oOia545TxN78Xr6oqFc
z97YprlanRv6Ycpof//Otn14ff24HvqieZb37onN/dF4vlZxh939eL394SjX
+3cE1X3dXwIw/qdo0wdr/+D1D+D1749ZdS/XMRCJs27ad92mw/sRiAdyPwag
qu5ydwtC6p8d2vQ1H8j7EwS13J8/YaG5esm9gzHQP+Fj7p1ByJH7Fcz7NRg6
Kyzj3vcPwX/55X17av/F+xeCCXL//sJTzav9OiQUVsPstYOGDeX9DOX9HIot
1jXHMDIMKxbXdmqxYxjvbxgy5P4Oh+bDab5yOJZO+d8avajhvN/hqJT7PQKL
NYtHc0th9tWjeKHWSN7/CN7/kfDRXL0s7whUGP/nMHblKK6HCITIehiNd9/S
D1X+HomjGd9Pf4wbzfURiZWyPsZA/3zdAojEzHehXheGj+V6iYSerJexsOss
XwizC5t8/hQ2jusnCitl/YyHQj5eFIwcWppOGDkB8nJvouAi62kChsufaLzo
cmfasoSJXF/R6CjrSxcmsc80KygaO7d01J25Flxv0SiX9TYJaZq7r7kmcI67
ONL8zCSuvxhkyvqbhD7ygjFwvFa20XDlZK7HGBTKepyMfZvrbsBVRP3Sbrj9
+Clcn1fRWNbnFDx8319zh6+iMLmD84Qeelyv16An61UP7eo/IAZ9rHGZ11Sf
6/ca168+5NM9uYbzJi5jkj7ocz1fRxNZz1MR5ab2T/j7Opobdd99o2oq1/d1
XJb1PQ1a8oWvwz3JaEorxTSu9xsYI+t9OhbWF0AsuegT/rJkOtf/DbyX9T8D
XnVfN/0Gukf5X/9aPoP74SZSZT/MxP/qXs7gJhpNPLXc/vVM7o+biJX9MQtT
6pZ/3k18HTTY0enHLO6XW3gu++Vv2NQt339voa1p5O5m7Wdz/9zi/pmNkiN1
N+QW/p7SXKEYNAfmsp9uQ0f20xwMlQV+G3Ybxvxv4Jy53F+3cUr211ycttfT
LJnbeFs73uXVnnncb3fwWfbbfKT0lhuM0bssdn2fM5/77w4myv6bj1511b/m
Dho5F//7sGw+9+NdWMp+XIA9ddtj913kH/TuqntqAffnXdTI/lyAB3V39+1d
xDVN9t3520Lu13swlP26EG3qNySuz970bfHdhdy/95Am+3cR5PJ9vocYvS29
36xaxP18n/t5EeTjHbuPezUZ7fUaLeb+vo8K2d+L0UD+xCJjVmj6rNDF3O+x
OCP7fQkCEv7W7OhYfFmuXtPUYAn3fyz3/xLM1+zGtiax0Onueudoo6WsB7FQ
Sj1Yik91+sTHYoddtMLn6lLWh1iESn1YBo9f6zbEA9y4OzLXZPMy1osHOCH1
YhlmFNfd4Ado4dzbrXN3A9aPB1gl9cMAr/3rPuAD7NQ5MmhdpgHryQNMlXpi
CMe6T/fsAcq2TTi/ztqQ9eUBJkt9McQkzeKa2TIOa9dsudZl3nLWmzjMkHqz
HBVf6r5wHGqa/RRu2vof1p84LJb68w+s4mQDw2SD9gH/1H9QXy7jsFfq0QrI
102Ow+D9u5uedFzB+hQHL6lPKyAv1/YhCkbO2NJyzUrWq4dIl3q1ElKOFj2E
Q5DF5Xl//sv69RC/Sf36F/Xx4SGWp462nfHfv6xnD7FD6tkqSDnIeohxofNW
fHy2ivXtISqkvq3Gybrt3Dkelr9t+Txo3mrWu3jWu9X4QzZQPJreWzVw/K3V
rH/xrH+r8VLiRTya3Gih7/37GtbDeLhIPVyDg3XboSAe51vs0Ntot4b1MR7F
Uh/XoEfdcu7+CI43THTOaK9lvXyEaKmXa/G4bvmtfgSd+/M+fN23lvXzEZpL
/VyLXXW31/MRpvRICUwuW8t6+ghKqafr0Ek2/CMUZTfR/2GwjvU1gXlgHe7X
fby+CWiiehtv9mId620C6+16bNpY9ycB0Qb2f+7QW8/6m4ArUn/Xoy48aSos
SrqrjoTcWs96nIALUo/Xo646HqpMgIvup/BpwzewPj9GS6nPG/CvBNTHyLt+
M3F86AbW68doIfV6AxpLgXoMH4u/ks7338j6/Zj1eyPq7kb7sMeovrbi+ijf
jaznj+Er9XwjJN2pH+PeBN1zE/psYn1/wjyzCd/rttvQJ+jYLWOim9cm1vsn
WCz1fhP86pbz3if4b3GvPIM+m1n/n+CT1P/NmFv/hbFM2XvVLt/N9OAJPdiM
D3W34/0TzEjLeVrUfwt9eIo08WEL3Ou+7uinuNt5WtfQ0C304imaiBdbME0u
4FOEX9+0KH34VvrxFA/Fj62oFR6eYkSE7t6lt7fSE81/P7jOk61wqCvvX55i
uFbiweH62+jLMzwWX7ZBV27IM9wPbbl+W9I2evMMHcSb7SivK68nniEjSnv0
d8Pt9OcZ8/V2XJLy9wyb20S8ri7fDilXxc+gLx7tgJQXrUSce9rGesSBHfQp
EX+ITzsg21cvEYPz+nfObriTXiXCRrzaCdkepolYOu29aab9TvqVCBPxayfq
l18imrc4mDuk/y56log34tkuZNTd3qbPMVknrIPi9i769hwfxbfdOC6f8DlO
zX/hcrj/bnr3HGPEu93oJwvwOXqP7e4Rtm83/XvO89huvHguf3Au6Wkn6/u7
6eFzaIuHu3HAtq6gvkDkL8lavVruoY8vcEl83IPfZEG/gNuPv9b8a7iHXr5A
gXi5B4/kePUCc11Uw2b676GfL/Ba/NyDHXXlNPUF7pRqHSp+v4eevsBD8XQv
OsgGScLH7H1//TF1L31Noq97cbeuHCxNQu0RrPjVfi+9TUKUeLsXG+T4lYTg
pxu+3CrbS3+TkC7+7kPL+g2H/o/Kf242eh891vz34vE+yHL59SW27oizbWi+
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
GDxjhCc9V8BY+oWe9FyB/A8Jd7znedJzBfuHnvRcgbt/XznWfpsnPVdgpmxc
T3quwOgPJVXOZz3puQIW0l/0pOeaf//BusloL096rsA26Td60nMF3v4dklpx
15OeK9h/9KTnZRj3cejsiBxPel6Gt9KP9KTnZWj7qff+i+896XkZ+5Ne9LwM
pnNPzjrVxouelyFH+pVe9LwMNv9Ne2k2yIuel/F5Ii96XobRXw9r+c/0oudl
6Cn9TC96XgajRZ0VuRu86HkZBkt/04uel2Fag977+xp70fMyPJN+pxc9L8M1
rctRJu5e9LwMjaT/6UXPy3Bn+cErn2550fMy9kO96HkZVjR9OM4ky4uel7E/
6kXPy+DQ4siZPu+86HkZZki/1Juel2HdetdjOb940/MyPi/lTc/LkNB2QB/f
Qd70XHO9pZ/qTc/L8Lhjn0NnZ3nT8zL2V73peRk27D539Pgmb3queX/pt3rT
8zLY91g2yOKMNz0vh770X73peTmW97W5GOLpTc/LkSP9WG96Xo77J8a4Ku55
0/NyNJL+rDc9L8fVwbMMh+V70/NyvJB+rTc9L8esEY/j7T970/NyPp/gQ8/L
ccAy/FWrTj70vBz9pJ/rQ8/LMW6Str/bCB96rnk/6e/60PNyOEyL+23KQh96
Xo586ff6sB9UDgsv1ZSvu3x4Xixn/9eHnpej3WLjjs8v+tDzcryVfrAPPS/H
qH9MHCODfeh5OcqkP+xDz8vx4br6SchTH3pejl3SL/ah5+WYvfWx/12lDz0v
5/MVPvRc8/p7m49UNPKl55rrJf1kX3quuf4vb+zu2deXnpfDVfrLvvS8HEXG
qcv3TvGl55rvK/1mX3quhP35ZW9zVvvScyX7z770XImKyunjlp30pedK/C79
aF96rsQLN+8hVW6+9FyJIulP+9JzJeb5b02zueNLz5UYIP1qX3quxKbGbv0W
5PnScyWf5/Ol50r8envc7/3+86XnSphJP9uPniux/pFeRqsufvRcCU/pb/vR
cyWm9rsxrNUYP3quxHzpd/vRcyVicy/r9lnmR8+VsJX+tx89VyK1rOTTHCM/
eq7EfumH+9FzJY5Pc1pzyd6Pniv5vIofPVfi4ddbhxQxfvRciW/SL/ej50pc
aTpDd366Hz1Xwk/65370XInWWydFpbz1o+dKlEs/3Z+eK9Gzl0/65nb+9FyJ
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
s+A=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJw12wVU1ecbB3CHzh6brX+d7RSdMRuDry06O7Fmd8zELhCxkJIUkO4GuxUR
DKQb4cKFS9wLOjum/3sfvvN4zs6OcvnF+z6f7/s82GXV33PW6tWpU6e8bp06
uv9+DXqdOn3VLMQN7vPjFe9Y1P7/Cmw8bVrVzTkWn49surXbfgNuG1tbXrD6
78+34/HOPTkNzGNxsGX4ZMWB3TBrYKA4vO+/v78Pr+oHe7zfGov9Fb/90TD0
EJrt+Nhs5+r/vv4YVBNbjnxlEotRhTOtnLaZYavFv+12zIjFIfm8EwjqHxv+
dnwsbkxpqtfH8iRcJgz/dMDwv88/hZFxpz/V7R+LEbEJpncunYFNeGCEdfdY
HJDvdw4OdR3ad/xfLK51tKiafe08ZjycMTri5/++vw3uaDJajv8xFm5xnSN3
brBFgVlv75zPMbweO0SZTSvd+SoG+Z/kG8JQM/KlflkM7/cCdj74eC4sLwbt
+xd0r3/cAUv0zF/PSInBTbleR3wLzW3yJj4Gi9eM1H0i5j74nudyK4bX74yF
4/5ZOT46Bq4u8gu/9I12rwmI4f244pAZrD3cY5Cb9GFuid9FOI9zHTrLPobP
0w1btj6wr3c6Bu3qLdDXfile6V3zv3kkBtflfj3Qs+7Bv/fsjoGJoXwgmm9r
Uv3Hphjevyeix2/s+np5DKYNOz12RaknfjxxoWnM/Bg+Dy806m8VuvfPGKhn
656gF+5OmKuHsf89H2/0flT2U6NhMTi3RfUl6LU3jCMnv8j4PQZ58rx80La+
6SS/rjHoY9k6J+mDD9zjd+za2/a/5+eL1NcjFkzTj8FTr4lX3vzri5uWKdXd
6v33PP2w8NSQ0d8+RWOz9mm1recPvzfrxubVRPP5+iMwce2XG6XRaJzls310
4wCsaDxws3teNJ93ABIuP7UxS4lGsO52fwlE8dOBWzY9jubzD0TstPX/zrsd
jam6j2sdhMHDN04YFxPN9xGEzeeHjx0YFI1K3ePuEIzZMzPedL8UzfcTjJoD
WPo/h2ic0T695K4hGNls74HmZ6ORI+8rBGh+aMZPx6NhsNT6wbteoXh9eEZ2
473RfH+hWDKvuk2TrdFI1H7a//qHYZfDkp/0V0fzfYZh7FjHay0WRWOjreYQ
hoTj3kKPdh1mRvP9huNN9q4BPSdGQ3tx2luOQF5c638Hj4zm+46AaXvLoxP/
iMY87eLRvlI8zI+7atIzmu8/EvcaJvtt+zUavtqnl+UTid2XAqdYtojmeohE
vucMH+9G0Xj7b/q+it+i8KHpg+h736O4PqLwoERvn+JdFCac1S2AKKBHszf1
1FFcL1HYkaLu1qc4Chfayg1hQblD43nZUVw/0aje2DTgaFIUlHJ50TBcMOtT
WFwU5ONeR2NY2MofCm9EYZD8ikHVtjF3m0dFcX3FYOpF9cApAVEwv/dEu4Ji
sG7guqVm7lFcbzEYMDhs5B37KKRp3772mSDI837y19NRXH+xKNjr097oWBS6
yQfG4t71OR3MTKO4HmOxaN2L1IQtUdi1QfcCLsPzcDs0Xx3F9XkZbt8HrPxr
URQevuulfcOXMVPdyjBsZhTX6xVEjk+I/zYxCi1qLxAJPxo3njsqiuv3CuwG
OtQNHhgFubqEK2j8JCK6rkEU1/NVGD5zarOiUxR0VSH+z6v41XD6wLutori+
ryL6l2S9Lk2joCc3fBWf53Q+baEXxfV+DW+/j36k/hiJObUFEN5tDK4uqInk
+r+G+q6Kvx5q37O37nbTr+FXy/W3BuZHcj9ch+LljRe+qZH4R/dxJtex1CvP
uV1iJPfHdVglJbaxvRuJcbrln3cdG9ZZTGtyJZL75Qb+3aA/7FRoJOx0y/ev
G5iQuSargXad1e6fGxgdfqrvGZdIFB/QvZAbqHy13/Bnm0iclv10E9M8hn9x
PBmJP2SB38RfV+J2djkcyf11E10MO3qG74rEcYfx2iVzE66/TTQ32hTJ/XYL
CUcMO6SsiERKV3nB8Bv7ZdO6hZHcf7dg+PeZv79Nj0QXXfXX3MLhBioDlwmR
3I+3sbdxM9ehIyOxQ7c9tt9Gt30N72X+Ecn9eRtms55f3N8rEvd1b/fNbdjZ
L+/bqVMk9+sdLBh7d/fjVpFoVrshkbxIvWNn00ju3zv4mF/WvXPdSMjj+3QH
IQ7L2nu9ieB+vovESadMGigiIJd36C5mP5/+w66kCO7vuxhvEN5KeTMCdeTX
PTgsDtL+juB+v4c5K3E80zECgfF/anf0PWwbvT174YkI7v97eFU98uLLHRGY
pd2Nzc3voXSPd+Km5RGsB/fQL9Vn9ddpEfio0ydO+/frjtloPyKC9eEemjXZ
m9u/VwQ8/6fbEPdhrTK+mtIqgvXiPva5XP6+r24EjBW6F3wfCZ1vx/R4Hc76
cR9HDy9Py3oZjlcBugu8D9cIt7+sn4WzntzHr1d3z592IxzOuqt7ch8/XVBd
1Q8MZ325j6WT3llkOoRjjHZxTWn6AE2T3O/6mIez3jxA3z6KNaY7wlH+RXfD
DxC87O6eGcvDWX8ewHbt8H/6TA+HzQPZwFCMm5arPzIcteXyAWzefe77oVc4
5HaTHyD68ASNsnU469MD/J7Xq212vXDIxzV/iObai0v+J4z16iGWtX4QmVQU
BilHcx9C/61px9SkMNavh+gdEP8h91YYauPDQwT0jxpVERzGevYQjlZDNV+d
wyDlIOshcu4taNTaMoz17SFOJDazHbwnDEd127ltHPwD1p8wWR3GeheHdktM
So7PDkNP2UBx+FpSEhaJMNa/OEwY11ip7BuGFxIv4vBuz1OLjh3CWA/joH+0
p/2yxmHYq9sOBXE4u6xjU++PoayPcVjXLPJVVVkoOumWc8dHiHbNHzMyI5T1
8hFWfvL5av0wFI91y2/FI2zvW797ZVQo6+cjvB5a9+oUz1D8rXu9Xo/wuNXF
y+HnQ1lPH0H/yfNO7Q6Hoo1s+Ee4Offiu1ObQ1lf45EWXXfYt0WhuKu7vO7x
MFbVV+4zDmW9jUf/175fPw4Nxfp1ul/x2JFccOxIj1DW33i0s4ja3qhlKPQl
d8Wj18+dn7nohbIex8Nrm4F9/9ch0FXHfRXx2O/z/NGTwhDW58e4HdZ0zeak
EPwlAfUxNlqVbW12O4T1+jH2jVtSciskBPWlQD1GzbNNcVtdQ1i/H+P5762a
dT8dAt3baBn+GD+tWpxYuDeE9fwxYreM0HiuC4Gku5rHiJt2+dD6+SGs7wkY
pvd076AJIfim225/JKCp1cGX9QaFsN4nYL4mPjKvSwj8dct5ZwI+dA2rvvpL
COt/Aur16+fs8j0YM2pvGLv0p4Ydqw6mBwmYFlen39aCYLzXvY53CTg5c87/
lj8Lpg+JGBRptHPBzWB46G53WCIMyx4NmRscTC8SEf5atWa+SzAmyQNMxOFU
3+9LTwXTj0Q8PPX1x017g1EtPCRiecuavYfWBdOTRGzZc2j+hfnBcNSV9y+J
yA3x9YiaEExfniDy6vq56YOCYSQv5Ak0zo92fe0aTG+ewHLmne8GzYNRpiuv
R57APm/2h6U/BNOfJ/hx9LHFDq+CcF7K3xNk7ZpikFYYBClXiidofSxsdesX
QZDyovcUsStDGy2/E0SfnuJy20ntw8KCINt3/FN09zvgXMc9iF49xbv6U48v
OhcE2R4WT9HfKDbj6sEg+vUUSVOvO7TfHITa5fcUab8vun9icRA9e4oxSnuT
N1OCkKF7vQ2fQX/HxiXrDYPo2zNMTMtJLOoVhMNyhc9Q3LjUZ3nbIHr3DMo2
ZytKGgShhyzAZ5jz+anr1g+B9O8ZukUHXP1aFojnz+QX5qPjGNvMQHr4DNVe
/Qf3iQ/EHntdQX2Of3Ly7J9cDqSPz2Gi6rr8b79A/CoL+jkMntRzbOcQSC+1
f252fHjiiUA8kuPVc3z42WXSkd2B9PM53u/8897wNYHYqiunqc+xLMTZ7+Pc
QHr6HL2vH3t/e3wgWskGScIit7oxpwYF0tckvJ/XJc+kWyBu68rBgiS8K87Z
1q9FIL1NwpJJfbc1qhuItXL8SkKPo+1zKv4JoL9JmGflG/GiOABNazccqrYn
vL6RGkCPk1BmYHkp5EEAZLn87wWmXSu65hUdQJ9foG2HjNHu3gGQ17H0BSbN
X9PPwy6AXr9AwerzZ3zNAlB7PHuB3Mlz50TuDKDfL2D4Q4zF/VUBkI8rfIFv
1mHds+cE0PNk9H87Tvs7gPs9GXF9d/m1GhRA35Nxd5SR5ahuAdz/yejSxTd9
Q4sAep+MylxfK9e6AawHyWi2aUx0yht/+p8MryTTcfpKf9aHZFxsaGw0K92f
eSAZn9rE+jnF+bNeJOPe1xv7lLH+zAfJqLmy9OpQP3/Wj2QcneSy8ryDP/NC
MnaHbN9bZeHPepKM5NLij9NN/ZkfkuHwrqb08jp/1hft5+c6GXVb6M88kYJZ
Drl6jpP9WW9SMKHHtYH6w/2ZL1Jw6cyApLO9/Fl/UrD60fgM/Xb+zBspOJ3x
erJTI3/WoxS0vjnitx6f/Zg/UvCTacft1yr9WJ9SsKG+e4/ZeX7MIykw2HJl
Us1TP9Yr7fUEbEqzu+XHfJKCnKvXn44M82P9SsELd5/+le5+zCsp+G1Rr+/u
5/1Yz1Kgqpg8YuFRP+aXFDSapadotd2P9S0FtmcXvslZ4cc8kwpLt8k7fGb7
sd6lotAsdfHOcX7MN6lwM/oYMWmQH+tfKu68uLa9c3c/5p1UGA9t6f69pR/r
YSqG72w8RPmjH/NPKqzNLw5Peu/L+piKWZseB9xW+UKWs3Uqtv123iw62xe1
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
TV27urft6EzPC3C11+kWYxo40/MC9FnVY+XOV070vABbJ32wiMhxoucFOJ7x
7fiHB070vAAmP4+aPzXUiZ4XoN7b8O8BDk70vAC7zRce/+WoEz0vwLXbQ3LN
NzjR85e44z2lsd4cJ3r+Eq4D7ZudHelEz19i9Nbmrzr2cKLnLxE157HfbX0n
ev4SFcVRA9d/dKTnL/H211TH9sWO9PwlEur2Ss196kjPX2LzhRil72VHev4S
WS92J+2/5Mjz7kv8cmWz9aLTjvhZFvRLtJ7s3HPCLkeef1+i0uyzo+EyR3r+
Emc32hUYTnak59rv/3n5lwl/ONLzlzAYtvrV4vaO9Pwlfu/oduvgj470vBCf
IxqvCKhxoOeFsFeH5xbkONDzQvybdur3TnEO9LwQ/dY5z98c7kDPCzHAp2D+
A2cHel6I72dM+nY3d6DnhXD4tVG+zVYHel6IL4trVjY0caDnhegzvsndM+Mc
6HkhemYufdOmrwM9L8Q/LZTfIto40PNCWH71VMzRc6DnhSi3tr9YR3OBnhei
bdLN369nXaDnhdC/2s7h0IML9LwIGVPD0qeGXeB+L+K8/AJ9L+J8/AL3fxHe
yDz8Ar0vQrnMvy+wHhQhWObdF+h/EefbF1gfiuAo8+wLzANFuCXz6wusF0Wc
V9szHxRhm8yn7Vk/ivBV5tH2zAtFMJH5sz3rSRHnzfbMD0XYLPNle9aXIvSW
ebI980QRYmV+bM96U4SGMi+2Z74oQk+ZD9uz/hShtcyD7Zk3ipAs81971qMi
LJJ5rx3zRxFCZL5rx/pUhESZ59oxjxQhRua3dqxXRdgk81o75pMiaGQ+a8f6
VYTRMo+1Y14pwkKZv9qxnhVhnMxb7ZhfivBO5qt2rG9FnKfaMc8oOD+1Y71T
IE/mpXbMNwrclvmoLeufgvNQW+YdBdQy/7RlPVRo85xu3mnL/KPANJlv2rI+
KtBX5pm2zEMK5Mr80pb1UgETmVfaMh8pOJ+0Zf1UIFzmkbbMSwpYyfzRlvVU
gREyb7RlflJwvmjL+qrAe5kn2jBPKVBX5oc2rLcKFMi80Ib5SoFTMh+0Yf1V
4IvMA22YtxSc/9mwHitgLPM+G+YvBbrLfM+G9VnBeZ4N85j2ecn8zob1WoHd
Mq+zYT5T4KjM52xYvxWYL/M4G+Y1BT7J/M2G9VyBpzJvs2Z+U2CMzNesWd+L
MV3madbMc8V4I/Mza9b7YgyUeZk1810xGst8zJr1vximMg+zZt4r5vzrPD0o
RkeZd51n/iuGicy3ztOHYvwu86zzzIPFsJb51Xl6UQw7mVedZz4sRi+ZT52n
H8WcR1kxLxajm8yfrOhJMWxk3mQFKe9HinFe5ktW/PmbYnSSeZIV+0Pa5yHz
IyueH7X3K/MiK/aLirFJ5kPneJ4s5jzoHPtHxaiR+c85ni+L0UzmPeeYP4uR
LPOdc/SpGL1lnnOOebSY85tz9KoYnjKvOct8WoyHMp85S7+KsV/mMWeZV4sR
L/OXs/SsGDEybznL/FqCQTJfOUvfSjBL5ilnmWdLOD85Q+9KMFXmJWeYb0sw
QOYjZ+hfCUJkHnKGebcE92X+cYYelmCbzDvOMP+WIFzmG2foYwnOyzzjDPOw
9vvL/OI0vSxBC5lXnGY+LsFVmU+cpp8l+CjziNPMyyV4IfOH0/S0BEYybzjN
/FyC8TJfOE1fS1Am84TTzNMl6CDzg1P0tgSvZF5wivm6BItlPnCK/pZgicwD
TjFvl+Cr9P9P0eMS9vtPMX+XsL9/ij6XYKn0808xj5ewf29Jr0tQKf16S+bz
ErST/rwl/S5BkfTjLZnXSzBM+u+W9FyJftJvt6TnStyW/rolPVeiTPrplvRc
iQDpn5+k50p8kX75SXquRJX0x0/ScyX2SD/8JD1Xwkn63yfpuRIzpd99kp4r
4SX97ZP0XImz0s8+Sc+V0Jf+tQU9V7JfbUHPlciV/rQFPVeil/SjLei5kv1n
C3quxCnpN1vQcyU8pL9sQc+VmCz9ZAt6rmT/+AQ9V2K79ItP0HMlSqU/fIKe
K9kPPkHPlXCR/u8Jeq5ElvR7T9BzJWKlv3uCnivRRfq5J+i5Er2lf3uCniuR
IP1ac3quRH3pz5rTcyX7seb0XMn+qzk9L8VE6bea0/NSKKS/ak7PS9Fa+qnm
9LwUhdI/NafnpRgr/VJzel6KMdIfNaPnpciQfqgZPS9l/9OMnpciUfqdZvS8
FL2lv2lGz0vZzzSj56WIkv6lGT0vRbr0K83oeSn7k2b0vJT9yOP0vJT9x+P0
vBSbpN94nJ6Xwkr6i8fpeSmM5XOO03Pt50v/8Dg9L8Vx6Rcep+fa+5P+4HF6
rr1+6Qcep+fa5yH9v2P0XPvn0u87Rs9L0VD6e8foeSnMpJ93jJ6XwkX6d8fo
eSkmS7/uGD0vZX/uGD0vZT/uGD0vg1L6b8foeRnU0m87Ss/LMFT6a0fpeRku
Sz/tKD0vw2bpnx2l52Uwln7ZUXpehuXSHztCz8vgL/2wI/S8DO2k/3WEnpfh
jvS7jtDzMjhLf+sIPS+Du/SzDtPzMmRK/+owPS/DMOlXHabnZexPHWY/qAyX
pB91mOfFMrhI/+kQPS9DovSbDtHzMvSV/tIhel6Gq9JPOkTPy7BL+keH6HkZ
1kq/6BA9L4Ol9IcO0nPt9Uo/6CA9L2P/5yA9L0Nj6fccpOdleC39nYP0vAx1
pJ9zgJ6XsX9zgJ6XsV9zgJ6XYYX0Zw7QcxWGST/mAD1XAdJ/2U/PVey37Kfn
KvZX9tNzFQ5IP2U/PVdhivRP9tNzFSZLv2Q/PVdht/RH9tFzFZ5JP2QfPVfh
L+l/7KPnKrSXfsc+eq7CT9Lf2EfPVegr/Yy99FyFE9K/2EvPVagj/Yq99FyF
SOlP7KXnKrhJP2IvPVchVPoPe+m5iv0GU3quwhbpL5jScxWaSz/BlJ6rUCb9
A1N6rsIb6ReY0nMVekt/wJSeq+Ag/YA99FyFwXL+30PPVfgm5/099FyFD3K+
30PPVegl5/k99FwFCzm/76HnKrSR8/puel6OLDmf76bn5YiX8/huel6OCjl/
76bn5TCU8/Zuel6OG3K+3k3Py7FLztO76Hk55sn5eRc9L+d5eRc9L+fPV++i
5+UwkPPwLnpejjQ5/+6i5+UIlvPuTnpezvPtTnpeDrWcZ3fSc+33l/PrTnpe
jrdyXt1Jz8vxUM6nO+l5Oe7LeXQHPS+HRs6fO+h5Of6U8+YOel6OPDlf7qDn
5fCQ8+QOel6Oc3J+3EHPy7Ue6c6LO+h5OX6U8+F2el4OCzkPbqfn5Tz/bafn
5fx5zu30vBzD5Hy3nZ6X47Cc57bT83L+/OR2el4OyHntb3pewfPZ3/S8Ag3l
PPY3Pa/AETl/baPnFZgn561t9LwCNnK+2kbPK/jzftvoeQXPT1vpeQUs5by0
lZ5XYJKcj7bS8wqsl/PQFnpegUo5/2yh5xV4LuedLfS8As3lfLOFnlfglpxn
NtPzCiTK+WUzPa/AYDmvbKbnFfjeV3c+2UTPK9BDziOb6Ln28+T8sYmeVyBC
zhub6Ln260fpzhcb6XkFzxMb6bn2euX8sJGea+9Xzgsb6XkFzwcb6HkFFsh5
YAM9r8A/kv830PMKfJC8v4GeV2Cm5Pv19LwCLSTPr6fnFRgq+X09Pa9kXl9P
zyv58y3r6HklVJLH19HzSthK/l5HzyvhJnl7HT2vRGPJ12vpeSXSJU+vpeeV
zM9r6XklHCUvr6XnlbCSfLyGnleiUPLwGnpeCTvJv2voeSXCJO+uoeeV/PmE
NfS8EvUkz66m55UYK/l1NT2vRIHk1dWc91QiT/LpavaDKzFK8ugqzn8qUUfy
5yr2hyvxm+TNVfS8EpclX66i55Vwljy5ip5XQin5cSU9r8R5yYsr6XklnCQf
rqTnlWggeXAlPa/k/HcFPdf+ueS9FfS8Eu6S71bQc+3zkjy3gp5XQSX5bQU9
r+I8dDk9r8J2yWfL6XkVVkse+4ueV6Gr5K+/6HkVnCRv/UXPq5Aj+WoZPa9C
vuSpZfS8Cl6Sn5bS8yr0kby0lJ5XYa/ko6X0vAoWkoeW0PMqLJb8s4SeV0Et
eWcJPa/CWMk3i+l5FdZInllMz6swXvLLInqufR6SVxbR8yrMkHyyiJ5XYafk
ERN6XsX5iwk9r0JDyRsm9LwKxyRfLKTnVbgheWIhPa9ChOSHhfS8Cn9LXlhA
z6tQJflgAT2vQl/JAwvoeRUGif/z6XkVPov38+l5Ffvz8+m5Gpni+Tx6rkap
+D2PnqtxT7yeR8/VWCA+z6Xnano8l56r+e+P5tJzNb2dQ8+1Xy++zqHnajwQ
T+fQczX//cpseq7mvyeZTc/VsBYfZ9NzNeqJh7PouRqjxL9Z9FxN72bRczU+
i2+z6Lmans2k52ocF79m0HM1zotXM+i5Gr3Ep+n0XA1j8Wg6PVdDLf5Mo+dq
/CzeTKPnavryJz1XQ0/6XVPpufZ5iR9T6bkadaUfNYWea79efJhCz9XoLB4Y
03M1Pkj9N6bnasyRej+ZnqsxQOr7ZHqugZ/U80n0XMP+ySR6rkFDqdcT6bmG
9XkiPdfgnNTjCfRcA0epvxPouQa/Sb2dQM81MJL6Op6ea/jzUuPpuQY/SP0c
R881CJB6OY6ea/BS6uNYeq6BndTDsfRcg2Spf2PouQYOUu/G0HMNCqW+jaHn
GqyRegZ6roG+1C8jeq5BktSr0fRcg4tSn0bRcw02ST0aRc81mCz1ZyQ912C0
1JsR9FyDEVJfDOm5BmOlnhjScw1mSv0YTs81MJV6MYyea+Aj9WEYPdcgT+rB
UHquQW/Z/0PouQZmst+H0PNq5Mj+HkzPqzFN9vMgel6NJ7J/B9HzasyS/TqQ
nldDJfvzD3peDXPZj3/Q82oMlP03gJ5XQy37bQA9r8Y62V/96Hk1mst+6kvP
q5Eh++d3el6NCNkvfeh5NcJkf/Sm59W4IfvBgJ5Xo0zWfy96Xo0est570vNq
nJT1/Rs9r8aXmbr13IOeV8NS1m93el6NvrJeu9Hzarx/qFufXfnzHdV4Juux
C+e/1Xgk668zPa+GRtZbZ3peDQNZXx3peTUuy3rqQM+rsUrWT3t6Xo0Zsl7a
0fNqbJP10ZaeV+OmrIc29LwaI+X9t6LnNXgt77slPa/BS3m/Leh5Dd7I+2xG
z2swSd7fL/S8BufkfenT8xp8lffTlJ7XIEneR2N6XoP6u3TPvyE9r4G3PO/6
9LwGfvJ869HzGjSV/a5Hz2tQJM+vDj2vwQB5Xt+Maj2vwQp5Pl+Maj2vwQZ5
Hh+Naj2v4f2/M6r1vAa5cr9vjGo9r8E4ub9XRrWe1+C93I/aqNbzGujJ9Zcb
1Xpeo60/uutVGtV6/t/1FRnVel6DtXI9eUa1ntdgmHz/DKNaz2swRr5fslGt
5zX4JuszwajW8xoo5PPuGdV6XoOJ8vWXjWo9r0EduZ5Ao9rLq4FR7XzfqNbz
GgypPe8b1Xr+iq7XqfN/8kmtBA==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.5}}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.4572346153846154}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Imw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Imm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Iww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.837767680816478*^9, 3.837767733667782*^9, 3.837767873717676*^9, {
   3.837767906817421*^9, 3.8377679323489428`*^9}, {3.8377679764205303`*^9, 
   3.8377680186194677`*^9}, 3.8377680605412197`*^9, {3.83776813095359*^9, 
   3.837768136707369*^9}, 3.837769005089463*^9, {3.837770815345251*^9, 
   3.8377708200755253`*^9}},
 CellLabel->
  "Out[278]=",ExpressionUUID->"a3b28e82-33aa-4df4-9996-1ef20fae060e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Cyan", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", "DotDashed"}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Dashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equism"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"Darker", "[", "Cyan", "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", 
   " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.2"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.837768501505848*^9, 3.8377686056898823`*^9}, {
  3.837768982817734*^9, 3.8377689942818623`*^9}, {3.837769192342967*^9, 
  3.837769199788206*^9}, {3.837770832388818*^9, 
  3.837770877704344*^9}},ExpressionUUID->"d00948ae-d2ea-4270-bf76-\
99db67bd8981"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
+9LzJIyp9dH5yAlfep6EvU+qhBft9KXnSfA40fjHnNW+9DwJcUO7/PVwji89
T0KtrwPn/D3el54nY5B+/Em7Qb70PBlbts5XV+3uS8+T4dZtQ+rOlr70PBlR
uQdqZNT2pefJqOx8YeDk8r70vPR6i26u8n/jQ8+TsaGJwrpjlg89T4Zd1N17
VtE+9DwZ4eZhxT8e+fC8m4xKE9Kbrjf6oJYs6GT0qvxmTKynD8+/yVgeWGHn
yOs+9DwZVw7Ud1Kc96HnyXjav31os0M+9DwZX9/0+Wa22YeeJ6O7379d3i3x
oecpWLp21qwl03zoeQqs268+/nykDz1PwZPU3coBfX3oeQo+Xjud7NLRh56n
oPOsq9XqNvah5ymYU9er/8GqPvQ8BWef+6/I/+JNz1Nwy+yZ5cwib3qegpcj
ku4EJnvT8xS0+1FU2D3Um56nYLrpe+Nr97zpeQpO76g1urLam56nQN+z1fZt
zt70PAUFBT0dUi550/MUNHUbFjL+lDc9Ty11cuoX/W5v7vdUzsu96XsqFDIf
9+b+T0WmzMO96X0q59/erAepmCDzbm/6n4rdMt/2Zn0ovZ7Ms72ZB1KRJvNr
b9aLVNSSebUX80Eqhst82ov1I5XzaC/mhVS4yfzZi/UklfNmL+aHVFSX+bIX
60sqBsk82Yt5IhUbZH7sxXqTynmxF/NFKiJkPuzF+pOKKjIP9mLeSEUfmf96
sR6lYr3Me72YP1JxWea7XqxPqXgm81wv5pFU/JD5rRfrVSq6y7zWi/kkFUtl
PuvJ+lV6PZnHejKvpOKxzF89Wc9S8VHmrZ7ML6noIvNVT9a3VCyWeaon80wa
LGV+6sl6l4a7Mi/1ZL5Jw1uZj3qy/qVxHurJvJOGGTL/9GQ9TMNJmXd6Mv+k
4ZbMNz1ZH9PwSuaZnsxDaWgq80tP1ss0TJV5pSfzURqOy3zSk/UzDUqZR3oy
L6UhS+aPHqynaWgk80YP5qc0TJD5ogfraxr2yTzRg3kqDQqZH3qw3qYhU+aF
HsxXaWgg80EP1t80jJF5oAfzVun1ZP7nwXqcBheZ93kwf6UhUeZ7HqzPaagu
8zwP5rE0DJP5nQfrdRq2ybzOg/ksDQ4yn/Ng/U5DpMzjPJjX0lBZ5m8erOdp
6C/zNnfmtzSsl/maO+t7OuxknubOPJeOEJmfubPep6OczMvcme/S0VfmY+6s
/+mch7kz76Vz/uVOD9LxWOZd7sx/6fgh8y13+pCObjLPcmceTMcimV+504t0
WMq8yp35MJ3zKXf6kY43Mo9yZ15MR1uZP7nTk3TMl3mTO6S8H0zHWZkvufP7
N+mcJ7mxP5TO+ZEbz4/paCfzIjf2i9I5H3LjeTIdJ2Ue5Mb+UToCZP7jxvNl
OvJk3uPG/JmOFjLfcaNP6Zgo8xw35tF0HJL5jRu9Sue8xo35NB0ZMp9xo1/p
aCTzGDfm1XSMk/mLGz1L57zFjfk1A24yX3GjbxlIlXmKG/NsBmrL/MSN3mVg
qMxLXJlvM7BL5iOu9C8DLjIPcWXezUC8zD9c6WEGasi8w5X5NwODZL7hSh8z
sEnmGa7MwxlwkPmFK73MQLjMK1yZjzNQWeYTrvQzA/1lHuHKvJyBNTJ/cKWn
Gbgq8wZX5ucMvJD5git9zcD3c2XzBFfm6QzOD1zpbQaWyLzAlfk6AzYyH3Ch
vxkIknmAC/N2Bj5K/9+FHmegu/T7XZi/M7BA+vsu9DmD/XwX5vEM3Jf+vQu9
zsBr6de7MJ9noL30513odwZmSz/ehXk9A6ek/+5CzzNhkH67Cz3PxEvpr7vQ
80y0kH66Cz3PxH/SP3eh55k4Jv1yF3qeCZ30x13oeSYypB/uQs8z0VT63870
PJP9bmd6nokD0t92pueZUEo/25meZyJd+tfO9DwT9aVf7UzPMzFM+tPO9DwT
e6Uf7UzPM+Eu/Wdnep7JfrMzPc9ETekvO9PzTAySfrIzPc/ENukfO9PzTDhL
v9iZnmciTvrDzvQ8E1WkH+xMzzPRX/q/zvQ8k/1eJ3qeyf6uEz3PxAvp5zrR
80xUkP6tEz3PRF/p1zrR80z2Z53oeSYuSz/WiZ5n4qn0X53oeRY+S7/ViZ5n
oZv0V53oeRYWST/ViZ5nwVz6p070PAv3pV/qRM+z8Eb6o070PAsdpB/qRM+z
MFf6n070PAvnpN/pRM+z4C/9TSd6noWX0s90pOdZaCX9S0d6noUp0q90pOdZ
OCb9SUd6ngWD9CMd6XkW+4+O9DwLzaTf6EjPszBJ+ouO9Lz0etJPdKTnWVBI
/9CRnmchR/qFjvQ8C7WlP+hIz7MwRvqBjvQ8i/0/R3qeBW/p9znS8ywkSn/P
kZ5noY708xzpeRaGSf/OgZ5nYZf06xzoeRbcpD/nQM+zECv9OAd6no2q0n9z
oOfZGCz9Ngd6no0N0l9zoOfZ7Kc50PNs9s8c6Hk2yku/zIGeZ6Of9Mcc6Hk2
Vkg/zIGeZ+O69L8c6Hk2QqTf5UDPs9nfcqDn2egu/SwHep6NJdK/cqDn2bCW
fpUDPc/GY+lP2bMflI1P0o+y53kxG39J/8menmdjvvSb7Ol5Nsylv2RPz7Nx
R/pJ9vQ8G2+lf2RPz7PZL7Kn59mYJf0he3qejdPSD7Kn59m4Lf0fe3qezX6P
PT3PRkvp79jT82xMkX6OPT3PxhHp39jT82xopV9jT8+zkSv9GXt6nsN+jD09
z4GN9F9u0vMcfJJ+y016noNF0l+5Sc9zECT9lJv0PAedpH9yk57n4Jz0S27S
8xwUSX/kJj3PwQzph9yk5znQS//Djp7noKn0O+zoeQ72S3/Djp7nIF36GXb0
PIf9Czt6ngNP6VfY0fMc/CH9CTt6noOd0o+wo+c5CJX+gx09z8FQ6TfcoOc5
cJD+wg16noPK0k+4Qc9zsEr6BzfoeQ6eSL/gBj3PQQ/pD9yg5zmwkn7ADXqe
g1dy/r9Bz3MwX877N+h5Du7I+f46Pc/hef46Pc/BKTm/X6fnOSiU8/p1ep6L
yXI+v07Pc+En5/Hr9DwXjeX8fZ2e5+KQnLev0/NcpMv5+jo9z8VIOU9fo+e5
8JDz8zV6notqcl6+Rs9zsUXOx9foeS7C5Dx8jZ7n8vvP1+h5Ls+71+h5Ls+3
1+h5Lr9vfJWe5/L8epWe5/L7wFfpeS6/33uVnufinZxHr9LzXMyU8+dVep4L
o5w3r9LzXLSU8+VVep7L8+RVep7L769eoee5mCTnxSv0PBcaOR9eoee5qCvn
wSv0PBd75Px3hZ7n8vucV+h5LgbJ+e4KPc/lee4KPc/l+e0KPc/Fajmv2dLz
PDyV85ktPc9DHzmP2dLzPFjL+cuWnufx+4S29DyP3w+0ped5eCDnKVt6nodO
cn6yped5/D6eLT3PQ6Gcjy7T8zxMk/PQZXqex++/XabneWgq553L9DwPR+V8
c5me5yFNzjOX6XkeRsn55TI9z4OXnFcu0/M81JLzyWV6noetch6xoed5/P6V
DT3PQz85b9jQ8zzckPOFDT3PQ3k5T9jQ8zyslPODDT3PwyM5L9jQ8zx0l/OB
DT3Pg7mcBy7R8zzm/0v0PA/zJO9foud5uCP5/hI9z0MryfOX6HkeTkh+v0TP
81Eoef0SPc/HRMnnl+h5PtSSxy/R83x+/8Sanudjn+Rta3qejwzJ19b0PB8j
JU9b0/N8eEp+tqbn+fw+hjU9z8dmycfW9DwfEZKHrel5PvpJ/rWm5/m4JnnX
ip7no7zkWyt6no9lkmet6Hk+giS/WtHzfOZVK8578jnft2I/OB+vJI9acf6T
jzmSP63YH87HLcmbVvQ8Hx0lX1rS83yYSZ60pOf5KJD8aEnP8zFF8qIlPS99
3pIPLel5PhpJHrSk56XPW/KfJT3P5zzXkp7nY4TkOwt6ng8PyXMW9LyA+c2C
nhdgs+Q1C3pegEjJZxb0vAD9JY9Z0PMC2Er+sqDnBfguecuCnhdgueQrC3pe
gGDJU+b0vID5yZyeF+C85CVzel7AfGROzwswW/KQOT0vwC3JP+b0vACtJe+Y
0/MCnJB8Y07PC5AtecacnhfgiuSXi/S8AAslr1yk5wXoKPnkIj0vwCvJIxfp
eQG0kj8u0PMCHJO8cYGeFzBfXKDnBagjeeICPS9AjOSHC/S8gPOI8/S8gPng
PD0vQC/JA+fpeQHeif/n6XkBAsX7c/S8AGbi+zl6Xogx4vk5el6IuuL3OXpe
iFTx+hw9L6TPZ+l5IbaJx2fpeSEGiL9n6XkhypeUeXuWnhciSHw9Q88L6ekZ
el6IOeLnGXpeSC/P0PNCZIqPp+l5IbTi4Wl6Xvp5xL/T9LwQQ8S70/S8EH+I
b6fpeSEixDMzel6Ia+KXGT0vxELxyoyeF6KD+GRGzwtRLB6doueF8Bd/TtHz
QvbTTtHzQowVX07R80LUEE9O0fNCRIofJ+l5IftRJ+l5IVaIDyfpeSH7RSfp
eSG+Sf0/Qc8LWe9P0PNCnJT6foKeF2Gy1PMT9LwIjaR+H6fnRUiRen2cnhfx
+3XH6XkRNkk9Pk7Pi/j9s+P0vIjfBztGz4vwSOrrMXpeBCupp8foeRHr5zF6
XoS2Ui+P0vMi5Ep9PErPi+Aj9fAoPS/CLql/R+l5EQZLvTtCz4tQXerbEXpe
hBCpZ0foeRGspX4doedFWCz16gg9L0JnqU+H6XkR5/2H6XkRDFJ/DtPzIp6n
DtPzIlyU+nKInhehldSTQ/S8CAqpHwfpeREGSb04SM+LECz14SA9L8ISqQcH
6HkR8/8Bel6EY7Lf99PzYtSU/b2fnhfDRfbzPnpejL9l/+6j58UIlP26l54X
Y6rsz730vBipsh/30PNibJT9t4eeF+PrsLL9toeeF8NS9tduel6MdrKfdtPz
Yihl/+yi58UYLPtlFz0vRrjsj530vBiLZD/spOfFKJH1v4OeF+OQrPcd9LwY
tWV9b6fnxbCX9bydnhejl6zf7fS89P5lvW6j58WYJutzG7/fUYw0WY9bOf8t
xhZZf1vpeenzlvW2hZ4Xsz+xhZ4Xo4esp830vBh3ZP1spuelf1/WyyZ6Xozb
sj420vNiJMl62EjPS5+3vP8N9LwELeR9r6fnJRgq73cdPS/BAnmfa+l5CQ7J
+1tDz0tgL+9rNT0vwV15P6voeQkS5X2spOcl+C7PfwU9L0Fzed7L6XkJIM93
OT0vwTx5nsvoeQkOyvNbSs9L4CDPawk9L/398nwW0/MS+MvzWEjPS/BZ7n8B
PS/9fXK/8+h56fXl/ubQ8xLcl/uZRc9LULFP2eefQc9LMFg+73R6XoKj8vmm
0vMSBMrnmULPS/BBfv9Eev7r942l57+uP4qelzCvDafnJfjtetm/H0zPS/BV
nmcfel6Cb3L9bvS8BJ/kv5vT85f8s1y5/wOCyQJ+
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt22V0VdcWBWAKtDgUd3eHh+tEi7tr0eLu7m4hkBACgbjLdQ0EDQSNu924
B5cifcli5k9HR+nJuefsvb6517q0XLZp+sqyZcqUySlXpkzpP797vQ2ftGwq
/r1xJtmtfVP8+vcl+CL/3hX/HlwbuP3Kanztnf1PYFIf/vfN/PNDsK+O/xjL
3u3Y+1s9nyf9R/DP78Yn+fOjsSe3Xc+Kvvuxc7WhlfLoOP7/h3n9SRicMuXC
tY1HYVzVddKkf6Ziv1zvOA7I9abDNK5q2c6nTqL/jZ8VR1SZyeufxne5/iwM
1Dzdeff2WRhevX7UVzEHe+X3ncdR+X3zYGh2In+a4SL6l3U63HnWAv5+K97/
Itx81EKxdfVlaPtsHdzi38W8H2uY5X6WIPGr/ELc1LTcf3bKUn7eq9gt97cM
jbsntfnjiA3mTq4cX77Vcpjlfm0xSO53BeavGFR6RTTIedfv0IcVvH87fJb7
Xwn76/KDpCMJNl+D/+HnsefnWYX4V59npLvdgF3jR++3XV/N53kTu+TzrUHD
8rOrd1U5YI7Wd1rRurUwyue9hd7yeddh7gC5IBpMsQlYPXQ9P78jP/8GTOx3
ZviSTEfE5Byolv7nRj4PJ+jleWxEwbTSJ+iEq0f/WbcofROfjzNM8nw24/z6
7G9eb53R9aJHRn78ZiTI83KBvTyvLeh8ql7cq88uqJhwo3bHR1v4/FyxT57f
Vjx3Gq17/8MV2e2tRvzjt5XP0w3z5Xluw7qSp9WgvDuebz++xcV2G5+vO3rL
892OyjEum4dU9oD3/d2OqYe283l78Hlvh3fpx/3TE+erb3jddM0OPn9P/JDn
vwPjSy9XzwurFyz9OX/6Tr4PL8TL+9iJvNLH3cQbEz1ndbUbtIvvxxtaeT+7
cLbk6YW28kGHj+MWRrXZjTh5Xz64Ku9rNzouvPTgYwdfVB0x9Fyt6nv4/nyx
V97fHoSUXK1Rdz8UXPyfacrnPXyffpgv73Mv1lwu3I8+/niR0C73fOpevl9/
9JX3uw8lN1fykQPg0aFxg2ch+/i+A1BH3vd+zCxZPCWvFBd21BhTQb2f71+B
r/L+D8C15OnFuCiw7EG5naNuHuB6UCBa1sNBfPgRuTu3nRLjanxxPXLiINeH
EgZZHwcx6lzpAlCizcKCiLsbD3G9KGEj6+UQrjaQD4SjMzf/9rPzYa4fFYJk
/RxGhtyeCu/35tnddDwMudxbFTrJejqMXvKjxlKnFT0G1T3C9aWGg6yvIzh2
71nJClIj/Enyk7gzR7je1Kgk6+0IIkrefskzwYiiuX/v/nmE60/DenUUreWC
GmjqRHyqt+0o16MGWbIej2Lb6tIXoEX7QZMuarOPcn1qsUDW5zE8/Nih5A1r
YbP0SduZC49xveq4Xo+h9q8bRPnTw++8Cz3G9avDAFm/xyF391SHbf7mmZdH
H+d61sNN1vNxqByKPYIn6JEZ2aegu+k417ee6/s4ysoH1mPqt4Bjr7qd4Ho3
4KSs9xOY/qsAIqhlp8YbXE5w/RtYz0/AufTjRhrQfayrqkqDk9wPRqyV/XAS
70ovN9cIp43NxnufP8n9YUSM7I+TGFG6/BOMqGljZxn72ynuFxPGyn45BevS
5bvYhGPmWnuyd5zi/jFBJ/vnFNL2lr4QEz5bzv95Mu8Uzsh+MqOj7KfT6CkL
3IwVFSt4tvn7NPeXGTdkf53GEZuRJUvGjNfdjuBhxGnut0BUkv12BmGt5AVj
0Kxv0UvHnuH+C+T+O4OWpdW/MBCqfTs2lrlzhvvxDnJlP57BltLtsfkO2jgX
/36751nuzzuYK/vzLO6Xvt33d2D1dI3DEPez3K938UT261nU/LUh8Vtxeu/E
Rue4f++in+zfc5DH9/UuNtZd/GLvpXPcz0Hwlf18DnJ7+4NgGRS7vGH589zf
Qagn+/s8ysjPPUxdNv2bfvd57vd7OCX7/Tw8gyeU7Oh7eHj6hfXswvPc//e4
/y9gaslurHXsHnoH/NXp49ILrAf3sFzqwQV8KdXn0T3YR927fyX6AuvDPXpx
EY6NSjfEfdT6PnDe/yZcZL24z3pxEWMtpS/4Pg620r4JDbrI+nEfOqkfF/HG
o/QG7+PN2O6nN/W+xHpyH62knlyCXendPbuPpZu8mlf3usT6ch+2Ul8uYVjJ
4hpX9QFynl1eEF3divXmAU5IvbFCzrfSD/wALZIne7QdZ8X68wB3pP5YweqB
bGDMfVvl/fZjVvhVLh/grdQjK8jHDX2Ai+VDhj66Y8X69AAdpT5ZQS5X6yEe
1z95tvYXK9arh1gp9eoypBzNeIgynUdGL/vfZdavh8wTl/ErPjxEn6FlWqnW
X2Y9e4hIqWeXIeUg5iE2T7uz4TePy6xvD1FZ6ttlHCrdzg0ewXXFXuNUy2XW
u0esd5fRXjbQIyTs6ve7Y2Nr1r9H9NcaryVePEL9cx+mFs+yZj18hACph9bY
Vbodkh5h8i3lzaFW1qyPj5Av9dEazUuXc7PHOKXcmHPhmTXr5WO0kXppjSel
y2/JY9x/1Ll3UvkrrJ+P6fsVbCp9vU6P8SEm51AXXGE9fcx6egX1ZcM/Rrd8
t+f79lxhfQ1GsNTXKwgqvb02wVj5c1n95+orrLfB+E3q7RWs+qf0JxgONVss
b1R0hfU3mHnyKkrDU0mFRUSbJP81Ha6yHgdjq9Tjqyitjrtzg1Glv/2/hmVX
WZ+fwF/q81UsloD6BMMnzPmrosNV1usnsEi9voo/pEA9wYHFdaznxFxl/X6C
xlK/r6L0bdTxfwLdlrAk95o2rOdPWM9tIOmu+Alyj1/s+GmCDev7U5yS+m6D
n6XbredTtLSbsGP0SRvW+6es9zZwL13OW59igU/F+1fv2bD+P8VHqf82mPzr
A+Pa3cdVM/61oQdP0Vs8sMWn0tfx8SlehB2d26uPLX0IwSrxwRa3Sj9uvxBU
zoTr0U229CIEzuKFLf6SBxiCwV++F4d52dKPEMSJH7YoEh5CsKOKaVDLDFt6
EoLq4sk12JaW928h8G2269TmZtfoyzOMF1+uYai8kGfI6tk7ImjuNXrzDEfE
m2vIKi2vB5+hxei3zWpcuUZ/njFfX8NFKX/PMHOu/9rFL69BypXlGd6IR9cg
5aXsc1xYt07nV8GOPj1HO/HJDrJ9Rz7H44Mdyv4YbkevnmOReGUH2R4nnuPn
5cxJE/fb0a/nsBW/7PBr+T1HHzfn6zd0dvTsOULFMztElb7eii+w2vB3Zt4b
O/r2ApXFt+s4IHf4Ak7Pm/Qc2Pk6vXuBoeLddbSVBfgCKclx+8+svE7/XtC/
63j5Qn5Q+53t09jb1+nhCwSIh9ex40ppQX2Jib/PrNMh/jp9fIks8fE6msqC
fokjDWou2VXHnl6+RBPx0h6P5Xj1Enc7v/IJnmxPP19invhpjw2l5TT8JT4P
Pfe57hl7evoS1uKpPerKBnmFLtPHjlz50J6+vkKw+GqPO6XlYPYrLFv5+yXN
D3t6+4re3sBKOX69wo3dD+LL9b9Bf18xP99A1V8bDlHnDrWbsfUGPX6FTeLx
DchyafQalW8P3urse4M+v4ar+HwD8joWvsYY1dc7b7Nu0OvXSBavb+LX8ew1
9j3WVRre8ib9fo264vdNyOVSXkMbu22W1YKb9DwUU8Tzm9zvoSjI7+GUYnOT
vofS95vc/6Fo/V9hQbfQm/Q+lN7fZD0IxfxaPv0PVnag/6F4L/47sD6Ewrrt
6uMvRzkwD4Sim+QBB9aLULzo3za0ySEH5oNQrJV84MD6EYqKE9Marzc6MC+E
wkHyggPrSSgG/317lfm9A/NDKOIkP9xifQnFjq0L1ZW73WKeCENVyRO3WG/C
4Hmi4X/zVt9ivgjDX5IvbrH+hMFiFz3ey/kW80YYjkjeuMV6FIbGvldsvyTe
Yv4I4/n2FutTGGYFTU0bU/8280gY88ht1qswnAmv1u3atNvMJ2HoJPnkNutX
GIIyn+3JOnebeSUMf0teuc16FobPX0497hN8m/klDDclv9xmfQtDw5POp0eU
cWSeCUeW5BlH1rtwaGsc6ba2qSPzTTiOSL5xZP0Lx9Trf0deHujIvBOOlpJ3
HFkPw1HYauhe4xxH5p9w5h9H1sdwnPVt0sKy3RGynC+FY5bkIUf8ah+Eo23f
b48rWjsyH4XjneQjR/yKj+G4HxS3rkeAI/NSOPOSI+tpOBaMM9Sc+8KR+Skc
XSQ/ObK+RuBzuK3+UK4j81QEnkiecmS9jcDVhTsWefzhxHwVgWWSr5xYfyPw
v6wZ5V63dmLeisDPTqV5y4n1OALPN/3P69MwJ+avCNyQ/OXE+hyBVV//nNJs
sRPzWAQGSB5zYr2OQPljxR9G73NiPovgedOJ9TsCTlVf2W+wc2Jei8AmyWtO
rOcRgK3vMButE/NbBKpIfnNifY9EfPNzWYHhTsxzkXCTPOfEeh+JrV5rzmcU
OzHfRTLfObH+R6JWr7H/q1rNmXkvEsmS95zpQSS8A9vF9urkzPwXiT2S/5zp
QyTG//X7wQVjnJkHI9FA8qAzvYhExuv01sdWODMfRkIl+dCZfkTi8LwHId5H
nJkXIzFJ8qIzPYlEk3THTeG3nJkfI5kfnelLFEzrD9X91+zMPBmFM5InnelN
FGZ8WmRuGefMfBmFdpIvnelPFIoPDV467pMz82YUgiRvutCjKJyv1LjCltou
zJ9RzJ8u9CkK7a989bXr4cI8GoXPkkdd6FUUHjeJnX5vkgvzaRQuSz51oV9R
WOKu+5K91oV5NQqdJa+60LMo/Oxuc6vGaRfm12j2B1zoWzSuGbeN6ufmwjwb
zTzrQu+i0Wfk9LzFD1yYb6Pxu+RbF/oXjdcvelidTHFh3o3GLcm7LvQwGutn
1+jr/92F+Tea+dcVv9qT0aiYWpgQ1dCVeTgaUZKHXdk/jYbbmhdHfvR1ZT6O
xnbJx670Mxoj3nu3bzvTlXk5GlUlL7vS02gk7z/zcuIWV+bnGLhLfnalrzHY
/cfqbdsvujJPx2C05GlXehuDOlZ/Nbzp48p8HYNUydeu9DcGfg3bBj186sq8
HcO87UqPYzDepdzK/ExX5u8YNJL87UqfY5DdJa1y7XJuzOMx0Eoed6PXMTip
u6cY2MKN+TwG0yWfu9HvGLQYdnv2siFuzOsxyJO87kbPY2EMOfD9zHw3eh7L
/owbPY/F3BkLnZW73Oh5LNpJnnej57H4kDhwbNxVN3oei8eS793oeSwu/tOw
qIzKjZ7HYqnkfTd6HovObz5f6fDajZ7Hsv/jRs9j8WRP9ICpBW70PBa2ch5w
o+exWFZOm7Krkjs9j0U3OR+40/NY/Hbhyonb7dzpeSzPC+70PA7X623t/GSk
Oz2Pw3o5P7jT8zgMdJwaVrTEnZ7HoZycJ9zpeRzCOnbfVe+gOz2PYz/KnZ7H
YaO6WtOhN9zpeRyGyHnDnZ7HofKQggcrDe70PA6Jcv5wp+dx8Ah+tvpClDs9
j+N5xJ2ex2HkVK/q2nfu9DwOdeR84kHP45Aad0qTWMODnsfxvOJBz+Oxf/k/
88t39aDn8Zgk5xcPeh6PhoWjynQZ70HP45Eu5xkPeh4Pxc7W7jNWedDzePbT
POh5PCaWKTtx33EPeh6PxnLe8WB/Ix55Z1LfOjt58PwTD6OcfzzYf43HqdpB
157d9aDn8TwPedDzeLR1cBjyLsGDnsejWM5HHvQ8Hnfb7U9v+NWDnifgvJyX
POl5AuYr5p8ZXs+Tniewv+dJzxPwdsCA7mt6edLzBDyU85QnPU+A9cP6UVZT
Pel5ApbK+cqTnieg+6RPew0bPOl5An7IecuTnifgdXRki9SznvQ8gfMUT3qe
gFVL1MEVPD3peQLPY570PAFl8y6v7/7Yk54n8HzmSc8T4Lhtc605aZ70PBHr
5bzmSc8TMeDHZMPB/zzpeSL+kPObFz1PROTJrovdm3jR80S4yXnOi54nYuuf
Vcu/GuBFzxMxTM53XvQ8EVXt87w+zvai54mIk/OeFz1PhFfrkClNt3vR80Ts
lvOfFz1PxBg/j4+jLnvR80TUlfOgFz1PRGrfkzfW+3vR80SeD73oeSIO3Vsx
/OpzL3qexPOiFz1PQsPxI7PNOV70PInnRy96ngRDRMsL6b970/MkHJfzpDc9
T8L0RWV6VWntTc+T0FzOl970PAkFWcmx/xvmTc+TECjnTW96noTzm+8cnL/I
m54n8fzpTc+T0OHfG22O7vWm50n4IOdRb3qehAfH9j7zuuZNz5PY7/Wm58lY
Um3e5jCNNz1PRmc5r3rT82R8tO1X72uYNz1PZn/Ym54n42qLeoEtir3peTKW
y3nWm54no6f3h6Vjq/rQ82Seb33oeTJe9IqosLmjD8+7ybgp510f1JAFnYw1
d5R+1/7y4fk3GYPk/OtDz5Px+xirGUHLfeh5Ml7LediHnifDKXTj16zDPvQ8
GVvkfOxDz1MweP6k29Vv+dDzFFSV87IPPU9BTHrn0X3NPvQ8BZ5yfvah5ynY
tqFy/qJYH3qeglFynvah5ymo8TnH6sRHH3qeglQ5X/vS8xQoDj/p61fLl56n
YK+ct33peQrGVnZPjOzuS89TOB/zpecpyL5y/Oj3ib70PAVKOY/70vMUHGm6
vEObtb70PBWT5Hzuy/2eiuYew19NOOVL31N5Xvfl/k+FuUeL7dtcfel9Kk7L
+d2X9SAVM0w/G96470v/U9FezvO+rA+pKB6ZFPQg2Zd5IBV35Xzvy3qRiosv
zSvzvvkyH6TyvO/H+pGKjnPsq9Rq6Me8kIpPcv73Yz1JRXDqbuWAvn7MD6mw
kX6AH+tLKpasnTNn6Qw/5olU/E/6A36sN6n49r7Pj9Ob/ZgvUhEi/QI/1p9U
2B+o46K44Me8kYp/pH/gx3qUil4V3o+N9fZj/khFeekn+LE+peK1VVjRf0/8
mEdScVP6C36sV6nY0EhxtX2mH/NJKgZJv8GP9SsVFVwvDpxS1p95JZXzC3/W
s1S4dd2QurO5P/NLKrZLP8Kf9S0VQ/QTTt4a7M88Y0F16U/4s95ZkDKsU5fg
ef7MNxZ4S7/Cn/XPgt3PKoYX7vRn3rFgrPQv/FkPLWgwM3tX3av+zD8WpEs/
w5/10YKApMdNhyj9mYcsOCz9DX/WSwsmrHJ9uOKVP/ORBc2k3+HP+mlB7puj
a87n+zMvWWCU/oc/66kFJ/curaGpGMD8ZMFU6YcEsL5a0Kr8MG1C2wDmKQvy
pT8SwHprQeCFZgvKjQxgvrLgnPRLAlh/LZhX/0eZzksCmLcsaCv9kwDWYwu+
OCa4Tz8QwPxlwUPppwSwPltg1ck0ca99APOYBUukvxLAem1BZ43dOyd9APOZ
BV+l3xLA+m1ByJBddiGRAcxrFlyX/ksA67kFy5/MGvr2bQDzm4X9GAXrexqO
dGi09XwFBfNcGudNCtb7NEzeUGl0i3oK5rs09msUrP9paKL6Ul/TRsG8l8Z5
uIIepCH/U3bemF4K5r80TJN+joI+pME4KOZOwnAF82Aa51kKepGGE4eDrTZN
VTAfpqFI+j0K+pGG2Y+1y8v9rWBeTGP/R0FP0tCqslvfaxsUkPJ+MA1npB+k
4Pdv0lA8+WqlzvsV7A+lsT+k4Pmx5HpXjiXePatgvygNraVfpOB5Mg3nY7cG
TL+uYP8ojfM1Bc+XaZjfdNnRLA8F82cagqSfpKBPaWi3bNqsvToF82ga+0sK
epWGj+7DOlR/rGA+TcNC6Tcp6FcaHuV3/+YUoWBeTUNn6T8p6FkarHs0f9Un
TcH8mo6v0o9S0Ld0/L2julPIGwXzbDqCpT+loHfp6Gb6sW3Rfwrm23RckX6V
kv6l48fPgr/eVlMy76ZjufSvlPQwHc9HJjY80UTJ/JuOntLPUtLHdNidfl7Q
oLOSeTgd36W/paSX6Vjx0hTkO0DJfJzOfpeSfqajVy1v62FjlczL6Zw/Kulp
On6bc31l5Gwl83M6Vks/TElf0/H6xun+q1cqmafT0V/6Y0p6m45bqbuqfN+m
ZL5OR1nplynpbzrWt12VfOmoknk7nf0zJT0uud7a2crWl5XM3+lwlH6akj6n
o0LA6OP620rm8XRskP6akl6nI+Z97zkT/JXM5+kYJP02Jf1Oh1P/Np1SApXM
6+moJv03JT3PwOYDtX9sfa6k5xmIkX6ckp5nYMiDsqF/xCvpeQb7c0p6noFq
Fd452+co6XkGtkm/TknPM5A4wbKj22clPc/AcOnfKel5BjytQsc++F1FzzNQ
Q/p5KnqegR1RQY1n11HR8wz291T0PAOjGgUU5bZS0fMM+Em/T0XPM1Dr71v3
D/RU0fMMzn9V9DwDFpcLV2sOU9HzDIyRfqCKnmdAlbN/ldtkFT3PQD3pD6ro
eQYOdF0/cMAiFT3PQLr0C1X0PAMTty6o9nKdip5nsH+ooucZaKgfn7pkr4qe
Z+Cg9BNV9DwDud8GqD+cVtHzDM6jVfQ8A9phHU+evqai5xloLP1GFT3PwLET
DeY1cVfR8wz2H1X0PBNTn1XootCo6HkmDNKPVNHzTLSo8fnnyIcqep6J49Kf
VNHzTBTNyAqLCVPR80zMkn6lip5n4o5dlOu6VBU9z0Qr6V+q6HkmziU92vVf
kYqeZ+KN9DNV9DwTs1tpxl/5oaLnmexvqul5JtqvcmnavqqanmfiovQ71fQ8
E+98rN+YGqnpeSa/r6im55l48ObIw8kd1fQ8Ex2kH6qm55m40GeLbVo/NT3P
xEfpj6rpeSbm7V2yZudfanqeiSfSL1XT80x0CpoyuPIsNT3PhLX0T9X0PBPf
y6HGreVqep6JZdJPVdPzTDwe2y2t51Y1Pc9Ed+mvqul5Jq5caKp9fFhNz0uu
J/1WNT3PxNLwqqfnXVLT8yw8lf6rmp5noUf97/MLHdT0PAvXpR+rpudZ+G9B
ftcjvmp6noUV0p9V0/MshDnGl6lrVtPzLPSWfq2anmfhRmZIhGeImp5noYz0
b9X0PAurOxndB8eq6XnJ9aSfq6bnWei/yXNPaJaanmfhtvR31fQ8C39ork1c
8VFNz0uuJ/1eNftBWQj/crL5l3Ianhez+P0zDT3PgtOQne/O1dLQ8yxUkH6w
hp5nYdPRlY+bt9TQ8yxES39YQ8+zMOTJTDt1dw09z4Kr9Is19DwLlauOWjdm
qIaeZ2GL9I819DwLcVN7DU2YqKHnWRgq/WQNPS+5nk2rmpsWaOh5FqpLf1lD
z7OwLb5mRtm1GnqehQTpN2voeTZGN/9Nb7tbQ8+z4SP9Zw09z8afK96c6XRK
Q8+zsUP60Rp6no0Uz5SFd2009Dwbo6Q/raHn2fArfNV9uquGnmejtvSrNfQ8
G7v+d7dslkpDz7ORJv1rDT3PxphdflF77mvoeTb72Rp6no26gTc9q4Vq6Hk2
+9saep6NzDLn9zkla+h5NiZKv1tDz7PhP3rf5D6FGnqejSbS/9bQ82wcPru2
Zcg3DT3PRpb0w7X0PBuTXs/7sLCylp5nQyP9cS09z0azOuOevGmgpefZOCb9
ci09z0bh3P72x9tr6Xk2++daep4Ng0P7DQ36aul5NvvpWnqejeNp9Yb5jtLS
82wUS39dS8+zMav9H7WHzdDS8xyYpd+upec5aL7+Y2bEUi09z+H3Z7T0PAdv
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
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666]], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1:eJxd23dUlFcXLnAs2FssUWPX2I1GY2L3MbbYYy/YsGOniXSGmVeMJTYUe+yK
vWKNDaliofc2MDMwwIB+1sSSO8x+7qx1L/9kzSIObzln//Y5Z+82C9dOXlLR
xsamsJKNTfl/P599HT9+4USMXBzXXzfdFvLZHrc8F05dNakR/vVd8bdroAMe
zzKdLH3dir93xIkzykbvke3h1fDSb1pPV+z/YXb0iJ1d+P+7I3zwv42npPWA
h7FDz2oXvLHXdKXf5O29+O9VWF0h2nTox58xMOf3P/euUSPNbkTwptg+8LZ8
n4KSf9ovb7K2P+6OrlWx68YAbM1e8ePoWoP4/X8gtVrDr82Cgf43otweHNmM
uX/XWz6qza/wtPy9rWi7d3RywuqhuN1yQ/Gk29twdveNkVfuDOPf34HKIZPu
ZlUegUNhra84O+xEr4+te875fSSvZxe6zmt7vuv+35D5j+UP4n+GaZ3G5Y3i
/e5GwK57wfe7jEGzHlnfV/Hfg0L7Kd1UzmNxz3K9QWg3ucX1wDvjYLd4QPk3
ouXSpoM+/jee178PJYd+e3pxxO84sN/yg9GfpvxgN2Ii7+cAfPq1+LChYCLS
X3yYkn/qIJpv8htqt2kSn+chtCryrJvSZTKaVp5e54drh7F5Tt15n2Mm447l
fv+Cfe7A7k9XTcHMfpYvxN51lVRDak/l/R/FwOaLpsy/OBXj+mz61V5/FMMS
Zwd3GD+Nz+MYrh02+QaVTEPJpPIneAwB7k1SLm2ZzudzHJGLM6+s7TIDW1cV
fDr7+jhWLexXKy1qBjIsz+sEPJ16GIuWzkTXjd+mvfhwAqU7H/x2qvIsPr+T
ePrE0LHa8VmIOTbi5psvJ1G9avCmBrDj8zyFW7Mrro7MsMNK89NqUvk0wh+/
i2vnPpvP9zQG9FPf7tRwDmqknHAcVOMMWoSeaZ18eQ6f9xnYz1lao9vYuThX
frv1gvFNtQfruhjm8vkHo1P4pYVxqnkYU/51357FicC+ca2bzef7OAvFZfbj
JiHzUVT+uJufg8O1LfvndLTn+zmHhz/90qCCqz02m59ebNvzeDbo4nOPR/ZI
s7yv89gS+yoqotYCdJ6zPfRdpwuoUGJjWzhzAd/fBXTckeWfdXIBos3f9l2P
i7C9H4AzrxbwfV7ELufPg0YMXIjlO03e+PkSkq4M9rm1cSHf7yVErR//5Uv8
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

          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt23VYlGkXBnBj19a1e9W1XRM7uXXt7hYDVLCQUhAQ6Y4h7EY/uxtjRUEB
UaQ7hxpiGF3MddVv5nD7z157gTPzvu/znN/9nDP+Ybhz0aY6tWrVUtWtVUv3
3/8uvk+ca7gA9Yade3Q4b6l+zf+vxy/y/7v0/3XY+tgq2AQbv3as9j3qyZ+b
obH8fL++Xetr0wtsrZCZdrjjjban+fs2WCe/f0F/T1lvvQZX7NEMl2/rPb3B
v+/I97urPz5vvt9BU2cErHAI/HHtkb69vJ4r8uX1nuk/nNmkTn8Pd4zqbLR4
3dVIvr4nTOT1o/XH3one/fdJbxjsfPZ1dMFrfVt5P190kPeL13/Qxa1i4QN/
pLVU/+4+Jonvr0ADef8U/WOR3W5YmATiwMlU3+030/l5ghAinydLP/urvCE+
GhyPmZ+ey+sN4fUW6HcanNOzntN+VJ7rVt4uTan/SD7vAYyVz1ukv2rjON0r
4vaoDcvcD5fw8x/CBvn8Kv0jh+UP5m9Q9LO8Xc7rOcLrqdTPjPu8uPB/R3G2
xzWj3J4a3s9jvJ/v9Dv8sqzZwFvHsRkGdYo+vdcPk+s9gWS53mr9FWPkBbEh
bFW99h4feP2n0FCu/6P+nFFek9YXn8LLfW8nNJ78mffjNO/HF/3Khbo7eBq+
QY8uPPnzX96fUPjJ/fmm77u99NvF96F4/L7L9MH63/Wz5H6dgVru1w/9/h5t
M+I+n8HpOPsmN/Rroeb+nUW23L/aiD099V7197M4/KrXb30/1EbN/fwfPsr9
rINt2rvV/pdziNvufXnf07qoub/nMEzu7y9olHbGbEKj8xh691LBvVO/ouZ+
n+f9rodLusttfgGxZ9xvvjlYHzX3/wJ2yP1vgFm6l2t7EQGju3SKPNsQNc/j
ImbJ82iEct3t7nwJCkvzLkeiGqPm+VzCcnk+TeCtvXvx3S/j/hLHR/NrNUOG
PK/LOCzP6zf0WxPw/GPfK2hu2muPRZ/mqHl+V9BKnl9zxGhfrePgq8h1NSm4
srIFap7nVWyR59kCWwLV9hhxDeGmXm3TDrREzfO9hhR5vq2g/XDaS76Oh/09
27/PbYWa530da+R5t8YS7eLRPlKkPtpY+q9eG9Q8/xuoL8+/Dc5q717amRv4
1qWry4eAtqhZDzfwt6yHdvjwPdmmrPdNzFx6vyLnSzvUrI+bOCLroz2m+OgW
wE2cWzvwj/vbO6BmvdyEm6yXjghpLxeEPuOcejhWdETN+rmFY7J+OqFIPt4t
RJTf+mf0rs6Ql3t/C7dkPf2OYfLnNjbveO5f0LALatbXbXyW9dUFLuGvtCvo
NsZFXP+852JX1Ky32zgr660bkrRPX3tP0GT3k7a1L3Xj+ruDHFl/f6CHvOAd
NP/Qov0T1z+4Hu/guKzHP2BponsAd3FidcrPdxu7c33eRbWsz+6I+NhX+4Tv
4s6V+nHHZvXger2HBFmvPdCq5gNiWekF5/ARPbl+72G8rN+ekE8XfQ9ujcN+
X9O7F9fzffST9dwLt45rzr+cfR/TO4w+ubNzb67v+7gl67s36sgF34dX8971
v7Xrw/X+AM9kvffBopoCiA3vnZf+aN+X6/8B63lfhOouN/kBIh7N897TtR/3
QxiCZT/0wz+6l1sRhkc7vf63vf+f3B9h+Ev2x5/4S7f8s8Iwqumw82nj+3O/
PISn7Jf+CNIt37UPMSNkdsDDxQO4fx5imeyfAVDa6h7IQxT9kmTQxmwgvGQ/
PcJD2U+DoCcL/BF+XRfTUhU4iPvrES7I/hoMp/2TtUvmEa6EDro2NGww99tj
NJX9NgQJ3eUBo9q49qF/LYZw/z1Gc9l/Q/CHrvqrH2NNdffX7ZrocT8+Qabs
Rz2Y67aH2RN4V9tVvzuvx/35hPVWD890T7f6CWxMmjRznzaU+/VvPJT9OhQt
ajYk9BYld0orHcr9+zcyZP8Og9y+r3/jyo2kzkU+w7ifnyJc9vMwyMezf4rP
Lo1aXB06nPv7KdbL/h6OWvInHLVe23zRyx7O/R6OeNnvI3Dh5Wztjg5HqmeX
JAvPEdz/4fhV9v8ILNDuxpYu4dj58NupnaNGsh6E44fUg5H4otMnMhwR65sb
9i0byfoQjkipD6NwqqNuQzzDO7s1bY8fH8V68QxzpV6MwowC3QN+hqzG+U/e
LBnN+vEMwVI/RuPded0HfAbv5kdXPGw2hvXkGS5IPRmDQ7pP9+oZGnr7lRjG
jmF90f6+1JexmKhdXDObPMdUm/vGUd5jWW+eY6jUm7FQfdNd8HNMyWqfXTpn
HOvPc+yX+jMOiueygdHq9s3JkS3Go6ZcPscjqUfjIZcb/xxnfzqdWJMxnvXp
Oa5LfZoAebmWEfgQ7lV548wE1qsIWEm90oeUo8UR6Po5euAzM33Wrwh8kvql
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
kfOaGT3PRs8jVdGXW5vRc+3P5fxmRs+z8aprvw5TxprR82wYyHnOjJ5nI7zz
wb4N1pvR82x8kvOdGT3Pxk/F6M+f3czoeTay5bxnRs+z4W3f1K3VFTN6ns3z
nxk9z8bGvDaJqxLN6Hk2FHIeNKPn2r8ftjD3zRczep7N86E5Pc/Gj0bPLm7v
ak7Pc3heNKfnOXiUZDR81DRzep6DVDk/mtPzHLxqNdZh4A5zep4DDzlPmtPz
HHSLnewxP8Scnmt/LudLc3qeg2dfHecff2ROz3OQKOdNc3qeg9sn36e2LTSn
5zmcr5jT8xxUPd7/++NGFvQ8BzPkPGpBz3Ngu3BHD7+hFvQ8B3vkfGpBz3Mx
z8BG5bXKgp7n4oOcVy3oeS625t/bfsvZgp7n4rGcXy3oeS6yMvveqHfZgp7n
IkHOsxb0PBeH5sTdck+yoOe5GCrnWwt6notjI85bDf3PgufdXOTLedcSv8mC
zsX7/bc/NuxlyfOv9v3k/GtJz3MRsKN6RNN5lvQ8Fx3kPGxJz3Nh+3jziPHW
lvQ8l+djS3qeh9vOTT8cOGVJz/PgL+dlS3qeh9Hhpea/v7Kk53l4IOdnS3qe
hya7Pl57W21Jz/OgJ+dpK3qeh36nR16++rsVPc/DRzlfW9HzPByYcnnz/elW
9DwPteS8bUXP8zB93eKCSnMrep4HAzl/W9HzPMx7P6jTvGNW9DwPDeQ8bkXP
83Dk3wmts15a0fN8/JDzuRX3ez5G2jm+Dn5vRd/zMVnO67u4//PR1fLTZJvO
u+h9Ps/vu1gP8rFAedLWc/ou+p+P63Ke38X6kI+EaHuzSItdzAPavy/n+12s
F/kI7e3Xa8CJXcwH+Tzv72L9yMejb/GHn8bsYl7IR92a+T7rST66z5jxxuHj
LuaHfLSQfsBu1pd8JDeufrrlj93ME/nYIf2B3aw3+UialmDuOHc380U+mkq/
YDfrTz66fFUqn+/ZzbyRjzrSP9jNepSPm937ttI7t5v5I5/9hN2sT/k4EnGq
TmzibuaRfDyX/sJu1qt8vMqac1PxczfzST5OSL/BmvVL+zy2DejqPMCaeSWf
8wtr1jPt9VpgzsmV1swv+dCTfoQ165v2+b1zG61yt2aeKUCF9CesWe8K4F38
s3DNHWvmmwJ8lH6FNetfAUYuujrve4E1804B+xfWrIcFGDLS3ybmNxvmnwJU
Sj/DhvWxADaBoRueTbBhHipApvQ3bFgvC9B4Y3nD4m02zEcFaC39DhvWzwJo
rm4yH37EhnmpAMel/2HDelqATjtbH7oebcP8VIDN0g+xYX0tQND5T3uXfbZh
niqAp/RH9rDeFmDJ8iY9+vXew3xVgGrpl+xh/dW+nsNSjz5L9zBvFeCS9E/2
sB4XILpz4qWFrnuYvwpwVfope1ifC2A61Nnv/O09zGMF7K/sYb0ugPHTTYP7
Fe5hPivAKem37GH91r5fhL0itaUt81oBv89gy3pegDGIunH9L1vmtwKESz/G
lvVdiXZDpyruWNgyzykxUfoztqz3Skw49mlQcagt850SLaRfY8v6r8StvVm+
k5JsmfeU7N/Y0gMlrFOrL8bUtWP+U8Jf+jl29EEJx3Nw3zvcjnlQiZnS37Gj
F0pkqv/+w2CTHfOhkv0eO/qhhOsVc3uTA3bMi0oclv6PHT1RYpdy+YGTUXaQ
8u6gZD/IDjXfv1HidoD5zjpf7dgfUrI/ZM/zoxJj7vxdP/BPe/aLlBgn/SJ7
nieVaLsA62avsWf/SImH0j+y5/lS+/tG1bv0/O2ZP5Vwl36SPX1S4pI6c/bk
cHvmUSVOS3/Jnl4psUnzMd/xH3vmUyXqSL9pL/1SavfRlBHlPfcyrypxV/pP
e+mZElErXs7Yt3wv82shbks/ai99K8SmcLtOE733Ms8Wct63l94VwuDkxqsD
nuxlvi2En/Sr9tK/Qhz56Phjyru9zLuFMJX+lQM9LETXiPhmXj0cmH8LcVL6
WQ70sRDv6y/J/bLMgXm4EC2lv+VALwvxW2SjHSHeDszHhciVfpcD/SyE3ecP
D1f/7cC8rH096X850NNCDA9tGT3vHwfm50LMl37YPvpaiLGRRiE7eu9jni7E
T5lX7qO3hdq8qOr6YNU+5utCfJR+2T76Wwg901NbBwXsY94u5Pc19tHjQrT+
5GMVH7GP+bsQkdJP20efCzH946UJJ77sYx4vZH/NkV4XovLuD2VsW0fm80IU
S7/NkX4X4u2VZ+5r9RyZ1wtxTvpvjvS8COvWdWlUf44jPS9CXenHOdLzIgS8
ab3jxWZHel6EhtKfc6TnRTD7fPb6YSdHel6Eh9Kvc6TnRdBkxyW4HHOk50Vo
LP07R3pehLYOQUku9x3peRHqST/PkZ4XIT9Tc+dwoiM9L8Il6e850vMiLK0u
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
3/H77SH4P1/nVzI=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 
           NCache[
            Rational[2, 3], 0.6666666666666666]]], 
         LineBox[CompressedData["
1:eJw123Vc1OkWBnBrbV1r7W6vXWuszqNird2NAQYGSoMCSqfAEHbH6trduoKA
gAgS0t1DDOgixrrqnTnzLP/cjx/Y4Rfve77Pew63h8GuRZvq1KpVS1W3Vi3t
//576X3CXIMFUEZs6O8aHwTdv9fj2D8T22S8DMI/e7c9tQg0QvtNzZ6OfPrf
903QuEFcN79bQbBtc31G3h4LmOa6Qn3hv5+3wdz3QzrNOx6E3aV9hze8aoej
46Jv3/L/7793wPpHq+q3dw/ChJz5Pod2OuGYSdYvjnZBsJPPc8GcdYvzKkyD
8Pj3pnUGurvByPWp0eot/32+B34qaH/19ZogjL8bafXXKS+0tDG6MmlREPbI
79sP36lXNj+YEYSHXV3LFz70hfvMvKxhE//7/Uq8d27c8tqIIBwP637TzMgf
yR/71hrU/7/rCcCAM79eudYlCJlf5BeiymlcqxGt/7vfIAw7PnT0o4ZB6DQ0
q3d9xwPIq2jfRu97IJ7I9R5EE8ua62+qA7Fq42/aT8Qfo8J/WlcayOs/jAcD
Pdq/zw7E0SPyBaxSlLi+DeT9HMXY4BLTLq8CkR77aXHBH8dwSd/l4YPngXye
x+E7os2TJfcC0aHesuaDb59AqeLQ7g+XA/FI7vckHjg1+3DwdCBWjJMPxMdv
Vv+bcDCQ938aV24mdi70DsScMZ6T1xedRtrRXtG+joF8Hmdg/3Tz6AnWgahY
qH2CZ6D85cTqih2BfD5n0fXCy4mnDAKxf0fJ10vvz6LTzoKMJSsCkSHP6xyU
xtWjm80LxED3tmmxn87B9vzH2ZF6gXx+55HWSt3FbVwgos9Mu1/97TwuPky+
Mn1oIJ/nH/j7wJ2aRn0CsV3ztNrXu4Crl52/vun43/O9gJyP058dbhGIxinn
TCY2vgiXPd/Gb6z/3/O+iOOjL1qM+DcAl7W32+JPDOo/dVvdvwP4/P/E4EVv
O6WUBGCW9uPaXsLFO8s9r2UF8H1cQtCc2NtuiQEo0z7uzpfxsfPYwwZRAXw/
lxHX+8C4yc8D4KV5enE9r6DTxqKDPe8FIE3e1xVkpfe/Wf+KZh2t8XtR0/8q
mnuuc1WfDuD7u4qHOz3bphwMQJTm0zoOvYZM7wuGofsD+D6vwST3/o7bTgHY
6q+2w+jrsNrxePh5mwC+3+uoHnrr9mHNOtVcnOaWb6Dkf8eq/DYG8H3fwBx9
G5XnqgAs0SwezStF/4iZJ9wWBPD934SVUdPmbtMDcF7z9FLO3YRicuh4jwkB
XA+a7y807uUzIgAfvr21Ke17C32ONI4M6h/A9XELs9of63+qawCmemsXwC3k
xnaddrVNANfLLaifHujytHEAgtrLDcEi/8et2FoBXD+3sRH6dQo/+qNQLu82
4hOvNf+3wh/yce9v48ap98ltC/wxUr7uoP65/qtHpflzfd1BbNaiY0ve+MM5
+JVmBd1B8wUmh6zD/bne7iDki8P8E0/8kah5+5pngpJ0l9DwW/5cf3fhXm1b
/e6iP3rJB97FEb3NOV1P+nM93kX3aD33+UH+MDfSvoB7aOfVptzJy5/r8x48
HVIbP3LwR2hNf80bvocd1/2K31v5c73ex8vW4/cONvZHa90FIuhmSvx2Q3+u
3/tIczHKu7rSH3J1kfehVFZcfTffn+v5Af5KNBw1Zro/bp+ouvhy9gOsmhdr
7TDBn+v7AcxrDbJ+PcIfdeSGH+Bbqd2ITgP8ud4f4nvjkEs7uvljka4Awszw
c2bwL/5c/w+xurrn63ZN/XFWe7tvH+LB40nWpnX8uR8ewePRwuyYz0r8rf24
FY+QWLW09uAqJffHI/joz831LVJiinb5ZzxCcJ2xttUZSu6Xx9ic80vCqgQl
ArTLd+1jOFYXF4ZFKrl/HqM5rtwZ/lyJ/D3aF/IYrV8YKM7cU8JT9tMTeNk1
c219VYnhssCfwHrnFXePs0ruryfIODRheq0jSjge0NMsmSe48zk4eI+fkvvt
KX4ox3765KpEfE95wQhdf67U2k7J/fcUNVtqH/7HTIke2uqvfopTFxbVcdiq
5H58hmedD/VvuF4JU+32MHmGRa9iGwcuU3J/PsOqG1/+7D5XiRDt261+hvTo
dnVv6Sm5X/9CdLcBHaaOV6KlbkNi5JXB5WnDlNy/f6H5zj67zfopIY/vy1/Q
N2oR2qyrkvv5OXodrYy80kYJuTy759CvG+w1p4mS+/s5mp13afiuthK15CsY
Gz7buAx678f9Hgzfdm927c32w58vZ2t2dDAu/dEkMSnaj/s/GJfPDrk+4pEf
Fmh2YyvnYBxqPrb2gQt+rAfBsCzt9/rfQD981uoTFowRI7833+box/oQjKTy
x1GZO/1wuqN2Q4Rga+u1/y5Z48d6EYKKSyUXEn73w8w87QsOweIby6OWjvFj
/QjB2V7XDbN7++HdRe0FhqCwfrnljlZ+rCchaLCyuea+/HBYe3WvQtC0Y/s6
R9S+rC8hqDerod2YDF9M0iyu35u+QKEq2zgj0pf15gWufzyW4nLfF6qv2ht+
gfXmeDTyvC/rzwt8WxvVSuXvC+UL2cBwfTSu8Mw+X+jK5Qu8c1IO3mDsC7nd
uBeY9SSmss9qX9anF/AxeN/v3UxfyMe1CsVDm6+pz3/1Zb0Kxetv5bUP9Nbk
Dm05WhyKmPcvzu5q5cv6FYoHSxyezK/lC118CIVX395zRlf6sJ6FYsaW60u6
Z/pAykFKKKradktq8cqH9S0UtqOtYuo/9ME+7XZuH4bqF3cm1rngw3oXhhXP
U/rUDfJBP9lAYTj3v3zXRk4+rH9hSK+XqP+LiQ/eSLwIw6e5l6/1XevDehiG
evWNLCfO8YG1djtkhaFmUNN7K8f7sD6GIebFwR22/X3QTbucu4bDP6LB8bNt
fVgvw6H4bZ3em3o+iNAuv/XhSOtywqB29X7Wz3Cs2BXyZWzefuzSvt4z4Yga
+rqh1Zv9rKfh6Lzumd/DZ/vRTjZ8OFZ9C/Ktpcl1uvr6Es6NF/807+h+PNde
Xu+XULp9qj7tsZ/19iW8TZ1WfbHajy2btV8vYR5dPXb5pv2svy8xJWi23+PF
+6ENT5oKi5poT/1eU/azHr/EAbPr5/yH7Ye2OtqUvkRfj0cbfuq2n/U5AgFN
rxza22w/1kpAjcDXH07Tvn31Zr2OAAwmb3cs80Z9KVARMB5Z3LBJmjfrdwSU
5qZdj0Z4Q/s22lyPgFfPgitD7nuznkfAdtJvtyLPe0PSXVUElsbsHmIU6M36
HonWUSd7NXPyxnftdhseieCRl5UPTLxZ7yOxtNlxyy3rvHFBu5zNIvFqqUVC
53nerP+RmNBs5MWUCd6Yp7theI5MrT400JseRCIk0vChfkdvfNS+jppIFL5O
+tC/kTd9iMIHDLn05ZMXTmpvd0wUinsYJ70p9qIXUYgyC9h9JckL0+UBRiFo
xMkD+8O86EcU9DYoB5jf8UKl8BCFou9Go9ed9aInUdjWpP+jBf5eOKgt71+j
kOEWc3eGgxd9eYWRpiv7T93lBYW8kFewfBXdevpaL3rzCucDelvPneuFYm15
3fsK96IMF62a4EV/XuHuLs8/dgz0gq+Uv1e44HLAxKWjF6Rc5b2CbUOPO2ca
eUHKS51ojPi6fmfYZ0/6FI30Nd3PVJR4QravXjS2DX45u2OKJ72KRtGORTvn
vvSEbA/XaEzvFN7Q7Z4n/YqG/9iuncLOe0K3/KIREqb/R4MgT3oWDdVz54sL
nD2RpH29DV+jcoCyxykzT/r2Gvl1nFtXb/CEvVzhazybtcZ+zkJPevcarrU7
r7syyRN9ZAG+xsB+Lx7+PMyT/r3GqyfzvHZ380TMa/nC/OchiarmnvTwNe4N
73RA/7sHLAO1BTUGTVuvjk1Re9DHGMwwdNy3PMsDXWRBx8Cyp++fma896GUM
XBc4/r7lqQfC5XgVA3v1KoNPVzzoZww2fOlYvf+YB4y15TQhBqMtQr728/ag
pzFQ6c+zi9zjgV9kg8TC536Ixc5tHvQ1Fh33dirqsMoDz7TlYJnm+3dXx7z6
3YPexqJ8pdNgx3Ee2CTHr1gM3en308QBHvQ3FobvnZZ+b++BproNB/uCNV3C
G3rQ41i4Te2i7//ZHbJcOr6BaZuwNoYqd/r8BnMWL5w6PtUd8jrWvEGT2uHl
bSPd6fUb3O3SrcmXB+7QHc/eYNqldWdzL7rT7zcIP+d2K+aQO+Tjct5gcLOg
scHu7vQ8Dg5F7mMeWrtzv8fh7iCD6/e2uNP3OOTl9zzxcLk7938c1A1e1Q2Z
4U7v45BxbHl+7Bh31oM4hJ+MHpvfz53+x8G3Rd8GX9u5sz7EAe83z+3Q0J15
IA7Zk3ybTPzsxnoRh40/jk3erHJjPohD0iBlVVCqG+tHHIZEbfslKtKNeSEO
Fm8H3qnzyI31JA6n5yVGTr7kxvwQh3tjNixzO+LG+hKHO35Jq+M83Zgn4nFi
2bC0bnvcWG/iYbPfNNZimxvzRTyGDT/y25tVbqw/8UiberH70NluzBvx2BRx
zD7oNzfWo3jkPrRa9GOgG/NHPKZ0GHtqV2c31qd4eKlyDIuaujGPxONF352n
139zZb2KR1Fi/pI8tSvzSTwqqiY6bsl2Zf2KR86efX2qY12ZV+LxxOLiZJfn
rqxn8XDMupfU8aYr80s8ht67nHf/tCvrWzyiv7puWuHvyjyTgLm3Zmz44ejK
epeAu0lVb6+YuTLfJKDZ1r3B+oaurH8JmLe9utcvS1yZdxJgnjnvR/xUV9bD
BLg/VS4KGu3K/JMAlyaPuqzp68r6mACjqIj1A9q5QpazXwImfHza6d8GrtC1
DxLwt//heW8/uzAfJSDg+Kovt0pdoIuPCejStm7nA+kuzEsJUH73v28f7cJ6
moDqpQ2itj91YX5KwOjOhovXXXNhfU3EzoV/LF1x0oV5KhFuNTFvlvm5sN4m
wrthVsgqBxfmq0Ts9koYuNHUhfU3EYttrzczN3Bh3kpEmwyTLe6LXViPE/H8
UodxZ6a6MH8lYlHJn07Bo11YnxMRH9h1alFfF+axRPx6Y4/9z+1dWK8T4TXu
2RA0cmE+S0TkiOLlFv84s34nQnW05vP1cmfmtUTUmJa3rMp0Zj1PhPpBxNlR
sc7Mb4mI2eF1Zd9zZ9b3tzikHDko7qYz89xbLOwV2rvvWWfW+7eo7D3ugGOg
M/PdW5gfOGCf7+LM+v8WhRapWTOtnJn33mJiaO37d7c404O3cHJoWb/vSmfm
v7e4cbVB7PFZzvThLcJmFDbrMMGZeVDz74UXw48OdqYXmp9/taCmRzdn5sO3
cL2de/x6C2f68RaTGy1/OqmOM/PiW5TG3lmcWu1ET95id91PBpZFTsyPmvu5
0L2sXYoTfUnC4kfDSp9HOjFPJuHU+H7rjR870ZskpP6v3vzuV52YL5PwwTPi
XuoJJ/qThLorTIMO+jkxb2q+H1S7fKWjEz1KwptJNo96mjsxfybhwOqkH+82
OtGnJEwrav9X2DIn5tEk5GZN+XBiphO9SsK6aYvP2o13Yj5NQkynWZHrBznR
ryT029Bv86yuTsyrSTD6pdx2XAsnepYE37EHGg2p48T8moyTr/r83P+DI31L
xvHo4/v7FTsyzybD9bd/HAelOtK7ZCzqqKj69ZUj820y6hsZvZ3+1JH+JeNq
793D11x3ZN5Nxq8LTOpbn3akh8m4UjZ38aEAR+bfZDT60LL9MxdH6NqTyVi2
4+kSlZUj83Ay3BfPbdRhqyP7p8k4fSls9PzVjszHyTi3s2e611xH+pmMoLOb
P0bDkXk5GabT/L1ajXCkp8kYsvzswbW9HZmfU5CZcqTjzbaO9DUFphHWbRs0
cmSeTsHffSZ4GX51oLcpWFFdbBmudmC+TsHloTZpg3Id6G8KCtOr7h5JcGDe
TkGDmrkNm4Y70OMUtNsbkOj8wIH5OwWtrJ61rX3ZgT6noCozNt75uAPzeAqe
3H5Zr6mfA71OwY5P528ccXRgPk9BkytbEwZZONDvFByIaWMcvtmBeT0FjdZd
2Ge40oGep2Lduq6NG8xxoOep+CPWrulNhQM9T0X81RC3tcMd6HkqCr9U2LTq
7UDPU6G69z0/uq0DPU/F29yPYV6NHOh5KmbUXJ548vM+ep6KsPqj84Zn76Pn
qejw0dsiLnQfPU/Fr6E3Pu2+tI+ep6LfztPbhvjto+epeP9RP0ZtsY+ep8JP
X9Xt4ap99DwVP87AwGfSPnqeivFhhkHGfffR81TMD1tyf0XTffQ8DaPPtoqc
9/deep6Gav0TUfNT99LzNOz+9OHx6r/20vM05OzscNzs/F56noafwxobB3nt
pedpaPspcnCIyV56rvm8BkuyPy/bS8/TcPLjlb2/TdxLz9PQMzSuuWevvfQ8
DcbGL3zzGu2l52k4WOPwfeo7e3qeBp/VTdfeSban52lYeWrjtUHP7Ol5GmqC
PStunrOn52nYHGzbaZKXPT1Pw5UT48enm9jT83SEr3g5c99ye3qejkvvu84Y
qrCn5+maujZ1dFlve3qejnrPfm19s4k9PU+HSVVNrsPfdvQ8HSd/OJ5ck2ZH
z9NxVZ0+Wy/Yjp6nw+NRrdJRF+3Y30jHWMNqy+G+djz/pONZ2e2/x1rasf+a
jlYLsG72Gjt6ng69wMNPjPTs6Hk6xtz9q4H//+zoeTpa37mlF9bSjp6n45af
6a46X2zpeQYGzPruNTvXlp5nwCJ/+cFTEbb0PAMHVuz1/37dlp5nwO2qqZ3R
QVt6noHfs4cvz7K3pecZyFT/1UN/ky09z8C0jPaZJXNs6XkGHC7AzX6ULT3P
gN/8kd27dral5xkwSa6+FFXXlp5noM9vjr0cyvfQ8wz8aZ+xf3LiHnqegWYn
6xQ3e7KHnmdAcfzjkKKze+h5BibZPNgS4bWHnmeg5Yhpyrtme+h5JkKjTv15
ddUeep6J0Yi4eWPKHnqeCbeAJ38++98eep6Ji6F2yuRWe+h5Jk4kNDb655/d
9DwThs83DR1QsJueZ+KHp0+xQfRuep4JkxFOPhfv7Kbnmbj3UK/3p2O76Xkm
IjonXF7ospueZ+La2sE9HuzYTc8zsWHvUvd+S3fT80y8s52VdXbibnqeieXL
m/Ya0Hc3Pc+ER4tjKx43303PM7H/4kf7ZZ9s6HkWtnbuFvgtx4aeZ6HjrjaH
b0Ta0PMsHD2VvH/HLRt6ngXVtU2mo47a0PMstD0aMq2Bsw09z0LdjWWNirbb
0PMsZDTJfRazxIaeZ8HK/+yGkIk29DwLpR+G1zzva0PPszDwV1+bqJ9t6HkW
5i99UJ712ZqeZ2H0omvzvuVZ0/MsvB9kcqZftDU9z4JL0Y+CNXet6XkWym3X
tD1xwpqeZ6PHO9exKjdrep6N4VPsZilMrOl5NlqZYc6pldb0PBsh+95MbKJn
Tc+zMW37oG5Og6zpeTZOj1r2rm5ba3qejaiMObeUP6zouebf61sY9C+1oufZ
OBx6uk50ghXPu9lAve8BNk+t8LMs6Gzc6dm/9fALVjz/ZuOfrt2cP/hZ0fNs
dP+Sn/9itxU9z0bLW+Yjjhta0fNsxE+PN3WYa0XPs7H18dfTu8ZY0fMcJDWp
fr61hxU9z0Hr3x7E7mxiRc9z0HfmzJi9NZb0PAc/jbzw5EiOJT3PweOvcUee
R1nS8xzonY3c8u6OJT3PwfG+Pn0GnbSk5zmI8+iaaOZhSc9zkBBpZxJmZknP
c3C5+OK37vqW9DwHS/JP7fGYYUnPc5D4ZGPJP8Mt6XkOupl/1LPpbEnPczCp
4VJlrQaW9DwHo20dXge+t6DnufgWbfN5eKYF93suDsu83IK+56KBzMctuP9z
MVvm4Rb0PhcbZP5twXqQi3ky77ag/7moJfNtC9aHXByQebYF80AuPsr82oL1
Ihf9ZF5twXyQi6Eyn7Zg/chFY5lHmzMv5OK+zJ/NWU9yMV7mzebMD7nwlvmy
OetLLu7IPNmceSIXV2V+bM56k4s9Mi82Z77I5XzYnPUnFwEyDzZn3shFssx/
zVmPclEt815z5o9cZMh815z1KRfHZJ5rxjySi2EyvzVjvdJ8vsxrzZhPchEj
81kz1q9cZMs81ox5JRdPZf5qxnqWC2OZt5oxv+Tib5mvmrG+5WKBzFPNmGfy
YCvzUzPWuzxYyLzUjPkmD7/LfNSM9S8PFTIPNWPeycMGmX+ash7mcd5pyvyT
hziZb5qyPuYhVOaZpsxDeXCU+aUp62Ueusi80pT5KA8eMp80Zf3MwwuZR5oy
L+UhWeaPpqyneXgs80ZT5qc8zhdNWV/z8FXmiabMU3lYI/NDU9bbPPjIvNCE
+SoPSpkPmrD+5mGLzANNmLfy0FLmfyasx3lwk3mfCfNXHjJlvmfC+pyHf2We
Z8I8lsf5nQnrdR6ey7zOhPksDytkPmfC+p2HSJnHmTCv5aGJzN9MWM/z0FPm
bSbMb3loKvM1E9b3fChlnraLeS4ff8r8bBfrfT5MZV62i/kuH6kyH9vF+p+P
MpmH7WLey8c5mX/togf5+LZCO+/axfyXj0Yy39pJH/JxWeZZO5kH8/GvzK92
0ot81Mi8aifzYT7nUzvpRz6iZB61k3kxHzdk/rSTnuRjjsybjCHlfW8+7GS+
ZMy/v8nHWpknGbM/lM/5kTHPj/n48ZN2XmTMflE+EmU+ZMzzZD7nQcbsH+XD
QOY/O3i+zEdHmffsYP7M53xnB33S3I/Mc3Ywj+ZzfrODXuXjsMxrdjCfav4t
85kd9Csfk2Ues515NR9+Mn/ZTs809yvzlu3MrwVoKvOV7fStAEtknrKdebYA
42R+sp3eFeCxzEu2M98W4LPMR7bRvwKEyTxkG/NuAabL/GMbPSyAscw7tjH/
FmCozDe20ccCXJR5xjbm4QI8k/nFNnpZAEuZV2xjPi5AmswnttLPAhTIPGIr
83IB5w9b6WkB8mXesJX5WfPzMl/YSl8LsFfmCVuZpwsQLvODrfS2ALdlXmDE
fF2AuTIfMKK/BXCQeYAR83YBNkn/34geF6BK+v1GzN8F6CD9fSP6XMB+vhHz
eAGMpH9vRK8L4Cz9+i3M5wWYJf35LfS7AI+kH7+Feb0AL6T/voWeF2KP9Nu3
0PNCZEt/fQs9L0Se9NO30PNC+Ej/fAs9L0Sm9Ms30/NCpEp/fDM9L8QO6Ydv
pueF7H9vpueFOC797s30vBBDpb+9mZ4XYqv0szfT80LMkP71ZnpeiHDpV2+i
54Uolf70JnpeqKkT2n70JnpeiMHSf95EzwsxT/rNm+h5IVpJf3kTPS+EhfST
N9HzQvaPN9HzQoyRfvEmel6Iw9If3kjPC3FQ+sEb6bnm56X/u5GeF8JV+r0b
6bnmfUh/dyM9L0RL6edupOeFWCr92430vBC/Sb92Iz0vRKj0Zw3peSG+SD/W
kJ4XIl76r4b0vAizpd9qSM+L2F81pOdFUEg/1ZCeF+Gq9E8N6XkRIqRfakjP
i2An/VFDel6EYumHGtDzIlRJ/9OAnhex32lAz4vwt/Q3Deh5Eaqln2lAz4sQ
KP1LA3pehEzpVxrQ8yJESX/SgJ4XwUD6kQb0vAinpf+4gZ4XwVn6jRvoeREa
S39xAz0vwnjpJ26g50XsH26g50XwkH7hBnpehJPSH9xAz4uwS/qBG+h5EVKl
/7eBnhdBLf2+9fS8CBelv7eenhexn7eenhehqfTv1tPzIjyXft16el6E5tKf
W0/Pi1BH+nHr6Xkxzkn/bT09L0aZ9NvW0/NiJEh/bT09L0aw9NPW0fNijJL+
2Tp6XowK6Zeto+fF+CT9sXX0vBjTpB+2jp4X44P0v9bS82LkSb9rLT0vRkvp
b62l58U4LP2stfS8GNukf7WWnhfDT/pV+vS8GF+kP6XPflAxbkg/Sp/nxWI8
kP6TPj0vRm3pN+nT82L8If2lNfS8GK7ST1pDz4vxQvpHa+h5MWZIv2gNPddc
v/SH1tDzYgyUftBqel6MQ9L/WU3PizFV+j2r6Xkxpkt/ZzU9L4ZS+jmr6Xkx
+zer6HkxfpZ+zSp6XozJ0p9ZRc9L8FT6MavoeQk8pf+yip6X4KT0W1bS8xLU
9dL2V1bS8xLclX7KSnpeghvSP1lJz0tQI/2SlfS8BO7SH1lJz0tgLP2QFfS8
BIel/7GCnpegpfQ7VtDzEiRLf2MFPS+BWvoZK+h5CWZJ/2I5PS9BtfQrltPz
EpRIf2I5PS/BGOlHLKfnJXgi/Yfl9LwE56XfsJyel+C19BeW0fMS6Ek/YRk9
L0Gtbtr+wTJ6XoKm0i9YRs9L2B9YRs9L8LP0A5bR8xLUlvP/Unpegqly3l9K
z0sQK+f7pfS8BNfkPL+UnpfglZzfl9LzEp7Xl9JzFb7L+XwJPVehkZzHl9Bz
FQzk/L2EnqtQX87bS+i5iufrJfRcxfP0EnquwmM5Py+m5yp4yXl5MT1X4aac
jxfTcxU6ynl4MT1XIUnOv4vpuQopct5dTM9VGCnn20X0XIU3cp5dRM9VPL8u
oucqfJDz6iJ6roK1nE8X0XMVz6OL6LmKf3+7kJ6r8FrOmwvpuQrOcr5cSM9V
PE8upOea65Xz40J6roKNnBcX0nMV1sr5cCE9V8FPzoML6LkKLeT8t4Ceq5Am
570F9FyFd3K+W0DPVVgu57kF9FyFxnJ+W0DPNe9PzmsL6Hkpzsn5bD49L0WO
nMfm0/NSHJHz13x6Xoqf5Lw1j56X4qucr+bR81Kep+bR81Lcl/PTPHpeyvPS
XHpeilg5H82l56WIlPPQXHpeimVy/plDz0thL+edOfS8FFPlfDOHnpciSM4z
c+h5KVzk/DKbnpeipZxXZtPzUoyS88lsel6KcjmPzKLnms+X88csel6KAXLe
mEXPS3FTzhez6Hkp4uQ88Ts9L4WnnB9+p+elSJLzwu/0vBRhcj74nZ6XYrKc
B2bS81L+/c9Mel6KVpL3Z9LzUqyTfD+TnpdiiuT5GfS8FH9Jfp9Bz8uQKXl9
Bj0vg4vk8xn0vAwxksen0/MyPJD8PZ2el2GQ5O3p9LwMepKvp9PzMubpafS8
jH+/MY2el/HvMabR8zLYSz6eRs/L4CN5eCo9L+PfP0yl52WwkLw7lZ6XYb7k
26n0vAzPJc/q0fMyREh+1aPnZdgpeVWP854yXJZ8qsd+cBl2Sx7V4/ynjPlz
CvvDZZynT6HnZTgp+XIKPS9DguTJKfS8DGckP06m52VoIXlxMj0vQ3PJh5Pp
eRkuSR6cTM/LkC35bzI913xf8t4keq55npLvJtFzzb8lz02i5+U4L/ltEj0v
R7LktUn0vBx6ks9Az8tR76w2j4Gel6NS8peCnpejveQtBT0vh7nkKwU9L8e/
kqcm0vNy5qeJ9LwcRyQvTaDn5cxHE+h5OVpJHppAzzU/L/nnN3pezrzzGz0v
x1DJN+PpeTnGS54ZT8/L4SX5ZTw9L0d9ySvj6Hk55zvj6Lnm5yWPjKPn5Tgk
+WMsPS9HpuSNsfS8nPliDD0vxwfJE2Poueb+JD+MoeflnEf8Ss/LUVfywa/0
vBzbJQ/8Ss813xf/R9PzciSJ96PpeTnixPfR9LwC/4jno+h5BdaI36PoeQVq
xOtR9LyC/e2R9LwCt8XjkfS8Aini70h6XoHh4u0Iel7B/3/OCHpeAQvxdAQ9
r8BW8XM4Pa+Am3g5nJ5XIFF8HE7PK7BOPBxOzyvQRPwbRs8r8Ld4N4yeV+Bn
8W0YPa/AHfFsKD2vwB/i11B6XoHP4tUQel6Bu+LTEHquuR7xaDA911yP+DOI
nldgsngziJ5XwF18GUjPKzBSPBlIzysA8eN/9LwCT8WL/9HzCniIDwPoeQWi
xIMB9LwC26T+96fnFdCXet+fnlfgudT3fvRcDW+p5/3ouRp3pX73pedqjJd6
3ZeeqzFM6nMfeq7GPqnHfei5GsOl/vam52r+PVhveq5GpNTXXvRcjVtST3vR
czXeSf3sSc/VOCj1sic9V+O41Mce9FyNelIPe9BzNZKl/vWg52r8JPWuOz1X
s751p+ea+5F61o2eq5Ev9asrPVdjs9SrrvRcjetSn7rQczWeSD3qTM/VcJP6
04meq3me6kjP1bCV+tKRnqtxQepJB3quho/Uj/b0XI2JUi/a0XM1rkl9aEfP
1fgk88a29FyNLyO0+/8Xeq7WrA/tfv+FnldimezvNvS8kvu5NT2vRLzs39b0
vBJ3Zb+2oueVWCf7syU9r8Rr2Y8t6Xklasv+a0HPK/HdWLvfWtDzSvjL/vqZ
nlfiquyn5vS8EjNl/zSl55XYJfulCT2vxDDZH43peSWsZT80oueVWCzrvyE9
r8RNWe8N6Hklzsn6rk/PK9FN1vNP9LwSA2T91qPnlQiW9VqXnlciX9ZnHf59
RyV8ZT3W5vy3ElGy/mrT80pclvVWi55XokbW13eFzvNKhMt6+qbQeV6JU7J+
vip0nlciQNbLPwqd55U4L+vjs0LneSWiZT18Uug8r0Qzqf81Cp3nVdgu7/uD
7nU0rkKhvN9qhc7zKuyQ9/leofO8Ch3k/b1T6Dyvwn15X1UKneeaz5P3U6HQ
eV6FRfI+yhQ6z6tgJs9fpdB5XoW/5HkXK3SeV2GKPN9Chc7zKtTI88xX6Dyv
Qr48vzyFzvMqNFirfV7ZCp3nVTgjzydDofO8CifleaQqdJ5XoaHcf5JC57nm
8+R+ExU6z6vQVu4vTqHzvArmcj+vFTrPq7BHrj9SofO8CnpyvWEKnedVUMn1
hSh0nlfholzPE4XOc831yu+/p9B5XoV28vtuKnSeV8FaPv9Phc7zKmTJ551R
6DyvQkv57w8odJ5r3o/u7/kVusv77/uWCp3nVWiiO+8rdJ6/o+u1av0f2IVU
OQ==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.2}}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.11110580383206034`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.837768508243759*^9, 3.837768515519766*^9}, {
   3.837768560878128*^9, 3.8377686062617702`*^9}, 3.837768998689988*^9, {
   3.83777086238243*^9, 3.8377708760413427`*^9}},
 CellLabel->
  "Out[296]=",ExpressionUUID->"b56c0be7-22bd-430a-bbb4-dff903baeb67"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"parm2", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "9.5"}], ",", 
     RowBox[{"k", "->", "1"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837774934647991*^9, 3.837774934911751*^9}, {
  3.837775315394993*^9, 3.837775316561699*^9}},
 CellLabel->
  "In[1022]:=",ExpressionUUID->"9835218f-95b9-4a1f-a7ea-0aad65d22e52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"m", "->", " ", "mRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equism2", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "parm2", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.837775329137692*^9, 3.837775332064028*^9}},
 CellLabel->
  "In[1023]:=",ExpressionUUID->"75508f9d-df39-4c67-80f0-0b60f8437b01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"totalI", " ", "=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Iw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"2", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Iww", "/.", "equism2"}], "]"}]}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imut", "/.", "equism2"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"+", "2"}], 
        RowBox[{"Flatten", "[", 
         RowBox[{"Imm", "/.", "equism2"}], "]"}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalD", " ", "=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Dw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"2", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Dww", "/.", "equism2"}], "]"}]}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equism2"}], "]"}], "+", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dm", "/.", "equism2"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"+", "2"}], 
        RowBox[{"Flatten", "[", 
         RowBox[{"Dmm", "/.", "equism2"}], "]"}]}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wtypejul", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Iw", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Iww", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Imw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalI"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mutantjul", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Imut", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Imm", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Imw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalI"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wtypead", " ", "=", 
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Dw", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dww", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dmw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalD"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mutantad", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Dm", "/.", "equism2"}], "]"}], " ", "+", 
        RowBox[{"2", "*", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dmm", "/.", "equism2"}], "]"}]}], "+", " ", 
        RowBox[{"0.5", "*", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Dmw", "/.", "equism2"}], "]"}]}]}], ")"}], "/", 
      "totalD"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "wtypejul"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "wtypead"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "mutantjul"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Black"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p4", " ", "=", " ", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"mRange", ",", " ", "mutantad"}], "}"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Gray"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p4"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8377754868900957`*^9, 3.837775518419504*^9}, {
   3.837775554173025*^9, 3.8377758084380207`*^9}, {3.837775841404512*^9, 
   3.837775868932027*^9}, {3.837775961149732*^9, 3.837776011985723*^9}, {
   3.837776077596027*^9, 3.837776284822157*^9}, {3.83777633860919*^9, 
   3.837776355248296*^9}, {3.837776429651905*^9, 3.837776460968836*^9}, {
   3.8377764920974092`*^9, 3.8377765676633177`*^9}, {3.837777421913932*^9, 
   3.837777423616329*^9}, {3.837777539422263*^9, 3.8377775531456013`*^9}, {
   3.837777805309475*^9, 3.8377778076202173`*^9}, 3.83777790225456*^9},
 CellLabel->
  "In[1409]:=",ExpressionUUID->"df6c6df2-da37-49fc-91c8-08c8fe9b2752"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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

       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw92ndcjvsfBvCsZISDOomEhIwI2Vz2HkVOQoTslexQknGSXaFUNiFSSUNp
amrv/ex5Dzsk/Z46H7/+6ZWe7u77O6739X3Sf+Pe5Ztba2lpKdpoaTV//vXk
Y+GSjVawv3LUIPepM/772gEbVvr737l1Cj9dd8Qd8N6GvnnLM3ILvej7Trj6
ZGKw54lrONbzxTyhywHceuafNq/jDXr9EdRYPpkSfvkWjioHWeiEHMeNIJsQ
RvsO/fxJfB9kGbhl5j1MqVt28caeU7B6/EW51OUBjrdc7zT0iusPPH/xCLEL
Orcedu4sDvG2Hc/XBdP1/8XH4pEOTOdnmPQq49Db2+fhmCnXrx73HC4tv+8C
SvVOxjjYhyK67xm1dfQlzJ7I1k5PfEm//wrkJu4zTfLDEJDa76XztqvoLY0Z
saY2nO7nGsobXk5hVBGo/tHyC9EYd6JV5ddX9Lw+cJ1k23ZIUyR6j6wZqO3u
i9n3IlMqtKPwpuV+r+P+3/tffeocjdWOk5uviA8dmBmH/oqh+7+JYR2Nc7f2
jIW/X8sHlg14H5al94aexx+uL72n3NOLQ2Vu/Qrxw1twyugZ+bFHPI1nAHL7
dLKL6/YWvdr+02VEeCBs9u+yb9c5ATEtzxuEa4Uz6+WtE7FqYssFIbne6WZX
t0R6/jvY9DC677GfiVg83nOGg/QO0kvTew4/mETjcRffHfybTPgkMNbNI3gX
bnNOOThuS6bxuYdKr7xXnCAZF3bJG558vIc+C2oOpq5KQVXLeN1Hn4N9e8nz
UjDsnH5Fbv19hF8a2m3V3FQavwcY1jUrwyAuFdl357z+3PgAT1+0fj7U4h2N
50NsPmpicvnhO+zUjJZB20f4Oyr/4rxeaTS+j2D9sOvilRfS0LHsvtPUjo+x
v93ymJjfaTTej/HF1X3EIad0PG1+3G7ByCzt2OglTKfxD0bsL8WRX9YZWNh8
Of0nWMCHchlJGTQfTxBy6Ebwp1GZUDUPd5+nMIs+w7rczqT5eYp7d3u12qSb
hfOa0csf8AwPzCNNQlyyUNEyX8+w79y5a7byLJitvZz8dUgILvy8fm7Limya
vxDsL8iaWPk2G5maqxmOfI4lrb5WR5i9p/l8jtyoqrtfvN9j+1X2OCxfYNm7
ma8DG9/T/L7ATsmX2S+35EBzc5pHDoWw7v3BEXk5NN+hyL/+drf++FzYaBaP
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
32W9j5T6kubc5DAq4FiglPK0EL7LOve4/EhK/akQc63aqfxCpZSvRTjfZtPw
gGgp9akiZE5aLfVNklLeFkFspNvvXJaU+lURVFZe8r1FUsrfIpzrVTjXqlpK
fasIXz3ezx8ilVIeFyHm3Irv9ayU+lcRPg4zd0j4JqV8LsKaZ395uTZJqY8V
oc3Nux6WOjLK6yJc+73XRtJNRv2sCOs8G9t79ZJRfheh5/2YYLMBMuprRdD3
az0jcaiM8rwIAfGmVUvHyKi/FWGD53r3kskyyvdiGMVXTbWZLaM+V4xnpyIN
sxfLKO+LUXqxvv+klTLqd8XgpgTY37WXUf4X41v0xTKtLTLqe8V4offIb9Ue
GXlQDJN9oc+DD8mo/xXDoIej0UdXGflQDNMLez5ZnJNRHyzG0eLt43ZelpEX
xdi9Q/gp4IaM+mExXjlZW6TflpEfxXB6P6hB+VhGfbEYRTMT7Nq9lJEnxbhx
ffs/vaJl1B+LMe3h5p+miTLypQQ1HpKlwzJk1CdLILulY2+WLyNvSnAmXTqi
X7mM+mUJkna7Z3UVyMifEuwNKpz8XS6jvlmCghHJ5yt4GXlUAp38oYkR9TLq
nyXA2ArJ2SYZ+VSC68YXWq1oL6c+WoK8c1/6GnSVk1clSH8eOadUX079tARv
xm92vdhXTn6VwHyRV8HUQXLqqyV49+jePPkIOXlWgtg3BkpPSzn111LMT1/y
1nSqnHwrxQO1T17sbDn12VL8mj/WdMFiOXlXitb6m9PzV8ip35biaPSKt9Zr
5ORfKZbVGHd/v1FOfbcUOVeqs7BDTh6WYso/Vz6E7JNT/y2FPyy9ehyV47+3
J0tR3zbm3v6TcurDpXjWu3Fazjk5vX9aiuU5pVv7XZZTPy5F0NKupruvy8nP
UihLNrlGBMqpL5ficdiZY58fyMnTUviuMxw4IkRO/bkMyYFv3Bwi5ORrGfac
r/e9GCunPl2G+6FWe14lycnbMkQaTetWkiGnfl2GU27DPPg8Oflbhlsjj+a2
KZNT3y6D8ZLjP/6qlZPHZTiZ79rJUCqn/l2GnncSOvVh5ORzGU4/cG5l8FlO
fbwMbHXiZ92fcvK6DE3OGcpGLQX18zIIcgNU8vYK8rsMRU/nNmZ3UVBfL0P+
oNQhT/UU5Hk55FU6B071UZDn5djKN0ptTBTkeTl0Bp0603+ogjwvR9y37XaK
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
D9/tPHnOYPfI1yHLd/LkOYuQlXGqLrt58lxzDv11cFrWHp48Z3FqtEfwaSee
PGdhc8jDbJozT55rev1rveRv+3nynIXVinLnFwd58lxzLjHaPmXzYZ48Z7Fo
1Wbj3kd58pzFwNjtffJdePJcc07a1X3s6eM8ec5iT+eGLeNdefKcxaiQt5FK
N548ZxFTWN/vljtPnrPIPz79ySIPnjzXnJOMRi9rOM2T5ywEQZt7PD3Lk+cs
Jmzc/832X548Z2Ew4/P3tud58lxzTrx4vHeYF0+ea8713R+tW3uRJ88151B9
7RTtyzx5zqLyn9ELXl7hyXMW7bomflx1jSfPWRz/Mitey4cnzzXn+AnLQx77
8uQ5i4fnXROW3ODJc825RG9t/aebPHnOorf7CZsb/jx5rhmPbwfKJgXw5DmL
WYbFJ2sCefJcc73uw63dbvPkuab3n9Zd0O8uT55rzi2+OtsT7/HkOYdAdUjY
+gc8ea7poaGeJr8f8uS5pjd4jki49ZgnzzU97vGgMxOe8OQ5hwvRrQ8VP+XJ
cw4ibum1vSE8ec4hptXNyg4vePKcw7/Ddyy7H8qT5xwqR1p/nBzGk+cciq3L
E4vCefKcQ+S68293vOLJcw4rNKhpvebJcw53O92cez2KJ885mMu1C4fG8OS5
pmeapl98G8uT5xpXJ25wsY7jyXMOtkb2N8XxPHnOQfrPTMWBBJ4856D+cmNH
uySe/n8Hhx9XJMa+yTz9/ZfDs2UvdAam8uS5pmcLXUzD3/HkueZ53fMOIZ0n
zzXngB+jGrMzePJc8/0gkxjbLJ485xC7YtgzUTZPnmt6tGd20a4cnjzXnIOm
nxvzLZcnzznsaCfMcs3nyXMeg76t9tcu5MlzHqUJh+5dLOLJc01u3o4U9yjh
yXNNTjneXOdXypPnPBp23u7Rt/yP5zy6BC9sc6/ij+c8BtzqZW5a9cdzTU6t
9vJ5XP3Hc83rLvUdb1b7x3PNv++z1n9a98dzHu+L744eKvzjuWZeDC9eeCL6
47lm302+MnCI5I/nmtenDm54KP3jOQ/virxuJvI/nms+j2675bbij+ea3DGe
3mCo+uM5jw5nf+f7qv94zqNWHCPvyv7xnIf+Ugae3B/PeYj3da1s9eGP55px
9A14ffTjH8816+R659IPn/54zuNftmzC1i9/POeRGHKorvrrH881697NIcu6
/o/nPG497/zz3fc/nmty7O9Peyb+/OM5rzkPnDMLafjjOY8dI2cO7dv4x3Me
m57d3Hf59x/PP/z/8/8AY3QB9Q==
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.9954425763502535}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.837775869356822*^9, {3.837776005076311*^9, 3.837776012421256*^9}, 
   3.837776165794085*^9, {3.8377762309220133`*^9, 3.837776285857704*^9}, {
   3.837776342315796*^9, 3.837776356430626*^9}, {3.837776463359365*^9, 
   3.837776568093642*^9}, 3.837777424649634*^9, 3.837777502202667*^9, 
   3.837777554155157*^9, 3.8377778081833277`*^9, 3.8377779046343927`*^9},
 CellLabel->
  "Out[1419]=",ExpressionUUID->"d15915ff-46ce-44c7-8c6e-abf61ca3ae04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}],
      ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", " ", "DotDashed"}], "}"}]}],
      ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Pink", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", "p5", ",", " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.83777536423276*^9, 3.83777537307477*^9}},
 CellLabel->
  "In[1031]:=",ExpressionUUID->"b3d11404-db2a-49f1-85e1-ac81182ee172"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
FMqgflaFVXPVBcMDGJTfVdh60GTv3VcM6mtVMBtz81OHJ4PyvApTxq9zOXSf
Qf2tClu+fx3EvsmgfK9GMZsbOO8Kg/pcNU7Hr57ve55BeV8N4b5kpro9g/pd
Nbpvct1va8eg/K+GQ9Gvb/l7GNT3qlGffuum4TYGeVCN1Z9vaF+zZlD/q8ZD
8TqfipUM8qEaXtHLDOeYM6gPVkPlbE6QuymDvKjGQJGhYc0MBvXDagRYF72a
acQgP6rRPqTPgOv6DOqL1XDTXerIGcEgT6rxpyevbLQ2A13x7lwNrQ2D5xzu
y6D/f1ONhf/b5RalzqD3Q9Wok471/fyrlJ4fq2EeqjHCSVFK74uU139Oz0Wl
opSeJ6tx/9b/GJdLS+n9UTUuv2Go/UotpefLapSp5I85HV5K/bMaY9fnjJW9
LiWfqnGt6ILGlgel1EerET3AqyTrSil5VY3r5qVnJtmXUj+tBvM34/e9PaXk
VzV0rFfvb1lXSn21GqZFnwNXLC4lz5Tjf/RUns/0UuqvNVgYcSHji14p+VaD
gFtxHosHlVKfrcHxvfyF7j1KybsavBh+I4PzpYT6bQ169j2lO0RaQv7VYLD6
UvMN3BLqu8rfXx666F52CXlYA95D6/7ZMSXUf2sQNrAq9Kt/CflYgy/HVIaP
e1JCfbgG2RlbN66+XkJe1mCOt9d2+zMl1I9roKG+x+jRgRLyswY2p3bmhm0s
ob5cA0f2jAl5FiXkqfL4xm0ryawS6s81UNvXE00GJeRrDUZErP34TbuE+nQN
EiZo7vujXkLe1uBpB9dL9Vsx9esafM3ZerdbfTH5W4Np3nMX/uQVU9+uwXM1
nfDWnGLyuAb6nx+La2OLqX/XYHjJunTW22LyWTk+x1ptPjwppj5eA7eRg2J9
rheT1zUofbIpw+VMMfXzGnh32+5qc6CY/K5B3vfUb7M3FlNfVx5fGzOyt0Ux
eV4LlzEj28Qzi8nzWrRGrXMM0C8mz2vBebQt7NjgYvJc+fPXOfemqhWT57W4
mLp52McvReR5LUwqXdYG1RaR57Uo/9ZktItTRJ7XotHFOHJAVhF5XouPdnXi
lKgi8rwWa9UD3h30KyLPa1E1RGto70dF5HktPpS8nRjiUkSe14KV/V/ZUvsi
8rwWGd3rJ1XsLiLPa3H6R4yuvVUReV4L8fXBviqLisjzWoR9fJp1y7iIPK9F
bznvUv/RReR5Lebcs2E96FdEntdizYGcxL5/CsnzWvza+XL2DUUheV6LKazT
SzvKCsnzWqRcqWywKy4kz2sx0evoUN6HQvK8FpsCQ0SmIYXkeS0mvZ9k+Op5
IXleCwtNp26/bhWS57XIv264f+OFQvK8Fg0bU62CbQvJ81rEDSjO7thcSJ7X
oiSmLHXpskLyvBbfA5wW3JtdSJ5L0RY5YyHLoJA8l2KYxv3M/tqF5LkUWnN1
cleoFZLnUuy22Lj88pcC8lyKk7dZyyJqCshzKeRFg7LKWAXkuRQu094kqGUU
kOdSJC/VMJwQUUCeK7/fkdln2esC8lyKilc2tnvuFZDnUoTKdpqccy4gz6VY
9HGJk9vRAvJcCj0jL+Mn2wvIcyliHAXrvVcWkOdS1Om41fvMLSDPpSj3nVj/
ekIBeS6Fn86idc91CshzKeqFy8c/0Cggz6W4/TZ7n8vXfPJcimPe0zWPS/PJ
cykGLRr43yZOPnkuxfyjFZfnZuaT51LE7dKx0o3MJ8+laIwzcfn8Op88l+LF
0dSB+ffyyXMp7ojGdXvmnE+eS2EYU7vywNF88lwK8wHnPxltzyfPpQiy2fbx
44p88lw5fkd7LA0zySfPpUjd3/T5kGE+eV6H2cW32kYMySfP6yC9tnFFiVo+
eV6HnKLsj+e/5JHndRCarKkfXZNHntehPnXfpExmHnleh5/BF1N2peWR53VY
5N/7RXtoHnleh4chVzPvvswjz+ugO3zz9BF38shz5XHAd1nAhTzyvA5ntvCl
RrZ55Hkdznru0w/blEee18FmRP+AiRZ55HkdRv1ZZus3I488V15PwEU7bb08
eh9Uh6miYe+uDsij58U6BITe11P8ySXP63Dr8TLBOkUueV6HH2vDsiMlueR5
HUJ/T5H3Kcwlz+sQ3mem+b6EXPK8DjVmhqyYgFzyvA4JcfYPVZ/kkufK8RU6
ua64mkue10FhF+p31z6XPK9D9aVjnwp35ZLnys+/rHdYzTKXPK/D9AnT+82d
n0ue16HPdVWJ7cRc8rwO2t/aSh/r5pLndfAxOilL1Mglz+uxdRLfQNKWQ57X
Q3Xprevfa3LI83p0G9uk3p+VQ57Xo2fkjrdj03LI83rkzcNe49Ac8rweV60/
zjN5kUOe1yNGUjp5/q0c8rweGZqmc03P5ZDnyp/f9nD7rAM55Hk9fr2e8nji
+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
6zGMmw==
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt2ndcTf8fB3BRvqLIJvMnESF7hF5SMrKyI4SQmWSGsiKhgTZp771393Zv
t+4t2nvdW7e6zWsUkfG75d0/Hvdxr3PP+YzX83VO/e+kyZ7TgwcNGiQaMmhQ
/7+/gj4X7Ti5G4uV6g4kKP8P/14bwmZDYPXzuUvw0+J86rXXxhjz5L8Ro9PX
0PtXYOs3rGqFqibujAvfLDC/BoN1SSo7b22iz9/CDu1BEXqcrbjdOmfJsNC7
yOQZBG8Yv5P+/31IT1kS+nKpHtbV73rpfPkhkuYY9H06vBd3B473GALPlyd4
j/YjeavcYNWnT8CuCvs9OewgHd8aYScjuurL9KEem3Mj/b0Nxg+z2ztVygDm
A9/3Am31e3XzVY8hcbpVu16iLfR8n5rfVTWk77cHbnYlbNc8gbfsmZFXjR1Q
ddb00qGDJ+l8XuGUZ2Dw+0unUPNj4Aux9tYSy1mPjeh630D1RvhPvttpTFGr
nT30gSOM92QvqI46g5SB83VCfK+K8mjuWRw2Wtt/RDy0sfr6kG9M5++CqSfe
BCzuPQc314Ef5Iwao6eocIGuxw3Fpxl/oXIRVR+/7230c0fzlTMsrw2XaDzf
otWiIAT6lzFZ+sDIhdHvcGNmQc7kqyZIGrheD5wYP328y6YrOLRm4IBoM+g1
0Sy6QtfviSuuLb+GHTfF9lXPNA2bPDFGqZ7V1W5K4+GFwN6SvC+3rqJDr38E
vZDPYM4YP9SMxscb33ie7P2vzfDiYktf0GdvvFS4woqdeQ3VA+PlA5mVi2cv
Db8G1acTKj9+94HUC2HXh7XXafx8sV/htao19zpyvTbFf/3ti6Um2g2GB2/Q
ePpBU1p6yqGmG7ggGa1J0v6Iq66vvWR2k8bXHwYxoqXeUrcwvNznyvrhAajo
WzKrx+4WjXcAgisLY85Mv43g/stVCMSeOQLxt9DbNP6BOGl6p85vrTm29R9u
QhCSpDKemvHMaT6CYFqW9/W4/h209Q/31GBoBObMvyC6Q/MTjF1tFcsdb96F
jWT0CmaFwCt3jmLd0HuoHJivEHxZVdewyeke5hnYZfaohGJK5ULnPGULmr9Q
9EzcjKtxFuBKjqaoFobAaccaV26ypPkMQ2JJ0HPFUkucc+i8ixXhmNCzxNN2
6X2a33AYnBU+fm9+H5KTk1xyBLqrR/RmZN6n+Y6A627ub/HwB9gnWTySKYXr
HLip7X1A8x8JfSWHQgv3B/CVjF65TyT+XBEG1DY+oPUQCaHH8f9tX/AQ3b9L
brXOicIx7/kbedce0vqIwrjyyyMPpT2E9vP+BRAFzt8DNj0yj2i9RCFDZ1Sy
985HeDNp4IJgo5Hlddz5Ea2faFxpCNi0gP8IwoHTi8Zw55agYfMeY+Bwn6PR
PT++qNv0MZYN/MRgR7kO+1PyY1pfMdDZ8PHhryFWeMTgSVZQDAqvPxwzaYcV
rbcYLOt2u6nlZIViyexLxgSPfXfHW9Rb0fqLxZna2iKuyhMoDRwwFo9OWRTO
vvqE1mMstM6bxNulPIGZcf8ExGHTG7HVcJmntD7jINetoe248ylYPSqSGY6D
g9z7HjWXp7Re49FYuMejSvAUY/+dIFKDPDY6qlrT+o3HjIs5zcevW2Pg7HLi
ITw10U49w5rWcwIu7CqBsuwzRL8TB3B0E6B8YuvvGXuf0fpOwKoNmbnz3z3D
4IELTsAE2RcRm1qe0XpPhPLOntArS2yw518AQmPSzpyQOza0/hNh2tIi8z3L
Bt79l1uSiDsx48/vUXhO+yEJLztUf6Qdfo4v/Yc7lATOnfsJa/ye0/5IQi3r
fFCW+Dk29i//6iSwvbSKT6i/oP2SDN1Lp9eMtHqBV/3L91gyfH+o8nn5L2j/
JGOpU3eus+JLNJj3T0gyukZOl7p++iWeDeynFMwLG/b4ZORLLBlY4CnQWj1B
37DvJe2vFMh9C3p8WccWDxy1JEsmBYEhKiNeOtjSfkvFj3e9n1JqbFE4a2CC
cfrVA/W+uXa0/1JhlL+gY5uZHf7Xn/6dqVg27fTwkHQ72o9pUDuVmycvYw/T
/u1xJQ3aeRN3fZxvT/szDRev7hrpvNsezP7Z/ZqG84xgOeMb9rRf02HSeHK7
5lt7jP63IXErNyp/VqY97d90OKkWuciJ7DEwfD/Ssd38b9AfeQfazxko/Hxd
5scyBwyc3t0M3LS/Gtan70D7OwMtk5b5Dr3vgEEDPwzYjfnWPtnfgfY7A9Xc
n09W5DkgkKMr2dEMuO1+cFP/iwPtfwa0LHgZVpNeYbdkN455xMDBTxNPJmu8
ojxgIHJ4qOF3o1fo7deHzQD3Ozdt3fNXlA8MzA2Ku2MT9Qqeiv0bggnP8pi3
/PJXlBdMhA0ZroQ/r7BF0D/BTORe/6PgP/s15QcTGRoVxuN1X+NTQP8JMiG1
un7BS9PXlCdMfB9icFze5TVc+s+Ox4TBSJfBTumvKV+YcHtRO2lu02tskCyu
rXKZGG5x05cx4g3lTSZOhEYFnFz6BqK+/gvORHtIxWx5/TeUP5LP16yZzrB8
A/vMgQ0M/bNKTnf83+BfXGZilbbQFh/eYOByCzIhXp43XK77DeVTJlRzVOUE
io4YONwYFnbq73NM13SkvGIhXMEl0NfYEQNxtJcFWeHWLa/tHCm/WChzSrth
E++If/WBhefJm1fa1DpSnkk+H7H+2StpJwzEQTkLX7x7TH1UnSjfWPj2mvMl
dY8TLPu38yQ2Fu4aNrL+thPlHRuWpmM5sl5OmDuwgdjoOas5bX2OE+UfGz9M
OsbfFjshf6BesFHubBKdNsGZ8pCNYRlzeoZrOONm/3aoZcPM6TLf8LQz5SMb
nzx9b2S8cMaM/uU8PQsPl81NnhPrTHmZhaTr+8Ocqp2R3b/8DLMw5aTdnlFD
XCg/s3COsyLUfr4LTPqn1ysLg7WDUxX3uFCeZmHr7l1Pwm67YOLAhs+CaLn1
iK1eLpSvHGgqJO3szHFBRv/pzeYguVRnj9snF8pbDtR2Ok/aPckVZ8/0/3Aw
Y9Jo35EbXCl/OdgROOV76VlX9JcnScKicuuMcf52rpTHHDCmW/22SHBFfzre
auVg5cyEOMN6V8rnbPRMnwnd/9xwbKCgZiOMpfpWQ82N8jobm+x08tUPumHo
QEBl40R1bRUs3Si/s/Gm6jhzR4Ab+mdjXHg2Kl3WWhnlu1GeZ6Ohj6/y+Lsb
BtqdOBtPWYzw0BnulO85kLPZPrluszv+9G+3JTlwZX87P+mKO+V9Dh6zlvof
cXGHf/9yvpqD9OhrHwIY7pT/OZjhtqTxl8gdO/9dMGqO1rceHv2WPJC8Tu9u
ZK55i2/909GTA4UjrcVLTr4lH7hoCFuRGmzzFh79l7uKCwuFve8XxLwlL7jY
kZximVD9FjoDA8iFLrPtuK70O/KDi22KBhtFC96ha4AHLhxdX8yz3f+OPOFC
9uuPiest3sGpP977uPBKnqXQ4/+OfOGBafRkXHz+O2gMTAgPCTp+c+/3viNv
ePjtNGj73v95oLk/Xi14cL6k+Fhtmwf5w5Pk0PWicWYesB2IPx6u3XJaM+St
BwbiSsDD0i1SqT/ZHhiIl8G5WFK21qCv04N8ysW8wLypMhPfY2D7auWiYO7a
QZM2vCevcjHfZ5Ts8nPvMbA9rHKRu714jf6r9+RXLi6vU3B8mvIe/5ZfLnRM
9KZlCN+TZ7lQMnJo+zvUE6X90zssD8esret9p3iSb3lQ/1VyeediT9wbOMM8
qI5Id/2l7Une5eHQtecnIvQ9oTywAPOQf94q+8xlT/IvD3GO3XmzHnniQ97A
DywVZpk1OnuSh3mYdOFgSmCoJ66/7g/UD1gQXOd/lelJPn6A9ubBqzTLPDFt
YEF/wO/F8pfGtXuSlx+wIXfbto6/nsgauL36gAfioQU547zIzw8o7Xj5N2ie
Fy71x2nRB2yyXlBlp+FFnn6A8JfaCfO9Xhg/sEE+YvqvJsdzkvuSf75+lKy/
t7eP3vNCWn8cHPiIjEhv+QOvvMjbj9iouHnv3gAvnB64/foIuZuVuvtTvcjf
jxibG9R7pNALcv82HLIchh052+xFHn+EQbrOtZt9XhhYLor5+JYSt+mFgjf5
nI+PlwIK/JS9MTAdBvmwVrs8ga3uTV7nQ6vUYFLLLm/8uz3LR1sIp3zkaW/y
Ox9Hb//dv9bcGwOHq8+H190jby7aeZPnBZh9We2Nt6837fcCtFoWHKhN8ibf
C5B89E3t1Hxv2v8FMF5YOO+E0Ju8L8Bv29p1wT+8KQ8K0PZWYVLvSB/yvwA6
HczUbbN9KB8KMOTl1gXea3yoDxRAafgg4z87fSgvJN9/TsP0uJEP9YMCTFt0
bGvWbR/KjwKo7Uv6rGbnQ32hAJb7gy+89/WhPCnAi7kvEscm+1B/kHx+XXLl
i3wfypcCfHxgXzC8yYf6RCFenLrg8fKnD+VNIZy5AdrjFXypXxRCZ7IP20vZ
l/KnEPorUmYsW+tLfaMQ2hY7D3J3+1IeFUKzKOWi0Rlf6h+F8H958oT0XV/K
p0KMee69MsjBl/pIIYKUajr3BPhSXhVig9oVa6k0X+onhYiWZvwXV+RL+VUI
0e2Fly6JfKmvFGKTUDF5/h9fyrNC8Ca1izvG+lF/KcTKi1IKsfP8KN8KYRLD
nHIfftRnimCrZT9Ob78f5V0R1L8U9s254Ef9pgjc8R1FUpL75H/5V4RnVtru
Aic/6jtF6HLVPMAJ9aM8LAJ/wTaZyEw/6j9F+OiaFeRR4Uf5WAS59CmbXnX5
YWA52xVh8I/YChvJffe/xwdFuLjg52lrRX/qR0W4k7qvy2axP/7VxyKo2i8y
e6XjT32pCFdGf+nxMPCnPC2C+cLhtyKv+lN/KkLzvoafHGt/ytdifLvTbNng
4U99qhg1io+GDYnzp7wthnChspNKrj/1q2IkrlCfv1fgT/lbDM9VizkPv/tT
3ypGSNr1CwnyAZTHxZAuvz3ls1IA9a9iTJwUWq6mHkD5XIwit7teZrsDqI8V
4+ufI+apZwIor4sx53zKqeH3AqifFeO4tdzxo68DKL+L8fM581JcUAD1tWKM
WbTDYQwjgPK8GEHhs3KvlQVQfytGV0nc1JqOAMr3EpiLzZ9uGRJIfa4Er0ua
5ZInB1Lel2BLw+XwxYsDqd+VoP2P9aVQnUDK/xIMdQ3RXXg0kPpeCeoCdmyL
MQskDyTHD2k+r2ETSP2vBIPCusI/egaSDyUQaNRNNEoIpD5Ygvn3FgX8+RBI
XpQgSl7/mIcwkPphCXbOrNDQ6gskP0qwwWTOts7RQdQXS7ACGQ/eqgSRJyWI
OT69ZTeCqD+WQEeVcWf4gSDypRQxT/+nyb0YRH2yFAeaM1a/fBRE3pRiq/Zk
owNuQdQvS+ExP5Q9OyqI/ClFevj3I73ZQdQ3S/Hg6h3Vwrog8qgUr30Tlkf0
BFH/LMWrQQtvv5ILJp9KcTzf4Ke5UjD10VJcaclJMlYPJq9KIQz9mnhEL5j6
aSnaRhv+2GscTH6VotPJ4a6eZTD11VKItslp73MKJs9K8Sx3n55BWDD11zLY
bPrkd44dTL6V4fM1I6271cHUZ8ug7bdK9c2XYPKuDAVRn45FyYZQvy3DN5mJ
/OKZIeRfGXTfLY3sWxVCfbcM46TzClR2hZCHZdA8eFHryJkQ6r9l+Kr9Tvb1
vRD8ezxZBgu51tkFb0KoD5ehzaLKaUxoCD0/LcPgv78MD7NCqB+XIeRBzeOA
qhDyswwrbWWkf34Oob4suT4NGb6ebCh5WoaLOKcYMTOU+nM5sgoyYkevDiVf
yzGI4xx5e1co9elyjH1yf1TLmVDythx/Rgwv1rcIpX5djrpm9q9Cx1DytxxH
1Dfa7goLpb5dDl762GdF7FDyuBzPmbldh2tCqX+XQ135N0P0NZR8LsffE2ul
7o4Ioz5ejo9WilHjlMLI63IELlcrilYPo35ejo7AkWcO7Akjv8vhELPz8t9z
YdTXy3E+1aoj7EEYeV4B88xtDSdcw8jzCswwWKE3JSqMPK+AWUKtelVOGHle
AVu3Gk8Pfhh5XoGUU7mPjXvDyPMKZMpqi1YphJPnFVCfKsiTUwknzyvwgbV+
eQvCyfMKXMvsmZF9MJw8r0CWmZ9DqEk4eV4BfGi1cX4aTp5XwPKYobz1+3Dy
vAKeegGKFgnh5HkFblw4Gns7P5w8r0D2iFk15i3h5HkF3i90fP3gbzh5Xonw
swdrXk6MIM8rcaVDNvG9WgR5Xol7NjtVEjZHkOeVKArNXlRyPII8r8T0I5M+
fLsZQZ5XYoS6UHqGfQR5XomHz/PLtwdGkOeV+LXIcvN9RgR5Xok4L5f9SRUR
5Hkl5P8yh/R+iiDPK3FuUOE8D+lI8rwSsX9NlFgKkeR5JZR/OIjbpkaS55UY
u3qE3fh5keR5JRwORg7WWhFJnlcieOMBXTPNSPK8CubLi87574gkz6uwJfHH
sRr9SPK8CmlB3qrjz0SS51X4tdynYPfVSPK8CmVlhTvtLCLJ8yrwDWQCCmwi
yfMquDeNqxrnHEmeVyGYXy464hNJzzeqIBo5p8QvIpLuf6rw5GH52y8pkfT8
tQo737O1NuZEkudViFTkcN+URJLnVWjvi1Vr40eS51XA2/M3NnZGkudVkA9g
eLz7EUmeV+PrZIegPpko8rwawzbFOxuMiSLPq9HFG36eMT2KPK+GjNe5/81V
jSLPq/FyVHi6/aoo8rwahVExG39rRZHn1dh440D4xd1R5Hk1ojyuDq43iCLP
q3GMIcS+c1HkeTU02M/O5l2PIs+r8bdZw3zzwyjyvBq7kwS3smyjyPNqdM/Y
baTjHkWeV6Npr/F6XkAUeV4Nl4ZhMnqxUeR5NYaGK6RWMaLI8xpUdxw7dfZD
FHleg5j5xX3fKqPI8xrM3rLjybPmKPK8Bj/Mw4bM+BpFntdg786Sawl/o8jz
GhR7e1ftkYsmz2uQFf5jxedJ0eR5Ddb9SX76SjmaPK/BLrOcgpVLo8nzGizR
kR5TpxFNntdAX0Zvu7VuNHleA4ajw/0Vh6LJ8xp0LQ2KaDKKJs9rsNjkTpWL
aTR5XgPmsg6pXRbR5HkNvjHq5wx7Hk2e1+J4uPo2tnM0eV6L3jbBxUe+0eR5
LXamJdttioomz2sRwAqOGZ4eTZ7XYnG3c2URL5o8r4XSO+PBHuXR5Hktuo2G
qF0URpPntTDbtstw/edo8rwWQ/2WOY/+E02e14I926VENDyGPK+FR5HRZNbE
GPK8Fi4KD894zo4hz2vR6FqRen9JDHlei/GP9KYZacSQ57XQVi+z3qYbQ57X
YevT3YOWH4ohz+uQ9Tz48czTMeR5Ha6xPk5QuBpDntdho3RgwmDLGPJc8r7F
/4x7n8eQ53WoSZ0z77NLDHleh8F+Pn0dfjHkeR123HzMb4+OIc/rMD8/rqIz
I4bud+ug4zO76UteDEYNLOg6+G9KH9pXGUP3v3VoOnVFY2hLDHleh33/zXs5
rjuGPK+DqmPZV2WpWPK8DqEfz5qpj4wlz+twvDBXbs+UWPK8HioTvzAuqsSS
5/VwusGzt1kRS57Xo3nWpnshG2PJ83rohO55mr8rljyvx3+DhBHfDGLJ83ok
GLd9n3k+ljyvxwnbg4Y7b8aS5/XwuTGtzeJxLHlej97Hi5yiHWLJ83rkmN87
3eoRS57Xw/vm70NKobHkeT3u/fAyNUyKJc/rkVRzLNKTE0ue18PEQGWCsDiW
PK+H65ivPvMFseQ5H8t6Yw5f64ql/c6H2WnDtcy+WPKdj++ju3RGy8bR/ufj
67i9FkYT4sh7PvY0WTUkK8VRHvDRo3/v2rglceQ/H/VBi1eYasRRPvCx76Kz
cqFuHPUBPqa4Buks14+jvODD2/q4q9uZOOoHfCzsjpoufS2O8oMPmW+u5Vce
xFFf4CNIdnQW3zaO8oQPKbnRor1v46g/8GGx9o0mLyiO8oWP46sdi7QS4qhP
8MGRHvWWwY6jvOHjj/Rvjw1FcdQv+PD9e7iGVR9H+cNH0TTl/ds646hv8LG9
/eDwkp9xlEeS4x349MtwWDz1Dz46o9oXfh4fT/nER1LUZo/HSvHUR/hwuDx4
15Ql8ZRXfNwzUtSM04infsLHFjPb63u2x1N+8VFQd7Tzi3489RU+xu6yDnI6
G095xsftAvmQ9dfjqb/wMaik60vLw3jKNz6Oqi146GgfT31GgLXTsvV1POIp
7wS4u55p/jMknvqNAKsdpzZHJcVT/gmw0q767cXseOo7AuT3DfKcXxpPeSjA
kdH2n9ob4qn/CLD/4gu7yE/xlI8CmI36ee/Wn3jqQwL0nKpN1ZJLoLwUoGjN
2h1jFBOoHwlQkT1psXBuAuWnAN0hd84krUigviSAfvu5zw5aCZSnAiR/aS28
pJdA/UkAU6fBsjuOJ1C+ChA3JsVZ7VIC9SkBqkZMsRx/J4HyVoArtvMZf6wT
qF8J8GLUlyPtTgmUvwIILprvrfZNoL4lwPjOvICP0QmUxwKw8FU/i5FA/UuA
1nvfz2d8TKB8FuDLPGF1ak0C9TEBvqmxw9LaEiivBfja5C1g9iZQPxPgx4gX
t7hDEym/BTiZ99ysZFwi9TUBpFPDixtmJVKeS663Ssqte3Ei9TcBJr56lS2L
RMr3BtxLvHx01o5E6nMNsLL1NdA4kkh534BXjI2co+cSqd81IP7MIff7NxMp
/xswTKanxt8qkfpeA8Keq7woeJ1IHjRgzsEhwb+9Eqn/NeD1YqdViyITyYcG
8HZ8WXEyPZH6YAPc9Ob5u+YlkhcNGLl9x7OSqkTqhw14knyFP6Y1kfxowFBr
/9B93xOpLzbARH6w2FUmiTyRfN9o58CGsUkYiHeLBjhzb1ctmpVEf38jOf/K
dCuLxUn0fKgBynvuhBRqJNH9o+T749nbVXYk0fOiBgzqiTz/8EgS3U824OHl
A0P555Lo+VEDQj7nztS8lUT3lw3QSlNJ8XuSRP2zAVPvPy6Td0winyTjo//d
7LZPEvXRBqSXu74RRSWRVw2o63u85ggjifppAw6uLDpV+DGJ/GpAn7H7ON3a
JOqrDfjZ/HN7TnsSedaA7msjRm79mUT9tRHrt4oOfRiWTL41Yppc2KL9E5Op
zzair/y6PV85mbxrRNya45Ymy5Op3zYidPGTX1JayeRfI2aoDZN10UumvtuI
Y4pD/JcYJpOHjRBvcyz5eDmZ+m8jOl/UOprcSyYfGzF+Zl/b2BfJ1IcbMTdR
vjTFLZm8bITsvRX7zwYlUz9uhPyI1xcnJCaTn42YabZ5KpeTTH25ESPXXjtt
WZpMnjYi5ejarWuEydSfG7FfNyPn25dk8rUR7q2zmhKkUqhPN2LMm2fv7yqk
kLeS8Zo68Yf2jBTq141o4Iq/KCxKIX8bseTIalv+uhTq242YLjMhL0Y3hTxu
xFOz8DCbwynUvxthyp27/PS5FPK5EZpegYZat1KojzdilPyh5cpPU8jrRrCd
jkYOd0qhft4I4w2C0q++KeR3I048HuHPj0mhvt4Iz/0yswozU8hzIZpn9G7L
Kkwhz4UYlSM/K42fQp4LsSL0SmCiOIU8F+Krj259wp8U8lwI7iBedrJ8Knku
hLztxFPMqankuRB3HQyjc1VTyXMhVucWxleqp5LnQqjecDFt35pKnguxZEtD
4yD9VPJciMtXa0cqGqeS50IYeSV+XXkzlTwX4uhv79cHn6SS50I4zM8T33FM
Jc8ln99qJOvrm0qeCxH7zV2QH5NKnkuud7vv7b+ZqeS5EML68KKlRankueR1
VmfnOUEqeS6Est3rPN9PqeS5EGe3FZs0/k0lz4WS8eZXKI9KI8+F+L5ZPOzi
9DTyXIjz05dLxS9MI8+FyBglzByyPo08F6Lae/mu/dvTyHMhBLVHAoKPpJHn
QuzSsc8bciGNPBfigmAYw9A8jTwXYs/y3w+Zz9LIcyFMtP0mzHFNI8+FeOW8
5q5tYBp53oRNy7/G/kxII8+b8NdrROb57DTyvAkvWlN968rSyPMmjHbUPHag
OY08b8LDyBJxYU8aed6EUm7UYT2ZdPJccvzP4zxLxqWT502wTFJnHpmdTp43
Yfhqw4zmZenkeRNMZVju17XSyfMmPF3vdXDY3nTyvAkplmu6PU6mk+dN2Crm
XV1zNZ08b4LtMseS8gfp5HkTFtyqUDR3SCfPm3DvUqnOTK908rwJMVs+6PMi
08nzJixhS+2/xUgnz5sQMiNuzfyCdPJc8nrmfFl+fTp53oR3Y3zZruJ08rwJ
ytlnLh38m06eN8HYKV568qgM8rwJe49XPK+bnkGeN4H/dLR04KIM8rwJh34H
XL6ukUGeN8FmeUOezs4M8rwJi+f/N3PqsQzyvAmzTh0713MpgzyXnE+HWnDR
vQzyvAn2BuzGmJcZ5HkzigqNJrq+yyDPm2HVfVjnYVgGed6Mrd8+mZqkZZDn
zbj3ytTd8EMGed4Mp5Eq7P21GeR5M86qG3bu7Mwgz5tx9MqZSdt/Z5DnzWjg
afn4D2WQ581wfGm9LmgkgzxvxnqLwIqwCQzyvBnp/G23YqczyPNm9GhMnJo2
h0GeN6PdOI6dvYhBnkvev/bhaslKBnnejOqM/+Y2ajDoeVAzvnfINXzVYdD9
YjNONFv5Dt3FIM+bIV87xWTKQQZ5Ljnellsblx5nkOfN0GzVnqF7lkGeN+MI
W3XoGRMGed4MZZXy7w9vMsjzZswI/tztZckgzyXjO3fOn8ynDPK8GZeyZoxr
tmOQ580Y9PnZqhEuDPK8GfbHFc4t9WSQ583gjDwedCSQQZ43I0N71o8nkQzy
vBlr7IfqxyYyyPNmpOQkchsZDPK8BUkjm3XHcxnkeQvCc9fytxQyyPMW7I8+
+9SikkGet4CTPnFjvIBBnrfAfeVPhU+tDPK8BdOC0rpVvzDI8xacESt0nfvJ
IM9bYLHA53fQYCZ53gKnD0qzO4YzyfMWqNpsPLl4LJM8b8F4o4jEG1OY5HkL
PgQoqmQoMcnzFlh3LI+SXcAkz1uwb1zEvgPLmeR5C3ZsVx/rt45JnreAJWfd
2aPNJM9boD95m3DLDiZ53oJ1D5b2vtvPJM9bsPL913k9R5nkeQs6Jm8w33mG
SZ63oLOR1xp0mUmet6B37ebb/91kkuctkAkznnfWkkmet+DJyMafOU+Z5Lnk
9ePzXQvsmeR5C7ItY6RfuzDJ8xYMTb+q0efJJM9b8Gfr0beng5jkeQsS7qjM
KIpikuctsO99lr0hmUmeS8Y7ZpVTVCaTPBdhbmfL89m5TPJchNHL9YJci5nk
uQg5RvPFCjVM8lzyfvD8YzZCJnkugsw92e8ynUzyXARNP4vkRz1M8lyEiWs2
Bg35wyTPRQh5J8e2GppJnoug9NRpxPBRmeS5CFW9LvftJ2aS5yLc3PRBafLM
TPJcBOVRnT0+KpnkuQiJm6O/L16SSZ6LULO4fB5jTSZ5LsJygwkv9TZmkuci
uIfMn9W0LZM8l7yvl99qvjeTPBchMD9DOMYgkzwXYcfPhLFhRpnkuQg6PWY3
t17KJM9FSF4RqSC6nkmei/D7wTy+tUUmeS5Cyue3zapPM8lzEeZ0Zc8utMsk
z0WYtNTY/ZZLJnkuAnhrdWd5ZZLnIhiOl1rxMSiTPBfhNPuG/t3oTPJcBKeq
I0kLUjLJcxE+hpnsr2dlkuci2DWbLnqTl0mei7Dr/qxNuqWZ5HkrLLmabtJ1
meR5KxpO2S9iNGeS5614rp0/2EKcSZ63YkVsxkSN3kzyvBV7dildHiTFIs9b
oTU0dWiWLIs8b8Xradsbno9hkeetGLTISWr/FBZ53gre7KOnZ85mkeetKNUy
Gtm1gEWet6Lqfya/01awyPNWPAnWXGavwSLPW8GY7hlptJlFnrciZdyuG2t3
s8jzVujcGms1Tp9Fnrfio010rfgEizyX/P/Gz/c/nGeR5614ecXZJMyMRZ63
ov3auWC7uyzyvBVSzxctvWbFIs8l1+cT9t8RWxZ53gqNoeGq2s4s8rwVDnrf
PdQ8WeR5K7bf0Ts5LYhFnrfCquDxDfloFnneCnGPfs3fZBZ53oraFtc33SwW
ed6KwJ/ynu15LPJc8rrK8q+wlEWet8LxRVIMv45FnrfC6ZJVWl0Lizxvw51l
4dPqP7HI8zZ87vhTIvjBIs/bEC6lJWwezCbP2+C9VGd71wg2ed6GRW4l8r3j
2OR5GzRDk+dJT2eT523wX5nlOWYumzxvw6wTTDOlxWzyvA2eYXd9Vq5hk+dt
MO1lL96+kU2et8H8lvFUI102ed6GoxkrzlrsY5PnbYhO6hvtfpRNnrdhXcSz
acln2OR5G+S1ImyqTdjkeRtYZusO/73FJs/bkOYu9VL5IZt+39MGmOYr7XzO
pufBbUgdenPG7Tds+v1PG+p53Pv+79j0fLgNf6xdt5T5s8nzNsn9cuLNYZFs
8rwNH8W9I9cnscnzNhj/XTjqWiabPJeMR/n822G5bPK8DSVjWTtaS9jkeRtk
I3kv59axyfM2rJKeoG7cwibP29DNub035BObPG+Dmnxu1acfbPK8Dbu21Res
HpJFnrfj4e4XKx/JZZHn7ajbHShXMD6LPG+HR7XsvhkzssjzduznP5U3Vcki
z9sxOfzHmqwlWeR5Oz5+XVk1ZW0Wed6OTYyJ4mvaWeR5O249vHa7YEcWed4O
luwc80UHs8jzdkx5IvPF1jCLPG/HMusOwedzWeR5O7hScdsOmmWR55Lv27Rm
YcbdLPK8Ha+G7bOZ9ySLPG/HNEP+SSe7LPK8HSvYSQkyrlnkeTtSR6Y+u+md
RZ63o+QOq7I9JIs8b8fU4NDAk3FZ5Hk7qtz2fa9OzyLP27El2oVzMCeLPG9H
YsKBiWWFWeR5O3JKL7YdqM4iz9uR7Ja0oUqYRZ63w7J3yhTDrizyvB1ym8zM
Rd+zyPN2PFF/f9xMikOeS15/t8wdNIJDnrdj+d+edPtxHPK8HaFrGtSVpnPI
83bIdytvSJzLIc87wOZ75+9awiHPO8CauLatVZ1DnncgfUKh/RNtDnnegUPM
zWzlnRzyvAOHTzy0yj7IIc87MD7AqPTCCQ553gG9oKLYMRc45HkH8poiZ6de
45DnHditKVQ2tuCQ5x349t+epAnWHPK8A8c76+uzHTjkeQea5a653XHnkOcd
6Gjtbl3ixyHPOyB1ZWt+WziHPO/Agq+HdP0TOeR5BxQXjzhulMkhzztwZPuW
Ecp5HPK8A/5lvbtFpRzyvAOjs2WWhNdzyPMOaFgeCr3RyiHPOxDGq2JpfuWQ
5x0Q1N24Neo3hzyXvH9kYm790GzyvAMmugGp0QrZ5HkH1imN2WmtmE2ed2Ax
S+u+4exs8rwD7jdU9q1dlE2ed0C3O5Q3aXU2ed6BxGPpwl7NbPJcMp7a23yq
dbPJ8w5EvNf4j7k/mzzvAL/82eig49nkeSceMBRZr89lk+edWOLGn/rALJs8
74TXmNwZpveyyfNOtGjz8k49zSbPO5Ga9HG2vkM2ed6JwLNcFT33bPK8Eydi
Qip1/bLJ8060m5xdvTUimzzvRH1d16atSdnkeSeSIpcP2c7KJs87MURmgane
h2zyvBPvz+fY65dnk+ed+FX/+6SRIJs878TFYobItD2bPO/EZqWhSg97ssnz
Tqyazhrj+DebPO+E9aPOxGDZHPK8E7se3ZnAGptDnnciIv3UgrppOeR5JxZt
edfXNzeHPO9Eg88Mq6lLc8jzToRkN3CxLoc874TtlHreaZ0c8rwTgtvyz2x3
55DnnXBROyuTfDiHPO/EvV9NG0RGOeR5J8zHPl432SSHPO9EqeK6H9tv55Dn
nbixQPbWo0c55Hkn5pQ1J6W+zCHPO1E4uTCj1zmHPO9C4SW2zSrvHPK8C/PS
0qbcDs0hz7vAOZtslhafQ553IXtj4mtpZg553oU0l7i7O3NzyPMufJ0XpeZe
mkOedyFsQXBYW30Oed6Fqzs8v69ryyHPu7A14vXIV9055HkX/rQ//tr6J4c8
l3x+3PUAbVkued6FzMjTqt5jueR5F6IYh+4Pns4lz7tQm7I74LQKlzzvwg+H
3V65S7nkeRemhRwxWb6eS553YYLo+hjPzVzyvAv23j7PR+7hkuddeBDWWm1p
wCXPu4D9O6S7z3DJ8y5IGZbIXDDl0t93dKFL3kogvMOl3/924cnkMy4nnnDJ
8y7UJVioCuy55HkXWlzK3E+5c8nzLsS3XG8T+XHJ8y582HZ6kmkklzzvgr4w
bM6vZC553gXbPfoTbLK45HkX6iNMRYoFXPK8C1teS3mEV3HJczHsFMat3tTE
Jc/FCEmMTagTc8lzMZpdxdPu/OSS52JobSi8oCjDI8/FiIs74506ikeei3Hx
YVrmCUUeeS7GsrDGD7LKPPJcDOeUFnasGo88F2NbdEXgSXUeeS7G2fEc87Gb
eOS5GImijLXZu3jkuRjSkWUd9w7zyHMxjplMsVt1mkeei2Ec8l6p24RHnovh
c+56SIw5jzwXg7k4Yu4NKx55Lkb1MEPXtfY88lyM/DvuUtLuPPJcDAfH6yfy
/XjkuRgnhIOT30XyyHMxFt8+JGeSwiPPJcdrea6vxeGR52I83RzjrVjII8/F
KFzaJOqu5pHnYujmrF5Y1MwjzyXjE5x1JfozjzwXo2qQb6zjLx55LkbXjY4f
d/7LJc/FKFqfqHl6TC55LkbpiP+91JuWS56L0TNVs3aDSi55/onmJRf/B+Dv
R5o=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
tgqoX1UjbM/QgEpmW5q/1YiuXXdv7zYB9a1qtHwVHEljtqV5XA1fF8N3GtsF
1L+Y6/Ow9Kkzsy3N52oMENitSGe2pX2sGuGWfoYDdggor6uh57P/3xJmW9rP
mOs5c8XM/5htaX5Xw/LJ5WJLZlva16oxwe+/vk7MtjTPqyE3d+F9B2Zb2t+q
YaiyOsWc2Zbmew2M8nK3GDLb0j5Xg+niKfpzmW1p3tcgr/Pyjb/M8Un7XQ3c
7gwzjmW2pflfgy32GhbnmG1p36uB/sLe1SOZbakHNeCaZ4VGM9dD2v9qcLD8
0/PlzLbUhxoUTJ81JI65ntI+WAPtPxOj5zLbUi9q8Ol/VX585n5I+2ENSmuv
3v3K3D+pHzVI2mjdrsNsS/tiDcpLoi45MPdb6kkNgjSMpj1lxkNPvDvUYElx
REcxM36k79/UYLl54vfvzPiSPh+qQbtt6gA5Zlu6fqzBS5uyxXLMeJQ+L6pB
fPV42zZm/ErXkzXQUY36XMKMb+nzoxroul+f9YwZ/9L1ZQ3umw/2d9QXUP+s
weqJyl91mfki9akG1z6mb/nGzC9pH61BhzfC+Mz8k3pVA3NrV5GmroD6aQ1e
8e5OeMPMX6lfNZid/mL5kuUC6qs1yPgWuyySmf9Sz2owOiNBedASAfXXWqj2
y/x8hMkPqW+12Lmwfs9DJl+kfbYWobkKT5qY/JF6V4sl+ivyx8wXUL+txY3P
NnHLmPyS+lcLjxsJR7cy+Sbtu7X/n39SD2vhorGlehuTj9L+WwufB873dZj8
lPpYi6L2K5PGM/kq7cO1WHrNXbd1soC8rMW6AYs7n00UUD+uhbF3sNFpJr+l
ftbiwJprG0cx+S7ty7X4ojM554mKgDytRfzm0XUrlQXUn2txRn2/Y+JIAfla
C1ujwhvawwXUp2uRpHts2Y0hAvK2FtOGNW5tVxJQv66FW8niklWKAvK3Fvct
5+c49hdQ366FBuu+1mPGQ6nHtUC07e9cxktp/65FzNiL44VdMp+Z8287eb2V
8Vbax2uxYOp086bfMq9rEWJizSn4yad+Xou+8+f0ev5d5nct1pQqPHdr5VNf
r4WaVcHdtS0yz+swqGJn/j+hzPM6DH9psDisXuZ5HZ4dP/tJp4ZPntfh0zh3
r7QKPnleh/Wp686sLeWT58y2qoX5qyI+eV6HR17PA1XyZX2/DrP0PyafzeaT
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
5eT+D2a/b2w=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt2ndczH8cB3BZmT+rYYQUQkb27qVEmS1URluapKK0tJfS3rtQyShCCKVC
i/be3VV316Bk0++q9/3jcY+u732/n/F6vr7fLNO+pHR+/Lhx47onjBs38u+f
lC/lx7QVULyYM/CrQFVy7L0mYj99l44rtpL8ZW+YZRGoD9u4WYXrWTfo56b4
hCGZnrIwSRu+B7Jt1hY4qjWnbK5eIn3eChEuTjrLBlIlr7FWbpxyzxbLjHOr
Sic/pt93QPeEjArPxkzJPS3yPqEXnZDkOjXHxvqNpO3o8VywL7lQ19w0V/LF
oRnjxd3d4Gr+LnSSx3s6vgcCIgpu800sltyV8eHq61gvmF+V0NE0K5W0Hv0+
b7hFr13Cz18hmbnElaOYeROVw213d7Cr6Pv9wJj0b2vDl1rJqDzhNDN9f5xf
WPVlxtpGOp8AXB5/XqA5rEWy8efoF0IjMtV0Q1QbXW8Q1sfyFMm7dkgu2tC0
fLJjMERcMyVr3ZmSL0fPNwTDyesGSxO7JE/r7h45Ir7+CJsrXcei8w/DghX/
FW5e1SMZET76gv8nu0MP/ProeiIQo97Qdtbzs2T9x+/KHbcjEee8efuGmi80
nlE4cOc/qfKNg5ILJp76b92jaJgNLF98OPyr5PPR643Bo6lx7IiZ3yRVd44e
EFLRiwo/3PxO1x+HpVPuNNUI/ZQ8ut1TSpMZBwdWtlzxs180HvGwfaMlcVfj
j2SP4sgIxmO108CLK3z/aHwS0CqpNHtz9bCkt3HX75QvCeiqY681Lx+HhtHx
SsSvIdG2Q9k8EHcXqPv4PREvTYZexGaMx9j43ULr391lVx9OQFH8gaeDf2/B
3sJvd1naRIyN521IDcvOTc+cBCPuaM2feAeK1hYX57+fjLHxvYPDbxgGUxt5
Ma0m0XTvtCR8GVy+1O37FIyNdxKy6+xT/BZMw92Ry52dDIbQr+Xi0tMxNv7J
6Ek8+0Dl8gwcHjmcQApOtazRmZ80E2PzkYIzC5K1LnX8B/bIcAvdxaC2ke6G
ebMxNj93ccJgz9mvz2bDizt6pSKpSPjtnsyrOQd1o/OVit7x/WqG0+di9Vnf
t0Or7uFltJnj4hdzMTZ/92AnZyEhYjwPBdyjLdxwH9WTnlpdW8aHsfm8D0n3
08bL6/lg4N9ri60P4H2SuXh5CD/G5vcBHv7cFXftpAC4J8e95IcwXBE/eeV8
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
zPh8QuskrzbGHh+Uwy9in5Diam3qR+WINizIMj2ijbH6WI6InK7jGSba1JfK
8Z9LWPMiP23K03LcXtRkmfRIm/pTOTZee7lSpUqb8rUCuQKS39f80KY+VYG0
n+ZDIot0KG8rkJJhug6SOtSvKvDa4GjqdS0dyt8K2BaL2jBcdKhvVeCb6PwU
k2QdyuMKNByVl1pUrEP9qwIeLwfle/t1KJ8rsMB+S1vHPF3qYxUIljzAM7xd
l/K6AgwZ9SzJs7rUzyowbJW1JNFBl/K7AtPPx29Ze1uX+loFtLYrT6sv0KU8
r0BWntC9e3261N8qoOh1bOWteecp3yvR9HCna/aO89TnKsGeuquKR/085X0l
3i+6J6LvfJ76Hff9goFrg8nnKf8rIcsx60r8eJ76XiWG1kZYXvt6njyoRO2m
2m0WC/Wo/1XCe1rCxqB9euRDJQ7bXbao09OjPlgJmbn502V89MiLSvjPFp5Y
+ViP+mElbjhOM/Ss1yM/KtG2ac5hXZ4L1BcrUZyZn6a76gJ5Uokdpq/veslf
oP5YiT8OITLVVy+QL1UYbun1ko25QH2yCi6KBl7N+RfImypsMnokH9l7gfpl
FS6FWHbZ8euTP1Xwmmus7rZXn/pmFVjfZHMyzuuTR1U4uPWD0NSb+tQ/q/A5
8oGd81N98on7/TU5n0Vb9KmPVsHbssSJzWtAXlXhByd+X42EAfXTKszz5tvO
VjMgv6rgGDJsJupsQH21CrWbpXmc7xmQZ1X4aZXdN6XagPprNSQNdOSeDBuQ
b9Wo+zF/kcdqQ+qz1fj2X6W5o7IheVcNcQ9vjXg7Q+q31fDbAU5XkiH5V419
fb2iJ8sNqe9W45p5rADrjyF5WA2On0ZpopgR9d9qiM6GuquSEcYeT1bj3ivl
Eh87I+rD1Qg1ylzzKtkIY48PquE96O08r9KI+nE1Tu38xvAbNiI/qzFt3ZKz
W8WNqS9Xw7Zk87dxKsbkaTWs1hhlDzoZU3+uwaYLf9/PfGhMvtYgIGvVQvkG
Y+rTNfCxkch7xmtC3tbAbda5CtktJtSva5A67s+JYU0T8rcG0t80TjX7mFDf
rsGS560MxgsT8rgG/VsbZs7rNqH+XYPM6+nN+vwXyecaTC8v1O2Uvkh9vAZR
gYH3b5heJK9r4KJq90415iL18xpkM/5lHSu+SH7X4Nr6oBjDXxepr9fAT/O1
1cNVl8jzWnxtnKAmpHKJPK8FPz4fTXe9RJ7X4oQ6n/bFjEvkeS3OK0y+o9xx
iTyvRfcTiUCJqabkeS3EVuhYFQmbkue1SD9v4mm9w5Q8r4XM9BUlexVMyfNa
jJPXPsyvb0qe18J+9rgpPA6m5HktVtc0zOAJMyXPa6FeUaXBn2ZKntfiTUsp
r+QHU/K8FkZOj6bbtJqS57WQ7NM2K/5hSp7XYurEEulNcy6T53VoUm52vrf6
Mnleh/1L3Pfslr5MntfB8eQL8+bTl8nzOjBiTCRCzC+T53X4rBx+Tdv7Mnle
h2fOO07tv32ZPK8D/1e5kh2vL5PndfgqUsSUrrlMntfBT/btHa3Pl8nzOnxU
3iIYPNWMPK+D9tBqySYRM/K8DntCH4js2mNGntchQ7u0KPWkGXleh559cfs2
XTIjz+sw3LDRo8TDjDyvg15cZIpdghl5Xg/x199SpbPMyPN6HF+jESJUbUae
1+Nf7OCl6Z/NyPN69HMzaNY0c/K8Hkk2q2euWm5Ontdz748FWk5KmpPn9fCp
zc8KUzUnz+vxkK17/7OZOT3fqMfKIZHMcz7mdP9TD/n9mxgtSeb0/LUe67+8
32H51pw8r0dnz6JXok3m5Hk9er/rWzG/m5Pn9TBO7rmcNdeCPOeen2FXWvI6
C/K8ARJOUXvuylmQ5w3QnK4klKNjQZ43IPCPgkqvvQV53oB4MebX9REW5HkD
Zu8+98f1iQV53oCw3GlXBkotyPMGKK+T1rPosSDPGyCXf7pm+pQr5HkD/F88
+JQpeoU8b8DQ0shTNrhCnjdgVu91c+UzV8jzBtQNv1knZXmFPG9Ay+Icb5nA
K+R5Az4OcULPPbxCnjfgifC9U95FV8jzBpiLmpaWdl0hzxuxwDRlhvjEq+R5
Iw5dKJ4bKXyVPG9ErJoCW3jvVfK8EYs8H0ZkqV0lzxthseaC+MWrV8nzRkTo
fU/cGniVPG/E+LMd0+elXSXPGyEknG44ueQqed6IwmzW+1nsq+R5I1IPLBDf
wGtJnjciLP1jpO5yS/K8EfMnRi1Lk7IkzxvxcJdA3hwNS/K8EaZKVV6etpbk
eSNkD1nYCUZYkueNcF3qn/jymSV53oT9dcUTr1ZZkudNKL5elHxw0JI8b8Jc
0S2h6+ZYkedN2N6QVrNmgxV53oTygr7LksesyPMmOC+KMdE3siLPm3B5qll5
sqcVed6E4Hrh5OEkK/K8ieuOzjfjd1bkeROm+X/P+8ywIs+bsEYlctGNCdfI
c+755M8Zv0fkGnnO/X07YYcJUtfI8yaY7PSLbtO4Rp434V3hWu1q+2vkeTMe
COVXtUVfI8+bEbhVfNzEV9fI82YE79jC2tN4jTxvxsQLmWHev6+R582oXBYo
MLjQmjxvxgZOgqHpLmvyvBm1FwqiJp62Js+b0aDJyXh4zZo8577P+/zicrg1
3e8240NK3tPDz60xa3RBN0Pi+Mm0XXXWdP/bjF8Lgx5K/bQmz5uRc+tKlsYC
G/K8GXb3vzQH7bQhz5vRuWLC0jY1G/K8GfM3JLvIWNuQ5y1YINQu+CbChjxv
gbb5k1aFlzbkeQu0Pq/u+tlgQ5634D/Xw5tf/LEhz1tge2ZFif9iW/K8Bedq
irIcJG3J8xaEhypNc9ewJc9b0GJZ9uqWgy153oI1ATotdfG25Dn3+/eJWa7M
tSXPW8BcLOnjxbAlz1sgMLVk9eTJduR5C8av+HMiXMyOPOd+vv6bgMwhO/K8
BWUNHMvJRnbkeSvWiMx0aPW2o/3eCp1B3+3lD+zI91Zcbbt3p6HUjvZ/KzyL
Y6v+DNiR961IYCQVb+W3pzxoxYxU3iC37fbkfyuWfZ24pV/NnvKhFZ3d3RmX
bO2pD7TCe8q4pVNi7SkvWrFuTYR1Zo499YNWnLSfVurAsKf8aMVrvyQxLd7r
1Bda0XSoyFNtzXXKk1Y4fy7/Z3DsOvWHVoSKL/UNML1O+cI93wl8+ysCr1Of
aEUUY77o2mfXKW9acSI2bHt0/XXqF604ZMTjufLfdcqfVqy1aJ/FmO1AfaOV
2z/Xjs8RcaA8asWOvPCld7c4UP9oRZGjgXHsQQfKp1Y8/lLfE6fqQH2kFfOv
bLj9wNCB8qoVaivvhn+wdaB+0oq8Ot+PfTcdKL9aEb5ETG5ZvAP1Fe7PkTlN
87ED5Vkrnsv4LEzNd6D+wj3ewBeb8bUOlG+tKCzavFmP7UB9pg2K8xJkqv84
UN61YWmRT4bSLEfqN23Y//SQe8MyR8q/Ntiqrckx3eJIfacNC/+46s2VdaQ8
bENZcoZNtpoj9Z82xK2fPcnG2JHysQ33l32dLH3dkfpQG9Y1vnLlD3CkvGyD
+PVi16FbjtSP2uA46DC9/Zkj5WcbHrH3LmoodKS+1IbclgvPW5scKU/bsGz+
efbAZ0fqT21wvhX9aM5EJ8rXNnzUshHYK+hEfaoNf34aLLyyxonytg0DjOq3
z/c6Ub9qg6nBRr7pik6Uv20YimbPNdB1or7VhkiDK7kVlk6Ux22Y5HpwzZEb
TtS/2nDcpvLIpxgnyuc2lNwNXav5yIn6WBvWH5xW9jffifKaOx4nk/cm1zlR
P2tD+JP+qxq9TpTf3M8LaTqK8jhTX2uDD7+N1lc+Z8rzNgjz5i0qX+VM/a0N
XzdkZ2TtcaZ8b8e7lG8SGQrO1Ofa8cHgc1CmrjPlfTtuS+1gFlg5U79rh13r
6ZXd3s6U/+0Ir+g8Oy/emfpeO6LcjX2OPHEmD9q5ntpn+RU4U/9rh8nBtL72
JmfyoR2DN8NWSQ84Ux9sx0P+TxcfTHYhL9phlN6bL7bIhfphOzIX+216sMGF
/GjHz9/Kz6VkXKgvtuNMZa16u6oLedKOOIFsMT8TF4zGu307Diy6P/+IkwvG
/v9NO5SXH9g2L9SFng+1Q119g2t3qgvdP7bDpo1vWlG2Cz0vasf6R3EFL6pc
6H6yHZffXv/wjO1Cz4+41z+gOf3tsAvdX7ZDa+5QSB2fK/XPdmS19V36t9qV
fGrH7zkTIiXgSn20HckHu4VMT7iSV+0IFVD5lWXgSv20Hc9nTNsheN2V/GrH
wZRX9fZBrtRX2xGhLdE1mOJKnrVj9x0R7atvXKm/dqCw7pTC5CpX8q0DAmf9
nyayXanPdoDXLSz8+Dg38q4Dialb/k0WcKN+24HpiyVYxeJu5F8H7MVUNOKk
3KjvduCUgNV5RxU38pB7vC0640xN3Kj/dmB5EXuLsbMb+diBc2IdvFfD3agP
d8A1RMTe56EbedmBMAPHqEf5btSPO/B4qO4Cs8GN/OyAcPAU5ooBN+rLHdBL
5sy3mOJOnnZgQ6jOlNIl7tSfO2BappS5c6s7+doBjdLodelH3KlPd8BOUNxk
m7Y7eduB8K0dNgVW7tSvO9Cen6Zu6OtO/naAbeqwcMEdd+rb3PPr3ZdRleVO
HnPfj++QiKtwp/7dgW43tWArtjv5zD2edninOo8H9fEOvPUPX60834O87oCq
iLLOyQ0e1M87sGlHTtj5gx7kdweCZ7R9dD7nQX29A/H96dPSLDzIcwZOHdqq
yL7hQZ4zcCviYtKmRA/ynAE3e525ni88yHMGpqYuCu0t8yDPub8/ELdLk+VB
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
NPq6IJE870eTpkOe38pE8vwzzUsi/gd2gkYi
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
yQsgz+uwSyYzSfptAHleh8LnnWtnxwSQ53WYbqH0ptAvgDyvg7iorYGtYwB5
Xgeeeenq518EkOd1aPx82mGFTgB5XodMNcuuvnsB5HkdlpkVqaRcCSDP6+BS
cXe19ZkA8pzzs3rq7OuHA8jzepyZtVRw/94A8rweu+vqzBdvCiDP6zHX7fyy
b8sDyPN6XHHt7q2fF0Ce18Mypnvo/cQA8rweOw/GCoV/8SfP6yF/yDvZmelP
ntcjR3CW7vNGf/K8Hlv+u6D/pMSfPK+HoUlthlq6P3leD/6QIUmVRH/yvB4y
238tvRXqT57XY/t1uW23PPzJ83oIz7ptqWLjT57XQ9nCVPCBkT95Xg+rfO5V
Opr+5HkDTI+pKby47U+eN0Bv7p8OF3l/8rwBx1JWvok45U+eN8BCY3d7OvzJ
8wbM/BIo37TTnzxvwF+r4vU/N/iT5w2QWMBzeNlSf/K8Ae7f2l9jtj893+B8
fq/LM+W/fnT/04Dp19zCHD750fPXBuS7SPGld/uR5w2ws1r191OdH3negNpn
GkICRX7keQM+KMTmKr33I88bIPhE7I1XvB953oiNjeZzmoL9yPNGLF30PWOl
ux953oiFkl8bb1r7keeNmLdnUD7G0I88b4TYOkmxXxp+5Hkjzn9+Yil52488
b0TBqi74yvuR542Yy/hx9espP/K8EX+P87NkxP3I80Z8XNHYHbPLjzxvxP7f
plLc/H7keSMOHrXnf8TrR543gvVZQ6N5jh953ohCV/ftJ7j8yPNGfItg5aj3
+ZLnjYis/bJEtsyXPG9CmNIuhYPJvuR5Ex6strLZ7eNLnjfh85quV4LPfcnz
JtT48dVsV/Ulz5sgPvPAsPA5X/K8CSJ/5s48LuJLnjfBVNJq3ZU1vuR5E2cc
vMWfTvclz5uQLr77pu+QD3nehJk24vYFNT7keROuGMUV/E7zIc+b0DSsvWBP
sA953oSYwRdq2tY+5HkTvN5UtaRp+pDnTfAvu6A8+5IPed4Enc4Js64f9CHP
myHWUlz0bqMPed6M5d2vYtfO9yHPm5F8ISHJ5rs3ed6MvNz0rr+t3uR5Mzrn
tBzQyfUmz5vRs3tqxo8Yb/K8GdYW+x4bu3iT580QevnkKreBN3nO+f6Z2foh
t7zJ82bk/1pTfei0N3nejLOBjipMIW/yvBnbDFftd1ruTZ4348zpIuljk73J
82aEzwoI52J5kefNmPMjXDKz0os8b8EL50Fh67de5HkL+AOfal0O9CLPW2DK
d4VLyMqLPG+BinJQx3+aXuR5C44PKy77oeBFnrdgi5NnTM9BL/K8Bb9vPvBt
3ORFnrfg/DvWx9r/vMjzFnwSFwhp/OlJ97st8Knam9HT4Yl54wu6BWphO4//
KPCk+98WJO3asX9Bgid5znl/z2kfIU9P8pxzvBR/LUVTT/K8heO1ZLrNPU/y
vAW3Gm+bZZ/zJM9b8WjCwoLJBzzJ81Z0vdKwllzvSZ63Yqt+ULn7bE/yvBUL
NhR5DX32IM9bMblgzvCpZg/yvBXNNbbljGwP8rwVL6doS6yM8SDPWxF+deCQ
g4sHec45HpY0zTH0IM9bES/FP8de2YM85xzf6nDDMhkP8rwVeQe9j8YIe5Dn
rbBfrHTh+BoP8rwVIaOpM/pneJDnrVCQ6L7t+MmdPG9Du/4s9cON7rTf2zAr
7IbAn0x38r0NoTPWOaZFudP+b4PqIaOE587u5H0bDE8nWF8wcKc8aAP/ky9r
tiq7k/9t0FU11p4t40750Ib+LY42I8Lu1AfasI5H5W7HGnfKizbotIpx1890
p37QhnTPiya1I26UH20YTBnJbG5yo77QBt8psnUD2W6UJ22YEpaRwRXrRv2h
DQoChi9WublRvrTBS7WC74ixG/WJNlx+MzlU464b5U0bNiVfnRl2zo36Bef6
7mw7333AjfKnDdL70sw28blR32hD7Ef5sMfz3CiP2uCdei6l6Lsr9Q/O9239
lbaxw5XyiTN+wgEptoWu1EfaELPHK/ZXoivlVRuie0UD1X1cqZ+04bN6syvb
zJXyqw0zrlbYaTx0pb7COd+QR/Z/FVwpz9rQG7DG2+mwK/WXNvTx7kzesc2V
8q0NYaKTO2sWu1KfacevoK/rnnG5Ut61g0v2jv6+ARfqN+3wTU/79LXKhfKv
HZezZc1S37lQ32nHtCg3McswF8rDdlzb1rdMycGF+k87PmnGrhXTc6F8bIfT
gvOy62+7UB9qx8WFEm/+k3GhvGzH/MH2MzNEXKgftWOnZeDq6etdKD/boXT4
88Z5c12oL7VDcuDQw5XfnSlP2yGfPunn7g5n6k/tUNAPyb1Q5Ez52o6jkn7N
+knO1KfaMaH4NmL8nClv2/GD9+HHHktn6lftmJm99zP/I2fK33bMqBSSenjV
mfpWO5KyO7kyTzhTHrdjn2v6fyuEnKl/tWNV6qlnhiudKZ/bMbBuikL/dGfq
Y+2o2KfqqjjiRHndjoDuyeL1zU7Uz9oha33uomKeE+V3O3q4W9r64p2or7Xj
b9XmNgNvJ8rzdhSkZMstN3ei/tYOxuo9UhkaTpTvHZjJmp6lruhEfa4DbMPC
NP7jTpT3HRjMmI3enU7U7zrQtFJRMnaFE+V/B/SMpXoMpztR3+uAsqLWAvkR
R/KgA2ERN2pEWhyp/3F+7o3fuSHfkXzoQNbSn5uXJDpSH+zArpKK7AW+juRF
Bwp56yYtsXSkftiBWJ+QvvWPHMmPDmw1bdIVUXKkvtiBu3pL38pJOpInHThd
MBptuMcR4/Fu0IFV+wQvxq5xpP9/0wGttdJvemc70vOhDlTcn9wo8N2B7h87
4Gn/NVWj04GeF3Ug37HkRnaJA91PdsBv5t7K1W8c6PlRB/xXNM19HuxA95cd
2PviHu8nOwfqnx1ws3P6oaznQD514N7y6XE9yg7URzvw3vuJhNo5B/KKMz4r
PBijYg7UTzvwcv/ayW6bHMivDnzdkndAhMeB+moHrr4/fLWby4E864CO3NkH
7mx76q+dWP0tSl223p5868Q2of+Ul2fbU5/txK5DErIDcfbkXSeujPyUyPSy
p37bicNxXNuCzO3Jv05EmCxdaatlT323E7fnT+cxVrInDzuxOMBpqf4pe+q/
ndjIa77FRNiefOyE6t+os3br7akPd4Jbp/RlKLc9eck5nkxab+5vO+rHncgd
PnJlmGlHfnbizH2Rb+uq7agvd6L08f2kq+l25GknrO8l+AZF21F/7gTfiY6k
T+525Gsnrr4u/3vihR316U5MmXHJIELDjrztROIu+T0Lr9pRv+5ETkPYZjNJ
O/KXczxJgeuThO2ob3dioX5ys/l6O/KYM96LhAMWz7ej/t2J8nxe5au/XpLP
neCtE94cUPWS+ngnWAxXt2/RL8nrTugvmJ581ewl9fNOLOC9Ytug9JL85ozH
kYd8KiIvqa934sDT5WbTF74kz7twdYrY67dsW/K8C0tck9ONc23J8y5sOq0W
qeBvS553IT32pP7Rp7bkeRfkEoVx5IIted4Fnff8P2QFbclzzs8hMxOezrAl
z7vAy6jVSui0Ic+7OO6aHx1NsyHPu3DajXf7ZTcb8rwLomds9xVr2JDnXZDo
77175rQNed6F8ImCRUx+G/K8C41JarccJ9qQ5124GfBK7EyzNXnOuXdqX6S0
9rU1ed4F6wXB5VMdrcnzLlhe0vMcvW9NnndB+sbr7BknrMnzLnhc1pETWG9N
nndh3qTOSwp/rcjzLszyWV7n22BFnndBc+KZ6u+vrMjzLtg7xVy6ZW9Fnndh
5ISyZreqFXnehVWRcet1jluR511wrM58vHq9FXneBWf9Zq3Gv5bkOefzQ6Lr
IxotyfMuLF640dY62ZI870LA/Z43Jo6W5Dnn+lamx1s/sCTPu5HEnGYQIWlJ
nndDcPucDU38luR5N1J+88WtmWxJnnej+1cM/9M2C/K8G1UmE52YqRbkeTf2
25n8ueNuQZ53Q7TEUfXvIwvyvBuSTj59YWctyPNu8PTN1b8taEGed0Pr2XlB
4dkW5Hk3ZMs7pq/sMyfPuxE9tP2/JTnm5Hk3pJJSzvEFmpPn3RhM/FV93Mic
PO/Gwj06/oaK5uR5N+ZKvH5XIGJOnncjzfPgnk1LzMnzbmQXBXP7fDEjz7tx
cYWmLF+lGXnejW2e4M6MMyPPu+HEG3RUy9aMPO/GKWHRiSKqZuR5N4IuRUou
PGlGnndD5LXD5kkCZuR5N07KeEZMnWpGnndD7qt6+cquF+R5N5SkM8MkM16Q
591orjqyz8bvBXneDfeaWKtOgxfkOed9vdQwKcUX5Hk31Ao2uZfsf0Ge98DI
J+3WDd4X5HkPPiTtXzznx3PyvAeqjAdJhbXPyfMenJ4ncMo36Tl53oOM3Xvb
zZyfk+c9KFXXNHiu9Zw878H2L0lb3M49J897INXR+vn9zufkeQ8eHS5r/T3/
OXnegzc8al+lhp+R5z3YciRQIqnsGXneg+YYxYKdcc/I8x4M8r90z3r5jDzv
QeLTra/vPXhGnvcgTW2noID0M3oe1IPvHzyn/dz2jO4Xe5AreO9k+9xn5HkP
VjwJmdAyaEqe98BG7uKujyWm5HkPHjtaDSyONSXPe7Bx+PzOCy9NyfMe9Evk
c4c9MCXPe7BPaaIdt4wped6D6p0rU2y3m5LnnN+PEXNeO9+UPO/B3gaLrUXD
JuQ55/PFG62sKkzI8x5ceHUqWSnBhDzvwdea9W8lnUzI8x4kv2T6nnpkQp73
wF2uQu2GrAl53gvRvNU77PaakOe96HXi+VixxIQ870Wby8/EzT+NyfNePCtY
bOHRaEye98LybNqjVWnG5HkvtuuKPXvjY0ye9+JB8qe0e0bG5Hkvdkbv3rLr
ujF53gvPrcp13IeNyfNebDwwUDiZz5g878XovE3c86Ybk+e92MBjFyPYb0Se
9+LViE3c7SIj8rwXu83dViXGGJHnvXgzJDBlib0Red6LI89T7zpoGpHnvejv
qpJfJ2tEnvfiwOC3xgJhI/K8F3dzYn+aLzMiz3sh92qR4dvfhuR5Lxqy9qo4
ZBiS572QyhzJdDE3JM97oS5rFJwnZUie92JbzvLVAosMyfNePOSaf+xVowF5
3ovEgOit6gEG5Hkv3D5L9srdMSDPOeP19bTZg+0G5Hkvyq6tXJP4TZ8878XV
6O15fO/1yfNeaCzgsst9oU+eMxHjvNDaRUqfPGdi1cQfpY48+uQ5E5nfDj94
36JHnjNxY8BVf2moHnnOxOktHnMDHuiR50xM6/u9W15YjzxnYpeQ7jRw6ZHn
TGBGtcu5gqfkORM7ztR/c3F8Sp4zYdJ7SWyG4lPynAmWj4hBBN9T8pyJPUcv
F+p+1CXPmVgaHbdP940uec7E4vDtzWHPdMlzJqR5W/KnSuuS50xofcxc4LRU
lzxnwlbwa4lMlw55zsSEL/bzRGN1yHMmjPXS+uR0dchzJirWhz0MOqJDnjPR
omX5dtV8HfKcCa/VIY0FTU/IcyZWzD3aExz2hDxn4qTCu6E4rSfkORP7r6jO
Zok/Ic+ZYCYkyVyc84Q8Z0Ju/5zyT/WPyXPO8Vf1+b8LeUyeM9HTWFT7RvMx
ec7EE/HDZr3ij8lzJpofd2UdnvuYPGeiZtap4IpGbfK8D379a0Xtw7XJ8z6U
3eP1N3qsTZ73IfUCu9vviDZ53ge5jqurPy3QJs/7YJGFW1odj8jzPohsvZnP
z3hEnvfBpCz62myjR+R5H7r6px5aK/2IPO+DztEbJndWPiLP+7Bc/INQB1uL
PO9DfNH6B9ZpWuR5H64a+B9VsdEiz/uQbyFT9khRizzvw4XCC2tebdUiz/ug
UdQixTeqSZ73oSVvrVp+iSZ53oc/CdedfHw1yfM+CIj11QSra5LnffhUP1Oy
VUKTPO+DTfqGqZILNMnzPmz97b+ir0uDPO+D/I3hkJQkDfK8D4fDXianmmuQ
5304Lz/x1icFDfK8Dzd767IUtmqQ532Qjoxiffn7kDzn/Dyw+lNmxUPyvA+P
2zr6s4Ifkud92Jgazvr+5CF53geP6D1zlE49JM/7INR7/vrPVQ/J835IBNVz
5Y2ok+f9kN4WxJWfq06e9yO3w/vxH0918rwfj4Xf6NxSVyfP+7Et++sKriPq
5Hk/dh+6pFu2VJ0878esbSMnQpsfkOf98AlvVF5k/oA874eMdaruwM4H5Hk/
drR+jdnYokae9yNqy4QdZRZq5Hk/Kqyub23drUae9+N1ZGqZbMd98rwf8S3p
x/a+vE+e92N0g8h7owP3yfN+TBadeHNXvyp53o/BoFk3pN1U6e89/VgWd7mv
6qgqPQ/mnK8N9/qsL/fo7z/9+Hn+oviK4Hv0fLgfavO177Wdv0ee9+NzcU7F
nCn3yPN+PPd7HRj86i553o+5SaWzwm7fJc/7sfRKsPCiJXfJ837o8TAvsvPv
kOf92Oh6yXW73h3ynHO+zXXrW7fdIc/7oSEite1Huwp53o9q+fftBs4q5Hk/
Ss8eua9+QoU8H4A2Y+7f4j/K5PkAFEyvZrvGK5PnA5C5YT9YrKxMng/A6/mC
cPUVyuT5AD5n3l1nVHmbPB9AYPgO698Wt8nzAegZLvmvR/w2eT6AbXLdnQe+
3yLPOd+3XGs7V9wt8nwA2S5JfLtUbpHnA/A0SvxSsfoWeT6APBurorb6m+T5
ABbpPGi47HiTPB9APHeE1LHTN8nzAegf9JTzm3aTPOdcj0AKv0rGDfJ8ALEL
7QZ89G+Q5wP45JNReXjfDfJ8AD9iZ3ArfLlOng8gxlaorIVxnTwfgBpL4HCl
2nXyfABNwx2ee7dcJ88HcEby0bTZ/dfI8wHY7Z6RLBN2jTwfgKNlS8MU5Wvk
+QBWlkgGbua7Rp4PwFfknXhGtxJ5PoCa4pTO/GAl8nwAvRfqUw/eViLPB9Ci
X/J7C78SeT6AoleZYfPLr5LnLMz81M2MOn+VPGfhZNnHZVvqr5DnLKxw+Bv4
8soV8pyF2sRLnbVdiuQ5C+mz9A9MUVUkz1nY0TDjvyWfL5PnLPSxa3K49S+T
5yxcSelNG5p6mTxngVtNTeGV/SXynIUDi4v+XltxiTznnF+i3fyv4QrkOQtP
zj4debhXgTznHH+j7oyabHnynIWaVxHJay/Ik+csZJfJX5frliPPWZhfOknt
sbYcec5Cj/t5GE2XI89ZkCzg36/peZE8Z0EkyzxHRvAiec5CW3n80aVZsuQ5
C2li89cUy8uS5yxwaeKt6scL5DkL3+fOePrd7AJ5zoLV1Ls56qsvkOcs+Kba
TqpJOU+eszCwsspN4Px58pwF1fRclsrQOfKchbM/+W+7Wp0jzznf/6fzXqLA
OfKchfc/lt36kHOWPGdh9c41KW9vnSXPWUhYrl0aMuUsec6GkH7JPJOQM+Q5
G37G8zpOHz9DnrNh0iIdM3NAhjxnY9NAbdNrWxnynI1d79bUyO2SIc/ZWOQU
P6WGIU2es1Hy6bVr66gUec7GPDdtodLTUuQ5G297HsQE+5wmz9kYbLGpuzF8
ijxnQ+viyhczj54iz9no3ltl6eElSZ6zkRGf+2bhl5PkORuGhtr9OtInyXM2
Fi/KGiyIPEGes6Ha9cNr+swT5Dnnfcfcgl13j5PnbBzac0jqdNEx8pwNO5u+
Pxe2HyPP2VAW84mTcjlKnrOxcV6UqPDoEfKcjdy12XoLVI6Q52xcEpp0tL3y
MHnOxlBF78MAicPkORsW3pfrLzIOkedsCBomXJi47hB5zobUQMiHAJeD5Dkb
C3gVPu+bfZA8Z2PFEfnCPFMJ8pyNvV3uq2X+iJPnbAj365aWPREnzwcRMtlS
2ZUF8nwQAh4XzpkOiJHng5h9wGGZ8qAoeT4IJQ0p3cNfDpDng8hdo7ZpxYQD
5PkgTk2L7P00dz95PghbIWe13DUi5PkgxKwd9byE95Hng9iOrlLNc8Lk+SAO
nfDml9bYS54PYu1Q1KHtznvI80HMO9DQtSR1N3k+iDVG2UUze4XI80HklTDT
pvEIkeeDyNF3ezr/xC7yfBCKQZMKNhrtJM8H8dlDSO3s2x3k+SC+6c7fZvNz
O3k+iE2+l8saRbeT54MIOn53n9FMQfJ8ECJV25If+2+l/98xiFGBt1H+4lvo
77+DKOY1iuFibiLPB+E+J+qsp+tG8nwQ4T8279CQFiDPBzH4MKrTYh4/eT6I
+HCPKT21G8jzQTx7ukHIMmw9eT6IIXWxubrG68hzzvcVeAilXF9Lng9C1jLx
hOSpNeT5EFi6hcO7xFaT50Pg0ykKZquvJM+HYO0TslFQezl5PoQA0fMZu6x5
yfMhbFzlljMxYQl5PoTfiwvtAvt5yHPO+xtaDFbsWkSeD2GR5eVPj60XkOdD
MBi6L/Pm63zyfAjaz+q4WA+5yfMhHJCY2iPwew55PoSi0kF+7T2zyPMhJLbm
xpU4TCfPOddTdOCBxPyp5PkQPmhJyjczJpHnQzC2OK7K0OIiz4fgVJEr754w
KvbP8yGIDMlL6WX8FPvn+RDkP29t3sjzTeyf50PwGv65/0PMiNg/z4fgI34m
VtH6o9g/z4fwOODoIokrA2L/PB+C0DcvJaltPWL/PB+CJuPYutUW7WL/PB+C
wPOstz3NDWL/PB/C/JN8V2Z+qBT75/kQlhVpS0lqFIr983wI9Xxl7rcd08X+
eT6Ey7nHpqbkJYj9O70hlP9cFWDj5i/2z/Mh8Fy6wLvW01jsn+cfyfUJE/4H
2uvEPA==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.5}}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 0.457425194554616}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Imw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Imm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Iww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.837775353498094*^9, 3.8377753736731157`*^9}},
 CellLabel->
  "Out[1036]=",ExpressionUUID->"64397e78-944f-4fc4-8499-031c5ffb33d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Cyan", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", "DotDashed"}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Dashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"mRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equism2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"Darker", "[", "Cyan", "]"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "p1", ",", " ", "p2", ",", " ", "p3", ",", " ", "p4", ",", " ", "p5", ",", 
   " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"mRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0.4"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.837775418452588*^9, 3.837775434679966*^9}},
 CellLabel->
  "In[1049]:=",ExpressionUUID->"b68ee149-6cf4-4380-8994-f8c8231b4d37"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 1]], 
         LineBox[CompressedData["
1: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
5Pkg/KYXCIknzyTPh+jfceP+B+3cyec=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
        
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJw12nc8VX8cBnBtbRpaaKm0l0qlnpJSSUNLJaVU2lMbDe0iKQ0qFBWyyXa5
7j7n2ntvF/fS3vldfH7+6XVe3OOc73jezzkaueuo2Z6OKioqdZ1UVFr//fPu
Y4bprrXwTKrZGLR8CdqPd+Lk+JYFk4zW45f9gbhTrjY4cH6YlUOpBX3/GPgz
M7aPn78bFwYEGpefP4Ukjcm/1ne2oZ8/i3dhweaLJIdwTjZ2umrARdSnqfl+
Fxyjz1+C95ELmdPGn4RB6Zp7j49cwe3mAK1Vt2xxse18jphg5SpfUXcGMSt6
dZx44zqMxnzzn7DsPJ3/JqZ3P52k8L6IeeHC0wkvb2PQ6ntubv/scb7t992F
R6FghUvAJURpX2tYF+UET5ON91fkX6bffx+xRz6ZnepyFR4pI4JP2Ljggosz
T326I13PA6gVddccZXENRT/bfiEizCfe9rl+ne73IW788lviEXwDw6YW63S9
/AjNryZd7FpwE7Ft1+sG08mL91V1vI2t1vNbz4g7B/fqz554h67/CSJmdxv9
x+wunj1t+8KDYxe2zj5/j+7nGQb2VO1X7emEAun39ZU+7hjdt/SiqsCZxtMD
tul99609fR9DOm/qMzn0OUxVD2rmqroguu1+X+Bwzd8zg91dYD637YTwTJjv
OmDyA7p/T9x1cLohSXiAVXNuLd5Z7YmMyE1HFqx1pfHwwp6HDTsPlLuicV3r
CHohXf7srNmJhzQ+3tiw+J30a8dHuHuo9ve7j97YFb3u4gbXRyhsG69X8J3K
f3ZktBsm3tDIl35/hcPTpi4xCnOj8XuNqL/+TtmGjyHxWhr5+e9r+D0wcxuV
8ZjG0wcBvlNPTrR6goPK0Rrc2RdewcsWNjc9ofH1hU69i9px+6fokfvq2IIe
b5Bu1rFTYK9nNN5v4BjmMOXNs2fwa71dtbc45lXnb6HrTuP/Focv93sojXDH
ytbTabyD4R1Ryx9DD5qPd3Bn0rrVpXqgvnW4Nf3gNqkixdniOc2PHyKPBK75
Uvcct5WjlzbKHzNnF3MG2r5Aftt8+UOre+/pX1ReYryFc/JX3QAErs+Mcr77
kuYvAG9nWep/6ekJkfJsQ6e+xw+hj77DOk+az/d4cNFOVufmif0u8ouYFQjf
Cq3N04s8aX4DsUc19p75SC8oL055y0EIPOP41HKvF813EGz1fa4v8ffCBuXi
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
OPRDA4f6UgY+mV0a6vyNQ3magdV/TCZZdUii/pQB2eT76yb3SqJ8zcTRY6fv
ftZIoj6ViXv240rDRiZR3mZi+lKJyZFJSdSvMpFXeTNr1Jwkyt9M1AVcv5C+
OIn6ViZkY+oNz69KojzORFW3vElam5Oof2XiJU7Nj7FKonzOxHd5+bF1h5Ko
j2Vios2S1IrTSZTXmdDWjzE/cjmJ+lkmwjX39f1yJ4nyOxPdehz4etItifpa
JiTjK3opPJMozzNxs1C+eZd/EvW3THwJ98tLi0iifM/CrCuzXOZykqjPZWHG
Mr+rHsre2573WciapxP6MyuJ+l0W9qTHa68rTaL8zwIv9L7EW5ZEfS8LTGJE
jOJzEnmQBXv1pQq9f0nU/7Jg83Ojja1qMvmQhaoOLROC+yVTH8zCLsVG/WrN
ZPIiC9GxRx8MGJdM/TALuz13zl84PZn8yEJFL4NZu+YnU1/Mwif/AVcuLU0m
T7JQsOvP6Kdrkqk/ZiF+XWetgC3J5Es2ijMNjkbvTqY+mQ2ZQ4Rm0uFk8iYb
Rrp247hnkqlfZsOs0Msl8XIy+ZONhMpp2yPvJFPfzFY+P8y+++ZRMnmUjTur
E0e4vkym/pmNFaezNc+9SyafshFif/XKlrBk6qPZmFGVsV4vPpm8ysYUK+ZB
d0Ey9dNsWCnOLM5XPhe0+5UNdW6R1auCZOqr2bDZ2OHbvqpk8iwb/lsbWsYq
kqm/5uCp4OXlsu/J5FsOvNNG2T3swKU+mwO9+jNfDHtyybscdBZ5yRoGcKnf
5sByl7elszaX/MvBtsbzGyfrcqnv5mBJycQ03nQueZiDyObwNPP5XOq/OVDX
HrilxoiL9teTOXD3XnnwyGou9eEcyP+Ydf+4mUvvT3MwRDFh1hErLvXjHHQ5
L22uPsAlP3MQVKu/0Fz5XNPel3NwOMl6OM+OS57mYEG2idukG1zqz7lQnVX7
2uk+l3zNhWL2VNOGp1zq07m4ajvMxfAVl7zNhU6a94mHAVzq17nQPRj7uSyC
S/7mYknwVg3dRC717VyErLYt2i/kkse5eDS/xdg3nUv9W/n50IatxQVc8jkX
A/UmD+pbxaU+novAWxH28+Vc8joX+sm2rru+camf5wJ6lpsdW7jkdy7i7CwZ
T9UU6uu5uOi458sH9RTyPA8bTluli4amkOd52CPCnpzRKeR5HvYbyEOKJ6WQ
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
kxdmwJDnteihN63LkEUMeV4LnXFmPS4sYcjzWmxrmpaTv4whz2sx59K3/bNW
MuR5LTx3Mvx7pgx5XosSv0J5xVqGPK9FfS/TMr0NDHlei2vC5S+vbmbI81rs
Cfs2MXUrQ57XYuMc+xuDLBnyvBYnzLqGWVgx5HktFj6OCHphzZDntcifFGpf
vI8hz2sxLXXkyCEHGfK8Ft1Txz9Zd4Qhz2uxpl9T1fXjDHleC60BbqrRpxjy
vBadqw07151hyPNaqE8ckt//AkOe12L4KIObBvYMeV6LAndpv12XGfK8Fi0t
n845OjLkeS3sVkkSXt1gyPNaeA88V5F4myHPazHrulZN3j2GPK9FwI58seI+
Q54rx/8X49LhIUOe1+He0sEG6o8Z8rwO7wUFYq1nDHleh4svZmLcc4Y8r8NE
h8XPJnsy5HkdnCJHFU97xZDndZgx/qvqdF+GPK+D1/oc7SnvGPK8DkdXVg7X
DWDI8zocj9HvPTyIIc/rIKv7VNsvlCHP6+AeNjmkUwRDntehk0vnAx8/MOR5
HWzvP+hfFMOQ53XYsPVTIDeeIc/roDNt4YK3HIY8r0NCo3PiLS5DntfhZOcO
c2z4DHleB4Nrfq+XiBjyvA7ZGj7dNRmGPK9D/S/VfR+lDHleh4W9FfHcdIY8
r0Mm92Bf1yyGPK9Dr6lPLXbkMuR5Hcp/3vXVLWDI8zqlD9sViiKGPFde344R
s0JLGfK8DpxNDRdOVDDkeR189mRyp1Yz5HkdzBfKe9fXMuR5HYymmG7zqmfI
8zrs1+72fqOcIc+V8+06pXO3ZoY8l2FLYI5VxCeGPJfBcWI/wc6vDHkuw7/d
n/W6/2DIcxl6m94NCPzFkOcynDurmLLuL0OeyxA8YGJ8cwtDnsvQ3Ghmfq8j
S57LYLP/dIdxXVjyXIadzj7R8d1Y8lx53KH58roeLHkug2mL9baKXix5LoPv
3v7Gx/qy5LkMd0O7L/utzpLnMvz6vXHL1QEseS6D7GeXK6qDWPJchqMdxiXd
HsKS5zI0dOEP6qHJkucyTHjadP26Nkuey3C1IaivykiWPJehL9Mv7PRoljyX
IeLt6BP1Y1jyXIZ9TnLTbboseS7DvPEXjEUTWPJcBqeUnB16k1nyXIbZJj2e
eExlyXMZHhkP/9hhBkuey5BWqX3IWo8lz2WolKn3SJnNkucypHJVmBFzWfJc
BvGFz6Hn57PkuQxGcR8T0xew5Hk9JqV1/DJmEUue16PTq8lrzxiy5Hk9eiSd
zeYZseR5PbZtrndUN2bJ83oM1Lu5Y+sKljyvx03+5r2eJix5Xo+Fwy2fVZqy
5Hk9TJtf/hm9liXP67H83kgnKzOWPFd+vqFmjccGljxXft77s2HWJpY8r8eL
+pU23bew5Hk9uno2ceZvY8nzevRbVGV6cDtLntejsH6C2pMdLHlej5ZdPNVk
K5Y8r0dq7wh92W6W/t5Tj0uff3n23svS++B6GCQ+Npxqw9Lff+qxOvGO9uoD
LL0frodhdc6sA4dY8lw5Xvyzt64eYcnzeox/dmzos2MseV4P0YJ42fsTLHle
D/m07T8STrHkeT0uPF5tzJ5myXPleMx1zs07y5Ln9dhwVdOv/DxLntfj4rXP
ibUXWfK8HiO+qg1tsGfJ83r0nnQ8uuESS543QKKr9lJ2hSXPG5DuJJNUObLk
eQNe+v5YVHydJc8bULtdvyXjJkueNyDY+FU3/m2WPG/AIY+Z2yLvsuR5AybM
q/z1yoklzxsQ89q/1uk+S543ILbL9VFnHrDkeQMyJh0MsHjIkucNSHZefx1u
LHneAI+Vc0KGP2HJ8wbwh/eZ8vcpS543YO7Z1L+57ix53oCnu0+MDH7OkucN
MHsif3rtJUueNyDh5Bwbcy+WPG/A2l9L7+m+YsnzBnjm9unx7TVLnjfgjeWN
Uo4vS543gL31us+ttyx53oChv7c+We3HkucNWPbnhZ16AEueN0Bmb52Y/p4l
z5Xn13xp6RzEkucN0B5kaLEyhCXPG7DVfFF0xzCWPFf+/hN3T0eFs+R5AxSe
gx8djGTJ8wb48HMGakax5HkDNI9F/RRFs+R5Iy5mBC62jWXJ80Z0Z/wUWvEs
ed6IEVUeHVISWPK8ESdMbC/s47DkeSO0ikZvV01myfNGiIc8eePLZcnzRmRN
T9pmyGPJ80ZY/r53vpDPkueNuPa9sfMJIUueN+LsOuZ3FzFLnjfifsmQnY8l
LHneiEva3BljWZY8b8Th+RGnQqUsed6I3j2KxxqkseR5I9K6j1vJTWfJ80b8
tXYoNc5kyfNGCJrTa0VZLHneiFuTe1ivyGHJ80akLOu/kZ/LkueN2NI/L3ZR
PkueN+LlwCVPowpY8rwRzhcWKiYXseS58vza4bGexSx53gie472O6qUsea4c
79Iwrn0ZS543YnRPNZX6cpY8b0TJg9tRZpUsed6InQE9FVFVLHneiEXzLnhp
1rDkeSMiJJxMu1qWPG+Evwf3WlEdS543oubRgSj9epY8l2OMqcehBw0seS7H
/C54JWtkyXM59AL1ty9UsOS5HMerj7jfb2LJczmYr3zLsmaWPJcjOHfM28mf
WPJcjmXTj509+/l/z+Ww23Q7jfPlf8/lMF1hHtL12/+ey+EfHT9s5ff/PVee
v8sLtTs//vdcjhnziu6Lfv7vuRzZ6tued/n9v+fK6/32Zzb+/O+5HFdaXlme
/vu/53Lwvkwf6P/vf8/lqDG5ua245X/P5agcf3NG7w5S8lyOvF393Od1lJLn
ciw4381tTycpeS5HubexjlNnKXkux8jE0GXhXaTkuRxdrXT/5XaVkudymIlv
mPzsJiXP5QhpDJo6uLuUPJcjbb+Dv14PKXkuxxnXrMTVPaXkuRxhB+8d3ttL
Sp7LUff6RsSF3lLyXI4fXp5PnPpIyXM5dpyOGPSyr5Q8V2B1jffM92pS8lyB
jL1L5VHqUvJcgQqtc0uT+0nJcwXuVwxZIOovJc8VGLagUzY7QEqeK6C+T61P
2kApea6AtYmmLFVDSp4r8PJ6h33sICl5roBi77ObwsFS8lyB+Y2c1UlDpOS5
AnuEq2M+DJWS5wrM3aHF+A+TkucKhPK7XHuuKSXPFVARlFXf1ZKS5woEFVxv
OqctJc8V4E1J87YeLiXPFSjyfqhiOkJKniuwUOTffeZIKXmuQK/axgSNUVLy
XAHTL1NG/lAet3uuwECP5dNzR0vp/3co4Geg1hymI6W//ypws3abpdMYKXmu
wDOrDnZ7x0rJcwWWjs5ZZTBOSp4rcMs8SNpXV0qeKzC+3KpTufK43XMFotYm
NwSNl5LnCiQqXt+8OEFKniuQE1lcsGyilDxXgGO+qLLPJCl53oQX+p7eWcrj
ds+bUHAkbciTyVLyvAkOwlcrtkyRkudNGCNonDF4qpQ8b8JEL7ucLOVxu+dN
ECzWneU8TUqeN2H8ioQ1xtOl5HkTHvVSH/dXedzueRPs3D7GBs+QkudN8PCd
1nfXTCl53oTBoS9GqutJyfMmvKzs+SVeedzuufL6hi2/YTNLSp43IblpVJHa
bCl53oQ1AQc/RyqP2z1vQovZR3brHCl53gSe+5VDf5TH7Z43IeKLPNVdX0qe
N2HhlQ4/9edKyfMmjB5+py5TedzueROiLcxfHponJc+boLgyW7vTfCl53oRj
9z/teaw8bve8CcHztpwZbyAlz5ugo5i9Plp53O55E0ylm38tWyAlz5sgjrhx
OEN53O55E1xnP3i/baGUPG9CxVPD2ArlcfvlNcG5bPfjfZCS5034mcwxrFce
t3vejCkhoxMOLJLiPwC1YRk=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 
           NCache[
            Rational[2, 3], 0.6666666666666666]], 
          Dashing[{0, Small, Small, Small}]], 
         LineBox[CompressedData["
1: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
Pi+6IlhAnrejIedg25MmHfL8I31XUPg/WHazgQ==
          
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJwt2ndcTf8fB3CrfkYhKYSEjGRlRcYr2SVCKFv21tcsEi1JGkaUSov23nvc
1m3e2V63e9vLCsn43fK+/3jcx82553zG6/k6p2YaXdt7ZtiQIUNahw8ZMvDv
r8BPHF0jPSTaH2OwNLw3/Ht/AmFXKlZmrs7c8PPBxZSbL86j+WHOPtujXPr8
OgK33Tngu0Kw4d7EsG0C05v4vaWjbGR9O/38XeSFFvx5feDLBpO2uWojQ+4j
cbz/ygW7f9L/f4jR+TzLywuHYl397mevr1pg1Y2CHd6JErg/eDwr9Pp6OQ4r
HY2kHVLDVB/bYI+pMGfJqvH4d3xbhPhMzGZsl4VGTP7ttHd2yNw48ZPyO3mY
Dn6fPUISd0isXaOABEXrjj0JDohJLc3qklfEv+93wtMjCaYTps2Ee7ZSxH/n
nXHs7Z41p3fNpvN5DsU5DKkTPnNQ0zf4hXD9dbWtb9J8/LvelzjIfZw/J3wB
pi6pVZZ89ArbMC6g/NwiJA+erwtcflzIGTpzKQ6dXjtwROT3qqeUeKrR+b/B
/KO+aTsXLYeb6+ALa/gb+beKVtD1uEFlqNSYzfdXoark+z7h+7dw8ThyJXLd
avwbT3e0u/eMSZDWwJQRB8YuivJA1GbBjz09a5E4eL2ecNEO3W4iWA+DNYMH
RPGnRRPmi0DX7wXXl7rqIf2a2Kn+ZOOJJi/c4mWvs5DWovHwxr6Rt+a/mLcJ
nXsGRtAb24dbja7ZsZnGxwceQZu/Gt7cAvvLLf2Bn3xQZL3qxyj/rageHC9f
JOhKLGgTbIPqY/nKku++KLlv6/lVeQeNnx/u1WVdUrmujULvLXFffvvhxYzG
ACuGDo3nexw8tuHq8Bm6uCQerckjPsAhyZDvY7GLxvcDxjbX/zjevRujy32v
rx/tj/dVe39OjdSj8fbHCAPeZ9lrexA0cLnjA9Cn979b8mp7afwDwHz1fPys
73uhPXA4+UAUBEbsX5m5j+YjEHFPl/B3OeqjfWC4pwUh+MF1pSsn99P8BMGO
c47poH4AduLRY80KRm+Iu1GUzEFUDs5XMIZz5puX9RyEyhHHrN75Idh/JSGq
j21A8xcCZtUTZ4UEQzDFR1NYEoqsa1ci1H0O0XyGYurmHL/dTodxwbnrPlaG
YUe/1YiTFkdofsMQ/kzt7MW7RyE+OfElh+OzjODExf+O0XyHY6KNhv3x68eh
L1484inFiyINTeU1J2j+I7BNY1GHTMoJ+IlHr9w3AhVZXrI/NE/SeohAsO8T
ybK8k/j6m3e3bW4keiWUZYL1jGh9REJV+OXh7WojbH46sAAisb0921f9/Cla
L5G4fzoor+vbKbycPHhBOKrwV+PN49O0fqIQtvrMzlUKZyAaPL0oWK7M1c4L
O4PBw32Kwu7YvdbaW85i+eArGkOvW+ik156l9RWN73ITu5TvnoNlRoF4BUXj
6krpJNOJ52m9RcNpRtKwjKjz4IpnXzwmsCgOnfR17wVafzH4nZO5Q773AmYP
HjAG6sPk2+e4XqT1GIPX3PHas3AJN84PTEAsgvKPJY9uuUTrMxaVzz871jld
BqN3vniGY+HcMULBY90VWq9x6DSZGLKl/Qpk/50gxiU0vSl3vUrrNw7+FRbL
9+pcw+DZ5cfhXsja0pg/12g9x2N4Nuf4X8PriPLo8c/ViYflS92Q17HXaX3H
Q36X4vdZE4wxbPCC43Ha+U671zVjWu8JULcPWypTYoy9/wIQBp0aN28s+o/W
fwIeceKO5z37Dz4Dl8tLwLycOg+pnv9oPyTiia9zpdaeG/g8cDiDRNi+YaVe
iLlB+yMRDtLpvQ8n34TWwPKvToS3h89CW7ObtF+ScGCkUNpceBPPB5bvsSSE
KY/eckb7Fu2fJBzlMcw0om6h0XRgQpLg+K321B+F23gyuJ+SMeTwdt8Iq9tQ
G1zgydgYO7FVr+c27a9kPHK8XVd36A4evdokXjLJEK5nLDuUd4f2WwpOs42d
s1bcBXvW4ARDacxU/0m+d2n/peD8bhMlwwkmmDmQ/l0p+PjmfJCNhQntx1R8
udT86d0XExgPbI/rqbjHlPHzO2NK+zMVu2apXn1ZYYrMgdn9kgpX7Ze/r+68
R/s1DemXWX+XZ96DzL8NiZ5flrOEq+7T/k2DXMhN2fuh9zE4fH1peHT4ycM/
yma0n9NRMa5g0kUPMwye3v10hIuOP06Tf0D7Ox3ef1+a9Ts9wJDBVwa+WPIC
lKTMab9nwMc6KH6RrTkCcnXEOzoD5n9OLnQe9pD2fwa+H7kz3XzjQ+iJd+ME
ywxEBtvbNDx8SHmQgauvVRCb8RA/BvTJzgB3TrPi7yGPKB8ysCP84u/4jY/g
pTCwITLhWXEtqsniEeVFJvLt0+Rssh9hu2BggjOR8G3J3zeSFpQfmRh2L3Sr
4g4LfPQfOMFMMCKXZsvZW1CeZGL1CcZu81ILvBk4uwLx5/+ZZx6StaR8ycTj
bw6f/A9aQlO8uHZIZeGA7MKEs+6WlDdZMJTw7nIRWKK1f+CCszB00vaLq+dZ
Uf5kocvtqaTOFSs4ZQ1uYNxqanIribbCv7jMQuNWwd+sn1YYvFxWFj6PmDx2
vpY15VMWWvRXeP5+Yo3Bw01g4MT+j7abONaUVwzMGCnv36dgg8E42sfATx1z
9ozTNpRfDHDK5ASxoTb4Vx8Y0F7CDUv+bkN5xoDgQ4asmtZjDMZBOQPJ+763
yj17TPnGgPdor/9drHgM84HtPDkbBQZfti9StqW8y4bkgzU2x6/bYt7gBsqG
3dmCN0NSbSn/slHiJ31o/OgnKB2sF9nIvGTq63DwCeVhNhxtX++69/4J7gxs
h9pseB/pX1H25QnlYzbSy3WWvtOyw4yB5ayYg0LjDQplznaUlzn4pfymyFRg
h7yB5XciB5XnFs18pvaU8jMHcvMaP0lZPMW1gen1zkFGeuDkn5ynlKc50Oqz
uaavbI9Jgxs+B5p/n7Km3ranfM3F78NVcnr59kgfOD3lXEz+7DPlk8Izyttc
pHybE/fnyjOcOzvwyoV/R1TO3cxnlL+5OOYaMOu4nAMGypM4YaEw6pZ/5AUH
yuNcfHnwavH1NAcMpOPdtlwMveny3E3WkfI5DyedZMOWXnDEscGCmgeb9/GH
l6U7Ul7n4fc+xeTS0U6QHAyoPPzlrexcu8qJ8jsPHhcdwmpPOmFgNiaGid9H
ve2JeeZEeZ6HIFaFe2aiEwbbXU8eLC/l+w5vdqJ8z0df4NdPphOc8Wdgu6nl
Y87Snpvz4Ex5nw+jaXsURl12xoeB5fxfPu6MSC6d4epM+Z+PD595FpdynbHr
3wWDbbRrZucXZ/IgH26oe+M98zm+DUxHbz6M67XKn+5+Tj4wkTlUqyDI7Dk8
By5XnYkfhQHH/wQ/Jy+YKMzVsbapeo6tgwPIhHq1pMqmUS/IDyb8d6euXrH6
BboHeWBCM8fQx/DcC/KEiYwVJfuiXV7AZSDe+5ko65BduzH3BflSADU71a3D
v73AhsEJKQDzz7RTfXNekjcFKLX6bj77wEs0D8TrgwL0e7HtHtm8JH8KkKPI
NJaNfwmHwfgrwCnp4bMrW15iMK4EBRiRGmzPmfwKg/EyrBALUr65/93xinwq
hC1PUevEvVcY3L6bCnF35NmLX0NekVeFkHaSG5FS9wqD28O6EKvLzH7HjXch
vwohdfvb5iYtF/xbfoXoU6/L33rLhTwrRMPYt3eq/V3AH5jekUU4L+cG3yoX
8q0Ik57uHucp/Rpmg2dYhGD2Kn6h5mvyrgjrLnLMF958jTmDC7AIZz4H/073
f03+FSFopv56m+rXKC4afME212iR+bg35GERGIzbKUGb3uDWi4FALUaA9KrK
kXffkI/F2OKv+59ryBtMH1zQxfB6Z3z7iOANeVmMtrFHeXvkXZEzeHtVjL+y
HFMTHVfysxiH2K4G3IeuuDIQp5xiWF+0OnI8zpU8LQaGXrg1vdMVcoMbpASN
UXOeS89yI19L4PfqnfcSAzekDsTBAfH72Kznlg5u5G0JzCdY6I/KccOZwduv
Ejx0L+dn9LuRvyXIVcuWCFr2FlL/NhwC3+7mZl94Sx6XYLa97SIZ77cYXC4K
pWhxsxruWPGWfC5FrNaJzRvGu2NwOo6UQlC3oV5xuzt5XQrdAG3G0ofu+Hd7
VgqZ6Jj6Gwnu5HcpLDpiZrd+dMfg4epL8VLW7sEzFQ/ynIVzGSb1p4w8aL+z
sOsga+Wltx7kOwsYI7juy/Og/c+CZpXEQ6mxnuQ9C1F27/Z+2OZJecDCkwC5
iuuPPMl/Foosyv5eSvakfGChYP7BxNe9ntQHWMg8J/v1y5J3lBcsMPOevXt4
8R31AxbMn+wOXv/+HeUHC/q+rZKqDe+oL7Bwuf67np+0F+UJC/JTh67SUfWi
/sBCxEijBaN3eFG+sNA+9OMcwVkv6hNspMRYKrGsvChv2Ngwq0+m3MeL+gUb
yz2WfO7N8KL8YSMnf1Tiwnov6htsHHx95di9316UR2xI7thcJZjqTf2DjbsX
TZVPaHhTPrHhz/274puBN/URNk5+yBvud8eb8oqNWbr5thdcvKmfsME26U/e
GutN+cWGrvKxV2t53tRX2NB58lFq+xdvyjM2/qcSp3B5gg/1FzZqcmLj/NV8
KN/YWHyqr+Knng/1GQ6+b3IwOXPdh/KOg7dtVk4tjj7UbzhwmvBJ7lG4D+Uf
B8qJbUOXlfpQ3+FgxYQnO392+1AectD5tLOrcqwv9R8OrhStqGMt9qV85MAn
wlqufpcvBpezIwcftSXtR1zzxb/HBxz0CxrWbHT0pX7EwdEerUmvwn3xrz5y
YKB4dNoQli/1JQ6CtE9ttPjoS3nKwRZz+wdTZfyoP3EwtHdCUaGaH+UrF+dk
Vsx6sdeP+hQXd84sNTG+4Ud5y8XREB3m2Zd+1K+4UC4oGn0j1o/yl4vwgt8r
Xcr8qG9xsaJBdRPrux/lMReqRv4LZk55T/2LiyFFDJGtxnvKZy4qk8sv/O/I
e+pjXFz8tC7K3ew95TUXjjv14ra/e0/9jAv9IuOrYzLfU35zcf7ZCK6o8T31
NS5mM6/W8EZ8oDznYilvimX13A/U37gwnP5f+o/tHyjfedBZ2PJk4aUP1Od4
uO7VUXX72QfKex7MlvQGlYd/oH7Hg4ff/c+7OB8o/3nIrPsdWPP1A/U9HoSl
35kPJ/mTBzxcudepvVbDn/ofD6t6T8yROupPPvCw7UTtni/m/tQHeXjd1Zn/
0cefvOChu2q65Yhcf+qHPJgaDzVZ3OZPfvDwa8RC36tSAdQXeVj6ecXP7CUB
5AkPNR5xt9X2BVB/5OHhjV0yMbcDyBc+lETuWTvdAqhP8rH8zBbL/tQA8oYP
/WvdOhmCAOqXfIw12yj3ViKQ/OGjeFRH+VOVQOqbfNg6udk/1w0kj/jwtxu2
MNw4kPonH9yrFWGCV4HkEx8Z4TzpBUmB1Ef5GJcctdG2LpC84qPv+9JNv4YF
UT/lwzB3/BibeUHkFx+HzeSfz9kZRH2Vj0MXR7GrrgeRZ3x8KI3OeP8qiPpr
Ge4IGw1tkoLItzIElZx9db8+iPpsGZyDJ1y2HRFM3pWh2yqlLFAlmPptGd7p
ry9p2BVM/pXh9jBjnUU3g6nvlkHv1Kptjq7B5GEZnqlfS5JMD6b+W4YVC4Z4
vhAF49/jyTK4l7LaV44OoT5cBmO/QteuJSH0/LQMJ6TqfJP2h1A/LoPMnh9D
Pe6FkJ9l+OQlHfrSO4T6chmmjZ3o6Z0XQp6WQfHZiBJGVwj153LUfKla2S8b
Sr6Ww/3Hq5JtGqHUp8thtlTdOfBEKHlbjpyxjNtKj0OpX5fjsFDzbkhoKPlb
jh+VSQ66vFDq2+XI/rE+enh/KHlcjjMzqupKZoZR/y5HjITP6PDtYeRzOZga
wUv8roVRHxd/PnvstjCXMPK6HKd/Nu0oTg2jfl6OwCI9taFNYeR3OT6aXvu2
Qyqc+no5VsSfee6/PJw8r0DZ8EN/phwOJ88rYB91a7m3RTh5XoF1QtGC9UHh
5HkFPlmU1Xaxw8nzCnhp398S3RdOnldgwnHr0NzxEeR5hThnasakKUeQ5xUo
4J5ISl8dQZ5XoNg2IrZwZwR5XoFAm0s/BSciyPMKqA1bbj3sVgR5XgHd54F7
Fz2JIM8rYL7kxnEjjwjyvAI6y1cGeEdGkOcVSD/ootKRE0GeVyAhbkPDhqoI
8rwSb5nl+e7dEeR5JZ6fl2oYMTySPK/E1ALbWXcmRZLnlbhu8dP+i2okeV6J
Pxbjp5lqRpLnlfg45V7R6P2R5HklrD51uL2/EEmei79vnLyV9oNI8rwSk/ih
Vn3PI8nzSlz8fd41yj+SPBcf3+NP2q2USPK8EsFz5n3WYkeS55VYfcR9iUJz
JHleiZKTU272/4wkzytxKOxQSvO4KPK8EvNlFCVqlKPI8ypsj5ilU70mijyv
gtRIlaeiXVHkeRUut3/O/H4qijyvgseDTZ0TTaLI8yqYa9ZLrnOIIs+rxOvK
fuwV3yjyvArhDeOHBCREkedVWG64qqKzOIqeb1QhYVnui7XCKLr/qcIV26dL
Xv6IouevVfibuzfgm3Q0eV6FGSFtP41mR5PnVajbMkO5cnU0eV6FTZ8ZSoa7
osnzKmQfC+xqPBVNnlcj8LHP49sm0eR5NXzjLTtkHaPJ82osezxLPtkvmjyv
xoqa/SMuJ0WT59XY1dYbNZcVTZ5X48aiGsWOpmjyvBoGN4SbE/ujyfNqDGW3
zHSWiSHPqzHVPzfqv3kx5Hk1gryOfT26PoY8Fx8/ylG4d18MeV6NX1PWmu25
EEOeV0Pr2KY0Q/MY8rwaQl1730uvYsjzahz7+1PlcXAMeV4NbdatXSGZMeR5
DdpOi6Sry2PI8xok+i85I9sdQ57XIDN/4579I2LJ8xpsXi9Z6qUQS57XQDH9
QnXv0ljyvAZbdh66ob8tljyvwam5eS9SjsaS5zVQ4XitWXwzljyvwR/5ypOB
drHkeQ2O/jEatdg7ljwXv+cuW5QSH0ue12DHrA0F+0piyfMa9Mbfq/0qiiXP
a3DYW3jqXX8seV4DBdVrh/ZNiCPPa/CxYXLaeJU48rwWa57VPC1HHHleC+vV
8Rn+B+LI81r8mO9v+OhKHHleizZB8L7TVnHkeS20Z+cG672NI89rsa3t+7Gt
UXHkeS2SL22+uIUZR57XwmV6RIFuQxx5XgvXEE2z49/jyPNaRA35/cB0bDx5
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
qckkz1two23oqlF6TPK8BQeKT7t6H2eS5y1Q91C7sP4akzxvgc3Ba341D5jk
eQs2nJqjbe7AJM9bEOZ42HCOJ5M8bxHnrgK7JJRJnrdA2/lCxL1UJnneAl/p
fd9Ui5nkeQvqftR719cwyfMWVKkoRLl0MsnzFnysGzN3zy8med6Cd6npv8ZK
FZDnLfDjaK5kTS0gz1vwxtmt5KVqAXnegg5eRd6RtQXkeQs8a/+nNF+ngDwX
X8++FWXfDhWQ5y1w2HSpLf9iAXneAsdZSQaepgXkeQtUCxbPvmNXQJ63YJVp
+bZ9bgXkeQsWVGTlLAsqIM9b8LP771u5pALyvAUTlngy+5kF5Ln48yuhuk2V
BeR5C/Sa18/jtBWQ5y1wUj+xP6uvgDxvwdizc8pjRxWS5614WuUZHDKlkDxv
xUGjOvYHlULyvBU/Fn/b7remkDxvxbSyH+Pe7ygkz1txeE/fnEDDQvK8FXP/
jLaLuFBInrfCyWPj2mSTQvK8FUv0I1cznxSS5634HHj1UZVrIXneiqF2DhN7
AgvJ81ZYac39JJlUSJ63ws5KR35WQSF53or6UxMtNasKyfNWNB14vcqovZA8
b8WpVR1LHv8sJM9bYbZ+3tXw0UXkufj8R536WKVQRJ63YqNrXOwo1SLyvBUL
d2mkrl1bRJ63orhdUtJYp4g8b4Xhi5WOgYeLyPNWnCmuP9h0qYg8b0WW+Yzj
yveLyPNWGH0e63fWvog8b4VkSf6cEPci8rwVWtPOC7+GFJHnrdi5bWSNZmoR
ed6Ksik5Y52Ki8hz8fWnJZk21haR563wzZSYsbq7iDxvxTZpxk+nP0XkeSt6
O8dJd40tJs/bYDJm9P6dM4rJ8zbgRik7bEkxed6GeQ4PLCZqFpPnbdg/Z9VZ
M71i8rwNsifl7redKCbP2xCYv5ZhYFxMnrdhlxZTo/BRMXnehpIJdQLN58Xk
eRue17rFJ/oUk+dtuOanlLwyupg8b4N1nlNHDKOYPG/DCAnp7eq8YvK8Daom
8aUpomLyvA2fPaIebektJs/boKQz8yhbooQ8b0NX7NyTJ+RLyPM2jDVutv88
t4Q8F3//Zav6x+ol5HkbJvcqGyhtLyHP2yAV29mbbFBCnouPHz0k4dCFEvK8
DQ17bTx+mZSQ5204pO/73tuuhDxvwy+uWemOtyXkeRustNcp9AaXkOdtYNtL
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
/qPKyPOPWHRok9p42TL8H0dPTxQ=
          "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 
           NCache[
            Rational[2, 3], 0.6666666666666666]]], 
         LineBox[CompressedData["
1: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
thw3NiLPOyG76bNixyEj8rwTv4wfI2CNEXneiaCRKU8PTzAizztxK+rH7aWt
F8jzTqhXWgtOTbtAnneiKsxs9ZQbF8jzTmzXb8oUtL5AnnPmxyT+236lC+Q5
Z3wahYWe2y6Q5534dHmbdAPfBfK8E5edizQOsA3J806IDwSvyftgSJ534n6y
wR2NOEPyvBOtF+RKeTwNyfNO6K8QTCnUNiTPOzEzvFw3GobkeScCJqhXhSw1
JM87cfFYLF/ELwPynHP99v/mP6k3IM87EZy1caghyYA874Sqr+x9oasG5DkT
W7VKdtlbGpDnTPzHm/yIddKAPGcimsmebCZiQJ4zsaZe+RjfLAPynIm5F5u9
3g/ok+dMpLy+/MqnWJ88Z6L5wpdmvSf65DkTCqWnpqoF6JPnTJTmuOzUNdIn
z5kIy1C55HlYnzxnQq8sMzFlnT55zsTwjcd8U3n0yXMmZqn/dLnQrUeeM9HX
GzmzI0+PPGfC7LV2pmmcHnnOxJlcuf/me+uR50yEp6y/U6anR54zYVU6WHXv
gB55zgRvnZO03xo98pwJSZnkLu/JeuQ5Z/4EPIr+Y+qS50yYf838mpOrS54z
sX/5aaPJcbrkOWc+Lq7bpOGtS54zcfvo/H0F+rrkORNq5VzPjh7UJc+ZeBJb
ZNMlrEueMzGNTy3mKo8uec7E5n6/nZq958lzJo7kSIjuLTxPnjMh++zkvc2P
z5PnXRg6/9hTLPA8ed4FI/G1HacunSfPuyC9Lvpd8PHz5HkXHqb+Wda09Tx5
3oWR1Qt4pGefJ8+74CtS5JwyrEOed+HEsZ8+8lU65HkXpng4r/v8Woc878IO
x516Cdd0yPMuZLr9kvG20yHPu8B2eJJnpq5Dnnchf3jVFwtJHfK8CzL8kpWB
QjrkeRfuXa3QS+PWIc+74DHyLmFCpza9D+KMR6Qp9VyeNj0vdkHl20S/yofa
5HkX1obPXHY2QJs878KbgVqXf5e0yfMuJNzcmZikoE2edyG3gCvdW1SbPOeM
X352tLGANnnehearUgYXfmiR513gzz4326lJizzn3H+A/P0H77XI8y4oHasT
7o3WIs+70Dm9KWqftxZ53gWuC5t4Ey5okeddePzito3YMS3yvAsLSqcyq7Zp
keddKFOROOM3T4s878aEr8tfxn86R553I0T0RYVJ8jnyvBuPdIuX6rieI8+7
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
eQ==
          "]]}}}, {{}, {}}}}, {
    PlotRange -> {{0, 1.}, {0, 0.4}}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.1110528711750081}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmw\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dmm\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Dww\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.837775426835586*^9, 3.837775435061921*^9}},
 CellLabel->
  "Out[1054]=",ExpressionUUID->"7f8f73be-8491-45dc-b4b6-a56ac99ddbb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Following k values (manipulation effect in double infection)", \
"Subsection",
 CellChangeTimes->{{3.83776886488772*^9, 
  3.8377688921889553`*^9}},ExpressionUUID->"0cbea6df-5f62-411d-ba57-\
14d96fa5f8df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"park", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "0.5"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"m", "->", " ", "0.01"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.837768711613483*^9, 3.837768726297327*^9}},
 CellLabel->
  "In[850]:=",ExpressionUUID->"709ec30d-9dbf-4b90-af89-5db234532189"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kRange", " ", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.1", ",", " ", "4", ",", " ", "0.01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"k", "->", " ", "kRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equisk", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "park", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.837768772273513*^9, 3.837768792965199*^9}, {
  3.837772058182719*^9, 3.837772087895239*^9}},
 CellLabel->
  "In[1431]:=",ExpressionUUID->"78911f5c-ff40-4523-b5da-516371c06132"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalI", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Iw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Iww", "/.", "equisk"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Imut", "/.", "equisk"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Imm", "/.", "equisk"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"totalD", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Dw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"2", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dww", "/.", "equisk"}], "]"}]}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dmw", "/.", "equisk"}], "]"}], "+", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Dm", "/.", "equisk"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"+", "2"}], 
      RowBox[{"Flatten", "[", 
       RowBox[{"Dmm", "/.", "equisk"}], "]"}]}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypejul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Iw", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Iww", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantjul", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Imut", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imm", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Imw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalI"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wtypead", " ", "=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dw", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dww", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mutantad", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Dm", "/.", "equisk"}], "]"}], " ", "+", 
      RowBox[{"2", "*", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmm", "/.", "equisk"}], "]"}]}], "+", " ", 
      RowBox[{"0.5", "*", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Dmw", "/.", "equisk"}], "]"}]}]}], ")"}], "/", "totalD"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "wtypejul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "wtypead"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Gray"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "mutantjul"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Black"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", "mutantad"}], "}"}], "]"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Gray"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", " ", 
  RowBox[{"p2", ",", " ", "p4", ",", " ", 
   RowBox[{"PlotRange", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"kRange", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.837777975179834*^9, 3.83777812455326*^9}},
 CellLabel->
  "In[1490]:=",ExpressionUUID->"f343a01c-4130-4195-8bdf-3a226c97a5a8"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
oXVFqtnfK+HRQm/c/7wUp4RHC2VMfF13RgmPFuo2XemZqoRHC62vYDIq4dFK
oesP+xYo4dFK88te+JQr4dFKPmXBHVqV8GilY9n2+TIVPFopcI9HTC8VPFrJ
9b6u30gVPN7RVuculyep4PGOmoeO6Rukgsc7utQwbdcSFTzeUeiNDbe/U8Hj
HfneeCiNUcHjHTloj488poJHG0UPveuboIJHG12YlDApUwWPNgosnzDshgoe
beSuu2z3SAWPNhrVx+NGhQoebeThenlrmwr3h4gPfr3FvYMa9YjYZ0v8xV5q
/F5E/GX8DK8RatzHIn7wz4HYT9XwEvGdc7+WzFTjfhPxjLiVA8LV8BOxa8rY
kEg17m8Rf13fc9MONTxFvLt+VMx+Ne5DEd/sfDL6jBq+Ihb9d21Ekhr9EbFX
1U0/jRreIv5kyN2Ot9TolxXn7TlpeqKGvxVf8568ulqN9wMrljuUiq00mAcr
7nrt910dNLhvrTg0ZW+TuwbzYcX3BxtDhmnwPmHFc3ss/3uCBvNixUmT91VM
0+B+tuJlg2e6z9Ngfqx4onsOrdLg/cOKS727zdikwTxZ8aqps2b8pIGHmJ9L
fuGjGniI2S6/ole8Bh5i/rNlZ/VVDeZNzP4bVyXpNfAQs6ZX1sI7GsyfmM/u
2W/zTAMPMef3Ex+p1mAexezZt6+bSAsPMSf/1ClWpsV8inlv/5La/2jhIeYB
p674DdLCQ8xP58bFfayFh5g3Hj1imqKFh4RPrXhSHaSFh4RnJWyXLtJiniW8
xTGua6QWHhIOse/TZZsWHhKua5hhs08LDwnHvh32/LgWHhIe4fiv/IIWHhJ2
qJqzJU0LDwk/9Mv11mvhIeGfYz4vvKWFh4SX1JdEFWnhIeEr8UmSCi08rNnx
gGFHsxYe1py7ZXSdvQ4e1hwt/nBOFx08rDnk4ObEPjp4WPOqbZveDNfBw5q5
xMt7gg4e1jxUcXDB5zp4WHNqwb0dc3TwsOYXxdaHF+vgYc3ZC4acitTBw5rl
Fxcf2aqDhzVrm1XRe3TwsGbn+bOWHNXBw4bd1YPHntPBw4ZDX4RbJevgYcN+
kXaZSh08bLj44eAVOTp42PAHO0qcCnTwED7fP+n3Eh08bLiu19yBNTp42LCm
25jz73TwsOHmKTUfOunhYcOFgUc3f6iHhw1v1k6420cPD2G/zbUew/XwsOU9
47PDx+nhYcuhF28dnqqHhy1/OrWnerYeHra8qFrxKEwPD1u+sFRTtUoPD1tu
9R/3Zr0eHrZ8wm1czU49PGw5YuytJ3F6eNjypDKZ4YQeHrbc9XPxb/F6eNjy
2kWZq1L08LDlX92mDVPp4WHLeWN0z6/r4WHH/ywZ8Wu+Hh5CHvmHzzM9POz4
tXTw9Qo9POx4/tR7wW/18LDjXDd5vo0BHnb8/e/3p3U0wMOOz+dPT/+PAR52
fPp0n+79DfCw41HapRHeBnjY8d2XAzInGOBhx4/Or2/1M8DDjm+tCfcJMsDD
nk+crA8LM8DDnk1r+YeVBnjYs+aDmcejDPCwZ+e9oy5sN8DDnn+63XxxjwEe
9nxGeeXcYQM87Hlvx8WHzhjgYc/REX02/22Ahz2LV779Um6Ahz2/jnozQGuA
hz0/rPaquWGAhz2f9Dh6+Z4BHvbcxXvO4mcGeDjwpnGRHSoM8HDgj8bVXWk0
wMOBQ7qV+0mM8HDg2rML7zkbcR87cP+DK+Z1NcLDgSNipQW9jfBw4JyewZ8P
McLDgSvlgSkfGeHhwBsVHTtPNMLDgXtGnVgRYISHAz/uIpIHG+HhwD5ZU1vC
jPBwZFq346OVRng48tth6cvXGeHhyAtuNO7faoSHIyd8OC05xggPR16hU2f/
aoSHI2d9G15w0ggPR96VOvbxeSM8HHl3W1DhFSM8HPlAmjIvwwgPR9YM/SFT
b4SHI+89k/DbTSM8HNlqvO/GAiM8HLmy85yAZ0Z4OLFkaI3rayM8nFi0oUd+
gxEeTlxwuzhWZIKHE790CGRHEzyc2OVOZGknEzyc+MG96T/2MMHDiRMvVrt7
meDhxKX/LL403AQPJ/4gPXX0WBM8nLhBVZ46yQQPJ84Z/cGQaSZ4OPHiYO8T
wSZ4SDnAf64kzAQPKRcN2he+3AQPKcdICtMjTfCQcrYpwGGzCR5Sjgp/OSPa
BA8p55zLittngoeU94bcNh02wUPKo0ePbDptgoeUZYXFHn+Z4CHl2U/rJiab
4CHlwNyVoZkmeEj5qGvgar0JHlIW9UxZn2uChzM/GH9kU74JHs7cOdP+uyIT
PJzZP0+2suy9hzPXnUn+sua9hzNvnSYa3/zew5mX3m/tbm2GhzPPm5xaLTXD
w5kXbBqmdjXDw5lLvloX09MMD2d+mhzr72WGhzO/m7LbergZHs58PntR2hgz
PGTs9WT4wk/N8JDxzd51dv5meMjYqVvan7PM8JDxZtoxLsQMDxl3tf46Z6EZ
HjL2M84KWmWGh4zfPViW/60ZHjLO3R0/a4sZHjJ2kXQ3RpvhIeO69XqffWZ4
yPgPu+Tjh8zwkPFs1cvmU2Z4yDj8/LdB583wcOHVKXPiL5nh4cJRt07VpZnh
4cKvHk8fqzLDw4VzEiM2mMzwcOFMa2lSnhkeLtz9eP/ie+89XLi3e67Lk/ce
Ltw0wnpU2XsPYb1ltwKr33u48IsAXtX03sOFTSFB31tlw8OFR9t1+8khGx4d
eEHq/tiOQv4fDeEp8A==
       "]]}}, {{}, {}}}, {{}, {{}, {}, 
     {GrayLevel[0.5], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.989537404892142},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8377781251080713`*^9},
 CellLabel->
  "Out[1500]=",ExpressionUUID->"68cae015-12d5-41c5-83ef-09f377136726"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", " ", "DotDashed"}], "}"}]}],
      ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Pink", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.006"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Equilibrium\>\"", ",", " ", "\"\< \>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k (Manipulation effect in double infection)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \!\(\*SubscriptBox[\
\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.83776893725033*^9, 3.837768962611496*^9}, {
  3.83776900833016*^9, 3.837769035938229*^9}, {3.837769080783229*^9, 
  3.8377690818187733`*^9}, {3.837770887047475*^9, 3.837770934722591*^9}, {
  3.837770971218129*^9, 3.837771035822947*^9}, {3.837771132853368*^9, 
  3.837771140443961*^9}, {3.83777204981313*^9, 3.83777242981525*^9}, {
  3.837772496269198*^9, 3.8377726989757347`*^9}, {3.837772750673204*^9, 
  3.8377727996074133`*^9}, {3.8377741516412888`*^9, 3.8377742421657057`*^9}, {
  3.837774285622204*^9, 3.837774319699443*^9}},
 CellLabel->
  "In[956]:=",ExpressionUUID->"579812bd-d514-4b12-b1b4-20d76e2a9d45"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
D3NcGWv/SZklIw9zbBpYb/bbOxl5mGOEe1ggL0VGHuaYujZIcjZRRh7m6LBw
pcIhTkYe5rjNrjI746GMPESY5P2i7rc7MvIQ4aLLGyZ1vCEjDxGKRj5IiL0s
Iw8RWu7vM+vXczLyEOH2JVvE4hMy8hBhc9aCgmeHZOQhwmnj9mjWh8jIQ4Q+
Y8+WDdgtIw8ROsXO7qndKiMPERbqNi68tFFGHiIssrn9aEGAjDxE+Kzrw+69
VsjIQ4Qrr0wNz13MPCzQN2dsl7vzmIcFfmkZe23LTOZhgXtPdfjJfRrzsMCh
LgdkVpOYhwXGZPjvKEbmYYHdJwbZJjszDwvMf3H49eVRzMMCDx9du2qHPfOw
wPQuZYKFg5iHBfoovkZgH+ZhgZdDBg0f2JN5WKBjVtg/HSyZhxg9ThQMaZIw
DzHKH1qfLDZjHmIsGWJaqDZiHmL8JDgwLLtJSh5i5JbsXpBeIyUPMQp9Pmx4
UyYlDzGGdfZfm1IkJQ8xHk7t7/U6T0oeYuxxu7bjW42UPMTYJ/9ddKZMSh5i
/Bp9ZLT8o5Q8xJgywf5EfoaUPMT4KDYiteqNlDwkqB/x+bMgSUoeEryR+uZJ
z6dS8pDg+d0BG0c9lpKHBIs8Exs8/5aShwSP9IifFRAlJQ8JTnw8f/vh61Ly
kKCp7OpvDy5LyUOCwv4nB386JyUPCc7uPfxe0wkpeUjw2Mgd1YOOSMlDgpdu
7TWas19KHhJ8eM3jw/69UvLogJohyiUJ26Xc/wF/qr/O
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.006}}, ImagePadding -> 30, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.004516831331620262}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.004516831331620262, 0.004686038870263894}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
j63J5KGKeVqevoWy+P9fW7W5
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0.5]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.5}}, ImagePadding -> 30, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Equilibrium\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox[
         "\"k (Manipulation effect in double infection)\"", TraditionalForm], 
         
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.44716630183038397`}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.44716630183038397`, 0.46391784815612613`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Iww\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.837772423470598*^9, 3.837772430329239*^9}, {
   3.837772485570197*^9, 3.837772573355785*^9}, {3.8377726080380096`*^9, 
   3.837772647173297*^9}, {3.837772677843814*^9, 3.837772699488367*^9}, {
   3.837772755086464*^9, 3.8377728002224007`*^9}, {3.837774226285475*^9, 
   3.837774259875527*^9}, {3.8377743141447287`*^9, 3.8377743203934383`*^9}, 
   3.837775167255265*^9},
 CellLabel->
  "Out[964]=",ExpressionUUID->"88a8e1a8-c6c5-43ce-bbe9-3dc515230dc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Cyan", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", "DotDashed"}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Dashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equisk"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Darker", "[", "Cyan", "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.005"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.2"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Equilibrium\>\"", ",", " ", "\"\< \>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<m (mutant fraction in environment)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \!\(\*SubscriptBox[\
\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8377692110979967`*^9, 3.837769241442397*^9}, {
   3.8377710481290092`*^9, 3.837771107360968*^9}, {3.837771160323226*^9, 
   3.837771160617385*^9}, {3.837772826882622*^9, 3.837772886051868*^9}, 
   3.837775071569687*^9, {3.837775195102354*^9, 3.837775223725595*^9}},
 CellLabel->
  "In[974]:=",ExpressionUUID->"e923b654-c68e-4dd1-b80a-be53db7ca3df"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
LrAgD1XsZ58atMWCPNSwe1X7yaItDPwPU2jjvQ==
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
yOc=
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
Q+cfIo/P0H3LjC2+v2u5/wHMPnqh
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.005}}, ImagePadding -> 50, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}], 
         RGBColor[0, 0, 1]}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.001056665212810604}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.001056665212810604, 0.0011377960614396769`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 1]], 
          LineBox[CompressedData["
1:eJw11nlczPkbAPCZrpmmmnFFtEXOUI5aii3PszmSI0pFhdY6IouwkStS7hT9
UFKuLmxZdtltru8MsbkissrdQbqk1HSXX81+ns8/85rXd17PfJ7n/Xyfz8fq
5w2eK3V4PN4BPo/X/ZlwuntJQTC0LF29VQojF8fc1lgroFIQ/zZvjxSklvuq
PLI4GDx+nXXhISmkBDuLCpLVMEIz8+SLWClUe2R1/eIWLHZqHPfojBS+t+9e
2fCdfIRQmiKFHX2uuhZvvwNTR4WOSMqUQrbGuusf7kJbWNCZ0L+k0BWsK2IO
6A4OCp6tkoJndziPe+A1/OEfpvek8N/+7oP97gfrC/KkULK9O+ADuD4h+tqx
l7TfR3AyaVjkjyVS2Ni9veBcuHHokKaikvb/GLjdiT0O10uBp115EFQ1qtiq
nfLJA3ePqk3X9WQws7j7D57Cqz1hTx1NZCy/p9Drnw3CLFMZHLvdncAziB8w
YchYSxnLNx+8fcbanh0uA206BfmwJODKeP2xMpb/c8j2ffvDCgcZDOzejuW/
4Pei0kcOMtCGu/0vRPKLj4pmymCVdr0AyVNplcd8GatPAbSO999xfJEMuqP1
uVoA4RPiXO//JGP1KoTfnW38W1bLoLE7nKYQUkfeVVttlLH6vYSZ4S17XbbJ
YIo24CuIPD83wz9cxur5CsxL7FzXHZLB/u7t7XsNggeCpVuPy2CUtr5vYM1Y
s7Ztp2Xw+FH3egOiVUnWIRdkoC1f8FtYFsjVrr4sA226fd6Bb1vMEu/rMtBu
L+sdLCvqs22yVAbacIvfw4p657lmt2TMowiGLKwsrblH+RSBw5lPM7g8GfMp
ggsldbv3F1J+RWAjuhHvWkRexWD8OCeBX075FsO2Lzdjbnwhv2LI9G3c81MT
5V8CJ2bUbtX/JgPtdmJKYMTy1l3JBnL4L1wJLKn3S5wsloOW174U/ta4vnlg
Kgct375SuDDj0wwvCznzLoXe2e4fXwyVs378AF5rI9WeNnLm/wHM9oUV59jL
IVdbvw/gpBziMfEHOeuHj7DTbbbZWRc569+PsMpQCd/c5Kw/PoJv+vg8Xw85
q28ZdGZ5PstcJGf9Uga/vpe5twXIWb3LwO6TZq5LoJz1zyc4+WlP4d71clb/
TzDq5weNihA566dPcHiZ3fXanXLmUQ7m8aIelpFy5lEODmGnzKcfkTOPclgX
bPRmZayceZRD79xjvntOy5lHBeT1xMQT5+XMowJUzUMzLqbLQVu+qgpYcNL5
+JWrctCm61wJpcHbF2TclDOPSuidzrWmK8ijEv7lF0UnZZNHFYw2Te939AF5
VMF5vyeJW56SRxUkzxEM9yskj2pYHV4rc3hPHtWQdHfgckkZeVRDx0SL4cXV
5PEZfJeuMMqsJ4/PIHdbMWBzq5zNr89Qn7rbz56vYB41YFdonP9ZoGAeNSDp
53PkoljBPGrgVsTpwx6mCubxBTJdDAtbzRXM4wto/vdw+9nBCubxBW5VtW5z
GqlgHrXgJkp783ysguVTC6m98y4HTlQwn1rwTw8ub3BSsPxqobBp87mdUxXM
qxaCi2X/dropWL61sI5vHrtjvoL51ULWo6Wvv/ooWP514JE2PWvFEgXzrIPf
NBFjny5XsHrUgdQp29UxSMF86yDX9qIgIVjB6lMHM2/dCGncomDvXx1IZkfG
z92lAFNtgl/hRUzMlnMRCvY+foXxr2b1rT6kgEBt/b5CsGRQmP0xBZu3X8Hz
zvobIacUbJ5/hUMeUao/EhVsfn0FQXl2auVFBRhp61sPfVJ91llcVrD5XA8u
aTu+m/27ApZo610P9hY/STffVLB5Vw+jlo+YFSdXwO/a+tfDSuOq5zdvKaBQ
20/1XfNMFvAkRwF8rUcDqDcn1ZbmkkcDhNnGHK3PJ48GGBcY4dT5kjwaoKZ5
ua5eEXk0wKJVPcv1ysijAXrX/VzLqyaPBjh1Zfjg5jry0MDY/VYRlU3koYH4
IEn/wg7y0ED01OQKta6SeWhgSu8DrSldM+Q/Dw0s113sESlRMg8NbNsiq19q
qmQejRBrZvfpe3Ml82iEwbVu4w2slMyjEY6v31PwbLiSeTRC/p7Z7xNslMyj
EU6dM3NfaqdkHo1w8P2ckRaOSubRBPP507cUOCuZRxNEhHtPPjpVyTy6nl96
sH2Km5J5NMGY0+VOVe5K5tEEc36u2vc/LyXzaIJqI4G/g5+SeTRDdHrgrRcB
SubRDL0CxnMbVyqZRzPERuzxEa5VMo9mmJm4JiYhWMk8msEipGWd9RYl82iG
pbYTmq7vUDKPZqifPmCcQ7iSebTAq9/PWmTtVzKPFnB6de3O91FK5tECu9UO
ozKPk0cLDGzutcAqjjxaIJkbMO14Inl0PRcM0um4QB6t8OlA9fEV6eTRCi05
Ls05GeTRCmjzbtKIP8ijFT7obfbf+zd5tIJPwtVlLxXk0QoLJjt42NwmjzZ4
MC1jzI4c8miDg45pnXcfkUcbiNV/3TV+Rh5t8EG5+uC8AvJoAzdfnB39hjza
YIFI3ut+MXm0d82PeaXfypTs/tAOhWvX37KrJo92eCgOv76sjjzaYf6dyr+j
GsmjHVLchS//bCOPdsgWjutfwOOYRzuYfb2+s1GfYx4dwJMVCHoZccyjAxwe
fuBG9uCYRweMXNg3zdmUYx4dMHlZ8q25Azjm0QGv7ytM/QZyzKMDUn2Ppv08
lGMenTD30aTQwJEc8+iEja+LoleP4ZhHJwS7nalZac8xj06wrN5xJsCRYx6d
MO3vmNPezhzz6ASXnLfVri4c8/gGC9cGnp7oyjGPbzBwnHWy1RyOeXyDzApT
saEHxzy+QZ5y0Ltqb455fAPTMfb9cv045vENyqzslJcDOHZ+8HBqbXv+3hWU
Dw8Va9YFLFrDsfeFh/YlC5ePWs+x85iHGyYfKW3exDEvHt6ryCvN3sqx842H
mYLPgUd2csyPhzreZzfPC+fY+c3D6OlnRT32c8yTh5MML4zLPcyx85CHs056
V+yP4ZgvD/dnrnR0PkH14aHD5xCr2njy7vqeN+zSuSSqFx9z5ZK82RfJn48J
gvuJDWkcux/wcaJBSc+E36gf+CgUl9k5XePYecvHD+H+uq9vUH/wMeJl9v4t
Uo7dJ/hofuWMWsxRv/DxxlW/G8m3OXY+8zEub/PKCTnUP3yMGutdkP2QY/cP
PpqNWm0yL4/6iY/nV/Y0KnhOHjoY/eJavv9L8tDBGfcuBL19Sx46OOTj5Hz/
Euo3HVwz5XGPgjLy0EEjr8vD51VR/+ngtu9Mze58IQ8d9DX2KZ/QQP2og2Ms
MxJSmslDB8tfetr16KD+1MHNi8P/COWrmIcO2gcEWb7TVzEPHQwCp20oUjEP
HYzVt/rnnFjFPHQx45cpwvZeKuahiyEVN128+6lYP3c9v54S+pu5inno4rDs
IZmdA1XMQxf/qXQtdR+qYh66mPXQyjLRWsU8dHFGmfKnMhsV89DFzLNDr9qO
VzEPXbSb5me4aYKKeeiiul9AyJ+TVMxDF697jtXUOauYhy5G2WYfsXVRMQ89
vFgmdlo1Q8U89DDjno5h4iwV89DD+eOPaB67q5iHHibHHdP75qliHnqYENvk
aLNQxTz0cNP78yd9/FXMQw9bA9dYhAWomIce1s8clX9xuYp56OGcwizpnUAV
89BD+K0sv3QteehhXGL4UF4weeih9NmCq/1/JQ89zLo75NdxoeShj97Tb4RO
20ke+tgWdofz3kMe+pip28NtRSR56GNprvuA4IPkoY/+rhMmbIsiD32sc/81
cfcx8tBHzylSz4gT5NEV70umX2Q8eejj6uzmv/Ymkoc+ZqU6BYWdJw99HNun
/9atKeShj/OGjCpad4k8DLAjQnhpWQZ5GGD7QbenntfIwwDn2+xe+uMN8jDA
pD6OnrZZ5GGAhxO+Xe2rIA8DbMpdsrVDRR4GOGVHQWZxNnkY4KZxNV7ZOeRh
gIkugzZcfEgeBnjlWXln2BPyMEDVM5WBbz55GOBgowGHxhWQhwG6D1xzUP81
eQiwItZcUPiOPASY9ThRcKmEPAQYPcw7KqSMPAQ47OXlOKwkDwF+tuwYbVhD
HgJsGXp19pM68hDg8b79W2I15CHAoVZxE71ayEOAj0PDDHp3kIcA/zfm+M1A
npp5CLA4es2f03TUzEOAGyRfdg3SUzMPIWpqZvRt01czDyGatJ3Y9VygZh5C
XBPbdiPDUM08hNg3/YwywkjNPIR4TX0i3tdEzTyEmNCp5zpGomYeQrQeYPiA
31PNPIR4d7Vi8PNeauYhxNHvHD1T+6iZhxA3i+N8Q/qqmYcQp46rmTTNTM08
hJg7xKuh5wA18xDiiGVvD70zVzMPQzQ3S2q7bKFmHoY4xzJ11q8D1czDEN0b
9UOdrdTMwxBTnj6O1B+iZuexId6ONdn0aKiaeRhi/yePMXa4mnkYovCpxVcf
azXzMMT3p/UODBilZh6GmFd6hPd2tJp5GOK7IfKAs7bkYYgFR+JTl44lD0Oc
YDwy32I8eYhQ4BNc8dqOPET45k1wRfz35CHClMLRz70mkocIw1wvXJE4kocI
L315su7+JPIQ4dRlNy33/kAeIvyheS43yZk8RKj77sTc2inkIcJfjCJzU5E8
RLhxVh/wcyEPETY7OCebTCMPEZ6ermlVTScPES6Wj3fd6EoeRrhDWnbQyo08
jLDnZMGtvFnkYYQlvfbVhs0hDyPUaZpvZuNOHkYYEeo3qXAeeRjhJNExrwgP
8jDC6fz3QbYLyMMIC07Z73rhRR5GmFMRGhXmQx5GiLzTp4ctIg8jnH1/Z+pD
X/IwwihL4+vB/uRhjLK7tso+S8jDGOdtynnw91LyMEaTHOUr35/IwxhPLWz4
3LqMPIyx+fJc/TPLycMY0fE3q8krycMY6zd+nlq4ijyMMU1Z/0vIavIwxi3b
E5N6BpGHMcbw777IWEsexngp3a2/6zryMMYwTn9V0XryMMb5p/KVocHkYYI+
u6OsemwiDxMc91AYm7aZPExw+eOBPZxCyMME/ypOT8zbQh4meG35FscVoeRh
gh3SgA+N28jDBB94Olw4uIM8TNAl7cmG/rvIwwTfObTOvxxGHiZ4P+7AdMc9
5GGC01a4uv8TTh4m2D5L+MuCCPIQ42pR/Ln3keQhxkGbsyuC9pOHGK3X+MzW
HCAPMXp9NL8bdog8xBjV+Hah4Ah5iNEie6VeTBR5iFFweMdD02jyEOOPKWWZ
Z2LIQ4zi/esyBh0nDzHaqv/NSYklDzF+z//Asz5BHmLk+i5edOUkeYjxzxre
k9Fx5CHBA/EnVmbEk4cEN8wo/M4mgTwkmOgepem6sjIPCa63Ca61TiIPCf4Z
7iJOO0seEszrd2ve4PPkIUFN0aWbSRfIQ4KuLTfRLJk8JNjvUnLd8RTykKDO
Mpv7ojTykOCgu4b39qaThwStUxpqWi6RRw+M60iZEnxFDf8H3GxwIw==
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1: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
kUWriDw0IDV0cEtkiclDA7i/ZqqThZg8NNB3RaPReWsxeWhAbnvt6DBnMXlo
oPpgYpZgopg8NDBsl3MRw1tMHh2waHxaSsDvYvLogLKRd/zSV4nJowMCf4gq
6b9ZTB4dMFkvHAJ3i8mjA3DSl4iLR8Xk0QGbgiZcrBWKyaMTRPuUD4afEtP7
QycMygvJ8k0Rk0cnHOzXmH0gTUwenTBz7uqs08/F5NEJUV87sx4UismjE4S5
7XlFlWLy6IR3HkeqqxrF5PEdAt8X9mnoFpPHd0h7Yzm3kSshj+8QmrX8TO1A
CXl8B8bzfNtSBwl5fIclgdKMF64S8vgOyVfuxVxFCXl0wU9TlxyPmyMhjy5I
9Nh2d/1SCXn0fD9v6MhJQRLy6ALr64vzDbZKyKMLAj3snjzdLyGPLoj12c2M
ipaQRzf8ovE75iGVkEc36OX+s7butIQ8uqFr+G6Z8JqEPLrh5Fv+6In3JeTR
Db8fq7LNeyEhj24Yt23Jng1FEjo/GHiW92jat0pdPwx0Omy4J6JRQs8LA9k3
G0ayuiV0HjPw3bQ/fPZypOTFwI0co47GAVI63xg48fJjh1X2UvJj4DTRsreZ
Y6V0fjNQ0hE5dKSHlDwZOLCE2XhoppTOQwbq/RC1vGiRlHwZ+HDh0wDH1VLK
h4Gh/XZyNwdLyZuBRx78uiQ5TEp5MTE68eG8msNS8mdiSuHFZpsEKb0fMHF5
mHD2XJWU5oGJDQeH+G2/IKXzlom/l+c5iv+R0nz01Nu26Pq1B1J6n2BioNVI
w6cvpTQvTNTEvrctfCul85mJAf9845R9ktL8MHHCsq7MD01Sev9g4ugFG5eX
dktpnph4bce/WfkcGXno4a5bgdZPBsjIQw+/9Sn2SRkmIw89HHiCFypwkdG8
6eH5eTV7/5okIw89bJH+vmeWt4zmTw8nP3cJHeojIw89XOr/btXnFTKaRz38
pSN1/pUNMvLQwykbrTw3b5fRfOoh6+wsD6cDMvLQQ2HRBc/iaBl56OHIZRFL
j0tk5KGHYWlWh12TZOTBQnh5/llesow8WHhdeMg59I6M5pmF5v4lV9iZMvJg
Yc2N5j8kOTLyYOGprZpR9iUy8mAh87bd6HPVMvJg4YY22coRrTLyYGHAF96z
RKacPFiof3vE5n6mcvJg4ZLMwwsP/iAnDxae+/RsZ80wOXmw0HK6xcc5LnLy
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
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.2}}, ImagePadding -> 50, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Equilibrium\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox["\"m (mutant fraction in environment)\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.0977769824261232}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.0977769824261232, 0.13020136889279563`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dww\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{3.837775171863537*^9, 3.837775224280155*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"77ed0261-85de-40d4-92f6-5dbebf63fc21"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"park2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.15"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Alpha]m", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]mm", " ", "->", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]mw", " ", "->", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]m", " ", "->", " ", "4.5"}], ",", 
     RowBox[{"h", "->", " ", "0.5"}], " ", ",", " ", 
     RowBox[{"\[Sigma]m", " ", "->", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]mm", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"\[Sigma]mw", " ", "->", " ", "0.45"}], ",", " ", 
     RowBox[{"m", "->", " ", "0.01"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8377691335689573`*^9, 3.83776913672007*^9}, {
  3.837769403726194*^9, 3.837769404134521*^9}},
 CellLabel->
  "In[992]:=",ExpressionUUID->"5483aba7-7656-434e-9088-9ebfce5aff43"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{"k", "->", " ", "kRange"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equisk2", " ", "=", 
   RowBox[{"FollowEqui", "[", 
    RowBox[{"odes", ",", " ", "park2", ",", " ", "%", ",", " ", "var"}], 
    "]"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.8377691623037157`*^9, 3.837769165685417*^9}, {
   3.83776933132185*^9, 3.837769334500733*^9}, {3.837772960486788*^9, 
   3.8377729609347057`*^9}, 3.8377751558309803`*^9, 3.8377752442648497`*^9},
 CellLabel->
  "In[993]:=",ExpressionUUID->"17a45cae-5687-4f9a-aa52-c46f0a73fecb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imut", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}],
      ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Im\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Red", "]"}], ",", " ", "DotDashed"}], "}"}]}],
      ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Imm", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Imm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Iww", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Pink", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Iw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.006"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.5"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Equilibrium\>\"", ",", " ", "\"\< \>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<k (Manipulation effect in double infection)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \
9\!\(\*SubscriptBox[\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837769272427176*^9, 3.8377692789146357`*^9}, {
   3.837771183208242*^9, 3.837771202023329*^9}, 3.837772955559022*^9, {
   3.837774010235056*^9, 3.8377741330817013`*^9}, {3.837774330306913*^9, 
   3.8377743527497663`*^9}, {3.8377752454668913`*^9, 3.837775247384226*^9}},
 CellLabel->
  "In[995]:=",ExpressionUUID->"80963a3e-6c04-418a-99f2-a4442af6495b"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 0], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
OYI8hqFrvSRjV3QE83/mAaYD
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.006}}, ImagePadding -> 40, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.0021458638477593207`}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.0021458638477593207`, 
        0.0022265057846964807`}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Im\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    Rational[2, 3], 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.4444444444444444, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    FractionBox["2", "3"], ",", "0", ",", "0"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
                    Rational[2, 3], 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    Rational[2, 3], 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Imm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, GridBoxSpacings -> {\
"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw11nk81NsbB/AxY8aMGVuLbsttU0KbNrd+bj1PkSiFNimVuJZKRYuKbpsl
lUQR7QtpJ7QgKVsiuYSUvpOlLNn3ffkxzXP+mdd5zbzOnOfzfr7nfCdY71lt
y2axWKdkWKzBzyuXB0cspB8fYuaZxICm5fmkVo144OfonvNPZiB2rGe1WUwC
7Es+wr6ewkCo00L5gpC34FUWF3kvlYEas5iBXyTCsq6vVyPfMTB3zuBIhkrZ
+MS4NAbchoUvK3FNgWOrF09Kfs9AcqvGwD+kgru7YUpGOgMDiw2smAZ7A8Lv
5GQwsHpwObP3sL581duCDwz83l86nDLgjBVnMlDqOrhgBmxsC4kv+Uj7zYQR
UXLXy7IYcB7cntNHqH7JeVv5H+0/C9Zn7VSvzmaAJRnZsHn5kJyaHKonG5yH
v39b+4kBw5LBP8gBtWjLttpcqi8HXA1u7K3NY8AvabCATzA/yEKnJp/qzYVs
1Y1Lqj4zICmnIBcmlm0Pqiig+vNAN99M5+cXBsYNbmdsPtxy/jqu+CsDkuWS
8iGElbb2WyEDdpLxGby8i/Lzv1E+BeCZWx7yH8PA4GrDwgvAZ9/NN+/FlNcX
UH6XoZn4nYG2weVav8Djdo0fMUWU31c4K3e4JqKYgUWSBQuhLOOQQVgJ5VkI
8xp+Nl4tZcBrcHue3+A0+3C93w8GtCT5MnDYsR48fzKQlTk4GNjoJvPzUBkD
kvicxKBsbc/sLGdAUu6w79Cm+0VzSwUDku3FfIcEJfmPJpUMSJazLIKhnyLf
4S/yKAYTB/cRs6qonmKY/GjW2/HV5FMMqtt3JyrVUH3F0OVQNbqvhrxK4KDj
uuzqWqq3BDbP3lL0pY78SqDvUJRRaj3VXwr7WP1KkQ0MSLZzvhTqfOpnX2tk
4PdypZBXOSPaq4kBCe+cH8CtsPN3amZAwuf5A5h/MMuihbx/gI2xzY4lrdSP
P2HJJRc7rTby/wmlK8Ynq7Qz8FGS308wOs090dFO/VAGascybn3voP4tg/v7
h6ildFJ/lMH+9GP8B12Ubznsbo82O9dN/VIO/gEm/U49lHc5pK9tUlnbS/1T
AaFC3TM6fZR/BUwKT3P4o5/6qQKc1s4L7+wnj0rw0R2/qZAllnpUQus7Nac4
GbHUoxKsThbWXmaLpR6VYKT2Pe8QRyz1+AW3zqRNNpcVSz1+wbJ3M0rmcsUg
ia/6F7wb8khuCE8MknIXVsET5tPluoH5b48qMEzSDc6QE0s9qqA/wJUTxhdL
PaqhbKMac1wglnpUg7Zp+sRN8mKpRzU8ruwrmCsUSz1qQC1nXY+CSCz1qIGS
hi1+5QPz3x41wNr5MCBBQSz1qIWKm2mCS4piqUctBMxY2uCoJJaeX7UgaHtq
qKcslnrUQZBq8NCRKmKpRx1gs5dZ3cD8t0cdyM4RcJKHiKUe9aCV9EAjaKhY
6lEPfrlNSTuGiaUe9dBYsuvTwuFiqUcDaEaGmCurUj0NsN9kzJpSVfJpgEeq
W1OjR1B9DeD1pCnc4w/yaoBE/mbldSOp3gawcVSrmjSK/BqgyjHj75ZRVH8j
7GvI5yePJs9GKJ+Zvsp/DOXRCFNi1JW2/km+jTBvp9PyaWMpn0bQPzFFpnNg
/vv5a4S205lzUseJYbikwCaw2VVU6jdeLH0em+CvXUWKlhPEYC/JrwmyJ6+I
UZ8olp63TbD2/K2ihoH57/O8CRL7LD3j1MTS86sJOtV7H7hPEoNQkm8z/BjZ
u9J4slh6PjfDBqMvzsPUxbBZknczrPIWqDID89/nXTOkC4W6IVPEECHJvxmq
d64v2a4hhi+SfmqGxtB/BNqaYpCReLTArD/Co1s1yaMFtM49LI7TIo8WcJid
43dsKnm0gPeN4BS9aeTRAotyXI7ITSePFpgxtyQmYzp5tADvmrHruRnk0QqL
jaYnmswkj1ZY8qvtnIo2ebTC1KAxJZ+0yaMVPjDKry7OIo9W8I5eOmbtbPJo
hXWe07jD5pBHG5yaruOSO4c82iC289OeC3PJow0SHu5tMp1HHm2w94BHn6IO
ebTBXc7BgEwd8miD+v0xz07/RR7t4Lv1xVaD+eTRDgY54kD2AvJoh6mmV80T
FpBHO5z8tvHu4f+RRzsE15w6NleXPNrhzMFz5XW65NEBE2ryC+//TR4dEKjz
wdJ6IXl0gOPbz46jF5FHB8xz3ibMW0QeHWAVkTvfB8ijA3qtAlv1kDw64GyN
wpJuJI9OSFoQOjZqMXl0glFUwlmHJeTRCceXJJ8eq0cenWC6ccTIPD3y6IT/
asf977Q+eXTCSJfFtQuXkkcXyDQVzW5aSh5dkFm+RRhmQB5dUGc14aDFMvLo
grSW0y4iQ/LognVvugRvDMmjC37Z5c9yNiKPbqgY7VY3cTl5dMOuy8aYt5w8
ukGg/nCK5wry6IbdAc2h84zJoxvU9b1jyozJoxtmT0yzDlxJHj3w3wPFUP1V
Yun7Qw+wyuKPNK8ijx7Yumtm7W0T8uiBe47JrSam5NEDh67nX+o1JY8eYFYk
ZT80I48eUFpfFmK+mjx6Ydj0K8qya8ijF1bm6454uoY8emFuxaSYTWvJoxfq
z0c089aRRy/U+M/LiFxHHr3gv1T5b8v15NEHaZeDjXjm5NEHN4dNaY4wJ48+
qM4dusBiA3n0AXPuxWi2BXn0wRV/u6sPLcijDwrSXGNWbySPftgZbbSvayN5
9EOjs2bm7U3k0Q/68XuSDS3Jox+0K5wt6i3Jox/afnj4Bm4mj34owF5r3S10
f7DwlebMguItVA8LQx12V3tupeeFhWZ2ire0rOg+ZmGelnVrlhV5sbB7c3z1
3m10vw3Ml+1xV7UmPxb25WTGx1rT/c3CC17qwZY25MnCxRc+Du+3ofuQhRop
Q3Ru/0O+LNzsa9C5xJbyYaEvL3brT1vyZqFXeex2TzvKSwav+gSPULcnfxlc
3xOy/Z09vR/IYNZ3LSs7B+oHGTRwd+vmbqf7VgZvFP3Qvbud+kMGS/wiJ+jv
oPcJGXz2bdaT0h3ULwPfP478fnwn3c8ymH753xdjHal/ZLC6uGRuvCO9f8ig
1Q6tjRa7qJ9kUP/9HfW2XeTBxpV/XbpyYTd5sFH9psmLGXvIg409F0a6Zuyh
fmNjo9miclsn8mDjqTS5bpYz9R8btXzexFx1Jg82XiwLH6ezl/qRjSZpY7Wz
95IHG0fkmldt30f9yUYrizurOPvJg42vLQw2X9tPHmw0dT+rOu8AebBx2bxY
148HyIODc46pnrF1IQ8OBk2o0u91oX7m4AJf10cBB8mDg+GVCglTD5EHB+/x
qo4kHSIPDu5yWlu54TB5cHDNtgus+sPkwUGV95WpHq7kwUFYdm3+KDfy4GDY
vMYNEW7kwcHMG1On6B8hDw7+rXc+5MsR8pDFzuCtWY7/kocsln0ousc6Sh6y
OD1htXbAUfKQxfv8bvspx8hDFmd2jzKJO0Yesjj+ekuZ8XHykMVbT9KnFR0n
D1kcFfpNzfkEecjiqac7P7BPkocs/noVpxZwkjxkMcBBMH2yO3nI4u0hwRXP
3clDFhdnh60x8CAPLk7be8D5swd5cLHUXW+xnSd5cFHL2DS51ZM8uLjhY2G7
hxd5cPFZ6oSioafIg4sFETaH75wiDy5yk7+/0/YmDy66NmenJXiTBxeZpoNH
jE+TBxdPaKuUfT1NHlws/PpVxv4MeXDxeaFibvMZ8uDhPXHNhuNnyYOHtsZP
L4p8yIOHPNNA92Af8uChU06BxqRz5MHDK4ej3SPOkQcPOVE2Af/zJQ8efg1V
25TqSx483LVwxheT8+TBQzeNBGHhefLg4fE8hTYbP/Lgofxe86BaP/Lg4fCW
vHoXf/Lg4XLlt/39/uQhh1thdZr3BfKQQ5vXKQYqF8lDDtlnTI9evkgectjq
MGP3hADykMNJpZdUHwSQhxxqLEk6qB1IHnK47Uql/8tA8pDDfYmLbRddIg85
PLqG25RyiTzk0C5qx/wVQeQhh1N5D+bnBJGHHOosbG9aH0wefPQT+dgzweTB
R8OG65e2XSYPPj6aanO8/DJ58NE3XWXyzivkMfD9tSKP+ivkwccMYN/ad5U8
+KipGuHSfpU8+Bi9YrTA7Rp58HFpvpt53zXy4GOvE9f6xHXy4KN3WI2G7A3y
4OPKNNvHXjfIg4/f60Jr+DfJQ4AizvdfZ26ShwDXPtMPFd0iDwEqHxWN8b1F
HgKMDXMwU7pN97EA9dFH3+82eQjwb42Hrcp3yEOAGvzWf/zvkIcA3667eUEl
hDwEqLPm21H/EPIQoK3SN02VUPIQ4DS77It+oeQhwDus2nilu+QhjyvWWd/1
vUse8njo/raVCmHkIY9WojHPz4aRhzx6bktiBPfIQx4/r/dMOXWPPOSxd3ug
I/c+echjUMXE/JP3yUMe/63e3Nd/nzzksdTKpfLIA/KQx4/saxc7H5CHPCpY
9vUfeEge8ng/LXN600PykEeWs86fux+RhxA11+7I+vWIPITYvzBose1j8hDi
ycxql+LH5CHExt2Xdm96Qh5C1LJL1fj8hDyEmJISdtc0nDyEuHWPQ1lGOHkI
MWPM/Er9CPIQ4rL1euEJEeQhxKyDL/+a/5Q8hDj1aaJH5FPyEKKpzPlArUjy
EKEbGu8IiSQPEbqoqnPGRJGHCD/1G1oFRJGHCOVXlpwQRZOHCPMnjnbwiCYP
EZq6ThzaE00eIvxzgpr7vmfkIcKcWMOYqmfkIcKfrxKitj0nDxGO2/9075fn
5CHCR7JGHatekIcIt9hG66W+IA8RltiMWqf7kjwUsDLk/rTIl+ShgA43vTPU
Y8hDAd+H/ZxxLYY8FJBTUm6hEkseCsg2jl3hFUseChgW7ynbHUseCji86IDH
njjyUMACnegPP+LIQwEnjLMvNH9FHgpYnBH39MMr8lDAkUsLVkE8eShgq1PZ
s6h48lDELoHij8mvyUMR9UIPfw1+TR6KGPHYNFiYQB6KyN/+atzRBPJQRO2O
kj0NCeShiHara7yt35CHIm4wYu/Me0MeimjvvULV4C15KOKHgPozL9+ShyK+
/Dg8XSORPBQxzLEs+3IieSjiNk/PO/JJ5KGIa3h/LnJLIg8lvBDzKaQ6iTyU
UAM/5m5KJg8lVBszJ+tDMnkoYWWY1kXdFPJQQm3VwomPUshDCa3d7P8dlUoe
SngtuePO6VTyUMLyl9EXO1LJQwmdel+b2L8jj4HfD19YkP+OPJRw1Zb1Wvpp
5KGEtSozjaLSyEMZo5fVzBn/Xgz/B4Iw1fw=
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0.5]], 
          LineBox[CompressedData["
1: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
           
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.5}}, ImagePadding -> 40, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Equilibrium\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox[
         "\"k (Manipulation effect in double infection)\"", TraditionalForm], 
         
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
9\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.4484855441816518}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.4484855441816518, 0.46533970900156446`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          TemplateBox[{"\"Iw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{
  3.837769286469556*^9, 3.8377693477289248`*^9, 3.837769419440592*^9, {
   3.837771192554571*^9, 3.837771202776558*^9}, 3.8377729566023903`*^9, 
   3.8377729901584997`*^9, 3.837774012175729*^9, {3.837774103836274*^9, 
   3.837774133888603*^9}, {3.8377743595575457`*^9, 3.837774387211878*^9}, 
   3.837775248022045*^9},
 CellLabel->
  "Out[1003]=",ExpressionUUID->"0759a347-b1e0-41ad-acd0-a177a98200dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"padding", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"{", "Cyan", "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dm", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Dashed"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmw", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", "DotDashed"}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmw\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p4", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dmm", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", " ", "Dashed"}], "}"}]}], 
     ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dmm\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p5", " ", "=", " ", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"kRange", ",", " ", 
        RowBox[{
         RowBox[{"Dww", "/.", "equisk2"}], "//", "Flatten"}]}], "}"}], "]"}], 
     ",", " ", 
     RowBox[{"PlotStyle", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{"Darker", "[", "Cyan", "]"}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", "\"\<Dww\>\"", "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p2", ",", " ", "p3", ",", " ", "p4", ",", " ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.005"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"False", ",", "False", ",", "False", ",", "True"}], "}"}]}], 
     ",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "All"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"Dashed", ",", "Blue"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppp", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"p1", ",", " ", "p5", ",", "  ", 
     RowBox[{"PlotRange", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"kRange", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0.2"}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"ImagePadding", "->", "padding"}], ",", " ", 
     RowBox[{"Frame", "->", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
     RowBox[{"FrameStyle", "->", 
      RowBox[{"{", 
       RowBox[{
       "Automatic", ",", "Black", ",", "Automatic", ",", "Automatic"}], 
       "}"}]}], ",", 
     RowBox[{"FrameLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Equilibrium\>\"", ",", " ", "\"\< \>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<m (mutant fraction in environment)\>\"", ",", " ", 
          "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(m\)]\) = \
9\!\(\*SubscriptBox[\(\[Beta]\), \(w\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Overlay", "[", 
  RowBox[{"{", 
   RowBox[{"pp", ",", "ppp"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837774967345353*^9, 3.837774977664686*^9}, {
  3.8377750585448923`*^9, 3.837775063625909*^9}, {3.8377752369275618`*^9, 
  3.837775255374819*^9}},
 CellLabel->
  "In[1013]:=",ExpressionUUID->"5ac39325-8f1c-4175-ae9a-d6c4956d4517"],

Cell[BoxData[
 OverlayBox[{
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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
VSxMJA8pjgia8+7QK/IYhBy95ayuBBn8H+JuFx4=
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 
            NCache[
             Rational[2, 3], 0.6666666666666666]], 
           Dashing[{0, Small, Small, Small}]], 
          LineBox[CompressedData["
1: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
827SuBVq+D9pYugJ
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 0], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.005}}, ImagePadding -> 50, 
      Frame -> {False, False, False, True}, 
      FrameTicks -> {{None, All}, {None, None}}, 
      FrameStyle -> {Automatic, Automatic, Automatic, {
         Dashing[{Small, Small}], 
         RGBColor[0, 0, 1]}}, DisplayFunction -> Identity, DisplayFunction -> 
      Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, 0.004319316798615435}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.004319316798615435, 0.004660848845737673}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dm\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmw\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 
                    Rational[2, 3]], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dmm\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                  "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
  TemplateBox[{
    GraphicsBox[{{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 1, 1]], 
          LineBox[CompressedData["
1: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
/Xg18+DhnKR1cu5ENfPgYU15wZB+k9XMg4dVkyOfjpumZh48/P7+sCtzPNTM
g4c9mtT3g2armQcP61O130X5qJkHD28XxSp3zVczDz7qxjgfP7hIzTz4aHhM
k3MkQM08+Hhg8SvHU8vUzIOPmTiyKm2lmnnwMSYmujE9hDz42L9giU/aevLg
49Dle7knw8mDjyu4x0WHN5AHH7d9HReSEE0efNzdQzdwRwx5fKtfEjs5fCd5
8PFlYLB6aRx5GGHJvLGnZ+0jDyME612fnRLJwwhHZr8+3Oc38jBCjvbuDU4K
eRjhkImP3d6lkocRPngWMS7nBHkY4bmzzudOnCEPIwzfkLJ3YwZ5GGHFC9HH
2RfIwwirewvl/bPIwwh/280za7xKHkZoZRdamneTPIywsezmmEPZ5CHAx+lg
GqAgDwFOH7Jh7UANeQjwv8GKuVW55CHAwbPC713JJw8B3h/deD/sIXkI0H5n
mt8PT8hDgMFvHm+vfE4eAvyz8sm4jL/JQ4Db1zTt8X9NHgKcOiA53LyEPAQ4
pqGuKbeMPAR4tci3d+RH8hDik/fmb+3LyUOIH+cunlpQRR5CbE/Y6rWhljyE
6No3i2tbTx5C9MobHJDTRB5CvLdxyIqgNvIQYljQB2vDTvIQYkHLFPAy0DAP
IV4NyXhga6hhHkJs6hjsWMHTMA8hLnr+OexPIw3zEGJOljZhu1DDPIQY3Om/
x91YwzxE+LbMObCbWMM8RNjf9pB1kamGeYjwiMO268clGuYhQtvhhsMDzTXs
PhahzmjkvgEWGuYhwvbp5g8/WWqYhwgnjs+qPW+lYR4i9PxX3B7cS8M8RMjX
jq0ZaKNhHiLconW896G3hnmIsKNX574zthrmIcJ3S886L+6nYR7GGL3nuyc9
7TXMwxgbukf7PPtOwzyMcYjHxTt7B2iYhzH+itfsJg3UMA9jbHm+f13TIA3z
MMbNF50u/jFYwzyMcejEC0VLh2qYhzHqCt82WgwnD2OMj38mvDuCPIxRMynK
bKMjeRjj0780wkGjyMMY72RmNr8cTR7G6Blg93aXE3mYYKKjjdLRmTxM8Pq0
+EPF48jDBGUZC4LiXcjDBG1GRQ8fOYE8THDbtWLtP27kYYLzH625uQPIwwTP
SCwiHCaRhwlurFH88HgyeZjgjVyfyvAp5GGCKS8U56ymkYcJBnm+WyadTh4m
WDPrgp3fDPIQ4+TixtI2D/IQo0PD5bPHZpGHGO/svLnWZTZ5iFESVD7+1Rzy
EOOOVSNMo7zJQ4wxfkGfu/1EHmL83Lby/qW55CHGDG7Pm1Pnk4cYe/b3yixZ
QB5izBTXnNvgSx5iHLP24VVTP/IQY1J1zt10f/IQY/uEi+XjAsjDFH8X+tsU
LCEPU3xocNl3aSB5mOKDkqhM7TLyMMVPfnsEu5eThylauEk3Wq4kD1N0mfOm
JT2YPEzx/GpN4qjV5GGK60PHO2tCyMMU87ys6metJQ9TXCUeePfVOvIwxdqr
Yy8HhZKHKToG9MiqDiMPM9w7LTF3Qzh5mCFeXavVRZCHGT5rjHaJiyIPM5x4
YOdx8UbyMMPFrTOtf9tEHmY48MPJa1bR5GGGLUaTVx7dQh5m+MW1zdl2G3mY
Ydumg4NOxZCHGf78/I6T3S/kYYaCrQuDTu8gDzMc9aD7tX67yMMMF4y+0e/k
bvKQoIV365XeceQhwZVl55cdiScPCdbkR4+z3EseErSXjBx1cB95SDC6PN5L
dIA8JJh23TV5ZwJ5SPByrUDXmkgeEpw673xieBJ5SDBH9WJa+a/kIcEV46cN
WnKIPCS4lXPbsTCZPCS4ffu/Qe4p5NENXX4Ky5Ef1sD/AKbLeGk=
           
           "]]}}}, {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1: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
S8FKPcFKJI8e+HjM8r7fjRLhfz3pO/M=
           "]]}}}, {{}, {}}}}, {
     PlotRange -> {{0, 4.}, {0, 0.2}}, ImagePadding -> 50, 
      Frame -> {True, True, True, False}, FrameStyle -> {Automatic, 
        GrayLevel[0], Automatic, Automatic}, FrameLabel -> {{
         FormBox["\"Equilibrium\"", TraditionalForm], 
         FormBox["\" \"", TraditionalForm]}, {
         FormBox["\"m (mutant fraction in environment)\"", TraditionalForm], 
         FormBox[
         "\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(m\\)]\\) = \
9\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(w\\)]\\)\"", TraditionalForm]}}, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.0974578113559437}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{0, 4.}, {0.0974578113559437, 0.12963053651096762`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    FormBox[
     TagBox[
      GridBox[{{
         FormBox[
          TemplateBox[{"\"Dw\""}, "LineLegend", DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}, {
         FormBox[
          
          TemplateBox[{"\"Dww\""}, "LineLegend", 
           DisplayFunction -> (StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False]& ), 
           InterpretationFunction :> (RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0., 0.4444444444444444, 0.4444444444444444], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", 
                    FractionBox["2", "3"], ",", 
                    FractionBox["2", "3"]}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                
                RowBox[{"Joined", "\[Rule]", 
                  RowBox[{"{", "True", "}"}]}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ),
            Editable -> True], TraditionalForm]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
   "Legended",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, GridBoxItemSize -> Automatic, 
     BaselinePosition -> {1, 1}]& ),
   Editable->True,
   InterpretationFunction->(RowBox[{"Legended", "[", 
      RowBox[{#, ",", 
        RowBox[{"Placed", "[", 
          RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]], "Output",
 CellChangeTimes->{
  3.837774980461409*^9, {3.837775059323785*^9, 3.837775064491191*^9}, {
   3.83777523828832*^9, 3.837775256871273*^9}},
 CellLabel->
  "Out[1021]=",ExpressionUUID->"38140e74-2bb9-47fc-9bcc-04de033a962b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1404, 842},
WindowMargins->{{Automatic, 13}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1ec55e3e-544e-4d33-b73d-cc0b18fbaff6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 262, 4, 146, "Title",ExpressionUUID->"ca6339fa-87b0-4c9a-bcc5-07c99afb164f"],
Cell[CellGroupData[{
Cell[867, 30, 178, 3, 144, "Chapter",ExpressionUUID->"00267e49-4f01-4b7a-b465-4503f9c63b4e"],
Cell[1048, 35, 4660, 98, 253, "Input",ExpressionUUID->"1f09bc19-4e76-4681-bb03-666be7d80279"],
Cell[5711, 135, 1578, 42, 103, "Input",ExpressionUUID->"08ab7a49-e39b-4abb-bfcf-3344bce114af"],
Cell[7292, 179, 1857, 48, 166, "Input",ExpressionUUID->"dc11f015-4138-463f-99bb-5a2bc8ef7948"],
Cell[9152, 229, 921, 25, 141, "Input",ExpressionUUID->"f9870ea7-3eb4-4c4c-ac44-51c0f88b4712"],
Cell[CellGroupData[{
Cell[10098, 258, 544, 15, 64, "Input",ExpressionUUID->"40f22f17-4072-4551-abee-6878ca5b08ba"],
Cell[10645, 275, 964, 26, 70, "Output",ExpressionUUID->"83f4f097-705c-4663-88d9-aae8129c9c35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11646, 306, 657, 16, 64, "Input",ExpressionUUID->"86b4a1c5-09fb-4f4a-9003-ad80da6b36c1"],
Cell[12306, 324, 1468, 41, 70, "Output",ExpressionUUID->"0ac425fc-7b78-4255-912b-b28f95ec025b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13811, 370, 178, 3, 459, "Subchapter",ExpressionUUID->"619a35d5-cd93-4b58-9eeb-4918a7b1ffca"],
Cell[CellGroupData[{
Cell[14014, 377, 159, 3, 478, "Section",ExpressionUUID->"5bedc337-ccf0-4960-ad0a-246111f56bb3"],
Cell[14176, 382, 2187, 54, 474, "Input",ExpressionUUID->"cbbfe1f8-6815-48a6-845d-0f388dcb62f4"],
Cell[CellGroupData[{
Cell[16388, 440, 183, 4, 216, "Input",ExpressionUUID->"80fc8eae-fb1f-459a-8db6-454bb416cb27"],
Cell[16574, 446, 1803, 49, 70, "Output",ExpressionUUID->"12392fe8-bc34-45a6-96c4-20bb1e4bbc56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18414, 500, 420, 13, 216, "Input",ExpressionUUID->"b6a2d9dd-aa58-44db-b753-617dc4e7e622"],
Cell[18837, 515, 327, 5, 70, "Output",ExpressionUUID->"b4e31d54-7356-4023-9278-441ce4418516"]
}, Open  ]],
Cell[19179, 523, 442, 11, 216, "Input",ExpressionUUID->"30f2022b-44b1-4066-a4a4-8055819bb60c"],
Cell[CellGroupData[{
Cell[19646, 538, 580, 16, 216, "Input",ExpressionUUID->"542f9952-c7be-455e-b204-c922ed16a464"],
Cell[20229, 556, 571, 15, 70, "Output",ExpressionUUID->"0911685d-362f-4adb-945f-ffb733b91c71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20837, 576, 854, 21, 346, "Input",ExpressionUUID->"687b7706-89d0-43d3-836e-9f061d42007e"],
Cell[21694, 599, 3385, 92, 70, "Output",ExpressionUUID->"b23da401-6e10-4f3b-9745-183b993df058"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25128, 697, 180, 3, 478, "Section",ExpressionUUID->"a9e5d69c-a01f-4843-a6de-0048bd5b8a5a"],
Cell[25311, 702, 2389, 63, 688, "Input",ExpressionUUID->"3b56881e-1eaa-44d9-aaa9-12fe23ff709c"],
Cell[CellGroupData[{
Cell[27725, 769, 425, 13, 216, "Input",ExpressionUUID->"72927999-1ef4-462c-9434-f839bbb3501a"],
Cell[28153, 784, 202, 4, 70, "Output",ExpressionUUID->"0114e6f1-077f-42d0-9e09-fc12c3bad42b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28392, 793, 387, 9, 216, "Input",ExpressionUUID->"8adb9b6b-5caf-4cb9-ad8a-e00a59804d13"],
Cell[28782, 804, 6524, 181, 70, "Output",ExpressionUUID->"921cd544-5494-4d30-8ed7-413e3e1fe94b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35343, 990, 1166, 31, 346, "Input",ExpressionUUID->"84934df3-cf32-4f91-9d81-68e378acf7de"],
Cell[36512, 1023, 1884, 52, 70, "Output",ExpressionUUID->"97d158e1-80e1-4f15-a3f3-e78b0fcadc0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38433, 1080, 1084, 26, 346, "Input",ExpressionUUID->"cd261487-9253-4d90-83db-fca19426ca3d"],
Cell[39520, 1108, 3454, 91, 70, "Output",ExpressionUUID->"258b028c-add1-4912-aad5-5fb7e5af85a1"]
}, Open  ]],
Cell[42989, 1202, 978, 23, 346, "Input",ExpressionUUID->"63f7c73d-1637-4f69-a84a-4b1687dab978"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44016, 1231, 215, 4, 459, "Subchapter",ExpressionUUID->"05888b6a-d911-418e-82cf-b8497d51ae84"],
Cell[44234, 1237, 784, 17, 346, "Input",ExpressionUUID->"ca867795-a0ef-422d-9e37-44cd7e4ad312"],
Cell[45021, 1256, 2175, 35, 346, "Input",ExpressionUUID->"940291cb-860b-42f6-a8a6-939164131f81"],
Cell[CellGroupData[{
Cell[47221, 1295, 1993, 49, 600, "Input",ExpressionUUID->"80ddafbb-bc10-4885-a06a-70e23ecf87f2"],
Cell[49217, 1346, 609, 12, 70, "Message",ExpressionUUID->"af6d1824-37aa-4145-b3d5-b3183cb564ae"],
Cell[49829, 1360, 56519, 1108, 70, "Output",ExpressionUUID->"79fb4327-2541-4981-b921-e7c44fa2aacb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106385, 2473, 826, 18, 346, "Input",ExpressionUUID->"e1a7834a-ccca-401b-92c9-a73370150f20"],
Cell[107214, 2493, 159405, 2717, 70, "Output",ExpressionUUID->"4e5f543d-e149-4212-ae8d-2762adf1c045"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266656, 5215, 2858, 65, 852, "Input",ExpressionUUID->"e977780a-4867-43ea-959b-1a9b2ab6363a"],
Cell[269517, 5282, 4242, 98, 70, "Output",ExpressionUUID->"c05704a6-9501-4d90-83a8-d83e4906147d"],
Cell[273762, 5382, 58946, 1148, 70, "Output",ExpressionUUID->"667557eb-4114-4f38-8ce1-0703a1f87702"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332745, 6535, 971, 23, 346, "Input",ExpressionUUID->"85fca892-a36d-4286-bff9-1bba7b96e5d6"],
Cell[333719, 6560, 353689, 5972, 70, "Output",ExpressionUUID->"b52c6002-447e-4a5a-8d11-f380ba8d8424"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[687469, 12539, 160, 3, 144, "Chapter",ExpressionUUID->"ead7366e-8288-4106-8d8b-fd2d25b516f4"],
Cell[687632, 12544, 1486, 37, 141, "Input",ExpressionUUID->"6eb89505-af62-4961-937c-4349fe0b0afe"],
Cell[CellGroupData[{
Cell[689143, 12585, 188, 4, 64, "Input",ExpressionUUID->"b0ca857d-2406-43cc-8c79-9696520b430c"],
Cell[689334, 12591, 287, 8, 70, "Output",ExpressionUUID->"5c70afdb-32a4-49a9-ba63-434b098d48ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[689658, 12604, 2186, 46, 103, "Input",ExpressionUUID->"f4cebc04-e340-4298-96e8-c328fb91eaee"],
Cell[691847, 12652, 1617, 41, 70, "Output",ExpressionUUID->"6cbae5f3-dcef-447e-96c9-a1370b92d9a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[693501, 12698, 414, 12, 64, "Input",ExpressionUUID->"5c27a301-7908-4963-8f7e-c73d2fc6019f"],
Cell[693918, 12712, 279, 5, 70, "Output",ExpressionUUID->"1dae35c4-2f48-4b13-af6a-4f829852e2a8"]
}, Open  ]],
Cell[694212, 12720, 906, 20, 64, "Input",ExpressionUUID->"e835df04-3c93-4bd7-a1fd-7abd64356d4e"],
Cell[695121, 12742, 1996, 43, 64, "Input",ExpressionUUID->"b472f2a9-38fc-4d0b-9694-fb108fa525d0"],
Cell[CellGroupData[{
Cell[697142, 12789, 435, 10, 103, "Input",ExpressionUUID->"795b1e23-f110-433f-9cf9-8d9c6fba297d"],
Cell[697580, 12801, 453, 7, 70, "Output",ExpressionUUID->"863b26b8-4d6f-49a2-abfa-164a6cf109f7"],
Cell[698036, 12810, 1490, 38, 70, "Output",ExpressionUUID->"758c1c18-99d7-478e-b93b-8deb6decc6b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699563, 12853, 686, 14, 64, "Input",ExpressionUUID->"2f501709-b002-41bb-9989-8b1ba6a84626"],
Cell[700252, 12869, 948, 22, 70, "Output",ExpressionUUID->"f9e97cd8-9a6a-4b77-afee-685594cb00e9"]
}, Open  ]],
Cell[701215, 12894, 1250, 29, 82, "Text",ExpressionUUID->"7bb01226-5372-4f4f-9a39-b27c75757ca2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[702514, 12929, 160, 3, 105, "Title",ExpressionUUID->"b519b780-77d2-4c70-8c3d-811b91a8bcd9"],
Cell[CellGroupData[{
Cell[702699, 12936, 223, 4, 103, "Chapter",ExpressionUUID->"dd4b5a4b-eede-4a27-8273-45cb623f333e"],
Cell[702925, 12942, 1176, 20, 364, "Text",ExpressionUUID->"53d39168-2dfc-4d90-bfa8-ba3f534c761b"],
Cell[704104, 12964, 3426, 81, 140, "Input",ExpressionUUID->"1f08c411-ab54-4265-81be-9d55fb614f48"],
Cell[707533, 13047, 4133, 107, 233, "Input",ExpressionUUID->"9ce41093-4225-461c-a9c9-73fb268ab8a1"],
Cell[CellGroupData[{
Cell[711691, 13158, 2386, 57, 295, "Input",ExpressionUUID->"e651ecba-13f1-457c-bfa5-053b1ab8407f"],
Cell[714080, 13217, 438, 8, 52, "Output",ExpressionUUID->"aa9bd2a1-5a6e-420b-88f1-adc824bd2628"],
Cell[714521, 13227, 391, 6, 52, "Output",ExpressionUUID->"2ea5fe7c-6149-4cd5-aab6-a0ef22628528"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[714961, 13239, 178, 3, 103, "Chapter",ExpressionUUID->"f0663439-c0ad-4d3d-84c1-740427d25584"],
Cell[CellGroupData[{
Cell[715164, 13246, 161, 3, 97, "Subchapter",ExpressionUUID->"6c5f7166-9488-407b-b8bf-9003eb388c52"],
Cell[715328, 13251, 519, 15, 46, "Input",ExpressionUUID->"64f0069c-06b5-4381-838a-143372770f77"],
Cell[715850, 13268, 525, 12, 46, "Input",ExpressionUUID->"d334ba56-4687-4ea3-b753-e49b040a939c"],
Cell[716378, 13282, 1180, 25, 78, "Input",ExpressionUUID->"80430831-3bd2-483a-81c4-b87d1ea8279d"],
Cell[CellGroupData[{
Cell[717583, 13311, 1383, 26, 109, "Input",ExpressionUUID->"98ab2213-183f-426a-a183-5a05231f5c7e"],
Cell[718969, 13339, 2301, 54, 115, "Output",ExpressionUUID->"0e12ea0f-dca2-4d48-bc4d-3e1d01001d7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721307, 13398, 1456, 33, 144, "Input",ExpressionUUID->"08ad92b2-4505-4fae-a223-355feea40529"],
Cell[722766, 13433, 1118, 29, 52, "Output",ExpressionUUID->"e66b58f5-d827-464a-8595-d48d1ca2f03b"]
}, Open  ]],
Cell[723899, 13465, 3510, 90, 200, "Text",ExpressionUUID->"3855d051-a6d0-4aaf-bd84-320ecca8232f"],
Cell[CellGroupData[{
Cell[727434, 13559, 2173, 54, 177, "Input",ExpressionUUID->"77abe6f7-a63b-40fa-9d91-107e278d443b"],
Cell[729610, 13615, 133, 3, 52, "Output",ExpressionUUID->"08a86504-0abb-4a2b-bd7c-d3867c31e34f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[729780, 13623, 1135, 22, 109, "Input",ExpressionUUID->"3f673ed7-7515-4e58-b8df-f48c85c4fb0c"],
Cell[730918, 13647, 2005, 45, 121, "Output",ExpressionUUID->"f4d2a5ad-cf87-4935-9021-7b142f114997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732960, 13697, 1274, 31, 144, "Input",ExpressionUUID->"6288b50b-bb06-4613-9127-5e5759f92a4f"],
Cell[734237, 13730, 848, 23, 73, "Output",ExpressionUUID->"455e4356-0b0d-4808-968a-bc3e0a8cbca9"]
}, Open  ]],
Cell[735100, 13756, 2321, 67, 154, "Text",ExpressionUUID->"ea88c27e-2ae8-4645-b683-d5fb4970a841"],
Cell[737424, 13825, 684, 19, 46, "Input",ExpressionUUID->"9535a2a4-f912-42a9-b294-8267a1d57930"],
Cell[CellGroupData[{
Cell[738133, 13848, 959, 23, 78, "Input",ExpressionUUID->"9b8fa279-6c2b-4f9c-a9e2-e7851a871141"],
Cell[739095, 13873, 548, 13, 52, "Output",ExpressionUUID->"da1784ce-4b0d-4f48-aaa9-9a7e41ed134a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739680, 13891, 887, 22, 78, "Input",ExpressionUUID->"0c676acd-1c54-43c6-b695-f2985c193337"],
Cell[740570, 13915, 476, 12, 52, "Output",ExpressionUUID->"55a2ac7f-a402-4e0e-a4ed-89c0e4f674c2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[741095, 13933, 231, 4, 71, "Subchapter",ExpressionUUID->"20018efe-fe31-4da0-bd86-2336bee1e156"],
Cell[CellGroupData[{
Cell[741351, 13941, 755, 19, 46, "Input",ExpressionUUID->"12b509ea-73b9-412d-b68a-61a7a05222f6"],
Cell[742109, 13962, 2577, 77, 115, "Output",ExpressionUUID->"40097ce6-0b1c-4022-b9e0-4ca783e1b122"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744723, 14044, 188, 4, 46, "Input",ExpressionUUID->"f3062a05-5bd0-4bb7-b13c-7dfd5d835bb6"],
Cell[744914, 14050, 2816, 82, 127, "Output",ExpressionUUID->"21b6c94c-cdfb-4454-87d1-c3f5cf120d1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[747767, 14137, 368, 8, 46, "Input",ExpressionUUID->"612a91ce-98e5-4f74-91bb-d4badbda8371"],
Cell[748138, 14147, 4249, 121, 261, "Output",ExpressionUUID->"239a8954-6ca3-4f6d-a552-255bd38c43cd"]
}, Open  ]],
Cell[752402, 14271, 168, 3, 53, "Text",ExpressionUUID->"7027cf17-8976-4a9c-86d8-565e68c0934a"],
Cell[CellGroupData[{
Cell[752595, 14278, 630, 14, 46, "Input",ExpressionUUID->"61480f75-38c5-4619-846f-5dff8615c97d"],
Cell[753228, 14294, 479, 12, 52, "Output",ExpressionUUID->"f15b3288-6d81-45d6-b240-f57b8ccb4196"]
}, Open  ]],
Cell[753722, 14309, 214, 4, 53, "Text",ExpressionUUID->"77d3767b-c38b-48e2-8d14-2ef478b91ee2"],
Cell[CellGroupData[{
Cell[753961, 14317, 209, 5, 46, "Input",ExpressionUUID->"e32f4cfb-ab74-437e-9b85-50b9590626a2"],
Cell[754173, 14324, 1005, 29, 68, "Output",ExpressionUUID->"cb746711-d3b7-4050-be6d-65166a61234e"]
}, Open  ]],
Cell[755193, 14356, 5199, 147, 585, "Text",ExpressionUUID->"52261f5e-9f2a-45e1-9a24-46c8910ca68a"],
Cell[760395, 14505, 246, 6, 53, "Text",ExpressionUUID->"c8acdb41-5833-4735-adad-25ba4fa00165"],
Cell[CellGroupData[{
Cell[760666, 14515, 1018, 24, 84, "Input",ExpressionUUID->"05fbd30c-a5ef-429a-83d8-f0fa2d5e75cc"],
Cell[761687, 14541, 253, 4, 52, "Output",ExpressionUUID->"4b3d357e-78c5-4dca-9b8b-c5c12ac0465f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[761977, 14550, 209, 5, 46, "Input",ExpressionUUID->"f4238276-0046-42d9-9d05-dc398a35df4a"],
Cell[762189, 14557, 1254, 36, 104, "Output",ExpressionUUID->"2c7df819-1454-433d-84bd-8bbcaf3aa4cd"]
}, Open  ]],
Cell[763458, 14596, 249, 4, 53, "Text",ExpressionUUID->"36f2512f-7302-4f87-b271-602b8437d848"],
Cell[CellGroupData[{
Cell[763732, 14604, 805, 18, 46, "Input",ExpressionUUID->"5961aad3-1ac0-4b88-863e-cbb76442b984"],
Cell[764540, 14624, 257, 4, 52, "Output",ExpressionUUID->"6950f403-3aed-417d-97c2-78b1dbe22310"]
}, Open  ]],
Cell[764812, 14631, 188, 3, 53, "Text",ExpressionUUID->"25833fbc-c06f-438c-9ae6-a69ebad62540"],
Cell[765003, 14636, 4657, 115, 534, "Text",ExpressionUUID->"a2d6abbc-ce26-488b-be48-1b41494cbee2"],
Cell[769663, 14753, 198, 3, 53, "Text",ExpressionUUID->"3dce1f40-ca9a-494d-8323-3a9d18d6a3e4"],
Cell[CellGroupData[{
Cell[769886, 14760, 826, 22, 81, "Input",ExpressionUUID->"808328ce-8947-4dd3-818b-1a698f14ccc8"],
Cell[770715, 14784, 903, 25, 55, "Output",ExpressionUUID->"3265799a-731d-48e6-a92e-c0158f7268c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771655, 14814, 1414, 39, 171, "Input",ExpressionUUID->"2d47f0be-c101-45de-a58b-490edfdaa78f"],
Cell[773072, 14855, 775, 20, 68, "Output",ExpressionUUID->"e9c206af-f5fe-42a7-97a3-d1093c3923db"]
}, Open  ]],
Cell[773862, 14878, 3772, 107, 407, "Text",ExpressionUUID->"dee9ef27-089d-453d-b228-fcab802c8067"],
Cell[CellGroupData[{
Cell[777659, 14989, 1413, 39, 171, "Input",ExpressionUUID->"1f44aac1-4624-4593-8be0-4178be7c912a"],
Cell[779075, 15030, 760, 21, 68, "Output",ExpressionUUID->"a5964df8-8350-4de2-bbe5-b60eca920e75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779872, 15056, 863, 24, 81, "Input",ExpressionUUID->"0bb08a8a-a24d-400b-a439-67ed7f8957ea"],
Cell[780738, 15082, 792, 24, 55, "Output",ExpressionUUID->"3c94266d-9213-4186-bd8e-d733dffe0907"]
}, Open  ]],
Cell[781545, 15109, 245, 6, 53, "Text",ExpressionUUID->"398c897b-c4ba-4827-b606-46ac6fac9cd7"],
Cell[781793, 15117, 340, 9, 46, "Input",ExpressionUUID->"17149f96-c7d6-45be-82d0-234d7f8d8137"],
Cell[782136, 15128, 2241, 53, 174, "Input",ExpressionUUID->"7a41d285-b48f-48dc-90b9-1697ff43e3a7"],
Cell[784380, 15183, 16721, 460, 1076, "Text",ExpressionUUID->"a9ce6c78-e849-4a06-9136-4d24a93f95c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[801138, 15648, 168, 3, 71, "Subchapter",ExpressionUUID->"ed78ee75-ab0a-4768-a17a-89a2891a46a0"],
Cell[801309, 15653, 1189, 35, 140, "Input",ExpressionUUID->"383bd514-b766-420d-a083-fc5e89db3575"],
Cell[CellGroupData[{
Cell[802523, 15692, 301, 7, 81, "Subsection",ExpressionUUID->"088a31df-7878-4c57-aab9-f5851bf7d053"],
Cell[802827, 15701, 1313, 24, 78, "Input",ExpressionUUID->"56948034-b97d-412b-9090-9d659eb61d71"],
Cell[804143, 15727, 913, 24, 78, "Input",ExpressionUUID->"f1d32b5d-7710-4e0b-89b7-e4ee22bcc8c6"],
Cell[CellGroupData[{
Cell[805081, 15755, 1558, 40, 109, "Input",ExpressionUUID->"82c64a5d-6aa2-4ada-896e-d4ee93e1810e"],
Cell[806642, 15797, 58119, 1039, 371, "Output",ExpressionUUID->"0882c5be-f6a9-4a16-93dc-5e7ea57c674e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[864810, 16842, 232, 5, 81, "Subsection",ExpressionUUID->"825f69f1-e7ba-48b7-a3cb-92d844778bd8"],
Cell[865045, 16849, 1097, 21, 78, "Input",ExpressionUUID->"658ca121-f635-4747-814c-1bc0faff76e3"],
Cell[866145, 16872, 644, 19, 78, "Input",ExpressionUUID->"8066a61c-5c1f-4009-a6b2-0486e1e2c399"],
Cell[CellGroupData[{
Cell[866814, 16895, 1213, 35, 109, "Input",ExpressionUUID->"c8b10e51-f92d-4480-9019-b8e4929bf7ea"],
Cell[868030, 16932, 55253, 993, 371, "Output",ExpressionUUID->"6af0644a-7ad5-40de-93fd-9123b670ac8e"]
}, Open  ]],
Cell[923298, 17928, 1024, 21, 78, "Input",ExpressionUUID->"34c88431-11d5-4911-9557-8244888e8db0"],
Cell[CellGroupData[{
Cell[924347, 17953, 461, 13, 109, "Input",ExpressionUUID->"ca427ac7-740f-46eb-afd5-29e917496276"],
Cell[924811, 17968, 204, 4, 52, "Output",ExpressionUUID->"82fd2859-0012-4c8b-8c5c-4fd0b9708470"],
Cell[925018, 17974, 182, 3, 52, "Output",ExpressionUUID->"8c65dae5-e4c2-4f49-af57-829454c0844e"],
Cell[925203, 17979, 183, 3, 52, "Output",ExpressionUUID->"fe109421-ade1-47fb-8641-bc857c70495d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[925423, 17987, 1842, 52, 171, "Input",ExpressionUUID->"ebe11c4c-fbd9-41a3-a951-295b036d0d99"],
Cell[927268, 18041, 54540, 981, 371, "Output",ExpressionUUID->"9d0b966d-d948-4c18-9b67-f05d689dd92b"]
}, Open  ]],
Cell[981823, 19025, 992, 20, 78, "Input",ExpressionUUID->"3bf6092a-ff87-43d8-b255-9ce895d3aba6"],
Cell[CellGroupData[{
Cell[982840, 19049, 1182, 31, 109, "Input",ExpressionUUID->"06e5c5cf-5171-4e35-8b18-f78c55efe979"],
Cell[984025, 19082, 24717, 491, 374, "Output",ExpressionUUID->"77874be6-9f6e-45c9-8682-6cc6bee26226"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008815, 19581, 183, 3, 103, "Chapter",ExpressionUUID->"e6a00686-c60c-49d8-ada5-0d9897db254a"],
Cell[CellGroupData[{
Cell[1009023, 19588, 241, 4, 101, "Section",ExpressionUUID->"aa4384b2-5b3e-48bd-9fdf-344f6dc98fc0"],
Cell[1009267, 19594, 1190, 21, 78, "Input",ExpressionUUID->"133c35f1-8f68-43f7-9de9-ffe934c06eba"],
Cell[1010460, 19617, 1001, 18, 78, "Input",ExpressionUUID->"96942fae-a4a0-4d16-b88d-0ff66e08636a"],
Cell[1011464, 19637, 531, 14, 46, "Input",ExpressionUUID->"9d6a527b-ad84-40d2-8d80-876562372c21"],
Cell[CellGroupData[{
Cell[1012020, 19655, 1910, 35, 202, "Input",ExpressionUUID->"13aad284-f933-41d3-9383-67284d4c9fa4"],
Cell[1013933, 19692, 178, 2, 52, "Output",ExpressionUUID->"3a195aa1-f546-4aaf-be12-da3c25c0c63c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014160, 19700, 161, 3, 101, "Section",ExpressionUUID->"04dddd8b-fc73-4776-80d2-5bbff9b9f104"],
Cell[1014324, 19705, 2442, 60, 539, "Input",ExpressionUUID->"c94a51ae-561d-497f-baa4-24cd97eaf657"]
}, Closed]],
Cell[CellGroupData[{
Cell[1016803, 19770, 237, 4, 78, "Section",ExpressionUUID->"4473a29b-cce2-4b01-8da4-b4d75b755c57"],
Cell[CellGroupData[{
Cell[1017065, 19778, 218, 4, 53, "Text",ExpressionUUID->"d1c9025f-63e2-4027-bfdc-e88c9e5979ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1017286, 19784, 1388, 25, 233, "Input",ExpressionUUID->"3eaa7b03-cea9-4324-a414-6c26bcc40f92",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[1018689, 19812, 476, 10, 38, "Input",ExpressionUUID->"1b5558e5-6674-46d6-9c85-0a1e4fb90b0e"],
Cell[1019168, 19824, 620, 15, 46, "Input",ExpressionUUID->"7fb95c1b-b580-4711-be49-093e4c22cce7"],
Cell[1019791, 19841, 1833, 46, 171, "Input",ExpressionUUID->"fdf5dc8a-9843-470c-9f5e-fd79ff3005a2"],
Cell[1021627, 19889, 1699, 30, 109, "Input",ExpressionUUID->"01e2f6ca-5ef6-4da8-98ee-d3048f34991c"],
Cell[CellGroupData[{
Cell[1023351, 19923, 2789, 70, 202, "Input",ExpressionUUID->"62596385-484f-47ce-8470-c7b151d45439"],
Cell[1026143, 19995, 89720, 1681, 380, "Output",ExpressionUUID->"be5c055b-c9aa-46fe-b695-43109d5f4ad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115900, 21681, 190, 3, 81, "Subsection",ExpressionUUID->"96418386-dbe9-47df-8940-57e26d4edfe3"],
Cell[1116093, 21686, 1476, 27, 109, "Input",ExpressionUUID->"2308094a-25b7-499c-8303-7e641cb80e00"],
Cell[1117572, 21715, 1180, 24, 109, InheritFromParent,ExpressionUUID->"af567a78-8a26-45f7-a35a-196430fbcd30"],
Cell[CellGroupData[{
Cell[1118777, 21743, 4738, 138, 419, "Input",ExpressionUUID->"a38faaab-1251-4be1-a50b-6c9c61661d4d"],
Cell[1123518, 21883, 31139, 530, 400, "Output",ExpressionUUID->"5c1757ef-e455-4491-b2d4-316969cf36ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1154694, 22418, 3642, 102, 357, "Input",ExpressionUUID->"46645459-d1d7-426d-ad37-412072312b08"],
Cell[1158339, 22522, 95464, 1718, 368, "Output",ExpressionUUID->"a3b28e82-33aa-4df4-9996-1ef20fae060e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1253840, 24245, 3465, 101, 326, "Input",ExpressionUUID->"d00948ae-d2ea-4270-bf76-99db67bd8981"],
Cell[1257308, 24348, 96892, 1752, 363, "Output",ExpressionUUID->"b56c0be7-22bd-430a-bbb4-dff903baeb67"]
}, Open  ]],
Cell[1354215, 26103, 1522, 29, 109, "Input",ExpressionUUID->"9835218f-95b9-4a1f-a7ea-0aad65d22e52"],
Cell[1355740, 26134, 460, 11, 78, "Input",ExpressionUUID->"75508f9d-df39-4c67-80f0-0b60f8437b01"],
Cell[CellGroupData[{
Cell[1356225, 26149, 5545, 146, 450, "Input",ExpressionUUID->"df6c6df2-da37-49fc-91c8-08c8fe9b2752"],
Cell[1361773, 26297, 31483, 536, 383, "Output",ExpressionUUID->"d15915ff-46ce-44c7-8c6e-abf61ca3ae04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1393293, 26838, 3317, 97, 357, "Input",ExpressionUUID->"b3d11404-db2a-49f1-85e1-ac81182ee172"],
Cell[1396613, 26937, 106789, 1903, 385, "Output",ExpressionUUID->"64397e78-944f-4fc4-8499-031c5ffb33d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1503439, 28845, 3346, 99, 357, "Input",ExpressionUUID->"b68ee149-6cf4-4380-8994-f8c8231b4d37"],
Cell[1506788, 28946, 107699, 1929, 385, "Output",ExpressionUUID->"7f8f73be-8491-45dc-b4b6-a56ac99ddbb9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1614536, 30881, 211, 4, 81, "Subsection",ExpressionUUID->"0cbea6df-5f62-411d-ba57-14d96fa5f8df"],
Cell[1614750, 30887, 1486, 27, 109, "Input",ExpressionUUID->"709ec30d-9dbf-4b90-af89-5db234532189"],
Cell[1616239, 30916, 671, 17, 109, "Input",ExpressionUUID->"78911f5c-ff40-4523-b5da-516371c06132"],
Cell[CellGroupData[{
Cell[1616935, 30937, 5015, 147, 419, "Input",ExpressionUUID->"f343a01c-4130-4195-8bdf-3a226c97a5a8"],
Cell[1621953, 31086, 12334, 222, 352, "Output",ExpressionUUID->"68cae015-12d5-41c5-83ef-09f377136726"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1634324, 31313, 5946, 162, 574, "Input",ExpressionUUID->"579812bd-d514-4b12-b1b4-20d76e2a9d45"],
Cell[1640273, 31477, 63200, 1212, 396, "Output",ExpressionUUID->"88a8e1a8-c6c5-43ce-bbe9-3dc515230dc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1703510, 32694, 5755, 161, 574, "Input",ExpressionUUID->"e923b654-c68e-4dd1-b80a-be53db7ca3df"],
Cell[1709268, 32857, 64235, 1238, 419, "Output",ExpressionUUID->"77ed0261-85de-40d4-92f6-5dbebf63fc21"]
}, Open  ]],
Cell[1773518, 34098, 1537, 28, 109, "Input",ExpressionUUID->"5483aba7-7656-434e-9088-9ebfce5aff43"],
Cell[1775058, 34128, 610, 13, 78, "Input",ExpressionUUID->"17a45cae-5687-4f9a-aa52-c46f0a73fecb"],
Cell[CellGroupData[{
Cell[1775693, 34145, 5690, 158, 574, "Input",ExpressionUUID->"80963a3e-6c04-418a-99f2-a4442af6495b"],
Cell[1781386, 34305, 63225, 1213, 425, "Output",ExpressionUUID->"0759a347-b1e0-41ad-acd0-a177a98200dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1844648, 35523, 5642, 160, 574, "Input",ExpressionUUID->"5ac39325-8f1c-4175-ae9a-d6c4956d4517"],
Cell[1850293, 35685, 64035, 1236, 453, "Output",ExpressionUUID->"38140e74-2bb9-47fc-9bcc-04de033a962b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

