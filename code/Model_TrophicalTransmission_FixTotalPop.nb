(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    876048,      17456]
NotebookOptionsPosition[    868706,      17220]
NotebookOutlinePosition[    869093,      17237]
CellTagsIndexPosition[    869050,      17234]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Single infection with trophical transmission", "Title",
 CellChangeTimes->{{3.825668663761571*^9, 3.8256686880677233`*^9}, 
   3.826272929194303*^9, {3.827819505375657*^9, 3.827819511550613*^9}}],

Cell[CellGroupData[{

Cell["Ecological dynamics of a resident", "Chapter",
 CellChangeTimes->{{3.825769393130102*^9, 3.825769403189344*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIsdt", " ", "=", " ", 
    RowBox[{
     RowBox[{"R", "[", 
      RowBox[{"Iw", ",", " ", "Is"}], "]"}], "-", " ", 
     RowBox[{"d", " ", "Is"}], "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "Is"}], "  ", "-", " ", 
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "intermediate"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}], "  ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Iw"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], 
      "Iw"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDsdt", " ", "=", 
    RowBox[{
     RowBox[{"B", "[", 
      RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
     "  ", "-", " ", 
     RowBox[{"\[Mu]", " ", "Ds"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}]}]}], ";"}], 
  "  ", 
  RowBox[{"(*", 
   RowBox[{"Susceptible", " ", "definitive"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDwdt", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w", ",", " ", "Iw"}], "]"}], " ", "Ds"}], "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], " ", "Dw"}]}]}], 
   " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "definitive"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dWdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fw", " ", "Dw"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "W"}], " ", "-", " ", 
    RowBox[{"\[Gamma]w", " ", "W", " ", "Is"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.825656713077812*^9, 3.825656819315256*^9}, {
   3.8256675673352013`*^9, 3.825667571392377*^9}, {3.8256676047331753`*^9, 
   3.8256679949825287`*^9}, 3.825668657319312*^9, {3.825669024736739*^9, 
   3.825669107703614*^9}, {3.825669201205226*^9, 3.825669201481333*^9}, {
   3.825669256379244*^9, 3.82566950377395*^9}, {3.825669536259808*^9, 
   3.8256696344884987`*^9}, {3.8256696689148417`*^9, 3.825670143310657*^9}, {
   3.825670345459824*^9, 3.825670438958109*^9}, {3.825670488620307*^9, 
   3.825670543829121*^9}, {3.825670663648823*^9, 3.825670761696919*^9}, {
   3.825671013629569*^9, 3.825671139741517*^9}, {3.825742172557213*^9, 
   3.8257421729950933`*^9}, {3.825742207420051*^9, 3.8257422478914013`*^9}, {
   3.82574345173761*^9, 3.82574350922976*^9}, {3.825760175997797*^9, 
   3.82576018688303*^9}, {3.8257606621022377`*^9, 3.825760675998103*^9}, 
   3.8257607945724363`*^9, {3.825760904709169*^9, 3.82576091270079*^9}, {
   3.8257617801084433`*^9, 3.8257617912632027`*^9}, {3.8257621523527527`*^9, 
   3.825762165308137*^9}, {3.825762201784202*^9, 3.825762208487948*^9}, {
   3.825762251027261*^9, 3.825762354682111*^9}, 3.8257625163120213`*^9, {
   3.825762659025866*^9, 3.825762659901341*^9}, {3.825762902484415*^9, 
   3.825762910346539*^9}, {3.8257634961592484`*^9, 3.825763496692479*^9}, {
   3.825766757419752*^9, 3.825766767356141*^9}, {3.825766833920692*^9, 
   3.825766853096877*^9}, {3.825766897662359*^9, 3.8257668980739517`*^9}, {
   3.8257682274738283`*^9, 3.825768355004142*^9}, {3.825996664752124*^9, 
   3.825996692179337*^9}, {3.82626863451892*^9, 3.826268767236582*^9}, {
   3.8262689370700693`*^9, 3.826268937767343*^9}, {3.826268980930978*^9, 
   3.8262689879990473`*^9}, {3.82626904542638*^9, 3.826269047123454*^9}, {
   3.826271241094585*^9, 3.82627124404462*^9}, {3.827819518344512*^9, 
   3.827819536797364*^9}, {3.8278209102469873`*^9, 3.8278212216057177`*^9}, {
   3.827821911512141*^9, 3.827821969572859*^9}, {3.8278221978352613`*^9, 
   3.8278222272418337`*^9}, {3.827822510921095*^9, 3.827822511765992*^9}, {
   3.827823318435688*^9, 3.827823330286881*^9}, {3.827823839514995*^9, 
   3.8278238647577143`*^9}, {3.8280753879957237`*^9, 3.82807539054478*^9}, {
   3.82807610064509*^9, 3.828076102177025*^9}, {3.8280786078866158`*^9, 
   3.82807862016877*^9}, {3.829382110716173*^9, 3.829382222814026*^9}, {
   3.829382282426675*^9, 3.829382339462714*^9}, {3.82938254818421*^9, 
   3.829382549728499*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"func0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827822459562306*^9, 3.827822484038743*^9}, {
   3.82930004587323*^9, 3.829300078603044*^9}, 3.829300337544739*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"func1", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", "[", 
       RowBox[{"Iw", ",", " ", "Is"}], "]"}], " ", "\[Rule]", " ", 
      RowBox[{"r", 
       RowBox[{"(", 
        RowBox[{"1", "-", " ", 
         FractionBox[
          RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]0", "[", 
       RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Rho]", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"\[CapitalPi]1", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}], "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Rho]", " ", "+", " ", "\[Beta]w"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{"Ds", ",", " ", "Dw", ",", " ", "Is", ",", " ", "Iw"}], "]"}], 
      "\[Rule]", " ", 
      RowBox[{"\[Rho]", " ", "c", " ", 
       RowBox[{"(", 
        RowBox[{"Ds", " ", "+", " ", "Dw"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Lambda]", "[", 
       RowBox[{"\[Beta]w_", ",", " ", "Iw_"}], "]"}], "\[Rule]", " ", 
      RowBox[{"\[Beta]w", " ", "Iw"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829288616107027*^9, 3.8292886259950533`*^9}, {
  3.829289279204534*^9, 3.829289283627792*^9}, {3.82928933576853*^9, 
  3.829289352141361*^9}, {3.8292897198397703`*^9, 3.8292897211117163`*^9}, {
  3.829300310231729*^9, 3.829300322388371*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"var", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw", ",", " ", "W"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Ds", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"W", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sys", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "dIsdt", ",", " ", "dIwdt", ",", " ", "dDsdt", ",", " ", "dDwdt", ",", 
     " ", "dWdt"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8278235561211777`*^9, 3.8278235895996933`*^9}, {
  3.827823939807645*^9, 3.827823944103592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func0"}], "/.", 
     RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.82782571391743*^9, {3.828076226269494*^9, 3.8280762269740458`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], "\[Rho]"]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.827825716047372*^9, 3.8280754028129396`*^9, 3.828076111650443*^9, 
   3.828076227621562*^9, 3.828076300563541*^9, 3.828078712930681*^9, 
   3.828086164640039*^9, 3.8292880769844103`*^9, {3.829300326235674*^9, 
   3.82930034116356*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solW0Func1", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"sys", " ", "\[Equal]", " ", "0"}], "]"}], "/.", "func1"}], "/.", 
      RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Is", ",", " ", "Iw", ",", " ", "Ds", ",", " ", "Dw"}], "}"}]}],
     "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.829289374739566*^9, 3.829289377514204*^9}, {
  3.829289628424356*^9, 3.829289632462536*^9}, {3.829290198591793*^9, 
  3.829290200130179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"\[CapitalKappa]", "-", 
       FractionBox[
        RowBox[{"d", " ", "\[CapitalKappa]"}], "r"]}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      FractionBox["\[Mu]", 
       RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
     RowBox[{"Iw", "\[Rule]", "0"}], ",", 
     RowBox[{"Ds", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", "\[Mu]"}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]", " ",
          "\[Rho]"}]}], 
       RowBox[{"c", " ", "\[CapitalKappa]", " ", 
        SuperscriptBox["\[Rho]", "2"]}]]}], ",", 
     RowBox[{"Dw", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.829289379669998*^9, 3.829289633821643*^9, 3.829289727885021*^9, 
   3.829290200649737*^9, {3.8293003277196293`*^9, 3.829300342558381*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stability of the equilibrium", "Subchapter",
 CellChangeTimes->{{3.828075643251759*^9, 3.8280756472434187`*^9}}],

Cell[CellGroupData[{

Cell["Linear functions", "Section",
 CellChangeTimes->{{3.82928999027208*^9, 3.82928999320476*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", "r", ",", " ", "0", ",", 
       " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", "  ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8280756685967827`*^9, 3.8280758314732227`*^9}, {
   3.8280758639554453`*^9, 3.828075892701819*^9}, {3.828075940412252*^9, 
   3.8280759898078003`*^9}, {3.828078724139042*^9, 3.828078752078988*^9}, 
   3.829290027566111*^9, {3.829300130500415*^9, 3.82930016017767*^9}, {
   3.8293002159920588`*^9, 3.82930022248534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.82807600588461*^9, 3.82807600787519*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "+", "r", "-", 
       RowBox[{"W", " ", "\[Gamma]w"}], "-", 
       RowBox[{"\[CapitalPi]0", "[", 
        RowBox[{"Ds", ",", "Dw"}], "]"}]}], "r", "0", "0", "0"},
     {
      RowBox[{"W", " ", "\[Gamma]w"}], 
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{"\[CapitalPi]1", "[", 
        RowBox[{"Ds", ",", "Dw", ",", "\[Beta]w"}], "]"}]}], "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", "\[Mu]", "+", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}], "0"},
     {"0", "0", 
      RowBox[{"Iw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "0", "0", "fw", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.828076008300259*^9, 3.8280761179662313`*^9, 
  3.828078755173183*^9, 3.829300226482354*^9, 3.829300351878982*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A", ".", "var"}], " ", "/.", "func0"}], ")"}], "\[Equal]", " ", 
   
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func0"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.828076010664349*^9, 3.828076033593799*^9}, {
  3.829300240583639*^9, 3.829300247307254*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.828076016562026*^9, 3.8280760341117353`*^9}, 
   3.828076120029529*^9, 3.828076306539208*^9, 3.828078757851067*^9, {
   3.8293002276825333`*^9, 3.829300247807722*^9}, 3.82930035279112*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Aeigens", " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"A", "/.", "func0"}], "]"}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.828076310764051*^9, 3.828076351937457*^9}, {
   3.828078760409507*^9, 3.828078764213051*^9}, 3.829300257241005*^9, {
   3.829300738466364*^9, 3.829300765221094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076332256621*^9, 3.828076411850637*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Delta]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "+", "r"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", 
   RowBox[{"-", "\[Mu]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828076339826378*^9, 3.828076412505925*^9}, 
   3.8280787697360687`*^9, 3.828086172676084*^9, 3.829288085095286*^9, 
   3.829300269150385*^9, 3.829300355076603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Aeigens", "/.", 
     RowBox[{"solW0", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"d", ">", "0"}], ",", 
      RowBox[{"\[Mu]", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[Rho]", ">", "0"}], ",", " ", 
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"\[Beta]w", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828076438838669*^9, 3.828076629434969*^9}, {
  3.828076660323764*^9, 3.828076692435136*^9}, {3.829300361942924*^9, 
  3.829300364001012*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "\[Rho]"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"r", " ", "\[Beta]w"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "d"}], " ", "\[Beta]w"}], "+", 
        RowBox[{"r", " ", "\[Beta]w"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}], " ", "\[Rho]"}]}], "]"}]}], 
     RowBox[{"2", " ", "\[Rho]"}]]}], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            RowBox[{"d", " ", "\[Beta]w"}], "-", 
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "-", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}], "\[Rho]"], 
          RowBox[{
           RowBox[{"d", " ", "\[Beta]w"}], ">", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", "\[Rho]"}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]w", "+", "\[Rho]"}], ")"}]}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.828076443588296*^9, 3.828076448866023*^9}, {
   3.828076491595972*^9, 3.828076509364583*^9}, {3.8280765436147547`*^9, 
   3.828076629902029*^9}, 3.828076660810093*^9, 3.828076692932027*^9, 
   3.828078772766087*^9, 3.828086177404166*^9, 3.829288089287722*^9, 
   3.829300275948649*^9, {3.8293003581064453`*^9, 3.829300366801404*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Logistic growth intermediate hosts", "Section",
 CellChangeTimes->{{3.8292900059177437`*^9, 3.82929001400443*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"r", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], 
          ")"}]}], " ", "-", " ", "d", " ", "-", " ", 
        RowBox[{"\[CapitalPi]0", "[", 
         RowBox[{"Ds", ",", " ", "Dw"}], "]"}], "-", "  ", 
        RowBox[{"\[Gamma]w", " ", "W"}]}], ",", " ", 
       RowBox[{"r", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"Is", " ", "+", " ", "Iw"}], "\[CapitalKappa]"]}], ")"}]}],
        ",", " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Gamma]w", " ", "W"}], ",", " ", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{"(", 
          RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}]}], "-", " ", 
        RowBox[{"\[CapitalPi]1", "[", 
         RowBox[{"Ds", ",", " ", "Dw", ",", " ", "\[Beta]w"}], "]"}]}], ",", 
       " ", "0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
        " ", "-", " ", "\[Mu]", " ", "-", " ", 
        RowBox[{"\[Beta]w", " ", "Iw"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Is", " ", "+", " ", "Iw"}], ")"}], "\[Rho]", " ", "c"}], 
       ",", " ", "0"}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{"\[Beta]w", " ", "Iw"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}]}], ",", " ", 
       "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "fw", " ", ",", " ", 
       RowBox[{
        RowBox[{"-", " ", "\[Delta]"}], "-", 
        RowBox[{"\[Gamma]w", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.829290041468392*^9, 3.829290083293619*^9}, 
   3.8292901573628817`*^9, {3.829300399906165*^9, 3.829300442929491*^9}, {
   3.829300483360271*^9, 3.829300508729198*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AFunc1", "/.", "func1"}], ")"}], ".", "var"}], " ", "\[Equal]", 
   " ", 
   RowBox[{"(", 
    RowBox[{"sys", "/.", "func1"}], ")"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.829290095052435*^9, 3.829290098954587*^9}, {
  3.829300515668148*^9, 3.829300521210037*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.829290099646719*^9, 3.829290159160308*^9, 
  3.829300521645545*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AeigensFunc1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{"AFunc1", "/.", "func1"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8292901719851007`*^9, 3.8292901810399313`*^9}, {
   3.82929074163208*^9, 3.829290752355545*^9}, 3.8293005303519163`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "Is"}], " ", "\[Gamma]w"}], "-", "\[Delta]"}], ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[CapitalKappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Is", " ", "r"}], "+", 
       RowBox[{"Iw", " ", "r"}], "-", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], "2"], " ", 
           SuperscriptBox["r", "2"]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"Is", "+", "Iw"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
             RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], " ", 
           "\[CapitalKappa]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "-", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"Ds", "+", "Dw"}], ")"}], " ", "\[Beta]w"}], "+", 
                RowBox[{"W", " ", "\[Gamma]w"}]}], ")"}]}]}], ")"}], " ", 
           SuperscriptBox["\[CapitalKappa]", "2"]}]}], ")"}]}], "+", 
       RowBox[{"\[CapitalKappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "r", "+", "\[Alpha]", "+", 
          RowBox[{"W", " ", "\[Gamma]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Beta]w", "+", 
             RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "-", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
         "\[Sigma]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "+", 
      RowBox[{"c", " ", "Is", " ", "\[Rho]"}], "+", 
      RowBox[{"c", " ", "Iw", " ", "\[Rho]"}], "-", "\[Sigma]", "+", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], "2"],
         "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"(", 
             RowBox[{"Is", "+", "Iw"}], ")"}], " ", "\[Rho]"}]}], ")"}], " ", 
         "\[Sigma]"}], "+", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292907421726227`*^9, 3.829290763056777*^9}, 
   3.8292919693355*^9, 3.829300538962901*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
         "+", 
         RowBox[{"r", " ", "\[Sigma]"}]}], ")"}], ">", "0"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.829290252923359*^9, 3.829290287663924*^9}, {
  3.8292910415729322`*^9, 3.829291069670826*^9}, {3.829291112620542*^9, 
  3.829291130398438*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", "r"}], ")"}], " ", "\[Gamma]w", " ", 
      "\[CapitalKappa]"}], "r"]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], "-", "\[Alpha]"}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"c", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"d", "-", "r"}], ")"}], " ", "\[CapitalKappa]"}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]"}], ")"}]}], "+", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"c", " ", "p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
        "+", 
        RowBox[{"r", " ", "\[Sigma]"}]}], "]"}]}], 
     RowBox[{"2", " ", "r"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"c", " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], "-", 
     
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]"}], ")"}]}], "+", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"c", " ", "p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[CapitalKappa]"}], 
       "+", 
       RowBox[{"r", " ", "\[Sigma]"}]}], "]"}]}], 
    RowBox[{"2", " ", "r"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.829290258431539*^9, 3.829290289447657*^9}, {
  3.829291042355114*^9, 3.8292910703968067`*^9}, {3.82929111571244*^9, 
  3.8292911317045403`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"AeigensFunc1", "/.", 
     RowBox[{"solW0Func1", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", 
    RowBox[{"W", "\[Rule]", " ", "0"}]}], ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "0"}], ",", " ", 
      RowBox[{"\[Sigma]", ">", "0"}], ",", " ", 
      RowBox[{"\[CapitalKappa]", ">", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]"}], ">", "0"}], ",", " ", 
      RowBox[{"r", ">", "d"}], ",", "  ", 
      RowBox[{"c", ">", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Mu]", "+", "\[Sigma]"}], ">", "0"}], ",", " ", 
      RowBox[{"p", ">", "0"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829291289871559*^9, 3.829291290239362*^9}, {
  3.8292916950073843`*^9, 3.829291720881555*^9}, {3.829291758744101*^9, 
  3.8292917610597973`*^9}, {3.829291796461124*^9, 3.829291823491487*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Delta]"}], "-", 
    FractionBox[
     RowBox[{"\[Gamma]w", " ", "\[Mu]"}], 
     RowBox[{"c", " ", "p"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"c", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}],
        " ", "\[CapitalKappa]"}], "-", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}], "+", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], 
            ")"}], " ", "\[CapitalKappa]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
        "2"]]}], 
     RowBox[{"2", " ", "c", " ", 
      SuperscriptBox["p", "2"], " ", "\[CapitalKappa]"}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], ")"}], 
      " ", "\[CapitalKappa]"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"(", 
       RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}], "+", 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", "r"}], ")"}], " ", "\[Beta]w"}]}], 
           ")"}], " ", "\[CapitalKappa]"}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"p", "+", "\[Beta]w"}], ")"}], " ", "\[Mu]"}]}], ")"}], 
       "2"]]}], 
    RowBox[{"2", " ", "c", " ", 
     SuperscriptBox["p", "2"], " ", "\[CapitalKappa]"}]], ",", 
   RowBox[{
    RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8292913245970497`*^9, 3.829291725907846*^9, 3.8292917660872*^9, {
   3.8292918006740217`*^9, 3.829291828360304*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"makeSystem", "[", 
    RowBox[{"var_", ",", " ", "vart_", ",", " ", "sys_"}], "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"syst", " ", "=", " ", 
      RowBox[{"sys", "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"var", "\[Rule]", " ", "vart"}], "]"}]}]}], ";", " ", 
     RowBox[{"sysfull", " ", "=", " ", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"vart", ",", " ", "t"}], "]"}], " ", "\[Equal]", " ", 
        "syst"}], "]"}]}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278227166917267`*^9, 3.827822753230462*^9}, {
   3.827822922653831*^9, 3.827822930881901*^9}, {3.827822982773337*^9, 
   3.827823037108107*^9}, 3.827823101237512*^9, 3.82782326171789*^9, 
   3.8278233565488863`*^9, {3.829292626735865*^9, 3.829292643598576*^9}, {
   3.829292689348095*^9, 3.8292926898161993`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.827821229838979*^9, 3.827821235402285*^9}, {
  3.827822320596498*^9, 3.827822326849743*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sysFunc0", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func0"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sysFunc1", " ", "=", " ", 
   RowBox[{"makeSystem", "[", 
    RowBox[{"var", ",", "vart", " ", ",", "  ", 
     RowBox[{"sys", "/.", "func1"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827822569148403*^9, 3.827822704174527*^9}, {
   3.82782318211902*^9, 3.827823191092559*^9}, {3.827823394132936*^9, 
   3.827823503736817*^9}, {3.827823561478395*^9, 3.8278236008621883`*^9}, 
   3.827823822161427*^9, 3.8278239657774*^9, {3.829289669271122*^9, 
   3.829289678688631*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"prEco", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", " ", "\[Rule]", " ", "1.2"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "2.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "1.9"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8278223341819477`*^9, 3.827822444366211*^9}, {
   3.827822502232439*^9, 3.8278225649661427`*^9}, {3.827825386494244*^9, 
   3.827825410863459*^9}, {3.827825453929977*^9, 3.827825454403831*^9}, {
   3.827825522729954*^9, 3.827825550524976*^9}, 3.8278256021678753`*^9, {
   3.827825650036694*^9, 3.827825650806609*^9}, {3.8280740126142387`*^9, 
   3.828074014681838*^9}, {3.828074290887507*^9, 3.828074291596635*^9}, {
   3.82807437954491*^9, 3.828074379943386*^9}, {3.828074423685811*^9, 
   3.8280744257790956`*^9}, {3.8280744969747133`*^9, 3.828074497466743*^9}, {
   3.828074529108124*^9, 3.828074551945829*^9}, {3.828074599895774*^9, 
   3.828074621473525*^9}, {3.82807468419691*^9, 3.828074700019969*^9}, {
   3.8280747397753277`*^9, 3.8280747404372063`*^9}, {3.8280866177014112`*^9, 
   3.828086617870452*^9}, {3.8280867505244417`*^9, 3.828086751093014*^9}, {
   3.829288379414507*^9, 3.829288379901534*^9}, {3.829288433156987*^9, 
   3.829288433462543*^9}, 3.829288506903331*^9, {3.829289683788238*^9, 
   3.8292897118374643`*^9}, {3.829290329283586*^9, 3.829290329519761*^9}, 
   3.829290393474928*^9, 3.829290916726027*^9, {3.829290975953576*^9, 
   3.8292909848376493`*^9}, {3.829297048005028*^9, 3.8292970485160303`*^9}, {
   3.829300549003931*^9, 3.829300556258101*^9}, {3.8293012617683773`*^9, 
   3.829301262999346*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc0", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "30"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"sys", "/.", "func0"}], "/.", "prEco"}], ")"}], " ", 
      "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func0", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc0", "/.", "prEco"}], ",", " ", "initFunc0"}], "]"}], 
    ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.827822957647459*^9, 3.827822969409224*^9}, {
   3.827823644111948*^9, 3.827823657623238*^9}, 3.827823709992982*^9, {
   3.827823999487968*^9, 3.827824025530137*^9}, {3.8278240605321407`*^9, 
   3.827824067947177*^9}, {3.828074564712682*^9, 3.8280745652597237`*^9}, {
   3.8280747017880707`*^9, 3.828074702577971*^9}, {3.828074773328237*^9, 
   3.828074774978272*^9}, {3.828074964773364*^9, 3.828074977832465*^9}, {
   3.828086197642436*^9, 3.8280862131636887`*^9}, {3.829289817759626*^9, 
   3.829289821771514*^9}, {3.8292924292035313`*^9, 3.829292435207684*^9}, {
   3.829296644229384*^9, 3.829296671808436*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(t\\)\[NoBreak] == \
\[NoBreak]\\!\\(55.156701613104595`\\)\[NoBreak], step size is effectively \
zero; singularity or stiff system suspected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NDSolve/ndsz\\\", ButtonNote -> \
\\\"NDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.829301265150618*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAvJkvc2Ferz53qgsgV/8jQB/6FAHa
xew/PLVUkbX9JT+Zbgieovv9P5vSNEHQqCM/e3WrleBFBkCqLhKOTBhAP55M
6RpfaQ1Akky/nRT/Vz/lMQ024ZMSQIkpBMkcDmw/MOCZGu0wFkAHQ6//cl94
P4AuIGVrGxpAqF+7LRJ3gz9KyfFOofMdQGJR+hLiRI0/ZcNbutjEIEBdsKEj
ZRWVPydyOwCatiJAy4aTKrAqnz9EMhVkSIckQDmh2HA1aqY/npiUl9JOJkDw
cuzaCgCwP/rOEP4VPShAiLhumbaKtz+xFoeCRgoqQGoLJ9d84MA/ai76OTD+
K0AfSnjK2fDIP2DsEsH16C1Aw0BPVTVM0j+xuyVmqLIvQAEOR4zDKdo/gq0a
H4rRMEBMk19ugkfjP9iFH5o2uTFAmLDYRE6w6z8vxqKuP7QyQC3ePK9mfvQ/
pdn4qraqM0BTm2eN9x7+P8j1SzakkDRAEmEVhRqSBUDseR1b7ok1QGHTV2MW
2A9AvgbsDq9yNkAVV7mO1OcWQK5mjardVjdAQs0Uq9xbIECfLq3faE44QFAt
7xGNFShAyknPG+K2OEDABxlMotEsQNpPxvk=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAJeRG7PqyO0DABxlMotEsQAhYPhvY
CjxA8xDZy2Yxsz911CeJdwM9QHxqJ5EDhWI/j1kOho3rPUAylE1I4i9dP8ix
x2oRzz5AUZ4cXrK3Yj8Ccv/o8cU/QFozc2R3+Wo/dB0aeyRWQEDsiey/wERz
P+i1c07+0kBAkwS6E2xyfD+z0ktpk0dBQN4iGJsseYQ/DVkNeN+5QUBfBlkB
C0ONP2gTjtPZNUJAALAzWNuNlT8ZUo12j6lCQPXXhzmC8Z4/y8RLZvMmQ0Cz
+r8Bw+SmPwyh80kOokNALDjHtUDRsD+kARp15BREQMzmpEzWE7g/PJb/7GiR
REAB+PuJ7MPBPyuvY6yoBUVAc32WaROMyT+pMbFfn3dFQPYf4vf3PNI/KOi9
X0TzRUDvRgaCH9faP/0iSaekZkZAnO44oAA/4z/TkZM7s+NGQHTLq8rvcuw/
OGrHw3heR0BnlWUgZeD0P/TGeZP50EdAL60dMJ7b/T+wV+uvKE1IQG0zT8Dh
AQZAw2zbExPBSEAlHbr3SZ0PQNe1isSrPklAVIS827VnF0B6aCNp+7lJQO8F
PdxHNCFAdJ86VQYtSkAb4oOorqUoQFuRfsRQWUpAwAcZTKLRLECCo9W8
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 55.156701613104595`}, {0., 
                    14.409441354804471`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAvJkvc2Ferz53qgsgV/8jQB/6FAHa
xew/PLVUkbX9JT+Zbgieovv9P5vSNEHQqCM/e3WrleBFBkCqLhKOTBhAP55M
6RpfaQ1Akky/nRT/Vz/lMQ024ZMSQIkpBMkcDmw/MOCZGu0wFkAHQ6//cl94
P4AuIGVrGxpAqF+7LRJ3gz9KyfFOofMdQGJR+hLiRI0/ZcNbutjEIEBdsKEj
ZRWVPydyOwCatiJAy4aTKrAqnz9EMhVkSIckQDmh2HA1aqY/npiUl9JOJkDw
cuzaCgCwP/rOEP4VPShAiLhumbaKtz+xFoeCRgoqQGoLJ9d84MA/ai76OTD+
K0AfSnjK2fDIP2DsEsH16C1Aw0BPVTVM0j+xuyVmqLIvQAEOR4zDKdo/gq0a
H4rRMEBMk19ugkfjP9iFH5o2uTFAmLDYRE6w6z8vxqKuP7QyQC3ePK9mfvQ/
pdn4qraqM0BTm2eN9x7+P8j1SzakkDRAEmEVhRqSBUDseR1b7ok1QGHTV2MW
2A9AvgbsDq9yNkAVV7mO1OcWQK5mjardVjdAQs0Uq9xbIECfLq3faE44QFAt
7xGNFShAyknPG+K2OEDABxlMotEsQNpPxvk=
                    "]], 
                    LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAJeRG7PqyO0DABxlMotEsQAhYPhvY
CjxA8xDZy2Yxsz911CeJdwM9QHxqJ5EDhWI/j1kOho3rPUAylE1I4i9dP8ix
x2oRzz5AUZ4cXrK3Yj8Ccv/o8cU/QFozc2R3+Wo/dB0aeyRWQEDsiey/wERz
P+i1c07+0kBAkwS6E2xyfD+z0ktpk0dBQN4iGJsseYQ/DVkNeN+5QUBfBlkB
C0ONP2gTjtPZNUJAALAzWNuNlT8ZUo12j6lCQPXXhzmC8Z4/y8RLZvMmQ0Cz
+r8Bw+SmPwyh80kOokNALDjHtUDRsD+kARp15BREQMzmpEzWE7g/PJb/7GiR
REAB+PuJ7MPBPyuvY6yoBUVAc32WaROMyT+pMbFfn3dFQPYf4vf3PNI/KOi9
X0TzRUDvRgaCH9faP/0iSaekZkZAnO44oAA/4z/TkZM7s+NGQHTLq8rvcuw/
OGrHw3heR0BnlWUgZeD0P/TGeZP50EdAL60dMJ7b/T+wV+uvKE1IQG0zT8Dh
AQZAw2zbExPBSEAlHbr3SZ0PQNe1isSrPklAVIS827VnF0B6aCNp+7lJQO8F
PdxHNCFAdJ86VQYtSkAb4oOorqUoQFuRfsRQWUpAwAcZTKLRLECCo9W8
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 55.156701613104595`}, {0., 
                    14.409441354804471`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAwb6xZWMmIkAyqZgs5cD/PidyOwCa
tiJARIuYIjlN9T5EMhVkSIckQJ8EWH7KdeA+npiUl9JOJkCucMRaNX3JPvrO
EP4VPShA7013uyr8sT6xFoeCRgoqQHEhBkAI/Jo+ai76OTD+K0Ac2gfYHI+C
PmDsEsH16C1AzloZDfLvaT6xuyVmqLIvQA2J3WaTblM+gq0aH4rRMEAwNXaO
vsU6PtiFH5o2uTFAXF326C/JIz4vxqKuP7QyQIRa4FR25go+pdn4qraqM0Al
sOIoXqjyPcj1SzakkDRAIvz2C05v3D3seR1b7ok1QKR5cVaYZls+vgbsDq9y
NkAfi8z6lfJFvq5mjardVjdAMqN25z0fBz6fLq3faE44QLqe/EKphkA+Pv/J
o2o1OUBSf0wu+GBCvt43ZQHJLzpApvbnZBMgAD6cQ9NGlSU7QFLMdqTkjOY9
CFg+G9gKPEAqXw9zz4WlPXXUJ4l3Az1AO0a0A9SJeD2PWQ6Gjes9QPZAUegp
FXM9yLHHahHPPkBxUDcLBkxsPQJy/+jxxT9AF3vix30WYD10HRp7JFZAQHjP
sYv1KFA96LVzTv7SQECKaNEHX3g7PbPSS2mTR0FA8N8RI7UmJz0NWQ1437lB
QC9uOqdPDhM9aBOO09k1QkCslhjuITH8PBlSjXaPqUJAiqHs09zR5TzLxEtm
8yZDQJvzUyfuus48DKHzSQ6iQ0BcXm9lj8i1PKQBGnXkFERAWkv+hwuLoDw8
lv/saJFEQE6UhpdM9IU8K69jrKgFRUB6OcSGBJdePKkxsV+fd0VAorrPpMT5
U7wo6L1fRPNFQBCniYsqFXe8/SJJp6RmRkC5NWWvDV+jPNORkzuz40ZArczV
N6u15Dw4asfDeF5HQOjwDoJ57g499MZ5k/nQR0B5qNMx0MNevbBX668oTUhA
KNCLClhIez3DbNsTE8FIQNbt8mQ00CE+17WKxKs+SUDgb6rYMDLjvXpoI2n7
uUlAwGtN8miFkL10nzpVBi1KQMk+fr2xBUU+bgoRjr+pSkCcVHvU6rJGPr/5
ZQ40HktAMKaN+XVKAb7CIG4ONB5LQDKpmCzlwP8+pSh2ug==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.0220148138867453`*^-8, 
                    0.000030282494469493697`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAwb6xZWMmIkAyqZgs5cD/PidyOwCa
tiJARIuYIjlN9T5EMhVkSIckQJ8EWH7KdeA+npiUl9JOJkCucMRaNX3JPvrO
EP4VPShA7013uyr8sT6xFoeCRgoqQHEhBkAI/Jo+ai76OTD+K0Ac2gfYHI+C
PmDsEsH16C1AzloZDfLvaT6xuyVmqLIvQA2J3WaTblM+gq0aH4rRMEAwNXaO
vsU6PtiFH5o2uTFAXF326C/JIz4vxqKuP7QyQIRa4FR25go+pdn4qraqM0Al
sOIoXqjyPcj1SzakkDRAIvz2C05v3D3seR1b7ok1QKR5cVaYZls+vgbsDq9y
NkAfi8z6lfJFvq5mjardVjdAMqN25z0fBz6fLq3faE44QLqe/EKphkA+Pv/J
o2o1OUBSf0wu+GBCvt43ZQHJLzpApvbnZBMgAD6cQ9NGlSU7QFLMdqTkjOY9
CFg+G9gKPEAqXw9zz4WlPXXUJ4l3Az1AO0a0A9SJeD2PWQ6Gjes9QPZAUegp
FXM9yLHHahHPPkBxUDcLBkxsPQJy/+jxxT9AF3vix30WYD10HRp7JFZAQHjP
sYv1KFA96LVzTv7SQECKaNEHX3g7PbPSS2mTR0FA8N8RI7UmJz0NWQ1437lB
QC9uOqdPDhM9aBOO09k1QkCslhjuITH8PBlSjXaPqUJAiqHs09zR5TzLxEtm
8yZDQJvzUyfuus48DKHzSQ6iQ0BcXm9lj8i1PKQBGnXkFERAWkv+hwuLoDw8
lv/saJFEQE6UhpdM9IU8K69jrKgFRUB6OcSGBJdePKkxsV+fd0VAorrPpMT5
U7wo6L1fRPNFQBCniYsqFXe8/SJJp6RmRkC5NWWvDV+jPNORkzuz40ZArczV
N6u15Dw4asfDeF5HQOjwDoJ57g499MZ5k/nQR0B5qNMx0MNevbBX668oTUhA
KNCLClhIez3DbNsTE8FIQNbt8mQ00CE+17WKxKs+SUDgb6rYMDLjvXpoI2n7
uUlAwGtN8miFkL10nzpVBi1KQMk+fr2xBUU+bgoRjr+pSkCcVHvU6rJGPr/5
ZQ40HktAMKaN+XVKAb7CIG4ONB5LQDKpmCzlwP8+pSh2ug==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.0220148138867453`*^-8, 
                    0.000030282494469493697`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA0P2c5fw4CkAitPk0mXhmP55M6Rpf
aQ1AjrOQIOclTj/lMQ024ZMSQHD0J1zCSiM/MOCZGu0wFkC8L0HSAA38PoAu
IGVrGxpAETwb8kPQ0T5KyfFOofMdQHR+TZAFoac+ZcNbutjEIEBxRkaepeSB
PidyOwCatiJANRYCq5r6Vz5EMhVkSIckQG8549rnijI+npiUl9JOJkAyblor
sqgOPvrOEP4VPShAiTjyY2EB5z2xFoeCRgoqQCWrTKqLRsQ9ai76OTD+K0By
ItXHtpSgPWDsEsH16C1ArJnlhlszfT2xuyVmqLIvQDDoCYngN149gq0aH4rR
MEDo9kyB1v09PdiFH5o2uTFAmSjx8LruIT0vxqKuP7QyQKr6d2v6CwY9pdn4
qraqM0BXvMy+V9vvPMj1SzakkDRAAXDBcq8p4DzseR1b7ok1QBpOJuGSltg8
vgbsDq9yNkBP0M2H9+7hPK5mjardVjdAfANdcvxX/zyfLq3faE44QDGal+oa
FkA9Pv/Jo2o1OUCeSPtEVDWoPd43ZQHJLzpAKDVGwgh0ZT6OfQVJ2mo6QCK0
+TSZeGY/l83FqA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAIthuir0wQEAitPk0mXhmP3QdGnsk
VkBAYmxAVLg3Uj/otXNO/tJAQC9rTz0s5yY/s9JLaZNHQUC2nnxLD0sAPw1Z
DXjfuUFAboRACj0B2D5oE47T2TVCQPLg8kZMx64+GVKNdo+pQkAs7SJd0XWG
PsvES2bzJkNApq+v22IrWz4MofNJDqJDQMaLvtmFWTA+pAEadeQUREDu4ktN
mqT1PTyW/+xokURA35vAkQrO7T0rr2OsqAVFQO4Kg1cuHg4+qTGxX593RUDp
SHJL+M0APijovV9E80VALpK5P0vn6D39IkmnpGZGQBfVLrgxk9s905GTO7Pj
RkBg20zsX++tPThqx8N4XkdA6l2Hpkt+sb30xnmT+dBHQMJ+B6s4Clo9sFfr
ryhNSEAO3xVGJ89rvcNs2xMTwUhAp1eU6m2KdL3XtYrEqz5JQKcFV+SrI3+9
emgjafu5SUBvQHdCr/CgvXSfOlUGLUpAQFcJ/++z4L1uChGOv6lKQKL1oZb0
mle+v/llDjQeS0A0ZEBa8kMOv+S6aQ40HktAfeGRPx73Wr9OxcIE
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.0016458316224810803`, 
                    0.0027430527041390077`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA0P2c5fw4CkAitPk0mXhmP55M6Rpf
aQ1AjrOQIOclTj/lMQ024ZMSQHD0J1zCSiM/MOCZGu0wFkC8L0HSAA38PoAu
IGVrGxpAETwb8kPQ0T5KyfFOofMdQHR+TZAFoac+ZcNbutjEIEBxRkaepeSB
PidyOwCatiJANRYCq5r6Vz5EMhVkSIckQG8549rnijI+npiUl9JOJkAyblor
sqgOPvrOEP4VPShAiTjyY2EB5z2xFoeCRgoqQCWrTKqLRsQ9ai76OTD+K0By
ItXHtpSgPWDsEsH16C1ArJnlhlszfT2xuyVmqLIvQDDoCYngN149gq0aH4rR
MEDo9kyB1v09PdiFH5o2uTFAmSjx8LruIT0vxqKuP7QyQKr6d2v6CwY9pdn4
qraqM0BXvMy+V9vvPMj1SzakkDRAAXDBcq8p4DzseR1b7ok1QBpOJuGSltg8
vgbsDq9yNkBP0M2H9+7hPK5mjardVjdAfANdcvxX/zyfLq3faE44QDGal+oa
FkA9Pv/Jo2o1OUCeSPtEVDWoPd43ZQHJLzpAKDVGwgh0ZT6OfQVJ2mo6QCK0
+TSZeGY/l83FqA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAIthuir0wQEAitPk0mXhmP3QdGnsk
VkBAYmxAVLg3Uj/otXNO/tJAQC9rTz0s5yY/s9JLaZNHQUC2nnxLD0sAPw1Z
DXjfuUFAboRACj0B2D5oE47T2TVCQPLg8kZMx64+GVKNdo+pQkAs7SJd0XWG
PsvES2bzJkNApq+v22IrWz4MofNJDqJDQMaLvtmFWTA+pAEadeQUREDu4ktN
mqT1PTyW/+xokURA35vAkQrO7T0rr2OsqAVFQO4Kg1cuHg4+qTGxX593RUDp
SHJL+M0APijovV9E80VALpK5P0vn6D39IkmnpGZGQBfVLrgxk9s905GTO7Pj
RkBg20zsX++tPThqx8N4XkdA6l2Hpkt+sb30xnmT+dBHQMJ+B6s4Clo9sFfr
ryhNSEAO3xVGJ89rvcNs2xMTwUhAp1eU6m2KdL3XtYrEqz5JQKcFV+SrI3+9
emgjafu5SUBvQHdCr/CgvXSfOlUGLUpAQFcJ/++z4L1uChGOv6lKQKL1oZb0
mle+v/llDjQeS0A0ZEBa8kMOv+S6aQ40HktAfeGRPx73Wr9OxcIE
                    
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.0016458316224810803`, 
                    0.0027430527041390077`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAuPH+sr5KIkDu+ChtMzOJPidyOwCa
tiJA0H3FRfNidz5EMhVkSIckQOER/f4tx1A+npiUl9JOJkAVLz1WaT4pPvrO
EP4VPShAa4uP6s6EAD6xFoeCRgoqQKycatBrN9k9ai76OTD+K0BCYEt86vOw
PWDsEsH16C1A2zWNWcqYhj2xuyVmqLIvQIS4GaUYimA9gq0aH4rRMEDTT4ZM
QKM0PdiFH5o2uTFA1awC5N6pDD0vxqKuP7QyQJxyP6siduU8pdn4qraqM0BQ
sfhDPcq8PMj1SzakkDRAeN4r4LBElTzseR1b7ok1QPoUvqW2KWo8vgbsDq9y
NkAkXIN3l/9CPK5mjardVjdAwy+lpkbKGzyfLq3faE44QGyedem7nvE7Pv/J
o2o1OUAYIUwCVrHQO943ZQHJLzpAgFVUN4+pHTycQ9NGlSU7QErqJJsb9CI9
CFg+G9gKPEB244QqvaPtPXXUJ4l3Az1AZty61XW5xz2PWQ6Gjes9QIqvLD+8
MaI9yLHHahHPPkC3kLBRyVJ8PQJy/+jxxT9ADp8FdYLIUj10HRp7JFZAQKw9
SrTSqCs96LVzTv7SQEBpSdinHX0BPbPSS2mTR0FAklkVzhrg2DwNWQ1437lB
QNdXWyJoQbI8aBOO09k1QkAlOF0YgzuHPBlSjXaPqUJAEqwAiHrGYDzLxEtm
8yZDQEePWhal4DM8DKHzSQ6iQ0DDnzsPdwkHPKQBGnXkFERAStRL4Kf9wjs8
lv/saJFEQAyWT4o/uMo7K69jrKgFRUCg6Rgqb+XtO6kxsV+fd0VA5GBhOOtF
4jso6L1fRPNFQNzeaqBsy9M7/SJJp6RmRkC1m73DJgfQO9ORkzuz40ZA1hPV
vnjhwzs4asfDeF5HQJFP8DvfHLO79MZ5k/nQR0AjXEcxlVynu7BX668oTUhA
mypycEUbtDvDbNsTE8FIQPI85Q+hAqs717WKxKs+SUAV6vwzTMV8O3poI2n7
uUlAAPqF0Bzo7zp0nzpVBi1KQAaJWPkRjus7bgoRjr+pSkDIn7r/iD9hPL/5
ZQ40HktALtOj2TN2ND1HBWYONB5LQE1YZOlwPX6+Zlp0ow==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.126527940691285*^-7, 
                    1.8775465678191255`*^-7}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAAuPH+sr5KIkDu+ChtMzOJPidyOwCa
tiJA0H3FRfNidz5EMhVkSIckQOER/f4tx1A+npiUl9JOJkAVLz1WaT4pPvrO
EP4VPShAa4uP6s6EAD6xFoeCRgoqQKycatBrN9k9ai76OTD+K0BCYEt86vOw
PWDsEsH16C1A2zWNWcqYhj2xuyVmqLIvQIS4GaUYimA9gq0aH4rRMEDTT4ZM
QKM0PdiFH5o2uTFA1awC5N6pDD0vxqKuP7QyQJxyP6siduU8pdn4qraqM0BQ
sfhDPcq8PMj1SzakkDRAeN4r4LBElTzseR1b7ok1QPoUvqW2KWo8vgbsDq9y
NkAkXIN3l/9CPK5mjardVjdAwy+lpkbKGzyfLq3faE44QGyedem7nvE7Pv/J
o2o1OUAYIUwCVrHQO943ZQHJLzpAgFVUN4+pHTycQ9NGlSU7QErqJJsb9CI9
CFg+G9gKPEB244QqvaPtPXXUJ4l3Az1AZty61XW5xz2PWQ6Gjes9QIqvLD+8
MaI9yLHHahHPPkC3kLBRyVJ8PQJy/+jxxT9ADp8FdYLIUj10HRp7JFZAQKw9
SrTSqCs96LVzTv7SQEBpSdinHX0BPbPSS2mTR0FAklkVzhrg2DwNWQ1437lB
QNdXWyJoQbI8aBOO09k1QkAlOF0YgzuHPBlSjXaPqUJAEqwAiHrGYDzLxEtm
8yZDQEePWhal4DM8DKHzSQ6iQ0DDnzsPdwkHPKQBGnXkFERAStRL4Kf9wjs8
lv/saJFEQAyWT4o/uMo7K69jrKgFRUCg6Rgqb+XtO6kxsV+fd0VA5GBhOOtF
4jso6L1fRPNFQNzeaqBsy9M7/SJJp6RmRkC1m73DJgfQO9ORkzuz40ZA1hPV
vnjhwzs4asfDeF5HQJFP8DvfHLO79MZ5k/nQR0AjXEcxlVynu7BX668oTUhA
mypycEUbtDvDbNsTE8FIQPI85Q+hAqs717WKxKs+SUAV6vwzTMV8O3poI2n7
uUlAAPqF0Bzo7zp0nzpVBi1KQAaJWPkRjus7bgoRjr+pSkDIn7r/iD9hPL/5
ZQ40HktALtOj2TN2ND1HBWYONB5LQE1YZOlwPX6+Zlp0ow==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-1.126527940691285*^-7, 
                    1.8775465678191255`*^-7}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAATont7nVIIkCcwBnxaXn1PidyOwCa
tiJARcLrreby4z5EMhVkSIckQObPXahXzrs+npiUl9JOJkD6of7nbD2TPvrO
EP4VPShActrpHYRIZT6xFoeCRgoqQMhhe5spiTo+ai76OTD+K0CbtdjtcCkK
PmDsEsH16C1AiLaXaxjW1T2xuyVmqLIvQCQMMwcgB5I9gq0aH4rRMEAsp2ZC
Vqh9vdiFH5o2uTFAvGlQ+i5tQb0vxqKuP7QyQM+1yhg2Olk9pdn4qraqM0BK
2o/IyOtAPcj1SzakkDRAUH41v/fag73seR1b7ok1QGGisUF+R1q+vgbsDq9y
NkAkL6qLKPpHPq5mjardVjdAFAy6W6YzH76fLq3faE44QLBOR0SLjT++Pv/J
o2o1OUC2tHsAb+5CPt43ZQHJLzpARKpkfv75+r2cQ9NGlSU7QL6KRxVbDre9
CFg+G9gKPEDvUOvvzN4HPnXUJ4l3Az1AHP3TJkjABj6PWQ6Gjes9QFGV/Kek
ie49yLHHahHPPkBEwcDfQL3QPQJy/+jxxT9ApjHD+tc0rT10HRp7JFZAQPA0
67otWoo96LVzTv7SQECgm5/YbOhjPbPSS2mTR0FAmqET8p8mQD0NWQ1437lB
QLQKPpQrKRo9aBOO09k1QkAnjFeClNnxPBlSjXaPqUJAUqsKG2JyyjzLxEtm
8yZDQKwNh1H0EZ88DKHzSQ6iQ0DzZO2PxGZwPKQBGnXkFERAoDz36qYlErw8
lv/saJFEQMlqC08B5E08K69jrKgFRUBBCKWJExFxPKkxsV+fd0VAzIxbOOuc
cjwo6L1fRPNFQFyBILBz9IE8/SJJp6RmRkCshC8MgcKpvNORkzuz40ZAC92w
190d6bw4asfDeF5HQIQfJ1groRG99MZ5k/nQR0D0cQcaIPJgPbBX668oTUhA
UMQrMqfrfL3DbNsTE8FIQF7J+r3VtSK+17WKxKs+SUCQiqou2aTiPXpoI2n7
uUlAgOYt78gymL10nzpVBi1KQDrmAU2GWUW+bgoRjr+pSkBcTHpv8e1Gvr/5
ZQ40HktA5otXNbRqBj5jboDHbx5LQCKEj5bmxOm+8F1/zA==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.000012287685153768562`, 
                    0.000020479462426726243`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBQQO+/CFib1JlAgAAADMAAAACAAAATont7nVIIkCcwBnxaXn1PidyOwCa
tiJARcLrreby4z5EMhVkSIckQObPXahXzrs+npiUl9JOJkD6of7nbD2TPvrO
EP4VPShActrpHYRIZT6xFoeCRgoqQMhhe5spiTo+ai76OTD+K0CbtdjtcCkK
PmDsEsH16C1AiLaXaxjW1T2xuyVmqLIvQCQMMwcgB5I9gq0aH4rRMEAsp2ZC
Vqh9vdiFH5o2uTFAvGlQ+i5tQb0vxqKuP7QyQM+1yhg2Olk9pdn4qraqM0BK
2o/IyOtAPcj1SzakkDRAUH41v/fag73seR1b7ok1QGGisUF+R1q+vgbsDq9y
NkAkL6qLKPpHPq5mjardVjdAFAy6W6YzH76fLq3faE44QLBOR0SLjT++Pv/J
o2o1OUC2tHsAb+5CPt43ZQHJLzpARKpkfv75+r2cQ9NGlSU7QL6KRxVbDre9
CFg+G9gKPEDvUOvvzN4HPnXUJ4l3Az1AHP3TJkjABj6PWQ6Gjes9QFGV/Kek
ie49yLHHahHPPkBEwcDfQL3QPQJy/+jxxT9ApjHD+tc0rT10HRp7JFZAQPA0
67otWoo96LVzTv7SQECgm5/YbOhjPbPSS2mTR0FAmqET8p8mQD0NWQ1437lB
QLQKPpQrKRo9aBOO09k1QkAnjFeClNnxPBlSjXaPqUJAUqsKG2JyyjzLxEtm
8yZDQKwNh1H0EZ88DKHzSQ6iQ0DzZO2PxGZwPKQBGnXkFERAoDz36qYlErw8
lv/saJFEQMlqC08B5E08K69jrKgFRUBBCKWJExFxPKkxsV+fd0VAzIxbOOuc
cjwo6L1fRPNFQFyBILBz9IE8/SJJp6RmRkCshC8MgcKpvNORkzuz40ZAC92w
190d6bw4asfDeF5HQIQfJ1groRG99MZ5k/nQR0D0cQcaIPJgPbBX668oTUhA
UMQrMqfrfL3DbNsTE8FIQF7J+r3VtSK+17WKxKs+SUCQiqou2aTiPXpoI2n7
uUlAgOYt78gymL10nzpVBi1KQDrmAU2GWUW+bgoRjr+pSkBcTHpv8e1Gvr/5
ZQ40HktA5otXNbRqBj5jboDHbx5LQCKEj5bmxOm+8F1/zA==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 
                    55.156701613104595`}, {-0.000012287685153768562`, 
                    0.000020479462426726243`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "55.156701613104595`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "InterpolatingFunction[{{0., 55.1567}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.829292429894418*^9, 3.829292435995099*^9}, {
   3.829296646449772*^9, 3.8292966725444393`*^9}, 3.829297050384918*^9, {
   3.829300558433523*^9, 3.829300568780965*^9}, 3.829301265348404*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func0"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", " ", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8280748033473263`*^9, 3.828074834605345*^9}, {
  3.8280749526989317`*^9, 3.828074995235281*^9}, {3.82807615136594*^9, 
  3.828076155194503*^9}, {3.8280862187462473`*^9, 3.8280862195250797`*^9}, {
  3.829301277077961*^9, 3.829301292365621*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
NR4fv9BL4v4HXujO0Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3c4lu8Xt7P3yt577/E+z3PM90VKVrL5WlkhIimSpMiKKEISGUkpZbxv
yKokpJItEUKyyfj5/fVc5zrn/ozznOu+ryPqedbam4KMjMyVmozs/1+xtL2H
BUItaGZXt2MdBSvgQ8vogvwKsXoknO4tKg4nJxXSZPyeYt8uxUl2pfLBAdXb
Y0yprzBlvh89Fd5sYH/3z0kavzdYVl4T/bHHNPCVO7XyoOgtZv9F2E25dg+j
8JBQ2r3ViW2c5PsZ/moVU6xsqNmK/oA1YeY8d/LmMYd1K/V130+YYpjkSCX+
B9ZauDoUVdGHVWk9+aib8x371oYKbBZ9xjQQtUVF6McW5m64ROR8wQZG9Dni
rr7HKFi+FKze+oaJP2Abzbn3FuPVEJkITfiOLVgoLDJdImJKpwNEl6OHscv3
zwtQJddhxpfrPINDR7E1zYi0trhn2OmH5CULvuOYrIPIu2PZlZi2V2mY5tMJ
7EZlvZcVfSnWumFxO7xiEtu5/SQ9ZfABZnnjb23tox8YS39LUIzRfWyQP2dg
pWgK8+TIe+SPz8X+q8atq+b/xDZO21Q2umZhS/CDKzRnGospbZ59ZJKBRX2+
rlWTOYMlnq5dSs++hVH6KJ76c+sXBh7pHBm3b2CpW/2RSjdmseErHzxETiRi
vMlRuUEJc5iuYfBwcuFV7KGgUH1V7DyWGMzBOOp9BVOqefv9d/RvzKW69kQf
ZyxWb3hmR+78Ara0PTrwbP0iZvyFmd8/dBG73eLd0n7yAvbJ94V+eeAS1hdT
M5nHHok57px2nvX9g3HX5a17S0VgYR2xpNuqy1gY2ar19uVz2Ou0/uPqT5ex
mCAV0d+sYdieg+R4v8JfzHbd9PpufwhmKBZ1NqziL4axO9J4XjyLJf1+f8Am
s4Kl8e0Gt2YHYR9fCKY/e7SCMf3pn/o3H4CxXw4ROSm+irlqfKd+HuaPOeDf
1iwXrWJYi67OiOQZrICV2yBdaA0TdWUYLtn3xaa++/Up569hI+eLP8hv+WAy
Dxs9Ph1dx+rNT00YMftgwYHMK8E561hzz5OLDog39kLTI56ZawO7Q2dcHBLv
hW3v17JXZ25g5GLrnDTD/2FoF81DS9ZNbEzr5Fq/8X9YQsZp9cVbm5jybtHX
EaIn9t6x6m0Kwxb2fVyzMNPYE2OROLBRuLGFZfVwoVnfPDDbxZM/P9BsY/ez
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
uzC/tsaAjb+LNhtXsNH/ATNO4FM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3k4Vl8XNc/zPJd5nmfee85+X0NIZU4UEkKU5BdJpqgUkiiRIUmopIiM
ZYhSSSpkJoWSWYbQ5/vrPPvZZ6+71jr73nO3pOcJO28aKioqXwYqqv+vUlc3
7+ZINKLNDvUORqpVvOvkfeZA31x8Wpw3ouP2PLYdVbmq4PsYr+zqEOpLnMb/
6Jqt2ZOrsFTh51dnhqew061ZWwbfF/jFRy/G63smcbdA8oN/ec3Y3umyuyXz
BKY5LKO2kdSGTzrv++g28B07L9toLx/9gBProp0P3fmGm3IX+8JKPmIv/az4
ktQx3NOCxFbyPuHi3QlhCldHMQ3nl5zFpB48kffw6J39w1hIZ+fIybiv+C7n
4ohlxiBWO3BMci68Hw+dvnvSc64fH7hLXTB9dBhHe38PqvzWi/W9CoN1H49g
pvfMpnznenDTn93XQ0pGcVOKYZSJUjfuFb35eSHvGzY5+kNRqu4TPlJKWta8
PY7VM6Ytf+R04RkY4z958zue4/0vovjaR0zro7p/NmkCCyzaNYTu+oCTV7tC
1RImsUpXRGJv7HssdCUsIzBuCoeBN6rreYvVypq//gr/hW/YKD888fo1rqb4
rSudnsbCObfT8g63YdMvHKL+J39jXv06cX7OVuyyfuDg5NFZvG+Bg293fjMO
bo1quK45h4fdDL8uxTfh51e79mo/nsMWbC+dnpxpxBSpsBPBJfPY29A8Okf0
Bb70q/0ft8ICTlU3KmU/UI/fV4inPLm3gEXuuaquPq7Fzruay+byFvH1ecP1
awXPcQ6XADlFYgnrlB8Ny8ZV+NtX34/qt5fwPQGOfX0zz/DxAI6F4zeXMbur
TdHR+HJcoXs4loP/Dy6x3GOe5/8Ur22V85Sm/sGHXx8r7nV/guOuHdD+nbSC
N+HNg+O/S3G7y8PmRNZVTJ87/cpP9RHmlPlnr5Kwiq2LzXMaLjzAmZUFIcfi
1rDNLM+b91FFeDhqhY6VZh1zKV2hmxC7j2UsrdJLotaxtlBRIH/HPfy4f/bZ
VPhfnEl+0KvnexcvFVDME1b/4sKihRi+ffnY6Hh6t8LpDey0kD7TZ3YHt1AZ
rxw9uYmjNRYvKr3IwSztSRcZZzexHcnV/hV1Nt53fUTwfsAW5gpivJ92KAv3
yV4w+HH0Hz7AwSCs6ZqBN2XihgXm/uFfUjee5A3ewFw85GZpEhU0PsdF/qHp
+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
mPylzBEM4cC9u/tjTyxgn5ZKV4+eN4TzSmlpw3xLmPEj1YVdlwwhSv4247Dt
EtaxM3uC7wqbj3p8MKh2CeunxHb0XDeEsASVAErAMjb//HbePS9DuLkBe2Mk
8guT0FWzro8zBHE/QnSRxSrGULo0xJ1sCK1/csQd2laxe1JhVnrphiAgXJns
YrCGjS6PXUSvDEHY7udutxN/saK8uPNvkCE45X6/xtrJgZvs5jqd1G8IJafS
feO0OfFAYZWO3iFD2PGVc8LCjxN/99fipOS4ISRMB9u2feDEd/UUm0bNGUJA
Q47xxDkufPapPfPROiNQGDpztiaQGw/haaHeljWCBB85HQGODXjlwl+scJ8R
LIwXOcaZbMAXBhUo8wpGwHqCGcy92ICfZQWQHNSMwKKV/9WUIS++/7bmictE
I+g9K31HL5sPrxtP1jayNYK3CedOaQcJ4us+3Ty476URGK3niLjoKIKbxxI8
t+caAbHvp6Nqmgj+2kagXuSNEUxIZr606RDBz67LtFwtNQL1xw9ylwmb8YIj
X0ObPxhBHLrIrBMRxa1TGNOek0YwrHto1u6TGG5dFmk2LsaE3fSXtufCJfBN
qZ6/v21hwiMjwm2VzxJ46QOr5D4JJhAH58pdhLfhwqdUplu2M8HXic+GFLEN
R3Mf/dAeJqzP3Ba2N04S37KX602EGhNKXO4ry1Vvx7FwJxGCGRNyfC+Xdb3Z
hW/PWIeUTjEBy2l0J3Tvwh3LnthJmzOBfEa3t4dDBt86ml/x7xwTCMd7yLih
DG6jNe9QfZkJETVpkde+y+A8o84fyC7sfZGX236qy+J6Wq5+JhFMqAxT9jT7
KYdHM7kPnohkwrbb//ldlt2LT16J7D4czYRuS4/6AuO9+JPwwkPiz5lwXht7
szl3Lz4wstjfmcKE1cTSdX3X9+H3wt20z+cz4b6n0oPqRXm8fOTWT9vPTFg6
MzbOd1QRH8u8NOLbwoR7a2fbpJwV8c32jPaENiYEmpqs3MtRxK/OyBS1fmHz
SYg06sop4VuWP7nqDjLhn2jBTJqEMu7IK7u4ZZ4Ja+INv2I2qOByCk3ztaLG
MDxjpecirYozv7/7NiBuDPwmQnynj6viXrnpLX+2GgMzatNdW2tVvOWwR8Gh
7cbA0j7SL/RSFffRlnNO2GMMtVE8Lz2OHca7DTx/uKobg3eShnn/JTU8zHHf
nOxpY4h+bFyb3noEp6Va1UmeMYZ4u0Wt57+O4BvaEuJFzhnD9BaVvHc7j+I+
R8Wo/yzZ+A5yM7euH8Wd/3KkdtsYwx/LOcr3DRr46ZBu0ye32POytKo+kia+
Kyu05G+UMch1yi7fHNHCe7uw0J8xxhDL+ryhRVgbjxXgtp6OZethFvy5qK2N
b77pIdydYAzfvtdN8ERq4zxHbK8WvTCGjfbSdjeIBHzyPUhdLzIGdy1crTFP
B3/Tv+Dd1WYMtk6b09XbAaewHsb+7jCG7CBhp75ZwHvjdxZKdRmDp4eYaQr/
cZz7LH3ifJ8xUG8de3IXjuNmbamm30aMQY166unDnOP4ImYsP7VkDMpOD2NX
Q/RwtYLc5lUJE8AcWVzFl/TxYv9re3adN4FztnZ/865Q8N4WY7kdF0wg1+xb
TlgABV8no7FX8pIJcBSkCT94QcEZiFte7IoJlNoJ72ocoeCDPxMUeB1M4Le7
VEmWLRUXtP2sOudlAi5lRFqqIw23oqofr4w3gUTP0/v+xDDwjUL/zl/sNYHq
6klb5yQm3hscZm361QQCLvg9TS9g4tkbpK+RBkxgVuOVz0gtEyetI7grDrP1
JZ4sfjrNxL0XPSJWpkzAWOqZUuoxY3yme6ku/I8JxEtdhpAuY7wxc+ZglaQp
/NhDjyvfbYqHH/+6bvcZUyhrU6V8HDqJH7mGMXTPmYJlZ5Zi0+pJvCeyIMbi
vCmI3M+XGBU/he8dD1SKuWQKQvGX9xhQTuHlYQfPCNqbgnduVhvH61P4eI9P
3pKHKXwgpU9x3z2Nwy3ZCx/jTaFYoDm4YP8ZfC7brtx1wBTGnt6jalRY4Okr
QgJVlmawLd0tJ0feClf3uuiYOGYGYtUfNigs2uAL/63prjmcBN+x7XiL/XWc
u7w47eTUSRAX4mN5SDvhC1xS0roupyD2wiE5owJXXF0lTnH3/CkQvtxk89fV
HU9bb/si8MZpiG/iaHv82Auf3fxVzevnaXh24ZxaXaUP/pjLyfyaizn0v1ct
KzPww/U5v2cnuJnD7LXUkFdn/PAVjqtrTbfNQeJZCjX1ih9+8e/FVDUvc+jL
PBccf9cPV/3FnF7zN4cfLZInPuX44R0zKj7h0eaQV5Phum2TPy7dPZdZ9M4c
nPw4Zp3a/fGWL9d/j5WZQ/LjKnnOb/54UOc4Q5JlDhXunjdiZvzxubaBH97V
5tAmOCbTvCEAr276rEX5aA7b7H/p3z8WgNvU5jV195pDic20ZXtyAC5Zo7h7
Y785RBvWNRfnBOBN1Vns/4s5fKpouJhQGoBrVCZvSx8xhxNXnTvvtAXg/GXh
lx1mzEFq/c0TjryBOOudYHHSnDlo2YgUeogH4i5vH/C2zJvD8Is/lODdgXhv
kU/OkWVz6J4pHHqrHYiHF67+s/tlDoWhwVOd1ECc+MbdJO6POagcLZJaPRWI
/85fTG9YMwfRIxpuctaB+Os8x+V//9h87Vt+mToF4v8D3GCEaQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mhlEEzWtyYaUhSQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
DWHP/GLx0vKgv2trTOCOJJsSomPx/wHHhHSJ
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8280748355955143`*^9, {3.828074954219873*^9, 3.828074996816227*^9}, 
   3.828075443221216*^9, {3.828076133782419*^9, 3.828076155756703*^9}, 
   3.8280788308028927`*^9, 3.828086220330195*^9, 3.829288386327449*^9, 
   3.829288440152604*^9, 3.829288512281698*^9, 3.829289825061927*^9, 
   3.8292903963679934`*^9, 3.829300571815585*^9, {3.829301267910563*^9, 
   3.829301293283963*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prEcoFunc1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", " ", "\[Rule]", " ", "4.5"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.1"}], ",", " ", 
     RowBox[{"\[Rho]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"\[Gamma]w", " ", "\[Rule]", " ", "5.5"}], ",", " ", 
     RowBox[{"\[Alpha]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"\[Beta]w", "\[Rule]", " ", "1.5"}], ",", " ", 
     RowBox[{"c", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0.9"}], ",", " ", 
     RowBox[{"\[Sigma]", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"fw", " ", "\[Rule]", " ", "14.5"}], ",", " ", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "9.9"}], ",", " ", 
     RowBox[{"\[CapitalKappa]", "\[Rule]", " ", "50"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxt", " ", "=", " ", "700"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initFunc1", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Is", "[", "0", "]"}], "\[Equal]", " ", "10"}], ",", " ", 
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "4"}], ",", " ", 
     RowBox[{
      RowBox[{"Ds", "[", "0", "]"}], " ", "\[Equal]", "1.5"}], ",", " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.7"}], ",", " ", 
     
     RowBox[{
      RowBox[{"W", "[", "0", "]"}], " ", "\[Equal]", " ", "100"}]}], " ", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sys", "/.", "func1"}], "/.", "prEcoFunc1"}], ")"}], " ", 
     "\[Equal]", " ", "0"}], "]"}], ",", " ", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ndsol0Func1", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"sysFunc1", "/.", "prEcoFunc1"}], ",", " ", "initFunc1"}], 
     "]"}], ",", " ", "var", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.829289836115881*^9, 3.8292898786984653`*^9}, 
   3.829289928815617*^9, {3.829290349293017*^9, 3.829290355545183*^9}, {
   3.8292909878604403`*^9, 3.82929098902839*^9}, {3.829292492461904*^9, 
   3.829292530486247*^9}, 3.829296677600597*^9, {3.829296715496174*^9, 
   3.829296715850922*^9}, {3.829296890284697*^9, 3.829296890447839*^9}, {
   3.829296939284951*^9, 3.8292969884923773`*^9}, {3.829297074505315*^9, 
   3.829297118199197*^9}, {3.8292972096052923`*^9, 3.829297210519383*^9}, {
   3.829300591073004*^9, 3.829300594922571*^9}, 3.829301320155313*^9, {
   3.8293050158654213`*^9, 3.829305105294956*^9}, {3.829305168801544*^9, 
   3.8293051856636667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.7999999999999308`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "39.57777777777771`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "4.397530864197524`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "37.77777777777756`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "38.37777777777746`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999997`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.04765209751811406`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.04765209751811402`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.0031268094962621624`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "3.7163123621590666`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "8.216312362159062`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.06293335645934015`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.8618001911150331`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "1.185620220654939`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "2.018541162669054`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "2.4814588373309334`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.439410804095012`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "1.8172997050669217`"}], ",", 
     RowBox[{"W", "\[Rule]", "1.2546840939284971`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "4.499999999998625`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "5.990000000000303`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.5999999999999882`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "0.5999999999999897`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.18206896551724078`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.18206896551724064`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.19999999999999904`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", 
      RowBox[{"-", "1.8000000000000518`"}]}], ",", 
     RowBox[{"Iw", "\[Rule]", "1.800000000000051`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.20000000000000567`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "27.334134835869165`"}], ",", 
     RowBox[{"Iw", "\[Rule]", 
      RowBox[{"-", "22.83413483586653`"}]}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.011365120930360725`"}], ",", 
     RowBox[{"Dw", "\[Rule]", 
      RowBox[{"-", "0.4325211729163726`"}]}], ",", 
     RowBox[{"W", "\[Rule]", 
      RowBox[{"-", "0.03913907513158789`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Iw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Ds", "\[Rule]", "0.`"}], ",", 
     RowBox[{"Dw", "\[Rule]", "0.`"}], ",", 
     RowBox[{"W", "\[Rule]", "0.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186318108*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Is", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D52FbOx0t4jQDLSsNGN
0iZAIf3lAmAHZj9UFCLQRcg3QOGANnVrpxI/NstR0LKqQUAwR19KZ6VTPxvp
5NFBVEdAcm3dLBi1KUCsRjc2rXhNQDfh22NSHuY+1seShxSaUUDm6bGvb9u1
PyyMaaVAtVRABwzRGQm3GT/ufulP7MFXQETmc40DZ34/aGe3NCCaWkC3j0yA
Txc9QLjv5ErCr11A37m9eIayBz/gNrBNdkhgQIKOf0tOIe8/Go1CPMuxYUDS
qkBtSXhzPz+zhEPXOWNAL6mSn1JRYj9A1O1np6dkQNsrP/G/MTZALMUGpS40
ZkAM+g8aJSv5Pk5NdKh1uWdAuFTi2RDiC0BM0AjJgCRpQHA70lf+hBQ/NCNN
AkOuakC3pB426oOIP/hwuFjJHWxATHq2KsmsPUCnjtPHBqxtQM7vemt/KyA/
jEND/QMzb0AlZVSg71syQKf57KfiT3BAuMxVMn6M3z59OZDdnhVxQDyh/xim
wMQ/wfbGIT3OcUBEEYvYN7HcP6D/J0k7g3JAk1n98IXACj918OD8lEdzQJan
bMwbniVAt14tv9D+c0B8e6HjalTlPu+00Q1oxXRAYvejrRPsuD/CVqA/X4h1
QJJo1WOk+T4/A3YCgDg+dkBYMatmaLYwPzl9vExtA3dABJXKuZisO0DdAQoo
hLt3QEh8TLjFKOA+HNKB5vpveEDXTjMVlNeTP1GKUTHNM3lAiMKzrUgMwD/0
v7SKgep5QMnGfeNmKBY/jN1vcJGwekDYOPX1N1AzQJJ4vmSDaXtA3Bedb4PN
3D4zXzc81R58QLe6+n8roYM/yi0IoILjfEBhzTLyBBz3P895bBISm31A7+IW
zeGhED/JrSgR/WF+QMQf0uCM0jFAXi0P80clf0AZa9Z/AXjpPmEqieN0239A
KTVQzClUtj+shy2wflCAQBFWleLLbiU/3zjg9bOsgEDl5VsGhNBEP+APKC0Z
B4FA74I037mzHkDb2psqLGmBQH10kDG1ZuA+jWRZL7DEgUDqpDV0nA2iPzri
QvrhJ4JAd2pgoRrTUT+1hcG2Q4mCQLyVwfOVf2U/5+eJehbkgkDMVKWK40o1
QBM+fgSXRoNAFagTSRqq8z72UryViKKDQMTwPMLd7dA/1Fsm7ScGhECCJaGe
5YrxPoCKJTb3Z4RAn44OtxtVnD/jd26GN8OEQBlH2WbAszlAQFnjnCUmhUAg
W2/myS8lP1T5obqEgoVAB7iIzIzNEUAWlsf5/9+FQPncZeCTeuo+5qnH1A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 29.67494456248305}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D52FbOx0t4jQDLSsNGN
0iZAIf3lAmAHZj9UFCLQRcg3QOGANnVrpxI/NstR0LKqQUAwR19KZ6VTPxvp
5NFBVEdAcm3dLBi1KUCsRjc2rXhNQDfh22NSHuY+1seShxSaUUDm6bGvb9u1
PyyMaaVAtVRABwzRGQm3GT/ufulP7MFXQETmc40DZ34/aGe3NCCaWkC3j0yA
Txc9QLjv5ErCr11A37m9eIayBz/gNrBNdkhgQIKOf0tOIe8/Go1CPMuxYUDS
qkBtSXhzPz+zhEPXOWNAL6mSn1JRYj9A1O1np6dkQNsrP/G/MTZALMUGpS40
ZkAM+g8aJSv5Pk5NdKh1uWdAuFTi2RDiC0BM0AjJgCRpQHA70lf+hBQ/NCNN
AkOuakC3pB426oOIP/hwuFjJHWxATHq2KsmsPUCnjtPHBqxtQM7vemt/KyA/
jEND/QMzb0AlZVSg71syQKf57KfiT3BAuMxVMn6M3z59OZDdnhVxQDyh/xim
wMQ/wfbGIT3OcUBEEYvYN7HcP6D/J0k7g3JAk1n98IXACj918OD8lEdzQJan
bMwbniVAt14tv9D+c0B8e6HjalTlPu+00Q1oxXRAYvejrRPsuD/CVqA/X4h1
QJJo1WOk+T4/A3YCgDg+dkBYMatmaLYwPzl9vExtA3dABJXKuZisO0DdAQoo
hLt3QEh8TLjFKOA+HNKB5vpveEDXTjMVlNeTP1GKUTHNM3lAiMKzrUgMwD/0
v7SKgep5QMnGfeNmKBY/jN1vcJGwekDYOPX1N1AzQJJ4vmSDaXtA3Bedb4PN
3D4zXzc81R58QLe6+n8roYM/yi0IoILjfEBhzTLyBBz3P895bBISm31A7+IW
zeGhED/JrSgR/WF+QMQf0uCM0jFAXi0P80clf0AZa9Z/AXjpPmEqieN0239A
KTVQzClUtj+shy2wflCAQBFWleLLbiU/3zjg9bOsgEDl5VsGhNBEP+APKC0Z
B4FA74I037mzHkDb2psqLGmBQH10kDG1ZuA+jWRZL7DEgUDqpDV0nA2iPzri
QvrhJ4JAd2pgoRrTUT+1hcG2Q4mCQLyVwfOVf2U/5+eJehbkgkDMVKWK40o1
QBM+fgSXRoNAFagTSRqq8z72UryViKKDQMTwPMLd7dA/1Fsm7ScGhECCJaGe
5YrxPoCKJTb3Z4RAn44OtxtVnD/jd26GN8OEQBlH2WbAszlAQFnjnCUmhUAg
W2/myS8lP1T5obqEgoVAB7iIzIzNEUAWlsf5/9+FQPncZeCTeuo+5qnH1A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 29.67494456248305}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Iw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAiaSrglMxJUC9uIkhstTSPzLSsNGN
0iZA98sPOj9/cT9UFCLQRcg3QG6/BAa/MjQ/NstR0LKqQUCcznEnTQM2Pxvp
5NFBVEdAvD/0h2r8uz+sRjc2rXhNQEWDk92G/uY+1seShxSaUUBzooAlwYGA
PyyMaaVAtVRAUtXOBrUDND/ufulP7MFXQA0l7wzJN1U/aGe3NCCaWkCwy+5K
8uTAP7jv5ErCr11AfV0yDhXK/T7gNrBNdkhgQLzP/EoIuaU/Go1CPMuxYUAq
059s0tCRPz+zhEPXOWNAD2gQJVseQT9A1O1np6dkQKBDJ2nu2b4/LMUGpS40
ZkCMdprl7ibzPk5NdKh1uWdAVKa1shwWtD9M0AjJgCRpQL5t0VDcIC8/NCNN
AkOuakBg2nLHUG9eP/hwuFjJHWxABf5XSJaJxD+njtPHBqxtQGCyaxuA9w4/
jEND/QMzb0BRruDLxu69P6f57KfiT3BA9j1xQ1PX6z59OZDdnhVxQAdGTssB
U4o/HD4Dnk6IcUC9uIkhstTSP8SBu9A=
                    "]], 
                    
                    LineBox[{{289.05686369255994`, 0.2942319228667534}, {
                    296.20197406410625`, 0.00003098654437980626}, {
                    308.47387397639187`, 0.10697224556259254`}, {
                    319.9259635708108, 0.000020939397276880315`}, {
                    332.3379038039847, 0.008874390921754259}, {
                    344.5232540381659, 0.0016829882539722816`}, {
                    355.8887939544804, 0.00010146393684930514`}, {
                    368.21418450954985`, 0.12764170273437697`}, {
                    379.7197647467527, 9.672042907086951*^-6}, {
                    390.9987549849627, 0.0026695449231811646`}, {
                    403.2375958619278, 0.23304500556080812`}, {
                    414.6566264210262, 0.000044705638158881234`}, {
                    427.0355076188796, 0.1178377422614724}, {
                    438.5945784988663, 0.000010494044962666651`}, {
                    449.9270593798603, 0.001570841490374204}, {
                    454.9949321580758, 0.2942319228667534}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA3etc5ihPfUC9uIkhstTSP895bBIS
m31ANRoQlKUDAz/JrSgR/WF+QEslMiQgzL0/Xi0P80clf0BMpZWqvNToPmEq
ieN0239AWA60LlDEgD+shy2wflCAQKDG8DOfkkE/3zjg9bOsgEBMQRXAX20q
P+APKC0ZB4FALek/9IVzuT/b2psqLGmBQI9qvxo0VuQ+jWRZL7DEgUDgMrso
jCBxPzriQvrhJ4JAunPl3j99cD+1hcG2Q4mCQM0x1UAjU0M/5+eJehbkgkCT
4lPgxqK+PxM+fgSXRoNAK+diC6c/8D72UryViKKDQKGbBtOaoJI/1Fsm7ScG
hEBwf9DW2MgEP4CKJTb3Z4RAZggKK0KSbD/jd26GN8OEQGpXXSVdN8s/QFnj
nCUmhUBkb2QfG+wSP1T5obqEgoVA0VV7PjfctT8Wlsf5/9+FQPiy7oDINv0+
dH+d/Q==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    0.2942319228667534}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAiaSrglMxJUC9uIkhstTSPzLSsNGN
0iZA98sPOj9/cT9UFCLQRcg3QG6/BAa/MjQ/NstR0LKqQUCcznEnTQM2Pxvp
5NFBVEdAvD/0h2r8uz+sRjc2rXhNQEWDk92G/uY+1seShxSaUUBzooAlwYGA
PyyMaaVAtVRAUtXOBrUDND/ufulP7MFXQA0l7wzJN1U/aGe3NCCaWkCwy+5K
8uTAP7jv5ErCr11AfV0yDhXK/T7gNrBNdkhgQLzP/EoIuaU/Go1CPMuxYUAq
059s0tCRPz+zhEPXOWNAD2gQJVseQT9A1O1np6dkQKBDJ2nu2b4/LMUGpS40
ZkCMdprl7ibzPk5NdKh1uWdAVKa1shwWtD9M0AjJgCRpQL5t0VDcIC8/NCNN
AkOuakBg2nLHUG9eP/hwuFjJHWxABf5XSJaJxD+njtPHBqxtQGCyaxuA9w4/
jEND/QMzb0BRruDLxu69P6f57KfiT3BA9j1xQ1PX6z59OZDdnhVxQAdGTssB
U4o/HD4Dnk6IcUC9uIkhstTSP8SBu9A=
                    "]], 
                    
                    LineBox[{{289.05686369255994`, 0.2942319228667534}, {
                    296.20197406410625`, 0.00003098654437980626}, {
                    308.47387397639187`, 0.10697224556259254`}, {
                    319.9259635708108, 0.000020939397276880315`}, {
                    332.3379038039847, 0.008874390921754259}, {
                    344.5232540381659, 0.0016829882539722816`}, {
                    355.8887939544804, 0.00010146393684930514`}, {
                    368.21418450954985`, 0.12764170273437697`}, {
                    379.7197647467527, 9.672042907086951*^-6}, {
                    390.9987549849627, 0.0026695449231811646`}, {
                    403.2375958619278, 0.23304500556080812`}, {
                    414.6566264210262, 0.000044705638158881234`}, {
                    427.0355076188796, 0.1178377422614724}, {
                    438.5945784988663, 0.000010494044962666651`}, {
                    449.9270593798603, 0.001570841490374204}, {
                    454.9949321580758, 0.2942319228667534}}], 
                    LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAA3etc5ihPfUC9uIkhstTSP895bBIS
m31ANRoQlKUDAz/JrSgR/WF+QEslMiQgzL0/Xi0P80clf0BMpZWqvNToPmEq
ieN0239AWA60LlDEgD+shy2wflCAQKDG8DOfkkE/3zjg9bOsgEBMQRXAX20q
P+APKC0ZB4FALek/9IVzuT/b2psqLGmBQI9qvxo0VuQ+jWRZL7DEgUDgMrso
jCBxPzriQvrhJ4JAunPl3j99cD+1hcG2Q4mCQM0x1UAjU0M/5+eJehbkgkCT
4lPgxqK+PxM+fgSXRoNAK+diC6c/8D72UryViKKDQKGbBtOaoJI/1Fsm7ScG
hEBwf9DW2MgEP4CKJTb3Z4RAZggKK0KSbD/jd26GN8OEQGpXXSVdN8s/QFnj
nCUmhUBkb2QfG+wSP1T5obqEgoVA0VV7PjfctT8Wlsf5/9+FQPiy7oDINv0+
dH+d/Q==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    0.2942319228667534}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Ds", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3PzLSsNGN
0iZAEebX2+jS0j9UFCLQRcg3QLb+pusfqwZANstR0LKqQUBhEPYAuwjKPxvp
5NFBVEdARiXB5FEtrT+sRjc2rXhNQC83YfqG1fE/1seShxSaUUDbDPXTL/ay
PyyMaaVAtVRAOfu2+5GDEEDufulP7MFXQJbP7ZnNFcI/aGe3NCCaWkBgpLuE
OlfiP7jv5ErCr11Anlcz1juS4z/gNrBNdkhgQGQsyCAKKaU/Go1CPMuxYUBQ
aH/SV/wXQD+zhEPXOWNAErFF6uX8yD9A1O1np6dkQEw+VlxLhcI/LMUGpS40
ZkASmXr+2o/oP05NdKh1uWdARCFUvClOoj9M0AjJgCRpQA22jdCTABBANCNN
AkOuakBcx3zegNa/P/hwuFjJHWxAJgYQHLR7AECnjtPHBqxtQJkclUHaadw/
jEND/QMzb0C/ImKfZ8y3P6f57KfiT3BArZkBvM3PAEB9OZDdnhVxQAlPn4Hw
E7A/wfbGIT3OcUCGKWwVXC4gQKD/J0k7g3JAHEiEc1TK4j918OD8lEdzQFiU
BOq/Wak/t14tv9D+c0CWonuk1TEEQO+00Q1oxXRA79v9Y5xUsj/CVqA/X4h1
QIfsgqSbyBNAA3YCgDg+dkAEl2QtlOjWPzl9vExtA3dAtO3ukhEU2D/dAQoo
hLt3QGom3uxcXPY/HNKB5vpveEDPDqGGDAO8P1GKUTHNM3lAgEcQ9E+JHUD0
v7SKgep5QDrJTdN57t8/jN1vcJGwekDHuc1PtE26P5J4vmSDaXtA1KsrR3tO
/D8zXzc81R58QEQpGHoK5MA/yi0IoILjfEAlXsn9LBciQM95bBISm31AarJs
lmJ+4T/JrSgR/WF+QN3zF7nrjLY/Xi0P80clf0ABci4S+IPwP2EqieN0239A
Kz4R+VTcsj+shy2wflCAQAtKowJtoBFA3zjg9bOsgECTMvON/qrRP+APKC0Z
B4FAl1qky7kGpT/b2psqLGmBQFuqJ3PfCPY/jWRZL7DEgUAJp8jOIum3Pzri
QvrhJ4JADrSGCQBeFUC1hcG2Q4mCQNwHoJXt7Mc/5+eJehbkgkAq9QEiHoTA
PxM+fgSXRoNA/2/UBVkZ6z/2UryViKKDQJSA3zDobqw/1Fsm7ScGhEDjEFm+
tNoHQICKJTb3Z4RA890JTdR9uT/jd26GN8OEQPQs5VAVQRJAQFnjnCUmhUB8
K8pP8THaP1T5obqEgoVADoj4fKWLoj8Wlsf5/9+FQBv+OoCy7AVAS0HKJg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 9.04526513178923}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D4ClnPN7f/3PzLSsNGN
0iZAEebX2+jS0j9UFCLQRcg3QLb+pusfqwZANstR0LKqQUBhEPYAuwjKPxvp
5NFBVEdARiXB5FEtrT+sRjc2rXhNQC83YfqG1fE/1seShxSaUUDbDPXTL/ay
PyyMaaVAtVRAOfu2+5GDEEDufulP7MFXQJbP7ZnNFcI/aGe3NCCaWkBgpLuE
OlfiP7jv5ErCr11Anlcz1juS4z/gNrBNdkhgQGQsyCAKKaU/Go1CPMuxYUBQ
aH/SV/wXQD+zhEPXOWNAErFF6uX8yD9A1O1np6dkQEw+VlxLhcI/LMUGpS40
ZkASmXr+2o/oP05NdKh1uWdARCFUvClOoj9M0AjJgCRpQA22jdCTABBANCNN
AkOuakBcx3zegNa/P/hwuFjJHWxAJgYQHLR7AECnjtPHBqxtQJkclUHaadw/
jEND/QMzb0C/ImKfZ8y3P6f57KfiT3BArZkBvM3PAEB9OZDdnhVxQAlPn4Hw
E7A/wfbGIT3OcUCGKWwVXC4gQKD/J0k7g3JAHEiEc1TK4j918OD8lEdzQFiU
BOq/Wak/t14tv9D+c0CWonuk1TEEQO+00Q1oxXRA79v9Y5xUsj/CVqA/X4h1
QIfsgqSbyBNAA3YCgDg+dkAEl2QtlOjWPzl9vExtA3dAtO3ukhEU2D/dAQoo
hLt3QGom3uxcXPY/HNKB5vpveEDPDqGGDAO8P1GKUTHNM3lAgEcQ9E+JHUD0
v7SKgep5QDrJTdN57t8/jN1vcJGwekDHuc1PtE26P5J4vmSDaXtA1KsrR3tO
/D8zXzc81R58QEQpGHoK5MA/yi0IoILjfEAlXsn9LBciQM95bBISm31AarJs
lmJ+4T/JrSgR/WF+QN3zF7nrjLY/Xi0P80clf0ABci4S+IPwP2EqieN0239A
Kz4R+VTcsj+shy2wflCAQAtKowJtoBFA3zjg9bOsgECTMvON/qrRP+APKC0Z
B4FAl1qky7kGpT/b2psqLGmBQFuqJ3PfCPY/jWRZL7DEgUAJp8jOIum3Pzri
QvrhJ4JADrSGCQBeFUC1hcG2Q4mCQNwHoJXt7Mc/5+eJehbkgkAq9QEiHoTA
PxM+fgSXRoNA/2/UBVkZ6z/2UryViKKDQJSA3zDobqw/1Fsm7ScGhEDjEFm+
tNoHQICKJTb3Z4RA890JTdR9uT/jd26GN8OEQPQs5VAVQRJAQFnjnCUmhUB8
K8pP8THaP1T5obqEgoVADoj4fKWLoj8Wlsf5/9+FQBv+OoCy7AVAS0HKJg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 9.04526513178923}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"Dw", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D69U5MJkTP7PzLSsNGN
0iZAcBFskWPu6z9UFCLQRcg3QKiz2J6mXgdANstR0LKqQUAODO5imErBPxvp
5NFBVEdA74aUWbvOiz+sRjc2rXhNQJM2YjyFWOQ/1seShxSaUUCjI+qtTLql
PyyMaaVAtVRA3jzwx1XVAkDufulP7MFXQBs4FuIMqLQ/aGe3NCCaWkCH1IDy
b7ybP7jv5ErCr11AmitblHVT1j/gNrBNdkhgQDCiSimCq5c/Go1CPMuxYUAB
+KAl+zILQD+zhEPXOWNAuXkWxH2FvD9A1O1np6dkQG2hvJvmOY4/LMUGpS40
ZkCXf/fhywTcP05NdKh1uWdAxRlO47XCkT9M0AjJgCRpQOIHgOorQAJANCNN
AkOuakD8txDsnjCyP/hwuFjJHWxAbzjuwmuAtD+njtPHBqxtQLBWSUMVNdA/
jEND/QMzb0ArAxq6hCuMP6f57KfiT3BALQxqkUYt8z99OZDdnhVxQB1FsIds
bKI/wfbGIT3OcUDEbOWgcwMPQKD/J0k7g3JA9Ofi2nBv1T918OD8lEdzQIue
z0oLs4w/t14tv9D+c0AHlSriDwn3P++00Q1oxXRAr6SqeHEApT/CVqA/X4h1
QEExzZemjAZAA3YCgDg+dkAFQ18TwyLKPzl9vExtA3dAKw8RGZiilT/dAQoo
hLt3QPWkmS+8gek/HNKB5vpveEBO+QoQQwOwP1GKUTHNM3lA/WkUC4FLD0D0
v7SKgep5QNUsOqy0NtI/jN1vcJGwekDmbw+EeXiMP5J4vmSDaXtAN7JKdv8k
8D8zXzc81R58QABcK//fS7M/yi0IoILjfEBGorb6TzEMQM95bBISm31A6lDD
YOD00z/JrSgR/WF+QNAdtX4IDIw/Xi0P80clf0Dr0jNz6dbiP2EqieN0239A
nneZ50+bpT+shy2wflCAQCZJ28CxGQRA3zjg9bOsgEBqlt9D2ijEP+APKC0Z
B4FAJ764ibJXjj/b2psqLGmBQIW3fi+RIuk/jWRZL7DEgUDw+BkWnlurPzri
QvrhJ4JATRSOb19VCEC1hcG2Q4mCQJcu0TxuT7s/5+eJehbkgkD24rPfHoKN
PxM+fgSXRoNA7JbOTJ/p3j/2UryViKKDQM1RtCwCRqA/1Fsm7ScGhEAT6K02
mzX7P4CKJTb3Z4RAP8515igorT/jd26GN8OEQEvVtFZJ68o/QFnjnCUmhUBG
293+fOLNP1T5obqEgoVAAf9WGOPfkD8Wlsf5/9+FQFo8fOI4Avk/jBPG6A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    3.9118672242741455`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA6bS/pqfh6D69U5MJkTP7PzLSsNGN
0iZAcBFskWPu6z9UFCLQRcg3QKiz2J6mXgdANstR0LKqQUAODO5imErBPxvp
5NFBVEdA74aUWbvOiz+sRjc2rXhNQJM2YjyFWOQ/1seShxSaUUCjI+qtTLql
PyyMaaVAtVRA3jzwx1XVAkDufulP7MFXQBs4FuIMqLQ/aGe3NCCaWkCH1IDy
b7ybP7jv5ErCr11AmitblHVT1j/gNrBNdkhgQDCiSimCq5c/Go1CPMuxYUAB
+KAl+zILQD+zhEPXOWNAuXkWxH2FvD9A1O1np6dkQG2hvJvmOY4/LMUGpS40
ZkCXf/fhywTcP05NdKh1uWdAxRlO47XCkT9M0AjJgCRpQOIHgOorQAJANCNN
AkOuakD8txDsnjCyP/hwuFjJHWxAbzjuwmuAtD+njtPHBqxtQLBWSUMVNdA/
jEND/QMzb0ArAxq6hCuMP6f57KfiT3BALQxqkUYt8z99OZDdnhVxQB1FsIds
bKI/wfbGIT3OcUDEbOWgcwMPQKD/J0k7g3JA9Ofi2nBv1T918OD8lEdzQIue
z0oLs4w/t14tv9D+c0AHlSriDwn3P++00Q1oxXRAr6SqeHEApT/CVqA/X4h1
QEExzZemjAZAA3YCgDg+dkAFQ18TwyLKPzl9vExtA3dAKw8RGZiilT/dAQoo
hLt3QPWkmS+8gek/HNKB5vpveEBO+QoQQwOwP1GKUTHNM3lA/WkUC4FLD0D0
v7SKgep5QNUsOqy0NtI/jN1vcJGwekDmbw+EeXiMP5J4vmSDaXtAN7JKdv8k
8D8zXzc81R58QABcK//fS7M/yi0IoILjfEBGorb6TzEMQM95bBISm31A6lDD
YOD00z/JrSgR/WF+QNAdtX4IDIw/Xi0P80clf0Dr0jNz6dbiP2EqieN0239A
nneZ50+bpT+shy2wflCAQCZJ28CxGQRA3zjg9bOsgEBqlt9D2ijEP+APKC0Z
B4FAJ764ibJXjj/b2psqLGmBQIW3fi+RIuk/jWRZL7DEgUDw+BkWnlurPzri
QvrhJ4JATRSOb19VCEC1hcG2Q4mCQJcu0TxuT7s/5+eJehbkgkD24rPfHoKN
PxM+fgSXRoNA7JbOTJ/p3j/2UryViKKDQM1RtCwCRqA/1Fsm7ScGhEAT6K02
mzX7P4CKJTb3Z4RAP8515igorT/jd26GN8OEQEvVtFZJ68o/QFnjnCUmhUBG
293+fOLNP1T5obqEgoVAAf9WGOPfkD8Wlsf5/9+FQFo8fOI4Avk/jBPG6A==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 
                    3.9118672242741455`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"W", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAMP07EeXJUBzIV1No+EaQDLSsNGN
0iZAFb9R8iJ39j9UFCLQRcg3QN1OsIBBzRJANstR0LKqQUDGKw1eb9fLPxvp
5NFBVEdAEWA9z66WZD+sRjc2rXhNQJemc1u3Y/A/1seShxSaUUBpYdGZL9Sw
PyyMaaVAtVRAzlXeuMBGDkDufulP7MFXQCsxlKCGlMA/aGe3NCCaWkCt1Eoi
jKFiP7jv5ErCr11Al1G9MP374T/gNrBNdkhgQDaSVp//xJk/Go1CPMuxYUA8
pMrCa2kUQD+zhEPXOWNAh53KOS3zxj9A1O1np6dkQK+i0dnmplo/LMUGpS40
ZkDU7+7C/ZHmP05NdKh1uWdA/krbnzapgz9M0AjJgCRpQDvsozcgWw1ANCNN
AkOuakDpV536aSO9P/hwuFjJHWxAnFdjkQyeej+njtPHBqxtQOSqs8coHNo/
jEND/QMzb0DEzmPgkdRdP6f57KfiT3BAIt6s60fl/j99OZDdnhVxQNxoD0yp
las/wfbGIT3OcUDE3gzad3kKQKD/J0k7g3JAKth4X0xE4T918OD8lEdzQE9T
4wY56Gg/t14tv9D+c0BAwiPDPo4CQO+00Q1oxXRA05GZ/PItsD/CVqA/X4h1
QMXZIDg/8xFAA3YCgDg+dkBbDIyhBg3VPzl9vExtA3dAOT9HveOfXj/dAQoo
hLt3QHqiensGjPQ/HNKB5vpveEBwWhHd7Y+5P1GKUTHNM3lAX7OvsTc9EUD0
v7SKgep5QHj7W73CV90/jN1vcJGwekCxiCwITbhcP5J4vmSDaXtAWKgtQqkC
+j8zXzc81R58QIyPdLAH8r4/yi0IoILjfEC/1jpzM6gAQM95bBISm31AF491
N1MT4D/JrSgR/WF+QLwZZxqfjV4/Xi0P80clf0AF0x4+LFruP2EqieN0239A
TSf1EqS4sD+shy2wflCAQDrL4BeCIBBA3zjg9bOsgED0fyTz9zvQP+APKC0Z
B4FAAWaKj5facT/b2psqLGmBQC6qe9ZcP/Q/jWRZL7DEgUA84zTEUq21Pzri
QvrhJ4JASPEHUvwgE0C1hcG2Q4mCQJipBoug+MU/5+eJehbkgkDz8w4HQhdb
PxM+fgSXRoNAhZRw+Mbm6D/2UryViKKDQC5PWeMaUKc/1Fsm7ScGhEDI+p11
guoFQICKJTb3Z4RAyAHYAvEutz/jd26GN8OEQI51VwAKtJM/QFnjnCUmhUD3
vsOtVBLYP1T5obqEgoVAZVoncQkifz8Wlsf5/9+FQBNABa0GJQRA6EHFLg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 6.720349510964627}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAAMP07EeXJUBzIV1No+EaQDLSsNGN
0iZAFb9R8iJ39j9UFCLQRcg3QN1OsIBBzRJANstR0LKqQUDGKw1eb9fLPxvp
5NFBVEdAEWA9z66WZD+sRjc2rXhNQJemc1u3Y/A/1seShxSaUUBpYdGZL9Sw
PyyMaaVAtVRAzlXeuMBGDkDufulP7MFXQCsxlKCGlMA/aGe3NCCaWkCt1Eoi
jKFiP7jv5ErCr11Al1G9MP374T/gNrBNdkhgQDaSVp//xJk/Go1CPMuxYUA8
pMrCa2kUQD+zhEPXOWNAh53KOS3zxj9A1O1np6dkQK+i0dnmplo/LMUGpS40
ZkDU7+7C/ZHmP05NdKh1uWdA/krbnzapgz9M0AjJgCRpQDvsozcgWw1ANCNN
AkOuakDpV536aSO9P/hwuFjJHWxAnFdjkQyeej+njtPHBqxtQOSqs8coHNo/
jEND/QMzb0DEzmPgkdRdP6f57KfiT3BAIt6s60fl/j99OZDdnhVxQNxoD0yp
las/wfbGIT3OcUDE3gzad3kKQKD/J0k7g3JAKth4X0xE4T918OD8lEdzQE9T
4wY56Gg/t14tv9D+c0BAwiPDPo4CQO+00Q1oxXRA05GZ/PItsD/CVqA/X4h1
QMXZIDg/8xFAA3YCgDg+dkBbDIyhBg3VPzl9vExtA3dAOT9HveOfXj/dAQoo
hLt3QHqiensGjPQ/HNKB5vpveEBwWhHd7Y+5P1GKUTHNM3lAX7OvsTc9EUD0
v7SKgep5QHj7W73CV90/jN1vcJGwekCxiCwITbhcP5J4vmSDaXtAWKgtQqkC
+j8zXzc81R58QIyPdLAH8r4/yi0IoILjfEC/1jpzM6gAQM95bBISm31AF491
N1MT4D/JrSgR/WF+QLwZZxqfjV4/Xi0P80clf0AF0x4+LFruP2EqieN0239A
TSf1EqS4sD+shy2wflCAQDrL4BeCIBBA3zjg9bOsgED0fyTz9zvQP+APKC0Z
B4FAAWaKj5facT/b2psqLGmBQC6qe9ZcP/Q/jWRZL7DEgUA84zTEUq21Pzri
QvrhJ4JASPEHUvwgE0C1hcG2Q4mCQJipBoug+MU/5+eJehbkgkDz8w4HQhdb
PxM+fgSXRoNAhZRw+Mbm6D/2UryViKKDQC5PWeMaUKc/1Fsm7ScGhEDI+p11
guoFQICKJTb3Z4RAyAHYAvEutz/jd26GN8OEQI51VwAKtJM/QFnjnCUmhUD3
vsOtVBLYP1T5obqEgoVAZVoncQkifz8Wlsf5/9+FQBNABa0GJQRA6EHFLg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 700.}, {0., 6.720349510964627}},
                     PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "700.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 700.}}, <>]"& )],
      
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8292898795516777`*^9, 3.829289929585033*^9}, {
   3.829290333466366*^9, 3.8292903562545347`*^9}, 3.829290397830997*^9, 
   3.829290923652589*^9, 3.8292909907288637`*^9, {3.829292493310204*^9, 
   3.829292530912273*^9}, 3.829296678198811*^9, 3.829296716279317*^9, 
   3.829296797158905*^9, 3.829296890939766*^9, {3.8292969400723124`*^9, 
   3.829296991089273*^9}, {3.829297054516696*^9, 3.829297118822146*^9}, 
   3.8292972115110283`*^9, 3.829300596170732*^9, 3.829301320881885*^9, {
   3.829305018856094*^9, 3.829305105993088*^9}, {3.829305170490446*^9, 
   3.829305186674007*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"vart", "/.", "ndsol0Func1"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "maxt"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "maxt"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "30"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Is\>\"", ",", " ", "\"\<Iw\>\"", ",", " ", "\"\<Ds\>\"", ",", 
      "\"\<Dw\>\"", ",", " ", "\"\<W\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829289919956046*^9, 3.829289920125574*^9}, {
   3.829292552469584*^9, 3.8292926098919*^9}, {3.829292706618535*^9, 
   3.82929275636156*^9}, 3.8292967690075207`*^9, {3.82929683538181*^9, 
   3.829296912209985*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
wg==
        "]], 
       LineBox[CompressedData["
1:eJw9V3k0ll33Rj6zZIhE8oTUayrzeJ9930+vF2VOhlIyZcxQvCoyJbMkJGRq
IFJmImWKCo8hmTKPSYTMGX7P7/vjO2vtddZZe59rXefa+6y1N8nazciOjoaG
Zodq/79/iRhqYwzBgOa/C4OyTUFbd+r5K/sw05MdDXhP9DGuRWNwY69SomuN
Brj8rVpnkojBqaPK7OOXNOCAVopvSRoG3iy1qsV96vBBZ0uROxuD0msrTa8l
1MFT13LR4zUGFTI5JeisGggZvMtrL8fgmu7ItUIjVWg2OmwvU4OBTmlpXIy4
CviYBAjHfMSAvulg+XiXEoiajfb/bMcgTsX1gfNFRWi3IBJO92FwvBmUoj/J
g5/lE/3cUQw2tj4XixySg25ru4YrS9R3SJKunlaTgSC7xtuNmxgEW1hkc5VJ
gIyDuIrYHgR+yqsndPFjEOY6kz/GjUDiFdEb/oYE8u46Drgggt4fgYW5nodg
1DPvSIYogs2iL+XvRvggxottcEcSgb90PG9PMxeo+rg+tFRAQK6SlBELY4Pp
mxTDtxoIOPbpPA0oo4d4Pxk2AU0EsauRVwXCthAExDbe0EOQo+ep8uLuEpoL
WgzoPYfgMa2Uuc2zKZQcYqSmdAnB6+PiMbtK/UgzrHgl4QqCQ9WNeVwyreh3
BE/BshsCxtKgOZPp9ygj2svJ2AfBPVKCa1JQIToT2y1aFICgbyYvYDzrCdqI
UxreF46gop/ceaA8ET1PSHrkdh/BUY6GlBnpSGSUtGFMeYTgJsb+rr81AO0k
W+yVykKglxK8GGHvhfIeV32MzEUgtrm4y7jljMwyBIN/FCEw0uBkEn9rjeif
+GloVyGoNavXz88wR4XPhtay66n66WaUrw8boos5qIihBQGuan/ulK02YsnL
cLHrQvB3jmramimByvNpxRsGECA55XjHeVVkW2A9emQSwQf1DntfLnm0r7g+
JXAOQUJQzSGB89KoulT03MgKAhpXj3UpTXHkVBGyD+0gwBS62g/tP4KiLK9N
6u0BMEhoTDnrJYjGhp4QtxkBOJnSujLzeJGyVVd6PivAHkKP8o8mF4oZpd8e
4ADI8s+4+bWFHU1YK1iw8QBczDY6xH2fCalO2JWrHQCgv+TiwutDj2LtEnmc
Ban3OSjmumq0aHqq0SNZGEC3RepAmO42hjmsUT6JAuxm0fEMiW9g8TPikhvH
AGzCT8iLtaxgP5zMwo9JAbAHb3cycfzG4GfYlOlJgGe/FAbF2xawRNc35FAF
AA9nEendqTns5/xMRpkKwFipe8J8+w+McD+4M6kBIKZwBj1T/449WtQ5v58A
SEz+rrvENYUteN6qOKUJcCnl5xN1fALTXM7bf10HwFHPHUsqH8NSvQY8n+gB
nGBo1znjNIotrbK1dxoBLE+lD581GMGcTYc23pwD8FEeV5AYHcImyl+LZFoA
PNmqIwlZD2KWBwJ1wy4CaDZ5MTgLDGDdPkb/ulkDLBleiLvH8A3T7xPJPGcP
oO7YxGpyqB/7qLLyWcMJIPUrV/q6BfXjJjcui16l6nH00VZtVS/2ZvOhEJsn
lU+r26q5ei8me95R67cXAEvs92SO/h4st0rVs/8GNX6VSbQlrgcTEWRLrfUD
+HS6NWDctgdL9R38kBMI8M/su7B1vR5s/+CrX/dCAB477DfZ0u/BYjQC+P8N
B8i/1ZCpfKUHY0wzJF+MBuBw5pyRju/BAnaOuP59H+ACv5xFXXcPtnFxOVEy
AYCSH226Kt2Leb7/UMP9CGDmg/Hn3dRebPbwwx+bqVR8TcULVqQ+zDbAgWcs
A6B8XHrt+ds+bHBEBfv0FGDh3ORUjls/dg5ndSjIATjE5DFro/YNa8scuP/w
JUDxqVV8UXgA06J7VXW7AODXSvBAL2kQq7X2n7QrodbfCUOTajSEqdYbcOhW
ADxNV70T7DuMFYscUZF/C5B01UPE2HUEk7zz21qgBqAyRoRkIT2KPZtoiKJr
AOh13P5cTDeGCf2dWDbTBNDXWfx5dnYMS3x2ZaS9GYA3ZN/tlNlxjINBhaWi
jeqPqplN3jOJhdmzyKd/oerFPW54UHEKo2n6Znm3B8Cq+dX7kJBp7IZ4fqjr
NwCmUWEm5+Xv2FLo7cKzw1S+Sjsvs0N+YM7f9b+pjQPU3q9Oc1b/iU1okf4j
Mk3F3+gNUxWcxyxfLEmzzAKUvt0KuMmzgHUzN5gtzgNo8PVGe8otYvpOCUG9
SwDxPaRUW9cl7ONn+5fvVwFuBR5x+dXwG8MllLufbwJ0yReS1tRXsMpIZpqY
HYAIZ9Gk3N5VTO5n/3EvOhxE1l615aasYy/PvDS+wICD+2Vj1zfhm5hYvp8f
mQWHqwozUhrZW1gau372X3txsLN0WWbf2MH4rgp3cHLhEDpJ7hKpo0GxlMXN
9f04fP3QvekrToeYZepFR/hx0PpzsurN6z0o6F68XtMhHNILTnu7XPwP+vPL
zucVCQdP8I/MUmJE1w2UshLEcDAT7IuKRczoZwFTi+9xHD78+9xS6RYrsuPs
X7GRwuF62j7x77/Y0ZBH3uHTJ3GQC5L9UWm4D53r9NWWVcAhL+puqCmFE7XJ
6l3jV8Hhj/CgIPLgRloPDj+m0cDhUJhBwR1sP6r9vdA4DTiohK9T5lX5kOrZ
ugXKKRziSulv6Tjzo+KSBwfLtHCQXxGKud8lgCT32516fAYH7aaXd+T9hNDZ
ttnVXgMcWk2Fcl72CCPfcM8XPCY4BPuSOuvTjqCn5I3zBuY4cB/vNJ5JEkXN
2/57oyyp8e9v7ia1HEVL5Qy1TZdxGHTfMY2F4+igZ/S1PfY4TDnODWT/kUCE
JM9R5IRD+Sbf5nUGGeQ0ldx78yoOI13Jl70UTqK4DFJkmScO9mu8RkH8cqjS
IkdjyRuH6f7Q1EF5BTTGI7MgdQsH0b1zhRkxSoilrTTL0R8Hb+0H8wrSqkg2
XN3kWTAOz8lKO4cFNJAFuZ5xNBSH88OPWC1lAAVta1cKRuHQH2ZnvU1LoBfl
7S5msTgoaMRHLrGcQu0epofj43G4e40pSNVAE61LDHW0JeGQUs3XntanhYSn
bO+wPsYhoki0Ru/1aaSVMav4TyYOT9ZsWkr69JC7hedM0DMcpComEiNOGqIk
no2Udy9w2M8ZMWwjYYxqKP56m/k4uD4+sVZsZYK+hzHQKhbhIGD2rjiq1xTt
I0cXe5ThwMpqmNOdbIGUt7nt8ytxYOkLrHcpsERW5ckHZt7hwHBAjTn1vhUK
9SA1i9bj8HSJzlPC3xq9ksjxs2rCQVhgTOFgti3qnpQ+kdpMrSf2t6Vm+66g
nfTSsZ42HDJrbXuK6hzRUQv1BO4uHPjTk46MNbogPZ76f/R7cVC2CnMx4nZH
3hTtzYgBHBxbEhI9Vz1QWlj7y8YRHHpaap8scl1HjYTpJbpJHO4PbfrmuHmj
+a1BTmyGms9w/IwGzw3EW27bcGMOh3a+gjN/M/sizGPWu3QRB8ElzaWLZv7I
TsLz+OIKDrQOR7+J3g1EUZPr3yQ3cdAc3q0NTApGJen+MQ47OMwGSGey/AhB
A+YM+FM6AsqEcf5/gsIQPU/072EGAtpLbyc+dYxEkhTu5wKsBLx2+lqb8SIG
nQ1LNjPlIIBS96XK5uh95EuQWB9wE+DDY3/LW+YBerqVXU3hI8BVvESqwDsB
tZRJu7MIEuCmcULp2p4ktOxeekRTmIA5+oWXbEPJSFBC/WugKAFrbGnNXRxp
iDxZF1p9jIA7dDRvIzsykFO6tuqGJAGRh02EWzqyUJx5+0/5kwT03+mI4ed4
hiq5TdPdFQjgEyjL7ozNRmOtg4YvVQgg8fVGMFzKRSxhtvTfNQhYyHwYMhmU
j2SJ2TIRgoDorcRK7eACZLHl4XhJk4Cuwdyn1TeLUFDZukCKDgGfT8b6nHxV
gnLd/SndegREePMJVImWo86/GAK5jAkoFxj+bT31Bm1ORMnpmRIw+bVma/XP
W0RK554KP0/Fi0psrVeqQS7KanZ+l6gNxWZPjemeOlTWYT3hbkOAXu6OSCVt
A6JxjrCxvUIAvVGuvINyI9KhLxozdSZA9oFySWb+RxT/uO/yaTcCaMb0KaIO
zWhYkXYUu0bFM8NUHrpR0F/tx6xk/yXAjJlL4vBUO7ruaDAsdouA7kkgKuo7
0Ts6n4v8/gQEGIotP//ahZhT0wfZggnwroAXyaQedFah6QJNKAFxivWjtfl9
KI0y/+13BAFFY7949gQOoO9XeM9PxxAwtsnVNJ41jORosf7+OAKSjAcyBqNH
0e1kO3NKIgH+lcrzRjfH0Ue56N7aZAKCZGJu9aZMIq7WEtPSNAKySdYhk2vT
yNJ+oDsniwAbx75/feN/oJzdPedSnxMQm9Vvf9xnDi0lSXy9l0vA5fO1iQwm
C0hd1vhs8CsChPJTOpYOLKHQ5ptfvIsIOCN69x4L2zLqtM0yciojQCfUSr1L
dhUJ7nzqsKwkIPNhoZl03Dqyf7hoYPiOAOcFm/MGMn9Q4Qn+9lN1BBR44aWf
OXbQ1ifQV24kgN1NdbgulQY0bRwoEp8JYOy7WnnRnA5it+7pHqYQsLK82LQN
9NCfUN7C1UkAx3s1TUZTBhCVGT7N0E1A2N6a5J00JnD7yNC80UdAVsT8sVuC
rFB5WVpnbpCAYK6jtEJf2IH+j8mnkVECHq+kxRA2+0Av3k+ra5Kaf58KeqFt
TkiSetbUNENAX2vIZlcFN4w1tmhWzRFwQ+ej/s7D/SBltfzh1SIBi8zrWUyp
fFAXR25I2KDiLV/jsOYTBDZJZ3L4NgEdxTY3TscKgemHuDpfWjJoTysHJyYJ
w8+10RobZjIwNdqJ9lwXAcX7zGDKTgav4fCsyl1RCPzr5HsdTjIs07jxlace
BV7LgOqT/GRg8KNh3mT8C6xWs9XFDpGhtWJ7heaLBOTda6s6QCJDfjqb2/MX
1Ea8Tqhy9xgZAobUs49XnAAn8eqyVmUyZP9cf3MuUh5KaiYUatXJcCGuMVvu
pgLsmrOVlgAZpBR5a2psFCE+6nxxihYZDLuzf1mSlGFILFj23hkqv6CnYZ1L
ynDsfW5hkAEZir8zHq5/owLVixuvHc3IIMgpoJsnogZlE93lhRfI8GGg74x5
hxoU9BS/37AiA29LltdzV3V48Tm2CbcjQ6zj5ePaa+qQVe3aFu5IBo0LQS+m
XTQgtUCnp8OVDB/rMrhYWzWAV/B6MsWd/L95/v8AJX5Bew==
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1: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
+v/f5/8DcwQSPg==
        "]], 
       LineBox[CompressedData["
1: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
7A06bdUZ//8e8D9HmFvO
        "]], 
       LineBox[CompressedData["
1:eJw9l3k41U/7x60hJLInIYmsWTrWz9ySLSfLzEmENkkpSvmWVELaFEmSLC32
UAlJHsr2LUKWkD1LcQqHUELxO7/nj2f+mT9m5rpn3q/3vK/rVtx/DHtxcbAH
JwfH/8++9YzFKX0MHP8dFND7BizrN2NYEjZkClebQX/p6b3jhhhqo4/6Ge8y
g38Shc+uMGGvP7Z+KVFrCsuDUu9om2F4qbnP5/wKU7jvYpTniDAUzaus4VMz
AV1a43t/cwyBjJu9btLG8FbC62uMBQa3LFf+mF5D2DUzv1RgyV5nul8LOEsD
Vku0bJs1ht0F8xOpvwxAMrrUQYqOoe2q5rpPD3Qh2w/7GNpjUJG8ft6pTweo
7cxwV0cMf+U+BMXoacHB5eIliQwMy36ur51y2ADzzMetpc4YnEvihh6LKEPU
OzTR64LBw2/ouP5fBVDKaBNY2oWBRutvQJQcFIUfUVbwwDBeXOyl9FMSelqc
1q/Zg+FrY9fZ5afEgFPRUEV2HwZFSea6lZ1CoHJMfoOUJ4ab392v3vmXF+hl
PKriXhgKYwYck28sIX/BUVVRbwxXnN9k/PvxJ4pzbVZbcZj9HgtlrtzyMVSa
+XKj4BEMH4OSWw2EB9HAz2R1fl8MVvu3/D1W0YaWbQ3X4D2GIblgi0BvUC3S
iPHR5PLHkJUu9VPxVBly6nfUWjqBgZ/7roy5xHN0Soum/ScAw3qGwSOttWko
6dwanblTGE7/nc+2tohHFe+5N/0KxKBwuavtpVAUGpb+vmk6CAPxdnIfXXMR
CXk36U6ew1C64LkhcjoQ6b4o0hsPxsDIso93yTmOdnIn638PwSD/YZPmVPlB
dM7posFIGIaGCrrkYs4elPLg8OYv4Rhm6VzXAv2d0btxB9rAZQxBOX6bBTQc
0ZjJZsO+qxgeBWQHZOZaI7EIOaPuCAwPw1/MaMeZI1oHl3HHDXa9w0MZ+y8Y
I3eVb8ZtURhCkz4IjRrro7CARpOWaAy/vedCU2y1UWblC9PGGAw/bKPKNIJV
Uf3KJLP6WAyVvaeuZh9ch6Z2h1G1cRiGA7gXpSTXIqknh9DbeAwSYw3eHzRl
kOmCPVQlsO9brlLlniSO9tsamJcnYWCqe88FCoqiq3dXbym7jyGBlpD2IFAI
PfnKaVHyEIPa2VStj5z8qEWPafEyBUPXyAHt3X486Hfoh62FaRjKe863e1zn
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
GSAeJPavMtMMeCx9BIW3Mf7X7/8faidI4g==
        "]], 
       LineBox[CompressedData["
1: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
kX3omhsFEx5lkbCmBVfqt2cW0OP/r8f/B1d4JUQ=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwdkH1QE3QcxifDkyKl0QiZYCIIBmKKvCxe9nvuhCTdeUZQX9I8reCUc4hA
6JkoxTs65YwUxW6Ru4MMuZmM93awUEJEYHA4JslkEqCDGA1Fhq3Vc/fcc88f
zx+fx/Ozw7GJdhwOJ8Tm/zInTev7tJjA+V8i7JprN5SeJmSvKGl9xRQJezNC
OqSEqRP/nFpyORINsy2FL84RxqLfayoXREJiEj7wP0/45FlfcFhqBNbO1Abs
LSVYPKLzh8vCMTi9KbvkAiFx51Of/G/DUDxVrVGXESZGm3Ft37tgxvXr5i4T
3g9ucjttJ4T5ifyo7/cEN76l+cusEFRNrrmTICNsu1pnUt8Pwp6JK+5nKgiq
0t3nz7ptAW985WHVVcKI0rrPR7wZxx+/zveqIlyaO3c0L84fGw1nkuKvEXRm
WlZ/zxeGRw6NBdWE5BpvRVGKN8r0uY5NNQRNF/9PH5EnxCOcvUYFYWDQJDUX
uYPz8IRi9U3CLF/85lc8VyiH5+0+UNp6wtcBuR7OSH6QEZ9TT1ia2RLkmuGI
1bqZSmUjQSBs1A5NcqHRHloYbyasCt7Rr5NYWMH9CbFARYherGzK1phYxOAX
MnErYTw91u6d3jE2M6A3nVQTvgncLJBtH2Ly/j1RN9oJKRjqFGy8yxI02guG
2wRhd/LA0rsqtqIvbtKlk7BTUz3l/IeCqXt6w2O6CJO9lV4p/T+yzHvis8e7
bf8tP0gB8u+Yf/fv+uoeQkzsgeuzyiKm74raMtJH2CDhzkdJT7HSO615vAFC
TdanHqF/p7OYzgjt1kEC13py+pLxIHvZ0eCXqSUos34OTNi6n/1yOyirSkd4
5iR6Y1XOxyzplqJHN2zbP84NSaRdTNC+Ye3yEcLFt5MEaX7bWI+6KoM9Irg4
c3vb6sBy27w7jhhsPMGinzoLhEzY+oObfIzgGurk4bojkBlV7ocGx23/NvhW
tNX6s4pfy1QOT2y8YdFx0u3r2EctfF64kVBuGcl7eHENe7W55HPJNAEfvlXo
FSpgqsbX6mQzhFtL4uuVC3yW3lDooJklbHKLM7pweGx9vf1u+zmCOt/vr55R
RzaszL4e8pwgG92fmu61jJXULloPvCA4FTuOpiVzWfTNY7HlFoLVkC9feYzD
Fm6Y5d0vCZ7GKzPS8EVRjSL1udVKkHTpnX87Mi/6F1QBm7U=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
hLdpV2ZWVpjIe5FDJJyVD/4HaRFrYw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
RiXcfKTCn7k6CVc/8kkucyhh54PhG5fNZqGZln93mF8Jj68Ilxmcngc5N/62
xqNKmP9Kb4z04RJE/OCP/SKjhCGrH/QU5FZhV1/gdqKKEs4Wbyn8ttgA+ywB
nRBUQiPnQYcTpNvQyC7I7GmghKkkI7wHVXdBxltw0tFYCd/zUcvq+xJj+Kxg
/nlzJWwulztRrEmG/4yFnulaK+G356Xl7kYH0K5I6LysgxLKHF5PGMigRqeh
b1obt5SQ4dnN+A/H6fDunvORkvv79UqfGBVkYcRneoXruv5K2Ha9KjRdnhVf
O1wcpnqthL0P+xROGLFjxCuSr63hSijxQZxM8ewhjMtMzvgvWgmfrQ8QgSoX
pnWceGOepIRHtecUIn9yY+7a8kOezH1/keLTyqa8WMr+1m48XwkrObriCNf5
8KuahlFymRJmXkm1saDlx9aLY3JOX5VQj7np4ElZfuz1fsYp26KEJn07L1j4
+XE0QZxko1sJo/zvWVwq4tu/V9vnioeU8MvFt+Isg7y4Mnevw2tSCT+7nXSy
K+TBvzRcRbrzSvi6w/wNx3VuJJOpjKVaU0KdkoO8tAe4kPbsleetf/f7J3xX
3DPtELK5Ubv8R6qMQx9DiwSvciDfu6zz5geV8RbJeu9DXXY8WnoOeJiVsSA6
fP3LMTaUGdk6Ms6pjA9a2OtZnFhRlSSGLllQGdV/+yhLpLOgzmHdjRtiymiT
cG/Md5cZDQ3mhmXklPHVlK9uhzUzWgXJfyrWVkbC163eNQITXsnpe+N1fP88
5YYZ00pGvNn9+JHuGWU8FuTaKajDiN6c34xarZVR89r2OuNZBnyh6Sz/n4My
cgy0vH9dTY+h1kxc5i7K6LW7fLNnig4Tk6x+jnkpo7XMrpoV0GK93PLz9Whl
LOw2PDSnRI3tpuEuxUnKeDfJj2/uCRX2uaube2Uq48hT+aruDkr8We4nQlW+
j/+Fvcyw1wGkM+Ks4x5WRoEZszI6RnJkv1nxaWxSGcWmDWMKvciQP8Q+LGle
Ga+7fFA9tUKKcr2Z9jL/lDG94Ito+zgJmtkRSHW5VNAntDzJdpEILz+b/Ukp
pIL2U+4kEQ/2+XdqYGeLmApqTHVLrh4gQo/fvXHn1VQwhaDE9sJyFz48dMIb
F1Qw8tSp95LKf4HM5JFqv40K6uTfsi2+sQ2ORwPkjjmqoN6K61GVpC1Q6UkX
Fnqogv+lf9Qyk9iELqlflINRKijiRYXB7uugRv6X+PhHFYTtW5T0fWsQO0j9
t+CTCr6WafukqbEGN5+LLYSW7+NROGHFx7QKVOPXOwxHVbBqxPPapaUlcCl8
0Fg4q4Jrv5Oh/PYSfA96UXNkWQUr+niN4hZ+Q6J6aj4JiSqyGG1NarEvAoTN
visWUsUeu1O8AsU/IenGZuhRCVV8xKNpbboyBzQ6lAHhCqpYOfCB+rLMHAws
ini66qniaVXWbb2yGbhncM1W7JoqqhDOF/5knYIh3vuWEbdU8ZjVqVFD90nQ
WX92jsJdFW+dMjTRG5kAhvgk/fHnqqj0yeGOd/E4pP+dEnufpoo1wjdWX8SP
AlPnuhDlPicL8EnWkD4yCu4p5DxuJao49M6YYd5iBPRND9ObNKsiqc128lbA
MIxl2q9SLaois0K7x0kYAAO/u/P3N1SRqukiJfvDfsi09J2a2lVFA2mmvfel
ffCIMrG3il4N1fpOvhI17gV224mSB7JqONacYPEvrxs8VVbzZlTVkP7BKJcM
ZzdM0pFmmuqoYVzr25zZp13wuUQwVvasGvIrTofZ2XfCSVZb37m7akg2nqRG
ZdYOm6m5bPWP1LCV35Noub4NErXIUxN91dDT94Ip5c9W+HctpeXyGzUs6OC7
rIQtkFG8yPY9Vw2/pjSUMsk0gvlpTM0tUcPShV5flQcNQDYZoh5So4bRRLrv
LOu/gRWtovWJLjVUFzk9QedaDzTWD1OrV9Tw1MO0uDc7tVC41qweu62G197Q
GlHeqAX7F7ytj0nUseYQ7e7DoRoo/Vy1osKkjiKOpH/WGqvBiZxSI0tWHXP+
Ldud6aoEjvcXWgNU1XFlonhq4mIl1EqlWztqq+P2zfMh5r0VwG1+yu/wGXVU
eZVBTStQDs1pb1ojXdTxVd1unvx2MbjDtPUDd3Wk8y1O5NMqBuFu5VUzb3WM
8fgZquhfBI92BtiZgtX3dT1329mjhSBhLGDzPEsdey6aWFbF50PfpOvqlS/q
+7r8ntNFmnzwfVDrR6hQx8BfX0SOeOTBUPy1tN1WdZxqL5fqsMmFgPVPq3cX
1ZFlILm1/lIOqLzc8zPZUMclL2ObnelsmOQ9wyGzq45tbOllH1yzQcNgTeMX
rQZaPLTwjxLJgtkhvbZvrBrYZTP/08UkE97cfmuTxKOBSpOWGz5PP8H8e7Vn
NpIa6Bbx/dLgn3SIkA7gAEUNZOr5ITmplg66tcNp3Joa+Jme+HHW0zSIWvBu
6z2hgam+fWYiR1LBCOs5TjlpYEeCVK1uRhKce/60tPuuBvaODv+joE+CS+1g
bflYA7eNoklH7u/zW+vCZIcgDex0CXfJskyERyl3jX6Ha2Dx0EpV3PcEeLYk
8/tezD5e3mPHo88nwHvvVKWn2RrYMOH0b/hGPCR+uzJAVaSBDq9PEQh7cZDJ
IOgZXLWfX0D7x5+IOCg0/yHA3qiBywNvVHhU46Aq9v3XD50aaD8U8GhoJBYa
Z82uCw9qIE1trtW1wFjolmGmTZ/QwAHbx5Rb2rHww70tW3ZeAyUX5pkz/8bA
bOWrc4VrGph3zebuR58YWKE02NTa0cBVgUG+sEMx8M+YLOoruSYy2Hg+PF8V
DRTvKuEEnSYak/wnMOsRDfRjjyY62TRR/pD/G4dj0cAhqup/gU8TC8gGHA4f
jQbB2+tioyKa6Dj4JCCKNxokinJar8rs+8sdL/KViAYl4puuCyqaOKMu/Oz7
2WjA42Jsd7U1cW7yMn9veDQYhkwXbR/XxPhf/nyHN6PhXH/8xScmmqhHz8n7
zSMGLglcJqa01ETra7/vCjDGgsN1ro9BdppYofvxhemDWHDN6TVgddLECztR
rTabsfBo67/5yLua2LDxXpA+JA78tI2DBR9rouro+444/XgIekGjkOqniUk8
zX+XuRMgouNbr3SQJmbLDg8/50iE+EN+DwvCNZFXKJaqTusjZNho82nGaOLN
FzKJVOFJUJC6U12TrIkHW4L9fx5OgcrloquG2ZroW8tu4f4nFRpV3ag7CjWR
mTs49SVrBnQ/kcs8X6WJcr61nQKBmfCjYfHMj4Z9fE/1u38XZMMsY/q6facm
+hUpWBpd+QwrF669+zWgiTZFGo17VnnwN05I03VCE7d6+iLr0guA7OfI6OYv
TRRrX2LWtC0COrkoX681TUwwVX7+9E0pcHiYH6XY0cTmwLfwRLISBKtZmgPI
tVAsJJ+Qfr0aJKg7bjHTaSF5V8VqAcNXUDIJZH7PpoW315znbql8A3x//As/
nxbyKBxh1PnbBMfHyS2TRbTQiYdKN0yjHUzEqnclZbTw69rfAIf5TrBy9YzP
U9FCneRx0avC3+FqsZq+urYWUt86Q/yMaABcSP7MVR3XwjssAssK8T/AwzA3
0MBEC7fp7UdDOcbBN/SWbJuFFj4p1VmkuzkFQQPiPaZ2Wtiry+zX7TQHEYKz
7kM3tJClueTWMYVFiHdM5La7q4Xi01aL66vLkPHZunLukRbyWR2ve3Z+HQq2
ue1d/LTwvhiVxO8LW1Ch03/gT6AW/pvOl/3JsAtOemrVpuFa6GqeJDNfTIwc
BpGP8qK10CEqqv9sLxl+NfynxJyshZY6nfJc9pToevLi8u2sfXyJXMbLdjTI
a1ye3v5FCxW16lTZHRmwyYTvqnSlFvoVfBOJ7WFCYfOxgfl2LTwvafZ2iJcD
2y10woz6tXBkldn75jAnPr6YcDptTAuHXj2NnA7hQTFrMmqqn1o4zjx3QJiJ
H7/bXqm9tqKFdCd/745pCqDPlTrPum0t/CVxzcgUBVHaQUT1MCkgG3X6iBS9
EA45Pl99ehDQWPn4yWfxQvjcee7TODPgx0azlOfrQqjgYuigzQ3IuEwfu0wh
jGOu6YKxwoBLud33TvYLYdA9muFdCUCLcocFojtCqObu/PaiIuCN3/QJlD8E
ccaj9UypJqAr7/eZMyKC+OaxNA2XPqCb3PEbzy4K4ILPsnefGeDnglcPnoTw
4Xs/E3Xly4Bv+Gy6AoV5Uf957nrYtf1459pIix/cuPqSJXvtFqAMG7tsRhkX
xgbeczzrDvju9fzPmlJOPBH8XfizN+CH2uC3Od2HcCtUeYThBWCj9+u+M3sc
aBKxdbb1HWDrw+Y7dx+y4+57CzrJeMAYHyrSoHo2TP9Q8u1VGmCTDI4OcbIh
WcJjzeMlgG9DY7bjulgw5+OPP8k1+/nFWm4Rq7DgpRT4TNEM+G/z9inVOGb8
8olYpHYIMOWbeYPqEya0z7YdE5yC/X3z7kfsH0ZkyK2JfLIAGNojdJXNlREd
C/0YYBfQ7ovzVpwrAwaNke0M0SNyvz5i0K1Ji5O2ihY0LIirb8b7v9jToNrk
/vbkQFSUifOaCzmIM9N1t9/z79vpG389dqkQ559Pn5dFpL7EFv6U6wCGOxcR
/BURLYYL6LZuUeD84lxsgeq+zakIDg3k+G7Z0JJVB9H3ZsVY7EsyXNmgae80
Qdy549Seo0OCN87/2CoyQ7z6ZvLkkVpinPySJRRngVjckdp44Dgxfnc3uX/L
FnEv64VDrhURFm2/5aVxRVwy8ii4b7IDcpbXDVbvIb6/PO+m6/8P0krUXAce
7OM76+IQUvUXoh4Nf015gmjNdu0Si/42eO8KOuuFINp9exHX+fIPbF1aC5cI
Q6QcP276aWYDXCu+VjK/Q2z7LeK/YrCvX70dWMZjERvLnY0JHOtgQJJZ4pmN
mP9rwrZ3egWqbL2mruQh9gtfKxuwWwG1GmP6k4WIzTHyqdcnl0HCd9WWqxLR
dP7TyYbfS0BPoUpd2IaoO5jPR2+xCM+vUivEdCGm3kSDIv8FIKofvPisFzHL
l+4Aa8k8rPh75pwbQdQSN32uK/cLvlPVmi8vIqbfDH5699IsnHYM8+lbQZSJ
br71Jn8GvjVezajYQGR6fiRBn3EGil9REQXtInIld0xP9ExBNO3pZDE6bfxx
cNu0MngC2G/ydzAyaeM/PZJmUaoJCG5d3t5k1cYH/VxbWn7j4PP6zal6Hm20
Ys1ZoHg+BlcYB9btJLVxPuCZ+KjjCPy4nc5nJKuNw59U+4+E/ACzzkfH5RS1
sSVn3M+kbBgM/uP7QKSpjRr01NL5R4ZAgvWK7ocT2jiSmqTurtoP59p+bfQZ
a2Pxx+EU9kf7/PqFayqLqTbeuyPRoVvbC007XnQBF7WxoeTzfJz9d1j5QlFV
b7Ofr2OY92lpD3C6Bt4hvaqNrtlEB0wO9YDj9Ps+j5vaeIKJ/qXIWBeExgq8
KnDVxuxWl+czRl1QbJGiueKmjSvnmwMOlHQCdVt+/HUvbbx1c8l35mMHpH5p
dzIP1kZPHfHRQNM2aL99nu/NG20Uvvd49KRjK2yK/+hoi9DGmwkRsWt+LWAQ
+0vpWJw2JhKFJh7taAIXC9c5n4/auDP4UtuEqAkiWLYiy1O1UT+ToBal2Aiz
zymIlT5ro4Oe86+BnG/AQAjMvV2gjQprXzvvb9aDyg7z1X0Bjb/uqtn46daD
/22BJuEabdw6Ol1uPP8VjlhohDF3a6OU1aaip1sNnGKpOXa6TxvPENWJO09W
g1vr8e2XQ/v+ejCVZFYNdTrnL5NMaaOjh3z5w2NVsPhvmFFrThsFMpdr+r9W
AtsX+9oHC9oIWl/OUxpUwhVxV9HldW2MD1eea8ksh4CpzUGJbW0M2pEkqf5W
BnkxXkEOu9poKLNl6DVXCmQsgasjFDrYPm9g/1qrBBL/JZe1suugy382p1Zk
C6G5QMqFmlsHqxyeFTA8/gJrLvmC+vw6yPrc6vx/LQVAmKr2Lzuqg81nGNok
PfPBMea42paEDp62DtTYGc6D0Avt8wqyOth4nWohRicPxluGz2So7l8oy7Rd
Q4dygfq5Pdmspg6S6UfMqwR8BjmdXwVCOjrotU0mMk/yGXwKNrkiDXVw8e71
ybl/2SAQwzz9wlIHz5ybvkirnQlOKupXHl/WwWKRaxVMdz9BQYftpIvdfj03
ymSufMoAQ7LP4+dv6KChP1frE7l0ePOh38bolg4O2XrIcHqmwYgS8ZjWnf16
Kt8pRLWlwt3rxiOHH+qghtqbT8y+KVBO4n7pkJcO/nxvZv5rOhmoomKGaZ7q
oIfiC6Pbp5MhunVxcPWlDhr/98HVSTYJZq+xWc4E6eDY7ZeuQ2kfQZ5Ya2Ag
VAd1lx99WhL9CN/kA/uq3uugeJWZ6mHVRGBqyTufH62Dmc+XLKwbEuDi1aHv
KfE6aDewIOx2OQFS9kjNopJ00PvK3KT333hYiRDveZ2mg9ZX9H7GfogHDbmz
555m6mAiuynnjl48+Dd5dLl91kHF6KiImrU46LSPN3Es0NnXBxm+YmlxwL3b
0HGxWAdf3I4ZdbkaB1ffLhufKdfBjPJLT0dE4yBH5lC7brUO/ohkUWtci4V/
DXhapU4HZ4MsZUPqY0HfzqFVvFEHjxSU2sfHx0Lwv9cn+Vp1sM2G3+vhs1gY
CPvSzNSpg6F35n+n34kFYekRI4rvOkhx/5Rjr2Ms3PpG0bTVvx9/IqG70CkW
im2kDBeGdTDwLFXVYY9YIPtr2jA6poPpPUzBTG9i4dSbxwbdUzq4e1nx+NuS
WIiQ/FhfP6eDv1MuXltfjoXxumb9kgUdnCz68zNaJQ4krde+Zi7r4LeLi+e1
9vm5+xaXXvy6DtJQGDRX7sRBdSihNmxLBznztRNsvOOBRuIG4cWODp409Ago
5EqA819Dqx8RE7Dd/pdXY2cCxF8q1nYhJ6Bgy/ZLntREmP8zVmlHRUDNq5OH
OuM/glIIFZ6nJWD5qazc8tokeCImW2HISMAJEYWt/1hSoLnGXEuLlYClxufu
ULxLBbaL3mWyhwhIGq3pRWyRDtYbyRqHeQjo/tx1b8L6E6S/bivhECCgnaHH
18bCLNg4+keN5jAB+08dOnZXOQewmrd47ygBr+Vez3dv+AwvLfVVVyUIeFJu
obUlMg961pwLp2UI6P2Q3vNDUQHwB4UpDygQ0Np8JlRDpggcRcoKWlQI6OL/
ayOKvhTyKicVqzQIeN2jKqXDsQL2LtDk5yEBmdktvM0zqsBwVV4hRZeAXb8+
7Rhs18CbAMvcSAMCXjRxDIrIqoMfh5/KvT5BQAnnSNvhkQY4WpGW42NMQJbi
hRaf+BZwNe+UcTtHwAeSUs8rqTqgbHkr67o5AUXO/uZgS+uCgsnvX3KsCDju
PJE2Q9cL2b25FVvWBKwY++vLKDQIqY3B9dpXCJhKXFxjQD4K8WXObS+u7/tb
1bWybI5DVLZhb4czAdlFhze4n05DWILIyCFXAroZD8mU1vyEoHCyGRs3ApKJ
nlXJGfwNz1+MLaZ6ENDqlvnpl5sr8ORR+cay534/aCsvroVvgMetyF3VpwR0
yj5x79nINty1dafw8ScgbbAJu9TcHjibmtI1viLg6BOGy4uTJHjVQI6NKXh/
vnLZ0kqGFGitTs9r8WbfHpS9uSBGjRek5g/HRxBQm5zxyfZzOjQRaJD8GUVA
eYn8LwtZjHiCJUlRLo6AxatSnO5nWFDvwFNNj4/79Sm0iXLxsqPKgsZJ6kwC
lmhc8L+7xo2yo4dMTT7vzztvSj2ngw/Fujas3hcQ8MWDEPk+bQEUruuyHy8m
4CmnoWV9d0HkKcp2EqsgYOPTA0763kLIlhF417WGgFUso/VExsLIEOP4qLie
gMpdaoo3RoWRKvSYL0nzfr+vkw02Sh5GEj/hAMN2AmbFxZ7bUz6M/+4Tvwnt
JmDC4bsV70kO47rjj8iBPgJWKju2NLwRxsWLJQmCwwTceOrkvbcphLPGEemO
Y/v2yKahvoYQjhPu5X6eIuCNA4wOjM6COKhkUrI9R8Are2V0T98JYLeodI3O
IgFf+cmGOLTwYys3TdPLFQLSRB44GsrAj/X0c52dGwS0PDRUG9DMi5UkdQOc
fwkYzhCawRvFg8Xr8eO2ewT8Ptt2OOUlN+bOev1MI9VFRTc3pooQLswYtFpZ
OaCLdTExTLHpnJjUqrqtRqOLkt8r+4e6DmFE3ipVE4su8nu6mC4QONDT+5ro
r8O6KPD2TMTDh6zofkdXVl5MF9mea38p7mXB21cFVB9K6WKZF9EEtSoL2p8Y
NDiorIuUD9YPk1Ez40UoND6rrouNr93yzjxgQjO5MPNI0EUizyc06/OMeJzj
tIO4gS6eobHZ/jTKgDoHJVzunNDFlhYkeWLNgBq7lO4lxrpoR5j4c+wbPUpN
VvsbXdDFUJ+DB77N0yJLtlLyDcf99x8yZ9/5U+NloqvFMTd1scp6m7y5igrT
jMNaulx10exas1sVMRXC8uqq+kNdfD5RomkUegAd5XKQJkAX/0yBoesyGeb7
jJ7FYF18l79me9KUDIm66K/dfaOLX14QF+WVkWLYnZuBQ1G6qELb7RgXSYKV
eeIDGZ90MdMovv7BcyI8SG65MJqji0ZqDQ5KtERoZvqSiLVAF2t8XnCyiO/B
r/XZI4/LddE28wUfh80OsCkn3TnZtl+Pjs+aB+c22Pj3PHvSpYuXfFw/DJ/f
goxesvf5vbrI6TJw/Nf7TdB2t6vkGdXFNkJz9GXZP+BUxE+7uKSLPXcjyC9E
rsEXKmN+wXVdzApWiS0gXgMSCy95sy1dZPBJiQx0WoW328MXyon1MJpG+bbQ
6RWoVo9MCmLSQ4crrBtPdZeANqCxqJpND/8ZcrxwC/8N5kNbzRucevidEQfX
0xZh4ZH56iUhPbzO4PHw3Ow8cJSzorSCHj4pFp+RzJoDOzq9s3YqerhIUW2d
/XsWMi/dvfpWQw+Xee+51SnOAmGvM2BPVw9Dle2uUHZOw00M7m8z1cPUysWp
OP1JKAyumCe10MPD0FngljUBpGOLe8qX9LC/l+/VZ+4JiHhy8kjsVT3se5M0
O0Q6DjXV1Hdc7uuhfNAQcyzxKMisDJhYPdTDAD+7vEvCIxAtkC5n4KWHnuIp
3QFGP8Dd22iFz18PixiOvHJJHwIprYDbbeF62FhxO3s3ox8ina3OlLzXw8np
0/rq231A+UFCNjlaD+NahFTPneiDib/NS55JeviISrwnbPc7RBTRukgV6KGu
v1DuwNtuoJgbPs1ZrIeCKh/+PqDshjscmdIU5XpIyHb4tPeoC07dP/V7+Kse
sl9Q+e/M7U4gVXx9M7BHD69oKYoe820HF/vLpx706+FX2qUQA8Z2+PGftNSV
YT2M+SMa2KPTBoUrbQsaU3qoGThx1y2sBW5mMzjPr+khSa4dU7RnIwyNjJ7o
29RD0dVTX8XrGuA4fY5E7T89FDNrOVPO1ADCN8/MR5Lpo2dbvYFDcT30i4fe
MGLRx4G7qwlq+BX0LW2NlDn0kSbbQMQ0oxbyXsqJC3HrY9sW/fn73LUQNNf5
c1tIH3mjggftKWtAN5nZMU1eH0kZHaQpaarg8/eJ4+HK+ihIvCfrHVYJfBR5
oj7q+lgXJiCtJFgJ2/bn5i4Q9DFScFiP8mU5ZAmGOVCd1ceN0azJBssS4Da5
YrBupo9yOcQyVNHF8PKJ4tExC31s9b+u7TdVBPajPTOFtvpYUCplm/a0EDij
2a45uOrjSJpfmPBWPiiJRLWluOnjK9PCGBnTfDDJFlCZ89BH2/KUE1iQB6+q
Jagcn+pjyVDJq5lnuZBi9Pl2mr8+yv4pPqW98Rlqu5UHfr7SR2F15z1Bx8/w
b1on/cYbffROFLBiupwDHC7fmDMi9HHz1PXhhZFsUNg6+Wg+Sh/zA0135u2z
wfnghZPOH/VR5PSaKvlGJvyQvvX7ZoE+SshnlmB6OmwXrp3PKtbHdUHNZf1f
acCm41H5u1wfk8rtz8fJpcHpc34hLvX62DRo+ki4NwWchqm3s5v0cabBRl9H
IWVfbwfbLrft12eiSBsTkQyV7pHyrn36eDHL9qLm/SQYIhaI+jykj7+9rmsm
LH+ErZdJZKuj+shndX8r5M5HYGORcJaf0sdyo7u7UjuJIPchp+fOnD6+Kali
Tw1KhFNHlLXyFvTxb1/lrMrRRHDMKk1aW9ZHx2anW4KNCfBMRYdecUMfV42a
BQvuJkBCVf39e9v7+fjcbpgcTYBKw5Oj+bv6mOC1/OLKVDwMdXUabJAcwyme
jEe3MuJh08o8R+nAMXzaFXKPzDMeWKaH/0dxdcdT/f1hm5DM7D1SIZSs6v2m
cXFx91VCJSsNJX1DQ0YaGtopo66ZVPZOspNsycgOyQpJEr/7+/O87jnv87yf
9/Oc+3xkzwoRUPQKX2aDIwv0fQ6H5K0hIHGi6OvDnSywWxgd+y1BwOMGVQo7
TFngHXyCZiJDQA3rd71121gQLjhX5K9AwIF3R16fJrGAdS9Ao0CFgB7yisr3
fFlQorBy448GAdMy+0wqklnQmRj2y3Q9AQOFJG8PTLPgt56gS6AuARtjtgTK
kONBMv92VaEBe10y/2WiOh70LaQ2/TVi3z8tJOK4PwFsa588MjcjYHKI1p2O
1YngRVPhOL+DgOb719GuDiZCWHeiV7ElAT+VPWiw6E+CZ+4bm5b2ELC9XNOv
WjgFiifTTbcTCfjyUXb2z2MvoOPsVtYFEgGv/sp5MrLqJcxzFAuW0Ag4dJ2+
4DGRBuLXLU4vOxDQ5XDUiqz6G9CTqO7a4UTAFRHSnUvd6WATbbsr6CABWZuN
vf8cyAQPzea0d24EbCp/cktBKxtCXjtIcRwh4Ktpb4n15rkQa/z1Ah4n4JJG
3KXxV/lQVOo6fOkUARP9t5RQIovgi/Wo/fszBORU1mkRWSiBuebjeZyBBCSQ
/fSLgt6DqNOssuVFAlbYDZPNB8tB55v/1ZAQAm78GBg2XFAFR+3i3gaGE9Dd
vYJzqfsDpOZUzvheJ6AQJn4euP0JviuOrzt6i4DDraQIwd+NoB0u7nz4LgG5
nbwqNt5oAc9Jk7v7HxKQa7T9dOuTz5DEPFBNe0LAZRW3IDWzThgqubxEjCVg
eK4Zn/vlHlBfl2awi0XA88uGfXvr+8H1drPHtiR2/e1e/CXNQ/Ds98LTLakE
DPpS8PSW+yj0HlBu0nlNwM4Qh7WxceOgVLObTzOTgF0ilikX6qfBWf+YuWIu
AUeceOuPlMxC9OO7J6UKCRgfqRobpv8bujgKEleXEPD7I/uWN1v/gtyR3k7e
MgIaLKR2Cg+uwL4mXtHlSgIWD79pCYjnwsemOrvnPxBQ/K7Agff5vNj+nBo4
+Yl9/uZ21sDWVbhWMODNcBNbz86rTbarrEaGb9xQTxsB1+aV/vAqEMX7nZWy
7R0E/Bt340e4hASKvRQPq+4n4Nnent0uZjJIljAtePeNgDPecg0wKYe3zh2Y
zPtOQD3V6x+Lnivip8HL6ukTBFyzicMnVkUFhW3T9qb8JKC2UoW9oJMqErOb
bz77RcDLCqPEKXZevq7wp+zxHwJmq9hLzx9Xxw9hyguR/wj4JsPFhbBZAwUm
dute47TCQ4/uvBQt10AC45hrMK8VurVsTxmQ1cTwt3cfBayywp3teXxjWzWx
UrOg7tRqK6x1r1/hV9BEnlu9nN5iVsih7rn/0ycN3DnPa+wqZYV7dE3M6TQN
DHHROeYoa4VaLuvTx3LUsbSK+pyqaIVZbkdD/DnUcUUv4LONqhVeZRyrv7FD
DXc8ihPaqWmF/ctPuGTPqeL5lUo0X2+F3YIDY6LvVLDIc/zMZl0rvMUvW+PE
zs+LDeIvNxpYYTHvcROZQSU0NTHtUzeywoi99t9qKxTR/9kBKQVTK3zjRHn2
570C5gmE20hut0Lxc5n+99rkcf5kWpCwhRXucnBVrFqUQ6OO5mye3VbYcSyi
IUlXDv0s/nxfsrLC5BUNd7ujsjgjtoc+QbZCbspkttOKNE5m9mrXH7TCoXj1
K299pFBXns+lys0KjzqRY9d8kcRjoTr3SryssPFkiW7JLkkcowX8e33SCiva
TD4GbZDAb3PizbcvWaGdekVxuboY/lcYIe4XZoUaAz9PEF6JIt8lHtreq1a4
YtXXxmEmilpC8y0qkVb4rHgg73SBCHqpdrRlxFmhC3+F+rdrQrgwTFn7MN4K
1Q/bBT38KIhX02qZgclWKKM/8OSouCC+MC5ut3xjhW0yud6zrwVwzC6uo6XE
CqeP3clqUObDQAkZufwyKyxROj0/Ec6Lgh2RjtFVVnjM17JKZ4YHN7qFdLnV
W+HMTeGUJ63ceCzQ/euvr1YotPC1l1DFiUvQo9jZz+7H7pTlGSIn3uB1cCn5
ZoUFqpKusy0c+CrSqjd8wgq3VW15tvrrCkwmbeyX/meFR9Zef+18ewkuHktQ
XeKwxpsnNCV5av+CiKGiax+PNcoc0DNeXvUXNr0VGUwRtsbqCiZpf9QfONny
c8hUwRoNgo9Rpn7OA0eUt6aSijU2fD5+1pU2D5Eug+5cGtbYtENFVrHgF2R8
bx2u3WiN1+9NtM9GzsHMSt7ofnNrXI5UJsn7zEBIpf56BGvkGDDbUzj1E8Qj
XhzR2GmNcz5XfD+c/gmb1z4dG7exxqMrqT86Lk+Dn87F8QuO1nguV98zPnYC
eGbmdVxdrDFBabfZ76ZxuJ/nc3yPqzVO5Rm7NQmOQ47loUkRb2tc3/2r+tKN
MZjfu2s6LsAarcSUnvd8HAEjf9+CLxesMXm94Ml02RHwe/QsRCzEGpujCw7m
HxuG2bYlydDr1sjdXJnToPoNpqk5ph5PrTHL/M4lxYoB2OQ7yBUXZ41FnZbB
UcYDcOKOWF17vDUK6TgdN3jTD+MNx12s06xRdKEwzzy1D77baoXqvLXGS6dj
PTSivoL2Mbqt+3tr/HJbSTOsqBu8IkKkYiutsc4wc8llqAuGP/Qkr6m3RptP
315UWXXCwJ5HdTM91pg7urvksEM7qHpUPtg4aI2H/o5GRqd8hoOXZ13cRqzx
tnyhx8xyG/SWk362TVnjxE2xOsfCVuhGgbUFHDbIM0i0MPNqBvmDW3t/8thg
wSfhPPeeJnAMckvZsMoGUWazYtTeJuh4W2oWLWaDEpZma57tbYTPZgEHgtRs
cK5E9oORwCeQckzWzteywYV8ZZU2vTqgB7T9nN5gg2H815Yb9n+E5jyDMNfN
NnilzVJTueYDNGwZS9m9ywbfWZRz7vxWBSJ0Gd+LVjb4df0nvR7TKrA/vcc8
z9YG6bKeLy7eq4S6DNYnbYYNvli3wcicUQFCTY0PD+2zwYpK7FvzthxsppcP
PHG2weMwu+S4vhxq9PbPCHnY4H/TWjubRMqA3/5a0S5vGxTZtWvn2yvvYc/x
vLALJ2zQb7MZ4znPe6h8KSE99Z8N2pe3F35dVQpl2nXmzVdsME7P7I3jxWLQ
WPe0qSzCBiknE8yy84ogXNPbM+s2+/e6Ab2b84VgrSZw7/4jG6yLdb29MawA
GuV3jTGTbfDuQ9HHzl25YCgncYnw0gaVXz1+NLEtF+7LDEiZvLHB0TtXU+ZZ
ObBX6pKFbJ4N8rU/jeY9nw29IsWPu6psUM5AqdiOnUdwdYReXa0NPr4TU9fW
nwEsIceK4nobPPBe9I+UVwZ4CCxMxXy2wSNROgO+QelQw1d9+VanDfb5iMUc
E02HDbwP5YN6bLD2zx/BDOs3MMm5hXBw2AZPr99nHP3mFZA5uL+Sx2zw1+Es
twvjaZC53ORrMWmDwgqNGT2b0uDMX59YtXkbVGh+uqn7Qyoszb38NcRLRK1l
U7dI6xRwmQ2MaFtFxHWCczx6Bew8/dNatWo1EU/+DlyW25QMoZMjtslSROQJ
mu2V0UuCofHcgUeyRNz0TSGKmpcIe35c9r+qSETtmKyruoREEBxVTziiScTh
jwenXM4lwLHhGVPH9UScuzebJ6GSAPVD7xtsdIl4fpPcknYdO18ORrqbGxAx
sCr10lBQPNzpP/B3oxERQ/X6Lzwyj4eZXr07CqZELObOPR+3wgJ6zz+t1duJ
+EhSrdqzjgW53XXF/5CIhjEN4kdZLJDpekqd3EXE37/aQo1CWBDY4T3aY0VE
Jdskb89j7DzebnqxwZaI0nruKvmHWLDjs4BkKZmIbwqkiQuuLIhrbX+RTifi
5v0/DKVPsYCjJQme7yViQn4rS+smC1ybzrTdcSKi/KV1cQfzWVDRsOtoyEEi
Pi2MW9SdY4FWvQTnaTciXr2soKNnGQ9X6wYeHvYi4vUCi2RMiIex2gwd+jEi
xlu3ropUYOfpD5fKdp0k4oHOpMC4Vwnwupq018iPiDXp1wMcHRNBtEppUtOf
iMvCh/i1tZLAt2IidO15Np54rXucUsnQWlYsy3+JiF1efi63NqaA0fuIN79D
ibgY/tVyl88L2CMrWr/tKhHVTA+UPxR4CcxT98eDbxCRVugnsH00DTw/yAhV
RxLxU8pJWofsG/BXjVkv/ICIIanO1My2dLgaoGpFiSLis12/We3MTIhqSvR4
GENE8r0tCkFy2ZC6fsPlrudELHIfuDiskwuFwa/jVZKI6NaYZt4dnQ8fOwzL
3FPZ+DfPXiadL4Jug7y+1NdENIJrV5f7SmD8mvnKVCYRj5qf+Zzo+x7+9b9T
NMojInewdEJsazmImO3aFlhExEk7onvniypQulvj+O4dEXtttq5MraqFTWO2
ATwVRLxD3O0bIFYPaNn0yLqGiKeKI7VvnGoCyhNG7q06Is5Y/yql0FvBdaaj
taWRiF9lX3Fb1LaDr43LrEwbEY/0xkw/+tkFoawBMZcOIrruS5g2PtsH9xc9
9OO/EnH+S/i5ujODkED9YT/aT8Q1gbdtclaPQE6qz3HdYSLyBjwJMnH6AVVc
cxG+Y0S8MWmj7GcxDe2O/ql5k0T8eNGvoIY2C6OZSzVLM0Q8DQ9N+v/Mw4Jg
8IjFbyKCXPTRTuu/sOowL9+Vv2w+uyuNZHU5UK7omkbdChHTNu07raXCjRsk
RHaK8diih2hhls4VPjQ/evcQU8AW0UeZQPQSRNvytZeeCtvibapKHW+lCDrL
P43tE7XFG++KZ6FODE+cVn6rKWWL86pV8j+8JfG2uvbiG0VbDJ2zU+VYK4fP
zqXJ/FK1Rb/MNjtYVsD0Fn1jMy1bpP3RWfBvVcb3G3MYQRtsUWbHSO8NUMXm
UFO/Cj1bJEmNS9J91XCw6+3dVZtt8WyOx+HR/9RxbrNlhr2xLT7+Lfj9+U4N
5LlR1XDP3BYNh3puPm7SQKkhm8kvYIvftp0M0FLURK1tDcJKu2xxwHf7HwMt
Tdx6n7bxsJUt/nf/x6Y90+y8Pd5unWJri1kFmU/Ph2jg3l1OXhNk9vlrapUb
RtTxSHRfuCHDFu8EJZts3aiOgXNuiWf32SJzqObJmBM739t+Ly92tkX3BemA
PddV8WnC8QFOV1ts82XGLZeoYNrSTw6CB/v8plMynVwqWEz/T/mGty2SFW7G
EDKV8FPa4vamE7a4mbuqvD9EEXt4gpzWnrbF+6Zvvrr7KuCkE/e5/Wdt0bhV
t+C/QHlcyb4S9eycLW6lRCQxHsihinvk5w1htrhk8KFXZFYGDd5K/vK5aouL
h8Yik/Vl0FIqSiLnhi1W4iX/uTPSeLjyORke2GJUVfqcruRarAr0DzwZZYsh
b5NfcbPzs7Y+KeF5jC02N7TMz9dL4viTpd/cSbbYA2qnzGMk0O+kQ1xNLps/
6QkN4xNi+FlT78OfQvb9X16tjxgXRZMuntkN72zx4d8d15JPiOLS7sw9N6tt
2TnXcur6XxEMk189Sflii0qMlUVbdl4ebhyUDu1m71d/WnS1WBCtwgstsvts
0eyt8kjer1Uo/NPzwdrvtmgfESSDAQL4oKpsW9cfW1SJ+7f+eCkvLpyL8hBe
tkWn508evlHiRUeDk5HbuexQVZNSlxDMg0rRikNxgnbYNb+pVIHBjUmn/CPc
5O2w/me9/2s9ThRYR8p5oGyHz4P30H685kDvbs3eKnU7ZKZYbekx5EA9Qovh
eh07FDGgD05fX4Y8Bb3OiW12mLukkcDUZH+vNvPwKFvY4cfgf10X9i/C+Std
uuTddjhzzudX8KM/gDNXgzPt7FCJvvfpaZUFqKke1D7rYodc69VEw0/9gg0X
CqkprnZIEJ/llWyegxuGd853eLDPy8We3Wk8B+SYHY3mPnY4fod+allkFjp8
o85yXGLXGzG94jw9Ddu0Tz43CLPD1miJoSO+0xD7dc9H16t26E/bF7B9egpc
reaUKiPtsCr/pJSOwiSMKZKqrj23w1rTK7TBsjHwyawq9k20Q5PT5QVyq8Zg
bs+OrP0v7PDZlfDu/fTv8M9H95luhh0Wk18dPvlnBETLhAKbSu0wa77G1zrw
Gzxghp4srLBDZ/czCXrfhkDux6JHfI0dvt3lw6dMHwJ1yTHamUY7DGmVZmVs
H4StHjW6sn12qI9xjYXb+qFoETS4huzwpvzSdtHKPsDbeXI/RuyQb5xnawK5
D6zzk/jfTrHv+6tp7zLQA06Cl/sPrtgh5RY1Zym1C/pil9qtue1RNTqmcWSs
E9w3+9Ub8tsjj8GLvQL6nXDC6XARzxp7nI+HPfs+fIHg1xYPUpTs8Y9Jo+2V
LZ+Bb2dBxB01e5TUNW52edIG19v1QwK17LHl9M0KN542uM+h4mOrZ49G9xqf
hA+1QBJ12Wp6uz2uMGWUdJubYOPIGeiwsEeOFv5DfswmSD83YVS22x5XKT/m
k+5phIKEbrX7dvbsfNS9qDzZAHXzhUvGzvZYv1rHtu9JHVAiDGdVDtkjp7OJ
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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
v2z+P66wcPf//1hAH7mx2eF//T8hVtRl
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
J8ydlxKkkJKm+XHHfR7c+nAz9F2OFGpYBUs66PLgmmRWRmj5gT1f5hX3AW5c
yqyvON4ohd1ONmqvzblxgWG2k6VXCneiKY9n1XHhzG3a+eFpKewPMH64e8BH
JlZkSF9sSuG6ibQbUxAnLsnk01eSSOPcEsEJ1i4OnM/u+O82qzRWvD803ODH
js6DYxWTPNLIMetj5dN2CKeY13SOHZFGCSexcVvhQzgexn6BWUka7YVXFnGQ
FQec7OKfW0ijyf3qft4bzPjYprzS31YaGT2IqucWmdDWhPLnSWdptNm5PcLn
yoRTWsViG77SGG9DJZnhwYgr3IQN+inSyP9s9q4b0mM5s+k8Z6b0gZ7p87uX
6dCP6hXjn9yD9TMc/X0SaXHvr/GFlApptLh855TGPjVSd2f9ne6RxsTxZH5v
Fkps/7rG835YGtl+7Q4rOVFgfI2hbuykNLK2sYuUvSdH9sKlWOV1afQe0cs0
9SVD4SgUjWKRwX8F0Zy/+Ehw+laisQ23DJrFpfvQJB7cv31mfGSEZdBOuvgQ
IQ0xSjvG1vXLySBVbU/JLzIiVIdRa9FzMkh7YvJ4/2EC3FeQv7NnKYMxsT9S
9Fz2oVY88lWXvQx2Hv2W+yd2Dww5pTcCvGTwiENv+9jvf2C6futhS5wMTq5R
EP2a3QL2he7yzEcymKzPVtKmsAVD4yJD15/K4OPfDnfSIzbBvrPjKHexDLKl
0xyxVPwL7vl8ta6dMviM9bnVRPMayGRfn8E+GfRxxj4H1TVYS22iYx2VQea/
REYdr1chIOKa1Yc/Mqii8l/xbuYKRNh9WqOll0VaQ/vwuQN+YWTBzDXOJosy
A+ZcG6pLQHP6slYFryza81Wyn0r8A/Hq9DEXJGWRcgq8dX/9hsxDF0WKTsqi
9rXnRP4Nc1DzmeeiuJksmmu1VU7szMKoy1DyqwsHsrlKlprywX295jxZzjVZ
JJAmNNr+PA25ziaTqXGyqOV4XuQw6yQ0MTHzsKXJImG2ctxJnwmYef/NJCFb
Fnu+63bzDP0CUcbT9Q9KZdHj3y7Ff+XjUPjO6Flojyy2G/5jN3o0Ch0OFIP7
w7J4/m3CKBn3KCzRNjEFTcki3XVHy17dnyBrrxvq+1cW53N1sr2vD0M5Fdi5
csjhTa7gdAq+AfhRtps6KyCH+ann7TjP98PGhfedTqJyeGv1UvBIah8ol6qg
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
QMfGAKBRgAhArrBw9///WEBWd2Q1BMIHQEl5jgg=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Is\"", "\"Iw\"", "\"Ds\"", "\"Dw\"", "\"W\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.829289921132641*^9, {3.8292903411842422`*^9, 3.829290360290547*^9}, 
   3.829290429455887*^9, 3.829290930480978*^9, 3.8292909955963163`*^9, {
   3.829292515444108*^9, 3.829292590968732*^9}, 3.8292927569952106`*^9, 
   3.8292967329951143`*^9, {3.829296859229541*^9, 3.829296912873063*^9}, {
   3.829296943507155*^9, 3.829296984449172*^9}, {3.8292970804977818`*^9, 
   3.829297124721987*^9}, 3.8292972142875834`*^9, 3.829300599549494*^9, 
   3.829301322656502*^9, {3.8293050231135607`*^9, 3.8293051094144983`*^9}, 
   3.8293051728352833`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mutant dynamics", "Chapter",
 CellChangeTimes->{{3.825769412647562*^9, 3.825769415790656*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dImudt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Gamma]m", " ", "M", " ", "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]"}], ")"}], "Imu"}], " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], "Imu"}]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"Imu", " ", "\[Beta]m", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ")"}], "Dm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dMdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"fm", " ", "Dm"}], " ", "-", " ", 
    RowBox[{"\[Delta]", " ", "M"}], " ", "-", " ", 
    RowBox[{"\[Gamma]m", " ", "Is", " ", "M"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825769422230962*^9, 3.825769513129081*^9}, {
  3.8259967023096123`*^9, 3.825996725661252*^9}, {3.8280750461966667`*^9, 
  3.828075318382303*^9}, {3.828075366538121*^9, 3.828075370894615*^9}, {
  3.828077455144182*^9, 3.828077549802657*^9}, {3.828077642956213*^9, 
  3.828077656785994*^9}, {3.82807883696902*^9, 3.828078847089674*^9}, {
  3.829300664192379*^9, 3.829300667314118*^9}}],

Cell[BoxData[
 RowBox[{"dMdt", " ", ">", " ", "0"}]], "Input",
 CellChangeTimes->{{3.829382729934622*^9, 3.829382731811203*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Am", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], "-", "\[Alpha]", " ", "-", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{"\[Gamma]m", " ", "Is"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Beta]m", " ", "Ds"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Mu]"}], " ", "-", "\[Sigma]"}], ",", " ", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", " ", 
        RowBox[{"\[Gamma]m", " ", "Is"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Am", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.8257435795568037`*^9, 3.8257436761951513`*^9}, {
   3.825744610613678*^9, 3.825744828142145*^9}, {3.8257448965209913`*^9, 
   3.825744964502389*^9}, 3.825745458268424*^9, {3.825760704533595*^9, 
   3.825760713722117*^9}, {3.825760799326695*^9, 3.825760852375071*^9}, {
   3.8257609318701067`*^9, 3.825760938385151*^9}, {3.8257617813820257`*^9, 
   3.8257618216608*^9}, {3.82576216653201*^9, 3.825762169581469*^9}, {
   3.8257622093116913`*^9, 3.825762212307238*^9}, {3.825762256134933*^9, 
   3.825762257461063*^9}, {3.825762311866053*^9, 3.825762366665176*^9}, {
   3.825762434544545*^9, 3.825762434692444*^9}, {3.825762474404647*^9, 
   3.8257624764593573`*^9}, {3.825762511865068*^9, 3.825762512862294*^9}, 
   3.825762602499343*^9, {3.825762666210616*^9, 3.825762667526772*^9}, {
   3.825762784268333*^9, 3.8257627876555853`*^9}, {3.825766791382381*^9, 
   3.825766798048353*^9}, {3.825766874527048*^9, 3.825766943144342*^9}, {
   3.825769542966591*^9, 3.8257696576848173`*^9}, {3.825996732450741*^9, 
   3.8259967406355743`*^9}, {3.828077614245688*^9, 3.828077729570053*^9}, {
   3.828078863692099*^9, 3.82807886824053*^9}, {3.829300674601161*^9, 
   3.8293006780443077`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8257625244133263`*^9, 3.8257626031628027`*^9, {3.825762663236967*^9, 
   3.8257626678481894`*^9}, 3.82576278821276*^9, {3.825766920117701*^9, 
   3.8257669437672586`*^9}, {3.825769650199383*^9, 3.825769658247525*^9}, 
   3.825996746123179*^9, 3.826257447260975*^9, 3.8262720330749283`*^9, 
   3.828078537142867*^9, 3.828078870108499*^9, 3.8280862481620293`*^9, 
   3.829287666181946*^9, {3.829300657078759*^9, 3.8293006789810953`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Am", ".", 
    RowBox[{"{", 
     RowBox[{"Imu", ",", " ", "Dm", ",", " ", "M"}], "}"}]}], " ", "\[Equal]",
    " ", 
   RowBox[{"{", 
    RowBox[{"dImudt", ",", " ", "dDmdt", ",", " ", "dMdt"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.828078539110243*^9, 3.828078556158781*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.828078556573688*^9, 3.828078872948539*^9, 3.828086250032992*^9, 
   3.8292876692328997`*^9, {3.8293006703928328`*^9, 3.829300679956664*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FMat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "fm", ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825744967827158*^9, 3.825745034216174*^9}, {
   3.825745077306136*^9, 3.825745105387485*^9}, {3.825745311533243*^9, 
   3.825745313136395*^9}, {3.825745491797593*^9, 3.825745495316793*^9}, 
   3.825762315649857*^9, {3.825768772228602*^9, 3.825768772621294*^9}, {
   3.825768859187916*^9, 3.825768868594355*^9}, {3.825769669045599*^9, 
   3.825769695878559*^9}, {3.82807856836335*^9, 3.828078595692235*^9}, {
   3.82807887689528*^9, 3.828078879595543*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VMat", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "+", "\[Alpha]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}]}]}], ",", " ", "0", ",", 
       " ", 
       RowBox[{
        RowBox[{"-", " ", "Is"}], " ", "\[Gamma]m"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Ds"}], " ", "\[Beta]m"}], ",", " ", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]"}], ",", " ", "0"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", 
       RowBox[{
        RowBox[{"Is", " ", "\[Gamma]m"}], " ", "+", " ", "\[Delta]"}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8257450396770067`*^9, 3.825745047939592*^9}, {
   3.825745192814064*^9, 3.825745268738194*^9}, {3.8257453016076803`*^9, 
   3.8257453341689463`*^9}, {3.825745399738305*^9, 3.8257455244249477`*^9}, {
   3.8257606895557623`*^9, 3.825760698517312*^9}, {3.825760957784419*^9, 
   3.8257609605297213`*^9}, {3.825761783062153*^9, 3.8257618011230907`*^9}, {
   3.825761831680503*^9, 3.825761834014905*^9}, {3.825762172493878*^9, 
   3.8257622005331697`*^9}, 3.825762259568303*^9, {3.8257623163642387`*^9, 
   3.825762317714275*^9}, {3.825762514366149*^9, 3.825762515153265*^9}, {
   3.825762828234889*^9, 3.8257628382899017`*^9}, {3.825766807917742*^9, 
   3.8257668109003277`*^9}, {3.825766880574019*^9, 3.825766909146077*^9}, {
   3.825766949336821*^9, 3.82576695489468*^9}, {3.825768766180334*^9, 
   3.825768767468474*^9}, {3.825768873108182*^9, 3.8257688760621853`*^9}, {
   3.825769703295082*^9, 3.825769748060072*^9}, {3.825996753654696*^9, 
   3.8259967613251343`*^9}, {3.828078893379274*^9, 3.828078936583844*^9}, {
   3.82930068396945*^9, 3.829300687252771*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FMat", " ", "-", " ", "VMat"}], " ", "\[Equal]", " ", "Am"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FMat", "-", "VMat"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.825745535204224*^9, 3.825745546960334*^9}, {
   3.825762797727285*^9, 3.825762802679283*^9}, 3.828078970880686*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690154405*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "d"}], "-", "\[Alpha]", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], "0", 
      RowBox[{"Is", " ", "\[Gamma]m"}]},
     {
      RowBox[{"Ds", " ", "\[Beta]m"}], 
      RowBox[{
       RowBox[{"-", "\[Mu]"}], "-", "\[Sigma]"}], "0"},
     {"0", "fm", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Is"}], " ", "\[Gamma]m"}], "-", "\[Delta]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825745547298971*^9, 3.825760963396234*^9, 
  3.825762675741332*^9, 3.825762763732744*^9, 3.8257628030804*^9, 
  3.825762840128049*^9, 3.825766957311707*^9, 3.825768776692342*^9, 
  3.825769749805113*^9, 3.825996763207527*^9, 3.8262574530068903`*^9, 
  3.826272037958765*^9, 3.828078973940933*^9, 3.829300690165204*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Eigenvalues", "[", 
     RowBox[{"FMat", ".", 
      RowBox[{"Inverse", "[", "VMat", "]"}]}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8257455598341827`*^9, 3.8257455911249437`*^9}, {
  3.8257461264116898`*^9, 3.8257461486249657`*^9}, {3.8257623186116734`*^9, 
  3.8257623378340073`*^9}, {3.82576697533962*^9, 3.825766979793467*^9}, {
  3.8259994422573833`*^9, 3.825999447886388*^9}, {3.828078981152101*^9, 
  3.828078988764003*^9}, {3.828079342319439*^9, 3.828079343394005*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Ds", " ", "fm", " ", "Is", " ", "\[Beta]m", " ", "\[Gamma]m"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Beta]m", "+", "\[Rho]"}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9, 
   3.8280862571632423`*^9, 3.8292876770018063`*^9, 3.82930069387365*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 RowBox[{"R0", "=", 
  RowBox[{
   FractionBox[
    RowBox[{"fm", " "}], 
    RowBox[{
     RowBox[{"Is", " ", "\[Gamma]m"}], "+", "\[Delta]"}]], 
   FractionBox[
    RowBox[{"Is", "  ", "\[Gamma]m"}], 
    RowBox[{"d", "+", "\[Alpha]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ds", "+", "Dw"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Rho]", "+", "\[Beta]m"}], ")"}], " "}]}]], 
   FractionBox[
    RowBox[{"Ds", "  ", "\[Beta]m", " "}], 
    RowBox[{"\[Mu]", "+", "\[Sigma]"}]]}]}]],
 CellChangeTimes->{{3.8257669602216*^9, 3.82576698019858*^9}, 
   3.825768778697901*^9, 3.825769751755842*^9, 3.825996766948429*^9, 
   3.825999448320259*^9, 3.8262574558054256`*^9, 3.82627203924581*^9, {
   3.828078978605538*^9, 3.8280789896573*^9}, 3.828079343884613*^9}]], "Text",\

 CellChangeTimes->{{3.828079371356689*^9, 3.828079398327075*^9}, {
  3.828081925654728*^9, 3.828081971958478*^9}, {3.828083563011613*^9, 
  3.82808357625698*^9}, {3.828086532935025*^9, 3.828086537733881*^9}, {
  3.829024901330192*^9, 3.829024903924568*^9}, {3.829300702528157*^9, 
  3.8293007106618147`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Double infection", "Title",
 CellChangeTimes->{{3.82937964935014*^9, 3.8293796517908154`*^9}}],

Cell[CellGroupData[{

Cell["Resident and mutant dynamics", "Chapter",
 CellChangeTimes->{{3.829718117545349*^9, 3.82971812201271*^9}, {
  3.8324025000002613`*^9, 3.832402501708288*^9}}],

Cell["\<\
Assumptions:
1. Fixed number of total intermediate hosts and definitive hosts
2. An infinite parasite pool such that reproduction of parasite does not \
affect the dynamics of the pool
3. We track the frequency dynamics of four compartments instead of density \
dynamics: Iw: intermediate host infected with a wild type, Iww: intermediate \
host infected with two wild types, Dw: definitive host infected with a wild \
type, Dww: definitive host infected with two wild type.
Is: frequency of susceptible intermediate host (1 - Iw - Iww)
Ds: frequency of susceptible definitive host (1 - Dw - Dww)
p: probability that two parasites make it into the intermediate host
q: probability that two parasites make it into the definitive host\
\>", "Text",
 CellChangeTimes->{{3.829641047411026*^9, 3.8296411399189243`*^9}, {
  3.829641170951269*^9, 3.829641194153261*^9}, {3.829641250799773*^9, 
  3.829641260684396*^9}, {3.829643725128002*^9, 3.8296437253295403`*^9}, {
  3.829645853609191*^9, 3.829646027793091*^9}, {3.829720274153536*^9, 
  3.829720298981111*^9}, {3.8297391038345222`*^9, 3.829739115221641*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dIwdt", " ", "=", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "p"}], ")"}], "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], " ", "Is"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", " ", "+", " ", "\[Alpha]w"}], ")"}], "Iw"}], " ", "-", 
     RowBox[{
      RowBox[{"\[CapitalPi]", "[", "\[Beta]w", "]"}], " ", "Iw"}]}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "intermediate"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dIwwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"p", " ", "\[Gamma]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "m"}], ")"}], "2"], "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]ww"}], ")"}], "Iww"}], " ", "-", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]ww", "]"}], " ", "Iww"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dDwdt", " ", "=", 
    RowBox[{
     RowBox[{"\[Lambda]S", " ", "Ds"}], "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]w"}], ")"}], " ", "Dw"}], " ",
      "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "\[Lambda]S", " ", "+", " ", "\[Lambda]SM", " ", "+", " ", 
        "\[Lambda]mix"}], ")"}], "Dw"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Infected", " ", "definitive"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDwwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]C", " ", "Ds"}], " ", "+", " ", 
    RowBox[{"\[Lambda]S", " ", "Dw"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix", " ", "Dw"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]ww"}], ")"}], "Dww"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.829641491952265*^9, 3.829641509213229*^9}, 
   3.829641554213709*^9, {3.82964158647001*^9, 3.829641605191667*^9}, {
   3.829642355338485*^9, 3.829642415871438*^9}, {3.829642450302302*^9, 
   3.829642493401485*^9}, {3.829643258902021*^9, 3.829643261991568*^9}, {
   3.829643559402507*^9, 3.829643563793765*^9}, {3.829643616676971*^9, 
   3.829643765211213*^9}, {3.8296438023552427`*^9, 3.829643878217937*^9}, {
   3.829643992030114*^9, 3.829644107115541*^9}, {3.829644140489849*^9, 
   3.829644141871138*^9}, 3.829644196667557*^9, {3.8296449315615797`*^9, 
   3.829645119436164*^9}, {3.8297182386833143`*^9, 3.829718252810196*^9}, {
   3.829718294255495*^9, 3.8297183114909697`*^9}, {3.832327703655903*^9, 
   3.832327835049532*^9}, 3.83232966660935*^9, {3.832330179509568*^9, 
   3.832330206040997*^9}, {3.8323302845736637`*^9, 3.832330296001422*^9}, {
   3.832330334676523*^9, 3.832330343084*^9}, {3.83233117760822*^9, 
   3.832331192067749*^9}, {3.832334218743729*^9, 3.832334226612721*^9}, {
   3.832336444885851*^9, 3.832336459337688*^9}, {3.832336576913377*^9, 
   3.83233661430239*^9}, {3.832401878840892*^9, 3.8324018879048862`*^9}, {
   3.832401945036797*^9, 3.8324019639282923`*^9}, {3.832402643978001*^9, 
   3.8324026457264147`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dImdt", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], "\[Gamma]", " ", "m", " ", "Is"}], "  ",
     "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]m"}], ")"}], "Imut"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]m", "]"}], "Imut"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImwdt", " ", "=", 
   RowBox[{
    RowBox[{"2", " ", "p", " ", "\[Gamma]", " ", "m", 
     RowBox[{"(", 
      RowBox[{"1", "-", "m"}], ")"}], "Is"}], "   ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]wm"}], ")"}], " ", "Imw"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]mw", "]"}], " ", "Imw"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dImmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"p", " ", "\[Gamma]", "  ", 
     SuperscriptBox["m", "2"], "Is"}], "  ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"d", " ", "+", " ", "\[Alpha]mm"}], ")"}], "Imm"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"\[CapitalPi]", "[", "\[Beta]mm", "]"}], "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]SM", " ", "Ds"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]m"}], ")"}], "Dw"}], " ", "-", 
    " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
      "\[Lambda]SM", " ", "+", " ", "\[Lambda]S", " ", "+", " ", 
       "\[Lambda]mix"}], ")"}], "Dm"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmwdt", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Lambda]CMW", " ", "Ds"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]S", " ", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], " ", "\[Lambda]mix"}]}], ")"}], "Dm"}], " ", 
    "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", " ", "+", " ", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "\[Lambda]mix"}]}], ")"}], " ", "Dw"}], "+", 
    
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw", " ", "Imw", " ", "Dm"}], 
    " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mw"}], ")"}], " ", "Dmw"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDmmdt", " ", "=", " ", 
   RowBox[{"\[Lambda]CMDs", " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Lambda]SM", "+", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "\[Lambda]mix"}]}], ")"}], " ", "Dm"}], " ", 
    "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", " ", "+", " ", "\[Sigma]mm"}], ")"}], " ", "Dmm"}]}]}],
   ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.832327798889567*^9, 3.832327799876758*^9}, {
   3.8323278455180902`*^9, 3.8323279292160187`*^9}, {3.832328049077491*^9, 
   3.832328052551435*^9}, {3.832328246765815*^9, 3.832328255611532*^9}, 
   3.832328288510475*^9, {3.8323283572977343`*^9, 3.8323283899017763`*^9}, {
   3.832328461811987*^9, 3.8323285005038233`*^9}, {3.83232866076691*^9, 
   3.832328665160878*^9}, 3.8323287882895184`*^9, 3.8323294977108717`*^9, {
   3.832329566661824*^9, 3.832329574077695*^9}, {3.832336421167181*^9, 
   3.8323364264472857`*^9}, {3.8323364814136267`*^9, 
   3.8323365112100763`*^9}, {3.8323365495166187`*^9, 3.832336558955804*^9}, {
   3.832336633721697*^9, 3.8323366595415907`*^9}, {3.832336721994238*^9, 
   3.83233679049203*^9}, {3.8324020639753*^9, 3.8324021216434402`*^9}, {
   3.832402287965073*^9, 3.832402297116391*^9}, {3.83240264843528*^9, 
   3.832402655921612*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"condFixTotal", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Is", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", "Iw", " ", "-", " ", "Iww"}], ")"}]}], ",",
      " ", 
     RowBox[{"Ds", " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", "Dw", " ", "-", " ", "Dww"}], ")"}]}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPi]", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"b0", " ", "+", "x"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]S", "=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Beta]w", " ", "Iw"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "q"}], ")"}], "\[Beta]ww", " ", "Iww"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]C", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]ww", " ", "Iww"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]SM", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Beta]m", " ", "Imut"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mw", " ", "Imw"}], " ", "+", 
    " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "q"}], ")"}], "\[Beta]mm", " ", "Imm"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]mix", " ", "=", "  ", 
   RowBox[{"q", " ", "\[Beta]mw", " ", "Imw"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]CM", " ", "=", " ", 
   RowBox[{"q", " ", "\[Beta]mm", " ", "Imm"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8296460697045517`*^9, 3.829646095587291*^9}, {
  3.82964617685653*^9, 3.829646182989686*^9}, {3.832330227808227*^9, 
  3.832330237277548*^9}, {3.832330305132187*^9, 3.832330354823772*^9}, {
  3.8323342409867697`*^9, 3.832334248914604*^9}, {3.8323363163199797`*^9, 
  3.832336408052898*^9}, {3.8323364388843613`*^9, 3.8323364565865*^9}, {
  3.832336519340336*^9, 3.832336551109263*^9}, {3.8323365853019133`*^9, 
  3.832336606639152*^9}, {3.832336665193926*^9, 3.832336679262456*^9}, {
  3.832336762595909*^9, 3.83233677461066*^9}, {3.832402125171793*^9, 
  3.832402134479272*^9}, {3.8324090997398*^9, 3.8324091297840853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysing the resident dynamics", "Chapter",
 CellChangeTimes->{{3.832408998193762*^9, 3.8324090038525467`*^9}}],

Cell[CellGroupData[{

Cell["Equilibrium", "Subchapter",
 CellChangeTimes->{{3.8324090109240017`*^9, 3.832409012856284*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"condResOnly", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"Imut", "\[Rule]", " ", "0"}], ",", "  ", 
     RowBox[{"Imm", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"Imw", " ", "\[Rule]", " ", "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.83240906087984*^9, 3.832409093310376*^9}, {
   3.832409139816143*^9, 3.832409148041252*^9}, 3.832409195377907*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solsres", " ", "=", " ", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dIwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dIwwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
         RowBox[{"dDwwdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
       "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829646038362496*^9, 3.829646066175127*^9}, {
   3.8296460989022427`*^9, 3.829646112952201*^9}, {3.829646148855029*^9, 
   3.8296461883334827`*^9}, 3.829716313710265*^9, {3.832328330244488*^9, 
   3.832328330565817*^9}, {3.83233021663793*^9, 3.8323302762277327`*^9}, {
   3.8323303616324463`*^9, 3.83233036187814*^9}, {3.832331073051442*^9, 
   3.832331100729104*^9}, {3.832336893940008*^9, 3.8323369106178503`*^9}, {
   3.8324091549457483`*^9, 3.832409172838251*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iw", "/.", "solsres"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"b0", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]ww", " ", ">", "0"}], " ", "&&", " ", 
    RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"0", "\[LessEqual]", " ", "p", "\[LessEqual]", "1"}], " ", "&&", 
    " ", 
    RowBox[{"\[Alpha]w", " ", ">", " ", "0"}]}], " ", ",", " ", "Reals"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.832329792282908*^9, 3.832329813676409*^9}, {
  3.832331710196608*^9, 3.832332102515286*^9}, {3.832332399101774*^9, 
  3.832332415634095*^9}, {3.832332548745118*^9, 3.832332565698371*^9}, {
  3.832332597722006*^9, 3.832332677657757*^9}, {3.832332717430265*^9, 
  3.832332744784152*^9}, {3.8323327825722322`*^9, 3.832332786846245*^9}, {
  3.8323368406111507`*^9, 3.832336844067896*^9}, {3.8323369150160227`*^9, 
  3.832336924863265*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "\[LessEqual]", "p", "<", "1"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"\[Beta]w", ">", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
      RowBox[{"d", " ", "\[Beta]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.832329801624041*^9, 3.832329814153812*^9}, 
   3.832331260385582*^9, {3.832331858970853*^9, 3.8323321030478077`*^9}, {
   3.8323323996532927`*^9, 3.832332416170981*^9}, {3.832332635839349*^9, 
   3.8323326781673*^9}, {3.8323327217860117`*^9, 3.832332746293705*^9}, 
   3.832332787311101*^9, {3.8323368188765574`*^9, 3.832336844722437*^9}, {
   3.8323369175927057`*^9, 3.832336925372449*^9}, 3.832402602478231*^9, 
   3.8324027351929197`*^9, 3.832409203683844*^9, 3.833532092284329*^9, 
   3.833945661584284*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
     RowBox[{"p", " ", "\[Gamma]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "b0", " ", "d"}], "-", 
     SuperscriptBox["d", "2"], "-", 
     RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
     RowBox[{"d", " ", "\[Alpha]w"}], "-", 
     RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
     RowBox[{"d", " ", "\[Beta]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
     RowBox[{"b0", " ", "\[Gamma]"}], "-", 
     RowBox[{"d", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.832384244566329*^9, 3.8323842460177393`*^9}, {
  3.832400256734977*^9, 3.832400263613785*^9}, {3.832403165297183*^9, 
  3.832403175014187*^9}, {3.832404423541275*^9, 3.832404433322205*^9}, {
  3.8324054719814663`*^9, 3.8324054795864697`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}]}], 
       "+", "\[Beta]ww"}], ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.832384246746402*^9, {3.832400258178032*^9, 3.832400264181429*^9}, {
   3.832403166411693*^9, 3.832403176619546*^9}, {3.832404424681678*^9, 
   3.8324044340683393`*^9}, {3.832405473149761*^9, 3.8324054766230707`*^9}, 
   3.83353209400599*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     "\[Gamma]"}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     "\[Gamma]"}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", " ", "+", " ", "\[Gamma]"}], 
      ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "-", "\[Beta]ww"}], ")"}], " ", 
     "\[Gamma]"}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], " ", ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
    "+", " ", 
    RowBox[{"\[Gamma]", " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
    RowBox[{"p", "  ", "\[Gamma]", " ", "\[Alpha]w"}], " ", "+", " ", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}], " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]}],
 CellChangeTimes->{
  3.832384246746402*^9, {3.832400258178032*^9, 
   3.832400264181429*^9}}]], "Text",
 CellChangeTimes->{
  3.832402777968194*^9, {3.832402849724245*^9, 3.832402925921858*^9}, {
   3.832402965446184*^9, 3.832402982853883*^9}, {3.832403123076495*^9, 
   3.832403138296722*^9}, {3.8324036819738283`*^9, 3.8324036848876877`*^9}, {
   3.832404296785638*^9, 3.832404302144247*^9}, {3.8324043491112757`*^9, 
   3.8324043638359957`*^9}, {3.832404403006349*^9, 3.832404417072011*^9}, {
   3.832404509888983*^9, 3.832404535960106*^9}, {3.832404575215783*^9, 
   3.832404590378949*^9}, {3.832404644463299*^9, 3.832404644832184*^9}, {
   3.832404910343381*^9, 3.832404959952423*^9}, {3.83240539864124*^9, 
   3.8324055023550177`*^9}, {3.834032228549748*^9, 3.8340322383756638`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], " ", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], "+", " ", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
      RowBox[{"p", "  ", "\[Gamma]", " ", "\[Alpha]w"}], " ", "+", " ", 
      RowBox[{"\[Gamma]", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]ww", "+", "\[Beta]ww"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "p"}], ")"}], " "}]}], 
     RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[Equal]", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]ww"}], "-", 
      RowBox[{"d", " ", "\[Beta]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.834032250800151*^9, 3.834032257803639*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iww", "/.", "solsres"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"%", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"0", "\[LessEqual]", " ", "p", " ", "\[LessEqual]", " ", "1"}], 
    " ", "&&", " ", 
    RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"d", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"b0", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
    RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}]}], " ", ",", " ", "\[Beta]ww", 
   ",", "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.832331493411772*^9, 3.832331498729002*^9}, {
  3.8323321366737747`*^9, 3.832332155318511*^9}, {3.8323322842917433`*^9, 
  3.8323323463466063`*^9}, {3.832332445225294*^9, 3.832332472309957*^9}, {
  3.832332801856941*^9, 3.832332806105134*^9}, {3.832405914694604*^9, 
  3.8324059246160107`*^9}, {3.8324059582502747`*^9, 3.83240596341096*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]w", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
  RowBox[{"d", ">", "0"}], "&&", 
  RowBox[{"b0", ">", "0"}], "&&", 
  RowBox[{"0", "<", "p", "\[LessEqual]", "1"}], "&&", 
  RowBox[{"\[Gamma]", ">", "0"}], "&&", 
  RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
  RowBox[{"\[Beta]ww", ">", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
     "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
      
      RowBox[{"p", " ", "\[Gamma]"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["b0", "2"]}], "-", 
      RowBox[{"2", " ", "b0", " ", "d"}], "-", 
      SuperscriptBox["d", "2"], "-", 
      RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
      RowBox[{"d", " ", "\[Alpha]w"}], "-", 
      RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
      RowBox[{"b0", " ", "\[Beta]w"}], "-", 
      RowBox[{"d", " ", "\[Beta]w"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
      RowBox[{"b0", " ", "\[Gamma]"}], "-", 
      RowBox[{"d", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
      RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
      RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
      RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.832331499242293*^9, {3.832332143970943*^9, 3.8323321558198013`*^9}, {
   3.832332290763845*^9, 3.832332346967086*^9}, {3.83233244998731*^9, 
   3.832332473043498*^9}, {3.832332799828554*^9, 3.832332807078762*^9}, 
   3.8323368227974443`*^9, 3.832336938081369*^9, 3.832403743901835*^9, 
   3.8324056558433847`*^9, {3.832405915453796*^9, 3.832405925499701*^9}, {
   3.8324059586865053`*^9, 3.832405963931058*^9}, 3.8324092118545837`*^9, 
   3.833945675946741*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    RowBox[{
    "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
     RowBox[{"p", " ", "\[Gamma]"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "b0", " ", "d"}], "-", 
     SuperscriptBox["d", "2"], "-", 
     RowBox[{"b0", " ", "\[Alpha]w"}], "-", 
     RowBox[{"d", " ", "\[Alpha]w"}], "-", 
     RowBox[{"b0", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"d", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "-", 
     RowBox[{"b0", " ", "\[Beta]w"}], "-", 
     RowBox[{"d", " ", "\[Beta]w"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
     RowBox[{"b0", " ", "\[Gamma]"}], "-", 
     RowBox[{"d", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "-", 
     RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "+", 
     RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "-", 
     RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.832403751410838*^9, 3.832403758140729*^9}, {
  3.8324065158413057`*^9, 3.832406523370261*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}]}]}],
       ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{
   "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.8324037589534473`*^9, {3.8324065167317743`*^9, 3.832406524281479*^9}, 
   3.833945678805094*^9}]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}]}]}],
       ")"}], " ", "\[Gamma]"}]}], 
   RowBox[{
   "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", "\[Gamma]", "-", 
    RowBox[{"p", " ", "\[Gamma]"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
      "b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", " ", "+", " ", 
       "\[Gamma]"}], ")"}]}], "+", 
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w"}], ")"}], 
     "\[Gamma]", " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}]}], 
    " ", "+", " ", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"b0", "+", "d"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Alpha]w", "+", "\[Beta]w"}], ")"}], "p", " ", "\[Gamma]"}], 
    "+", " ", 
    RowBox[{"\[Alpha]ww", " ", "\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", "p"}], " ", ")"}], " "}]}], 
   RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w", "+", 
    RowBox[{"\[Gamma]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "p"}], ")"}]}]}]]}]}],
 CellChangeTimes->{3.8324037589534473`*^9}]], "Text",
 CellChangeTimes->{{3.8324064660159187`*^9, 3.832406510503319*^9}, {
  3.834032316555629*^9, 3.834032395484638*^9}}],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dDwdt", " ", "\[Equal]", " ", "0"}], ",", " ", 
       RowBox[{"dDwwdt", " ", "\[Equal]", " ", "0"}]}], "}"}], "/.", 
     "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"Dw", ",", " ", "Dww"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.834033259978529*^9, 3.834033266070026*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibrium stability conditions", "Subchapter",
 CellChangeTimes->{{3.832409026226013*^9, 3.832409029072009*^9}, {
  3.833970359604176*^9, 3.8339703606216793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JRes", " ", "=", " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt"}], 
        "}"}], "/.", "condFixTotal"}], "/.", "condResOnly"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], 
       "}"}], "}"}]}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.832406548483384*^9, 3.832406640737584*^9}, {
  3.832406749043187*^9, 3.832406754445374*^9}, {3.832409033602165*^9, 
  3.83240905361662*^9}, {3.832409230277813*^9, 3.832409263733767*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]w", "-", "\[Beta]w", "-", 
      "\[Gamma]", "+", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "p"}], " ", "\[Gamma]"}], ",", 
     RowBox[{
      RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]ww", "-", "\[Beta]ww", "-", 
      RowBox[{"p", " ", "\[Gamma]"}]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}]}], " ", "\[Beta]w"}], 
     ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"2", " ", "Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      "\[Mu]", "-", "\[Sigma]w"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dw", " ", "\[Beta]w"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Dw", "+", "q", "-", 
        RowBox[{"2", " ", "Dw", " ", "q"}], "-", 
        RowBox[{"Dww", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}], ",", 
     RowBox[{
      RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "Iww"}], " ", "q", " ", "\[Beta]ww"}], "-", "\[Mu]", "-", 
      "\[Sigma]ww"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8324066039951487`*^9, 3.832406641179555*^9, {3.832409255946203*^9, 
   3.8324092642641287`*^9}, 3.833532124546104*^9, 3.833945699439839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JRes", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.832409268030389*^9, 3.832409273314041*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]w", "-", "\[Beta]w", "-", 
       "\[Gamma]", "+", 
       RowBox[{"p", " ", "\[Gamma]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", "p"}], " ", "\[Gamma]"}], 
      RowBox[{
       RowBox[{"-", "b0"}], "-", "d", "-", "\[Alpha]ww", "-", "\[Beta]ww", 
       "-", 
       RowBox[{"p", " ", "\[Gamma]"}]}], "0", "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}]}], " ", "\[Beta]w"}], 
      
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "Dw"}], "+", "Dww"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"2", " ", "Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
       "\[Mu]", "-", "\[Sigma]w"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iw"}], " ", "\[Beta]w"}], "+", 
       RowBox[{"Iww", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}]}]},
     {
      RowBox[{"Dw", " ", "\[Beta]w"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dw", "+", "q", "-", 
         RowBox[{"2", " ", "Dw", " ", "q"}], "-", 
         RowBox[{"Dww", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}], 
      RowBox[{
       RowBox[{"Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"Iww", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Iww"}], " ", "q", " ", "\[Beta]ww"}], "-", "\[Mu]", "-",
        "\[Sigma]ww"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.832409273649954*^9, 3.833532126747891*^9, 
  3.833945700442053*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eigvals", " ", "=", " ", 
   RowBox[{
    RowBox[{"Eigenvalues", "[", "JRes", "]"}], "//", "FullSimplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8324094699133053`*^9, 3.83240948640094*^9}, {
   3.833532162948451*^9, 3.833532168514834*^9}, 3.833532811661775*^9}],

Cell["Check with function Reduce", "Text",
 CellChangeTimes->{{3.833969204046648*^9, 3.833969208732028*^9}}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigvals", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "<", "0"}], "&&", " ", 
   RowBox[{"1", ">", "p", ">", "0"}], "&&", " ", 
   RowBox[{"d", " ", ">", " ", "0"}], "&&", 
   RowBox[{"\[Beta]w", ">", "0"}], "&&", 
   RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"b0", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Gamma]", " ", ">", "0"}]}], "]"}]], "Input"],

Cell["Check with some algebra", "Text",
 CellChangeTimes->{{3.833969214478662*^9, 3.833969226981674*^9}, {
  3.833969515833363*^9, 3.833969516974371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833966189902479*^9, 3.833966213518471*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "b0"}], "-", 
    RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
    "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.83396619469245*^9, 3.8339662140116253`*^9}}]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "b0"}], "-", 
    RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
    "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", " ", "p"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"0", ":", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], "2"], "+", 
      RowBox[{"2", "  ", 
       RowBox[{"(", 
        RowBox[{
        "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
        ")"}], " ", "\[Gamma]"}], "+", 
      SuperscriptBox["\[Gamma]", "2"]}], " ", "=", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ",
         "+", " ", "\[Gamma]"}], ")"}], "2"]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "whole", " ", "expression", " ", 
  "become"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "b0"}], "-", 
       RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
       "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+"}], "|", 
      RowBox[{
      "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
       "+", " ", "\[Gamma]"}], "|"}], ")"}]}], " ", "<", " ", 
   RowBox[{"0", " ", "in", " ", "all", " ", "cases"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", " ", "p"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"1", ":", "\[IndentingNewLine]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], "2"], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "p"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], "2"], "-", 
     RowBox[{"2", "  ", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}], "+", 
     SuperscriptBox["\[Gamma]", "2"]}], " ", "=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
      "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
       "-", " ", "\[Gamma]"}], ")"}], "2"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "whole", " ", "expression", " ", 
  "become"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b0"}], "-", 
      RowBox[{"2", " ", "d"}], "-", "\[Alpha]w", "-", "\[Alpha]ww", "-", 
      "\[Beta]w", "-", "\[Beta]ww", "-", "\[Gamma]", "+"}], "|", 
     RowBox[{
     "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ", 
      "-", " ", "\[Gamma]"}], "|"}], ")"}]}], " ", "<", " ", 
  RowBox[{
  "0", " ", "in", " ", "all", " ", 
   "cases"}]}], "\[IndentingNewLine]"}]]], "Text",
 CellChangeTimes->{{3.8335326126892138`*^9, 3.83353265427325*^9}, {
  3.833532716465397*^9, 3.833532765581737*^9}, {3.833532823024332*^9, 
  3.833532848118684*^9}, {3.833533042039837*^9, 3.8335330626750727`*^9}, {
  3.83353797736475*^9, 3.833538083562282*^9}, {3.833538121642602*^9, 
  3.8335381947844152`*^9}}],

Cell["\<\
The eigenvalue cannot be imaginary because the part under the square root is \
always positive\
\>", "Text",
 CellChangeTimes->{{3.833969865822095*^9, 3.8339698913534937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww", " ",
         "+", " ", "\[Gamma]"}], ")"}], "2"], "-", 
     RowBox[{"4", " ", "p", 
      RowBox[{"(", 
       RowBox[{
       "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", "\[Beta]ww"}], 
       ")"}], " ", "\[Gamma]"}]}], " ", "<", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Alpha]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Beta]w", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"\[Beta]ww", " ", ">", " ", "0"}], " ", "&&", " ", 
   RowBox[{"0", "<", "p", "<", "1"}], " ", "&&", " ", 
   RowBox[{"\[Gamma]", " ", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8335364587697363`*^9, 3.8335365372279997`*^9}, {
  3.833537765639224*^9, 3.833537768378428*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8335364879019613`*^9, 3.833536537790173*^9}, 
   3.833537769160514*^9, 3.833945728210422*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eigvals", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.833966283976314*^9, 3.833966292871079*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
    RowBox[{"Iww", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{
       SuperscriptBox["Iww", "2"], " ", 
       SuperscriptBox["q", "2"], " ", 
       SuperscriptBox["\[Beta]ww", "2"]}], "-", 
      RowBox[{"2", " ", "Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
         "\[Sigma]ww"}], ")"}]}]}]], "-", "\[Sigma]ww"}], ")"}]}]], "Output",
 CellChangeTimes->{3.833966293379434*^9}]
}, Open  ]],

Cell["Check with function Reduce [Still there are some doubts]", "Text",
 CellChangeTimes->{{3.833969279799005*^9, 3.833969285564312*^9}, {
  3.8339693248995523`*^9, 3.833969330119479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eigvals", "[", 
     RowBox[{"[", "4", "]"}], "]"}], ">", "0"}], "&&", " ", 
   RowBox[{"1", ">", "q", ">", "0"}], "&&", " ", 
   RowBox[{"d", " ", ">", " ", "0"}], "&&", 
   RowBox[{"\[Beta]w", ">", "0"}], "&&", 
   RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Sigma]w", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"Iww", " ", ">", " ", "0"}], "&&", " ", 
   RowBox[{"Iw", " ", ">", "0"}], " ", "&&", " ", 
   RowBox[{"\[Mu]", " ", ">", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8339693076916924`*^9, 3.8339693561382837`*^9}, {
  3.833969476649102*^9, 3.83396948093442*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8339693366783524`*^9, 3.8339693386682253`*^9}, {
  3.833969473173317*^9, 3.833969490979816*^9}}]
}, Open  ]],

Cell["Check with some algebra", "Text",
 CellChangeTimes->{{3.833969499604073*^9, 3.833969506000525*^9}, 
   3.833970027179865*^9}],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"If", " ", "q"}], " ", "=", " ", "0"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
         RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
         RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
             RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", 
             "-", "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
          RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
          RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
              RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", 
              "-", "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}], 
       "<", "0"}], "\[IndentingNewLine]", "iff", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
       ">", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
           RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-",
            "\[Sigma]ww"}], ")"}]}]]}], "\[IndentingNewLine]", "iff", 
      "\[IndentingNewLine]", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
          RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
          RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
         ")"}], "2"], ">", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
          RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
          "\[Sigma]ww"}], ")"}]}]}], "\[IndentingNewLine]", "iff", 
      "\[IndentingNewLine]", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["Iw", "2"], " ", 
          SuperscriptBox["\[Beta]w", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["Iww", "2"], " ", 
          SuperscriptBox["\[Beta]ww", "2"]}], "+", 
         RowBox[{"2", " ", "Iww", " ", "\[Beta]ww", " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
         RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", 
            "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], ")"}], " ", ">", " ", 
    RowBox[{"0", "  ", "in", " ", "all", " ", "cases"}]}], 
   "\[IndentingNewLine]"}]],
  CellChangeTimes->{3.833966293379434*^9}],
 "\n"
}], "Text",
 CellChangeTimes->{
  3.833966314883297*^9, {3.8339665060162973`*^9, 3.833966552018918*^9}, {
   3.833966624605592*^9, 3.833966728881033*^9}, {3.833968093317787*^9, 
   3.833968228724926*^9}, {3.8339682750960093`*^9, 3.8339683836144037`*^9}, {
   3.83396849075776*^9, 3.833968490759582*^9}, 3.833968524138281*^9, {
   3.833968825720284*^9, 3.83396892934764*^9}, {3.8339690407970133`*^9, 
   3.833969068942181*^9}, {3.833969530524148*^9, 3.8339695581955843`*^9}}],

Cell["Using some functions to simplify some expression above", "Text",
 CellChangeTimes->{{3.8339695423865232`*^9, 3.833969554853491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "+", 
       RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
      ")"}], "2"], "]"}], "-", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
       RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
       "\[Sigma]ww"}], ")"}]}], "]"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339689519651823`*^9, 3.833968975950758*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Iw", "2"], " ", 
     SuperscriptBox["\[Beta]w", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["Iww", "2"], " ", 
     SuperscriptBox["\[Beta]ww", "2"]}], "+", 
    RowBox[{"2", " ", "Iww", " ", "\[Beta]ww", " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}], "+", 
    RowBox[{"2", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.833968954532154*^9, 3.833968976386876*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["Iww", "2"], " ", 
         SuperscriptBox["q", "2"], " ", 
         SuperscriptBox["\[Beta]ww", "2"]}], "-", 
        RowBox[{"2", " ", "Iww", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
           "\[Sigma]ww"}], ")"}]}]}]], "-", "\[Sigma]ww"}], ")"}]}], "/.", 
   RowBox[{"q", "\[Rule]", " ", "0"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339663665753727`*^9, 3.833966377540638*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"2", " ", "Iww", " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"4", " ", "Iww", " ", "\[Beta]ww"}], "+", "\[Sigma]w", "-", 
        "\[Sigma]ww"}], ")"}]}]], "-", "\[Sigma]ww"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8339663718115788`*^9, 3.833966378291596*^9}}]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 RowBox[{
  RowBox[{"If", " ", "q"}], " ", "=", " ", "1"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
          "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
          "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}], "<", " ", 
  "0"}], "\[IndentingNewLine]", 
 RowBox[{"iff", " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
   RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
   RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], ">", 
  SqrtBox[
   RowBox[{
    RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
       "\[Sigma]ww"}], ")"}], 
     "2"]}]]}], "\[IndentingNewLine]", "iff", "\[IndentingNewLine]", 
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
     RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
     RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
    ")"}], "2"], ">", 
  RowBox[{
   RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
      "\[Sigma]ww"}], ")"}], 
    "2"]}]}], "\[IndentingNewLine]", "iff", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["Iw", "2"], " ", 
      SuperscriptBox["\[Beta]w", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
       ")"}]}], "+", 
     RowBox[{"Iw", " ", "\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], ")"}]}],
   ">", 
  RowBox[{"0", " ", "True", " ", "in", " ", "all", " ", "cases"}]}]}],
 CellChangeTimes->{3.8339695869394197`*^9}]], "Text",
 CellChangeTimes->{{3.833969617026904*^9, 3.833969649231299*^9}, {
  3.833969681159239*^9, 3.833969764115258*^9}, {3.833969835298121*^9, 
  3.833969845934141*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "+", 
      RowBox[{"Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "q"}], ")"}], " ", "\[Beta]ww"}], "-", 
      RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "+", 
      SqrtBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["Iww", "2"], " ", 
         SuperscriptBox["q", "2"], " ", 
         SuperscriptBox["\[Beta]ww", "2"]}], "-", 
        RowBox[{"2", " ", "Iww", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
           "\[Sigma]ww"}], ")"}]}]}]], "-", "\[Sigma]ww"}], ")"}]}], "/.", 
   RowBox[{"q", "\[Rule]", " ", "1"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8339695857799683`*^9, 3.83396958587049*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "Iw", " ", "\[Beta]w"}], "-", 
    RowBox[{"Iww", " ", "\[Beta]ww"}], "-", 
    RowBox[{"2", " ", "\[Mu]"}], "-", "\[Sigma]w", "-", "\[Sigma]ww", "+", 
    SqrtBox[
     RowBox[{
      RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
         "\[Sigma]ww"}], ")"}], "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8339695869394197`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Expand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "Iw", " ", "\[Beta]w"}], "+", 
        RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
        RowBox[{"2", " ", "\[Mu]"}], "+", "\[Sigma]w", "+", "\[Sigma]ww"}], 
       ")"}], "2"], "]"}], "-", 
    RowBox[{"4", " ", "Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "-", 
    RowBox[{"Expand", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Iww", " ", "\[Beta]ww"}], "-", "\[Sigma]w", "+", 
        "\[Sigma]ww"}], ")"}], "2"], "]"}]}], "//", "Simplify"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.83396977212418*^9, 3.8339698237603416`*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["Iw", "2"], " ", 
     SuperscriptBox["\[Beta]w", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Mu]", "+", "\[Sigma]w"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", "\[Mu]", "+", "\[Sigma]ww"}], 
      ")"}]}], "+", 
    RowBox[{"Iw", " ", "\[Beta]w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iww", " ", "\[Beta]ww"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]", "+", "\[Sigma]ww"}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.833969819404808*^9, 3.833969824235017*^9}}]
}, Open  ]],

Cell["\<\
Check if the part under the square root is negative (i.e. potential for \
imaginary eigenvalue)\
\>", "Text",
 CellChangeTimes->{{3.834031269836607*^9, 3.834031296415291*^9}}],

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  RowBox[{"Import", "[", "\"\</Users/Linh-phuong/resstability.txt\>\"", "]"}],
   "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["Iww", "2"], " ", 
       SuperscriptBox["q", "2"], " ", 
       SuperscriptBox["\[Beta]ww", "2"]}], "-", 
      RowBox[{"2", " ", "Iww", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Sigma]w", "-", "\[Sigma]ww"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "Iw", " ", "\[Beta]w"}], "+", "\[Sigma]w", "-", 
         "\[Sigma]ww"}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"Iw", " ", "\[Rule]", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Iw", "/.", "solsres"}], "]"}]}]}], "/.", 
   RowBox[{"Iww", " ", "\[Rule]", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Iww", "/.", "solsres"}], "]"}]}]}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"Reduce", "[", 
    RowBox[{
     RowBox[{"%", ">", "0"}], " ", "&&", 
     RowBox[{"1", ">", "p", ">", "0"}], " ", "&&", " ", 
     RowBox[{"1", ">", "q", ">", "0"}], "&&", " ", 
     RowBox[{"d", " ", ">", " ", "0"}], "&&", 
     RowBox[{"\[Beta]w", ">", "0"}], "&&", 
     RowBox[{"\[Beta]ww", " ", ">", "0"}], " ", "&&", " ", 
     RowBox[{"\[Sigma]w", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Sigma]ww", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Alpha]ww", " ", ">", " ", "0"}], "&&", " ", 
     RowBox[{"\[Alpha]w", " ", ">", "0"}], "&&", 
     RowBox[{"\[Gamma]", " ", ">", " ", "0"}], " ", "&&", " ", 
     RowBox[{"b0", " ", ">", " ", "0"}]}], "]"}], "//", "Simplify"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.833970721762128*^9, 3.833970731805526*^9}, {
  3.833971106696406*^9, 3.833971174391171*^9}, {3.8340313380806837`*^9, 
  3.8340313422681704`*^9}, {3.834038280562126*^9, 3.834038289270138*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9454.62144400000033783726394176483154296875`9.996244057981237", ",", 
   RowBox[{
    RowBox[{"b0", ">", "0"}], "&&", 
    RowBox[{"d", ">", "0"}], "&&", 
    RowBox[{"\[Alpha]w", ">", "0"}], "&&", 
    RowBox[{"\[Alpha]ww", ">", "0"}], "&&", 
    RowBox[{"\[Beta]w", ">", "0"}], "&&", 
    RowBox[{"\[Beta]ww", ">", "0"}], "&&", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0", "<", "p", "\[LessEqual]", 
         FractionBox[
          RowBox[{"\[Beta]w", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
           RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
           RowBox[{"2", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
           RowBox[{"b0", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]w", "+", "\[Beta]ww"}], ")"}]}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]w", "+", "\[Beta]ww"}], ")"}]}]}]]}], "&&", 
        RowBox[{"0", "<", "q", "<", "1"}], "&&", 
        RowBox[{"\[Gamma]", ">", "0"}], "&&", 
        RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0", "<", "\[Sigma]ww", "<", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"2", " ", "p", " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Alpha]ww", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"2", " ", "p", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"3", " ", "p", " ", "q", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]ww", 
                    " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", "p", " ", "q", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                  SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["b0", "2"], "+", 
                   SuperscriptBox["d", "2"], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}], "2"]}], ")"}]}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "2", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Gamma]"}], 
               "-", 
               RowBox[{
               "2", " ", "p", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", 
                "\[Gamma]"}], "+", 
               RowBox[{
               "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]ww", " ", 
                "\[Gamma]"}], "-", 
               RowBox[{
               "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", "\[Beta]ww", 
                " ", "\[Gamma]"}], "+", 
               RowBox[{
               "2", " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Gamma]"}], "-", 
               RowBox[{
               "3", " ", "p", " ", "q", " ", "\[Beta]w", " ", "\[Beta]ww", 
                " ", "\[Gamma]"}], "+", 
               RowBox[{
                SuperscriptBox["b0", "2"], " ", "\[Sigma]w"}], "+", 
               RowBox[{
                SuperscriptBox["d", "2"], " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Alpha]ww", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], "+", 
               
               RowBox[{
               "p", " ", "\[Alpha]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], "-", 
               RowBox[{
               "p", " ", "\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{
               "p", " ", "\[Beta]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], "-", 
               
               RowBox[{
               "p", " ", "\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                   "\[Gamma]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}], " ", "\[Sigma]w"}], "+", 
                  RowBox[{"\[Beta]w", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                   "\[Gamma]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]ww", "+", "\[Gamma]"}], ")"}], 
                   " ", "\[Sigma]w"}], "+", 
                  RowBox[{"\[Beta]w", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["b0", "2"], "+", 
               SuperscriptBox["d", "2"], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
               RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
               RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
               RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
               RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                  "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                  "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                  "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}], "||", 
          RowBox[{"\[Sigma]ww", ">", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"2", " ", "p", " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Alpha]ww", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"2", " ", "p", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"3", " ", "p", " ", "q", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]ww", 
                    " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", "p", " ", "q", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                  SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["b0", "2"], "+", 
                   SuperscriptBox["d", "2"], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}], "2"]}], ")"}]}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "2", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Gamma]"}], 
               "-", 
               RowBox[{
               "2", " ", "p", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", 
                "\[Gamma]"}], "+", 
               RowBox[{
               "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]ww", " ", 
                "\[Gamma]"}], "-", 
               RowBox[{
               "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", "\[Beta]ww", 
                " ", "\[Gamma]"}], "+", 
               RowBox[{
               "2", " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Gamma]"}], "-", 
               RowBox[{
               "3", " ", "p", " ", "q", " ", "\[Beta]w", " ", "\[Beta]ww", 
                " ", "\[Gamma]"}], "+", 
               RowBox[{
                SuperscriptBox["b0", "2"], " ", "\[Sigma]w"}], "+", 
               RowBox[{
                SuperscriptBox["d", "2"], " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Alpha]ww", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], "+", 
               
               RowBox[{
               "p", " ", "\[Alpha]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], "-", 
               RowBox[{
               "p", " ", "\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{
               "p", " ", "\[Beta]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], "+", 
               RowBox[{"\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], "-", 
               
               RowBox[{
               "p", " ", "\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
               "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                   "\[Gamma]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}], " ", "\[Sigma]w"}], "+", 
                  RowBox[{"\[Beta]w", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                   "\[Gamma]"}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]ww", "+", "\[Gamma]"}], ")"}], 
                   " ", "\[Sigma]w"}], "+", 
                  RowBox[{"\[Beta]w", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["b0", "2"], "+", 
               SuperscriptBox["d", "2"], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
               RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
               RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
               RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
               RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
               RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
               RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                  "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                  "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                  "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}]}], ")"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"\[Beta]w", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], 
          RowBox[{
           RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
           RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
           RowBox[{"2", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
           RowBox[{"b0", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]w", "+", "\[Beta]ww"}], ")"}]}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"(", 
             RowBox[{"\[Beta]w", "+", "\[Beta]ww"}], ")"}]}]}]], "<", "p", 
         "<", "1"}], "&&", 
        RowBox[{"\[Gamma]", ">", "0"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0", "<", "q", "<", 
             FractionBox[
              RowBox[{
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
               RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Beta]w"}], "+", 
               RowBox[{"p", " ", "\[Alpha]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "-", 
                  RowBox[{"p", " ", "\[Beta]w"}], "+", 
                  RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "-", 
                  RowBox[{"p", " ", "\[Beta]w"}], "+", 
                  RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}]}], 
              RowBox[{"2", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
                ")"}], " ", "\[Beta]ww"}]]}], "&&", 
            RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0", "<", "\[Sigma]ww", "<", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"2", " ", "p", " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Alpha]ww", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"2", " ", "p", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"3", " ", "p", " ", "q", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]ww", 
                    " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", "p", " ", "q", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], "+", 
                    SuperscriptBox["d", "2"], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}], "2"]}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Gamma]"}],
                    "-", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", 
                    "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Gamma]"}], 
                   "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Beta]w", " ", "\[Beta]ww",
                     " ", "\[Gamma]"}], "+", 
                   RowBox[{
                    SuperscriptBox["b0", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{
                    SuperscriptBox["d", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{
                   "p", " ", "\[Alpha]w", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Alpha]ww", " ", "\[Gamma]", " ", 
                    "\[Sigma]w"}], "+", 
                   RowBox[{
                   "p", " ", "\[Beta]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}], " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]ww", "+", "\[Gamma]"}], ")"}], 
                    " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["b0", "2"], "+", 
                   SuperscriptBox["d", "2"], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}], "||", 
              RowBox[{"\[Sigma]ww", ">", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"2", " ", "p", " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Alpha]ww", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"2", " ", "p", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"3", " ", "p", " ", "q", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]ww", 
                    " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", "p", " ", "q", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], "+", 
                    SuperscriptBox["d", "2"], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}], "2"]}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Gamma]"}],
                    "-", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", 
                    "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Gamma]"}], 
                   "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Beta]w", " ", "\[Beta]ww",
                     " ", "\[Gamma]"}], "+", 
                   RowBox[{
                    SuperscriptBox["b0", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{
                    SuperscriptBox["d", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{
                   "p", " ", "\[Alpha]w", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Alpha]ww", " ", "\[Gamma]", " ", 
                    "\[Sigma]w"}], "+", 
                   RowBox[{
                   "p", " ", "\[Beta]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}], " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]ww", "+", "\[Gamma]"}], ")"}], 
                    " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["b0", "2"], "+", 
                   SuperscriptBox["d", "2"], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"q", "\[Equal]", 
             FractionBox[
              RowBox[{
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
               RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Beta]w"}], "+", 
               RowBox[{"p", " ", "\[Alpha]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "-", 
                  RowBox[{"p", " ", "\[Beta]w"}], "+", 
                  RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "-", 
                  RowBox[{"p", " ", "\[Beta]w"}], "+", 
                  RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}]}], 
              RowBox[{"2", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
                ")"}], " ", "\[Beta]ww"}]]}], "&&", 
            RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0", "<", "\[Sigma]ww", "<", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"2", " ", "p", " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Alpha]ww", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"2", " ", "p", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"3", " ", "p", " ", "q", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]ww", 
                    " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", "p", " ", "q", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], "+", 
                    SuperscriptBox["d", "2"], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}], "2"]}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Gamma]"}],
                    "-", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", 
                    "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Gamma]"}], 
                   "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Beta]w", " ", "\[Beta]ww",
                     " ", "\[Gamma]"}], "+", 
                   RowBox[{
                    SuperscriptBox["b0", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{
                    SuperscriptBox["d", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{
                   "p", " ", "\[Alpha]w", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Alpha]ww", " ", "\[Gamma]", " ", 
                    "\[Sigma]w"}], "+", 
                   RowBox[{
                   "p", " ", "\[Beta]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}], " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]ww", "+", "\[Gamma]"}], ")"}], 
                    " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["b0", "2"], "+", 
                   SuperscriptBox["d", "2"], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}], "||", 
              RowBox[{"\[Sigma]ww", ">", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"2", " ", "p", " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]ww", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Alpha]ww", " ", 
                    "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"2", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"2", " ", "p", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "-", 
                    
                    RowBox[{"3", " ", "p", " ", "q", " ", "\[Alpha]ww", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]ww", 
                    " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", "\[Beta]ww"}], "+", 
                    
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Alpha]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{
                    "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", 
                    SuperscriptBox["p", "2"], " ", "q", " ", "\[Alpha]w", " ",
                     "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", "\[Alpha]w", " ", 
                    "\[Beta]w", " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "-", 
                    RowBox[{"3", " ", "p", " ", "q", " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["p", "2"], " ", 
                    SuperscriptBox["q", "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}], "+", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["d", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Alpha]ww", 
                    " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Beta]w"}], 
                    "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww"}]}], 
                    ")"}]}], "+", 
                    RowBox[{"2", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]w", " ", 
                    "\[Beta]ww"}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"3", " ", "q"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["q", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Beta]ww", "2"]}]}], ")"}]}], "+", 
                    RowBox[{"\[Beta]ww", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Beta]w", "2"]}], "-", 
                    RowBox[{"p", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "-", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["p", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"q", " ", "\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"3", " ", "\[Beta]w"}], "-", 
                    RowBox[{"3", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", "q", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
                    RowBox[{"\[Alpha]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "\[Beta]w"}], "+", 
                    RowBox[{"3", " ", "q", " ", "\[Beta]w"}], "+", 
                    RowBox[{"2", " ", "\[Beta]ww"}], "-", 
                    RowBox[{"6", " ", "q", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["q", "2"], " ", "\[Beta]ww"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["b0", "2"], "+", 
                    SuperscriptBox["d", "2"], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                    RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                    RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                    RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                    RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                    RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}], "2"]}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "2", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", "\[Gamma]"}],
                    "-", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]ww", " ", "\[Beta]w", " ", 
                    "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "p", " ", "\[Alpha]w", " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Alpha]w", " ", 
                    "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{
                   "2", " ", "\[Beta]w", " ", "\[Beta]ww", " ", "\[Gamma]"}], 
                   "-", 
                   RowBox[{
                   "3", " ", "p", " ", "q", " ", "\[Beta]w", " ", "\[Beta]ww",
                     " ", "\[Gamma]"}], "+", 
                   RowBox[{
                    SuperscriptBox["b0", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{
                    SuperscriptBox["d", "2"], " ", "\[Sigma]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{
                   "p", " ", "\[Alpha]w", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Alpha]ww", " ", "\[Gamma]", " ", 
                    "\[Sigma]w"}], "+", 
                   RowBox[{
                   "p", " ", "\[Beta]w", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}], 
                   "-", 
                   RowBox[{
                   "p", " ", "\[Beta]ww", " ", "\[Gamma]", " ", "\[Sigma]w"}],
                    "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}], " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Beta]ww", " ", 
                    "\[Gamma]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]ww", "+", "\[Gamma]"}], ")"}], 
                    " ", "\[Sigma]w"}], "+", 
                    RowBox[{"\[Beta]w", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "\[Gamma]"}], 
                    "+", "\[Sigma]w"}], ")"}]}]}], ")"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["b0", "2"], "+", 
                   SuperscriptBox["d", "2"], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Alpha]ww"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "+", 
                   RowBox[{"\[Alpha]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
                   RowBox[{"p", " ", "\[Alpha]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Alpha]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"p", " ", "\[Beta]w", " ", "\[Gamma]"}], "+", 
                   RowBox[{"\[Beta]ww", " ", "\[Gamma]"}], "-", 
                   RowBox[{"p", " ", "\[Beta]ww", " ", "\[Gamma]"}], "+", 
                   RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "\[Alpha]w", "+", "\[Alpha]ww", "+", "\[Beta]w", "+", 
                    "\[Beta]ww", "+", "\[Gamma]"}], ")"}]}], "+", 
                   RowBox[{"b0", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "d"}], "+", "\[Alpha]w", "+", 
                    "\[Alpha]ww", "+", "\[Beta]w", "+", "\[Beta]ww", "+", 
                    "\[Gamma]"}], ")"}]}]}], ")"}]}]}]}]}], ")"}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
               RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Beta]w"}], "+", 
               RowBox[{"p", " ", "\[Alpha]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
               RowBox[{"b0", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "-", 
                  RowBox[{"p", " ", "\[Beta]w"}], "+", 
                  RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{"\[Beta]w", "-", 
                  RowBox[{"p", " ", "\[Beta]w"}], "+", 
                  RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}]}], 
              RowBox[{"2", " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
                ")"}], " ", "\[Beta]ww"}]], "<", "q", "<", "1"}], "&&", 
            RowBox[{"\[Sigma]w", ">", "0"}], "&&", 
            RowBox[{"\[Sigma]ww", ">", "0"}]}], ")"}]}], ")"}]}], ")"}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.833971539427052*^9, 3.834031693802718*^9, 
  3.8340481427035522`*^9}]
}, Open  ]],

Cell[TextData[{
 "Summarise conditions for positive part under the square root",
 "\[NotEqual]",
 "\n",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"0", "<", "p", "\[LessEqual]", 
    FractionBox[
     RowBox[{"\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
         RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]]}], 
   " ", "&&", " ", 
   RowBox[{"0", "<", "\[Sigma]ww", "<", "X1"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"||", " ", 
    RowBox[{"\[Sigma]ww", " ", ">", " ", "X2"}]}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[Beta]w", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], ")"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
         RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<", 
    "p", "<", "1"}], " ", "&&", 
   RowBox[{"0", "<", "q", "<", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", "\[Beta]w"}],
       "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
         "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
     RowBox[{"2", " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
      " ", "\[Beta]ww"}]]}], "&&", "&&", " ", 
   RowBox[{"0", "<", "\[Sigma]ww", "<", "X1"}]}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"||", " ", 
    RowBox[{"\[Sigma]ww", " ", ">", " ", "X2"}]}], 
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
          RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<",
      "p", "<", "1"}], " ", "&&", " ", 
    RowBox[{"q", "\[Equal]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
          "\[Beta]w"}], ")"}], " ", "\[Beta]ww"}]}], 
      RowBox[{"2", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
       " ", "\[Beta]ww"}]]}], " ", "&&", " ", 
    RowBox[{"\[Sigma]ww", "  ", "\[NotEqual]", " ", "X2"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"\[Beta]w", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
        ")"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
        "\[Beta]w"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", 
          RowBox[{"2", " ", "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}]], "<",
      "p", "<", "1"}], "  ", "&&", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"\[Alpha]ww", " ", "\[Beta]w"}], "-", 
       RowBox[{"p", " ", "\[Alpha]ww", " ", "\[Beta]w"}], "+", 
       RowBox[{"p", " ", "\[Alpha]w", " ", "\[Beta]ww"}], "+", 
       RowBox[{"\[Beta]w", " ", "\[Beta]ww"}], "+", 
       RowBox[{"b0", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]w", "-", 
          RowBox[{"p", " ", "\[Beta]w"}], "+", 
          RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}], "+", 
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{"\[Beta]w", "-", 
          RowBox[{"p", " ", "\[Beta]w"}], "+", 
          RowBox[{"p", " ", "\[Beta]ww"}]}], ")"}]}]}], 
      RowBox[{"2", " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
       " ", "\[Beta]ww"}]], "<", "q", "<", "1"}]}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"X1", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
              "\[Beta]w"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w"}]}], 
               ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
              "\[Beta]w"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "q"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "p", " ", "q"}]}], ")"}], " ", 
                 "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                  "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
             "\[Gamma]"}]}], ")"}], "2"]}], ")"}]}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
            "\[Beta]w"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "p"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"3", " ", "q"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"3", " ", "p", " ", "q"}]}], ")"}], " ", 
               "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
         "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                 "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}], " ", "\[Sigma]w"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
         " ", 
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
             "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
              "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}]}]}], " "}], "\[IndentingNewLine]", 
  RowBox[{"X2", " ", "=", " ", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
             "\[Beta]w"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"p", " ", "q"}]}], ")"}], " ", "\[Beta]w"}]}], 
              ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
             "\[Beta]w"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "q"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "p", " ", "q"}]}], ")"}], " ", 
                "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], ")"}], "/", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
             ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                 "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}], "2"]}], ")"}]}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww"}], ")"}], " ", 
           "\[Beta]w"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "p"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", 
                RowBox[{"3", " ", "q"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"b0", "+", "d", "+", "\[Alpha]w"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"3", " ", "p", " ", "q"}]}], ")"}], " ", 
              "\[Beta]w"}]}], ")"}], " ", "\[Beta]ww"}]}], ")"}], " ", 
        "\[Gamma]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], 
            ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
               "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
                "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
           "\[Gamma]"}]}], ")"}], " ", "\[Sigma]w"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]w", "+", "\[Beta]w"}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", "\[Beta]ww"}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b0", "+", "d", "+", "\[Alpha]ww", "+", 
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
            "\[Alpha]w", "-", "\[Alpha]ww", "+", "\[Beta]w", "-", 
             "\[Beta]ww"}], ")"}]}], "+", "\[Beta]ww"}], ")"}], " ", 
        "\[Gamma]"}]}], ")"}]}]}]}]}],
  CellChangeTimes->{3.833971539427052*^9, 3.834031693802718*^9, 
   3.8340481427035522`*^9}],
 "\n"
}], "Text",
 CellChangeTimes->{{3.834057339166164*^9, 3.834057376653514*^9}, {
  3.834057466011156*^9, 3.834057510884099*^9}, {3.8340576910803022`*^9, 
  3.834057717555675*^9}, {3.834057762377296*^9, 3.834057763529285*^9}, {
  3.834057840570129*^9, 3.834057840570283*^9}, {3.834057913106043*^9, 
  3.8340579227592*^9}, {3.834057981272954*^9, 3.8340579812730017`*^9}, {
  3.8340580119540586`*^9, 3.8340580389648247`*^9}, {3.8340581150059233`*^9, 
  3.8340581457758217`*^9}, {3.834058254223524*^9, 3.8340582880668573`*^9}, {
  3.8340583597696657`*^9, 3.834058420369753*^9}, {3.834058499427589*^9, 
  3.8340584994276657`*^9}, {3.834058537583664*^9, 3.83405853846661*^9}, {
  3.834058571879586*^9, 3.834058579396235*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical analysis", "Subchapter",
 CellChangeTimes->{{3.833970377721216*^9, 3.8339703820006933`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"resvar", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"resvart", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Iw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Iww", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dw", "[", "t", "]"}], ",", " ", 
     RowBox[{"Dww", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dIwdt", ",", " ", "dIwwdt", ",", " ", "dDwdt", ",", " ", "dDwwdt"}], 
      "}"}], "/.", "condResOnly"}], "/.", "condFixTotal"}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"resvar", "\[Rule]", " ", "resvart"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ressys", " ", "=", " ", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"resvart", ",", " ", "t"}], "]"}], "==", "%"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8339704321682653`*^9, 3.833970637742549*^9}, 
   3.834059883773746*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pareco1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", " ", "\[Rule]", " ", "1.3"}], ",", " ", 
     RowBox[{"\[Gamma]", " ", "\[Rule]", " ", "4.2"}], ",", " ", 
     RowBox[{"p", " ", "\[Rule]", " ", "0.1"}], ",", " ", 
     RowBox[{"q", " ", "\[Rule]", " ", "0.12"}], ",", " ", 
     RowBox[{"d", " ", "\[Rule]", " ", "1.4"}], ",", " ", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "1.2"}], ",", " ", 
     RowBox[{"\[Alpha]w", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Alpha]ww", " ", "\[Rule]", " ", "0.4"}], ",", " ", 
     RowBox[{"\[Beta]w", " ", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Beta]ww", "\[Rule]", " ", "0.5"}], ",", " ", 
     RowBox[{"\[Sigma]w", " ", "\[Rule]", " ", "0.6"}], ",", " ", 
     RowBox[{"\[Sigma]ww", " ", "\[Rule]", " ", "0.45"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.833970384520238*^9, 3.8339704149917393`*^9}, {
  3.834031817767427*^9, 3.834031921447423*^9}, {3.834038259021524*^9, 
  3.834038270814554*^9}, {3.834059796111875*^9, 3.83405979671793*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tmax", " ", "=", "  ", "200"}], ";"}]], "Input",
 CellChangeTimes->{{3.834060016717185*^9, 3.8340600478291473`*^9}, {
  3.8340601320362864`*^9, 3.834060139066847*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"init", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Iw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.2"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Iww", "[", "0", "]"}], " ", "\[Equal]", "  ", "1.1"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"Dw", "[", "0", "]"}], " ", "\[Equal]", " ", "1.4"}], ",", " ", 
     
     RowBox[{
      RowBox[{"Dww", "[", "0", "]"}], " ", "\[Equal]", " ", "1.1"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.834059835079261*^9, 3.8340598753765497`*^9}, {
  3.834060223598219*^9, 3.83406026425415*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsolres1", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"{", 
        RowBox[{"ressys", ",", " ", "init"}], "}"}], "]"}], "/.", "pareco1"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{"Iw", ",", " ", "Iww", ",", " ", "Dw", ",", " ", "Dww"}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8340598774292727`*^9, 3.834059897951157*^9}, {
  3.834059930429377*^9, 3.834059974471097*^9}, {3.8340600361804457`*^9, 
  3.834060037009159*^9}, {3.8340600896715937`*^9, 3.834060096262355*^9}, {
  3.8340601436784153`*^9, 3.834060147923568*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"resvart", "/.", "nsolres1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "tmax"}], "}"}], " ", ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1.5"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Iw\>\"", ",", " ", "\"\<Iww\>\"", ",", " ", "\"\<Dw\>\"", ",", " ", 
      "\"\<Dww\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8340599823755302`*^9, 3.834060039663742*^9}, {
  3.834060110226181*^9, 3.8340601193836803`*^9}, {3.834060154776322*^9, 
  3.8340603034095488`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
3jgZQ7DXqjPDfMDbfi/c3Lvq3/d6uGzzMIFS5VWbibhEDp82BVeFVTcVXHuT
7r8POLeveh/Ukw747IebiquO0rNIpJwzA1OlVT/T72SbiTsA29ZsdWPO+k2a
OYSv1Y9Pc7e8s7KAi2v38bHu4qxotoDIbatWFHEzzNxvCXe3rnqLw54UoVZL
4FgzOVtoMMbRChbX8vk1sL6a67QCnrXzqp9zRSfsrEF0zXeqfJtjTmw4Oqb3
x/1QaxBbsxW5UelrhjWQ1vzF4sZfXr3WsHnNwsUaed5eNuv9tTWcp/yDD67n
Ec8S9fAMtIWltTyKAyHRERGHYG7NA5OC7xIu2MH8mqftDMeyz9ivu0ahafe7
Sw7r3lkdWzRz0XHdrv/ctkAph9f9Vcr8RcztI+smIfXj9elH183Y5Kci/9ex
dTckBgjo2DitGxsImvJo2XC8v/wY9ZDzukt7Js53tm64PNKbJnvEZd08vCtH
nLo3nKj3iZFi77rusQJP7PTnDefM8nJVHz2+Md9ZJ/+soQ1P3F9CS75u62bB
yu8e/LbhCWYJaXTKfaP/t3RFyviG77J65P550mPdo4Kf1M9ObTiBOcDO+5Tn
uqW7xvIeVW64sNh/ZmVlw/8HBdsIZg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 200}, {0, 1.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, Automatic}}],
   FormBox[
    FormBox[
     TemplateBox[{"\"Iw\"", "\"Iww\"", "\"Dw\"", "\"Dww\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8340600401695757`*^9, {3.8340601135391397`*^9, 3.834060119895474*^9}, 
   3.83406015804697*^9, {3.834060214443883*^9, 3.834060271383986*^9}, 
   3.8340603044669743`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1351, 831},
WindowMargins->{{23, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 201, 2, 137, "Title"],
Cell[CellGroupData[{
Cell[806, 28, 118, 1, 216, "Chapter"],
Cell[927, 31, 4603, 97, 379, "Input"],
Cell[5533, 130, 1517, 40, 154, "Input"],
Cell[7053, 172, 1797, 46, 249, "Input"],
Cell[8853, 220, 861, 23, 211, "Input"],
Cell[CellGroupData[{
Cell[9739, 247, 483, 13, 96, "Input"],
Cell[10225, 262, 879, 24, 153, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11141, 291, 600, 15, 96, "Input"],
Cell[11744, 308, 1385, 39, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13166, 352, 118, 1, 204, "Subchapter"],
Cell[CellGroupData[{
Cell[13309, 357, 99, 1, 213, "Section"],
Cell[13411, 360, 2126, 52, 211, "Input"],
Cell[CellGroupData[{
Cell[15562, 416, 123, 2, 96, "Input"],
Cell[15688, 420, 1721, 47, 316, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17446, 472, 360, 11, 96, "Input"],
Cell[17809, 485, 242, 3, 96, "Output"]
}, Open  ]],
Cell[18066, 491, 381, 9, 96, "Input"],
Cell[CellGroupData[{
Cell[18472, 504, 520, 14, 96, "Input"],
Cell[18995, 520, 488, 13, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19520, 538, 797, 20, 154, "Input"],
Cell[20320, 560, 3302, 90, 307, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23671, 656, 120, 1, 213, "Section"],
Cell[23794, 659, 2328, 61, 306, "Input"],
Cell[CellGroupData[{
Cell[26147, 724, 365, 11, 96, "Input"],
Cell[26515, 737, 120, 2, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26672, 744, 326, 7, 96, "Input"],
Cell[27001, 753, 6441, 179, 837, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33479, 937, 1109, 30, 154, "Input"],
Cell[34591, 969, 1718, 53, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36346, 1027, 1024, 24, 154, "Input"],
Cell[37373, 1053, 2911, 88, 361, "Output"]
}, Open  ]],
Cell[40299, 1144, 917, 21, 154, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41265, 1171, 155, 2, 204, "Subchapter"],
Cell[41423, 1175, 727, 16, 154, "Input"],
Cell[42153, 1193, 2118, 34, 154, "Input"],
Cell[CellGroupData[{
Cell[44296, 1231, 1932, 47, 267, "Input"],
Cell[46231, 1280, 540, 11, 76, "Message"],
Cell[46774, 1293, 56391, 1101, 589, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103202, 2399, 766, 16, 154, "Input"],
Cell[103971, 2417, 159303, 2713, 751, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263311, 5135, 2801, 64, 379, "Input"],
Cell[266115, 5201, 4159, 96, 549, "Output"],
Cell[270277, 5299, 58816, 1141, 589, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329130, 6445, 914, 22, 154, "Input"],
Cell[330047, 6469, 276094, 4641, 825, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[606202, 11117, 100, 1, 216, "Chapter"],
Cell[606305, 11120, 1390, 33, 211, "Input"],
Cell[607698, 11155, 128, 2, 96, "Input"],
Cell[CellGroupData[{
Cell[607851, 11161, 2129, 45, 154, "Input"],
Cell[609983, 11208, 1532, 39, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611552, 11252, 354, 10, 96, "Input"],
Cell[611909, 11264, 196, 3, 96, "Output"]
}, Open  ]],
Cell[612120, 11270, 845, 18, 96, "Input"],
Cell[612968, 11290, 1935, 41, 96, "Input"],
Cell[CellGroupData[{
Cell[614928, 11335, 374, 8, 154, "Input"],
Cell[615305, 11345, 371, 5, 96, "Output"],
Cell[615679, 11352, 1412, 37, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617128, 11394, 626, 12, 96, "Input"],
Cell[617757, 11408, 866, 20, 154, "Output"]
}, Open  ]],
Cell[618638, 11431, 1134, 27, 123, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[619821, 11464, 100, 1, 96, "Title"],
Cell[CellGroupData[{
Cell[619946, 11469, 163, 2, 96, "Chapter"],
Cell[620112, 11473, 1116, 18, 312, "Text"],
Cell[621231, 11493, 3170, 75, 121, "Input"],
Cell[624404, 11570, 3730, 102, 196, "Input"],
Cell[628137, 11674, 2288, 58, 202, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630462, 11737, 118, 1, 97, "Chapter"],
Cell[CellGroupData[{
Cell[630605, 11742, 101, 1, 92, "Subchapter"],
Cell[630709, 11745, 464, 10, 46, "Input"],
Cell[631176, 11757, 1119, 23, 46, "Input"],
Cell[CellGroupData[{
Cell[632320, 11784, 1126, 22, 72, "Input"],
Cell[633449, 11808, 1994, 43, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635480, 11856, 1396, 31, 139, "Input"],
Cell[636879, 11889, 916, 23, 69, "Output"]
}, Open  ]],
Cell[637810, 11915, 3392, 87, 179, "Text"],
Cell[641205, 12004, 1995, 49, 200, "Input"],
Cell[CellGroupData[{
Cell[643225, 12057, 1075, 20, 94, "Input"],
Cell[644303, 12079, 1919, 44, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[646259, 12128, 1214, 29, 139, "Input"],
Cell[647476, 12159, 769, 22, 69, "Output"]
}, Open  ]],
Cell[648260, 12184, 2201, 63, 138, "Text"],
Cell[650464, 12249, 444, 12, 43, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650945, 12266, 171, 2, 91, "Subchapter"],
Cell[CellGroupData[{
Cell[651141, 12272, 695, 17, 69, "Input"],
Cell[651839, 12291, 2444, 74, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654320, 12370, 128, 2, 43, "Input"],
Cell[654451, 12374, 2715, 81, 134, "Output"]
}, Open  ]],
Cell[657181, 12458, 304, 7, 43, "Input"],
Cell[657488, 12467, 108, 1, 46, "Text"],
Cell[657599, 12470, 573, 13, 43, "Input"],
Cell[658175, 12485, 154, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[658354, 12491, 149, 3, 43, "Input"],
Cell[658506, 12496, 894, 26, 67, "Output"]
}, Open  ]],
Cell[659415, 12525, 5083, 144, 448, "Text"],
Cell[664501, 12671, 186, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[664712, 12679, 958, 22, 82, "Input"],
Cell[665673, 12703, 148, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665858, 12710, 149, 3, 43, "Input"],
Cell[666010, 12715, 1111, 32, 119, "Output"]
}, Open  ]],
Cell[667136, 12750, 189, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[667350, 12756, 745, 16, 69, "Input"],
Cell[668098, 12774, 151, 2, 43, "Output"]
}, Open  ]],
Cell[668264, 12779, 131, 2, 46, "Text"],
Cell[668398, 12783, 4538, 112, 433, "Text"],
Cell[672939, 12897, 138, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[673102, 12902, 766, 20, 75, "Input"],
Cell[673871, 12924, 820, 23, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674728, 12952, 1291, 35, 204, "Input"],
Cell[676022, 12989, 690, 18, 65, "Output"]
}, Open  ]],
Cell[676727, 13010, 3655, 104, 372, "Text"],
Cell[CellGroupData[{
Cell[680407, 13118, 1290, 35, 204, "Input"],
Cell[681700, 13155, 678, 19, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682415, 13179, 803, 22, 75, "Input"],
Cell[683221, 13203, 709, 22, 50, "Output"]
}, Open  ]],
Cell[683945, 13228, 185, 4, 46, "Text"],
Cell[684133, 13234, 143, 3, 43, "Input"],
Cell[CellGroupData[{
Cell[684301, 13241, 2043, 50, 150, "Input"],
Cell[686347, 13293, 128446, 2709, 4420, "Output"]
}, Open  ]],
Cell[814808, 16005, 16601, 456, 812, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[831446, 16466, 108, 1, 91, "Subchapter"],
Cell[831557, 16469, 1132, 34, 119, "Input"],
Cell[832692, 16505, 1082, 20, 69, "Input"],
Cell[833777, 16527, 202, 4, 43, "Input"],
Cell[833982, 16533, 618, 18, 43, "Input"],
Cell[834603, 16553, 754, 19, 43, "Input"],
Cell[CellGroupData[{
Cell[835382, 16576, 828, 21, 69, "Input"],
Cell[836213, 16599, 32441, 615, 357, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
